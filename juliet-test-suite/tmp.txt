Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
TAINTING: FormalParmVFGNode ID: 418 Fun[main]ValPN ID: 165
 i32 %0 { 0th arg main  }
TAINTING: StoreVFGNode ID: 283 StorePE: [169<--165]	
   store i32 %0, i32* %4, align 4 {  }
TAINTING: FormalOUTSVFGNode ID: 549 {fun: main}RETMU(61V_2)
pts{170 }

TAINTING: AddrVFGNode ID: 59 AddrPE: [169<--170]	
   %4 = alloca i32, align 4 {  }
TAINTING: FormalParmVFGNode ID: 419 Fun[main]ValPN ID: 166
 i8** %1 { 1st arg main  }
TAINTING: StoreVFGNode ID: 284 StorePE: [171<--166]	
   store i8** %1, i8*** %5, align 8 {  }
TAINTING: FormalOUTSVFGNode ID: 550 {fun: main}RETMU(63V_2)
pts{172 }

TAINTING: AddrVFGNode ID: 60 AddrPE: [171<--172]	
   %5 = alloca i8**, align 8 {  }
Function = __isoc99_sscanf
TAINTING: GepVFGNode ID: 193 VariantGepPE: [490<--487]	
   %50 = getelementptr inbounds i8, i8* %47, i64 %49 {  }
TAINTING: ActualParmVFGNode ID: 350 CS[{  }]ValPN ID: 490
   %50 = getelementptr inbounds i8, i8* %47, i64 %49 {  }
TAINTING: AddrVFGNode ID: 102 AddrPE: [435<--436]	
   %8 = alloca i32, align 4 {  }
TAINTING: LoadVFGNode ID: 245 LoadPE: [495<--435]	
   %53 = load i32, i32* %8, align 4 {  }
TAINTING: ActualParmVFGNode ID: 352 CS[{  }]ValPN ID: 435
   %8 = alloca i32, align 4 {  }
TAINTING: CopyVFGNode ID: 155 CopyPE: [496<--495]	
   %54 = trunc i32 %53 to i8 {  }
TAINTING: StoreVFGNode ID: 309 StorePE: [499<--496]	
   store i8 %54, i8* %57, align 1 {  }
TAINTING: GepVFGNode ID: 194 VariantGepPE: [499<--497]	
   %57 = getelementptr inbounds i8, i8* %55, i64 %56 {  }
Function = fgets
TAINTING: GepVFGNode ID: 179 NormalGepPE: [82<--68]	
   %5 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 0 {  }
TAINTING: CopyVFGNode ID: 139 CopyPE: [84<--82]	
   %7 = call i8* @fgets(i8* %5, i32 14, %struct._IO_FILE* %6) {  }
TAINTING: ActualParmVFGNode ID: 357 CS[{  }]ValPN ID: 82
   %5 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 0 {  }
TAINTING: CmpVFGNode ID: 490 PAGEdge: [88 = cmp(3, 84, )]
    %8 = icmp ne i8* %7, null {  }
TAINTING: UnaryOPVFGNode ID: 473 PAGEdge: [89 = Unary(88, )]	    br i1 %8, label %9, label %12 {  }
TAINTING: AddrVFGNode ID: 47 AddrPE: [68<--69]	
   %3 = alloca [14 x i8], align 1 {  }
TAINTING: CopyVFGNode ID: 138 CopyPE: [75<--68]	
   %4 = bitcast [14 x i8]* %3 to i8* {  }
TAINTING: GepVFGNode ID: 180 NormalGepPE: [90<--68]	
   %10 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 0 {  }
TAINTING: ActualParmVFGNode ID: 346 CS[{  }]ValPN ID: 75
   %4 = bitcast [14 x i8]* %3 to i8* {  }
TAINTING: ActualParmVFGNode ID: 345 CS[{  }]ValPN ID: 90
   %10 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 0 {  }
TAINTING: LoadVFGNode ID: 199 LoadPE: [83<--4]	
   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8 {  }
TAINTING: ActualParmVFGNode ID: 359 CS[{  }]ValPN ID: 83
   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8 {  }
TAINTING: AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8 { Glob  }
ALL_SVFG: ActualINSVFGNode ID: 583 at callsite:   call void @CWE124_Buffer_Underwrite__CWE839_fgets_44_bad() {fun: main}CSMU(42V_1)
pts{5 }
CS[{  }]
ALL_SVFG: FormalOUTSVFGNode ID: 582 {fun: printSizeTLine}RETMU(48V_2)
pts{293 }

ALL_SVFG: FormalOUTSVFGNode ID: 581 {fun: printLongLine}RETMU(73V_2)
pts{271 }

ALL_SVFG: FormalOUTSVFGNode ID: 580 {fun: decodeHexWChars}RETMU(4V_2)
pts{521 }

ALL_SVFG: FormalOUTSVFGNode ID: 579 {fun: decodeHexWChars}RETMU(2V_2)
pts{519 }

ALL_SVFG: FormalOUTSVFGNode ID: 578 {fun: decodeHexWChars}RETMU(8V_3)
pts{525 }

ALL_SVFG: FormalOUTSVFGNode ID: 577 {fun: decodeHexWChars}RETMU(6V_2)
pts{523 }

ALL_SVFG: FormalOUTSVFGNode ID: 576 {fun: decodeHexWChars}RETMU(10V_1)
pts{527 }

ALL_SVFG: FormalOUTSVFGNode ID: 575 {fun: printIntLine}RETMU(34V_2)
pts{236 }

ALL_SVFG: FormalOUTSVFGNode ID: 574 {fun: decodeHexChars}RETMU(18V_3)
pts{434 }

ALL_SVFG: FormalOUTSVFGNode ID: 573 {fun: decodeHexChars}RETMU(22V_1)
pts{448 }

ALL_SVFG: FormalOUTSVFGNode ID: 572 {fun: decodeHexChars}RETMU(16V_2)
pts{432 }

ALL_SVFG: FormalOUTSVFGNode ID: 571 {fun: decodeHexChars}RETMU(20V_1)
pts{436 }

ALL_SVFG: FormalOUTSVFGNode ID: 570 {fun: decodeHexChars}RETMU(12V_2)
pts{428 }

ALL_SVFG: FormalOUTSVFGNode ID: 569 {fun: decodeHexChars}RETMU(14V_2)
pts{430 }

ALL_SVFG: FormalOUTSVFGNode ID: 568 {fun: decodeHexChars}RETMU(24V_1)
pts{468 }

ALL_SVFG: FormalOUTSVFGNode ID: 567 {fun: printBytesLine}RETMU(28V_2)
pts{387 }

ALL_SVFG: FormalOUTSVFGNode ID: 566 {fun: printBytesLine}RETMU(26V_2)
pts{385 }

ALL_SVFG: FormalOUTSVFGNode ID: 565 {fun: printBytesLine}RETMU(30V_3)
pts{389 }

ALL_SVFG: FormalOUTSVFGNode ID: 564 {fun: printStructLine}RETMU(32V_2)
pts{368 }

ALL_SVFG: FormalOUTSVFGNode ID: 563 {fun: printHexCharLine}RETMU(65V_2)
pts{304 }

ALL_SVFG: FormalOUTSVFGNode ID: 562 {fun: printWcharLine}RETMU(36V_2)
pts{316 }

ALL_SVFG: FormalOUTSVFGNode ID: 561 {fun: printWcharLine}RETMU(38V_3)
pts{318 }

ALL_SVFG: FormalOUTSVFGNode ID: 560 {fun: printWLine}RETMU(40V_2)
pts{217 }

ALL_SVFG: FormalOUTSVFGNode ID: 559 {fun: CWE124_Buffer_Underwrite__CWE839_fgets_44_bad}RETMU(44V_4)
pts{65 }

ALL_SVFG: FormalOUTSVFGNode ID: 558 {fun: CWE124_Buffer_Underwrite__CWE839_fgets_44_bad}RETMU(42V_1)
pts{5 }

ALL_SVFG: FormalOUTSVFGNode ID: 557 {fun: CWE124_Buffer_Underwrite__CWE839_fgets_44_bad}RETMU(46V_2)
pts{67 }

ALL_SVFG: FormalOUTSVFGNode ID: 556 {fun: printLine}RETMU(50V_2)
pts{196 }

ALL_SVFG: FormalOUTSVFGNode ID: 555 {fun: printShortLine}RETMU(52V_2)
pts{247 }

ALL_SVFG: FormalOUTSVFGNode ID: 554 {fun: printUnsignedLine}RETMU(54V_2)
pts{334 }

ALL_SVFG: FormalOUTSVFGNode ID: 553 {fun: printDoubleLine}RETMU(56V_2)
pts{357 }

ALL_SVFG: FormalOUTSVFGNode ID: 552 {fun: main}RETMU(59V_2)
pts{168 }

ALL_SVFG: FormalOUTSVFGNode ID: 551 {fun: main}RETMU(42V_1)
pts{5 }

ALL_SVFG: FormalOUTSVFGNode ID: 550 {fun: main}RETMU(63V_2)
pts{172 }

ALL_SVFG: FormalOUTSVFGNode ID: 549 {fun: main}RETMU(61V_2)
pts{170 }

ALL_SVFG: FormalOUTSVFGNode ID: 548 {fun: badSink}RETMU(69V_5)
pts{111 }

ALL_SVFG: FormalOUTSVFGNode ID: 547 {fun: badSink}RETMU(67V_2)
pts{109 }

ALL_SVFG: FormalOUTSVFGNode ID: 546 {fun: badSink}RETMU(71V_3)
pts{113 }

ALL_SVFG: FormalOUTSVFGNode ID: 545 {fun: printHexUnsignedCharLine}RETMU(77V_2)
pts{345 }

ALL_SVFG: FormalOUTSVFGNode ID: 544 {fun: printFloatLine}RETMU(75V_2)
pts{259 }

ALL_SVFG: FormalOUTSVFGNode ID: 543 {fun: printLongLongLine}RETMU(79V_2)
pts{282 }

ALL_SVFG: FormalINSVFGNode ID: 542 {fun: printLongLongLine}79V_1 = ENCHI(MR_79V_0)
pts{282 }

ALL_SVFG: FormalINSVFGNode ID: 541 {fun: printHexUnsignedCharLine}77V_1 = ENCHI(MR_77V_0)
pts{345 }

ALL_SVFG: FormalINSVFGNode ID: 540 {fun: printFloatLine}75V_1 = ENCHI(MR_75V_0)
pts{259 }

ALL_SVFG: FormalINSVFGNode ID: 539 {fun: printLongLine}73V_1 = ENCHI(MR_73V_0)
pts{271 }

ALL_SVFG: FormalINSVFGNode ID: 538 {fun: badSink}69V_1 = ENCHI(MR_69V_0)
pts{111 }

ALL_SVFG: FormalINSVFGNode ID: 537 {fun: badSink}67V_1 = ENCHI(MR_67V_0)
pts{109 }

ALL_SVFG: FormalINSVFGNode ID: 536 {fun: badSink}71V_1 = ENCHI(MR_71V_0)
pts{113 }

ALL_SVFG: FormalINSVFGNode ID: 535 {fun: printHexCharLine}65V_1 = ENCHI(MR_65V_0)
pts{304 }

ALL_SVFG: FormalINSVFGNode ID: 534 {fun: main}59V_1 = ENCHI(MR_59V_0)
pts{168 }

ALL_SVFG: FormalINSVFGNode ID: 533 {fun: main}61V_1 = ENCHI(MR_61V_0)
pts{170 }

ALL_SVFG: FormalINSVFGNode ID: 532 {fun: main}63V_1 = ENCHI(MR_63V_0)
pts{172 }

ALL_SVFG: FormalINSVFGNode ID: 531 {fun: main}42V_1 = ENCHI(MR_42V_0)
pts{5 }

ALL_SVFG: FormalINSVFGNode ID: 530 {fun: printDoubleLine}56V_1 = ENCHI(MR_56V_0)
pts{357 }

ALL_SVFG: FormalINSVFGNode ID: 529 {fun: printUnsignedLine}54V_1 = ENCHI(MR_54V_0)
pts{334 }

ALL_SVFG: FormalINSVFGNode ID: 528 {fun: printShortLine}52V_1 = ENCHI(MR_52V_0)
pts{247 }

ALL_SVFG: FormalINSVFGNode ID: 527 {fun: printLine}50V_1 = ENCHI(MR_50V_0)
pts{196 }

ALL_SVFG: FormalINSVFGNode ID: 526 {fun: printSizeTLine}48V_1 = ENCHI(MR_48V_0)
pts{293 }

ALL_SVFG: FormalINSVFGNode ID: 525 {fun: CWE124_Buffer_Underwrite__CWE839_fgets_44_bad}44V_1 = ENCHI(MR_44V_0)
pts{65 }

ALL_SVFG: FormalINSVFGNode ID: 524 {fun: CWE124_Buffer_Underwrite__CWE839_fgets_44_bad}42V_1 = ENCHI(MR_42V_0)
pts{5 }

ALL_SVFG: FormalINSVFGNode ID: 523 {fun: CWE124_Buffer_Underwrite__CWE839_fgets_44_bad}46V_1 = ENCHI(MR_46V_0)
pts{67 }

ALL_SVFG: FormalINSVFGNode ID: 522 {fun: printWLine}40V_1 = ENCHI(MR_40V_0)
pts{217 }

ALL_SVFG: FormalINSVFGNode ID: 521 {fun: printWcharLine}36V_1 = ENCHI(MR_36V_0)
pts{316 }

ALL_SVFG: FormalINSVFGNode ID: 520 {fun: printWcharLine}38V_1 = ENCHI(MR_38V_0)
pts{318 }

ALL_SVFG: FormalINSVFGNode ID: 519 {fun: printIntLine}34V_1 = ENCHI(MR_34V_0)
pts{236 }

ALL_SVFG: FormalINSVFGNode ID: 518 {fun: printStructLine}32V_1 = ENCHI(MR_32V_0)
pts{368 }

ALL_SVFG: FormalINSVFGNode ID: 517 {fun: printBytesLine}28V_1 = ENCHI(MR_28V_0)
pts{387 }

ALL_SVFG: FormalINSVFGNode ID: 516 {fun: printBytesLine}26V_1 = ENCHI(MR_26V_0)
pts{385 }

ALL_SVFG: FormalINSVFGNode ID: 515 {fun: printBytesLine}30V_1 = ENCHI(MR_30V_0)
pts{389 }

ALL_SVFG: FormalINSVFGNode ID: 514 {fun: decodeHexChars}22V_1 = ENCHI(MR_22V_0)
pts{448 }

ALL_SVFG: FormalINSVFGNode ID: 513 {fun: decodeHexChars}20V_1 = ENCHI(MR_20V_0)
pts{436 }

ALL_SVFG: FormalINSVFGNode ID: 512 {fun: decodeHexChars}18V_1 = ENCHI(MR_18V_0)
pts{434 }

ALL_SVFG: FormalINSVFGNode ID: 511 {fun: decodeHexChars}16V_1 = ENCHI(MR_16V_0)
pts{432 }

ALL_SVFG: FormalINSVFGNode ID: 510 {fun: decodeHexChars}12V_1 = ENCHI(MR_12V_0)
pts{428 }

ALL_SVFG: FormalINSVFGNode ID: 509 {fun: decodeHexChars}14V_1 = ENCHI(MR_14V_0)
pts{430 }

ALL_SVFG: FormalINSVFGNode ID: 508 {fun: decodeHexChars}24V_1 = ENCHI(MR_24V_0)
pts{468 }

ALL_SVFG: FormalINSVFGNode ID: 507 {fun: decodeHexWChars}4V_1 = ENCHI(MR_4V_0)
pts{521 }

ALL_SVFG: FormalINSVFGNode ID: 506 {fun: decodeHexWChars}2V_1 = ENCHI(MR_2V_0)
pts{519 }

ALL_SVFG: FormalINSVFGNode ID: 505 {fun: decodeHexWChars}6V_1 = ENCHI(MR_6V_0)
pts{523 }

ALL_SVFG: FormalINSVFGNode ID: 504 {fun: decodeHexWChars}8V_1 = ENCHI(MR_8V_0)
pts{525 }

ALL_SVFG: FormalINSVFGNode ID: 503 {fun: decodeHexWChars}10V_1 = ENCHI(MR_10V_0)
pts{527 }

ALL_SVFG: IntraMSSAPHISVFGNode ID: 502 {fun: badSink}MSSAPHISVFGNode ID: 502 {fun: badSink}MR_69V_3 = PHI(MR_69V_2, MR_69V_4, )
pts{111 }{  }
ALL_SVFG: IntraMSSAPHISVFGNode ID: 501 {fun: CWE124_Buffer_Underwrite__CWE839_fgets_44_bad}MSSAPHISVFGNode ID: 501 {fun: CWE124_Buffer_Underwrite__CWE839_fgets_44_bad}MR_44V_4 = PHI(MR_44V_3, MR_44V_2, )
pts{65 }{  }
ALL_SVFG: IntraMSSAPHISVFGNode ID: 500 {fun: printBytesLine}MSSAPHISVFGNode ID: 500 {fun: printBytesLine}MR_30V_3 = PHI(MR_30V_2, MR_30V_4, )
pts{389 }{  }
ALL_SVFG: IntraMSSAPHISVFGNode ID: 499 {fun: decodeHexWChars}MSSAPHISVFGNode ID: 499 {fun: decodeHexWChars}MR_8V_3 = PHI(MR_8V_2, MR_8V_4, )
pts{525 }{  }
ALL_SVFG: IntraMSSAPHISVFGNode ID: 498 {fun: badSink}MSSAPHISVFGNode ID: 498 {fun: badSink}MR_69V_5 = PHI(MR_69V_3, MR_69V_1, )
pts{111 }{  }
ALL_SVFG: IntraMSSAPHISVFGNode ID: 497 {fun: badSink}MSSAPHISVFGNode ID: 497 {fun: badSink}MR_71V_3 = PHI(MR_71V_2, MR_71V_1, )
pts{113 }{  }
ALL_SVFG: IntraMSSAPHISVFGNode ID: 496 {fun: decodeHexChars}MSSAPHISVFGNode ID: 496 {fun: decodeHexChars}MR_18V_3 = PHI(MR_18V_2, MR_18V_4, )
pts{434 }{  }
ALL_SVFG: CmpVFGNode ID: 495 PAGEdge: [220 = cmp(3, 219, )]
    %4 = icmp ne i32* %3, null {  }
ALL_SVFG: CmpVFGNode ID: 494 PAGEdge: [398 = cmp(397, 396, )]
    %9 = icmp ult i64 %7, %8 {  }
ALL_SVFG: CmpVFGNode ID: 493 PAGEdge: [546 = cmp(17, 543, )]
    %20 = icmp ne i32 %19, 0 {  }
ALL_SVFG: CmpVFGNode ID: 492 PAGEdge: [199 = cmp(3, 198, )]
    %4 = icmp ne i8* %3, null {  }
ALL_SVFG: CmpVFGNode ID: 491 PAGEdge: [130 = cmp(120, 129, )]
    %14 = icmp slt i32 %13, 10 {  }
ALL_SVFG: CmpVFGNode ID: 490 PAGEdge: [88 = cmp(3, 84, )]
    %8 = icmp ne i8* %7, null {  }
ALL_SVFG: CmpVFGNode ID: 489 PAGEdge: [119 = cmp(120, 118, )]
    %7 = icmp slt i32 %6, 10 {  }
ALL_SVFG: CmpVFGNode ID: 488 PAGEdge: [445 = cmp(444, 443, )]
    %12 = icmp ult i64 %10, %11 {  }
ALL_SVFG: CmpVFGNode ID: 487 PAGEdge: [465 = cmp(17, 463, )]
    %27 = icmp ne i32 %26, 0 {  }
ALL_SVFG: CmpVFGNode ID: 486 PAGEdge: [482 = cmp(17, 481, )]
    %43 = icmp ne i32 %42, 0 {  }
ALL_SVFG: CmpVFGNode ID: 485 PAGEdge: [536 = cmp(535, 534, )]
    %12 = icmp ult i64 %10, %11 {  }
ALL_SVFG: CmpVFGNode ID: 484 PAGEdge: [555 = cmp(17, 554, )]
    %29 = icmp ne i32 %28, 0 {  }
ALL_SVFG: UnaryOPVFGNode ID: 483 PAGEdge: [399 = Unary(398, )]	    br i1 %9, label %10, label %21 {  }
ALL_SVFG: UnaryOPVFGNode ID: 482 PAGEdge: [131 = Unary(130, )]	    br i1 %14, label %15, label %23 {  }
ALL_SVFG: UnaryOPVFGNode ID: 481 PAGEdge: [227 = Unary(3, )]	    br label %9 {  }
ALL_SVFG: UnaryOPVFGNode ID: 480 PAGEdge: [95 = Unary(3, )]	    br label %14 {  }
ALL_SVFG: UnaryOPVFGNode ID: 479 PAGEdge: [221 = Unary(220, )]	    br i1 %4, label %5, label %9 {  }
ALL_SVFG: UnaryOPVFGNode ID: 478 PAGEdge: [200 = Unary(199, )]	    br i1 %4, label %5, label %9 {  }
ALL_SVFG: UnaryOPVFGNode ID: 477 PAGEdge: [149 = Unary(3, )]	    br label %26 {  }
ALL_SVFG: UnaryOPVFGNode ID: 476 PAGEdge: [145 = Unary(3, )]	    br label %26 {  }
ALL_SVFG: UnaryOPVFGNode ID: 475 PAGEdge: [144 = Unary(3, )]	    br label %12, !llvm.loop !2 {  }
ALL_SVFG: UnaryOPVFGNode ID: 474 PAGEdge: [394 = Unary(3, )]	    br label %6 {  }
ALL_SVFG: UnaryOPVFGNode ID: 473 PAGEdge: [89 = Unary(88, )]	    br i1 %8, label %9, label %12 {  }
ALL_SVFG: UnaryOPVFGNode ID: 472 PAGEdge: [101 = Unary(3, )]	    br label %14 {  }
ALL_SVFG: UnaryOPVFGNode ID: 471 PAGEdge: [413 = Unary(3, )]	    br label %6, !llvm.loop !2 {  }
ALL_SVFG: UnaryOPVFGNode ID: 470 PAGEdge: [547 = Unary(546, )]	    br i1 %20, label %21, label %30 {  }
ALL_SVFG: UnaryOPVFGNode ID: 469 PAGEdge: [206 = Unary(3, )]	    br label %9 {  }
ALL_SVFG: UnaryOPVFGNode ID: 468 PAGEdge: [556 = Unary(3, )]	    br label %30 {  }
ALL_SVFG: UnaryOPVFGNode ID: 467 PAGEdge: [139 = Unary(3, )]	    br label %20 {  }
ALL_SVFG: UnaryOPVFGNode ID: 466 PAGEdge: [121 = Unary(119, )]	    br i1 %7, label %8, label %24 {  }
ALL_SVFG: UnaryOPVFGNode ID: 465 PAGEdge: [446 = Unary(445, )]	    br i1 %12, label %13, label %44 {  }
ALL_SVFG: UnaryOPVFGNode ID: 464 PAGEdge: [127 = Unary(3, )]	    br label %12 {  }
ALL_SVFG: UnaryOPVFGNode ID: 463 PAGEdge: [407 = Unary(3, )]	    br label %18 {  }
ALL_SVFG: UnaryOPVFGNode ID: 462 PAGEdge: [441 = Unary(3, )]	    br label %9 {  }
ALL_SVFG: UnaryOPVFGNode ID: 461 PAGEdge: [466 = Unary(465, )]	    br i1 %27, label %28, label %44 {  }
ALL_SVFG: UnaryOPVFGNode ID: 460 PAGEdge: [483 = Unary(3, )]	    br label %44 {  }
ALL_SVFG: UnaryOPVFGNode ID: 459 PAGEdge: [486 = Unary(485, )]	    br i1 %45, label %46, label %60 {  }
ALL_SVFG: UnaryOPVFGNode ID: 458 PAGEdge: [577 = Unary(3, )]	    br label %9, !llvm.loop !2 {  }
ALL_SVFG: UnaryOPVFGNode ID: 457 PAGEdge: [504 = Unary(3, )]	    br label %9, !llvm.loop !2 {  }
ALL_SVFG: UnaryOPVFGNode ID: 456 PAGEdge: [532 = Unary(3, )]	    br label %9 {  }
ALL_SVFG: UnaryOPVFGNode ID: 455 PAGEdge: [537 = Unary(536, )]	    br i1 %12, label %13, label %30 {  }
ALL_SVFG: UnaryOPVFGNode ID: 454 PAGEdge: [559 = Unary(558, )]	    br i1 %31, label %32, label %46 {  }
ALL_SVFG: BinaryOPVFGNode ID: 453 PAGEdge: [473 = Binary(411, 472, )]	    %34 = add i64 %33, 1 {  }
ALL_SVFG: BinaryOPVFGNode ID: 452 PAGEdge: [454 = Binary(453, 455, )]	    %18 = mul i64 2, %17 {  }
ALL_SVFG: BinaryOPVFGNode ID: 451 PAGEdge: [142 = Binary(15, 141, )]	    %22 = add nsw i32 %21, 1 {  }
ALL_SVFG: BinaryOPVFGNode ID: 450 PAGEdge: [472 = Binary(471, 455, )]	    %33 = mul i64 2, %32 {  }
ALL_SVFG: BinaryOPVFGNode ID: 449 PAGEdge: [575 = Binary(411, 574, )]	    %45 = add i64 %44, 1 {  }
ALL_SVFG: BinaryOPVFGNode ID: 448 PAGEdge: [463 = Binary(464, 462, )]	    %26 = and i32 %25, 4096 {  }
ALL_SVFG: BinaryOPVFGNode ID: 447 PAGEdge: [410 = Binary(411, 409, )]	    %20 = add i64 %19, 1 {  }
ALL_SVFG: BinaryOPVFGNode ID: 446 PAGEdge: [481 = Binary(464, 480, )]	    %42 = and i32 %41, 4096 {  }
ALL_SVFG: BinaryOPVFGNode ID: 445 PAGEdge: [502 = Binary(411, 501, )]	    %59 = add i64 %58, 1 {  }
ALL_SVFG: BinaryOPVFGNode ID: 444 PAGEdge: [489 = Binary(488, 455, )]	    %49 = mul i64 2, %48 {  }
ALL_SVFG: BinaryOPVFGNode ID: 443 PAGEdge: [540 = Binary(539, 455, )]	    %16 = mul i64 2, %15 {  }
ALL_SVFG: BinaryOPVFGNode ID: 442 PAGEdge: [550 = Binary(549, 455, )]	    %24 = mul i64 2, %23 {  }
ALL_SVFG: BinaryOPVFGNode ID: 441 PAGEdge: [551 = Binary(411, 550, )]	    %25 = add i64 %24, 1 {  }
ALL_SVFG: BinaryOPVFGNode ID: 440 PAGEdge: [562 = Binary(561, 455, )]	    %35 = mul i64 2, %34 {  }
ALL_SVFG: BinaryOPVFGNode ID: 439 PAGEdge: [600 = Binary(601, 597, )]	    %2 = srem i32 %1, 2 {  }
ALL_SVFG: IntraPHIVFGNode ID: 438 PAGEdge: [588 = PHI(15, )]	  globalReturnsTrue {  }
ALL_SVFG: IntraPHIVFGNode ID: 437 PAGEdge: [514 = PHI(578, )]	  decodeHexWChars {  }
ALL_SVFG: IntraPHIVFGNode ID: 436 PAGEdge: [558 = PHI(555, 79, 79, )]	    %31 = phi i1 [ false, %13 ], [ false, %9 ], [ %29, %21 ] {  }
ALL_SVFG: IntraPHIVFGNode ID: 435 PAGEdge: [164 = PHI(17, )]	  main {  }
ALL_SVFG: IntraPHIVFGNode ID: 434 PAGEdge: [423 = PHI(505, )]	  decodeHexChars {  }
ALL_SVFG: IntraPHIVFGNode ID: 433 PAGEdge: [485 = PHI(482, 79, 79, )]	    %45 = phi i1 [ false, %13 ], [ false, %9 ], [ %43, %28 ] {  }
ALL_SVFG: IntraPHIVFGNode ID: 432 PAGEdge: [592 = PHI(17, )]	  globalReturnsFalse {  }
ALL_SVFG: IntraPHIVFGNode ID: 431 PAGEdge: [596 = PHI(600, )]	  globalReturnsTrueOrFalse {  }
ALL_SVFG: FormalRetVFGNode ID: 430 Fun[decodeHexChars]RetPN ID: 423 unique return node for function decodeHexChars
ALL_SVFG: FormalRetVFGNode ID: 429 Fun[decodeHexWChars]RetPN ID: 514 unique return node for function decodeHexWChars
ALL_SVFG: FormalRetVFGNode ID: 428 Fun[globalReturnsTrue]RetPN ID: 588 unique return node for function globalReturnsTrue
ALL_SVFG: FormalRetVFGNode ID: 427 Fun[globalReturnsTrueOrFalse]RetPN ID: 596 unique return node for function globalReturnsTrueOrFalse
ALL_SVFG: FormalRetVFGNode ID: 426 Fun[main]RetPN ID: 164 unique return node for function main
ALL_SVFG: FormalRetVFGNode ID: 425 Fun[globalReturnsFalse]RetPN ID: 592 unique return node for function globalReturnsFalse
ALL_SVFG: FormalParmVFGNode ID: 424 Fun[printLongLongLine]ValPN ID: 280
 i64 %0 { 0th arg printLongLongLine  }
ALL_SVFG: FormalParmVFGNode ID: 423 Fun[printStructLine]ValPN ID: 366
 %struct._twoIntsStruct* %0 { 0th arg printStructLine  }
ALL_SVFG: FormalParmVFGNode ID: 422 Fun[printHexUnsignedCharLine]ValPN ID: 343
 i8 %0 { 0th arg printHexUnsignedCharLine  }
ALL_SVFG: FormalParmVFGNode ID: 421 Fun[printFloatLine]ValPN ID: 257
 float %0 { 0th arg printFloatLine  }
ALL_SVFG: FormalParmVFGNode ID: 420 Fun[printHexCharLine]ValPN ID: 302
 i8 %0 { 0th arg printHexCharLine  }
ALL_SVFG: FormalParmVFGNode ID: 419 Fun[main]ValPN ID: 166
 i8** %1 { 1st arg main  }
ALL_SVFG: FormalParmVFGNode ID: 418 Fun[main]ValPN ID: 165
 i32 %0 { 0th arg main  }
ALL_SVFG: FormalParmVFGNode ID: 417 Fun[printLongLine]ValPN ID: 269
 i64 %0 { 0th arg printLongLine  }
ALL_SVFG: FormalParmVFGNode ID: 416 Fun[badSink]ValPN ID: 107
 i32 %0 { 0th arg badSink  }
ALL_SVFG: FormalParmVFGNode ID: 415 Fun[printSizeTLine]ValPN ID: 291
 i64 %0 { 0th arg printSizeTLine  }
ALL_SVFG: FormalParmVFGNode ID: 414 Fun[printWLine]ValPN ID: 215
 i32* %0 { 0th arg printWLine  }
ALL_SVFG: FormalParmVFGNode ID: 413 Fun[printWcharLine]ValPN ID: 314
 i32 %0 { 0th arg printWcharLine  }
ALL_SVFG: FormalParmVFGNode ID: 412 Fun[printIntLine]ValPN ID: 234
 i32 %0 { 0th arg printIntLine  }
ALL_SVFG: FormalParmVFGNode ID: 411 Fun[printDoubleLine]ValPN ID: 355
 double %0 { 0th arg printDoubleLine  }
ALL_SVFG: FormalParmVFGNode ID: 410 Fun[printUnsignedLine]ValPN ID: 332
 i32 %0 { 0th arg printUnsignedLine  }
ALL_SVFG: FormalParmVFGNode ID: 409 Fun[printLine]ValPN ID: 194
 i8* %0 { 0th arg printLine  }
ALL_SVFG: FormalParmVFGNode ID: 408 Fun[printShortLine]ValPN ID: 245
 i16 %0 { 0th arg printShortLine  }
ALL_SVFG: FormalParmVFGNode ID: 407 Fun[printBytesLine]ValPN ID: 383
 i64 %1 { 1st arg printBytesLine  }
ALL_SVFG: FormalParmVFGNode ID: 406 Fun[printBytesLine]ValPN ID: 382
 i8* %0 { 0th arg printBytesLine  }
ALL_SVFG: FormalParmVFGNode ID: 405 Fun[decodeHexChars]ValPN ID: 426
 i8* %2 { 2nd arg decodeHexChars  }
ALL_SVFG: FormalParmVFGNode ID: 404 Fun[decodeHexChars]ValPN ID: 425
 i64 %1 { 1st arg decodeHexChars  }
ALL_SVFG: FormalParmVFGNode ID: 403 Fun[decodeHexChars]ValPN ID: 424
 i8* %0 { 0th arg decodeHexChars  }
ALL_SVFG: FormalParmVFGNode ID: 402 Fun[decodeHexWChars]ValPN ID: 517
 i32* %2 { 2nd arg decodeHexWChars  }
ALL_SVFG: FormalParmVFGNode ID: 401 Fun[decodeHexWChars]ValPN ID: 516
 i64 %1 { 1st arg decodeHexWChars  }
ALL_SVFG: FormalParmVFGNode ID: 400 Fun[decodeHexWChars]ValPN ID: 515
 i8* %0 { 0th arg decodeHexWChars  }
ALL_SVFG: ActualRetVFGNode ID: 399 CS[{  }]ValPN ID: 327
   %9 = call i32 (i8*, ...) @printf(i8* %8, i32* %7) {  }
ALL_SVFG: ActualRetVFGNode ID: 398 CS[{  }]ValPN ID: 309
   %6 = call i32 (i8*, ...) @printf(i8* %5, i32 %4) {  }
ALL_SVFG: ActualRetVFGNode ID: 397 CS[{  }]ValPN ID: 286
   %5 = call i32 (i8*, ...) @printf(i8* %4, i64 %3) {  }
ALL_SVFG: ActualRetVFGNode ID: 396 CS[{  }]ValPN ID: 91
   %11 = call i32 @atoi(i8* %10) #7 {  }
TAINTING: ActualRetVFGNode ID: 396 CS[{  }]ValPN ID: 91
   %11 = call i32 @atoi(i8* %10) #7 {  }
TAINTING: StoreVFGNode ID: 277 StorePE: [64<--91]	
   store i32 %11, i32* %1, align 4 {  }
TAINTING: IntraMSSAPHISVFGNode ID: 501 {fun: CWE124_Buffer_Underwrite__CWE839_fgets_44_bad}MSSAPHISVFGNode ID: 501 {fun: CWE124_Buffer_Underwrite__CWE839_fgets_44_bad}MR_44V_4 = PHI(MR_44V_3, MR_44V_2, )
pts{65 }{  }
TAINTING: AddrVFGNode ID: 45 AddrPE: [64<--65]	
   %1 = alloca i32, align 4 {  }
TAINTING: LoadVFGNode ID: 200 LoadPE: [103<--64]	
   %16 = load i32, i32* %1, align 4 {  }
TAINTING: FormalOUTSVFGNode ID: 559 {fun: CWE124_Buffer_Underwrite__CWE839_fgets_44_bad}RETMU(44V_4)
pts{65 }

TAINTING: StoreVFGNode ID: 276 StorePE: [64<--74]	
   store i32 -1, i32* %1, align 4 {  }
TAINTING: ActualParmVFGNode ID: 354 CS[{  }]ValPN ID: 103
   %16 = load i32, i32* %1, align 4 {  }
ALL_SVFG: ActualRetVFGNode ID: 395 CS[{  }]ValPN ID: 361
   %5 = call i32 (i8*, ...) @printf(i8* %4, double %3) {  }
ALL_SVFG: ActualRetVFGNode ID: 394 CS[{  }]ValPN ID: 350
   %6 = call i32 (i8*, ...) @printf(i8* %5, i32 %4) {  }
ALL_SVFG: ActualRetVFGNode ID: 393 CS[{  }]ValPN ID: 275
   %5 = call i32 (i8*, ...) @printf(i8* %4, i64 %3) {  }
ALL_SVFG: ActualRetVFGNode ID: 392 CS[{  }]ValPN ID: 264
   %6 = call i32 (i8*, ...) @printf(i8* %5, double %4) {  }
ALL_SVFG: ActualRetVFGNode ID: 391 CS[{  }]ValPN ID: 252
   %6 = call i32 (i8*, ...) @printf(i8* %5, i32 %4) {  }
ALL_SVFG: ActualRetVFGNode ID: 390 CS[{  }]ValPN ID: 338
   %5 = call i32 (i8*, ...) @printf(i8* %4, i32 %3) {  }
ALL_SVFG: ActualRetVFGNode ID: 389 CS[{  }]ValPN ID: 240
   %5 = call i32 (i8*, ...) @printf(i8* %4, i32 %3) {  }
ALL_SVFG: ActualRetVFGNode ID: 388 CS[{  }]ValPN ID: 297
   %5 = call i32 (i8*, ...) @printf(i8* %4, i64 %3) {  }
ALL_SVFG: ActualRetVFGNode ID: 387 CS[{  }]ValPN ID: 224
   %8 = call i32 (i32*, ...) @wprintf(i32* %7, i32* %6) {  }
ALL_SVFG: ActualRetVFGNode ID: 386 CS[{  }]ValPN ID: 597
   %1 = call i32 @rand() #7 {  }
ALL_SVFG: ActualRetVFGNode ID: 385 CS[{  }]ValPN ID: 176
   %6 = call i64 @time(i64* null) #7 {  }
ALL_SVFG: ActualRetVFGNode ID: 384 CS[{  }]ValPN ID: 203
   %8 = call i32 (i8*, ...) @printf(i8* %7, i8* %6) {  }
ALL_SVFG: ActualRetVFGNode ID: 383 CS[{  }]ValPN ID: 377
   %10 = call i32 (i8*, ...) @printf(i8* %9, i32 %5, i32 %8) {  }
ALL_SVFG: ActualRetVFGNode ID: 382 CS[{  }]ValPN ID: 406
   %17 = call i32 (i8*, ...) @printf(i8* %16, i32 %15) {  }
ALL_SVFG: ActualRetVFGNode ID: 381 CS[{  }]ValPN ID: 415
   %23 = call i32 @puts(i8* %22) {  }
ALL_SVFG: ActualRetVFGNode ID: 380 CS[{  }]ValPN ID: 492
   %52 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %50, i8* %51, i32* %8) #8 {  }
TAINTING: ActualRetVFGNode ID: 380 CS[{  }]ValPN ID: 492
   %52 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %50, i8* %51, i32* %8) #8 {  }
ALL_SVFG: ActualRetVFGNode ID: 379 CS[{  }]ValPN ID: 543
   %19 = call i32 @iswxdigit(i32 %18) #7 {  }
ALL_SVFG: ActualRetVFGNode ID: 378 CS[{  }]ValPN ID: 554
   %28 = call i32 @iswxdigit(i32 %27) #7 {  }
ALL_SVFG: ActualRetVFGNode ID: 377 CS[{  }]ValPN ID: 565
   %38 = call i32 (i32*, i32*, ...) @__isoc99_swscanf(i32* %36, i32* %37, i32* %8) #7 {  }
ALL_SVFG: ActualParmVFGNode ID: 376 CS[{  }]ValPN ID: 238
   %3 = load i32, i32* %2, align 4 {  }
ALL_SVFG: ActualParmVFGNode ID: 375 CS[{  }]ValPN ID: 239
   %4 = getelementptr [4 x i8], [4 x i8]* @.str.2.8, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 374 CS[{  }]ValPN ID: 79
 i1 false { constant data }
ALL_SVFG: ActualParmVFGNode ID: 373 CS[{  }]ValPN ID: 117
 i64 40 { constant data }
ALL_SVFG: ActualParmVFGNode ID: 372 CS[{  }]ValPN ID: 77
 i8 0 { constant data }
ALL_SVFG: ActualParmVFGNode ID: 371 CS[{  }]ValPN ID: 115
   %5 = bitcast [10 x i32]* %4 to i8* {  }
ALL_SVFG: ActualParmVFGNode ID: 370 CS[{  }]ValPN ID: 201
   %6 = load i8*, i8** %2, align 8 {  }
ALL_SVFG: ActualParmVFGNode ID: 369 CS[{  }]ValPN ID: 202
   %7 = getelementptr [4 x i8], [4 x i8]* @.str.4, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 368 CS[{  }]ValPN ID: 250
   %4 = sext i16 %3 to i32 {  }
ALL_SVFG: ActualParmVFGNode ID: 367 CS[{  }]ValPN ID: 251
   %5 = getelementptr [5 x i8], [5 x i8]* @.str.3.9, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 366 CS[{  }]ValPN ID: 186
   %9 = getelementptr [15 x i8], [15 x i8]* @.str.2, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 365 CS[{  }]ValPN ID: 183
   %8 = getelementptr [17 x i8], [17 x i8]* @.str.1, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 364 CS[{  }]ValPN ID: 404
   %15 = zext i8 %14 to i32 {  }
ALL_SVFG: ActualParmVFGNode ID: 363 CS[{  }]ValPN ID: 405
   %16 = getelementptr [5 x i8], [5 x i8]* @.str.12, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 362 CS[{  }]ValPN ID: 222
   %6 = load i32*, i32** %2, align 8 {  }
ALL_SVFG: ActualParmVFGNode ID: 361 CS[{  }]ValPN ID: 223
   %7 = getelementptr [5 x i32], [5 x i32]* @.str.1.5, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 360 CS[{  }]ValPN ID: 179
   %7 = trunc i64 %6 to i32 {  }
ALL_SVFG: ActualParmVFGNode ID: 359 CS[{  }]ValPN ID: 83
   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8 {  }
ALL_SVFG: ActualParmVFGNode ID: 358 CS[{  }]ValPN ID: 85
 i32 14 { constant data }
ALL_SVFG: ActualParmVFGNode ID: 357 CS[{  }]ValPN ID: 82
   %5 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 356 CS[{  }]DummyValPN ID: 3
ALL_SVFG: ActualParmVFGNode ID: 355 CS[{  }]ValPN ID: 147
   %25 = getelementptr [32 x i8], [32 x i8]* @.str.3, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 354 CS[{  }]ValPN ID: 103
   %16 = load i32, i32* %1, align 4 {  }
ALL_SVFG: ActualParmVFGNode ID: 353 CS[{  }]ValPN ID: 135
   %19 = load i32, i32* %18, align 4 {  }
ALL_SVFG: ActualParmVFGNode ID: 352 CS[{  }]ValPN ID: 435
   %8 = alloca i32, align 4 {  }
ALL_SVFG: ActualParmVFGNode ID: 351 CS[{  }]ValPN ID: 491
   %51 = getelementptr [5 x i8], [5 x i8]* @.str.12, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 350 CS[{  }]ValPN ID: 490
   %50 = getelementptr inbounds i8, i8* %47, i64 %49 {  }
ALL_SVFG: ActualParmVFGNode ID: 349 CS[{  }]ValPN ID: 79
 i1 false { constant data }
ALL_SVFG: ActualParmVFGNode ID: 348 CS[{  }]ValPN ID: 78
 i64 14 { constant data }
ALL_SVFG: ActualParmVFGNode ID: 347 CS[{  }]ValPN ID: 77
 i8 0 { constant data }
ALL_SVFG: ActualParmVFGNode ID: 346 CS[{  }]ValPN ID: 75
   %4 = bitcast [14 x i8]* %3 to i8* {  }
ALL_SVFG: ActualParmVFGNode ID: 345 CS[{  }]ValPN ID: 90
   %10 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 344 CS[{  }]ValPN ID: 336
   %3 = load i32, i32* %2, align 4 {  }
ALL_SVFG: ActualParmVFGNode ID: 343 CS[{  }]ValPN ID: 337
   %4 = getelementptr [4 x i8], [4 x i8]* @.str.9, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 342 CS[{  }]ValPN ID: 97
   %13 = getelementptr [16 x i8], [16 x i8]* @.str, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 341 CS[{  }]ValPN ID: 348
   %4 = zext i8 %3 to i32 {  }
ALL_SVFG: ActualParmVFGNode ID: 340 CS[{  }]ValPN ID: 349
   %5 = getelementptr [6 x i8], [6 x i8]* @.str.7, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 339 CS[{  }]ValPN ID: 359
   %3 = load double, double* %2, align 8 {  }
ALL_SVFG: ActualParmVFGNode ID: 338 CS[{  }]ValPN ID: 360
   %4 = getelementptr [4 x i8], [4 x i8]* @.str.10, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 337 CS[{  }]ValPN ID: 262
   %4 = fpext float %3 to double {  }
ALL_SVFG: ActualParmVFGNode ID: 336 CS[{  }]ValPN ID: 263
   %5 = getelementptr [4 x i8], [4 x i8]* @.str.4.10, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 165 NormalGepPE: [263<--39]	
   %5 = getelementptr [4 x i8], [4 x i8]* @.str.4.10, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 164 NormalGepPE: [251<--37]	
   %5 = getelementptr [5 x i8], [5 x i8]* @.str.3.9, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 163 NormalGepPE: [239<--35]	
   %4 = getelementptr [4 x i8], [4 x i8]* @.str.2.8, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 162 NormalGepPE: [223<--33]	
   %7 = getelementptr [5 x i32], [5 x i32]* @.str.1.5, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 161 NormalGepPE: [202<--31]	
   %7 = getelementptr [4 x i8], [4 x i8]* @.str.4, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 160 NormalGepPE: [186<--12]	
   %9 = getelementptr [15 x i8], [15 x i8]* @.str.2, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 159 NormalGepPE: [183<--10]	
   %8 = getelementptr [17 x i8], [17 x i8]* @.str.1, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 158 NormalGepPE: [147<--8]	
   %25 = getelementptr [32 x i8], [32 x i8]* @.str.3, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 157 NormalGepPE: [97<--6]	
   %13 = getelementptr [16 x i8], [16 x i8]* @.str, i64 0, i64 0 {  }
ALL_SVFG: CopyVFGNode ID: 156 CopyPE: [569<--568]	
   %40 = trunc i32 %39 to i8 {  }
ALL_SVFG: CopyVFGNode ID: 155 CopyPE: [496<--495]	
   %54 = trunc i32 %53 to i8 {  }
ALL_SVFG: CopyVFGNode ID: 154 CopyPE: [480<--479]	
   %41 = zext i16 %40 to i32 {  }
ALL_SVFG: CopyVFGNode ID: 153 CopyPE: [477<--475]	
   %38 = sext i32 %37 to i64 {  }
ALL_SVFG: CopyVFGNode ID: 152 CopyPE: [476<--475]	
   %37 = sext i8 %36 to i32 {  }
ALL_SVFG: CopyVFGNode ID: 151 CopyPE: [462<--461]	
   %25 = zext i16 %24 to i32 {  }
ALL_SVFG: CopyVFGNode ID: 150 CopyPE: [459<--457]	
   %22 = sext i32 %21 to i64 {  }
ALL_SVFG: CopyVFGNode ID: 149 CopyPE: [458<--457]	
   %21 = sext i8 %20 to i32 {  }
ALL_SVFG: CopyVFGNode ID: 148 CopyPE: [404<--403]	
   %15 = zext i8 %14 to i32 {  }
ALL_SVFG: CopyVFGNode ID: 147 CopyPE: [348<--347]	
   %4 = zext i8 %3 to i32 {  }
ALL_SVFG: CopyVFGNode ID: 146 CopyPE: [307<--306]	
   %4 = sext i8 %3 to i32 {  }
ALL_SVFG: CopyVFGNode ID: 145 CopyPE: [262<--261]	
   %4 = fpext float %3 to double {  }
ALL_SVFG: CopyVFGNode ID: 144 CopyPE: [250<--249]	
   %4 = sext i16 %3 to i32 {  }
ALL_SVFG: CopyVFGNode ID: 143 CopyPE: [179<--176]	
   %7 = trunc i64 %6 to i32 {  }
ALL_SVFG: CopyVFGNode ID: 142 CopyPE: [133<--132]	
   %17 = sext i32 %16 to i64 {  }
ALL_SVFG: CopyVFGNode ID: 141 CopyPE: [123<--122]	
   %10 = sext i32 %9 to i64 {  }
ALL_SVFG: CopyVFGNode ID: 140 CopyPE: [115<--112]	
   %5 = bitcast [10 x i32]* %4 to i8* {  }
ALL_SVFG: CopyVFGNode ID: 139 CopyPE: [84<--82]	
   %7 = call i8* @fgets(i8* %5, i32 14, %struct._IO_FILE* %6) {  }
ALL_SVFG: CopyVFGNode ID: 138 CopyPE: [75<--68]	
   %4 = bitcast [14 x i8]* %3 to i8* {  }
ALL_SVFG: CopyVFGNode ID: 137 CopyPE: [2<--3]	
 i8* null { constant data }
ALL_SVFG: AddrVFGNode ID: 136 AddrPE: [672<--673]	
 bad9 {  }
ALL_SVFG: AddrVFGNode ID: 135 AddrPE: [668<--669]	
 bad8 {  }
ALL_SVFG: AddrVFGNode ID: 134 AddrPE: [664<--665]	
 bad7 {  }
ALL_SVFG: AddrVFGNode ID: 133 AddrPE: [660<--661]	
 bad6 {  }
ALL_SVFG: AddrVFGNode ID: 132 AddrPE: [656<--657]	
 bad5 {  }
ALL_SVFG: AddrVFGNode ID: 131 AddrPE: [652<--653]	
 bad4 {  }
ALL_SVFG: AddrVFGNode ID: 130 AddrPE: [648<--649]	
 bad3 {  }
ALL_SVFG: AddrVFGNode ID: 129 AddrPE: [644<--645]	
 bad2 {  }
ALL_SVFG: AddrVFGNode ID: 128 AddrPE: [640<--641]	
 bad1 {  }
ALL_SVFG: AddrVFGNode ID: 127 AddrPE: [636<--637]	
 good9 {  }
ALL_SVFG: AddrVFGNode ID: 126 AddrPE: [632<--633]	
 good8 {  }
ALL_SVFG: AddrVFGNode ID: 125 AddrPE: [628<--629]	
 good7 {  }
ALL_SVFG: AddrVFGNode ID: 124 AddrPE: [624<--625]	
 good6 {  }
ALL_SVFG: AddrVFGNode ID: 123 AddrPE: [620<--621]	
 good5 {  }
ALL_SVFG: AddrVFGNode ID: 122 AddrPE: [616<--617]	
 good4 {  }
ALL_SVFG: AddrVFGNode ID: 121 AddrPE: [612<--613]	
 good3 {  }
ALL_SVFG: AddrVFGNode ID: 120 AddrPE: [608<--609]	
 good2 {  }
ALL_SVFG: AddrVFGNode ID: 119 AddrPE: [604<--605]	
 good1 {  }
ALL_SVFG: AddrVFGNode ID: 118 AddrPE: [598<--599]	
 rand {  }
ALL_SVFG: AddrVFGNode ID: 117 AddrPE: [594<--595]	
 globalReturnsTrueOrFalse {  }
ALL_SVFG: AddrVFGNode ID: 116 AddrPE: [590<--591]	
 globalReturnsFalse {  }
ALL_SVFG: AddrVFGNode ID: 115 AddrPE: [586<--587]	
 globalReturnsTrue {  }
ALL_SVFG: AddrVFGNode ID: 114 AddrPE: [566<--567]	
 __isoc99_swscanf {  }
ALL_SVFG: AddrVFGNode ID: 113 AddrPE: [544<--545]	
 iswxdigit {  }
ALL_SVFG: AddrVFGNode ID: 112 AddrPE: [526<--527]	
   %8 = alloca i32, align 4 {  }
ALL_SVFG: AddrVFGNode ID: 111 AddrPE: [524<--525]	
   %7 = alloca i64, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 110 AddrPE: [522<--523]	
   %6 = alloca i32*, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 109 AddrPE: [520<--521]	
   %5 = alloca i64, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 108 AddrPE: [518<--519]	
   %4 = alloca i8*, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 107 AddrPE: [512<--513]	
 decodeHexWChars {  }
ALL_SVFG: AddrVFGNode ID: 106 AddrPE: [493<--494]	
 __isoc99_sscanf {  }
ALL_SVFG: AddrVFGNode ID: 105 AddrPE: [467<--468]	
   %29 = call i16** @__ctype_b_loc() #7 {  }
ALL_SVFG: AddrVFGNode ID: 104 AddrPE: [449<--450]	
 __ctype_b_loc {  }
ALL_SVFG: AddrVFGNode ID: 103 AddrPE: [447<--448]	
   %14 = call i16** @__ctype_b_loc() #7 {  }
ALL_SVFG: AddrVFGNode ID: 102 AddrPE: [435<--436]	
   %8 = alloca i32, align 4 {  }
ALL_SVFG: AddrVFGNode ID: 101 AddrPE: [433<--434]	
   %7 = alloca i64, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 100 AddrPE: [431<--432]	
   %6 = alloca i8*, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 99 AddrPE: [429<--430]	
   %5 = alloca i64, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 98 AddrPE: [427<--428]	
   %4 = alloca i8*, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 97 AddrPE: [421<--422]	
 decodeHexChars {  }
ALL_SVFG: AddrVFGNode ID: 96 AddrPE: [416<--417]	
 puts {  }
ALL_SVFG: AddrVFGNode ID: 95 AddrPE: [388<--389]	
   %5 = alloca i64, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 94 AddrPE: [386<--387]	
   %4 = alloca i64, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 93 AddrPE: [384<--385]	
   %3 = alloca i8*, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 92 AddrPE: [379<--380]	
 printBytesLine {  }
ALL_SVFG: AddrVFGNode ID: 91 AddrPE: [367<--368]	
   %2 = alloca %struct._twoIntsStruct*, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 90 AddrPE: [363<--364]	
 printStructLine {  }
ALL_SVFG: AddrVFGNode ID: 89 AddrPE: [356<--357]	
   %2 = alloca double, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 88 AddrPE: [352<--353]	
 printDoubleLine {  }
ALL_SVFG: AddrVFGNode ID: 87 AddrPE: [344<--345]	
   %2 = alloca i8, align 1 {  }
ALL_SVFG: AddrVFGNode ID: 86 AddrPE: [340<--341]	
 printHexUnsignedCharLine {  }
ALL_SVFG: AddrVFGNode ID: 85 AddrPE: [333<--334]	
   %2 = alloca i32, align 4 {  }
ALL_SVFG: AddrVFGNode ID: 84 AddrPE: [329<--330]	
 printUnsignedLine {  }
ALL_SVFG: AddrVFGNode ID: 83 AddrPE: [317<--318]	
   %3 = alloca [2 x i32], align 4 {  }
ALL_SVFG: AddrVFGNode ID: 82 AddrPE: [315<--316]	
   %2 = alloca i32, align 4 {  }
ALL_SVFG: AddrVFGNode ID: 81 AddrPE: [311<--312]	
 printWcharLine {  }
ALL_SVFG: AddrVFGNode ID: 80 AddrPE: [303<--304]	
   %2 = alloca i8, align 1 {  }
ALL_SVFG: AddrVFGNode ID: 79 AddrPE: [299<--300]	
 printHexCharLine {  }
ALL_SVFG: AddrVFGNode ID: 78 AddrPE: [292<--293]	
   %2 = alloca i64, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 35 AddrPE: [455<--1]	
 i64 2 { constant data }
ALL_SVFG: AddrVFGNode ID: 34 AddrPE: [411<--1]	
 i64 1 { constant data }
ALL_SVFG: AddrVFGNode ID: 33 AddrPE: [393<--1]	
 i64 0 { constant data }
ALL_SVFG: AddrVFGNode ID: 32 AddrPE: [120<--1]	
 i32 10 { constant data }
ALL_SVFG: AddrVFGNode ID: 31 AddrPE: [117<--1]	
 i64 40 { constant data }
ALL_SVFG: AddrVFGNode ID: 30 AddrPE: [85<--1]	
 i32 14 { constant data }
ALL_SVFG: AddrVFGNode ID: 29 AddrPE: [79<--1]	
 i1 false { constant data }
ALL_SVFG: AddrVFGNode ID: 28 AddrPE: [78<--1]	
 i64 14 { constant data }
ALL_SVFG: AddrVFGNode ID: 27 AddrPE: [77<--1]	
 i8 0 { constant data }
ALL_SVFG: AddrVFGNode ID: 26 AddrPE: [74<--1]	
 i32 -1 { constant data }
ALL_SVFG: AddrVFGNode ID: 25 AddrPE: [59<--1]	
 @.str.14 = private unnamed_addr constant [5 x i32] [i32 37, i32 48, i32 50, i32 120, i32 0], align 4 { Glob  }
ALL_SVFG: AddrVFGNode ID: 24 AddrPE: [57<--1]	
 @.str.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 23 AddrPE: [55<--1]	
 @.str.12 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 22 AddrPE: [53<--1]	
 @.str.11 = private unnamed_addr constant [10 x i8] c"%d -- %d\0A\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 21 AddrPE: [51<--1]	
 @.str.10 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 20 AddrPE: [49<--1]	
 @.str.9 = private unnamed_addr constant [4 x i8] c"%u\0A\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 19 AddrPE: [47<--1]	
 @.str.8 = private unnamed_addr constant [5 x i8] c"%ls\0A\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 18 AddrPE: [45<--1]	
 @.str.7 = private unnamed_addr constant [6 x i8] c"%02x\0A\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 17 AddrPE: [43<--1]	
 @.str.6 = private unnamed_addr constant [5 x i8] c"%zu\0A\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 16 AddrPE: [41<--1]	
 @.str.5 = private unnamed_addr constant [5 x i8] c"%ld\0A\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 5 AddrPE: [14<--1]	
 @GLOBAL_CONST_TRUE = dso_local local_unnamed_addr constant i32 1, align 4 { Glob  }
ALL_SVFG: AddrVFGNode ID: 4 AddrPE: [12<--1]	
 @.str.2 = private unnamed_addr constant [15 x i8] c"Finished bad()\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 3 AddrPE: [10<--1]	
 @.str.1 = private unnamed_addr constant [17 x i8] c"Calling bad()...\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 2 AddrPE: [8<--1]	
 @.str.3 = private unnamed_addr constant [32 x i8] c"ERROR: Array index is negative.\00", align 1 { Glob  }
ALL_SVFG: NullPtrVFGNode ID: 0 PAGNode ID: 3

ALL_SVFG: AddrVFGNode ID: 1 AddrPE: [6<--1]	
 @.str = private unnamed_addr constant [16 x i8] c"fgets() failed.\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 6 AddrPE: [15<--1]	
 i32 1 { constant data }
ALL_SVFG: AddrVFGNode ID: 7 AddrPE: [16<--1]	
 @GLOBAL_CONST_FALSE = dso_local local_unnamed_addr constant i32 0, align 4 { Glob  }
ALL_SVFG: AddrVFGNode ID: 8 AddrPE: [17<--1]	
 i32 0 { constant data }
ALL_SVFG: AddrVFGNode ID: 9 AddrPE: [18<--1]	
 @GLOBAL_CONST_FIVE = dso_local local_unnamed_addr constant i32 5, align 4 { Glob  }
ALL_SVFG: AddrVFGNode ID: 10 AddrPE: [19<--1]	
 i32 5 { constant data }
ALL_SVFG: AddrVFGNode ID: 11 AddrPE: [31<--1]	
 @.str.4 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 12 AddrPE: [33<--1]	
 @.str.1.5 = private unnamed_addr constant [5 x i32] [i32 37, i32 108, i32 115, i32 10, i32 0], align 4 { Glob  }
ALL_SVFG: AddrVFGNode ID: 13 AddrPE: [35<--1]	
 @.str.2.8 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 14 AddrPE: [37<--1]	
 @.str.3.9 = private unnamed_addr constant [5 x i8] c"%hd\0A\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 15 AddrPE: [39<--1]	
 @.str.4.10 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1 { Glob  }
ALL_SVFG: AddrVFGNode ID: 36 AddrPE: [464<--1]	
 i32 4096 { constant data }
ALL_SVFG: AddrVFGNode ID: 37 AddrPE: [601<--1]	
 i32 2 { constant data }
ALL_SVFG: AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8 { Glob  }
ALL_SVFG: AddrVFGNode ID: 39 AddrPE: [20<--21]	
 @globalTrue = dso_local local_unnamed_addr global i32 1, align 4 { Glob  }
ALL_SVFG: AddrVFGNode ID: 40 AddrPE: [22<--23]	
 @globalFalse = dso_local local_unnamed_addr global i32 0, align 4 { Glob  }
ALL_SVFG: AddrVFGNode ID: 41 AddrPE: [24<--25]	
 @globalFive = dso_local local_unnamed_addr global i32 5, align 4 { Glob  }
ALL_SVFG: AddrVFGNode ID: 42 AddrPE: [26<--27]	
 @globalArgc = dso_local local_unnamed_addr global i32 0, align 4 { Glob  }
ALL_SVFG: AddrVFGNode ID: 43 AddrPE: [28<--30]	
 @globalArgv = dso_local local_unnamed_addr global i8** null, align 8 { Glob  }
ALL_SVFG: AddrVFGNode ID: 44 AddrPE: [61<--62]	
 CWE124_Buffer_Underwrite__CWE839_fgets_44_bad {  }
ALL_SVFG: AddrVFGNode ID: 45 AddrPE: [64<--65]	
   %1 = alloca i32, align 4 {  }
ALL_SVFG: AddrVFGNode ID: 46 AddrPE: [66<--67]	
   %2 = alloca void (i32)*, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 47 AddrPE: [68<--69]	
   %3 = alloca [14 x i8], align 1 {  }
ALL_SVFG: AddrVFGNode ID: 48 AddrPE: [71<--72]	
 badSink {  }
ALL_SVFG: AddrVFGNode ID: 49 AddrPE: [80<--81]	
 llvm.memset.p0i8.i64 {  }
ALL_SVFG: AddrVFGNode ID: 50 AddrPE: [86<--87]	
 fgets {  }
ALL_SVFG: AddrVFGNode ID: 51 AddrPE: [92<--93]	
 atoi {  }
ALL_SVFG: AddrVFGNode ID: 52 AddrPE: [99<--100]	
 printLine {  }
ALL_SVFG: AddrVFGNode ID: 53 AddrPE: [108<--109]	
   %2 = alloca i32, align 4 {  }
ALL_SVFG: AddrVFGNode ID: 54 AddrPE: [110<--111]	
   %3 = alloca i32, align 4 {  }
ALL_SVFG: AddrVFGNode ID: 55 AddrPE: [112<--113]	
   %4 = alloca [10 x i32], align 16 {  }
ALL_SVFG: AddrVFGNode ID: 56 AddrPE: [137<--138]	
 printIntLine {  }
ALL_SVFG: AddrVFGNode ID: 57 AddrPE: [162<--163]	
 main {  }
ALL_SVFG: AddrVFGNode ID: 58 AddrPE: [167<--168]	
   %3 = alloca i32, align 4 {  }
ALL_SVFG: AddrVFGNode ID: 59 AddrPE: [169<--170]	
   %4 = alloca i32, align 4 {  }
ALL_SVFG: AddrVFGNode ID: 60 AddrPE: [171<--172]	
   %5 = alloca i8**, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 61 AddrPE: [177<--178]	
 time {  }
ALL_SVFG: AddrVFGNode ID: 62 AddrPE: [181<--182]	
 srand {  }
ALL_SVFG: AddrVFGNode ID: 63 AddrPE: [195<--196]	
   %2 = alloca i8*, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 64 AddrPE: [204<--205]	
 printf {  }
ALL_SVFG: AddrVFGNode ID: 65 AddrPE: [212<--213]	
 printWLine {  }
ALL_SVFG: AddrVFGNode ID: 66 AddrPE: [216<--217]	
   %2 = alloca i32*, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 67 AddrPE: [225<--226]	
 wprintf {  }
ALL_SVFG: AddrVFGNode ID: 68 AddrPE: [235<--236]	
   %2 = alloca i32, align 4 {  }
ALL_SVFG: AddrVFGNode ID: 69 AddrPE: [242<--243]	
 printShortLine {  }
ALL_SVFG: AddrVFGNode ID: 70 AddrPE: [246<--247]	
   %2 = alloca i16, align 2 {  }
ALL_SVFG: AddrVFGNode ID: 71 AddrPE: [254<--255]	
 printFloatLine {  }
ALL_SVFG: AddrVFGNode ID: 72 AddrPE: [258<--259]	
   %2 = alloca float, align 4 {  }
ALL_SVFG: AddrVFGNode ID: 73 AddrPE: [266<--267]	
 printLongLine {  }
ALL_SVFG: AddrVFGNode ID: 74 AddrPE: [270<--271]	
   %2 = alloca i64, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 75 AddrPE: [277<--278]	
 printLongLongLine {  }
ALL_SVFG: AddrVFGNode ID: 76 AddrPE: [281<--282]	
   %2 = alloca i64, align 8 {  }
ALL_SVFG: AddrVFGNode ID: 77 AddrPE: [288<--289]	
 printSizeTLine {  }
ALL_SVFG: GepVFGNode ID: 166 NormalGepPE: [274<--41]	
   %4 = getelementptr [5 x i8], [5 x i8]* @.str.5, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 167 NormalGepPE: [285<--41]	
   %4 = getelementptr [5 x i8], [5 x i8]* @.str.5, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 168 NormalGepPE: [296<--43]	
   %4 = getelementptr [5 x i8], [5 x i8]* @.str.6, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 169 NormalGepPE: [308<--45]	
   %5 = getelementptr [6 x i8], [6 x i8]* @.str.7, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 170 NormalGepPE: [349<--45]	
   %5 = getelementptr [6 x i8], [6 x i8]* @.str.7, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 171 NormalGepPE: [326<--47]	
   %8 = getelementptr [5 x i8], [5 x i8]* @.str.8, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 172 NormalGepPE: [337<--49]	
   %4 = getelementptr [4 x i8], [4 x i8]* @.str.9, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 173 NormalGepPE: [360<--51]	
   %4 = getelementptr [4 x i8], [4 x i8]* @.str.10, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 174 NormalGepPE: [376<--53]	
   %9 = getelementptr [10 x i8], [10 x i8]* @.str.11, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 175 NormalGepPE: [405<--55]	
   %16 = getelementptr [5 x i8], [5 x i8]* @.str.12, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 176 NormalGepPE: [491<--55]	
   %51 = getelementptr [5 x i8], [5 x i8]* @.str.12, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 177 NormalGepPE: [414<--57]	
   %22 = getelementptr [1 x i8], [1 x i8]* @.str.13, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 178 NormalGepPE: [564<--59]	
   %37 = getelementptr [5 x i32], [5 x i32]* @.str.14, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 179 NormalGepPE: [82<--68]	
   %5 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 180 NormalGepPE: [90<--68]	
   %10 = getelementptr inbounds [14 x i8], [14 x i8]* %3, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 181 NormalGepPE: [124<--112]	
   %11 = getelementptr inbounds [10 x i32], [10 x i32]* %4, i64 0, i64 %10 {  }
ALL_SVFG: GepVFGNode ID: 182 NormalGepPE: [134<--112]	
   %18 = getelementptr inbounds [10 x i32], [10 x i32]* %4, i64 0, i64 %17 {  }
ALL_SVFG: GepVFGNode ID: 183 NormalGepPE: [321<--317]	
   %5 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 184 NormalGepPE: [323<--317]	
   %6 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 1 {  }
ALL_SVFG: GepVFGNode ID: 185 NormalGepPE: [325<--317]	
   %7 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 0 {  }
ALL_SVFG: GepVFGNode ID: 186 NormalGepPE: [371<--370]	
   %4 = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %3, i32 0, i32 0 {  }
ALL_SVFG: GepVFGNode ID: 187 NormalGepPE: [374<--373]	
   %7 = getelementptr inbounds %struct._twoIntsStruct, %struct._twoIntsStruct* %6, i32 0, i32 1 {  }
ALL_SVFG: GepVFGNode ID: 188 VariantGepPE: [402<--400]	
   %13 = getelementptr inbounds i8, i8* %11, i64 %12 {  }
ALL_SVFG: GepVFGNode ID: 189 VariantGepPE: [460<--451]	
   %23 = getelementptr inbounds i16, i16* %15, i64 %22 {  }
ALL_SVFG: GepVFGNode ID: 190 VariantGepPE: [456<--452]	
   %19 = getelementptr inbounds i8, i8* %16, i64 %18 {  }
ALL_SVFG: GepVFGNode ID: 191 VariantGepPE: [478<--469]	
   %39 = getelementptr inbounds i16, i16* %30, i64 %38 {  }
ALL_SVFG: GepVFGNode ID: 192 VariantGepPE: [474<--470]	
   %35 = getelementptr inbounds i8, i8* %31, i64 %34 {  }
ALL_SVFG: GepVFGNode ID: 193 VariantGepPE: [490<--487]	
   %50 = getelementptr inbounds i8, i8* %47, i64 %49 {  }
ALL_SVFG: GepVFGNode ID: 194 VariantGepPE: [499<--497]	
   %57 = getelementptr inbounds i8, i8* %55, i64 %56 {  }
ALL_SVFG: GepVFGNode ID: 195 VariantGepPE: [541<--538]	
   %17 = getelementptr inbounds i32, i32* %14, i64 %16 {  }
ALL_SVFG: GepVFGNode ID: 196 VariantGepPE: [552<--548]	
   %26 = getelementptr inbounds i32, i32* %22, i64 %25 {  }
ALL_SVFG: GepVFGNode ID: 197 VariantGepPE: [563<--560]	
   %36 = getelementptr inbounds i32, i32* %33, i64 %35 {  }
ALL_SVFG: GepVFGNode ID: 198 VariantGepPE: [572<--570]	
   %43 = getelementptr inbounds i8, i8* %41, i64 %42 {  }
ALL_SVFG: LoadVFGNode ID: 199 LoadPE: [83<--4]	
   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 200 LoadPE: [103<--64]	
   %16 = load i32, i32* %1, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 201 LoadPE: [102<--66]	
   %15 = load void (i32)*, void (i32)** %2, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 202 LoadPE: [118<--108]	
   %6 = load i32, i32* %2, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 203 LoadPE: [122<--108]	
   %9 = load i32, i32* %2, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 204 LoadPE: [129<--110]	
   %13 = load i32, i32* %3, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 205 LoadPE: [132<--110]	
   %16 = load i32, i32* %3, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 206 LoadPE: [141<--110]	
   %21 = load i32, i32* %3, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 207 LoadPE: [135<--134]	
   %19 = load i32, i32* %18, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 208 LoadPE: [198<--195]	
   %3 = load i8*, i8** %2, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 209 LoadPE: [201<--195]	
   %6 = load i8*, i8** %2, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 210 LoadPE: [219<--216]	
   %3 = load i32*, i32** %2, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 211 LoadPE: [222<--216]	
   %6 = load i32*, i32** %2, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 212 LoadPE: [238<--235]	
   %3 = load i32, i32* %2, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 213 LoadPE: [249<--246]	
   %3 = load i16, i16* %2, align 2 {  }
ALL_SVFG: LoadVFGNode ID: 214 LoadPE: [261<--258]	
   %3 = load float, float* %2, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 215 LoadPE: [273<--270]	
   %3 = load i64, i64* %2, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 216 LoadPE: [284<--281]	
   %3 = load i64, i64* %2, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 217 LoadPE: [295<--292]	
   %3 = load i64, i64* %2, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 218 LoadPE: [306<--303]	
   %3 = load i8, i8* %2, align 1 {  }
ALL_SVFG: LoadVFGNode ID: 219 LoadPE: [320<--315]	
   %4 = load i32, i32* %2, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 220 LoadPE: [336<--333]	
   %3 = load i32, i32* %2, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 221 LoadPE: [347<--344]	
   %3 = load i8, i8* %2, align 1 {  }
ALL_SVFG: LoadVFGNode ID: 222 LoadPE: [359<--356]	
   %3 = load double, double* %2, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 223 LoadPE: [370<--367]	
   %3 = load %struct._twoIntsStruct*, %struct._twoIntsStruct** %2, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 224 LoadPE: [373<--367]	
   %6 = load %struct._twoIntsStruct*, %struct._twoIntsStruct** %2, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 225 LoadPE: [372<--371]	
   %5 = load i32, i32* %4, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 226 LoadPE: [375<--374]	
   %8 = load i32, i32* %7, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 227 LoadPE: [400<--384]	
   %11 = load i8*, i8** %3, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 228 LoadPE: [397<--386]	
   %8 = load i64, i64* %4, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 229 LoadPE: [396<--388]	
   %7 = load i64, i64* %5, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 230 LoadPE: [401<--388]	
   %12 = load i64, i64* %5, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 231 LoadPE: [409<--388]	
   %19 = load i64, i64* %5, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 232 LoadPE: [403<--402]	
   %14 = load i8, i8* %13, align 1 {  }
ALL_SVFG: LoadVFGNode ID: 233 LoadPE: [497<--427]	
   %55 = load i8*, i8** %4, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 234 LoadPE: [444<--429]	
   %11 = load i64, i64* %5, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 235 LoadPE: [452<--431]	
   %16 = load i8*, i8** %6, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 236 LoadPE: [470<--431]	
   %31 = load i8*, i8** %6, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 237 LoadPE: [487<--431]	
   %47 = load i8*, i8** %6, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 238 LoadPE: [443<--433]	
   %10 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 239 LoadPE: [453<--433]	
   %17 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 240 LoadPE: [471<--433]	
   %32 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 241 LoadPE: [488<--433]	
   %48 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 242 LoadPE: [498<--433]	
   %56 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 243 LoadPE: [501<--433]	
   %58 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 244 LoadPE: [505<--433]	
   %61 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 245 LoadPE: [495<--435]	
   %53 = load i32, i32* %8, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 246 LoadPE: [451<--447]	
   %15 = load i16*, i16** %14, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 247 LoadPE: [457<--456]	
   %20 = load i8, i8* %19, align 1 {  }
ALL_SVFG: LoadVFGNode ID: 248 LoadPE: [461<--460]	
   %24 = load i16, i16* %23, align 2 {  }
ALL_SVFG: LoadVFGNode ID: 249 LoadPE: [469<--467]	
   %30 = load i16*, i16** %29, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 250 LoadPE: [475<--474]	
   %36 = load i8, i8* %35, align 1 {  }
ALL_SVFG: LoadVFGNode ID: 251 LoadPE: [479<--478]	
   %40 = load i16, i16* %39, align 2 {  }
ALL_SVFG: LoadVFGNode ID: 252 LoadPE: [570<--518]	
   %41 = load i8*, i8** %4, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 253 LoadPE: [535<--520]	
   %11 = load i64, i64* %5, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 254 LoadPE: [538<--522]	
   %14 = load i32*, i32** %6, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 255 LoadPE: [548<--522]	
   %22 = load i32*, i32** %6, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 256 LoadPE: [560<--522]	
   %33 = load i32*, i32** %6, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 257 LoadPE: [534<--524]	
   %10 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 258 LoadPE: [539<--524]	
   %15 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 259 LoadPE: [549<--524]	
   %23 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 260 LoadPE: [561<--524]	
   %34 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 261 LoadPE: [571<--524]	
   %42 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 262 LoadPE: [574<--524]	
   %44 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 263 LoadPE: [578<--524]	
   %47 = load i64, i64* %7, align 8 {  }
ALL_SVFG: LoadVFGNode ID: 264 LoadPE: [568<--526]	
   %39 = load i32, i32* %8, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 265 LoadPE: [542<--541]	
   %18 = load i32, i32* %17, align 4 {  }
ALL_SVFG: LoadVFGNode ID: 266 LoadPE: [553<--552]	
   %27 = load i32, i32* %26, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 267 StorePE: [14<--15]	
 i32 1 { constant data }
ALL_SVFG: StoreVFGNode ID: 268 StorePE: [16<--17]	
 i32 0 { constant data }
ALL_SVFG: StoreVFGNode ID: 269 StorePE: [18<--19]	
 i32 5 { constant data }
ALL_SVFG: StoreVFGNode ID: 270 StorePE: [20<--15]	
 i32 1 { constant data }
ALL_SVFG: StoreVFGNode ID: 271 StorePE: [22<--17]	
 i32 0 { constant data }
ALL_SVFG: StoreVFGNode ID: 272 StorePE: [24<--19]	
 i32 5 { constant data }
ALL_SVFG: StoreVFGNode ID: 273 StorePE: [26<--17]	
 i32 0 { constant data }
ALL_SVFG: StoreVFGNode ID: 274 StorePE: [28<--3]	
 i8** null { constant data }
ALL_SVFG: StoreVFGNode ID: 275 StorePE: [66<--71]	
   store void (i32)* @badSink, void (i32)** %2, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 276 StorePE: [64<--74]	
   store i32 -1, i32* %1, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 277 StorePE: [64<--91]	
   store i32 %11, i32* %1, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 278 StorePE: [108<--107]	
   store i32 %0, i32* %2, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 279 StorePE: [124<--15]	
   store i32 1, i32* %11, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 280 StorePE: [110<--17]	
   store i32 0, i32* %3, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 281 StorePE: [110<--142]	
   store i32 %22, i32* %3, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 282 StorePE: [167<--17]	
   store i32 0, i32* %3, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 283 StorePE: [169<--165]	
   store i32 %0, i32* %4, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 284 StorePE: [171<--166]	
   store i8** %1, i8*** %5, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 285 StorePE: [195<--194]	
   store i8* %0, i8** %2, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 286 StorePE: [216<--215]	
   store i32* %0, i32** %2, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 287 StorePE: [235<--234]	
   store i32 %0, i32* %2, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 288 StorePE: [246<--245]	
   store i16 %0, i16* %2, align 2 {  }
ALL_SVFG: StoreVFGNode ID: 289 StorePE: [258<--257]	
   store float %0, float* %2, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 290 StorePE: [270<--269]	
   store i64 %0, i64* %2, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 291 StorePE: [281<--280]	
   store i64 %0, i64* %2, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 292 StorePE: [292<--291]	
   store i64 %0, i64* %2, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 293 StorePE: [303<--302]	
   store i8 %0, i8* %2, align 1 {  }
ALL_SVFG: StoreVFGNode ID: 294 StorePE: [315<--314]	
   store i32 %0, i32* %2, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 295 StorePE: [321<--320]	
   store i32 %4, i32* %5, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 296 StorePE: [323<--17]	
   store i32 0, i32* %6, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 297 StorePE: [333<--332]	
   store i32 %0, i32* %2, align 4 {  }
ALL_SVFG: StoreVFGNode ID: 298 StorePE: [344<--343]	
   store i8 %0, i8* %2, align 1 {  }
ALL_SVFG: StoreVFGNode ID: 299 StorePE: [356<--355]	
   store double %0, double* %2, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 300 StorePE: [367<--366]	
   store %struct._twoIntsStruct* %0, %struct._twoIntsStruct** %2, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 301 StorePE: [384<--382]	
   store i8* %0, i8** %3, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 302 StorePE: [386<--383]	
   store i64 %1, i64* %4, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 303 StorePE: [388<--393]	
   store i64 0, i64* %5, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 304 StorePE: [388<--410]	
   store i64 %20, i64* %5, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 305 StorePE: [427<--424]	
   store i8* %0, i8** %4, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 306 StorePE: [429<--425]	
   store i64 %1, i64* %5, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 307 StorePE: [431<--426]	
   store i8* %2, i8** %6, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 308 StorePE: [433<--393]	
   store i64 0, i64* %7, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 309 StorePE: [499<--496]	
   store i8 %54, i8* %57, align 1 {  }
ALL_SVFG: StoreVFGNode ID: 310 StorePE: [433<--502]	
   store i64 %59, i64* %7, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 311 StorePE: [518<--515]	
   store i8* %0, i8** %4, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 312 StorePE: [520<--516]	
   store i64 %1, i64* %5, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 313 StorePE: [522<--517]	
   store i32* %2, i32** %6, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 314 StorePE: [524<--393]	
   store i64 0, i64* %7, align 8 {  }
ALL_SVFG: StoreVFGNode ID: 315 StorePE: [572<--569]	
   store i8 %40, i8* %43, align 1 {  }
ALL_SVFG: StoreVFGNode ID: 316 StorePE: [524<--575]	
   store i64 %45, i64* %7, align 8 {  }
ALL_SVFG: ActualParmVFGNode ID: 317 CS[{  }]ValPN ID: 563
   %36 = getelementptr inbounds i32, i32* %33, i64 %35 {  }
ALL_SVFG: ActualParmVFGNode ID: 318 CS[{  }]ValPN ID: 564
   %37 = getelementptr [5 x i32], [5 x i32]* @.str.14, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 319 CS[{  }]ValPN ID: 526
   %8 = alloca i32, align 4 {  }
ALL_SVFG: ActualParmVFGNode ID: 320 CS[{  }]ValPN ID: 542
   %18 = load i32, i32* %17, align 4 {  }
ALL_SVFG: ActualParmVFGNode ID: 321 CS[{  }]ValPN ID: 414
   %22 = getelementptr [1 x i8], [1 x i8]* @.str.13, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 322 CS[{  }]ValPN ID: 553
   %27 = load i32, i32* %26, align 4 {  }
ALL_SVFG: ActualParmVFGNode ID: 323 CS[{  }]ValPN ID: 376
   %9 = getelementptr [10 x i8], [10 x i8]* @.str.11, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 324 CS[{  }]ValPN ID: 372
   %5 = load i32, i32* %4, align 4 {  }
ALL_SVFG: ActualParmVFGNode ID: 325 CS[{  }]ValPN ID: 375
   %8 = load i32, i32* %7, align 4 {  }
ALL_SVFG: ActualParmVFGNode ID: 326 CS[{  }]ValPN ID: 326
   %8 = getelementptr [5 x i8], [5 x i8]* @.str.8, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 327 CS[{  }]ValPN ID: 325
   %7 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 328 CS[{  }]ValPN ID: 308
   %5 = getelementptr [6 x i8], [6 x i8]* @.str.7, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 329 CS[{  }]ValPN ID: 307
   %4 = sext i8 %3 to i32 {  }
ALL_SVFG: ActualParmVFGNode ID: 330 CS[{  }]ValPN ID: 296
   %4 = getelementptr [5 x i8], [5 x i8]* @.str.6, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 331 CS[{  }]ValPN ID: 295
   %3 = load i64, i64* %2, align 8 {  }
ALL_SVFG: ActualParmVFGNode ID: 332 CS[{  }]ValPN ID: 285
   %4 = getelementptr [5 x i8], [5 x i8]* @.str.5, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 333 CS[{  }]ValPN ID: 284
   %3 = load i64, i64* %2, align 8 {  }
ALL_SVFG: ActualParmVFGNode ID: 334 CS[{  }]ValPN ID: 274
   %4 = getelementptr [5 x i8], [5 x i8]* @.str.5, i64 0, i64 0 {  }
ALL_SVFG: ActualParmVFGNode ID: 335 CS[{  }]ValPN ID: 273
   %3 = load i64, i64* %2, align 8 {  }
Top k = 1
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8 { Glob  }	1	1
45(17) 3(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 1(1) 0(0) 1(1) 
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Writing '/home/salman/DPP/dpp-data/current.svfg.dot'...
