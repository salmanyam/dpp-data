/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124
mkdir: cannot create directory '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output': File exists
mkdir: cannot create directory '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad': File exists
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_cpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_loop_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memcpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_memmove_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_alloca_ncpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_cpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_loop_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memcpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_memmove_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__char_declare_ncpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_01-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %31, i32* %2, align 4
Found Instruction =   store i8 0, i8* %41, align 1
Found Instruction =   store i32 %43, i32* %1, align 4
Found Instruction =   store i32 1, i32* %57, align 4
Found Instruction =   %65 = load i32, i32* %64, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_01-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12141==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc4565127c at pc 0x000000400fe0 bp 0x7ffc45651210 sp 0x7ffc45651208
WRITE of size 4 at 0x7ffc4565127c thread T0
    #0 0x400fdf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_01-bad_m+0x400fdf)
    #1 0x401149  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_01-bad_m+0x401149)
    #2 0x7fa78ddd1c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_01-bad_m+0x400c69)

Address 0x7ffc4565127c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_01-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_01-bad_m+0x400fdf) 
Shadow bytes around the buggy address:
  0x100008ac21f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ac2200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ac2210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ac2220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ac2230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100008ac2240: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x100008ac2250: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x100008ac2260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ac2270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ac2280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ac2290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12141==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_01-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 25 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (236 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_02-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %31, i32* %2, align 4
Found Instruction =   store i8 0, i8* %41, align 1
Found Instruction =   store i32 %43, i32* %1, align 4
Found Instruction =   store i32 1, i32* %57, align 4
Found Instruction =   %65 = load i32, i32* %64, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_02-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12202==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff1dc620fc at pc 0x000000400fe0 bp 0x7fff1dc62090 sp 0x7fff1dc62088
WRITE of size 4 at 0x7fff1dc620fc thread T0
    #0 0x400fdf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_02-bad_m+0x400fdf)
    #1 0x401149  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_02-bad_m+0x401149)
    #2 0x7f071726ac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_02-bad_m+0x400c69)

Address 0x7fff1dc620fc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_02-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_02-bad_m+0x400fdf) 
Shadow bytes around the buggy address:
  0x100063b843c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100063b843d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100063b843e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100063b843f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100063b84400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100063b84410: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x100063b84420: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x100063b84430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100063b84440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100063b84450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100063b84460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12202==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_02-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (244 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_03-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %31, i32* %2, align 4
Found Instruction =   store i8 0, i8* %41, align 1
Found Instruction =   store i32 %43, i32* %1, align 4
Found Instruction =   store i32 1, i32* %57, align 4
Found Instruction =   %65 = load i32, i32* %64, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_03-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12264==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd270bcf5c at pc 0x000000400fe0 bp 0x7ffd270bcef0 sp 0x7ffd270bcee8
WRITE of size 4 at 0x7ffd270bcf5c thread T0
    #0 0x400fdf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_03-bad_m+0x400fdf)
    #1 0x401149  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_03-bad_m+0x401149)
    #2 0x7fc36103cc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_03-bad_m+0x400c69)

Address 0x7ffd270bcf5c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_03-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_03-bad_m+0x400fdf) 
Shadow bytes around the buggy address:
  0x100024e0f990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100024e0f9a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100024e0f9b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100024e0f9c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100024e0f9d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100024e0f9e0: f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]00 00 00 00
  0x100024e0f9f0: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100024e0fa00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100024e0fa10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100024e0fa20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100024e0fa30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12264==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_03-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 32 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_04-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %31, i32* %2, align 4
Found Instruction =   store i8 0, i8* %41, align 1
Found Instruction =   store i32 %43, i32* %1, align 4
Found Instruction =   store i32 1, i32* %57, align 4
Found Instruction =   %65 = load i32, i32* %64, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_04-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12329==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff4863a05c at pc 0x000000400fe0 bp 0x7fff48639ff0 sp 0x7fff48639fe8
WRITE of size 4 at 0x7fff4863a05c thread T0
    #0 0x400fdf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_04-bad_m+0x400fdf)
    #1 0x401149  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_04-bad_m+0x401149)
    #2 0x7fa52b829c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_04-bad_m+0x400c69)

Address 0x7fff4863a05c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_04-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_04-bad_m+0x400fdf) 
Shadow bytes around the buggy address:
  0x1000690bf3b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000690bf3c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000690bf3d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000690bf3e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000690bf3f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000690bf400: f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]00 00 00 00
  0x1000690bf410: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x1000690bf420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000690bf430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000690bf440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000690bf450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12329==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_04-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 14 times to write data ]
[ perf record: Captured and wrote 0.021 MB perf.data (177 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_05-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 55 AddrPE: [76<--77]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %34, i32* %2, align 4
Found Instruction =   store i8 0, i8* %44, align 1
Found Instruction =   store i32 %46, i32* %1, align 4
Found Instruction =   store i32 1, i32* %64, align 4
Found Instruction =   %72 = load i32, i32* %71, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_05-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12390==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffdc8a2e7fc at pc 0x000000401001 bp 0x7ffdc8a2e790 sp 0x7ffdc8a2e788
WRITE of size 4 at 0x7ffdc8a2e7fc thread T0
    #0 0x401000  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_05-bad_m+0x401000)
    #1 0x401179  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_05-bad_m+0x401179)
    #2 0x7f151cfaec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_05-bad_m+0x400c69)

Address 0x7ffdc8a2e7fc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_05-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_05-bad_m+0x401000) 
Shadow bytes around the buggy address:
  0x10003913dca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003913dcb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003913dcc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003913dcd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003913dce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10003913dcf0: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x10003913dd00: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10003913dd10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003913dd20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003913dd30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003913dd40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12390==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_05-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (249 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_06-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %31, i32* %2, align 4
Found Instruction =   store i8 0, i8* %41, align 1
Found Instruction =   store i32 %43, i32* %1, align 4
Found Instruction =   store i32 1, i32* %57, align 4
Found Instruction =   %65 = load i32, i32* %64, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_06-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12458==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd7a5ff3fc at pc 0x000000400fe0 bp 0x7ffd7a5ff390 sp 0x7ffd7a5ff388
WRITE of size 4 at 0x7ffd7a5ff3fc thread T0
    #0 0x400fdf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_06-bad_m+0x400fdf)
    #1 0x401149  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_06-bad_m+0x401149)
    #2 0x7ff10bdf1c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_06-bad_m+0x400c69)

Address 0x7ffd7a5ff3fc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_06-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_06-bad_m+0x400fdf) 
Shadow bytes around the buggy address:
  0x10002f4b7e20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002f4b7e30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002f4b7e40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002f4b7e50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002f4b7e60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10002f4b7e70: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x10002f4b7e80: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10002f4b7e90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002f4b7ea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002f4b7eb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002f4b7ec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12458==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_06-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 30 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (244 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_07-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 55 AddrPE: [76<--77]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %34, i32* %2, align 4
Found Instruction =   store i8 0, i8* %44, align 1
Found Instruction =   store i32 %46, i32* %1, align 4
Found Instruction =   store i32 1, i32* %64, align 4
Found Instruction =   %72 = load i32, i32* %71, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_07-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12516==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc274a7bbc at pc 0x000000401001 bp 0x7ffc274a7b50 sp 0x7ffc274a7b48
WRITE of size 4 at 0x7ffc274a7bbc thread T0
    #0 0x401000  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_07-bad_m+0x401000)
    #1 0x401179  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_07-bad_m+0x401179)
    #2 0x7fd53a5cac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_07-bad_m+0x400c69)

Address 0x7ffc274a7bbc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_07-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_07-bad_m+0x401000) 
Shadow bytes around the buggy address:
  0x100004e8cf20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004e8cf30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004e8cf40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004e8cf50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004e8cf60: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100004e8cf70: 00 00 f2 f2 00 06 f2[f2]00 00 00 00 00 f3 f3 f3
  0x100004e8cf80: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004e8cf90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004e8cfa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004e8cfb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004e8cfc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12516==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_07-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (244 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_08-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %34, i32* %2, align 4
Found Instruction =   store i8 0, i8* %44, align 1
Found Instruction =   store i32 %46, i32* %1, align 4
Found Instruction =   store i32 1, i32* %64, align 4
Found Instruction =   %72 = load i32, i32* %71, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_08-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12583==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc0e4a555c at pc 0x000000401001 bp 0x7ffc0e4a54f0 sp 0x7ffc0e4a54e8
WRITE of size 4 at 0x7ffc0e4a555c thread T0
    #0 0x401000  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_08-bad_m+0x401000)
    #1 0x401189  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_08-bad_m+0x401189)
    #2 0x7f1aa6c37c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_08-bad_m+0x400c69)

Address 0x7ffc0e4a555c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_08-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_08-bad_m+0x401000) 
Shadow bytes around the buggy address:
  0x100001c8ca50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100001c8ca60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100001c8ca70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100001c8ca80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100001c8ca90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100001c8caa0: f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]00 00 00 00
  0x100001c8cab0: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100001c8cac0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100001c8cad0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100001c8cae0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100001c8caf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12583==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_08-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_09-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %34, i32* %2, align 4
Found Instruction =   store i8 0, i8* %44, align 1
Found Instruction =   store i32 %46, i32* %1, align 4
Found Instruction =   store i32 1, i32* %64, align 4
Found Instruction =   %72 = load i32, i32* %71, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_09-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12644==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc2407633c at pc 0x000000401001 bp 0x7ffc240762d0 sp 0x7ffc240762c8
WRITE of size 4 at 0x7ffc2407633c thread T0
    #0 0x401000  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_09-bad_m+0x401000)
    #1 0x401179  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_09-bad_m+0x401179)
    #2 0x7f264d845c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_09-bad_m+0x400c69)

Address 0x7ffc2407633c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_09-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_09-bad_m+0x401000) 
Shadow bytes around the buggy address:
  0x100004806c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004806c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004806c30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004806c40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004806c50: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100004806c60: 00 00 f2 f2 00 06 f2[f2]00 00 00 00 00 f3 f3 f3
  0x100004806c70: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004806c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004806c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004806ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004806cb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12644==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_09-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (256 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_10-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %34, i32* %2, align 4
Found Instruction =   store i8 0, i8* %44, align 1
Found Instruction =   store i32 %46, i32* %1, align 4
Found Instruction =   store i32 1, i32* %64, align 4
Found Instruction =   %72 = load i32, i32* %71, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_10-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12711==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffde6df33dc at pc 0x000000401001 bp 0x7ffde6df3370 sp 0x7ffde6df3368
WRITE of size 4 at 0x7ffde6df33dc thread T0
    #0 0x401000  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_10-bad_m+0x401000)
    #1 0x401179  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_10-bad_m+0x401179)
    #2 0x7f49a0027c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_10-bad_m+0x400c69)

Address 0x7ffde6df33dc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_10-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_10-bad_m+0x401000) 
Shadow bytes around the buggy address:
  0x10003cdb6620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003cdb6630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003cdb6640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003cdb6650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003cdb6660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10003cdb6670: f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]00 00 00 00
  0x10003cdb6680: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10003cdb6690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003cdb66a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003cdb66b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003cdb66c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12711==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_10-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 28 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (255 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_11-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %34, i32* %2, align 4
Found Instruction =   store i8 0, i8* %44, align 1
Found Instruction =   store i32 %46, i32* %1, align 4
Found Instruction =   store i32 1, i32* %64, align 4
Found Instruction =   %72 = load i32, i32* %71, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_11-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12771==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe0e7854bc at pc 0x000000401005 bp 0x7ffe0e785450 sp 0x7ffe0e785448
WRITE of size 4 at 0x7ffe0e7854bc thread T0
    #0 0x401004  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_11-bad_m+0x401004)
    #1 0x401179  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_11-bad_m+0x401179)
    #2 0x7f3188941c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_11-bad_m+0x400c69)

Address 0x7ffe0e7854bc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_11-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_11-bad_m+0x401004) 
Shadow bytes around the buggy address:
  0x100041ce8a40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041ce8a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041ce8a60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041ce8a70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041ce8a80: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100041ce8a90: 00 00 f2 f2 00 06 f2[f2]00 00 00 00 00 f3 f3 f3
  0x100041ce8aa0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041ce8ab0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041ce8ac0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041ce8ad0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100041ce8ae0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12771==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_11-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 28 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (239 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_12-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 3
AddrVFGNode ID: 54 AddrPE: [72<--73]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 56 AddrPE: [76<--77]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 58 AddrPE: [80<--81]	
   %9 = alloca [10 x i32], align 16 {  }	1	2
46(16) 8(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 7(3) 0(0) 7(3) 
Found Instruction =   store i32 %36, i32* %2, align 4
Found Instruction =   store i8 0, i8* %46, align 1
Found Instruction =   store i32 %48, i32* %1, align 4
Found Instruction =   store i32 1, i32* %67, align 4
Found Instruction =   %75 = load i32, i32* %74, align 4
Found Instruction =   store i32 1, i32* %93, align 4
Found Instruction =   %101 = load i32, i32* %100, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_12-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
Calling bad()...
0
0
0
0
0
0
0
1
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_12-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 25 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_13-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %34, i32* %2, align 4
Found Instruction =   store i8 0, i8* %44, align 1
Found Instruction =   store i32 %46, i32* %1, align 4
Found Instruction =   store i32 1, i32* %64, align 4
Found Instruction =   %72 = load i32, i32* %71, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_13-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12896==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe405de49c at pc 0x000000401001 bp 0x7ffe405de430 sp 0x7ffe405de428
WRITE of size 4 at 0x7ffe405de49c thread T0
    #0 0x401000  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_13-bad_m+0x401000)
    #1 0x401179  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_13-bad_m+0x401179)
    #2 0x7fa861af0c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_13-bad_m+0x400c69)

Address 0x7ffe405de49c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_13-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_13-bad_m+0x401000) 
Shadow bytes around the buggy address:
  0x1000480b3c40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000480b3c50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000480b3c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000480b3c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000480b3c80: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2
=>0x1000480b3c90: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x1000480b3ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000480b3cb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000480b3cc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000480b3cd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000480b3ce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12896==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_13-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_14-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %34, i32* %2, align 4
Found Instruction =   store i8 0, i8* %44, align 1
Found Instruction =   store i32 %46, i32* %1, align 4
Found Instruction =   store i32 1, i32* %64, align 4
Found Instruction =   %72 = load i32, i32* %71, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_14-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==12959==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe60f3253c at pc 0x000000401001 bp 0x7ffe60f324d0 sp 0x7ffe60f324c8
WRITE of size 4 at 0x7ffe60f3253c thread T0
    #0 0x401000  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_14-bad_m+0x401000)
    #1 0x401179  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_14-bad_m+0x401179)
    #2 0x7f2754e9dc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_14-bad_m+0x400c69)

Address 0x7ffe60f3253c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_14-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_14-bad_m+0x401000) 
Shadow bytes around the buggy address:
  0x10004c1de450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c1de460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c1de470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c1de480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c1de490: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10004c1de4a0: 00 00 f2 f2 00 06 f2[f2]00 00 00 00 00 f3 f3 f3
  0x10004c1de4b0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c1de4c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c1de4d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c1de4e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c1de4f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12959==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_14-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 16 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (269 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_15-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %31, i32* %2, align 4
Found Instruction =   store i8 0, i8* %41, align 1
Found Instruction =   store i32 %43, i32* %1, align 4
Found Instruction =   store i32 1, i32* %57, align 4
Found Instruction =   %65 = load i32, i32* %64, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_15-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13024==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcd80e45fc at pc 0x000000400fe0 bp 0x7ffcd80e4590 sp 0x7ffcd80e4588
WRITE of size 4 at 0x7ffcd80e45fc thread T0
    #0 0x400fdf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_15-bad_m+0x400fdf)
    #1 0x401149  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_15-bad_m+0x401149)
    #2 0x7f05be382c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_15-bad_m+0x400c69)

Address 0x7ffcd80e45fc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_15-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_15-bad_m+0x400fdf) 
Shadow bytes around the buggy address:
  0x10001b014860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b014870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b014880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b014890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b0148a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10001b0148b0: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x10001b0148c0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10001b0148d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b0148e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b0148f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b014900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13024==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_15-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 20 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (166 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_16-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %32, i32* %2, align 4
Found Instruction =   store i8 0, i8* %42, align 1
Found Instruction =   store i32 %44, i32* %1, align 4
Found Instruction =   store i32 1, i32* %60, align 4
Found Instruction =   %68 = load i32, i32* %67, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_16-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13082==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff6f7dc57c at pc 0x000000400fea bp 0x7fff6f7dc510 sp 0x7fff6f7dc508
WRITE of size 4 at 0x7fff6f7dc57c thread T0
    #0 0x400fe9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_16-bad_m+0x400fe9)
    #1 0x401159  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_16-bad_m+0x401159)
    #2 0x7fe07bd07c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_16-bad_m+0x400c69)

Address 0x7fff6f7dc57c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_16-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_16-bad_m+0x400fe9) 
Shadow bytes around the buggy address:
  0x10006def3850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006def3860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006def3870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006def3880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006def3890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10006def38a0: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x10006def38b0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10006def38c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006def38d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006def38e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006def38f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13082==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_16-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (249 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_17-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 56 AddrPE: [78<--79]	
   %9 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %37, i32* %4, align 4
Found Instruction =   store i8 0, i8* %47, align 1
Found Instruction =   store i32 %49, i32* %3, align 4
Found Instruction =   store i32 1, i32* %71, align 4
Found Instruction =   %79 = load i32, i32* %78, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_17-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13146==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe6a6712dc at pc 0x000000401027 bp 0x7ffe6a671270 sp 0x7ffe6a671268
WRITE of size 4 at 0x7ffe6a6712dc thread T0
    #0 0x401026  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_17-bad_m+0x401026)
    #1 0x4011a9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_17-bad_m+0x4011a9)
    #2 0x7f3402ec8c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_17-bad_m+0x400c69)

Address 0x7ffe6a6712dc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_17-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_17-bad_m+0x401026) 
Shadow bytes around the buggy address:
  0x10004d4c6200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d4c6210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d4c6220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d4c6230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d4c6240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10004d4c6250: f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]00 00 00 00
  0x10004d4c6260: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10004d4c6270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d4c6280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d4c6290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d4c62a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13146==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_17-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (247 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_18-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %32, i32* %2, align 4
Found Instruction =   store i8 0, i8* %42, align 1
Found Instruction =   store i32 %44, i32* %1, align 4
Found Instruction =   store i32 1, i32* %59, align 4
Found Instruction =   %67 = load i32, i32* %66, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_18-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13205==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcab79df1c at pc 0x000000400fe5 bp 0x7ffcab79deb0 sp 0x7ffcab79dea8
WRITE of size 4 at 0x7ffcab79df1c thread T0
    #0 0x400fe4  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_18-bad_m+0x400fe4)
    #1 0x401159  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_18-bad_m+0x401159)
    #2 0x7f5330f17c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_18-bad_m+0x400c69)

Address 0x7ffcab79df1c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_18-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_18-bad_m+0x400fe4) 
Shadow bytes around the buggy address:
  0x1000156ebb90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000156ebba0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000156ebbb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000156ebbc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000156ebbd0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2
=>0x1000156ebbe0: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x1000156ebbf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000156ebc00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000156ebc10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000156ebc20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000156ebc30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13205==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_18-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 12 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (245 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_21-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 65 AddrPE: [194<--195]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %29, i32* %2, align 4
Found Instruction =   store i8 0, i8* %39, align 1
Found Instruction =   store i32 %41, i32* %1, align 4
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_21-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13283==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffeaff3fe7c at pc 0x00000040110b bp 0x7ffeaff3fe50 sp 0x7ffeaff3fe48
WRITE of size 4 at 0x7ffeaff3fe7c thread T0
    #0 0x40110a  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_21-bad_m+0x40110a)
    #1 0x400f54  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_21-bad_m+0x400f54)
    #2 0x401259  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_21-bad_m+0x401259)
    #3 0x7ff03d2bbc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_21-bad_m+0x400c69)

Address 0x7ffeaff3fe7c is located in stack of thread T0 at offset 28 in frame
    #0 0x400fcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_21-bad_m+0x400fcf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_21-bad_m+0x40110a) 
Shadow bytes around the buggy address:
  0x100055fdff70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100055fdff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100055fdff90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100055fdffa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100055fdffb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100055fdffc0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x100055fdffd0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x100055fdffe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100055fdfff0: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f3 f3
  0x100055fe0000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100055fe0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13283==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_21-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 30 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (268 samples) ]
0x2e38 [0x30]: failed to process type: 9
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_22-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 72 AddrPE: [227<--228]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %29, i32* %2, align 4
Found Instruction =   store i8 0, i8* %39, align 1
Found Instruction =   store i32 %41, i32* %1, align 4
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_22-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13349==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffc889c4cfc at pc 0x00000040116b bp 0x7ffc889c4cd0 sp 0x7ffc889c4cc8
WRITE of size 4 at 0x7ffc889c4cfc thread T0
    #0 0x40116a  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_22-bad_m+0x40116a)
    #1 0x400f54  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_22-bad_m+0x400f54)
    #2 0x400ff9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_22-bad_m+0x400ff9)
    #3 0x7f302c3a3c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_22-bad_m+0x400c69)

Address 0x7ffc889c4cfc is located in stack of thread T0 at offset 28 in frame
    #0 0x40102f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_22-bad_m+0x40102f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_22-bad_m+0x40116a) 
Shadow bytes around the buggy address:
  0x100011130940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100011130950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100011130960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100011130970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100011130980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100011130990: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x1000111309a0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x1000111309b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000111309c0: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f3 f3
  0x1000111309d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000111309e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13349==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_22-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 11 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_31-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 56 AddrPE: [78<--79]	
   %9 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %33, i32* %2, align 4
Found Instruction =   store i8 0, i8* %43, align 1
Found Instruction =   store i32 %45, i32* %1, align 4
Found Instruction =   store i32 1, i32* %61, align 4
Found Instruction =   %69 = load i32, i32* %68, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_31-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13413==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcb0d2e3dc at pc 0x000000400ff8 bp 0x7ffcb0d2e370 sp 0x7ffcb0d2e368
WRITE of size 4 at 0x7ffcb0d2e3dc thread T0
    #0 0x400ff7  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_31-bad_m+0x400ff7)
    #1 0x401169  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_31-bad_m+0x401169)
    #2 0x7ff63b1aac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_31-bad_m+0x400c69)

Address 0x7ffcb0d2e3dc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_31-bad_m+0x400d3f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_31-bad_m+0x400ff7) 
Shadow bytes around the buggy address:
  0x10001619dc20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001619dc30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001619dc40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001619dc50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001619dc60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10001619dc70: f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]00 00 00 00
  0x10001619dc80: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10001619dc90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001619dca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001619dcb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001619dcc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13413==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_31-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 21 times to write data ]
0x2e38 [0x30]: failed to process type: 9
[ perf record: Captured and wrote 0.024 MB perf.data ]
0x6360 [0]: failed to process type: 13431
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_32-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 55 AddrPE: [76<--77]	
   %8 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 58 AddrPE: [82<--83]	
   %11 = alloca [10 x i32], align 16 {  }	1	2
54(17) 16(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %37, i32* %5, align 4
Found Instruction =   store i8 0, i8* %47, align 1
Found Instruction =   store i32 %49, i32* %4, align 4
Found Instruction =   store i32 1, i32* %67, align 4
Found Instruction =   %75 = load i32, i32* %74, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_32-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13462==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffff83b5d2c at pc 0x000000401020 bp 0x7ffff83b5cb0 sp 0x7ffff83b5ca8
WRITE of size 4 at 0x7ffff83b5d2c thread T0
    #0 0x40101f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_32-bad_m+0x40101f)
    #1 0x401189  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_32-bad_m+0x401189)
    #2 0x7f5499faec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_32-bad_m+0x400c69)

Address 0x7ffff83b5d2c is located in stack of thread T0 at offset 108 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_32-bad_m+0x400d3f)

  This frame has 4 object(s):
    [32, 36) ''
    [48, 64) ''
    [80, 94) ''
    [112, 152) '' <== Memory access at offset 108 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_32-bad_m+0x40101f) 
Shadow bytes around the buggy address:
  0x10007f06eb50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f06eb60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f06eb70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f06eb80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f06eb90: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f2 00 00
=>0x10007f06eba0: f2 f2 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3
  0x10007f06ebb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f06ebc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f06ebd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f06ebe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f06ebf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13462==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_32-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 12 times to write data ]
0x2e38 [0x30]: failed to process type: 9
[ perf record: Captured and wrote 0.024 MB perf.data ]
0x5770 [0]: failed to process type: 154
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_33-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 56 AddrPE: [78<--79]	
   %9 = alloca [10 x i32], align 16 {  }	1	2
48(16) 10(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %33, i32* %3, align 4
Found Instruction =   store i8 0, i8* %43, align 1
Found Instruction =   store i32 %45, i32* %1, align 4
Found Instruction =   store i32 1, i32* %61, align 4
Found Instruction =   %69 = load i32, i32* %68, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_33-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13527==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe7907306c at pc 0x000000401040 bp 0x7ffe79072ff0 sp 0x7ffe79072fe8
WRITE of size 4 at 0x7ffe7907306c thread T0
    #0 0x40103f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_33-bad_m+0x40103f)
    #1 0x4011a9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_33-bad_m+0x4011a9)
    #2 0x7fbdcae93c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_33-bad_m+0x400c69)

Address 0x7ffe7907306c is located in stack of thread T0 at offset 108 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_33-bad_m+0x400d3f)

  This frame has 4 object(s):
    [32, 36) ''
    [48, 64) ''
    [80, 94) ''
    [112, 152) '' <== Memory access at offset 108 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_33-bad_m+0x40103f) 
Shadow bytes around the buggy address:
  0x10004f2065b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f2065c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f2065d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f2065e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f2065f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10004f206600: f1 f1 f1 f1 04 f2 00 00 f2 f2 00 06 f2[f2]00 00
  0x10004f206610: 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10004f206620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f206630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f206640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004f206650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13527==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_33-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (248 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_34-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 56 AddrPE: [78<--79]	
   %9 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %33, i32* %3, align 4
Found Instruction =   store i8 0, i8* %43, align 1
Found Instruction =   store i32 %45, i32* %1, align 4
Found Instruction =   store i32 1, i32* %63, align 4
Found Instruction =   %71 = load i32, i32* %70, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_34-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13585==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff88fbd1cc at pc 0x000000400ffd bp 0x7fff88fbd150 sp 0x7fff88fbd148
WRITE of size 4 at 0x7fff88fbd1cc thread T0
    #0 0x400ffc  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_34-bad_m+0x400ffc)
    #1 0x401169  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_34-bad_m+0x401169)
    #2 0x7f5245666c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_34-bad_m+0x400c69)

Address 0x7fff88fbd1cc is located in stack of thread T0 at offset 108 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_34-bad_m+0x400d3f)

  This frame has 4 object(s):
    [32, 36) ''
    [48, 64) ''
    [80, 94) ''
    [112, 152) '' <== Memory access at offset 108 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_34-bad_m+0x400ffc) 
Shadow bytes around the buggy address:
  0x1000711ef9e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000711ef9f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000711efa00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000711efa10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000711efa20: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x1000711efa30: 04 f2 00 00 f2 f2 00 06 f2[f2]00 00 00 00 00 f3
  0x1000711efa40: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000711efa50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000711efa60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000711efa70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000711efa80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13585==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_34-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_41-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 64 AddrPE: [191<--192]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %29, i32* %2, align 4
Found Instruction =   store i8 0, i8* %39, align 1
Found Instruction =   store i32 %41, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_41-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13649==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff19bb85fc at pc 0x0000004010e9 bp 0x7fff19bb85d0 sp 0x7fff19bb85c8
WRITE of size 4 at 0x7fff19bb85fc thread T0
    #0 0x4010e8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_41-bad_m+0x4010e8)
    #1 0x400f49  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_41-bad_m+0x400f49)
    #2 0x401239  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_41-bad_m+0x401239)
    #3 0x7f84d5314c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_41-bad_m+0x400c69)

Address 0x7fff19bb85fc is located in stack of thread T0 at offset 28 in frame
    #0 0x400fbf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_41-bad_m+0x400fbf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_41-bad_m+0x4010e8) 
Shadow bytes around the buggy address:
  0x10006336f060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006336f070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006336f080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006336f090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006336f0a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10006336f0b0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x10006336f0c0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10006336f0d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006336f0e0: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f3 f3
  0x10006336f0f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006336f100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13649==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_41-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (270 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_42-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 59 AddrPE: [127<--128]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 50 AddrPE: [66<--67]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 1, i32* %12, align 4
Found Instruction =   %20 = load i32, i32* %19, align 4
Found Instruction =   store i32 %30, i32* %3, align 4
Found Instruction =   store i8 0, i8* %40, align 1
Found Instruction =   store i32 %42, i32* %2, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_42-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13712==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd817aea3c at pc 0x000000400e82 bp 0x7ffd817aea10 sp 0x7ffd817aea08
WRITE of size 4 at 0x7ffd817aea3c thread T0
    #0 0x400e81  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_42-bad_m+0x400e81)
    #1 0x401249  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_42-bad_m+0x401249)
    #2 0x7f1126c89c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_42-bad_m+0x400c69)

Address 0x7ffd817aea3c is located in stack of thread T0 at offset 28 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_42-bad_m+0x400d3f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_42-bad_m+0x400e81) 
Shadow bytes around the buggy address:
  0x1000302edcf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000302edd00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000302edd10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000302edd20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000302edd30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000302edd40: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x1000302edd50: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000302edd60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000302edd70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000302edd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000302edd90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13712==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_42-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (251 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_43-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 59 AddrPE: [125<--126]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 50 AddrPE: [66<--67]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
46(16) 8(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 1, i32* %10, align 4
Found Instruction =   %18 = load i32, i32* %17, align 4
Found Instruction =   store i32 %30, i32* %3, align 4
Found Instruction =   store i8 0, i8* %40, align 1
Found Instruction =   store i32 %42, i32* %43, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_43-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13776==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd8ccdf70c at pc 0x000000400e80 bp 0x7ffd8ccdf6d0 sp 0x7ffd8ccdf6c8
WRITE of size 4 at 0x7ffd8ccdf70c thread T0
    #0 0x400e7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_43-bad_m+0x400e7f)
    #1 0x401279  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_43-bad_m+0x401279)
    #2 0x7fbd115b4c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_43-bad_m+0x400c69)

Address 0x7ffd8ccdf70c is located in stack of thread T0 at offset 44 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_43-bad_m+0x400d3f)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_43-bad_m+0x400e7f) 
Shadow bytes around the buggy address:
  0x100031993e90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031993ea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031993eb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031993ec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031993ed0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100031993ee0: 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3 00 00 00 00
  0x100031993ef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031993f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031993f10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031993f20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031993f30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13776==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_43-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (239 samples) ]
zero-sized data (perf.data), nothing to do!
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_44-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 1
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
46(16) 4(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(1) 0(0) 3(1) 
Found Instruction =   store i32 %30, i32* %3, align 4
Found Instruction =   store i8 0, i8* %40, align 1
Found Instruction =   store i32 %42, i32* %1, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_44-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_44-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 28 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (271 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_45-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 65 AddrPE: [193<--194]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %29, i32* %2, align 4
Found Instruction =   store i8 0, i8* %39, align 1
Found Instruction =   store i32 %41, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_45-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13898==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd776604bc at pc 0x000000401100 bp 0x7ffd77660490 sp 0x7ffd77660488
WRITE of size 4 at 0x7ffd776604bc thread T0
    #0 0x4010ff  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_45-bad_m+0x4010ff)
    #1 0x400f50  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_45-bad_m+0x400f50)
    #2 0x401249  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_45-bad_m+0x401249)
    #3 0x7f3fe2004c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_45-bad_m+0x400c69)

Address 0x7ffd776604bc is located in stack of thread T0 at offset 28 in frame
    #0 0x400fcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_45-bad_m+0x400fcf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_45-bad_m+0x4010ff) 
Shadow bytes around the buggy address:
  0x10002eec4040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eec4050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eec4060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eec4070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eec4080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10002eec4090: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x10002eec40a0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eec40b0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x10002eec40c0: 00 00 f2 f2 00 06 f3 f3 00 00 00 00 00 00 00 00
  0x10002eec40d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eec40e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13898==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_45-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (251 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_51-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 71 AddrPE: [224<--225]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %29, i32* %2, align 4
Found Instruction =   store i8 0, i8* %39, align 1
Found Instruction =   store i32 %41, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_51-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==13966==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffe0932c9bc at pc 0x000000401149 bp 0x7ffe0932c990 sp 0x7ffe0932c988
WRITE of size 4 at 0x7ffe0932c9bc thread T0
    #0 0x401148  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_51-bad_m+0x401148)
    #1 0x400f49  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_51-bad_m+0x400f49)
    #2 0x400fe9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_51-bad_m+0x400fe9)
    #3 0x7f0045c01c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_51-bad_m+0x400c69)

Address 0x7ffe0932c9bc is located in stack of thread T0 at offset 28 in frame
    #0 0x40101f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_51-bad_m+0x40101f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_51-bad_m+0x401148) 
Shadow bytes around the buggy address:
  0x10004125d8e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004125d8f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004125d900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004125d910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004125d920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10004125d930: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x10004125d940: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004125d950: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x10004125d960: 00 00 f2 f2 00 06 f3 f3 00 00 00 00 00 00 00 00
  0x10004125d970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004125d980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13966==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_51-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 25 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (245 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_52-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 73 AddrPE: [234<--235]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %29, i32* %2, align 4
Found Instruction =   store i8 0, i8* %39, align 1
Found Instruction =   store i32 %41, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_52-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14032==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffca5a76e3c at pc 0x000000401169 bp 0x7ffca5a76e10 sp 0x7ffca5a76e08
WRITE of size 4 at 0x7ffca5a76e3c thread T0
    #0 0x401168  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_52-bad_m+0x401168)
    #1 0x401022  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_52-bad_m+0x401022)
    #2 0x400f49  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_52-bad_m+0x400f49)
    #3 0x400fe9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_52-bad_m+0x400fe9)
    #4 0x7fc4d5a12c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #5 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_52-bad_m+0x400c69)

Address 0x7ffca5a76e3c is located in stack of thread T0 at offset 28 in frame
    #0 0x40103f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_52-bad_m+0x40103f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_52-bad_m+0x401168) 
Shadow bytes around the buggy address:
  0x100014b46d70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b46d80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b46d90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b46da0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b46db0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100014b46dc0: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x100014b46dd0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b46de0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b46df0: f1 f1 f1 f1 00 00 f2 f2 00 06 f3 f3 00 00 00 00
  0x100014b46e00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b46e10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14032==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_52-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (236 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_53-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 75 AddrPE: [244<--245]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %29, i32* %2, align 4
Found Instruction =   store i8 0, i8* %39, align 1
Found Instruction =   store i32 %41, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_53-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14097==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fffca61d03c at pc 0x000000401189 bp 0x7fffca61d010 sp 0x7fffca61d008
WRITE of size 4 at 0x7fffca61d03c thread T0
    #0 0x401188  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_53-bad_m+0x401188)
    #1 0x401042  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_53-bad_m+0x401042)
    #2 0x401022  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_53-bad_m+0x401022)
    #3 0x400f49  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_53-bad_m+0x400f49)
    #4 0x400fe9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_53-bad_m+0x400fe9)
    #5 0x7fa888660c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #6 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_53-bad_m+0x400c69)

Address 0x7fffca61d03c is located in stack of thread T0 at offset 28 in frame
    #0 0x40105f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_53-bad_m+0x40105f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_53-bad_m+0x401188) 
Shadow bytes around the buggy address:
  0x1000794bb9b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000794bb9c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000794bb9d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000794bb9e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000794bb9f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000794bba00: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x1000794bba10: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000794bba20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000794bba30: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f3 f3
  0x1000794bba40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000794bba50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14097==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_53-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (248 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 77 AddrPE: [254<--255]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %29, i32* %2, align 4
Found Instruction =   store i8 0, i8* %39, align 1
Found Instruction =   store i32 %41, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14162==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff2895ec9c at pc 0x0000004011a9 bp 0x7fff2895ec70 sp 0x7fff2895ec68
WRITE of size 4 at 0x7fff2895ec9c thread T0
    #0 0x4011a8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad_m+0x4011a8)
    #1 0x401062  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad_m+0x401062)
    #2 0x401042  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad_m+0x401042)
    #3 0x401022  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad_m+0x401022)
    #4 0x400f49  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad_m+0x400f49)
    #5 0x400fe9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad_m+0x400fe9)
    #6 0x7f46d7026c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #7 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad_m+0x400c69)

Address 0x7fff2895ec9c is located in stack of thread T0 at offset 28 in frame
    #0 0x40107f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad_m+0x40107f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad_m+0x4011a8) 
Shadow bytes around the buggy address:
  0x100065123d40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065123d50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065123d60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065123d70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065123d80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100065123d90: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x100065123da0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065123db0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065123dc0: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f3 f3
  0x100065123dd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065123de0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14162==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_54-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (248 samples) ]
WARNING: The perf.data file's data size field is 0 which is unexpected.
Was the 'perf record' command properly terminated?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_61-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 65 AddrPE: [163<--164]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 50 AddrPE: [66<--67]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 1, i32* %12, align 4
Found Instruction =   %20 = load i32, i32* %19, align 4
Found Instruction =   store i32 %30, i32* %3, align 4
Found Instruction =   store i8 0, i8* %40, align 1
Found Instruction =   store i32 %42, i32* %2, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_61-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14228==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff7540283c at pc 0x000000400e82 bp 0x7fff75402810 sp 0x7fff75402808
WRITE of size 4 at 0x7fff7540283c thread T0
    #0 0x400e81  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_61-bad_m+0x400e81)
    #1 0x400fc9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_61-bad_m+0x400fc9)
    #2 0x7f2cf4edec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_61-bad_m+0x400c69)

Address 0x7fff7540283c is located in stack of thread T0 at offset 28 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_61-bad_m+0x400d3f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_61-bad_m+0x400e81) 
Shadow bytes around the buggy address:
  0x10006ea784b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ea784c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ea784d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ea784e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ea784f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10006ea78500: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x10006ea78510: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ea78520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ea78530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ea78540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ea78550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14228==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_61-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (260 samples) ]
0x64e0 [0]: failed to process type: 26064
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_62-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 65 AddrPE: [161<--162]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 50 AddrPE: [66<--67]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
46(16) 8(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 1, i32* %10, align 4
Found Instruction =   %18 = load i32, i32* %17, align 4
Found Instruction =   store i32 %30, i32* %3, align 4
Found Instruction =   store i8 0, i8* %40, align 1
Found Instruction =   store i32 %42, i32* %43, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_62-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14302==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd882e216c at pc 0x000000400e80 bp 0x7ffd882e2130 sp 0x7ffd882e2128
WRITE of size 4 at 0x7ffd882e216c thread T0
    #0 0x400e7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_62-bad_m+0x400e7f)
    #1 0x400fc9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_62-bad_m+0x400fc9)
    #2 0x7fa35072bc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_62-bad_m+0x400c69)

Address 0x7ffd882e216c is located in stack of thread T0 at offset 44 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_62-bad_m+0x400d3f)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_62-bad_m+0x400e7f) 
Shadow bytes around the buggy address:
  0x1000310543d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000310543e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000310543f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031054400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031054410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100031054420: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04[f2]00 00
  0x100031054430: 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100031054440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031054450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031054460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031054470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14302==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_62-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
0x2e38 [0x30]: failed to process type: 3
[ perf record: Captured and wrote 0.024 MB perf.data ]
0x62c0 [0x30]: failed to process type: 9
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_63-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 72 AddrPE: [225<--226]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
48(16) 10(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %29, i32* %2, align 4
Found Instruction =   store i8 0, i8* %39, align 1
Found Instruction =   store i32 %41, i32* %1, align 4
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_63-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14361==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffde09ed55c at pc 0x0000004011b0 bp 0x7ffde09ed530 sp 0x7ffde09ed528
WRITE of size 4 at 0x7ffde09ed55c thread T0
    #0 0x4011af  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_63-bad_m+0x4011af)
    #1 0x400fa9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_63-bad_m+0x400fa9)
    #2 0x401049  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_63-bad_m+0x401049)
    #3 0x7f1fcf73ac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_63-bad_m+0x400c69)

Address 0x7ffde09ed55c is located in stack of thread T0 at offset 28 in frame
    #0 0x40107f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_63-bad_m+0x40107f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_63-bad_m+0x4011af) 
Shadow bytes around the buggy address:
  0x10003c135a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003c135a60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003c135a70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003c135a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003c135a90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10003c135aa0: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x10003c135ab0: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10003c135ac0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003c135ad0: f1 f1 f1 f1 04 f2 00 00 f2 f2 00 06 f3 f3 f3 f3
  0x10003c135ae0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003c135af0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14361==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_63-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (245 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_64-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 73 AddrPE: [228<--229]	
   %6 = alloca [10 x i32], align 16 {  }	1	2
50(17) 12(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %29, i32* %2, align 4
Found Instruction =   store i8 0, i8* %39, align 1
Found Instruction =   store i32 %41, i32* %1, align 4
Found Instruction =   store i32 1, i32* %17, align 4
Found Instruction =   %25 = load i32, i32* %24, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_64-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14404==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffff91d01fc at pc 0x0000004011b8 bp 0x7ffff91d01d0 sp 0x7ffff91d01c8
WRITE of size 4 at 0x7ffff91d01fc thread T0
    #0 0x4011b7  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_64-bad_m+0x4011b7)
    #1 0x400fa9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_64-bad_m+0x400fa9)
    #2 0x401049  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_64-bad_m+0x401049)
    #3 0x7fb28901ec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_64-bad_m+0x400c69)

Address 0x7ffff91d01fc is located in stack of thread T0 at offset 28 in frame
    #0 0x40107f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_64-bad_m+0x40107f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_64-bad_m+0x4011b7) 
Shadow bytes around the buggy address:
  0x10007f231fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f231ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f232000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f232010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f232020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007f232030: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x10007f232040: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10007f232050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f232060: 00 00 00 00 f1 f1 f1 f1 04 f2 00 00 f2 f2 00 06
  0x10007f232070: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f232080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14404==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_64-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (236 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_65-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 1
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
46(16) 4(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(1) 0(0) 3(1) 
Found Instruction =   store i32 %30, i32* %3, align 4
Found Instruction =   store i8 0, i8* %40, align 1
Found Instruction =   store i32 %42, i32* %1, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_65-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_65-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 25 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (247 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_66-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 3
AddrVFGNode ID: 49 AddrPE: [64<--65]	
   %2 = alloca [5 x i32], align 16 {  }	1	5
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 73 AddrPE: [231<--232]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
49(17) 11(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 10(3) 0(0) 10(3) 
Found Instruction =   store i32 %30, i32* %3, align 4
Found Instruction =   store i8 0, i8* %40, align 1
Found Instruction =   store i32 %42, i32* %1, align 4
Found Instruction =   store i32 %50, i32* %51, align 8
Found Instruction =   store i32* %0, i32** %2, align 8
Found Instruction =   %6 = load i32*, i32** %2, align 8
Found Instruction =   %8 = load i32, i32* %7, align 4
Found Instruction =   store i32 %8, i32* %3, align 4
Found Instruction =   store i32 1, i32* %15, align 4
Found Instruction =   %23 = load i32, i32* %22, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_66-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14474==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffca618b69c at pc 0x0000004012a5 bp 0x7ffca618b670 sp 0x7ffca618b668
WRITE of size 4 at 0x7ffca618b69c thread T0
    #0 0x4012a4  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_66-bad_m+0x4012a4)
    #1 0x401033  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_66-bad_m+0x401033)
    #2 0x4010f9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_66-bad_m+0x4010f9)
    #3 0x7f390d9afc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400cc9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_66-bad_m+0x400cc9)

Address 0x7ffca618b69c is located in stack of thread T0 at offset 28 in frame
    #0 0x40112f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_66-bad_m+0x40112f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_66-bad_m+0x4012a4) 
Shadow bytes around the buggy address:
  0x100014c29680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014c29690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014c296a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014c296b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014c296c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100014c296d0: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x100014c296e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014c296f0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 04 f2
  0x100014c29700: f2 f2 f2 f2 00 00 f2 f2 00 06 f3 f3 00 00 00 00
  0x100014c29710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014c29720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14474==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_66-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 25 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (246 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_67-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 73 AddrPE: [232<--233]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %30, i32* %3, align 4
Found Instruction =   store i8 0, i8* %40, align 1
Found Instruction =   store i32 %42, i32* %1, align 4
Found Instruction =   store i32 1, i32* %15, align 4
Found Instruction =   %23 = load i32, i32* %22, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_67-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14505==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc20edb74c at pc 0x000000401166 bp 0x7ffc20edb710 sp 0x7ffc20edb708
WRITE of size 4 at 0x7ffc20edb74c thread T0
    #0 0x401165  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_67-bad_m+0x401165)
    #1 0x400f5d  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_67-bad_m+0x400f5d)
    #2 0x400ff9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_67-bad_m+0x400ff9)
    #3 0x7fc73ca4bc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_67-bad_m+0x400c69)

Address 0x7ffc20edb74c is located in stack of thread T0 at offset 44 in frame
    #0 0x40102f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_67-bad_m+0x40102f)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_67-bad_m+0x401165) 
Shadow bytes around the buggy address:
  0x1000041d3690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000041d36a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000041d36b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000041d36c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000041d36d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000041d36e0: 00 00 00 00 f1 f1 f1 f1 04[f2]00 00 00 00 00 f3
  0x1000041d36f0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000041d3700: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x1000041d3710: 04 f2 00 00 f2 f2 00 06 f3 f3 f3 f3 00 00 00 00
  0x1000041d3720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000041d3730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14505==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_67-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 21 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (250 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_68-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 55 AddrPE: [76<--77]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 74 AddrPE: [231<--232]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %29, i32* %2, align 4
Found Instruction =   store i8 0, i8* %39, align 1
Found Instruction =   store i32 %41, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_68-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14536==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffe3aded5dc at pc 0x000000401160 bp 0x7ffe3aded5b0 sp 0x7ffe3aded5a8
WRITE of size 4 at 0x7ffe3aded5dc thread T0
    #0 0x40115f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_68-bad_m+0x40115f)
    #1 0x400f52  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_68-bad_m+0x400f52)
    #2 0x400ff9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_68-bad_m+0x400ff9)
    #3 0x7f51b386dc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400c69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_68-bad_m+0x400c69)

Address 0x7ffe3aded5dc is located in stack of thread T0 at offset 28 in frame
    #0 0x40102f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_68-bad_m+0x40102f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_68-bad_m+0x40115f) 
Shadow bytes around the buggy address:
  0x1000475b5a60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000475b5a70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000475b5a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000475b5a90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000475b5aa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000475b5ab0: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x1000475b5ac0: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x1000475b5ad0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000475b5ae0: f1 f1 f1 f1 00 00 f2 f2 00 06 f3 f3 00 00 00 00
  0x1000475b5af0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000475b5b00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14536==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_68-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 19 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (239 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_72-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 21
AddrVFGNode ID: 256 AddrPE: [1311<--1312]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #17 {  }	3	194
AddrVFGNode ID: 438 AddrPE: [2603<--2604]	
   %4 = alloca i32*, align 8 {  }	2	6
AddrVFGNode ID: 439 AddrPE: [2605<--2606]	
   %5 = alloca i32*, align 8 {  }	2	2
AddrVFGNode ID: 277 AddrPE: [1449<--1450]	
   %6 = alloca %"class.std::vector"*, align 8 {  }	1	32
AddrVFGNode ID: 421 AddrPE: [2495<--2496]	
   %4 = alloca i32*, align 8 {  }	1	6
AddrVFGNode ID: 239 AddrPE: [1194<--1195]	
   %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	5
AddrVFGNode ID: 275 AddrPE: [1428<--1429]	
   %6 = alloca i32*, align 8 {  }	1	5
AddrVFGNode ID: 469 AddrPE: [2812<--2813]	
   %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	5
AddrVFGNode ID: 405 AddrPE: [2397<--2398]	
   %4 = alloca i64*, align 8 {  }	1	5
AddrVFGNode ID: 406 AddrPE: [2399<--2400]	
   %5 = alloca i64*, align 8 {  }	1	5
AddrVFGNode ID: 338 AddrPE: [2000<--2001]	
   %4 = alloca %"class.std::vector"*, align 8 {  }	1	4
AddrVFGNode ID: 304 AddrPE: [1798<--1799]	
   %4 = alloca %"struct.std::vector<int>::_Temporary_value"*, align 8 {  }	1	4
AddrVFGNode ID: 331 AddrPE: [1954<--1955]	
   %2 = alloca %"struct.std::vector<int>::_Temporary_value"*, align 8 {  }	1	3
AddrVFGNode ID: 59 AddrPE: [74<--75]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 167 AddrPE: [763<--764]	
   %2 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 133 AddrPE: [538<--539]	
   %2 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 245 AddrPE: [1248<--1249]	
   %3 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 145 AddrPE: [624<--625]	
   %4 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 483 AddrPE: [2884<--2885]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 149 AddrPE: [649<--650]	
   %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 251 AddrPE: [1289<--1290]	
   %4 = alloca %"class.std::allocator"*, align 8 {  }	1	2
568(193) 504(169) 228(8) 194(4)  - 0(0) 0(0) 27(9) 204(4) 0(0) 265(21) 
Found Instruction =   store i32 %48, i32* %3, align 4
Found Instruction =   store i8 0, i8* %58, align 1
Found Instruction =   store i32 %60, i32* %1, align 4
Found Instruction =   store i32* %70, i32** %71, align 8
Found Instruction =   %73 = load i32*, i32** %72, align 8
Found Instruction =   store i32* %74, i32** %76, align 8
Found Instruction =   store i32* %77, i32** %78, align 8
Found Instruction =   %80 = load i32*, i32** %79, align 8
Found Instruction =   store i32* %81, i32** %83, align 8
Found Instruction =   store i32* %84, i32** %85, align 8
Found Instruction =   %87 = load i32*, i32** %86, align 8
Found Instruction =   store i32* %88, i32** %90, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   store i32* %9, i32** %6, align 8
Found Instruction =   store i32* %1, i32** %15, align 8
Found Instruction =   store i32* %17, i32** %18, align 8
Found Instruction =   store i64 %19, i64* %10, align 8
Found Instruction =   store i32* %32, i32** %33, align 8
Found Instruction =   %35 = load i32*, i32** %34, align 8
Found Instruction =   store i32* %19, i32** %20, align 8
Found Instruction =   store i32* %22, i32** %23, align 8
Found Instruction =   %27 = load i32*, i32** %26, align 8
Found Instruction =   %31 = load i32*, i32** %30, align 8
Found Instruction =   %33 = load i32*, i32** %32, align 8
Found Instruction =   store i32* %34, i32** %38, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %13 = load i32*, i32** %12, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   %11 = load i32*, i32** %10, align 8
Found Instruction =   %14 = load i32*, i32** %13, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %13 = load i32*, i32** %5, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   store i32* %1, i32** %4, align 8
Found Instruction =   %5 = load i32*, i32** %3, align 8
Found Instruction =   %6 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   store i32* %1, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %11 = load i32*, i32** %10, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   store i32* %0, i32** %11, align 8
Found Instruction =   store i32* %1, i32** %12, align 8
Found Instruction =   store i32* %2, i32** %7, align 8
Found Instruction =   %17 = load i32*, i32** %7, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   %21 = load i32*, i32** %20, align 8
Found Instruction =   store i32* %0, i32** %10, align 8
Found Instruction =   store i32* %1, i32** %11, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %16 = load i32*, i32** %6, align 8
Found Instruction =   %18 = load i32*, i32** %17, align 8
Found Instruction =   %20 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %0, i32** %9, align 8
Found Instruction =   store i32* %1, i32** %10, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %15 = load i32*, i32** %6, align 8
Found Instruction =   %17 = load i32*, i32** %16, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   store i32* %0, i32** %11, align 8
Found Instruction =   store i32* %1, i32** %12, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %16 = load i32*, i32** %15, align 8
Found Instruction =   store i32* %17, i32** %18, align 8
Found Instruction =   %22 = load i32*, i32** %21, align 8
Found Instruction =   store i32* %23, i32** %24, align 8
Found Instruction =   %25 = load i32*, i32** %6, align 8
Found Instruction =   %27 = load i32*, i32** %26, align 8
Found Instruction =   %29 = load i32*, i32** %28, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %0, i32** %9, align 8
Found Instruction =   store i32* %1, i32** %10, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %14 = load i32*, i32** %13, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   %21 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   %5 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %2, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %19 = load i32*, i32** %4, align 8
Found Instruction =   %24 = load i32*, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %8, i32** %6, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %3, align 8
Found Instruction =   %5 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %3, align 8
Found Instruction =   store i32* null, i32** %8, align 8
Found Instruction =   store i32* null, i32** %9, align 8
Found Instruction =   store i32* null, i32** %10, align 8
Found Instruction =   store i32* %7, i32** %9, align 8
Found Instruction =   %12 = load i32*, i32** %11, align 8
Found Instruction =   store i32* %12, i32** %14, align 8
Found Instruction =   %17 = load i32*, i32** %16, align 8
Found Instruction =   store i32* %19, i32** %21, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
Found Instruction =   %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
Found Instruction =   store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
Found Instruction =   %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %10 = load i32*, i32** %9, align 8
Found Instruction =   store i32* %11, i32** %6, align 8
Found Instruction =   store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
Found Instruction =   %22 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
Found Instruction =   %29 = load i32*, i32** %28, align 8
Found Instruction =   %33 = load i32*, i32** %32, align 8
Found Instruction =   store i32* %44, i32** %45, align 8
Found Instruction =   %50 = load i32*, i32** %49, align 8
Found Instruction =   store i32* %50, i32** %15, align 8
Found Instruction =   %58 = load i32*, i32** %57, align 8
Found Instruction =   %65 = load i32*, i32** %64, align 8
Found Instruction =   %69 = load i32*, i32** %68, align 8
Found Instruction =   %78 = load i32*, i32** %77, align 8
Found Instruction =   store i32* %79, i32** %77, align 8
Found Instruction =   %105 = load i32*, i32** %104, align 8
Found Instruction =   store i32* %112, i32** %116, align 8
Found Instruction =   %123 = load i32*, i32** %122, align 8
Found Instruction =   %132 = load i32*, i32** %131, align 8
Found Instruction =   store i32* %133, i32** %131, align 8
Found Instruction =   store i64 %143, i64* %16, align 8
Found Instruction =   store i32* %144, i32** %145, align 8
Found Instruction =   store i32* %149, i32** %19, align 8
Found Instruction =   %150 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %150, i32** %20, align 8
Found Instruction =   %151 = load i32*, i32** %19, align 8
Found Instruction =   %163 = load i32*, i32** %162, align 8
Found Instruction =   %166 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %169, i32** %20, align 8
Found Instruction =   %179 = load i32*, i32** %178, align 8
Found Instruction =   store i32* %183, i32** %20, align 8
Found Instruction =   %192 = load i32*, i32** %20, align 8
Found Instruction =   %195 = load i32*, i32** %19, align 8
Found Instruction =   %198 = load i32*, i32** %19, align 8
Found Instruction =   %211 = load i32*, i32** %19, align 8
Found Instruction =   %212 = load i32*, i32** %20, align 8
Found Instruction =   %218 = load i32*, i32** %19, align 8
Found Instruction =   %226 = load i32*, i32** %225, align 8
Found Instruction =   %230 = load i32*, i32** %229, align 8
Found Instruction =   %237 = load i32*, i32** %236, align 8
Found Instruction =   %241 = load i32*, i32** %240, align 8
Found Instruction =   %245 = load i32*, i32** %244, align 8
Found Instruction =   %250 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %250, i32** %253, align 8
Found Instruction =   %254 = load i32*, i32** %20, align 8
Found Instruction =   store i32* %254, i32** %257, align 8
Found Instruction =   %258 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %260, i32** %263, align 8
Found Instruction =   store %"struct.std::vector<int>::_Temporary_value"* %0, %"struct.std::vector<int>::_Temporary_value"** %4, align 8
Found Instruction =   %7 = load %"struct.std::vector<int>::_Temporary_value"*, %"struct.std::vector<int>::_Temporary_value"** %4, align 8
Found Instruction =   store %"class.std::vector"* %9, %"class.std::vector"** %8, align 8
Found Instruction =   %12 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %10 = load i32*, i32** %9, align 8
Found Instruction =   store %"struct.std::vector<int>::_Temporary_value"* %0, %"struct.std::vector<int>::_Temporary_value"** %2, align 8
Found Instruction =   %3 = load %"struct.std::vector<int>::_Temporary_value"*, %"struct.std::vector<int>::_Temporary_value"** %2, align 8
Found Instruction =   %5 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
Found Instruction =   store i32* %0, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
Found Instruction =   %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
Found Instruction =   store i64 %19, i64* %8, align 8
Found Instruction =   store i64 %22, i64* %7, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %19 = load i32*, i32** %4, align 8
Found Instruction =   store i64* %0, i64** %4, align 8
Found Instruction =   store i64* %1, i64** %5, align 8
Found Instruction =   %6 = load i64*, i64** %4, align 8
Found Instruction =   %7 = load i64, i64* %6, align 8
Found Instruction =   %8 = load i64*, i64** %5, align 8
Found Instruction =   %9 = load i64, i64* %8, align 8
Found Instruction =   %12 = load i64*, i64** %5, align 8
Found Instruction =   store i64* %12, i64** %3, align 8
Found Instruction =   %14 = load i64*, i64** %4, align 8
Found Instruction =   store i64* %14, i64** %3, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %17 = load i32*, i32** %4, align 8
Found Instruction =   store i32 %16, i32* %17, align 4
Found Instruction =   %21 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %22, i32** %4, align 8
Found Instruction =   %24 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %11 = load i32*, i32** %4, align 8
Found Instruction =   %12 = load i32*, i32** %5, align 8
Found Instruction =   %16 = load i32*, i32** %4, align 8
Found Instruction =   store i32 %15, i32* %16, align 4
Found Instruction =   %18 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %19, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %22 = load i32*, i32** %4, align 8
Found Instruction =   %27 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   %4 = load i32*, i32** %3, align 8
Found Instruction =   store i32** %1, i32*** %4, align 8
Found Instruction =   %7 = load i32**, i32*** %4, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %8, i32** %6, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   store i32* null, i32** %5, align 8
Found Instruction =   store i32* null, i32** %6, align 8
Found Instruction =   store i32* null, i32** %7, align 8
Found Instruction =   %6 = load i32, i32* %5, align 4
Found Instruction =   store i32 %6, i32* %2, align 4
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
Found Instruction =   %9 = load i32*, i32** %8, align 8
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_72-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14567==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fffdf039d1c at pc 0x000000401da1 bp 0x7fffdf039cf0 sp 0x7fffdf039ce8
WRITE of size 4 at 0x7fffdf039d1c thread T0
    #0 0x401da0  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_72-bad_m+0x401da0)
    #1 0x401a21  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_72-bad_m+0x401a21)
    #2 0x401be9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_72-bad_m+0x401be9)
    #3 0x7f2ee069ec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x4012c9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_72-bad_m+0x4012c9)

Address 0x7fffdf039d1c is located in stack of thread T0 at offset 28 in frame
    #0 0x401c1f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_72-bad_m+0x401c1f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_72-bad_m+0x401da0) 
Shadow bytes around the buggy address:
  0x10007bdff350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007bdff360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007bdff370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007bdff380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007bdff390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007bdff3a0: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10007bdff3b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007bdff3c0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x10007bdff3d0: 04 f2 00 00 00 f2 f2 f2 f2 f2 00 00 f2 f2 00 06
  0x10007bdff3e0: f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2
  0x10007bdff3f0: f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14567==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_72-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (253 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_73-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 23
AddrVFGNode ID: 223 AddrPE: [1127<--1128]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #16 {  }	4	50
AddrVFGNode ID: 102 AddrPE: [376<--377]	
   %3 = alloca %"struct.std::__detail::_List_node_base"*, align 8 {  }	3	5
AddrVFGNode ID: 101 AddrPE: [374<--375]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	3	4
AddrVFGNode ID: 103 AddrPE: [378<--379]	
   %4 = alloca %"struct.std::_List_node.0"*, align 8 {  }	2	7
AddrVFGNode ID: 238 AddrPE: [1224<--1225]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	4
AddrVFGNode ID: 146 AddrPE: [647<--648]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	3
AddrVFGNode ID: 160 AddrPE: [735<--736]	
   %2 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 159 AddrPE: [721<--722]	
   %4 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 273 AddrPE: [1469<--1470]	
   %2 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 55 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 158 AddrPE: [719<--720]	
   %3 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 235 AddrPE: [1206<--1207]	
   %3 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 109 AddrPE: [430<--431]	
   %2 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 265 AddrPE: [1393<--1394]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 149 AddrPE: [667<--668]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	2
AddrVFGNode ID: 115 AddrPE: [468<--469]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 251 AddrPE: [1324<--1325]	
   %2 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 218 AddrPE: [1104<--1105]	
   %4 = alloca %"class.std::allocator"*, align 8 {  }	1	2
AddrVFGNode ID: 174 AddrPE: [821<--822]	
   %7 = alloca %"struct.std::_List_node.0"*, align 8 {  }	1	2
AddrVFGNode ID: 198 AddrPE: [964<--965]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 168 AddrPE: [790<--791]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	2
AddrVFGNode ID: 137 AddrPE: [602<--603]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 119 AddrPE: [494<--495]	
   %3 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
288(116) 235(95) 58(6) 52(4)  - 0(0) 0(0) 81(18) 55(3) 0(0) 92(23) 
Found Instruction =   store i32 %39, i32* %3, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %17, %"struct.std::__detail::_List_node_base"** %18, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %20, %"struct.std::__detail::_List_node_base"** %21, align 8
Found Instruction =   %23 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %22, align 8
Found Instruction =   %25 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %24, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %6 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %10, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %11, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %13 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %19 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %20, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %21 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %24 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %23, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %24, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %25 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store i32* %26, i32** %5, align 8
Found Instruction =   %31 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %0, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %5 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %3, align 8
Found Instruction =   %8 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %11, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %8, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %3, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %1, %"struct.std::_List_const_iterator"** %4, align 8
Found Instruction =   %5 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %3, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   %8 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %4, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %7, %"struct.std::__detail::_List_node_base"** %8, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %7, align 8
Found Instruction =   %13 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %7, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %16 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %18 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %24 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %2, %"struct.std::_List_node.0"** %6, align 8
Found Instruction =   %12 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %6, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %11, align 8
Found Instruction =   %5 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %11 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %10, align 8
Found Instruction =   store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
Found Instruction =   %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %0, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %7, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %3, align 8
Found Instruction =   %5 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %3, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %6, %"struct.std::__detail::_List_node_base"** %10, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %13, %"struct.std::__detail::_List_node_base"** %17, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_73-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14598==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffca59d897c at pc 0x00000040187c bp 0x7ffca59d8950 sp 0x7ffca59d8948
WRITE of size 4 at 0x7ffca59d897c thread T0
    #0 0x40187b  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_73-bad_m+0x40187b)
    #1 0x401540  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_73-bad_m+0x401540)
    #2 0x401709  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_73-bad_m+0x401709)
    #3 0x7fa62fb55c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x401109  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_73-bad_m+0x401109)

Address 0x7ffca59d897c is located in stack of thread T0 at offset 28 in frame
    #0 0x40173f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_73-bad_m+0x40173f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_73-bad_m+0x40187b) 
Shadow bytes around the buggy address:
  0x100014b330d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b330e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b330f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b33100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b33110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100014b33120: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x100014b33130: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x100014b33140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014b33150: 00 00 00 00 f1 f1 f1 f1 04 f2 00 00 00 f2 f2 f2
  0x100014b33160: f2 f2 00 00 f2 f2 00 06 f2 f2 00 00 00 f3 f3 f3
  0x100014b33170: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14598==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_73-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_74-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 51
AddrVFGNode ID: 264 AddrPE: [1490<--1491]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #18 {  }	4	201
AddrVFGNode ID: 387 AddrPE: [2373<--2374]	
   %6 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	3	15
AddrVFGNode ID: 201 AddrPE: [962<--963]	
   %6 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	18
AddrVFGNode ID: 343 AddrPE: [1991<--1992]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	2	11
AddrVFGNode ID: 207 AddrPE: [974<--975]	
   %12 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	10
AddrVFGNode ID: 482 AddrPE: [3025<--3026]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	9
AddrVFGNode ID: 116 AddrPE: [431<--432]	
   %4 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	7
AddrVFGNode ID: 363 AddrPE: [2193<--2194]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	2	5
AddrVFGNode ID: 388 AddrPE: [2375<--2376]	
   %7 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	17
AddrVFGNode ID: 204 AddrPE: [968<--969]	
   %9 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	10
AddrVFGNode ID: 203 AddrPE: [966<--967]	
   %8 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, align 8 {  }	1	9
AddrVFGNode ID: 202 AddrPE: [964<--965]	
   %7 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	9
AddrVFGNode ID: 224 AddrPE: [1204<--1205]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	8
AddrVFGNode ID: 220 AddrPE: [1177<--1178]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	7
AddrVFGNode ID: 219 AddrPE: [1158<--1159]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	7
AddrVFGNode ID: 385 AddrPE: [2369<--2370]	
   %4 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	6
AddrVFGNode ID: 190 AddrPE: [877<--878]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	6
AddrVFGNode ID: 200 AddrPE: [960<--961]	
   %5 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	6
AddrVFGNode ID: 222 AddrPE: [1200<--1201]	
   %5 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	6
AddrVFGNode ID: 366 AddrPE: [2199<--2200]	
   %9 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	5
AddrVFGNode ID: 162 AddrPE: [706<--707]	
   %4 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	5
AddrVFGNode ID: 402 AddrPE: [2524<--2525]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 449 AddrPE: [2818<--2819]	
   %6 = alloca %"struct.std::pair"*, align 8 {  }	1	4
AddrVFGNode ID: 409 AddrPE: [2581<--2582]	
   %5 = alloca %"struct.std::_Rb_tree_node"**, align 8 {  }	1	4
AddrVFGNode ID: 380 AddrPE: [2341<--2342]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 408 AddrPE: [2579<--2580]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 395 AddrPE: [2470<--2471]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 299 AddrPE: [1721<--1722]	
   %5 = alloca i32*, align 8 {  }	1	3
AddrVFGNode ID: 58 AddrPE: [73<--74]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 117 AddrPE: [433<--434]	
   %5 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	3
AddrVFGNode ID: 161 AddrPE: [704<--705]	
   %3 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 170 AddrPE: [757<--758]	
   %4 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	3
AddrVFGNode ID: 198 AddrPE: [930<--931]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 129 AddrPE: [516<--517]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 114 AddrPE: [413<--414]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 227 AddrPE: [1239<--1240]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 228 AddrPE: [1250<--1251]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 128 AddrPE: [506<--507]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 300 AddrPE: [1723<--1724]	
   %6 = alloca i32*, align 8 {  }	1	3
AddrVFGNode ID: 297 AddrPE: [1706<--1707]	
   %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 292 AddrPE: [1677<--1678]	
   %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 293 AddrPE: [1679<--1680]	
   %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 259 AddrPE: [1467<--1468]	
   %4 = alloca %"struct.std::less"*, align 8 {  }	1	2
AddrVFGNode ID: 504 AddrPE: [3166<--3167]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 481 AddrPE: [3023<--3024]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
AddrVFGNode ID: 169 AddrPE: [755<--756]	
   %3 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 473 AddrPE: [2968<--2969]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
AddrVFGNode ID: 487 AddrPE: [3082<--3083]	
   %2 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 374 AddrPE: [2290<--2291]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	2
AddrVFGNode ID: 121 AddrPE: [465<--466]	
   %2 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 142 AddrPE: [592<--593]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
700(246) 589(199) 219(8) 219(10)  - 0(0) 0(0) 287(39) 214(5) 0(0) 308(51) 
Found Instruction =   store i32 %42, i32* %3, align 4
Found Instruction =   store i8 0, i8* %52, align 1
Found Instruction =   store i32 %54, i32* %1, align 4
Found Instruction =   store i32 %64, i32* %65, align 4
Found Instruction =   store i32 %67, i32* %68, align 4
Found Instruction =   store i32 %70, i32* %71, align 4
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %16, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %18, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
Found Instruction =   %9 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %19, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %3, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %1, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %3, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %17, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %21, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"* %3, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %16, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %20, align 8
Found Instruction =   %21 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %24 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %23, align 8
Found Instruction =   %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %32 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %38, align 8
Found Instruction =   %46 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %49 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %50, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %51 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %53, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %55 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %58 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %60, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %62 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %64 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %63, %"struct.std::_Rb_tree_node_base"** %65, align 8
Found Instruction =   %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %67 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %66, %"struct.std::_Rb_tree_node_base"** %69, align 8
Found Instruction =   %70 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %73 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %72, align 8
Found Instruction =   %76 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %79 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %81 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %85 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %84, %"struct.std::_Rb_tree_node_base"** %87, align 8
Found Instruction =   %89 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %90, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %91 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %93, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %101 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %12, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %16 = load i32, i32* %15, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store i32 %16, i32* %19, align 8
Found Instruction =   %20 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
Found Instruction =   %23 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %25, align 8
Found Instruction =   %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %7, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
Found Instruction =   %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32, i32* %8, align 4
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   %11 = load i32, i32* %10, align 4
Found Instruction =   store %"struct.std::_Rb_tree_node"* %25, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %37, %"struct.std::_Rb_tree_node_base"** %36, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %38, align 8
Found Instruction =   %48 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %51, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %61 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %11, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %17 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %19, align 8
Found Instruction =   %21 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %20, align 8
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %43, %"struct.std::_Rb_tree_node_base"** %42, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %44, align 8
Found Instruction =   %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %51, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %58, align 8
Found Instruction =   %61 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %60, align 8
Found Instruction =   %72 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %71, align 8
Found Instruction =   %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %77, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %91, %"struct.std::_Rb_tree_node_base"** %90, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %93, %"struct.std::_Rb_tree_node_base"** %92, align 8
Found Instruction =   %99 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %98, align 8
Found Instruction =   %107 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %106, align 8
Found Instruction =   %109 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %108, align 8
Found Instruction =   %120 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %119, align 8
Found Instruction =   %125 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %124, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %138, %"struct.std::_Rb_tree_node_base"** %137, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %140, %"struct.std::_Rb_tree_node_base"** %139, align 8
Found Instruction =   %145 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %144, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %3, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %22 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store i8 %29, i8* %10, align 1
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %45 = load i64, i64* %44, align 8
Found Instruction =   store i64 %46, i64* %44, align 8
Found Instruction =   %47 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %12, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %25 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store i8 %28, i8* %8, align 1
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %40, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"** %47, align 8
Found Instruction =   %58 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %57, align 8
Found Instruction =   %67 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %66, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %13, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %13, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %13, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %14, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::pair"* %0, %"struct.std::pair"** %6, align 8
Found Instruction =   %9 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
Found Instruction =   store i32 %15, i32* %11, align 4
Found Instruction =   store i32 0, i32* %16, align 4
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %23 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   %25 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %27, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %29 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %31, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_74-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14629==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe8b59916c at pc 0x000000401c1b bp 0x7ffe8b599130 sp 0x7ffe8b599128
WRITE of size 4 at 0x7ffe8b59916c thread T0
    #0 0x401c1a  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_74-bad_m+0x401c1a)
    #1 0x40190d  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_74-bad_m+0x40190d)
    #2 0x401a99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_74-bad_m+0x401a99)
    #3 0x7fcc50e5ac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x4013d9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_74-bad_m+0x4013d9)

Address 0x7ffe8b59916c is located in stack of thread T0 at offset 44 in frame
    #0 0x401acf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_74-bad_m+0x401acf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_74-bad_m+0x401c1a) 
Shadow bytes around the buggy address:
  0x1000516ab1d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000516ab1e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000516ab1f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000516ab200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000516ab210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000516ab220: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04[f2]00 00
  0x1000516ab230: 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x1000516ab240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000516ab250: f1 f1 f1 f1 00 00 00 00 00 00 f2 f2 f2 f2 00 00
  0x1000516ab260: f2 f2 00 06 f2 f2 04 f2 04 f2 04 f2 00 00 00 00
  0x1000516ab270: 00 00 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14629==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_74-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 16 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (164 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_81-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 1
AddrVFGNode ID: 69 AddrPE: [161<--162]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
56(21) 4(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(1) 0(0) 3(1) 
Found Instruction =   store i32 %31, i32* %2, align 4
Found Instruction =   store i8 0, i8* %41, align 1
Found Instruction =   store i32 %43, i32* %1, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_81-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_81-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (278 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_82-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 1
AddrVFGNode ID: 69 AddrPE: [161<--162]	
   %5 = alloca [14 x i8], align 1 {  }	1	3
57(22) 4(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(1) 0(0) 3(1) 
Found Instruction =   store i32 %30, i32* %2, align 4
Found Instruction =   store i8 0, i8* %40, align 1
Found Instruction =   store i32 %42, i32* %1, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_82-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_82-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 28 times to write data ]
[ perf record: Captured and wrote 0.023 MB perf.data (235 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_83-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 1
AddrVFGNode ID: 54 AddrPE: [78<--79]	
   %8 = alloca [14 x i8], align 1 {  }	1	3
51(17) 4(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(1) 0(0) 3(1) 
Found Instruction =   store i32 %35, i32* %5, align 4
Found Instruction =   store i8 0, i8* %45, align 1
Found Instruction =   store i32 %47, i32* %48, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_83-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_83-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 21 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (256 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_84-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 78 AddrPE: [279<--280]	
   %5 = call noalias nonnull i8* @_Znwm(i64 4) #12 {  }	2	11
AddrVFGNode ID: 55 AddrPE: [78<--79]	
   %8 = alloca [14 x i8], align 1 {  }	1	3
55(20) 14(4) 11(1) 0(0)  - 0(0) 0(0) 0(0) 13(2) 0(0) 13(2) 
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"* %0, %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"** %3, align 8
Found Instruction =   %9 = load %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"** %3, align 8
Found Instruction =   store i32 %10, i32* %11, align 4
Found Instruction =   store i32 %35, i32* %5, align 4
Found Instruction =   store i8 0, i8* %45, align 1
Found Instruction =   store i32 %47, i32* %48, align 4
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"* %0, %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"** %2, align 8
Found Instruction =   %5 = load %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"** %2, align 8
Found Instruction =   %8 = load i32, i32* %7, align 4
Found Instruction =   %12 = load i32, i32* %11, align 4
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"* %6, %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"** %2, align 8
Found Instruction =   %9 = load %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_connect_socket_84::CWE124_Buffer_Underwrite__CWE839_connect_socket_84_bad"** %2, align 8
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_84-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==14761==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd4478377c at pc 0x000000401497 bp 0x7ffd44783750 sp 0x7ffd44783748
WRITE of size 4 at 0x7ffd4478377c thread T0
    #0 0x401496  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_84-bad_m+0x401496)
    #1 0x4015c9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_84-bad_m+0x4015c9)
    #2 0x401639  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_84-bad_m+0x401639)
    #3 0x7fb1144fac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400f19  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_84-bad_m+0x400f19)

Address 0x7ffd4478377c is located in stack of thread T0 at offset 28 in frame
    #0 0x4012ef  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_84-bad_m+0x4012ef)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_84-bad_m+0x401496) 
Shadow bytes around the buggy address:
  0x1000288e8690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e86a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e86b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e86c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e86d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000288e86e0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x1000288e86f0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x1000288e8700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e8710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e8720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e8730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14761==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_connect_socket_84-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 19 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_01-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %22, align 4
Found Instruction =   %30 = load i32, i32* %29, align 4
=================================================================
==14794==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff0eb60f7c at pc 0x000000400dce bp 0x7fff0eb60f30 sp 0x7fff0eb60f28
WRITE of size 4 at 0x7fff0eb60f7c thread T0
    #0 0x400dcd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_01-bad_m+0x400dcd)
    #1 0x400f39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_01-bad_m+0x400f39)
    #2 0x7f23ed602c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_01-bad_m+0x400b39)

Address 0x7fff0eb60f7c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_01-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_01-bad_m+0x400dcd) 
Shadow bytes around the buggy address:
  0x100061d64190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061d641a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061d641b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061d641c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061d641d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100061d641e0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 06 f2[f2]
  0x100061d641f0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x100061d64200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061d64210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061d64220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061d64230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14794==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_01-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 20 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (246 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_02-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %22, align 4
Found Instruction =   %30 = load i32, i32* %29, align 4
=================================================================
==14821==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc2578c1fc at pc 0x000000400dce bp 0x7ffc2578c1b0 sp 0x7ffc2578c1a8
WRITE of size 4 at 0x7ffc2578c1fc thread T0
    #0 0x400dcd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_02-bad_m+0x400dcd)
    #1 0x400f39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_02-bad_m+0x400f39)
    #2 0x7f995d494c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_02-bad_m+0x400b39)

Address 0x7ffc2578c1fc is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_02-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_02-bad_m+0x400dcd) 
Shadow bytes around the buggy address:
  0x100004ae97e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004ae97f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004ae9800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004ae9810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004ae9820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100004ae9830: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 06 f2[f2]
  0x100004ae9840: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x100004ae9850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004ae9860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004ae9870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100004ae9880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14821==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_02-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (237 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_03-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %22, align 4
Found Instruction =   %30 = load i32, i32* %29, align 4
=================================================================
==14848==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffdcecad9c at pc 0x000000400dce bp 0x7fffdcecad50 sp 0x7fffdcecad48
WRITE of size 4 at 0x7fffdcecad9c thread T0
    #0 0x400dcd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_03-bad_m+0x400dcd)
    #1 0x400f39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_03-bad_m+0x400f39)
    #2 0x7faebb5ecc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_03-bad_m+0x400b39)

Address 0x7fffdcecad9c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_03-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_03-bad_m+0x400dcd) 
Shadow bytes around the buggy address:
  0x10007b9d1560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b9d1570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b9d1580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b9d1590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b9d15a0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10007b9d15b0: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10007b9d15c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b9d15d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b9d15e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b9d15f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b9d1600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14848==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_03-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (238 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_04-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %22, align 4
Found Instruction =   %30 = load i32, i32* %29, align 4
=================================================================
==14875==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffeb01179c at pc 0x000000400dce bp 0x7fffeb011750 sp 0x7fffeb011748
WRITE of size 4 at 0x7fffeb01179c thread T0
    #0 0x400dcd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_04-bad_m+0x400dcd)
    #1 0x400f39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_04-bad_m+0x400f39)
    #2 0x7f085d838c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_04-bad_m+0x400b39)

Address 0x7fffeb01179c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_04-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_04-bad_m+0x400dcd) 
Shadow bytes around the buggy address:
  0x10007d5fa2a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007d5fa2b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007d5fa2c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007d5fa2d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007d5fa2e0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10007d5fa2f0: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10007d5fa300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007d5fa310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007d5fa320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007d5fa330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007d5fa340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14875==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_04-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 18 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (162 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_05-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 49 AddrPE: [72<--73]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 39 AddrPE: [7<--8]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %29, align 4
Found Instruction =   %37 = load i32, i32* %36, align 4
=================================================================
==14905==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffe0a4859c at pc 0x000000400df3 bp 0x7fffe0a48550 sp 0x7fffe0a48548
WRITE of size 4 at 0x7fffe0a4859c thread T0
    #0 0x400df2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_05-bad_m+0x400df2)
    #1 0x400f69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_05-bad_m+0x400f69)
    #2 0x7fc7c2f04c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_05-bad_m+0x400b39)

Address 0x7fffe0a4859c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_05-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_05-bad_m+0x400df2) 
Shadow bytes around the buggy address:
  0x10007c141060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c141070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c141080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c141090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c1410a0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10007c1410b0: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10007c1410c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c1410d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c1410e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c1410f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c141100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14905==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_05-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 15 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (160 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_06-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %22, align 4
Found Instruction =   %30 = load i32, i32* %29, align 4
=================================================================
==14933==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffedb1ce19c at pc 0x000000400dce bp 0x7ffedb1ce150 sp 0x7ffedb1ce148
WRITE of size 4 at 0x7ffedb1ce19c thread T0
    #0 0x400dcd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_06-bad_m+0x400dcd)
    #1 0x400f39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_06-bad_m+0x400f39)
    #2 0x7fd3f918fc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_06-bad_m+0x400b39)

Address 0x7ffedb1ce19c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_06-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_06-bad_m+0x400dcd) 
Shadow bytes around the buggy address:
  0x10005b631be0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b631bf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b631c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b631c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b631c20: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10005b631c30: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10005b631c40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b631c50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b631c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b631c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b631c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14933==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_06-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 14 times to write data ]
[ perf record: Captured and wrote 0.021 MB perf.data (174 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_07-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 49 AddrPE: [72<--73]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 39 AddrPE: [7<--8]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %29, align 4
Found Instruction =   %37 = load i32, i32* %36, align 4
=================================================================
==14960==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff9b61537c at pc 0x000000400df3 bp 0x7fff9b615330 sp 0x7fff9b615328
WRITE of size 4 at 0x7fff9b61537c thread T0
    #0 0x400df2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_07-bad_m+0x400df2)
    #1 0x400f69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_07-bad_m+0x400f69)
    #2 0x7f8787278c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_07-bad_m+0x400b39)

Address 0x7fff9b61537c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_07-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_07-bad_m+0x400df2) 
Shadow bytes around the buggy address:
  0x1000736baa10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000736baa20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000736baa30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000736baa40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000736baa50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000736baa60: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 06 f2[f2]
  0x1000736baa70: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x1000736baa80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000736baa90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000736baaa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000736baab0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14960==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_07-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 21 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (255 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_08-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fgets
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %29, align 4
Found Instruction =   %37 = load i32, i32* %36, align 4
=================================================================
==14987==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe388b949c at pc 0x000000400df3 bp 0x7ffe388b9450 sp 0x7ffe388b9448
WRITE of size 4 at 0x7ffe388b949c thread T0
    #0 0x400df2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_08-bad_m+0x400df2)
    #1 0x400f79  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_08-bad_m+0x400f79)
    #2 0x7f096199bc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_08-bad_m+0x400b39)

Address 0x7ffe388b949c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_08-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_08-bad_m+0x400df2) 
Shadow bytes around the buggy address:
  0x10004710f240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004710f250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004710f260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004710f270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004710f280: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10004710f290: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10004710f2a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004710f2b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004710f2c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004710f2d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004710f2e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==14987==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_08-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (250 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_09-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %29, align 4
Found Instruction =   %37 = load i32, i32* %36, align 4
=================================================================
==15014==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff79ac753c at pc 0x000000400df3 bp 0x7fff79ac74f0 sp 0x7fff79ac74e8
WRITE of size 4 at 0x7fff79ac753c thread T0
    #0 0x400df2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_09-bad_m+0x400df2)
    #1 0x400f69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_09-bad_m+0x400f69)
    #2 0x7fa09baf9c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_09-bad_m+0x400b39)

Address 0x7fff79ac753c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_09-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_09-bad_m+0x400df2) 
Shadow bytes around the buggy address:
  0x10006f350e50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006f350e60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006f350e70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006f350e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006f350e90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10006f350ea0: f1 f1 f1 f1 00 06 f2[f2]00 00 00 00 00 f3 f3 f3
  0x10006f350eb0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006f350ec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006f350ed0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006f350ee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006f350ef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15014==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_09-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_10-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %29, align 4
Found Instruction =   %37 = load i32, i32* %36, align 4
=================================================================
==15041==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe99ae967c at pc 0x000000400df3 bp 0x7ffe99ae9630 sp 0x7ffe99ae9628
WRITE of size 4 at 0x7ffe99ae967c thread T0
    #0 0x400df2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_10-bad_m+0x400df2)
    #1 0x400f69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_10-bad_m+0x400f69)
    #2 0x7f0dca1aec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_10-bad_m+0x400b39)

Address 0x7ffe99ae967c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_10-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_10-bad_m+0x400df2) 
Shadow bytes around the buggy address:
  0x100053355270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100053355280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100053355290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000533552a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000533552b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000533552c0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 06 f2[f2]
  0x1000533552d0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x1000533552e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000533552f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100053355300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100053355310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15041==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_10-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.021 MB perf.data (171 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_11-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fgets
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %29, align 4
Found Instruction =   %37 = load i32, i32* %36, align 4
=================================================================
==15068==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff97abd71c at pc 0x000000400df7 bp 0x7fff97abd6d0 sp 0x7fff97abd6c8
WRITE of size 4 at 0x7fff97abd71c thread T0
    #0 0x400df6  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_11-bad_m+0x400df6)
    #1 0x400f69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_11-bad_m+0x400f69)
    #2 0x7fac7642cc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_11-bad_m+0x400b39)

Address 0x7fff97abd71c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_11-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_11-bad_m+0x400df6) 
Shadow bytes around the buggy address:
  0x100072f4fa90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100072f4faa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100072f4fab0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100072f4fac0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100072f4fad0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100072f4fae0: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x100072f4faf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100072f4fb00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100072f4fb10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100072f4fb20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100072f4fb30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15068==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_11-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (246 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_12-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 3
AddrVFGNode ID: 52 AddrPE: [76<--77]	
   %6 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 50 AddrPE: [72<--73]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 40 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
45(17) 7(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(3) 0(0) 5(3) 
Found Instruction =   %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %32, align 4
Found Instruction =   %40 = load i32, i32* %39, align 4
Found Instruction =   store i32 1, i32* %58, align 4
Found Instruction =   %66 = load i32, i32* %65, align 4
=================================================================
==15095==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffea290c19c at pc 0x000000400e1a bp 0x7ffea290c150 sp 0x7ffea290c148
WRITE of size 4 at 0x7ffea290c19c thread T0
    #0 0x400e19  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_12-bad_m+0x400e19)
    #1 0x401099  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_12-bad_m+0x401099)
    #2 0x7f83a8f18c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_12-bad_m+0x400b39)

Address 0x7ffea290c19c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_12-bad_m+0x400c0f)

  This frame has 3 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
    [144, 184) ''
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_12-bad_m+0x400e19) 
Shadow bytes around the buggy address:
  0x1000545197e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000545197f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054519800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054519810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054519820: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100054519830: 00 06 f2[f2]00 00 00 00 00 f2 f2 f2 f2 f2 00 00
  0x100054519840: 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100054519850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054519860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054519870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054519880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15095==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_12-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 27 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (239 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_13-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %29, align 4
Found Instruction =   %37 = load i32, i32* %36, align 4
=================================================================
==15130==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd96cb7d9c at pc 0x000000400df3 bp 0x7ffd96cb7d50 sp 0x7ffd96cb7d48
WRITE of size 4 at 0x7ffd96cb7d9c thread T0
    #0 0x400df2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_13-bad_m+0x400df2)
    #1 0x400f69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_13-bad_m+0x400f69)
    #2 0x7f68c1962c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_13-bad_m+0x400b39)

Address 0x7ffd96cb7d9c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_13-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_13-bad_m+0x400df2) 
Shadow bytes around the buggy address:
  0x100032d8ef60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100032d8ef70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100032d8ef80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100032d8ef90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100032d8efa0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100032d8efb0: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x100032d8efc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100032d8efd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100032d8efe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100032d8eff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100032d8f000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15130==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_13-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_14-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %29, align 4
Found Instruction =   %37 = load i32, i32* %36, align 4
=================================================================
==15158==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff25eac1bc at pc 0x000000400df3 bp 0x7fff25eac170 sp 0x7fff25eac168
WRITE of size 4 at 0x7fff25eac1bc thread T0
    #0 0x400df2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_14-bad_m+0x400df2)
    #1 0x400f69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_14-bad_m+0x400f69)
    #2 0x7fa3553bdc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_14-bad_m+0x400b39)

Address 0x7fff25eac1bc is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_14-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_14-bad_m+0x400df2) 
Shadow bytes around the buggy address:
  0x100064bcd7e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064bcd7f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064bcd800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064bcd810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064bcd820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100064bcd830: f1 f1 f1 f1 00 06 f2[f2]00 00 00 00 00 f3 f3 f3
  0x100064bcd840: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064bcd850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064bcd860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064bcd870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064bcd880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15158==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_14-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 19 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (274 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_15-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %22, align 4
Found Instruction =   %30 = load i32, i32* %29, align 4
=================================================================
==15185==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffffeb25d9c at pc 0x000000400dce bp 0x7ffffeb25d50 sp 0x7ffffeb25d48
WRITE of size 4 at 0x7ffffeb25d9c thread T0
    #0 0x400dcd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_15-bad_m+0x400dcd)
    #1 0x400f39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_15-bad_m+0x400f39)
    #2 0x7f4e8a88fc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_15-bad_m+0x400b39)

Address 0x7ffffeb25d9c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_15-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_15-bad_m+0x400dcd) 
Shadow bytes around the buggy address:
  0x10007fd5cb60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fd5cb70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fd5cb80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fd5cb90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fd5cba0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10007fd5cbb0: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10007fd5cbc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fd5cbd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fd5cbe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fd5cbf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007fd5cc00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15185==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_15-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (277 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_16-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %25, align 4
Found Instruction =   %33 = load i32, i32* %32, align 4
=================================================================
==15212==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc740d30bc at pc 0x000000400ddc bp 0x7ffc740d3070 sp 0x7ffc740d3068
WRITE of size 4 at 0x7ffc740d30bc thread T0
    #0 0x400ddb  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_16-bad_m+0x400ddb)
    #1 0x400f49  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_16-bad_m+0x400f49)
    #2 0x7f2e6f1d3c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_16-bad_m+0x400b39)

Address 0x7ffc740d30bc is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_16-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_16-bad_m+0x400ddb) 
Shadow bytes around the buggy address:
  0x10000e8125c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e8125d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e8125e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e8125f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e812600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10000e812610: f1 f1 f1 f1 00 06 f2[f2]00 00 00 00 00 f3 f3 f3
  0x10000e812620: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e812630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e812640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e812650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e812660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15212==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_16-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_17-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 50 AddrPE: [74<--75]	
   %6 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %36, align 4
Found Instruction =   %44 = load i32, i32* %43, align 4
=================================================================
==15239==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffeee0fd39c at pc 0x000000400e0d bp 0x7ffeee0fd350 sp 0x7ffeee0fd348
WRITE of size 4 at 0x7ffeee0fd39c thread T0
    #0 0x400e0c  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_17-bad_m+0x400e0c)
    #1 0x400f79  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_17-bad_m+0x400f79)
    #2 0x7f64d9cdac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_17-bad_m+0x400b39)

Address 0x7ffeee0fd39c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_17-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_17-bad_m+0x400e0c) 
Shadow bytes around the buggy address:
  0x10005dc17a20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005dc17a30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005dc17a40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005dc17a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005dc17a60: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10005dc17a70: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10005dc17a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005dc17a90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005dc17aa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005dc17ab0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005dc17ac0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15239==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_17-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (244 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_18-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 48 AddrPE: [70<--71]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %24, align 4
Found Instruction =   %32 = load i32, i32* %31, align 4
=================================================================
==15266==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff248f159c at pc 0x000000400dd7 bp 0x7fff248f1550 sp 0x7fff248f1548
WRITE of size 4 at 0x7fff248f159c thread T0
    #0 0x400dd6  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_18-bad_m+0x400dd6)
    #1 0x400f39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_18-bad_m+0x400f39)
    #2 0x7f78a4144c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_18-bad_m+0x400b39)

Address 0x7fff248f159c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_18-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_18-bad_m+0x400dd6) 
Shadow bytes around the buggy address:
  0x100064916260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064916270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064916280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064916290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000649162a0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x1000649162b0: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x1000649162c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000649162d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000649162e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000649162f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064916300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15266==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_18-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 20 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_21-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 55 AddrPE: [122<--123]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
=================================================================
==15293==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffcf7fd14bc at pc 0x000000400eeb bp 0x7ffcf7fd1490 sp 0x7ffcf7fd1488
WRITE of size 4 at 0x7ffcf7fd14bc thread T0
    #0 0x400eea  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_21-bad_m+0x400eea)
    #1 0x400d4b  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_21-bad_m+0x400d4b)
    #2 0x401039  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_21-bad_m+0x401039)
    #3 0x7f44c1022c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_21-bad_m+0x400b39)

Address 0x7ffcf7fd14bc is located in stack of thread T0 at offset 28 in frame
    #0 0x400daf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_21-bad_m+0x400daf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_21-bad_m+0x400eea) 
Shadow bytes around the buggy address:
  0x10001eff2240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001eff2250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001eff2260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001eff2270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001eff2280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10001eff2290: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x10001eff22a0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001eff22b0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x10001eff22c0: 00 06 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001eff22d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001eff22e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15293==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_21-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 21 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_22-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 61 AddrPE: [153<--154]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 39 AddrPE: [7<--8]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
=================================================================
==15320==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffc670fce5c at pc 0x000000400f4b bp 0x7ffc670fce30 sp 0x7ffc670fce28
WRITE of size 4 at 0x7ffc670fce5c thread T0
    #0 0x400f4a  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_22-bad_m+0x400f4a)
    #1 0x400d4b  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_22-bad_m+0x400d4b)
    #2 0x400dd9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_22-bad_m+0x400dd9)
    #3 0x7f4ab07b8c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_22-bad_m+0x400b39)

Address 0x7ffc670fce5c is located in stack of thread T0 at offset 28 in frame
    #0 0x400e0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_22-bad_m+0x400e0f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_22-bad_m+0x400f4a) 
Shadow bytes around the buggy address:
  0x10000ce17970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000ce17980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000ce17990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000ce179a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000ce179b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10000ce179c0: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x10000ce179d0: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10000ce179e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000ce179f0: f1 f1 f1 f1 00 06 f3 f3 00 00 00 00 00 00 00 00
  0x10000ce17a00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000ce17a10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15320==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_22-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 21 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (272 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_31-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 50 AddrPE: [74<--75]	
   %6 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %26, align 4
Found Instruction =   %34 = load i32, i32* %33, align 4
=================================================================
==15347==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe319ccd1c at pc 0x000000400ddd bp 0x7ffe319cccd0 sp 0x7ffe319cccc8
WRITE of size 4 at 0x7ffe319ccd1c thread T0
    #0 0x400ddc  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_31-bad_m+0x400ddc)
    #1 0x400f39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_31-bad_m+0x400f39)
    #2 0x7ff310b6dc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_31-bad_m+0x400b39)

Address 0x7ffe319ccd1c is located in stack of thread T0 at offset 60 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_31-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 46) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_31-bad_m+0x400ddc) 
Shadow bytes around the buggy address:
  0x100046331950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100046331960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100046331970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100046331980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100046331990: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x1000463319a0: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x1000463319b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000463319c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000463319d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000463319e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000463319f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15347==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_31-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 14 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (248 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_32-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 52 AddrPE: [78<--79]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
53(18) 15(6) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %32, align 4
Found Instruction =   %40 = load i32, i32* %39, align 4
=================================================================
==15374==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd2fb3fb2c at pc 0x000000400df9 bp 0x7ffd2fb3fad0 sp 0x7ffd2fb3fac8
WRITE of size 4 at 0x7ffd2fb3fb2c thread T0
    #0 0x400df8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_32-bad_m+0x400df8)
    #1 0x400f59  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_32-bad_m+0x400f59)
    #2 0x7fe606c0ec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_32-bad_m+0x400b39)

Address 0x7ffd2fb3fb2c is located in stack of thread T0 at offset 76 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_32-bad_m+0x400c0f)

  This frame has 3 object(s):
    [32, 36) ''
    [48, 62) ''
    [80, 120) '' <== Memory access at offset 76 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_32-bad_m+0x400df8) 
Shadow bytes around the buggy address:
  0x100025f5ff10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100025f5ff20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100025f5ff30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100025f5ff40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100025f5ff50: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100025f5ff60: 04 f2 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3
  0x100025f5ff70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100025f5ff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100025f5ff90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100025f5ffa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100025f5ffb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15374==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_32-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (245 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_33-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 50 AddrPE: [74<--75]	
   %6 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
47(17) 9(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %26, align 4
Found Instruction =   %34 = load i32, i32* %33, align 4
=================================================================
==15401==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffea58739cc at pc 0x000000400de9 bp 0x7ffea5873970 sp 0x7ffea5873968
WRITE of size 4 at 0x7ffea58739cc thread T0
    #0 0x400de8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_33-bad_m+0x400de8)
    #1 0x400f39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_33-bad_m+0x400f39)
    #2 0x7f05ea449c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_33-bad_m+0x400b39)

Address 0x7ffea58739cc is located in stack of thread T0 at offset 76 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_33-bad_m+0x400c0f)

  This frame has 3 object(s):
    [32, 36) ''
    [48, 62) ''
    [80, 120) '' <== Memory access at offset 76 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_33-bad_m+0x400de8) 
Shadow bytes around the buggy address:
  0x100054b066e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054b066f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054b06700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054b06710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054b06720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100054b06730: f1 f1 f1 f1 04 f2 00 06 f2[f2]00 00 00 00 00 f3
  0x100054b06740: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054b06750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054b06760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054b06770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054b06780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15401==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_33-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (238 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_34-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 50 AddrPE: [74<--75]	
   %6 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %28, align 4
Found Instruction =   %36 = load i32, i32* %35, align 4
=================================================================
==15428==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc1cc8fe8c at pc 0x000000400dee bp 0x7ffc1cc8fe30 sp 0x7ffc1cc8fe28
WRITE of size 4 at 0x7ffc1cc8fe8c thread T0
    #0 0x400ded  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_34-bad_m+0x400ded)
    #1 0x400f49  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_34-bad_m+0x400f49)
    #2 0x7fb7c0e4ac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_34-bad_m+0x400b39)

Address 0x7ffc1cc8fe8c is located in stack of thread T0 at offset 76 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_34-bad_m+0x400c0f)

  This frame has 3 object(s):
    [32, 36) ''
    [48, 62) ''
    [80, 120) '' <== Memory access at offset 76 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_34-bad_m+0x400ded) 
Shadow bytes around the buggy address:
  0x100003989f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100003989f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100003989fa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100003989fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100003989fc0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f2 00 06
=>0x100003989fd0: f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 00 00 00 00
  0x100003989fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100003989ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000398a000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000398a010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000398a020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15428==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_34-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (237 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_41-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 54 AddrPE: [119<--120]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==15455==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffdb308e9dc at pc 0x000000400ec9 bp 0x7ffdb308e9b0 sp 0x7ffdb308e9a8
WRITE of size 4 at 0x7ffdb308e9dc thread T0
    #0 0x400ec8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_41-bad_m+0x400ec8)
    #1 0x400d40  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_41-bad_m+0x400d40)
    #2 0x401019  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_41-bad_m+0x401019)
    #3 0x7fbc8d698c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_41-bad_m+0x400b39)

Address 0x7ffdb308e9dc is located in stack of thread T0 at offset 28 in frame
    #0 0x400d9f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_41-bad_m+0x400d9f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_41-bad_m+0x400ec8) 
Shadow bytes around the buggy address:
  0x100036609ce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100036609cf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100036609d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100036609d10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100036609d20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100036609d30: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x100036609d40: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100036609d50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100036609d60: f1 f1 f1 f1 00 06 f3 f3 00 00 00 00 00 00 00 00
  0x100036609d70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100036609d80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15455==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_41-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (239 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_42-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 47 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [6<--7]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   store i32 1, i32* %12, align 4
Found Instruction =   %20 = load i32, i32* %19, align 4
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
=================================================================
==15482==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffc73d6179c at pc 0x000000400d52 bp 0x7ffc73d61770 sp 0x7ffc73d61768
WRITE of size 4 at 0x7ffc73d6179c thread T0
    #0 0x400d51  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_42-bad_m+0x400d51)
    #1 0x401029  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_42-bad_m+0x401029)
    #2 0x7fc729bd6c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_42-bad_m+0x400b39)

Address 0x7ffc73d6179c is located in stack of thread T0 at offset 28 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_42-bad_m+0x400c0f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_42-bad_m+0x400d51) 
Shadow bytes around the buggy address:
  0x10000e7a42a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e7a42b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e7a42c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e7a42d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e7a42e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10000e7a42f0: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10000e7a4300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e7a4310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e7a4320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e7a4330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e7a4340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15482==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_42-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 21 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_43-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 47 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [6<--7]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
45(17) 7(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   store i32 1, i32* %10, align 4
Found Instruction =   %18 = load i32, i32* %17, align 4
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
=================================================================
==15509==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe73c1614c at pc 0x000000400d50 bp 0x7ffe73c16110 sp 0x7ffe73c16108
WRITE of size 4 at 0x7ffe73c1614c thread T0
    #0 0x400d4f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_43-bad_m+0x400d4f)
    #1 0x401029  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_43-bad_m+0x401029)
    #2 0x7fae47597c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_43-bad_m+0x400b39)

Address 0x7ffe73c1614c is located in stack of thread T0 at offset 44 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_43-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_43-bad_m+0x400d4f) 
Shadow bytes around the buggy address:
  0x10004e77abd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e77abe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e77abf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e77ac00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e77ac10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10004e77ac20: 00 00 00 00 f1 f1 f1 f1 04[f2]00 00 00 00 00 f3
  0x10004e77ac30: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e77ac40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e77ac50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e77ac60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e77ac70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15509==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_43-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 12 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (244 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_44-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 1
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
45(17) 3(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 1(1) 0(0) 1(1) 
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_44-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_45-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 55 AddrPE: [121<--122]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==15564==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffe007fe59c at pc 0x000000400ee0 bp 0x7ffe007fe570 sp 0x7ffe007fe568
WRITE of size 4 at 0x7ffe007fe59c thread T0
    #0 0x400edf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_45-bad_m+0x400edf)
    #1 0x400d47  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_45-bad_m+0x400d47)
    #2 0x401029  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_45-bad_m+0x401029)
    #3 0x7ffa2955ac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_45-bad_m+0x400b39)

Address 0x7ffe007fe59c is located in stack of thread T0 at offset 28 in frame
    #0 0x400daf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_45-bad_m+0x400daf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_45-bad_m+0x400edf) 
Shadow bytes around the buggy address:
  0x1000400f7c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000400f7c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000400f7c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000400f7c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000400f7ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000400f7cb0: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x1000400f7cc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000400f7cd0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 06 f3 f3
  0x1000400f7ce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000400f7cf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000400f7d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15564==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_45-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (251 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_51-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fgets
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 60 AddrPE: [150<--151]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==15591==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd8efed1dc at pc 0x000000400f29 bp 0x7ffd8efed1b0 sp 0x7ffd8efed1a8
WRITE of size 4 at 0x7ffd8efed1dc thread T0
    #0 0x400f28  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_51-bad_m+0x400f28)
    #1 0x400d40  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_51-bad_m+0x400d40)
    #2 0x400dc9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_51-bad_m+0x400dc9)
    #3 0x7f198c7b8c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_51-bad_m+0x400b39)

Address 0x7ffd8efed1dc is located in stack of thread T0 at offset 28 in frame
    #0 0x400dff  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_51-bad_m+0x400dff)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_51-bad_m+0x400f28) 
Shadow bytes around the buggy address:
  0x100031df59e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031df59f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031df5a00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031df5a10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031df5a20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100031df5a30: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x100031df5a40: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100031df5a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031df5a60: f1 f1 f1 f1 00 06 f3 f3 00 00 00 00 00 00 00 00
  0x100031df5a70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031df5a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15591==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_51-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_52-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 62 AddrPE: [160<--161]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==15618==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd199f811c at pc 0x000000400f49 bp 0x7ffd199f80f0 sp 0x7ffd199f80e8
WRITE of size 4 at 0x7ffd199f811c thread T0
    #0 0x400f48  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_52-bad_m+0x400f48)
    #1 0x400e02  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_52-bad_m+0x400e02)
    #2 0x400d40  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_52-bad_m+0x400d40)
    #3 0x400dc9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_52-bad_m+0x400dc9)
    #4 0x7fb661166c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #5 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_52-bad_m+0x400b39)

Address 0x7ffd199f811c is located in stack of thread T0 at offset 28 in frame
    #0 0x400e1f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_52-bad_m+0x400e1f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_52-bad_m+0x400f48) 
Shadow bytes around the buggy address:
  0x100023336fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100023336fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100023336ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100023337000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100023337010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100023337020: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x100023337030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100023337040: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x100023337050: 00 06 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100023337060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100023337070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15618==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_52-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.023 MB perf.data (235 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_53-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fgets
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 64 AddrPE: [170<--171]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==15645==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffcee05d3bc at pc 0x000000400f69 bp 0x7ffcee05d390 sp 0x7ffcee05d388
WRITE of size 4 at 0x7ffcee05d3bc thread T0
    #0 0x400f68  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_53-bad_m+0x400f68)
    #1 0x400e22  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_53-bad_m+0x400e22)
    #2 0x400e02  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_53-bad_m+0x400e02)
    #3 0x400d40  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_53-bad_m+0x400d40)
    #4 0x400dc9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_53-bad_m+0x400dc9)
    #5 0x7f714a717c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #6 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_53-bad_m+0x400b39)

Address 0x7ffcee05d3bc is located in stack of thread T0 at offset 28 in frame
    #0 0x400e3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_53-bad_m+0x400e3f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_53-bad_m+0x400f68) 
Shadow bytes around the buggy address:
  0x10001dc03a20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001dc03a30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001dc03a40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001dc03a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001dc03a60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10001dc03a70: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x10001dc03a80: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001dc03a90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001dc03aa0: 00 00 00 00 f1 f1 f1 f1 00 06 f3 f3 00 00 00 00
  0x10001dc03ab0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001dc03ac0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15645==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_53-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 16 times to write data ]
[ perf record: Captured and wrote 0.021 MB perf.data (171 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_54-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fgets
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 66 AddrPE: [180<--181]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==15672==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffe3a34733c at pc 0x000000400f89 bp 0x7ffe3a347310 sp 0x7ffe3a347308
WRITE of size 4 at 0x7ffe3a34733c thread T0
    #0 0x400f88  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_54-bad_m+0x400f88)
    #1 0x400e42  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_54-bad_m+0x400e42)
    #2 0x400e22  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_54-bad_m+0x400e22)
    #3 0x400e02  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_54-bad_m+0x400e02)
    #4 0x400d40  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_54-bad_m+0x400d40)
    #5 0x400dc9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_54-bad_m+0x400dc9)
    #6 0x7fc6b5041c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #7 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_54-bad_m+0x400b39)

Address 0x7ffe3a34733c is located in stack of thread T0 at offset 28 in frame
    #0 0x400e5f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_54-bad_m+0x400e5f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_54-bad_m+0x400f88) 
Shadow bytes around the buggy address:
  0x100047460e10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100047460e20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100047460e30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100047460e40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100047460e50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100047460e60: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x100047460e70: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100047460e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100047460e90: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 06 f3 f3
  0x100047460ea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100047460eb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15672==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_54-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 15 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (158 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_61-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 47 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [10<--11]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   store i32 1, i32* %12, align 4
Found Instruction =   %20 = load i32, i32* %19, align 4
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
=================================================================
==15699==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffca1f6b01c at pc 0x000000400d52 bp 0x7ffca1f6aff0 sp 0x7ffca1f6afe8
WRITE of size 4 at 0x7ffca1f6b01c thread T0
    #0 0x400d51  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_61-bad_m+0x400d51)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_61-bad_m+0x400e99)
    #2 0x7f7ab08b0c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_61-bad_m+0x400b39)

Address 0x7ffca1f6b01c is located in stack of thread T0 at offset 28 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_61-bad_m+0x400c0f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_61-bad_m+0x400d51) 
Shadow bytes around the buggy address:
  0x1000143e55b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000143e55c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000143e55d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000143e55e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000143e55f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000143e5600: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x1000143e5610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000143e5620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000143e5630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000143e5640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000143e5650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15699==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_61-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (250 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_62-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 47 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [10<--11]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
45(17) 7(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   store i32 1, i32* %10, align 4
Found Instruction =   %18 = load i32, i32* %17, align 4
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
=================================================================
==15728==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff6529a5cc at pc 0x000000400d50 bp 0x7fff6529a590 sp 0x7fff6529a588
WRITE of size 4 at 0x7fff6529a5cc thread T0
    #0 0x400d4f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_62-bad_m+0x400d4f)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_62-bad_m+0x400e99)
    #2 0x7f41ac00dc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_62-bad_m+0x400b39)

Address 0x7fff6529a5cc is located in stack of thread T0 at offset 44 in frame
    #0 0x400c0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_62-bad_m+0x400c0f)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_62-bad_m+0x400d4f) 
Shadow bytes around the buggy address:
  0x10006ca4b460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ca4b470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ca4b480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ca4b490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ca4b4a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10006ca4b4b0: 00 00 00 00 f1 f1 f1 f1 04[f2]00 00 00 00 00 f3
  0x10006ca4b4c0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ca4b4d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ca4b4e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ca4b4f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ca4b500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15728==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_62-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 17 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (165 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_63-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 61 AddrPE: [151<--152]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
47(17) 9(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
=================================================================
==15756==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffe86f6103c at pc 0x000000400f60 bp 0x7ffe86f61010 sp 0x7ffe86f61008
WRITE of size 4 at 0x7ffe86f6103c thread T0
    #0 0x400f5f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_63-bad_m+0x400f5f)
    #1 0x400d5b  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_63-bad_m+0x400d5b)
    #2 0x400df9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_63-bad_m+0x400df9)
    #3 0x7fab62883c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_63-bad_m+0x400b39)

Address 0x7ffe86f6103c is located in stack of thread T0 at offset 28 in frame
    #0 0x400e2f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_63-bad_m+0x400e2f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_63-bad_m+0x400f5f) 
Shadow bytes around the buggy address:
  0x100050de41b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100050de41c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100050de41d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100050de41e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100050de41f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100050de4200: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x100050de4210: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100050de4220: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x100050de4230: 04 f2 00 06 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100050de4240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100050de4250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15756==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_63-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 15 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (167 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_64-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 62 AddrPE: [154<--155]	
   %6 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
49(18) 11(6) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %17, align 4
Found Instruction =   %25 = load i32, i32* %24, align 4
=================================================================
==15783==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffe551641bc at pc 0x000000400f68 bp 0x7ffe55164190 sp 0x7ffe55164188
WRITE of size 4 at 0x7ffe551641bc thread T0
    #0 0x400f67  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_64-bad_m+0x400f67)
    #1 0x400d5b  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_64-bad_m+0x400d5b)
    #2 0x400df9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_64-bad_m+0x400df9)
    #3 0x7f5e9e6cbc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_64-bad_m+0x400b39)

Address 0x7ffe551641bc is located in stack of thread T0 at offset 28 in frame
    #0 0x400e2f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_64-bad_m+0x400e2f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_64-bad_m+0x400f67) 
Shadow bytes around the buggy address:
  0x10004aa247e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004aa247f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004aa24800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004aa24810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004aa24820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10004aa24830: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x10004aa24840: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004aa24850: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x10004aa24860: 04 f2 00 06 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10004aa24870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004aa24880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15783==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_64-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.023 MB perf.data (234 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_65-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 1
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
45(17) 3(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 1(1) 0(0) 1(1) 
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_65-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_66-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 3
AddrVFGNode ID: 46 AddrPE: [66<--67]	
   %2 = alloca [5 x i32], align 16 {  }	1	5
AddrVFGNode ID: 62 AddrPE: [157<--158]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
48(18) 10(6) 0(0) 0(0)  - 0(0) 0(0) 0(0) 8(3) 0(0) 8(3) 
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 %15, i32* %16, align 8
Found Instruction =   store i32* %0, i32** %2, align 8
Found Instruction =   %6 = load i32*, i32** %2, align 8
Found Instruction =   %8 = load i32, i32* %7, align 4
Found Instruction =   store i32 %8, i32* %3, align 4
Found Instruction =   store i32 1, i32* %15, align 4
Found Instruction =   %23 = load i32, i32* %22, align 4
=================================================================
==15838==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff7f7a1bbc at pc 0x000000401005 bp 0x7fff7f7a1b90 sp 0x7fff7f7a1b88
WRITE of size 4 at 0x7fff7f7a1bbc thread T0
    #0 0x401004  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_66-bad_m+0x401004)
    #1 0x400db6  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_66-bad_m+0x400db6)
    #2 0x400e59  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_66-bad_m+0x400e59)
    #3 0x7f7d708b6c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_66-bad_m+0x400b39)

Address 0x7fff7f7a1bbc is located in stack of thread T0 at offset 28 in frame
    #0 0x400e8f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_66-bad_m+0x400e8f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_66-bad_m+0x401004) 
Shadow bytes around the buggy address:
  0x10006feec320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006feec330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006feec340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006feec350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006feec360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10006feec370: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x10006feec380: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006feec390: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x10006feec3a0: 00 00 04 f2 f2 f2 f2 f2 00 06 f3 f3 00 00 00 00
  0x10006feec3b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006feec3c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15838==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_66-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (238 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_67-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 62 AddrPE: [158<--159]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %15, align 4
Found Instruction =   %23 = load i32, i32* %22, align 4
=================================================================
==15865==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc7a4f73ec at pc 0x000000400f66 bp 0x7ffc7a4f73b0 sp 0x7ffc7a4f73a8
WRITE of size 4 at 0x7ffc7a4f73ec thread T0
    #0 0x400f65  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_67-bad_m+0x400f65)
    #1 0x400d5d  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_67-bad_m+0x400d5d)
    #2 0x400df9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_67-bad_m+0x400df9)
    #3 0x7f24a2e39c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_67-bad_m+0x400b39)

Address 0x7ffc7a4f73ec is located in stack of thread T0 at offset 44 in frame
    #0 0x400e2f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_67-bad_m+0x400e2f)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_67-bad_m+0x400f65) 
Shadow bytes around the buggy address:
  0x10000f496e20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000f496e30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000f496e40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000f496e50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000f496e60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10000f496e70: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04[f2]00 00
  0x10000f496e80: 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10000f496e90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000f496ea0: f1 f1 f1 f1 04 f2 00 06 f3 f3 f3 f3 00 00 00 00
  0x10000f496eb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000f496ec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15865==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_67-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (256 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_68-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fgets
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 63 AddrPE: [157<--158]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 41 AddrPE: [11<--12]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
43(16) 5(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==15892==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fffe480c4dc at pc 0x000000400f40 bp 0x7fffe480c4b0 sp 0x7fffe480c4a8
WRITE of size 4 at 0x7fffe480c4dc thread T0
    #0 0x400f3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_68-bad_m+0x400f3f)
    #1 0x400d49  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_68-bad_m+0x400d49)
    #2 0x400dd9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_68-bad_m+0x400dd9)
    #3 0x7fd4f5a74c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_68-bad_m+0x400b39)

Address 0x7fffe480c4dc is located in stack of thread T0 at offset 28 in frame
    #0 0x400e0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_68-bad_m+0x400e0f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_68-bad_m+0x400f3f) 
Shadow bytes around the buggy address:
  0x10007c8f9840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c8f9850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c8f9860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c8f9870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c8f9880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007c8f9890: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x10007c8f98a0: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10007c8f98b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c8f98c0: f1 f1 f1 f1 00 06 f3 f3 00 00 00 00 00 00 00 00
  0x10007c8f98d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007c8f98e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15892==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_68-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 14 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (163 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_72-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 21
AddrVFGNode ID: 246 AddrPE: [1237<--1238]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #17 {  }	3	193
AddrVFGNode ID: 428 AddrPE: [2529<--2530]	
   %4 = alloca i32*, align 8 {  }	2	6
AddrVFGNode ID: 429 AddrPE: [2531<--2532]	
   %5 = alloca i32*, align 8 {  }	2	2
AddrVFGNode ID: 267 AddrPE: [1375<--1376]	
   %6 = alloca %"class.std::vector"*, align 8 {  }	1	32
AddrVFGNode ID: 411 AddrPE: [2421<--2422]	
   %4 = alloca i32*, align 8 {  }	1	6
AddrVFGNode ID: 229 AddrPE: [1120<--1121]	
   %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	5
AddrVFGNode ID: 395 AddrPE: [2323<--2324]	
   %4 = alloca i64*, align 8 {  }	1	5
AddrVFGNode ID: 265 AddrPE: [1354<--1355]	
   %6 = alloca i32*, align 8 {  }	1	5
AddrVFGNode ID: 459 AddrPE: [2738<--2739]	
   %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	5
AddrVFGNode ID: 396 AddrPE: [2325<--2326]	
   %5 = alloca i64*, align 8 {  }	1	5
AddrVFGNode ID: 294 AddrPE: [1724<--1725]	
   %4 = alloca %"struct.std::vector<int>::_Temporary_value"*, align 8 {  }	1	4
AddrVFGNode ID: 328 AddrPE: [1926<--1927]	
   %4 = alloca %"class.std::vector"*, align 8 {  }	1	4
AddrVFGNode ID: 321 AddrPE: [1880<--1881]	
   %2 = alloca %"struct.std::vector<int>::_Temporary_value"*, align 8 {  }	1	3
AddrVFGNode ID: 157 AddrPE: [689<--690]	
   %2 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 135 AddrPE: [550<--551]	
   %4 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 123 AddrPE: [464<--465]	
   %2 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 472 AddrPE: [2808<--2809]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 235 AddrPE: [1174<--1175]	
   %3 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 241 AddrPE: [1215<--1216]	
   %4 = alloca %"class.std::allocator"*, align 8 {  }	1	2
AddrVFGNode ID: 139 AddrPE: [575<--576]	
   %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 44 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
568(194) 504(170) 227(8) 193(4)  - 0(0) 0(0) 27(9) 201(4) 0(0) 262(21) 
Found Instruction =   %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32* %33, i32** %34, align 8
Found Instruction =   %36 = load i32*, i32** %35, align 8
Found Instruction =   store i32* %37, i32** %39, align 8
Found Instruction =   store i32* %40, i32** %41, align 8
Found Instruction =   %43 = load i32*, i32** %42, align 8
Found Instruction =   store i32* %44, i32** %46, align 8
Found Instruction =   store i32* %47, i32** %48, align 8
Found Instruction =   %50 = load i32*, i32** %49, align 8
Found Instruction =   store i32* %51, i32** %53, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   store i32* %9, i32** %6, align 8
Found Instruction =   store i32* %1, i32** %15, align 8
Found Instruction =   store i32* %17, i32** %18, align 8
Found Instruction =   store i64 %19, i64* %10, align 8
Found Instruction =   store i32* %23, i32** %24, align 8
Found Instruction =   store i32* %32, i32** %33, align 8
Found Instruction =   %35 = load i32*, i32** %34, align 8
Found Instruction =   store i32* %19, i32** %20, align 8
Found Instruction =   store i32* %22, i32** %23, align 8
Found Instruction =   %27 = load i32*, i32** %26, align 8
Found Instruction =   %31 = load i32*, i32** %30, align 8
Found Instruction =   %33 = load i32*, i32** %32, align 8
Found Instruction =   store i32* %34, i32** %38, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %13 = load i32*, i32** %12, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   %11 = load i32*, i32** %10, align 8
Found Instruction =   %14 = load i32*, i32** %13, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %13 = load i32*, i32** %5, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   store i32* %1, i32** %4, align 8
Found Instruction =   %5 = load i32*, i32** %3, align 8
Found Instruction =   %6 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   store i32* %1, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %11 = load i32*, i32** %10, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   store i32* %0, i32** %11, align 8
Found Instruction =   store i32* %1, i32** %12, align 8
Found Instruction =   store i32* %2, i32** %7, align 8
Found Instruction =   %17 = load i32*, i32** %7, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   %21 = load i32*, i32** %20, align 8
Found Instruction =   store i32* %0, i32** %10, align 8
Found Instruction =   store i32* %1, i32** %11, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %16 = load i32*, i32** %6, align 8
Found Instruction =   %18 = load i32*, i32** %17, align 8
Found Instruction =   %20 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %0, i32** %9, align 8
Found Instruction =   store i32* %1, i32** %10, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %15 = load i32*, i32** %6, align 8
Found Instruction =   %17 = load i32*, i32** %16, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   store i32* %0, i32** %11, align 8
Found Instruction =   store i32* %1, i32** %12, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %16 = load i32*, i32** %15, align 8
Found Instruction =   store i32* %17, i32** %18, align 8
Found Instruction =   %22 = load i32*, i32** %21, align 8
Found Instruction =   store i32* %23, i32** %24, align 8
Found Instruction =   %25 = load i32*, i32** %6, align 8
Found Instruction =   %27 = load i32*, i32** %26, align 8
Found Instruction =   %29 = load i32*, i32** %28, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %0, i32** %9, align 8
Found Instruction =   store i32* %1, i32** %10, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %14 = load i32*, i32** %13, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   %21 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   %5 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %2, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %19 = load i32*, i32** %4, align 8
Found Instruction =   %24 = load i32*, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %8, i32** %6, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %3, align 8
Found Instruction =   %5 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %3, align 8
Found Instruction =   store i32* null, i32** %8, align 8
Found Instruction =   store i32* null, i32** %9, align 8
Found Instruction =   store i32* null, i32** %10, align 8
Found Instruction =   store i32* %7, i32** %9, align 8
Found Instruction =   %12 = load i32*, i32** %11, align 8
Found Instruction =   store i32* %12, i32** %14, align 8
Found Instruction =   %17 = load i32*, i32** %16, align 8
Found Instruction =   store i32* %19, i32** %21, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
Found Instruction =   %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
Found Instruction =   store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
Found Instruction =   %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %10 = load i32*, i32** %9, align 8
Found Instruction =   store i32* %11, i32** %6, align 8
Found Instruction =   store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
Found Instruction =   %22 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
Found Instruction =   %29 = load i32*, i32** %28, align 8
Found Instruction =   %33 = load i32*, i32** %32, align 8
Found Instruction =   store i32* %44, i32** %45, align 8
Found Instruction =   %50 = load i32*, i32** %49, align 8
Found Instruction =   store i32* %50, i32** %15, align 8
Found Instruction =   %58 = load i32*, i32** %57, align 8
Found Instruction =   %65 = load i32*, i32** %64, align 8
Found Instruction =   %69 = load i32*, i32** %68, align 8
Found Instruction =   %78 = load i32*, i32** %77, align 8
Found Instruction =   store i32* %79, i32** %77, align 8
Found Instruction =   %105 = load i32*, i32** %104, align 8
Found Instruction =   store i32* %112, i32** %116, align 8
Found Instruction =   %123 = load i32*, i32** %122, align 8
Found Instruction =   %132 = load i32*, i32** %131, align 8
Found Instruction =   store i32* %133, i32** %131, align 8
Found Instruction =   store i64 %143, i64* %16, align 8
Found Instruction =   store i32* %144, i32** %145, align 8
Found Instruction =   store i32* %149, i32** %19, align 8
Found Instruction =   %150 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %150, i32** %20, align 8
Found Instruction =   %151 = load i32*, i32** %19, align 8
Found Instruction =   %163 = load i32*, i32** %162, align 8
Found Instruction =   %166 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %169, i32** %20, align 8
Found Instruction =   %179 = load i32*, i32** %178, align 8
Found Instruction =   store i32* %183, i32** %20, align 8
Found Instruction =   %192 = load i32*, i32** %20, align 8
Found Instruction =   %195 = load i32*, i32** %19, align 8
Found Instruction =   %198 = load i32*, i32** %19, align 8
Found Instruction =   %211 = load i32*, i32** %19, align 8
Found Instruction =   %212 = load i32*, i32** %20, align 8
Found Instruction =   %218 = load i32*, i32** %19, align 8
Found Instruction =   %226 = load i32*, i32** %225, align 8
Found Instruction =   %230 = load i32*, i32** %229, align 8
Found Instruction =   %237 = load i32*, i32** %236, align 8
Found Instruction =   %241 = load i32*, i32** %240, align 8
Found Instruction =   %245 = load i32*, i32** %244, align 8
Found Instruction =   %250 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %250, i32** %253, align 8
Found Instruction =   %254 = load i32*, i32** %20, align 8
Found Instruction =   store i32* %254, i32** %257, align 8
Found Instruction =   %258 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %260, i32** %263, align 8
Found Instruction =   store %"struct.std::vector<int>::_Temporary_value"* %0, %"struct.std::vector<int>::_Temporary_value"** %4, align 8
Found Instruction =   %7 = load %"struct.std::vector<int>::_Temporary_value"*, %"struct.std::vector<int>::_Temporary_value"** %4, align 8
Found Instruction =   store %"class.std::vector"* %9, %"class.std::vector"** %8, align 8
Found Instruction =   %12 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %10 = load i32*, i32** %9, align 8
Found Instruction =   store %"struct.std::vector<int>::_Temporary_value"* %0, %"struct.std::vector<int>::_Temporary_value"** %2, align 8
Found Instruction =   %3 = load %"struct.std::vector<int>::_Temporary_value"*, %"struct.std::vector<int>::_Temporary_value"** %2, align 8
Found Instruction =   %5 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
Found Instruction =   store i32* %0, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
Found Instruction =   %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
Found Instruction =   store i64 %19, i64* %8, align 8
Found Instruction =   store i64 %22, i64* %7, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %19 = load i32*, i32** %4, align 8
Found Instruction =   store i64* %0, i64** %4, align 8
Found Instruction =   store i64* %1, i64** %5, align 8
Found Instruction =   %6 = load i64*, i64** %4, align 8
Found Instruction =   %7 = load i64, i64* %6, align 8
Found Instruction =   %8 = load i64*, i64** %5, align 8
Found Instruction =   %9 = load i64, i64* %8, align 8
Found Instruction =   %12 = load i64*, i64** %5, align 8
Found Instruction =   store i64* %12, i64** %3, align 8
Found Instruction =   %14 = load i64*, i64** %4, align 8
Found Instruction =   store i64* %14, i64** %3, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %17 = load i32*, i32** %4, align 8
Found Instruction =   store i32 %16, i32* %17, align 4
Found Instruction =   %21 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %22, i32** %4, align 8
Found Instruction =   %24 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %11 = load i32*, i32** %4, align 8
Found Instruction =   %12 = load i32*, i32** %5, align 8
Found Instruction =   %16 = load i32*, i32** %4, align 8
Found Instruction =   store i32 %15, i32* %16, align 4
Found Instruction =   %18 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %19, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %22 = load i32*, i32** %4, align 8
Found Instruction =   %27 = load i32*, i32** %6, align 8
Found Instruction =   store i32** %1, i32*** %4, align 8
Found Instruction =   %7 = load i32**, i32*** %4, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %8, i32** %6, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   store i32* null, i32** %5, align 8
Found Instruction =   store i32* null, i32** %6, align 8
Found Instruction =   store i32* null, i32** %7, align 8
Found Instruction =   %6 = load i32, i32* %5, align 4
Found Instruction =   store i32 %6, i32* %2, align 4
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
Found Instruction =   %9 = load i32*, i32** %8, align 8
=================================================================
==15920==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffcb056e01c at pc 0x000000401ac1 bp 0x7ffcb056dff0 sp 0x7ffcb056dfe8
WRITE of size 4 at 0x7ffcb056e01c thread T0
    #0 0x401ac0  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_72-bad_m+0x401ac0)
    #1 0x40173e  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_72-bad_m+0x40173e)
    #2 0x401909  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_72-bad_m+0x401909)
    #3 0x7fae1ea6dc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x401149  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_72-bad_m+0x401149)

Address 0x7ffcb056e01c is located in stack of thread T0 at offset 28 in frame
    #0 0x40193f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_72-bad_m+0x40193f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_72-bad_m+0x401ac0) 
Shadow bytes around the buggy address:
  0x1000160a5bb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000160a5bc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000160a5bd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000160a5be0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000160a5bf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000160a5c00: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x1000160a5c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000160a5c20: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x1000160a5c30: 04 f2 00 00 00 f2 f2 f2 f2 f2 00 06 f2 f2 00 f2
  0x1000160a5c40: f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2
  0x1000160a5c50: f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15920==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_72-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 20 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_73-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 23
AddrVFGNode ID: 213 AddrPE: [1053<--1054]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #16 {  }	4	50
AddrVFGNode ID: 92 AddrPE: [302<--303]	
   %3 = alloca %"struct.std::__detail::_List_node_base"*, align 8 {  }	3	5
AddrVFGNode ID: 91 AddrPE: [300<--301]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	3	4
AddrVFGNode ID: 93 AddrPE: [304<--305]	
   %4 = alloca %"struct.std::_List_node.0"*, align 8 {  }	2	7
AddrVFGNode ID: 228 AddrPE: [1150<--1151]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	4
AddrVFGNode ID: 149 AddrPE: [647<--648]	
   %4 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 148 AddrPE: [645<--646]	
   %3 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 150 AddrPE: [661<--662]	
   %2 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 262 AddrPE: [1393<--1394]	
   %2 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 136 AddrPE: [573<--574]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	3
AddrVFGNode ID: 105 AddrPE: [394<--395]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 158 AddrPE: [716<--717]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	2
AddrVFGNode ID: 188 AddrPE: [890<--891]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 225 AddrPE: [1132<--1133]	
   %3 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 139 AddrPE: [593<--594]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	2
AddrVFGNode ID: 127 AddrPE: [528<--529]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 164 AddrPE: [747<--748]	
   %7 = alloca %"struct.std::_List_node.0"*, align 8 {  }	1	2
AddrVFGNode ID: 109 AddrPE: [420<--421]	
   %3 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 254 AddrPE: [1317<--1318]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 241 AddrPE: [1250<--1251]	
   %2 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 99 AddrPE: [356<--357]	
   %2 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 208 AddrPE: [1030<--1031]	
   %4 = alloca %"class.std::allocator"*, align 8 {  }	1	2
AddrVFGNode ID: 40 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
287(117) 234(96) 58(6) 52(4)  - 0(0) 0(0) 81(18) 53(3) 0(0) 90(23) 
Found Instruction =   %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %17, %"struct.std::__detail::_List_node_base"** %18, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %20, %"struct.std::__detail::_List_node_base"** %21, align 8
Found Instruction =   %23 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %22, align 8
Found Instruction =   %25 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %24, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %6 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %10, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %11, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %13 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %19 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %20, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %21 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %24 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %23, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %24, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %25 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store i32* %26, i32** %5, align 8
Found Instruction =   %31 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %0, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %5 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %3, align 8
Found Instruction =   %8 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %11, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %8, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %3, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %1, %"struct.std::_List_const_iterator"** %4, align 8
Found Instruction =   %5 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %3, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   %8 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %4, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %7, %"struct.std::__detail::_List_node_base"** %8, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %7, align 8
Found Instruction =   %13 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %7, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %16 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %18 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %24 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %2, %"struct.std::_List_node.0"** %6, align 8
Found Instruction =   %12 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %6, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %11, align 8
Found Instruction =   %5 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %11 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %10, align 8
Found Instruction =   store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
Found Instruction =   %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %0, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %7, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %3, align 8
Found Instruction =   %5 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %3, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %6, %"struct.std::__detail::_List_node_base"** %10, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %13, %"struct.std::__detail::_List_node_base"** %17, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
=================================================================
==15947==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffcdaa3dadc at pc 0x00000040157c bp 0x7ffcdaa3dab0 sp 0x7ffcdaa3daa8
WRITE of size 4 at 0x7ffcdaa3dadc thread T0
    #0 0x40157b  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_73-bad_m+0x40157b)
    #1 0x40125b  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_73-bad_m+0x40125b)
    #2 0x401409  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_73-bad_m+0x401409)
    #3 0x7fad6c5dec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400f79  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_73-bad_m+0x400f79)

Address 0x7ffcdaa3dadc is located in stack of thread T0 at offset 28 in frame
    #0 0x40143f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_73-bad_m+0x40143f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_73-bad_m+0x40157b) 
Shadow bytes around the buggy address:
  0x10001b53fb00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b53fb10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b53fb20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b53fb30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b53fb40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10001b53fb50: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x10001b53fb60: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10001b53fb70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001b53fb80: f1 f1 f1 f1 04 f2 00 00 00 f2 f2 f2 f2 f2 00 06
  0x10001b53fb90: f2 f2 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10001b53fba0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15947==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_73-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_74-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 51
AddrVFGNode ID: 254 AddrPE: [1417<--1418]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #18 {  }	4	201
AddrVFGNode ID: 377 AddrPE: [2300<--2301]	
   %6 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	3	15
AddrVFGNode ID: 191 AddrPE: [889<--890]	
   %6 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	18
AddrVFGNode ID: 333 AddrPE: [1918<--1919]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	2	11
AddrVFGNode ID: 197 AddrPE: [901<--902]	
   %12 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	10
AddrVFGNode ID: 472 AddrPE: [2952<--2953]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	9
AddrVFGNode ID: 106 AddrPE: [358<--359]	
   %4 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	7
AddrVFGNode ID: 353 AddrPE: [2120<--2121]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	2	5
AddrVFGNode ID: 378 AddrPE: [2302<--2303]	
   %7 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	17
AddrVFGNode ID: 194 AddrPE: [895<--896]	
   %9 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	10
AddrVFGNode ID: 193 AddrPE: [893<--894]	
   %8 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, align 8 {  }	1	9
AddrVFGNode ID: 192 AddrPE: [891<--892]	
   %7 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	9
AddrVFGNode ID: 214 AddrPE: [1131<--1132]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	8
AddrVFGNode ID: 209 AddrPE: [1085<--1086]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	7
AddrVFGNode ID: 210 AddrPE: [1104<--1105]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	7
AddrVFGNode ID: 180 AddrPE: [804<--805]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	6
AddrVFGNode ID: 190 AddrPE: [887<--888]	
   %5 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	6
AddrVFGNode ID: 212 AddrPE: [1127<--1128]	
   %5 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	6
AddrVFGNode ID: 375 AddrPE: [2296<--2297]	
   %4 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	6
AddrVFGNode ID: 356 AddrPE: [2126<--2127]	
   %9 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	5
AddrVFGNode ID: 152 AddrPE: [633<--634]	
   %4 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	5
AddrVFGNode ID: 439 AddrPE: [2745<--2746]	
   %6 = alloca %"struct.std::pair"*, align 8 {  }	1	4
AddrVFGNode ID: 370 AddrPE: [2268<--2269]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 399 AddrPE: [2508<--2509]	
   %5 = alloca %"struct.std::_Rb_tree_node"**, align 8 {  }	1	4
AddrVFGNode ID: 398 AddrPE: [2506<--2507]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 392 AddrPE: [2451<--2452]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 385 AddrPE: [2397<--2398]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 217 AddrPE: [1166<--1167]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 283 AddrPE: [1606<--1607]	
   %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 160 AddrPE: [684<--685]	
   %4 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	3
AddrVFGNode ID: 119 AddrPE: [443<--444]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 104 AddrPE: [340<--341]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 151 AddrPE: [631<--632]	
   %3 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 107 AddrPE: [360<--361]	
   %5 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	3
AddrVFGNode ID: 289 AddrPE: [1648<--1649]	
   %5 = alloca i32*, align 8 {  }	1	3
AddrVFGNode ID: 188 AddrPE: [857<--858]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 118 AddrPE: [433<--434]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 290 AddrPE: [1650<--1651]	
   %6 = alloca i32*, align 8 {  }	1	3
AddrVFGNode ID: 287 AddrPE: [1633<--1634]	
   %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 218 AddrPE: [1177<--1178]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 282 AddrPE: [1604<--1605]	
   %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 493 AddrPE: [3091<--3092]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 463 AddrPE: [2895<--2896]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
AddrVFGNode ID: 111 AddrPE: [392<--393]	
   %2 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 471 AddrPE: [2950<--2951]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
AddrVFGNode ID: 364 AddrPE: [2217<--2218]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	2
AddrVFGNode ID: 132 AddrPE: [519<--520]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
AddrVFGNode ID: 159 AddrPE: [682<--683]	
   %3 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 249 AddrPE: [1394<--1395]	
   %4 = alloca %"struct.std::less"*, align 8 {  }	1	2
AddrVFGNode ID: 477 AddrPE: [3009<--3010]	
   %2 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 43 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
699(247) 588(200) 219(8) 219(10)  - 0(0) 0(0) 287(39) 212(5) 0(0) 306(51) 
Found Instruction =   %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 %27, i32* %28, align 4
Found Instruction =   store i32 %30, i32* %31, align 4
Found Instruction =   store i32 %33, i32* %34, align 4
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %16, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %18, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
Found Instruction =   %9 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %19, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %3, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %1, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %3, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %17, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %21, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"* %3, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %16, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %20, align 8
Found Instruction =   %21 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %24 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %23, align 8
Found Instruction =   %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %32 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %38, align 8
Found Instruction =   %46 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %49 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %50, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %51 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %53, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %55 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %58 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %60, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %62 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %64 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %63, %"struct.std::_Rb_tree_node_base"** %65, align 8
Found Instruction =   %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %67 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %66, %"struct.std::_Rb_tree_node_base"** %69, align 8
Found Instruction =   %70 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %73 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %72, align 8
Found Instruction =   %76 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %79 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %81 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %85 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %84, %"struct.std::_Rb_tree_node_base"** %87, align 8
Found Instruction =   %89 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %90, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %91 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %93, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %101 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %12, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %16 = load i32, i32* %15, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store i32 %16, i32* %19, align 8
Found Instruction =   %20 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
Found Instruction =   %23 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %25, align 8
Found Instruction =   %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %7, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
Found Instruction =   %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32, i32* %8, align 4
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   %11 = load i32, i32* %10, align 4
Found Instruction =   store %"struct.std::_Rb_tree_node"* %25, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %37, %"struct.std::_Rb_tree_node_base"** %36, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %38, align 8
Found Instruction =   %48 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %51, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %61 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %11, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %17 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %19, align 8
Found Instruction =   %21 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %20, align 8
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %43, %"struct.std::_Rb_tree_node_base"** %42, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %44, align 8
Found Instruction =   %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %51, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %58, align 8
Found Instruction =   %61 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %60, align 8
Found Instruction =   %72 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %71, align 8
Found Instruction =   %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %77, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %91, %"struct.std::_Rb_tree_node_base"** %90, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %93, %"struct.std::_Rb_tree_node_base"** %92, align 8
Found Instruction =   %99 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %98, align 8
Found Instruction =   %107 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %106, align 8
Found Instruction =   %109 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %108, align 8
Found Instruction =   %120 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %119, align 8
Found Instruction =   %125 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %124, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %138, %"struct.std::_Rb_tree_node_base"** %137, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %140, %"struct.std::_Rb_tree_node_base"** %139, align 8
Found Instruction =   %145 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %144, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %3, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %22 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store i8 %29, i8* %10, align 1
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %45 = load i64, i64* %44, align 8
Found Instruction =   store i64 %46, i64* %44, align 8
Found Instruction =   %47 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %12, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %25 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store i8 %28, i8* %8, align 1
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %40, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"** %47, align 8
Found Instruction =   %58 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %57, align 8
Found Instruction =   %67 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %66, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %13, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %13, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %13, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %14, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::pair"* %0, %"struct.std::pair"** %6, align 8
Found Instruction =   %9 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
Found Instruction =   store i32 %15, i32* %11, align 4
Found Instruction =   store i32 0, i32* %16, align 4
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %23 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   %25 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %27, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %29 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %31, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
=================================================================
==15975==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff28a6fdcc at pc 0x00000040196b bp 0x7fff28a6fd90 sp 0x7fff28a6fd88
WRITE of size 4 at 0x7fff28a6fdcc thread T0
    #0 0x40196a  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_74-bad_m+0x40196a)
    #1 0x401674  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_74-bad_m+0x401674)
    #2 0x4017e9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_74-bad_m+0x4017e9)
    #3 0x7f72022bdc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x401249  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_74-bad_m+0x401249)

Address 0x7fff28a6fdcc is located in stack of thread T0 at offset 44 in frame
    #0 0x40181f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_74-bad_m+0x40181f)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_74-bad_m+0x40196a) 
Shadow bytes around the buggy address:
  0x100065145f60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065145f70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065145f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065145f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065145fa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100065145fb0: 00 00 00 00 f1 f1 f1 f1 04[f2]00 00 00 00 00 f3
  0x100065145fc0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065145fd0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x100065145fe0: 00 00 00 00 00 00 f2 f2 f2 f2 00 06 f2 f2 04 f2
  0x100065145ff0: 04 f2 04 f2 00 00 00 00 00 00 f3 f3 f3 f3 f3 f3
  0x100065146000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15975==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_74-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (241 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_81-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fgets
Function = __isoc99_sscanf
Top k = 1
AddrVFGNode ID: 46 AddrPE: [30<--31]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
55(22) 3(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 1(1) 0(0) 1(1) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_81-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (237 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_82-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fgets
Function = __isoc99_sscanf
Top k = 1
AddrVFGNode ID: 46 AddrPE: [30<--31]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
56(23) 3(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 1(1) 0(0) 1(1) 
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_82-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_83-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 1
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
50(18) 3(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 1(1) 0(0) 1(1) 
Found Instruction =   %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_83-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 15 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (166 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fgets_84-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fgets
Top k = 2
AddrVFGNode ID: 67 AddrPE: [205<--206]	
   %5 = call noalias nonnull i8* @_Znwm(i64 4) #12 {  }	2	11
AddrVFGNode ID: 39 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
54(21) 13(5) 11(1) 0(0)  - 0(0) 0(0) 0(0) 12(2) 0(0) 12(2) 
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"* %0, %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"** %3, align 8
Found Instruction =   %6 = load %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"** %3, align 8
Found Instruction =   store i32 %7, i32* %8, align 4
Found Instruction =   %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 %16, i32* %17, align 4
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"* %0, %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"** %2, align 8
Found Instruction =   %5 = load %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"** %2, align 8
Found Instruction =   %8 = load i32, i32* %7, align 4
Found Instruction =   %12 = load i32, i32* %11, align 4
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"* %6, %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"** %2, align 8
Found Instruction =   %9 = load %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_fgets_84::CWE124_Buffer_Underwrite__CWE839_fgets_84_bad"** %2, align 8
=================================================================
==16086==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd75688bfc at pc 0x000000401287 bp 0x7ffd75688bd0 sp 0x7ffd75688bc8
WRITE of size 4 at 0x7ffd75688bfc thread T0
    #0 0x401286  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_84-bad_m+0x401286)
    #1 0x4013b9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_84-bad_m+0x4013b9)
    #2 0x401429  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_84-bad_m+0x401429)
    #3 0x7f2f3b16fc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400de9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_84-bad_m+0x400de9)

Address 0x7ffd75688bfc is located in stack of thread T0 at offset 28 in frame
    #0 0x4010df  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_84-bad_m+0x4010df)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_84-bad_m+0x401286) 
Shadow bytes around the buggy address:
  0x10002eac9120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eac9130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eac9140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eac9150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eac9160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10002eac9170: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x10002eac9180: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10002eac9190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eac91a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eac91b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002eac91c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16086==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fgets_84-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 20 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_01-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
=================================================================
==16113==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcad54c42c at pc 0x000000400d51 bp 0x7ffcad54c3f0 sp 0x7ffcad54c3e8
WRITE of size 4 at 0x7ffcad54c42c thread T0
    #0 0x400d50  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_01-bad_m+0x400d50)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_01-bad_m+0x400e99)
    #2 0x7f9f5480bc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_01-bad_m+0x400af9)

Address 0x7ffcad54c42c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_01-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_01-bad_m+0x400d50) 
Shadow bytes around the buggy address:
  0x100015aa1830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100015aa1840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100015aa1850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100015aa1860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100015aa1870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100015aa1880: f1 f1 f1 f1 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3
  0x100015aa1890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100015aa18a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100015aa18b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100015aa18c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100015aa18d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16113==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_01-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_02-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
=================================================================
==16140==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcd466714c at pc 0x000000400d51 bp 0x7ffcd4667110 sp 0x7ffcd4667108
WRITE of size 4 at 0x7ffcd466714c thread T0
    #0 0x400d50  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_02-bad_m+0x400d50)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_02-bad_m+0x400e99)
    #2 0x7f8e20fcbc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_02-bad_m+0x400af9)

Address 0x7ffcd466714c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_02-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_02-bad_m+0x400d50) 
Shadow bytes around the buggy address:
  0x10001a8c4dd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a8c4de0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a8c4df0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a8c4e00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a8c4e10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10001a8c4e20: 00 00 00 00 f1 f1 f1 f1 04[f2]00 00 00 00 00 f3
  0x10001a8c4e30: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a8c4e40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a8c4e50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a8c4e60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a8c4e70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16140==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_02-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (248 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_03-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
=================================================================
==16169==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd6c3c2f2c at pc 0x000000400d51 bp 0x7ffd6c3c2ef0 sp 0x7ffd6c3c2ee8
WRITE of size 4 at 0x7ffd6c3c2f2c thread T0
    #0 0x400d50  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_03-bad_m+0x400d50)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_03-bad_m+0x400e99)
    #2 0x7f5bd316cc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_03-bad_m+0x400af9)

Address 0x7ffd6c3c2f2c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_03-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_03-bad_m+0x400d50) 
Shadow bytes around the buggy address:
  0x10002d870590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d8705a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d8705b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d8705c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d8705d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10002d8705e0: f1 f1 f1 f1 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3
  0x10002d8705f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d870600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d870610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d870620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d870630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16169==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_03-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 12 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_04-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
=================================================================
==16197==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd43441a6c at pc 0x000000400d51 bp 0x7ffd43441a30 sp 0x7ffd43441a28
WRITE of size 4 at 0x7ffd43441a6c thread T0
    #0 0x400d50  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_04-bad_m+0x400d50)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_04-bad_m+0x400e99)
    #2 0x7f459243ec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_04-bad_m+0x400af9)

Address 0x7ffd43441a6c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_04-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_04-bad_m+0x400d50) 
Shadow bytes around the buggy address:
  0x1000286802f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100028680300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100028680310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100028680320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100028680330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100028680340: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04[f2]00 00
  0x100028680350: 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100028680360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100028680370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100028680380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100028680390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16197==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_04-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (241 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_05-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 46 AddrPE: [70<--71]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 37 AddrPE: [7<--8]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %20, align 4
Found Instruction =   %28 = load i32, i32* %27, align 4
=================================================================
==16224==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc355cc72c at pc 0x000000400d6d bp 0x7ffc355cc6f0 sp 0x7ffc355cc6e8
WRITE of size 4 at 0x7ffc355cc72c thread T0
    #0 0x400d6c  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_05-bad_m+0x400d6c)
    #1 0x400eb9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_05-bad_m+0x400eb9)
    #2 0x7ff0e8f5ac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_05-bad_m+0x400af9)

Address 0x7ffc355cc72c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_05-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_05-bad_m+0x400d6c) 
Shadow bytes around the buggy address:
  0x100006ab1890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100006ab18a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100006ab18b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100006ab18c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100006ab18d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100006ab18e0: f1 f1 f1 f1 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3
  0x100006ab18f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100006ab1900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100006ab1910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100006ab1920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100006ab1930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16224==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_05-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 30 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (239 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_06-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
=================================================================
==16252==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffeb5d51f6c at pc 0x000000400d51 bp 0x7ffeb5d51f30 sp 0x7ffeb5d51f28
WRITE of size 4 at 0x7ffeb5d51f6c thread T0
    #0 0x400d50  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_06-bad_m+0x400d50)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_06-bad_m+0x400e99)
    #2 0x7fbae8944c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_06-bad_m+0x400af9)

Address 0x7ffeb5d51f6c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_06-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_06-bad_m+0x400d50) 
Shadow bytes around the buggy address:
  0x100056ba2390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056ba23a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056ba23b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056ba23c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056ba23d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100056ba23e0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04[f2]00 00
  0x100056ba23f0: 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100056ba2400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056ba2410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056ba2420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056ba2430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16252==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_06-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (247 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_07-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 46 AddrPE: [70<--71]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 37 AddrPE: [7<--8]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %20, align 4
Found Instruction =   %28 = load i32, i32* %27, align 4
=================================================================
==16279==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd19f2770c at pc 0x000000400d6d bp 0x7ffd19f276d0 sp 0x7ffd19f276c8
WRITE of size 4 at 0x7ffd19f2770c thread T0
    #0 0x400d6c  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_07-bad_m+0x400d6c)
    #1 0x400eb9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_07-bad_m+0x400eb9)
    #2 0x7fca3455ec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_07-bad_m+0x400af9)

Address 0x7ffd19f2770c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_07-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_07-bad_m+0x400d6c) 
Shadow bytes around the buggy address:
  0x1000233dce90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000233dcea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000233dceb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000233dcec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000233dced0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x1000233dcee0: 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3 00 00 00 00
  0x1000233dcef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000233dcf00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000233dcf10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000233dcf20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000233dcf30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16279==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_07-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (244 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_08-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %20, align 4
Found Instruction =   %28 = load i32, i32* %27, align 4
=================================================================
==16306==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffff609360c at pc 0x000000400d6d bp 0x7ffff60935d0 sp 0x7ffff60935c8
WRITE of size 4 at 0x7ffff609360c thread T0
    #0 0x400d6c  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_08-bad_m+0x400d6c)
    #1 0x400ec9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_08-bad_m+0x400ec9)
    #2 0x7f04c4324c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_08-bad_m+0x400af9)

Address 0x7ffff609360c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_08-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_08-bad_m+0x400d6c) 
Shadow bytes around the buggy address:
  0x10007ec0a670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ec0a680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ec0a690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ec0a6a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ec0a6b0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10007ec0a6c0: 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3 00 00 00 00
  0x10007ec0a6d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ec0a6e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ec0a6f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ec0a700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ec0a710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16306==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_08-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (267 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_09-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_fscanf
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %20, align 4
Found Instruction =   %28 = load i32, i32* %27, align 4
=================================================================
==16333==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffea12f4b0c at pc 0x000000400d6d bp 0x7ffea12f4ad0 sp 0x7ffea12f4ac8
WRITE of size 4 at 0x7ffea12f4b0c thread T0
    #0 0x400d6c  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_09-bad_m+0x400d6c)
    #1 0x400eb9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_09-bad_m+0x400eb9)
    #2 0x7fa689fadc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_09-bad_m+0x400af9)

Address 0x7ffea12f4b0c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_09-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_09-bad_m+0x400d6c) 
Shadow bytes around the buggy address:
  0x100054256910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054256920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054256930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054256940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054256950: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100054256960: 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3 00 00 00 00
  0x100054256970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054256980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100054256990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000542569a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000542569b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16333==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_09-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (241 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_10-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %20, align 4
Found Instruction =   %28 = load i32, i32* %27, align 4
=================================================================
==16361==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd6274f58c at pc 0x000000400d6d bp 0x7ffd6274f550 sp 0x7ffd6274f548
WRITE of size 4 at 0x7ffd6274f58c thread T0
    #0 0x400d6c  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_10-bad_m+0x400d6c)
    #1 0x400eb9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_10-bad_m+0x400eb9)
    #2 0x7f8d2f3a5c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_10-bad_m+0x400af9)

Address 0x7ffd6274f58c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_10-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_10-bad_m+0x400d6c) 
Shadow bytes around the buggy address:
  0x10002c4e1e60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002c4e1e70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002c4e1e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002c4e1e90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002c4e1ea0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10002c4e1eb0: 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3 00 00 00 00
  0x10002c4e1ec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002c4e1ed0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002c4e1ee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002c4e1ef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002c4e1f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16361==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_10-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (244 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_11-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %20, align 4
Found Instruction =   %28 = load i32, i32* %27, align 4
=================================================================
==16388==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcefbde5ac at pc 0x000000400d71 bp 0x7ffcefbde570 sp 0x7ffcefbde568
WRITE of size 4 at 0x7ffcefbde5ac thread T0
    #0 0x400d70  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_11-bad_m+0x400d70)
    #1 0x400eb9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_11-bad_m+0x400eb9)
    #2 0x7f2f89a96c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_11-bad_m+0x400af9)

Address 0x7ffcefbde5ac is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_11-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_11-bad_m+0x400d70) 
Shadow bytes around the buggy address:
  0x10001df73c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001df73c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001df73c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001df73c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001df73ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10001df73cb0: f1 f1 f1 f1 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3
  0x10001df73cc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001df73cd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001df73ce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001df73cf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001df73d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16388==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_11-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 21 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (239 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_12-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_fscanf
Function = __isoc99_sscanf
Top k = 3
AddrVFGNode ID: 47 AddrPE: [70<--71]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 49 AddrPE: [74<--75]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
44(16) 6(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(3) 0(0) 5(3) 
Found Instruction =   %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %23, align 4
Found Instruction =   %31 = load i32, i32* %30, align 4
Found Instruction =   store i32 1, i32* %49, align 4
Found Instruction =   %57 = load i32, i32* %56, align 4
Calling bad()...
0
0
0
0
0
0
0
1
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_12-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_13-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %20, align 4
Found Instruction =   %28 = load i32, i32* %27, align 4
=================================================================
==16443==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd9d08c62c at pc 0x000000400d6d bp 0x7ffd9d08c5f0 sp 0x7ffd9d08c5e8
WRITE of size 4 at 0x7ffd9d08c62c thread T0
    #0 0x400d6c  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_13-bad_m+0x400d6c)
    #1 0x400eb9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_13-bad_m+0x400eb9)
    #2 0x7f8067590c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_13-bad_m+0x400af9)

Address 0x7ffd9d08c62c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_13-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_13-bad_m+0x400d6c) 
Shadow bytes around the buggy address:
  0x100033a09870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033a09880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033a09890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033a098a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033a098b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100033a098c0: f1 f1 f1 f1 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3
  0x100033a098d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033a098e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033a098f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033a09900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100033a09910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16443==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_13-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (263 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_14-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %20, align 4
Found Instruction =   %28 = load i32, i32* %27, align 4
=================================================================
==16470==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd6c039e4c at pc 0x000000400d6d bp 0x7ffd6c039e10 sp 0x7ffd6c039e08
WRITE of size 4 at 0x7ffd6c039e4c thread T0
    #0 0x400d6c  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_14-bad_m+0x400d6c)
    #1 0x400eb9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_14-bad_m+0x400eb9)
    #2 0x7f131e9c3c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_14-bad_m+0x400af9)

Address 0x7ffd6c039e4c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_14-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_14-bad_m+0x400d6c) 
Shadow bytes around the buggy address:
  0x10002d7ff370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d7ff380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d7ff390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d7ff3a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d7ff3b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10002d7ff3c0: 00 00 00 00 f1 f1 f1 f1 04[f2]00 00 00 00 00 f3
  0x10002d7ff3d0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d7ff3e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d7ff3f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d7ff400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d7ff410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16470==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_14-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (237 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_15-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
=================================================================
==16500==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcd27d194c at pc 0x000000400d51 bp 0x7ffcd27d1910 sp 0x7ffcd27d1908
WRITE of size 4 at 0x7ffcd27d194c thread T0
    #0 0x400d50  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_15-bad_m+0x400d50)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_15-bad_m+0x400e99)
    #2 0x7fc62d2e0c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_15-bad_m+0x400af9)

Address 0x7ffcd27d194c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_15-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_15-bad_m+0x400d50) 
Shadow bytes around the buggy address:
  0x10001a4f22d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a4f22e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a4f22f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a4f2300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a4f2310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10001a4f2320: 00 00 00 00 f1 f1 f1 f1 04[f2]00 00 00 00 00 f3
  0x10001a4f2330: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a4f2340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a4f2350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a4f2360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001a4f2370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16500==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_15-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (167 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_16-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_fscanf
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %16, align 4
Found Instruction =   %24 = load i32, i32* %23, align 4
=================================================================
==16527==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffdeb2b7d4c at pc 0x000000400d56 bp 0x7ffdeb2b7d10 sp 0x7ffdeb2b7d08
WRITE of size 4 at 0x7ffdeb2b7d4c thread T0
    #0 0x400d55  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_16-bad_m+0x400d55)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_16-bad_m+0x400e99)
    #2 0x7f2d4e4d2c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_16-bad_m+0x400af9)

Address 0x7ffdeb2b7d4c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_16-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_16-bad_m+0x400d55) 
Shadow bytes around the buggy address:
  0x10003d64ef50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d64ef60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d64ef70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d64ef80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d64ef90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10003d64efa0: 00 00 00 00 f1 f1 f1 f1 04[f2]00 00 00 00 00 f3
  0x10003d64efb0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d64efc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d64efd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d64efe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003d64eff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16527==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_16-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 16 times to write data ]
[ perf record: Captured and wrote 0.021 MB perf.data (170 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_17-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_fscanf
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 47 AddrPE: [72<--73]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %27, align 4
Found Instruction =   %35 = load i32, i32* %34, align 4
=================================================================
==16560==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffcaa4434c at pc 0x000000400d93 bp 0x7fffcaa44310 sp 0x7fffcaa44308
WRITE of size 4 at 0x7fffcaa4434c thread T0
    #0 0x400d92  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_17-bad_m+0x400d92)
    #1 0x400ee9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_17-bad_m+0x400ee9)
    #2 0x7f6574ed4c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_17-bad_m+0x400af9)

Address 0x7fffcaa4434c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_17-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_17-bad_m+0x400d92) 
Shadow bytes around the buggy address:
  0x100079540810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100079540820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100079540830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100079540840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100079540850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100079540860: 00 00 00 00 f1 f1 f1 f1 04[f2]00 00 00 00 00 f3
  0x100079540870: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100079540880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100079540890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000795408a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000795408b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16560==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_17-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 21 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (254 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_18-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %15, align 4
Found Instruction =   %23 = load i32, i32* %22, align 4
=================================================================
==16587==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffa9a57c2c at pc 0x000000400d51 bp 0x7fffa9a57bf0 sp 0x7fffa9a57be8
WRITE of size 4 at 0x7fffa9a57c2c thread T0
    #0 0x400d50  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_18-bad_m+0x400d50)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_18-bad_m+0x400e99)
    #2 0x7fa94d860c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_18-bad_m+0x400af9)

Address 0x7fffa9a57c2c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_18-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_18-bad_m+0x400d50) 
Shadow bytes around the buggy address:
  0x100075342f30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100075342f40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100075342f50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100075342f60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100075342f70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100075342f80: f1 f1 f1 f1 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3
  0x100075342f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100075342fa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100075342fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100075342fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100075342fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16587==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_18-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 27 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (257 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_21-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 49 AddrPE: [91<--92]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
=================================================================
==16614==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd20937e3c at pc 0x000000400e7b bp 0x7ffd20937e10 sp 0x7ffd20937e08
WRITE of size 4 at 0x7ffd20937e3c thread T0
    #0 0x400e7a  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_21-bad_m+0x400e7a)
    #1 0x400cdf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_21-bad_m+0x400cdf)
    #2 0x400fc9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_21-bad_m+0x400fc9)
    #3 0x7f4313231c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_21-bad_m+0x400af9)

Address 0x7ffd20937e3c is located in stack of thread T0 at offset 28 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_21-bad_m+0x400d3f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_21-bad_m+0x400e7a) 
Shadow bytes around the buggy address:
  0x10002411ef70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002411ef80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002411ef90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002411efa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002411efb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10002411efc0: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x10002411efd0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002411efe0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x10002411eff0: 04 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002411f000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002411f010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16614==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_21-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 19 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (236 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_22-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 56 AddrPE: [124<--125]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 37 AddrPE: [7<--8]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
=================================================================
==16641==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffef0ea707c at pc 0x000000400edb bp 0x7ffef0ea7050 sp 0x7ffef0ea7048
WRITE of size 4 at 0x7ffef0ea707c thread T0
    #0 0x400eda  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_22-bad_m+0x400eda)
    #1 0x400cdf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_22-bad_m+0x400cdf)
    #2 0x400d69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_22-bad_m+0x400d69)
    #3 0x7f4da9b50c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_22-bad_m+0x400af9)

Address 0x7ffef0ea707c is located in stack of thread T0 at offset 28 in frame
    #0 0x400d9f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_22-bad_m+0x400d9f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_22-bad_m+0x400eda) 
Shadow bytes around the buggy address:
  0x10005e1ccdb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005e1ccdc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005e1ccdd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005e1ccde0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005e1ccdf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10005e1cce00: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x10005e1cce10: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10005e1cce20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005e1cce30: 00 00 00 00 f1 f1 f1 f1 04 f3 f3 f3 00 00 00 00
  0x10005e1cce40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005e1cce50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16641==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_22-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (248 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_31-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 47 AddrPE: [72<--73]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %17, align 4
Found Instruction =   %25 = load i32, i32* %24, align 4
=================================================================
==16668==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcd5d8b8ec at pc 0x000000400d69 bp 0x7ffcd5d8b8b0 sp 0x7ffcd5d8b8a8
WRITE of size 4 at 0x7ffcd5d8b8ec thread T0
    #0 0x400d68  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_31-bad_m+0x400d68)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_31-bad_m+0x400e99)
    #2 0x7f6a26307c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_31-bad_m+0x400af9)

Address 0x7ffcd5d8b8ec is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_31-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_31-bad_m+0x400d68) 
Shadow bytes around the buggy address:
  0x10001aba96c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001aba96d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001aba96e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001aba96f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001aba9700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10001aba9710: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04[f2]00 00
  0x10001aba9720: 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10001aba9730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001aba9740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001aba9750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001aba9760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16668==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_31-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 12 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_32-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_fscanf
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 49 AddrPE: [76<--77]	
   %7 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
52(17) 14(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %23, align 4
Found Instruction =   %31 = load i32, i32* %30, align 4
=================================================================
==16695==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff7141739c at pc 0x000000400d8c bp 0x7fff71417350 sp 0x7fff71417348
WRITE of size 4 at 0x7fff7141739c thread T0
    #0 0x400d8b  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_32-bad_m+0x400d8b)
    #1 0x400ee9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_32-bad_m+0x400ee9)
    #2 0x7fd990bbdc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_32-bad_m+0x400af9)

Address 0x7fff7141739c is located in stack of thread T0 at offset 60 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_32-bad_m+0x400bcf)

  This frame has 3 object(s):
    [32, 36) ''
    [48, 52) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_32-bad_m+0x400d8b) 
Shadow bytes around the buggy address:
  0x10006e27ae20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006e27ae30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006e27ae40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006e27ae50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006e27ae60: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10006e27ae70: 04 f2 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10006e27ae80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006e27ae90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006e27aea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006e27aeb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006e27aec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16695==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_32-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (239 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_33-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fscanf
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 47 AddrPE: [72<--73]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
46(16) 8(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %17, align 4
Found Instruction =   %25 = load i32, i32* %24, align 4
=================================================================
==16722==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffed1881eac at pc 0x000000400d5e bp 0x7ffed1881e70 sp 0x7ffed1881e68
WRITE of size 4 at 0x7ffed1881eac thread T0
    #0 0x400d5d  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_33-bad_m+0x400d5d)
    #1 0x400e99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_33-bad_m+0x400e99)
    #2 0x7f7d97319c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_33-bad_m+0x400af9)

Address 0x7ffed1881eac is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_33-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_33-bad_m+0x400d5d) 
Shadow bytes around the buggy address:
  0x10005a308380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005a308390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005a3083a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005a3083b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005a3083c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10005a3083d0: f1 f1 f1 f1 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3
  0x10005a3083e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005a3083f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005a308400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005a308410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005a308420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16722==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_33-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.023 MB perf.data (233 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_34-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 47 AddrPE: [72<--73]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %19, align 4
Found Instruction =   %27 = load i32, i32* %26, align 4
=================================================================
==16749==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe6453c6fc at pc 0x000000400d7b bp 0x7ffe6453c6b0 sp 0x7ffe6453c6a8
WRITE of size 4 at 0x7ffe6453c6fc thread T0
    #0 0x400d7a  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_34-bad_m+0x400d7a)
    #1 0x400ed9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_34-bad_m+0x400ed9)
    #2 0x7fd9d2b5cc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_34-bad_m+0x400af9)

Address 0x7ffe6453c6fc is located in stack of thread T0 at offset 60 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_34-bad_m+0x400bcf)

  This frame has 3 object(s):
    [32, 36) ''
    [48, 52) ''
    [64, 104) '' <== Memory access at offset 60 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_34-bad_m+0x400d7a) 
Shadow bytes around the buggy address:
  0x10004c89f880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c89f890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c89f8a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c89f8b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c89f8c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10004c89f8d0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f2 04[f2]
  0x10004c89f8e0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10004c89f8f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c89f900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c89f910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004c89f920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16749==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_34-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (237 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_41-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 48 AddrPE: [88<--89]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==16776==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd69edb15c at pc 0x000000400e69 bp 0x7ffd69edb130 sp 0x7ffd69edb128
WRITE of size 4 at 0x7ffd69edb15c thread T0
    #0 0x400e68  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_41-bad_m+0x400e68)
    #1 0x400cd4  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_41-bad_m+0x400cd4)
    #2 0x400fb9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_41-bad_m+0x400fb9)
    #3 0x7f6147319c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_41-bad_m+0x400af9)

Address 0x7ffd69edb15c is located in stack of thread T0 at offset 28 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_41-bad_m+0x400d3f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_41-bad_m+0x400e68) 
Shadow bytes around the buggy address:
  0x10002d3d35d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d3d35e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d3d35f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d3d3600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d3d3610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10002d3d3620: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x10002d3d3630: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10002d3d3640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d3d3650: f1 f1 f1 f1 04 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10002d3d3660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002d3d3670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16776==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_41-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (241 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_42-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [6<--7]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   store i32 1, i32* %12, align 4
Found Instruction =   %20 = load i32, i32* %19, align 4
Found Instruction =   %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
=================================================================
==16806==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fffd7c991dc at pc 0x000000400d12 bp 0x7fffd7c991b0 sp 0x7fffd7c991a8
WRITE of size 4 at 0x7fffd7c991dc thread T0
    #0 0x400d11  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_42-bad_m+0x400d11)
    #1 0x400fc9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_42-bad_m+0x400fc9)
    #2 0x7fbaad410c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_42-bad_m+0x400af9)

Address 0x7fffd7c991dc is located in stack of thread T0 at offset 28 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_42-bad_m+0x400bcf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_42-bad_m+0x400d11) 
Shadow bytes around the buggy address:
  0x10007af8b1e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007af8b1f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007af8b200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007af8b210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007af8b220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007af8b230: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x10007af8b240: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10007af8b250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007af8b260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007af8b270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007af8b280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16806==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_42-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 11 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (236 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_43-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [6<--7]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
44(16) 6(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   store i32 1, i32* %10, align 4
Found Instruction =   %18 = load i32, i32* %17, align 4
Found Instruction =   %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
=================================================================
==16833==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcc06995ec at pc 0x000000400d10 bp 0x7ffcc06995b0 sp 0x7ffcc06995a8
WRITE of size 4 at 0x7ffcc06995ec thread T0
    #0 0x400d0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_43-bad_m+0x400d0f)
    #1 0x400eb9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_43-bad_m+0x400eb9)
    #2 0x7fb11fe92c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_43-bad_m+0x400af9)

Address 0x7ffcc06995ec is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_43-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_43-bad_m+0x400d0f) 
Shadow bytes around the buggy address:
  0x1000180cb260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000180cb270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000180cb280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000180cb290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000180cb2a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000180cb2b0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04[f2]00 00
  0x1000180cb2c0: 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x1000180cb2d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000180cb2e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000180cb2f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000180cb300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16833==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_43-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (168 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_44-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 1
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
44(16) 2(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 1(1) 0(0) 1(1) 
Found Instruction =   %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_44-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 25 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (250 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_45-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 49 AddrPE: [90<--91]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==16888==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff10740edc at pc 0x000000400e70 bp 0x7fff10740eb0 sp 0x7fff10740ea8
WRITE of size 4 at 0x7fff10740edc thread T0
    #0 0x400e6f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_45-bad_m+0x400e6f)
    #1 0x400cdb  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_45-bad_m+0x400cdb)
    #2 0x400fb9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_45-bad_m+0x400fb9)
    #3 0x7f5501750c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_45-bad_m+0x400af9)

Address 0x7fff10740edc is located in stack of thread T0 at offset 28 in frame
    #0 0x400d3f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_45-bad_m+0x400d3f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_45-bad_m+0x400e6f) 
Shadow bytes around the buggy address:
  0x1000620e0180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000620e0190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000620e01a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000620e01b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000620e01c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000620e01d0: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x1000620e01e0: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x1000620e01f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000620e0200: f1 f1 f1 f1 04 f3 f3 f3 00 00 00 00 00 00 00 00
  0x1000620e0210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000620e0220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16888==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_45-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 16 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (168 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_51-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 55 AddrPE: [121<--122]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==16915==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd212bf29c at pc 0x000000400ec9 bp 0x7ffd212bf270 sp 0x7ffd212bf268
WRITE of size 4 at 0x7ffd212bf29c thread T0
    #0 0x400ec8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_51-bad_m+0x400ec8)
    #1 0x400cd4  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_51-bad_m+0x400cd4)
    #2 0x400d69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_51-bad_m+0x400d69)
    #3 0x7f4f9947ac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_51-bad_m+0x400af9)

Address 0x7ffd212bf29c is located in stack of thread T0 at offset 28 in frame
    #0 0x400d9f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_51-bad_m+0x400d9f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_51-bad_m+0x400ec8) 
Shadow bytes around the buggy address:
  0x10002424fe00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002424fe10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002424fe20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002424fe30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002424fe40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10002424fe50: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10002424fe60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002424fe70: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f3 f3 f3
  0x10002424fe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002424fe90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002424fea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16915==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_51-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (244 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_52-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 57 AddrPE: [131<--132]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==16942==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff6feddc7c at pc 0x000000400ee9 bp 0x7fff6feddc50 sp 0x7fff6feddc48
WRITE of size 4 at 0x7fff6feddc7c thread T0
    #0 0x400ee8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_52-bad_m+0x400ee8)
    #1 0x400da2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_52-bad_m+0x400da2)
    #2 0x400cd4  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_52-bad_m+0x400cd4)
    #3 0x400d69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_52-bad_m+0x400d69)
    #4 0x7f141cf73c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #5 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_52-bad_m+0x400af9)

Address 0x7fff6feddc7c is located in stack of thread T0 at offset 28 in frame
    #0 0x400dbf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_52-bad_m+0x400dbf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_52-bad_m+0x400ee8) 
Shadow bytes around the buggy address:
  0x10006dfd3b30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006dfd3b40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006dfd3b50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006dfd3b60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006dfd3b70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10006dfd3b80: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x10006dfd3b90: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10006dfd3ba0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006dfd3bb0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f3 f3 f3
  0x10006dfd3bc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006dfd3bd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16942==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_52-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (247 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_53-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 59 AddrPE: [141<--142]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==16969==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fffd992e61c at pc 0x000000400f09 bp 0x7fffd992e5f0 sp 0x7fffd992e5e8
WRITE of size 4 at 0x7fffd992e61c thread T0
    #0 0x400f08  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_53-bad_m+0x400f08)
    #1 0x400dc2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_53-bad_m+0x400dc2)
    #2 0x400da2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_53-bad_m+0x400da2)
    #3 0x400cd4  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_53-bad_m+0x400cd4)
    #4 0x400d69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_53-bad_m+0x400d69)
    #5 0x7f4a5194fc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #6 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_53-bad_m+0x400af9)

Address 0x7fffd992e61c is located in stack of thread T0 at offset 28 in frame
    #0 0x400ddf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_53-bad_m+0x400ddf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_53-bad_m+0x400f08) 
Shadow bytes around the buggy address:
  0x10007b31dc70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b31dc80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b31dc90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b31dca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b31dcb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007b31dcc0: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10007b31dcd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b31dce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b31dcf0: f1 f1 f1 f1 04 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10007b31dd00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007b31dd10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16969==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_53-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (251 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_54-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 61 AddrPE: [151<--152]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==16996==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd0ae14e1c at pc 0x000000400f29 bp 0x7ffd0ae14df0 sp 0x7ffd0ae14de8
WRITE of size 4 at 0x7ffd0ae14e1c thread T0
    #0 0x400f28  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_54-bad_m+0x400f28)
    #1 0x400de2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_54-bad_m+0x400de2)
    #2 0x400dc2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_54-bad_m+0x400dc2)
    #3 0x400da2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_54-bad_m+0x400da2)
    #4 0x400cd4  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_54-bad_m+0x400cd4)
    #5 0x400d69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_54-bad_m+0x400d69)
    #6 0x7fcdbba29c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #7 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_54-bad_m+0x400af9)

Address 0x7ffd0ae14e1c is located in stack of thread T0 at offset 28 in frame
    #0 0x400dff  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_54-bad_m+0x400dff)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_54-bad_m+0x400f28) 
Shadow bytes around the buggy address:
  0x1000215ba970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000215ba980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000215ba990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000215ba9a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000215ba9b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000215ba9c0: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x1000215ba9d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000215ba9e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000215ba9f0: 00 00 00 00 f1 f1 f1 f1 04 f3 f3 f3 00 00 00 00
  0x1000215baa00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000215baa10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==16996==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_54-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_61-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [10<--11]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   store i32 1, i32* %12, align 4
Found Instruction =   %20 = load i32, i32* %19, align 4
Found Instruction =   %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
=================================================================
==17023==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffff2c5ad5c at pc 0x000000400d12 bp 0x7ffff2c5ad30 sp 0x7ffff2c5ad28
WRITE of size 4 at 0x7ffff2c5ad5c thread T0
    #0 0x400d11  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_61-bad_m+0x400d11)
    #1 0x400e59  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_61-bad_m+0x400e59)
    #2 0x7fe45b3c4c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_61-bad_m+0x400af9)

Address 0x7ffff2c5ad5c is located in stack of thread T0 at offset 28 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_61-bad_m+0x400bcf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_61-bad_m+0x400d11) 
Shadow bytes around the buggy address:
  0x10007e583550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e583560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e583570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e583580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e583590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007e5835a0: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x10007e5835b0: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10007e5835c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e5835d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e5835e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007e5835f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17023==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_61-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 19 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (157 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_62-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fscanf
Top k = 2
AddrVFGNode ID: 45 AddrPE: [68<--69]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [10<--11]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
44(16) 6(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   store i32 1, i32* %10, align 4
Found Instruction =   %18 = load i32, i32* %17, align 4
Found Instruction =   %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
=================================================================
==17059==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe101ce78c at pc 0x000000400d10 bp 0x7ffe101ce750 sp 0x7ffe101ce748
WRITE of size 4 at 0x7ffe101ce78c thread T0
    #0 0x400d0f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_62-bad_m+0x400d0f)
    #1 0x400e59  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_62-bad_m+0x400e59)
    #2 0x7fb0f81ccc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_62-bad_m+0x400af9)

Address 0x7ffe101ce78c is located in stack of thread T0 at offset 44 in frame
    #0 0x400bcf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_62-bad_m+0x400bcf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_62-bad_m+0x400d0f) 
Shadow bytes around the buggy address:
  0x100042031ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100042031cb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100042031cc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100042031cd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100042031ce0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100042031cf0: 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3 00 00 00 00
  0x100042031d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100042031d10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100042031d20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100042031d30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100042031d40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17059==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_62-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 14 times to write data ]
[ perf record: Captured and wrote 0.020 MB perf.data (157 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_63-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 56 AddrPE: [122<--123]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
46(16) 8(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
=================================================================
==17086==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff8dd2f85c at pc 0x000000400ec0 bp 0x7fff8dd2f830 sp 0x7fff8dd2f828
WRITE of size 4 at 0x7fff8dd2f85c thread T0
    #0 0x400ebf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_63-bad_m+0x400ebf)
    #1 0x400cd2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_63-bad_m+0x400cd2)
    #2 0x400d59  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_63-bad_m+0x400d59)
    #3 0x7f3b84f45c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_63-bad_m+0x400af9)

Address 0x7fff8dd2f85c is located in stack of thread T0 at offset 28 in frame
    #0 0x400d8f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_63-bad_m+0x400d8f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_63-bad_m+0x400ebf) 
Shadow bytes around the buggy address:
  0x100071b9deb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100071b9dec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100071b9ded0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100071b9dee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100071b9def0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100071b9df00: 00 00 00 00 00 00 00 00 f1 f1 f1[f1]00 00 00 00
  0x100071b9df10: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100071b9df20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100071b9df30: f1 f1 f1 f1 04 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100071b9df40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100071b9df50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17086==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_63-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 28 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (239 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_64-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 57 AddrPE: [125<--126]	
   %6 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
48(17) 10(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %17, align 4
Found Instruction =   %25 = load i32, i32* %24, align 4
=================================================================
==17113==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd49bad97c at pc 0x000000400ec8 bp 0x7ffd49bad950 sp 0x7ffd49bad948
WRITE of size 4 at 0x7ffd49bad97c thread T0
    #0 0x400ec7  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_64-bad_m+0x400ec7)
    #1 0x400cd2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_64-bad_m+0x400cd2)
    #2 0x400d59  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_64-bad_m+0x400d59)
    #3 0x7f7520687c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_64-bad_m+0x400af9)

Address 0x7ffd49bad97c is located in stack of thread T0 at offset 28 in frame
    #0 0x400d8f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_64-bad_m+0x400d8f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_64-bad_m+0x400ec7) 
Shadow bytes around the buggy address:
  0x10002936dad0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002936dae0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002936daf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002936db00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002936db10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10002936db20: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x10002936db30: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10002936db40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002936db50: 00 00 00 00 f1 f1 f1 f1 04 f3 f3 f3 00 00 00 00
  0x10002936db60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002936db70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17113==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_64-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 14 times to write data ]
[ perf record: Captured and wrote 0.021 MB perf.data (173 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_65-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 1
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
44(16) 2(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 1(1) 0(0) 1(1) 
Found Instruction =   %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_65-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (244 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_66-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 3
AddrVFGNode ID: 44 AddrPE: [66<--67]	
   %2 = alloca [5 x i32], align 16 {  }	1	5
AddrVFGNode ID: 57 AddrPE: [128<--129]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
47(17) 9(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 8(3) 0(0) 8(3) 
Found Instruction =   %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 %6, i32* %7, align 8
Found Instruction =   store i32* %0, i32** %2, align 8
Found Instruction =   %6 = load i32*, i32** %2, align 8
Found Instruction =   %8 = load i32, i32* %7, align 4
Found Instruction =   store i32 %8, i32* %3, align 4
Found Instruction =   store i32 1, i32* %15, align 4
Found Instruction =   %23 = load i32, i32* %22, align 4
=================================================================
==17169==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd00e38cfc at pc 0x000000400f95 bp 0x7ffd00e38cd0 sp 0x7ffd00e38cc8
WRITE of size 4 at 0x7ffd00e38cfc thread T0
    #0 0x400f94  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_66-bad_m+0x400f94)
    #1 0x400d44  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_66-bad_m+0x400d44)
    #2 0x400de9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_66-bad_m+0x400de9)
    #3 0x7f8ede7fec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_66-bad_m+0x400af9)

Address 0x7ffd00e38cfc is located in stack of thread T0 at offset 28 in frame
    #0 0x400e1f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_66-bad_m+0x400e1f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_66-bad_m+0x400f94) 
Shadow bytes around the buggy address:
  0x1000201bf140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000201bf150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000201bf160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000201bf170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000201bf180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000201bf190: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x1000201bf1a0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x1000201bf1b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000201bf1c0: 00 00 00 00 f1 f1 f1 f1 04 f2 00 00 04 f3 f3 f3
  0x1000201bf1d0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000201bf1e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17169==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_66-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 12 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (246 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_67-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = __isoc99_fscanf
Top k = 2
AddrVFGNode ID: 57 AddrPE: [129<--130]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %15, align 4
Found Instruction =   %23 = load i32, i32* %22, align 4
=================================================================
==17196==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffdcc52c84c at pc 0x000000400ee6 bp 0x7ffdcc52c810 sp 0x7ffdcc52c808
WRITE of size 4 at 0x7ffdcc52c84c thread T0
    #0 0x400ee5  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_67-bad_m+0x400ee5)
    #1 0x400ce7  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_67-bad_m+0x400ce7)
    #2 0x400d79  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_67-bad_m+0x400d79)
    #3 0x7fcf0828ac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_67-bad_m+0x400af9)

Address 0x7ffdcc52c84c is located in stack of thread T0 at offset 44 in frame
    #0 0x400daf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_67-bad_m+0x400daf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_67-bad_m+0x400ee5) 
Shadow bytes around the buggy address:
  0x10003989d8b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003989d8c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003989d8d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003989d8e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003989d8f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10003989d900: 00 00 00 00 f1 f1 f1 f1 04[f2]00 00 00 00 00 f3
  0x10003989d910: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003989d920: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x10003989d930: 04 f2 04 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003989d940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003989d950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17196==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_67-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_68-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_fscanf
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 58 AddrPE: [128<--129]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 39 AddrPE: [11<--12]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
42(15) 4(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(2) 0(0) 3(2) 
Found Instruction =   %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
=================================================================
==17225==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd8f4f669c at pc 0x000000400ed0 bp 0x7ffd8f4f6670 sp 0x7ffd8f4f6668
WRITE of size 4 at 0x7ffd8f4f669c thread T0
    #0 0x400ecf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_68-bad_m+0x400ecf)
    #1 0x400cdd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_68-bad_m+0x400cdd)
    #2 0x400d69  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_68-bad_m+0x400d69)
    #3 0x7fab7b11bc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400af9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_68-bad_m+0x400af9)

Address 0x7ffd8f4f669c is located in stack of thread T0 at offset 28 in frame
    #0 0x400d9f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_68-bad_m+0x400d9f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_68-bad_m+0x400ecf) 
Shadow bytes around the buggy address:
  0x100031e96c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031e96c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031e96ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031e96cb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031e96cc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100031e96cd0: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x100031e96ce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031e96cf0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f3 f3 f3
  0x100031e96d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031e96d10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100031e96d20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17225==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_68-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 12 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (247 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_72-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fscanf
Top k = 21
AddrVFGNode ID: 240 AddrPE: [1207<--1208]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #16 {  }	3	193
AddrVFGNode ID: 422 AddrPE: [2499<--2500]	
   %4 = alloca i32*, align 8 {  }	2	6
AddrVFGNode ID: 423 AddrPE: [2501<--2502]	
   %5 = alloca i32*, align 8 {  }	2	2
AddrVFGNode ID: 261 AddrPE: [1345<--1346]	
   %6 = alloca %"class.std::vector"*, align 8 {  }	1	32
AddrVFGNode ID: 405 AddrPE: [2391<--2392]	
   %4 = alloca i32*, align 8 {  }	1	6
AddrVFGNode ID: 390 AddrPE: [2295<--2296]	
   %5 = alloca i64*, align 8 {  }	1	5
AddrVFGNode ID: 389 AddrPE: [2293<--2294]	
   %4 = alloca i64*, align 8 {  }	1	5
AddrVFGNode ID: 259 AddrPE: [1324<--1325]	
   %6 = alloca i32*, align 8 {  }	1	5
AddrVFGNode ID: 223 AddrPE: [1090<--1091]	
   %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	5
AddrVFGNode ID: 453 AddrPE: [2708<--2709]	
   %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	5
AddrVFGNode ID: 288 AddrPE: [1694<--1695]	
   %4 = alloca %"struct.std::vector<int>::_Temporary_value"*, align 8 {  }	1	4
AddrVFGNode ID: 322 AddrPE: [1896<--1897]	
   %4 = alloca %"class.std::vector"*, align 8 {  }	1	4
AddrVFGNode ID: 315 AddrPE: [1850<--1851]	
   %2 = alloca %"struct.std::vector<int>::_Temporary_value"*, align 8 {  }	1	3
AddrVFGNode ID: 133 AddrPE: [544<--545]	
   %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 467 AddrPE: [2780<--2781]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 129 AddrPE: [519<--520]	
   %4 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 151 AddrPE: [658<--659]	
   %2 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 229 AddrPE: [1144<--1145]	
   %3 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 235 AddrPE: [1185<--1186]	
   %4 = alloca %"class.std::allocator"*, align 8 {  }	1	2
AddrVFGNode ID: 117 AddrPE: [433<--434]	
   %2 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 42 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
567(193) 503(169) 227(8) 193(4)  - 0(0) 0(0) 27(9) 201(4) 0(0) 262(21) 
Found Instruction =   %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32* %19, i32** %20, align 8
Found Instruction =   %22 = load i32*, i32** %21, align 8
Found Instruction =   store i32* %23, i32** %25, align 8
Found Instruction =   store i32* %26, i32** %27, align 8
Found Instruction =   %29 = load i32*, i32** %28, align 8
Found Instruction =   store i32* %30, i32** %32, align 8
Found Instruction =   store i32* %33, i32** %34, align 8
Found Instruction =   %36 = load i32*, i32** %35, align 8
Found Instruction =   store i32* %37, i32** %39, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   store i32* %9, i32** %6, align 8
Found Instruction =   store i32* %1, i32** %15, align 8
Found Instruction =   store i32* %17, i32** %18, align 8
Found Instruction =   store i64 %19, i64* %10, align 8
Found Instruction =   store i32* %23, i32** %24, align 8
Found Instruction =   store i32* %32, i32** %33, align 8
Found Instruction =   %35 = load i32*, i32** %34, align 8
Found Instruction =   store i32* %19, i32** %20, align 8
Found Instruction =   store i32* %22, i32** %23, align 8
Found Instruction =   %27 = load i32*, i32** %26, align 8
Found Instruction =   %31 = load i32*, i32** %30, align 8
Found Instruction =   %33 = load i32*, i32** %32, align 8
Found Instruction =   store i32* %34, i32** %38, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %13 = load i32*, i32** %12, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   %11 = load i32*, i32** %10, align 8
Found Instruction =   %14 = load i32*, i32** %13, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %13 = load i32*, i32** %5, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   store i32* %1, i32** %4, align 8
Found Instruction =   %5 = load i32*, i32** %3, align 8
Found Instruction =   %6 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   store i32* %1, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %11 = load i32*, i32** %10, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   store i32* %0, i32** %11, align 8
Found Instruction =   store i32* %1, i32** %12, align 8
Found Instruction =   store i32* %2, i32** %7, align 8
Found Instruction =   %17 = load i32*, i32** %7, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   %21 = load i32*, i32** %20, align 8
Found Instruction =   store i32* %0, i32** %10, align 8
Found Instruction =   store i32* %1, i32** %11, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %16 = load i32*, i32** %6, align 8
Found Instruction =   %18 = load i32*, i32** %17, align 8
Found Instruction =   %20 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %0, i32** %9, align 8
Found Instruction =   store i32* %1, i32** %10, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %15 = load i32*, i32** %6, align 8
Found Instruction =   %17 = load i32*, i32** %16, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   store i32* %0, i32** %11, align 8
Found Instruction =   store i32* %1, i32** %12, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %16 = load i32*, i32** %15, align 8
Found Instruction =   store i32* %17, i32** %18, align 8
Found Instruction =   %22 = load i32*, i32** %21, align 8
Found Instruction =   store i32* %23, i32** %24, align 8
Found Instruction =   %25 = load i32*, i32** %6, align 8
Found Instruction =   %27 = load i32*, i32** %26, align 8
Found Instruction =   %29 = load i32*, i32** %28, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %0, i32** %9, align 8
Found Instruction =   store i32* %1, i32** %10, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %14 = load i32*, i32** %13, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   %21 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   %5 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %2, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %19 = load i32*, i32** %4, align 8
Found Instruction =   %24 = load i32*, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %8, i32** %6, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %3, align 8
Found Instruction =   %5 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %3, align 8
Found Instruction =   store i32* null, i32** %8, align 8
Found Instruction =   store i32* null, i32** %9, align 8
Found Instruction =   store i32* null, i32** %10, align 8
Found Instruction =   store i32* %7, i32** %9, align 8
Found Instruction =   %12 = load i32*, i32** %11, align 8
Found Instruction =   store i32* %12, i32** %14, align 8
Found Instruction =   %17 = load i32*, i32** %16, align 8
Found Instruction =   store i32* %19, i32** %21, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
Found Instruction =   %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
Found Instruction =   store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
Found Instruction =   %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %10 = load i32*, i32** %9, align 8
Found Instruction =   store i32* %11, i32** %6, align 8
Found Instruction =   store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
Found Instruction =   %22 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
Found Instruction =   %29 = load i32*, i32** %28, align 8
Found Instruction =   %33 = load i32*, i32** %32, align 8
Found Instruction =   store i32* %44, i32** %45, align 8
Found Instruction =   %50 = load i32*, i32** %49, align 8
Found Instruction =   store i32* %50, i32** %15, align 8
Found Instruction =   %58 = load i32*, i32** %57, align 8
Found Instruction =   %65 = load i32*, i32** %64, align 8
Found Instruction =   %69 = load i32*, i32** %68, align 8
Found Instruction =   %78 = load i32*, i32** %77, align 8
Found Instruction =   store i32* %79, i32** %77, align 8
Found Instruction =   %105 = load i32*, i32** %104, align 8
Found Instruction =   store i32* %112, i32** %116, align 8
Found Instruction =   %123 = load i32*, i32** %122, align 8
Found Instruction =   %132 = load i32*, i32** %131, align 8
Found Instruction =   store i32* %133, i32** %131, align 8
Found Instruction =   store i64 %143, i64* %16, align 8
Found Instruction =   store i32* %144, i32** %145, align 8
Found Instruction =   store i32* %149, i32** %19, align 8
Found Instruction =   %150 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %150, i32** %20, align 8
Found Instruction =   %151 = load i32*, i32** %19, align 8
Found Instruction =   %163 = load i32*, i32** %162, align 8
Found Instruction =   %166 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %169, i32** %20, align 8
Found Instruction =   %179 = load i32*, i32** %178, align 8
Found Instruction =   store i32* %183, i32** %20, align 8
Found Instruction =   %192 = load i32*, i32** %20, align 8
Found Instruction =   %195 = load i32*, i32** %19, align 8
Found Instruction =   %198 = load i32*, i32** %19, align 8
Found Instruction =   %211 = load i32*, i32** %19, align 8
Found Instruction =   %212 = load i32*, i32** %20, align 8
Found Instruction =   %218 = load i32*, i32** %19, align 8
Found Instruction =   %226 = load i32*, i32** %225, align 8
Found Instruction =   %230 = load i32*, i32** %229, align 8
Found Instruction =   %237 = load i32*, i32** %236, align 8
Found Instruction =   %241 = load i32*, i32** %240, align 8
Found Instruction =   %245 = load i32*, i32** %244, align 8
Found Instruction =   %250 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %250, i32** %253, align 8
Found Instruction =   %254 = load i32*, i32** %20, align 8
Found Instruction =   store i32* %254, i32** %257, align 8
Found Instruction =   %258 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %260, i32** %263, align 8
Found Instruction =   store %"struct.std::vector<int>::_Temporary_value"* %0, %"struct.std::vector<int>::_Temporary_value"** %4, align 8
Found Instruction =   %7 = load %"struct.std::vector<int>::_Temporary_value"*, %"struct.std::vector<int>::_Temporary_value"** %4, align 8
Found Instruction =   store %"class.std::vector"* %9, %"class.std::vector"** %8, align 8
Found Instruction =   %12 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %10 = load i32*, i32** %9, align 8
Found Instruction =   store %"struct.std::vector<int>::_Temporary_value"* %0, %"struct.std::vector<int>::_Temporary_value"** %2, align 8
Found Instruction =   %3 = load %"struct.std::vector<int>::_Temporary_value"*, %"struct.std::vector<int>::_Temporary_value"** %2, align 8
Found Instruction =   %5 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
Found Instruction =   store i32* %0, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
Found Instruction =   %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
Found Instruction =   store i64 %19, i64* %8, align 8
Found Instruction =   store i64 %22, i64* %7, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %19 = load i32*, i32** %4, align 8
Found Instruction =   store i64* %0, i64** %4, align 8
Found Instruction =   store i64* %1, i64** %5, align 8
Found Instruction =   %6 = load i64*, i64** %4, align 8
Found Instruction =   %7 = load i64, i64* %6, align 8
Found Instruction =   %8 = load i64*, i64** %5, align 8
Found Instruction =   %9 = load i64, i64* %8, align 8
Found Instruction =   %12 = load i64*, i64** %5, align 8
Found Instruction =   store i64* %12, i64** %3, align 8
Found Instruction =   %14 = load i64*, i64** %4, align 8
Found Instruction =   store i64* %14, i64** %3, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %17 = load i32*, i32** %4, align 8
Found Instruction =   store i32 %16, i32* %17, align 4
Found Instruction =   %21 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %22, i32** %4, align 8
Found Instruction =   %24 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %11 = load i32*, i32** %4, align 8
Found Instruction =   %12 = load i32*, i32** %5, align 8
Found Instruction =   %16 = load i32*, i32** %4, align 8
Found Instruction =   store i32 %15, i32* %16, align 4
Found Instruction =   %18 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %19, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %22 = load i32*, i32** %4, align 8
Found Instruction =   %27 = load i32*, i32** %6, align 8
Found Instruction =   store i32** %1, i32*** %4, align 8
Found Instruction =   %7 = load i32**, i32*** %4, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %8, i32** %6, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   store i32* null, i32** %5, align 8
Found Instruction =   store i32* null, i32** %6, align 8
Found Instruction =   store i32* null, i32** %7, align 8
Found Instruction =   %6 = load i32, i32* %5, align 4
Found Instruction =   store i32 %6, i32* %2, align 4
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
Found Instruction =   %9 = load i32*, i32** %8, align 8
=================================================================
==17252==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff5105237c at pc 0x000000401a01 bp 0x7fff51052350 sp 0x7fff51052348
WRITE of size 4 at 0x7fff5105237c thread T0
    #0 0x401a00  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_72-bad_m+0x401a00)
    #1 0x401672  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_72-bad_m+0x401672)
    #2 0x401849  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_72-bad_m+0x401849)
    #3 0x7f6846061c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x4010f9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_72-bad_m+0x4010f9)

Address 0x7fff5105237c is located in stack of thread T0 at offset 28 in frame
    #0 0x40187f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_72-bad_m+0x40187f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_72-bad_m+0x401a00) 
Shadow bytes around the buggy address:
  0x10006a202410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a202420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a202430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a202440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a202450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10006a202460: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x10006a202470: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10006a202480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a202490: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f2 00 00
  0x10006a2024a0: 00 f2 f2 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2
  0x10006a2024b0: f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17252==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_72-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 20 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_73-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fscanf
Top k = 23
AddrVFGNode ID: 207 AddrPE: [1022<--1023]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #15 {  }	4	50
AddrVFGNode ID: 86 AddrPE: [271<--272]	
   %3 = alloca %"struct.std::__detail::_List_node_base"*, align 8 {  }	3	5
AddrVFGNode ID: 85 AddrPE: [269<--270]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	3	4
AddrVFGNode ID: 87 AddrPE: [273<--274]	
   %4 = alloca %"struct.std::_List_node.0"*, align 8 {  }	2	7
AddrVFGNode ID: 223 AddrPE: [1123<--1124]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	4
AddrVFGNode ID: 143 AddrPE: [616<--617]	
   %4 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 142 AddrPE: [614<--615]	
   %3 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 258 AddrPE: [1373<--1374]	
   %2 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 130 AddrPE: [542<--543]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	3
AddrVFGNode ID: 144 AddrPE: [630<--631]	
   %2 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 99 AddrPE: [363<--364]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 121 AddrPE: [497<--498]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 219 AddrPE: [1101<--1102]	
   %3 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 236 AddrPE: [1228<--1229]	
   %2 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 93 AddrPE: [325<--326]	
   %2 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 182 AddrPE: [859<--860]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 103 AddrPE: [389<--390]	
   %3 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 202 AddrPE: [999<--1000]	
   %4 = alloca %"class.std::allocator"*, align 8 {  }	1	2
AddrVFGNode ID: 250 AddrPE: [1297<--1298]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 133 AddrPE: [562<--563]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	2
AddrVFGNode ID: 158 AddrPE: [716<--717]	
   %7 = alloca %"struct.std::_List_node.0"*, align 8 {  }	1	2
AddrVFGNode ID: 152 AddrPE: [685<--686]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	2
AddrVFGNode ID: 38 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
286(116) 233(95) 58(6) 52(4)  - 0(0) 0(0) 81(18) 53(3) 0(0) 90(23) 
Found Instruction =   %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %17, %"struct.std::__detail::_List_node_base"** %18, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %20, %"struct.std::__detail::_List_node_base"** %21, align 8
Found Instruction =   %23 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %22, align 8
Found Instruction =   %25 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %24, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %6 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %10, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %11, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %13 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %19 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %20, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %21 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %24 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %23, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %24, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %25 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store i32* %26, i32** %5, align 8
Found Instruction =   %31 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %0, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %5 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %3, align 8
Found Instruction =   %8 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %11, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %8, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %3, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %1, %"struct.std::_List_const_iterator"** %4, align 8
Found Instruction =   %5 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %3, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   %8 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %4, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %7, %"struct.std::__detail::_List_node_base"** %8, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %7, align 8
Found Instruction =   %13 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %7, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %16 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %18 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %24 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %2, %"struct.std::_List_node.0"** %6, align 8
Found Instruction =   %12 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %6, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %11, align 8
Found Instruction =   %5 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %11 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %10, align 8
Found Instruction =   store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
Found Instruction =   %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %0, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %7, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %3, align 8
Found Instruction =   %5 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %3, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %6, %"struct.std::__detail::_List_node_base"** %10, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %13, %"struct.std::__detail::_List_node_base"** %17, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
=================================================================
==17279==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffdf330d51c at pc 0x0000004014dc bp 0x7ffdf330d4f0 sp 0x7ffdf330d4e8
WRITE of size 4 at 0x7ffdf330d51c thread T0
    #0 0x4014db  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_73-bad_m+0x4014db)
    #1 0x4011a5  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_73-bad_m+0x4011a5)
    #2 0x401369  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_73-bad_m+0x401369)
    #3 0x7fa6c1ba0c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400f39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_73-bad_m+0x400f39)

Address 0x7ffdf330d51c is located in stack of thread T0 at offset 28 in frame
    #0 0x40139f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_73-bad_m+0x40139f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_73-bad_m+0x4014db) 
Shadow bytes around the buggy address:
  0x10003e659a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003e659a60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003e659a70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003e659a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003e659a90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10003e659aa0: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10003e659ab0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003e659ac0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f2 00 00
  0x10003e659ad0: 00 f2 f2 f2 f2 f2 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10003e659ae0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003e659af0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17279==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_73-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 20 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (247 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_74-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fscanf
Function = __isoc99_sscanf
Top k = 51
AddrVFGNode ID: 248 AddrPE: [1387<--1388]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #18 {  }	4	201
AddrVFGNode ID: 371 AddrPE: [2270<--2271]	
   %6 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	3	15
AddrVFGNode ID: 185 AddrPE: [859<--860]	
   %6 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	18
AddrVFGNode ID: 327 AddrPE: [1888<--1889]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	2	11
AddrVFGNode ID: 191 AddrPE: [871<--872]	
   %12 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	10
AddrVFGNode ID: 466 AddrPE: [2922<--2923]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	9
AddrVFGNode ID: 100 AddrPE: [328<--329]	
   %4 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	7
AddrVFGNode ID: 347 AddrPE: [2090<--2091]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	2	5
AddrVFGNode ID: 372 AddrPE: [2272<--2273]	
   %7 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	17
AddrVFGNode ID: 188 AddrPE: [865<--866]	
   %9 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	10
AddrVFGNode ID: 186 AddrPE: [861<--862]	
   %7 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	9
AddrVFGNode ID: 187 AddrPE: [863<--864]	
   %8 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, align 8 {  }	1	9
AddrVFGNode ID: 208 AddrPE: [1101<--1102]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	8
AddrVFGNode ID: 203 AddrPE: [1055<--1056]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	7
AddrVFGNode ID: 204 AddrPE: [1074<--1075]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	7
AddrVFGNode ID: 174 AddrPE: [774<--775]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	6
AddrVFGNode ID: 184 AddrPE: [857<--858]	
   %5 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	6
AddrVFGNode ID: 206 AddrPE: [1097<--1098]	
   %5 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	6
AddrVFGNode ID: 369 AddrPE: [2266<--2267]	
   %4 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	6
AddrVFGNode ID: 146 AddrPE: [603<--604]	
   %4 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	5
AddrVFGNode ID: 350 AddrPE: [2096<--2097]	
   %9 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	5
AddrVFGNode ID: 392 AddrPE: [2476<--2477]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 364 AddrPE: [2238<--2239]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 393 AddrPE: [2478<--2479]	
   %5 = alloca %"struct.std::_Rb_tree_node"**, align 8 {  }	1	4
AddrVFGNode ID: 379 AddrPE: [2367<--2368]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 433 AddrPE: [2715<--2716]	
   %6 = alloca %"struct.std::pair"*, align 8 {  }	1	4
AddrVFGNode ID: 386 AddrPE: [2421<--2422]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 113 AddrPE: [413<--414]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 283 AddrPE: [1618<--1619]	
   %5 = alloca i32*, align 8 {  }	1	3
AddrVFGNode ID: 211 AddrPE: [1136<--1137]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 101 AddrPE: [330<--331]	
   %5 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	3
AddrVFGNode ID: 284 AddrPE: [1620<--1621]	
   %6 = alloca i32*, align 8 {  }	1	3
AddrVFGNode ID: 98 AddrPE: [310<--311]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 145 AddrPE: [601<--602]	
   %3 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 281 AddrPE: [1603<--1604]	
   %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 276 AddrPE: [1574<--1575]	
   %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 212 AddrPE: [1147<--1148]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 277 AddrPE: [1576<--1577]	
   %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 182 AddrPE: [827<--828]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 112 AddrPE: [403<--404]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 154 AddrPE: [654<--655]	
   %4 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	3
AddrVFGNode ID: 488 AddrPE: [3063<--3064]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 153 AddrPE: [652<--653]	
   %3 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 465 AddrPE: [2920<--2921]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
AddrVFGNode ID: 471 AddrPE: [2979<--2980]	
   %2 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 358 AddrPE: [2187<--2188]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	2
AddrVFGNode ID: 126 AddrPE: [489<--490]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
AddrVFGNode ID: 243 AddrPE: [1364<--1365]	
   %4 = alloca %"struct.std::less"*, align 8 {  }	1	2
AddrVFGNode ID: 457 AddrPE: [2865<--2866]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
AddrVFGNode ID: 105 AddrPE: [362<--363]	
   %2 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 41 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
698(246) 587(199) 219(8) 219(10)  - 0(0) 0(0) 287(39) 212(5) 0(0) 306(51) 
Found Instruction =   %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store i32 %13, i32* %14, align 4
Found Instruction =   store i32 %16, i32* %17, align 4
Found Instruction =   store i32 %19, i32* %20, align 4
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %16, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %18, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
Found Instruction =   %9 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %19, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %3, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %1, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %3, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %17, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %21, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"* %3, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %16, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %20, align 8
Found Instruction =   %21 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %24 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %23, align 8
Found Instruction =   %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %32 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %38, align 8
Found Instruction =   %46 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %49 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %50, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %51 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %53, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %55 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %58 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %60, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %62 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %64 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %63, %"struct.std::_Rb_tree_node_base"** %65, align 8
Found Instruction =   %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %67 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %66, %"struct.std::_Rb_tree_node_base"** %69, align 8
Found Instruction =   %70 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %73 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %72, align 8
Found Instruction =   %76 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %79 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %81 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %85 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %84, %"struct.std::_Rb_tree_node_base"** %87, align 8
Found Instruction =   %89 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %90, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %91 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %93, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %101 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %12, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %16 = load i32, i32* %15, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store i32 %16, i32* %19, align 8
Found Instruction =   %20 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
Found Instruction =   %23 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %25, align 8
Found Instruction =   %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %7, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
Found Instruction =   %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32, i32* %8, align 4
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   %11 = load i32, i32* %10, align 4
Found Instruction =   store %"struct.std::_Rb_tree_node"* %25, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %37, %"struct.std::_Rb_tree_node_base"** %36, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %38, align 8
Found Instruction =   %48 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %51, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %61 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %11, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %17 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %19, align 8
Found Instruction =   %21 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %20, align 8
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %43, %"struct.std::_Rb_tree_node_base"** %42, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %44, align 8
Found Instruction =   %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %51, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %58, align 8
Found Instruction =   %61 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %60, align 8
Found Instruction =   %72 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %71, align 8
Found Instruction =   %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %77, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %91, %"struct.std::_Rb_tree_node_base"** %90, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %93, %"struct.std::_Rb_tree_node_base"** %92, align 8
Found Instruction =   %99 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %98, align 8
Found Instruction =   %107 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %106, align 8
Found Instruction =   %109 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %108, align 8
Found Instruction =   %120 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %119, align 8
Found Instruction =   %125 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %124, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %138, %"struct.std::_Rb_tree_node_base"** %137, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %140, %"struct.std::_Rb_tree_node_base"** %139, align 8
Found Instruction =   %145 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %144, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %3, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %22 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store i8 %29, i8* %10, align 1
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %45 = load i64, i64* %44, align 8
Found Instruction =   store i64 %46, i64* %44, align 8
Found Instruction =   %47 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %12, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %25 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store i8 %28, i8* %8, align 1
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %40, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"** %47, align 8
Found Instruction =   %58 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %57, align 8
Found Instruction =   %67 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %66, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %13, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %13, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %13, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %14, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::pair"* %0, %"struct.std::pair"** %6, align 8
Found Instruction =   %9 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
Found Instruction =   store i32 %15, i32* %11, align 4
Found Instruction =   store i32 0, i32* %16, align 4
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %23 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   %25 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %27, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %29 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %31, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
=================================================================
==17306==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe7377d18c at pc 0x00000040191b bp 0x7ffe7377d150 sp 0x7ffe7377d148
WRITE of size 4 at 0x7ffe7377d18c thread T0
    #0 0x40191a  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_74-bad_m+0x40191a)
    #1 0x4015c7  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_74-bad_m+0x4015c7)
    #2 0x401799  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_74-bad_m+0x401799)
    #3 0x7f6e78b83c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x401209  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_74-bad_m+0x401209)

Address 0x7ffe7377d18c is located in stack of thread T0 at offset 44 in frame
    #0 0x4017cf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_74-bad_m+0x4017cf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_74-bad_m+0x40191a) 
Shadow bytes around the buggy address:
  0x10004e6e79e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e6e79f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e6e7a00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e6e7a10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e6e7a20: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10004e6e7a30: 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3 00 00 00 00
  0x10004e6e7a40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e6e7a50: 00 00 00 00 f1 f1 f1 f1 04 f2 00 00 00 00 00 00
  0x10004e6e7a60: f2 f2 f2 f2 04 f2 04 f2 04 f2 00 00 00 00 00 00
  0x10004e6e7a70: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004e6e7a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17306==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_74-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 27 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_81-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fscanf
Top k = 1
AddrVFGNode ID: 44 AddrPE: [30<--31]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
54(21) 2(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 1(1) 0(0) 1(1) 
Found Instruction =   %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_81-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (252 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_82-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fscanf
Function = __isoc99_sscanf
Top k = 1
AddrVFGNode ID: 44 AddrPE: [30<--31]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
55(22) 2(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 1(1) 0(0) 1(1) 
Found Instruction =   %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_82-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 12 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_83-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = fscanf
Top k = 1
AddrVFGNode ID: 36 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
49(17) 2(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 1(1) 0(0) 1(1) 
Found Instruction =   %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_83-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (254 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_84-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = fscanf
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 63 AddrPE: [185<--186]	
   %5 = call noalias nonnull i8* @_Znwm(i64 4) #11 {  }	2	10
AddrVFGNode ID: 37 AddrPE: [4<--5]	
 @stdin = external dso_local global %struct._IO_FILE*, align 8 { Glob  }	1	1
53(20) 12(4) 10(1) 0(0)  - 0(0) 0(0) 0(0) 11(2) 0(0) 11(2) 
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"* %0, %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"** %3, align 8
Found Instruction =   %5 = load %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"** %3, align 8
Found Instruction =   store i32 %6, i32* %7, align 4
Found Instruction =   %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"* %0, %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"** %2, align 8
Found Instruction =   %5 = load %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"** %2, align 8
Found Instruction =   %8 = load i32, i32* %7, align 4
Found Instruction =   %12 = load i32, i32* %11, align 4
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"* %6, %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"** %2, align 8
Found Instruction =   %9 = load %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_fscanf_84::CWE124_Buffer_Underwrite__CWE839_fscanf_84_bad"** %2, align 8
=================================================================
==17419==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff9c7d983c at pc 0x0000004010c7 bp 0x7fff9c7d9810 sp 0x7fff9c7d9808
WRITE of size 4 at 0x7fff9c7d983c thread T0
    #0 0x4010c6  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_84-bad_m+0x4010c6)
    #1 0x4011f9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_84-bad_m+0x4011f9)
    #2 0x401269  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_84-bad_m+0x401269)
    #3 0x7f9754f68c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400d99  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_84-bad_m+0x400d99)

Address 0x7fff9c7d983c is located in stack of thread T0 at offset 28 in frame
    #0 0x400f1f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_84-bad_m+0x400f1f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_84-bad_m+0x4010c6) 
Shadow bytes around the buggy address:
  0x1000738f32b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000738f32c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000738f32d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000738f32e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000738f32f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000738f3300: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x1000738f3310: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000738f3320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000738f3330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000738f3340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000738f3350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17419==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_fscanf_84-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (247 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_01-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %41, i32* %2, align 4
Found Instruction =   store i8 0, i8* %51, align 1
Found Instruction =   store i32 %53, i32* %1, align 4
Found Instruction =   store i32 1, i32* %73, align 4
Found Instruction =   %81 = load i32, i32* %80, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_01-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17447==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff66b5115c at pc 0x000000401079 bp 0x7fff66b510f0 sp 0x7fff66b510e8
WRITE of size 4 at 0x7fff66b5115c thread T0
    #0 0x401078  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_01-bad_m+0x401078)
    #1 0x4011e9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_01-bad_m+0x4011e9)
    #2 0x7f53e249ec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_01-bad_m+0x400ca9)

Address 0x7fff66b5115c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_01-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_01-bad_m+0x401078) 
Shadow bytes around the buggy address:
  0x10006cd621d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006cd621e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006cd621f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006cd62200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006cd62210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10006cd62220: f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]00 00 00 00
  0x10006cd62230: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10006cd62240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006cd62250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006cd62260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006cd62270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17447==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_01-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (247 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_02-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %41, i32* %2, align 4
Found Instruction =   store i8 0, i8* %51, align 1
Found Instruction =   store i32 %53, i32* %1, align 4
Found Instruction =   store i32 1, i32* %73, align 4
Found Instruction =   %81 = load i32, i32* %80, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_02-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17478==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd110c9b7c at pc 0x000000401079 bp 0x7ffd110c9b10 sp 0x7ffd110c9b08
WRITE of size 4 at 0x7ffd110c9b7c thread T0
    #0 0x401078  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_02-bad_m+0x401078)
    #1 0x4011e9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_02-bad_m+0x4011e9)
    #2 0x7fcdaffc2c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_02-bad_m+0x400ca9)

Address 0x7ffd110c9b7c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_02-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_02-bad_m+0x401078) 
Shadow bytes around the buggy address:
  0x100022211310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100022211320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100022211330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100022211340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100022211350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100022211360: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x100022211370: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x100022211380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100022211390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000222113a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000222113b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17478==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_02-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 29 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (245 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_03-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %41, i32* %2, align 4
Found Instruction =   store i8 0, i8* %51, align 1
Found Instruction =   store i32 %53, i32* %1, align 4
Found Instruction =   store i32 1, i32* %73, align 4
Found Instruction =   %81 = load i32, i32* %80, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_03-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17509==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffca76dbefc at pc 0x000000401079 bp 0x7ffca76dbe90 sp 0x7ffca76dbe88
WRITE of size 4 at 0x7ffca76dbefc thread T0
    #0 0x401078  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_03-bad_m+0x401078)
    #1 0x4011e9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_03-bad_m+0x4011e9)
    #2 0x7f2cb981bc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_03-bad_m+0x400ca9)

Address 0x7ffca76dbefc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_03-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_03-bad_m+0x401078) 
Shadow bytes around the buggy address:
  0x100014ed3780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014ed3790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014ed37a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014ed37b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014ed37c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100014ed37d0: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x100014ed37e0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x100014ed37f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014ed3800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014ed3810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100014ed3820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17509==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_03-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 21 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (256 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_04-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %41, i32* %2, align 4
Found Instruction =   store i8 0, i8* %51, align 1
Found Instruction =   store i32 %53, i32* %1, align 4
Found Instruction =   store i32 1, i32* %73, align 4
Found Instruction =   %81 = load i32, i32* %80, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_04-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17542==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc4bf60d3c at pc 0x000000401079 bp 0x7ffc4bf60cd0 sp 0x7ffc4bf60cc8
WRITE of size 4 at 0x7ffc4bf60d3c thread T0
    #0 0x401078  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_04-bad_m+0x401078)
    #1 0x4011e9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_04-bad_m+0x4011e9)
    #2 0x7f6b00443c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_04-bad_m+0x400ca9)

Address 0x7ffc4bf60d3c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_04-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_04-bad_m+0x401078) 
Shadow bytes around the buggy address:
  0x1000097e4150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000097e4160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000097e4170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000097e4180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000097e4190: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x1000097e41a0: 00 00 f2 f2 00 06 f2[f2]00 00 00 00 00 f3 f3 f3
  0x1000097e41b0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000097e41c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000097e41d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000097e41e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000097e41f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17542==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_04-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 28 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (241 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_05-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 55 AddrPE: [76<--77]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %44, i32* %2, align 4
Found Instruction =   store i8 0, i8* %54, align 1
Found Instruction =   store i32 %56, i32* %1, align 4
Found Instruction =   store i32 1, i32* %80, align 4
Found Instruction =   %88 = load i32, i32* %87, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_05-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17573==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc71e7ec9c at pc 0x00000040109a bp 0x7ffc71e7ec30 sp 0x7ffc71e7ec28
WRITE of size 4 at 0x7ffc71e7ec9c thread T0
    #0 0x401099  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_05-bad_m+0x401099)
    #1 0x401209  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_05-bad_m+0x401209)
    #2 0x7f846dafcc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_05-bad_m+0x400ca9)

Address 0x7ffc71e7ec9c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_05-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_05-bad_m+0x401099) 
Shadow bytes around the buggy address:
  0x10000e3c7d40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e3c7d50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e3c7d60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e3c7d70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e3c7d80: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2
=>0x10000e3c7d90: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10000e3c7da0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e3c7db0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e3c7dc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e3c7dd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000e3c7de0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17573==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_05-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (246 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_06-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %41, i32* %2, align 4
Found Instruction =   store i8 0, i8* %51, align 1
Found Instruction =   store i32 %53, i32* %1, align 4
Found Instruction =   store i32 1, i32* %73, align 4
Found Instruction =   %81 = load i32, i32* %80, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_06-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17606==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc6561fdbc at pc 0x000000401079 bp 0x7ffc6561fd50 sp 0x7ffc6561fd48
WRITE of size 4 at 0x7ffc6561fdbc thread T0
    #0 0x401078  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_06-bad_m+0x401078)
    #1 0x4011e9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_06-bad_m+0x4011e9)
    #2 0x7f1a8a7c8c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_06-bad_m+0x400ca9)

Address 0x7ffc6561fdbc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_06-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_06-bad_m+0x401078) 
Shadow bytes around the buggy address:
  0x10000cabbf60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000cabbf70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000cabbf80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000cabbf90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000cabbfa0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10000cabbfb0: 00 00 f2 f2 00 06 f2[f2]00 00 00 00 00 f3 f3 f3
  0x10000cabbfc0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000cabbfd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000cabbfe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000cabbff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000cabc000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17606==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_06-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (247 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_07-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 55 AddrPE: [76<--77]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %44, i32* %2, align 4
Found Instruction =   store i8 0, i8* %54, align 1
Found Instruction =   store i32 %56, i32* %1, align 4
Found Instruction =   store i32 1, i32* %80, align 4
Found Instruction =   %88 = load i32, i32* %87, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_07-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17637==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffeb773b4dc at pc 0x00000040109a bp 0x7ffeb773b470 sp 0x7ffeb773b468
WRITE of size 4 at 0x7ffeb773b4dc thread T0
    #0 0x401099  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_07-bad_m+0x401099)
    #1 0x401209  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_07-bad_m+0x401209)
    #2 0x7fc38832ec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_07-bad_m+0x400ca9)

Address 0x7ffeb773b4dc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_07-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_07-bad_m+0x401099) 
Shadow bytes around the buggy address:
  0x100056edf640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056edf650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056edf660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056edf670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056edf680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100056edf690: f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]00 00 00 00
  0x100056edf6a0: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100056edf6b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056edf6c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056edf6d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056edf6e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17637==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_07-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (244 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_08-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %44, i32* %2, align 4
Found Instruction =   store i8 0, i8* %54, align 1
Found Instruction =   store i32 %56, i32* %1, align 4
Found Instruction =   store i32 1, i32* %80, align 4
Found Instruction =   %88 = load i32, i32* %87, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_08-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17670==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffc98165dc at pc 0x00000040109a bp 0x7fffc9816570 sp 0x7fffc9816568
WRITE of size 4 at 0x7fffc98165dc thread T0
    #0 0x401099  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_08-bad_m+0x401099)
    #1 0x401219  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_08-bad_m+0x401219)
    #2 0x7f66bfe60c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_08-bad_m+0x400ca9)

Address 0x7fffc98165dc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_08-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_08-bad_m+0x401099) 
Shadow bytes around the buggy address:
  0x1000792fac60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000792fac70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000792fac80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000792fac90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000792faca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000792facb0: f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]00 00 00 00
  0x1000792facc0: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x1000792facd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000792face0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000792facf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000792fad00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17670==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_08-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 30 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (250 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_09-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %44, i32* %2, align 4
Found Instruction =   store i8 0, i8* %54, align 1
Found Instruction =   store i32 %56, i32* %1, align 4
Found Instruction =   store i32 1, i32* %80, align 4
Found Instruction =   %88 = load i32, i32* %87, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_09-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17701==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffe7148efc at pc 0x00000040109a bp 0x7fffe7148e90 sp 0x7fffe7148e88
WRITE of size 4 at 0x7fffe7148efc thread T0
    #0 0x401099  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_09-bad_m+0x401099)
    #1 0x401209  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_09-bad_m+0x401209)
    #2 0x7f8a07479c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_09-bad_m+0x400ca9)

Address 0x7fffe7148efc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_09-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_09-bad_m+0x401099) 
Shadow bytes around the buggy address:
  0x10007ce21180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ce21190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ce211a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ce211b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ce211c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007ce211d0: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x10007ce211e0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10007ce211f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ce21200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ce21210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007ce21220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17701==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_09-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (237 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_10-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %44, i32* %2, align 4
Found Instruction =   store i8 0, i8* %54, align 1
Found Instruction =   store i32 %56, i32* %1, align 4
Found Instruction =   store i32 1, i32* %80, align 4
Found Instruction =   %88 = load i32, i32* %87, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_10-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17732==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff772b747c at pc 0x00000040109a bp 0x7fff772b7410 sp 0x7fff772b7408
WRITE of size 4 at 0x7fff772b747c thread T0
    #0 0x401099  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_10-bad_m+0x401099)
    #1 0x401209  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_10-bad_m+0x401209)
    #2 0x7f54a6541c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_10-bad_m+0x400ca9)

Address 0x7fff772b747c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_10-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_10-bad_m+0x401099) 
Shadow bytes around the buggy address:
  0x10006ee4ee30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ee4ee40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ee4ee50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ee4ee60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ee4ee70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10006ee4ee80: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x10006ee4ee90: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10006ee4eea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ee4eeb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ee4eec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006ee4eed0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17732==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_10-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (252 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_11-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %44, i32* %2, align 4
Found Instruction =   store i8 0, i8* %54, align 1
Found Instruction =   store i32 %56, i32* %1, align 4
Found Instruction =   store i32 1, i32* %80, align 4
Found Instruction =   %88 = load i32, i32* %87, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_11-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17765==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc47d7411c at pc 0x00000040109e bp 0x7ffc47d740b0 sp 0x7ffc47d740a8
WRITE of size 4 at 0x7ffc47d7411c thread T0
    #0 0x40109d  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_11-bad_m+0x40109d)
    #1 0x401219  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_11-bad_m+0x401219)
    #2 0x7f653e1f0c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_11-bad_m+0x400ca9)

Address 0x7ffc47d7411c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_11-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_11-bad_m+0x40109d) 
Shadow bytes around the buggy address:
  0x100008fa67d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008fa67e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008fa67f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008fa6800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008fa6810: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2
=>0x100008fa6820: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x100008fa6830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008fa6840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008fa6850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008fa6860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008fa6870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17765==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_11-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (250 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_12-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 3
AddrVFGNode ID: 54 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 58 AddrPE: [80<--81]	
   %10 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 56 AddrPE: [76<--77]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
46(16) 8(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 7(3) 0(0) 7(3) 
Found Instruction =   store i32 %46, i32* %2, align 4
Found Instruction =   store i8 0, i8* %56, align 1
Found Instruction =   store i32 %58, i32* %1, align 4
Found Instruction =   store i32 1, i32* %83, align 4
Found Instruction =   %91 = load i32, i32* %90, align 4
Found Instruction =   store i32 1, i32* %109, align 4
Found Instruction =   %117 = load i32, i32* %116, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_12-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17796==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffb6cd28dc at pc 0x0000004010d6 bp 0x7fffb6cd2870 sp 0x7fffb6cd2868
WRITE of size 4 at 0x7fffb6cd28dc thread T0
    #0 0x4010d5  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_12-bad_m+0x4010d5)
    #1 0x401379  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_12-bad_m+0x401379)
    #2 0x7f1ccd32fc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_12-bad_m+0x400ca9)

Address 0x7fffb6cd28dc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_12-bad_m+0x400d7f)

  This frame has 4 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
    [176, 216) ''
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_12-bad_m+0x4010d5) 
Shadow bytes around the buggy address:
  0x100076d924c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100076d924d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100076d924e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100076d924f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100076d92500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100076d92510: f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]00 00 00 00
  0x100076d92520: 00 f2 f2 f2 f2 f2 00 00 00 00 00 f3 f3 f3 f3 f3
  0x100076d92530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100076d92540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100076d92550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100076d92560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17796==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_12-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 16 times to write data ]
[ perf record: Captured and wrote 0.021 MB perf.data (170 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_13-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %44, i32* %2, align 4
Found Instruction =   store i8 0, i8* %54, align 1
Found Instruction =   store i32 %56, i32* %1, align 4
Found Instruction =   store i32 1, i32* %80, align 4
Found Instruction =   %88 = load i32, i32* %87, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_13-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17830==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc87e2f01c at pc 0x00000040109a bp 0x7ffc87e2efb0 sp 0x7ffc87e2efa8
WRITE of size 4 at 0x7ffc87e2f01c thread T0
    #0 0x401099  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_13-bad_m+0x401099)
    #1 0x401209  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_13-bad_m+0x401209)
    #2 0x7f044b893c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_13-bad_m+0x400ca9)

Address 0x7ffc87e2f01c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_13-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_13-bad_m+0x401099) 
Shadow bytes around the buggy address:
  0x100010fbddb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100010fbddc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100010fbddd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100010fbdde0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100010fbddf0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2
=>0x100010fbde00: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x100010fbde10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100010fbde20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100010fbde30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100010fbde40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100010fbde50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17830==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_13-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 31 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (245 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_14-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %44, i32* %2, align 4
Found Instruction =   store i8 0, i8* %54, align 1
Found Instruction =   store i32 %56, i32* %1, align 4
Found Instruction =   store i32 1, i32* %80, align 4
Found Instruction =   %88 = load i32, i32* %87, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_14-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17862==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd4477b4bc at pc 0x00000040109a bp 0x7ffd4477b450 sp 0x7ffd4477b448
WRITE of size 4 at 0x7ffd4477b4bc thread T0
    #0 0x401099  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_14-bad_m+0x401099)
    #1 0x401209  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_14-bad_m+0x401209)
    #2 0x7fa34ea0fc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_14-bad_m+0x400ca9)

Address 0x7ffd4477b4bc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_14-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_14-bad_m+0x401099) 
Shadow bytes around the buggy address:
  0x1000288e7640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e7650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e7660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e7670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e7680: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x1000288e7690: 00 00 f2 f2 00 06 f2[f2]00 00 00 00 00 f3 f3 f3
  0x1000288e76a0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e76b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e76c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e76d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000288e76e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17862==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_14-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.023 MB perf.data (233 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_15-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %41, i32* %2, align 4
Found Instruction =   store i8 0, i8* %51, align 1
Found Instruction =   store i32 %53, i32* %1, align 4
Found Instruction =   store i32 1, i32* %73, align 4
Found Instruction =   %81 = load i32, i32* %80, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_15-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17895==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd08a6875c at pc 0x000000401079 bp 0x7ffd08a686f0 sp 0x7ffd08a686e8
WRITE of size 4 at 0x7ffd08a6875c thread T0
    #0 0x401078  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_15-bad_m+0x401078)
    #1 0x4011e9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_15-bad_m+0x4011e9)
    #2 0x7f6b7e7fec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_15-bad_m+0x400ca9)

Address 0x7ffd08a6875c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_15-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_15-bad_m+0x401078) 
Shadow bytes around the buggy address:
  0x100021145090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000211450a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000211450b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000211450c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000211450d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000211450e0: f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]00 00 00 00
  0x1000211450f0: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100021145100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100021145110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100021145120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100021145130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17895==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_15-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 27 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_16-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %42, i32* %2, align 4
Found Instruction =   store i8 0, i8* %52, align 1
Found Instruction =   store i32 %54, i32* %1, align 4
Found Instruction =   store i32 1, i32* %76, align 4
Found Instruction =   %84 = load i32, i32* %83, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_16-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17929==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcfb76921c at pc 0x000000401083 bp 0x7ffcfb7691b0 sp 0x7ffcfb7691a8
WRITE of size 4 at 0x7ffcfb76921c thread T0
    #0 0x401082  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_16-bad_m+0x401082)
    #1 0x4011f9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_16-bad_m+0x4011f9)
    #2 0x7f9861dfcc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_16-bad_m+0x400ca9)

Address 0x7ffcfb76921c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_16-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_16-bad_m+0x401082) 
Shadow bytes around the buggy address:
  0x10001f6e51f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001f6e5200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001f6e5210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001f6e5220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001f6e5230: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2
=>0x10001f6e5240: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10001f6e5250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001f6e5260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001f6e5270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001f6e5280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10001f6e5290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17929==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_16-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_17-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 56 AddrPE: [78<--79]	
   %10 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %47, i32* %4, align 4
Found Instruction =   store i8 0, i8* %57, align 1
Found Instruction =   store i32 %59, i32* %3, align 4
Found Instruction =   store i32 1, i32* %87, align 4
Found Instruction =   %95 = load i32, i32* %94, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_17-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17960==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffffbf2d1fc at pc 0x0000004010c0 bp 0x7ffffbf2d190 sp 0x7ffffbf2d188
WRITE of size 4 at 0x7ffffbf2d1fc thread T0
    #0 0x4010bf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_17-bad_m+0x4010bf)
    #1 0x401249  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_17-bad_m+0x401249)
    #2 0x7f8813084c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_17-bad_m+0x400ca9)

Address 0x7ffffbf2d1fc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_17-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_17-bad_m+0x4010bf) 
Shadow bytes around the buggy address:
  0x10007f7dd9e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f7dd9f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f7dda00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f7dda10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f7dda20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007f7dda30: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x10007f7dda40: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10007f7dda50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f7dda60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f7dda70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f7dda80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17960==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_17-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_18-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 54 AddrPE: [74<--75]	
   %8 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %42, i32* %2, align 4
Found Instruction =   store i8 0, i8* %52, align 1
Found Instruction =   store i32 %54, i32* %1, align 4
Found Instruction =   store i32 1, i32* %75, align 4
Found Instruction =   %83 = load i32, i32* %82, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_18-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==17991==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffee264bd9c at pc 0x00000040107e bp 0x7ffee264bd30 sp 0x7ffee264bd28
WRITE of size 4 at 0x7ffee264bd9c thread T0
    #0 0x40107d  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_18-bad_m+0x40107d)
    #1 0x4011e9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_18-bad_m+0x4011e9)
    #2 0x7f2d5e784c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_18-bad_m+0x400ca9)

Address 0x7ffee264bd9c is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_18-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_18-bad_m+0x40107d) 
Shadow bytes around the buggy address:
  0x10005c4c1760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005c4c1770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005c4c1780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005c4c1790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005c4c17a0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2
=>0x10005c4c17b0: 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10005c4c17c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005c4c17d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005c4c17e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005c4c17f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005c4c1800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==17991==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_18-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 27 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (251 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_21-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 66 AddrPE: [219<--220]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %39, i32* %2, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_21-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18022==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffdc2177dbc at pc 0x00000040118b bp 0x7ffdc2177d90 sp 0x7ffdc2177d88
WRITE of size 4 at 0x7ffdc2177dbc thread T0
    #0 0x40118a  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_21-bad_m+0x40118a)
    #1 0x400fd8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_21-bad_m+0x400fd8)
    #2 0x4012d9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_21-bad_m+0x4012d9)
    #3 0x7f6e69e2bc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_21-bad_m+0x400ca9)

Address 0x7ffdc2177dbc is located in stack of thread T0 at offset 28 in frame
    #0 0x40104f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_21-bad_m+0x40104f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_21-bad_m+0x40118a) 
Shadow bytes around the buggy address:
  0x100038426f60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100038426f70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100038426f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100038426f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100038426fa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100038426fb0: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x100038426fc0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100038426fd0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x100038426fe0: 00 00 f2 f2 00 06 f3 f3 00 00 00 00 00 00 00 00
  0x100038426ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100038427000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18022==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_21-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 27 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (239 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_22-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 73 AddrPE: [252<--253]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %39, i32* %2, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_22-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18053==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fffe5bb3bfc at pc 0x0000004011eb bp 0x7fffe5bb3bd0 sp 0x7fffe5bb3bc8
WRITE of size 4 at 0x7fffe5bb3bfc thread T0
    #0 0x4011ea  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_22-bad_m+0x4011ea)
    #1 0x400fd8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_22-bad_m+0x400fd8)
    #2 0x401079  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_22-bad_m+0x401079)
    #3 0x7fa32a8e2c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_22-bad_m+0x400ca9)

Address 0x7fffe5bb3bfc is located in stack of thread T0 at offset 28 in frame
    #0 0x4010af  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_22-bad_m+0x4010af)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_22-bad_m+0x4011ea) 
Shadow bytes around the buggy address:
  0x10007cb6e720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007cb6e730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007cb6e740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007cb6e750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007cb6e760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007cb6e770: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x10007cb6e780: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10007cb6e790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007cb6e7a0: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f3 f3
  0x10007cb6e7b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007cb6e7c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18053==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_22-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 25 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (248 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_31-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 56 AddrPE: [78<--79]	
   %10 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %43, i32* %2, align 4
Found Instruction =   store i8 0, i8* %53, align 1
Found Instruction =   store i32 %55, i32* %1, align 4
Found Instruction =   store i32 1, i32* %77, align 4
Found Instruction =   %85 = load i32, i32* %84, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_31-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18096==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc455edcfc at pc 0x000000401091 bp 0x7ffc455edc90 sp 0x7ffc455edc88
WRITE of size 4 at 0x7ffc455edcfc thread T0
    #0 0x401090  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_31-bad_m+0x401090)
    #1 0x401209  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_31-bad_m+0x401209)
    #2 0x7f6d12b8bc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_31-bad_m+0x400ca9)

Address 0x7ffc455edcfc is located in stack of thread T0 at offset 92 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_31-bad_m+0x400d7f)

  This frame has 3 object(s):
    [32, 48) ''
    [64, 78) ''
    [96, 136) '' <== Memory access at offset 92 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_31-bad_m+0x401090) 
Shadow bytes around the buggy address:
  0x100008ab5b40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ab5b50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ab5b60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ab5b70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ab5b80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100008ab5b90: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f2[f2]
  0x100008ab5ba0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x100008ab5bb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ab5bc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ab5bd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100008ab5be0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18096==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_31-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (256 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_32-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 55 AddrPE: [76<--77]	
   %9 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 58 AddrPE: [82<--83]	
   %12 = alloca [10 x i32], align 16 {  }	1	2
54(17) 16(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %47, i32* %5, align 4
Found Instruction =   store i8 0, i8* %57, align 1
Found Instruction =   store i32 %59, i32* %4, align 4
Found Instruction =   store i32 1, i32* %83, align 4
Found Instruction =   %91 = load i32, i32* %90, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_32-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18127==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd54e0244c at pc 0x0000004010b9 bp 0x7ffd54e023d0 sp 0x7ffd54e023c8
WRITE of size 4 at 0x7ffd54e0244c thread T0
    #0 0x4010b8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_32-bad_m+0x4010b8)
    #1 0x401229  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_32-bad_m+0x401229)
    #2 0x7f365c999c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_32-bad_m+0x400ca9)

Address 0x7ffd54e0244c is located in stack of thread T0 at offset 108 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_32-bad_m+0x400d7f)

  This frame has 4 object(s):
    [32, 36) ''
    [48, 64) ''
    [80, 94) ''
    [112, 152) '' <== Memory access at offset 108 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_32-bad_m+0x4010b8) 
Shadow bytes around the buggy address:
  0x10002a9b8430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002a9b8440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002a9b8450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002a9b8460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002a9b8470: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10002a9b8480: 04 f2 00 00 f2 f2 00 06 f2[f2]00 00 00 00 00 f3
  0x10002a9b8490: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002a9b84a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002a9b84b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002a9b84c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002a9b84d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18127==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_32-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (236 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_33-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 56 AddrPE: [78<--79]	
   %10 = alloca [10 x i32], align 16 {  }	1	2
48(16) 10(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %43, i32* %3, align 4
Found Instruction =   store i8 0, i8* %53, align 1
Found Instruction =   store i32 %55, i32* %1, align 4
Found Instruction =   store i32 1, i32* %77, align 4
Found Instruction =   %85 = load i32, i32* %84, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_33-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18160==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff2b9fa9ac at pc 0x0000004010d9 bp 0x7fff2b9fa930 sp 0x7fff2b9fa928
WRITE of size 4 at 0x7fff2b9fa9ac thread T0
    #0 0x4010d8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_33-bad_m+0x4010d8)
    #1 0x401239  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_33-bad_m+0x401239)
    #2 0x7faca2007c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_33-bad_m+0x400ca9)

Address 0x7fff2b9fa9ac is located in stack of thread T0 at offset 108 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_33-bad_m+0x400d7f)

  This frame has 4 object(s):
    [32, 36) ''
    [48, 64) ''
    [80, 94) ''
    [112, 152) '' <== Memory access at offset 108 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_33-bad_m+0x4010d8) 
Shadow bytes around the buggy address:
  0x1000657374e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000657374f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065737500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065737510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065737520: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f2 00 00
=>0x100065737530: f2 f2 00 06 f2[f2]00 00 00 00 00 f3 f3 f3 f3 f3
  0x100065737540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065737550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065737560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065737570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100065737580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18160==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_33-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 30 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (244 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_34-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 56 AddrPE: [78<--79]	
   %10 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %43, i32* %3, align 4
Found Instruction =   store i8 0, i8* %53, align 1
Found Instruction =   store i32 %55, i32* %1, align 4
Found Instruction =   store i32 1, i32* %79, align 4
Found Instruction =   %87 = load i32, i32* %86, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_34-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18191==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffde542af4c at pc 0x000000401096 bp 0x7ffde542aed0 sp 0x7ffde542aec8
WRITE of size 4 at 0x7ffde542af4c thread T0
    #0 0x401095  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_34-bad_m+0x401095)
    #1 0x401209  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_34-bad_m+0x401209)
    #2 0x7f7e35b8ec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_34-bad_m+0x400ca9)

Address 0x7ffde542af4c is located in stack of thread T0 at offset 108 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_34-bad_m+0x400d7f)

  This frame has 4 object(s):
    [32, 36) ''
    [48, 64) ''
    [80, 94) ''
    [112, 152) '' <== Memory access at offset 108 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_34-bad_m+0x401095) 
Shadow bytes around the buggy address:
  0x10003ca7d590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003ca7d5a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003ca7d5b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003ca7d5c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003ca7d5d0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x10003ca7d5e0: 04 f2 00 00 f2 f2 00 06 f2[f2]00 00 00 00 00 f3
  0x10003ca7d5f0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003ca7d600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003ca7d610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003ca7d620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10003ca7d630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18191==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_34-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (260 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 65 AddrPE: [216<--217]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %39, i32* %2, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18222==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffffa6e633c at pc 0x000000401179 bp 0x7ffffa6e6310 sp 0x7ffffa6e6308
WRITE of size 4 at 0x7ffffa6e633c thread T0
    #0 0x401178  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m+0x401178)
    #1 0x400fcd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m+0x400fcd)
    #2 0x4012c9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m+0x4012c9)
    #3 0x7ff26c090c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m+0x400ca9)

Address 0x7ffffa6e633c is located in stack of thread T0 at offset 28 in frame
    #0 0x40104f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m+0x40104f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m+0x401178) 
Shadow bytes around the buggy address:
  0x10007f4d4c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f4d4c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f4d4c30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f4d4c40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f4d4c50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007f4d4c60: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x10007f4d4c70: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f4d4c80: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x10007f4d4c90: 00 00 f2 f2 00 06 f3 f3 00 00 00 00 00 00 00 00
  0x10007f4d4ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007f4d4cb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18222==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 21 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (245 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m.out
WARNING:Could not find ".llvm_bc" ELF section in "/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m", so skipping this entry.
/home/salman/DPP/dpp-data/juliet-test-suite/instrument.sh: line 8: /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m.bc: No such file or directory
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m_instr.bc'
clang-12: error: no input files
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m.o'
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m_instr.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m.o': No such file or directory
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m_m': No such file or directory
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_41-bad_m_m': No such file or directory
[ perf record: Woken up 27 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (276 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 59 AddrPE: [127<--128]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 49 AddrPE: [64<--65]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 1, i32* %12, align 4
Found Instruction =   %20 = load i32, i32* %19, align 4
Found Instruction =   store i32 %40, i32* %3, align 4
Found Instruction =   store i8 0, i8* %50, align 1
Found Instruction =   store i32 %52, i32* %2, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18281==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffebfd1c9bc at pc 0x000000400ec2 bp 0x7ffebfd1c990 sp 0x7ffebfd1c988
WRITE of size 4 at 0x7ffebfd1c9bc thread T0
    #0 0x400ec1  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m+0x400ec1)
    #1 0x4012c9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m+0x4012c9)
    #2 0x7f230c105c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m+0x400ca9)

Address 0x7ffebfd1c9bc is located in stack of thread T0 at offset 28 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m+0x400d7f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m+0x400ec1) 
Shadow bytes around the buggy address:
  0x100057f9b8e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100057f9b8f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100057f9b900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100057f9b910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100057f9b920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100057f9b930: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x100057f9b940: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100057f9b950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100057f9b960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100057f9b970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100057f9b980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18281==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (247 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m.out
WARNING:Could not find ".llvm_bc" ELF section in "/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m", so skipping this entry.
/home/salman/DPP/dpp-data/juliet-test-suite/instrument.sh: line 8: /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m.bc: No such file or directory
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m_instr.bc'
clang-12: error: no input files
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m.o'
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m_instr.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m.o': No such file or directory
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m_m': No such file or directory
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_42-bad_m_m': No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (267 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 59 AddrPE: [125<--126]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 49 AddrPE: [64<--65]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
46(16) 8(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 1, i32* %10, align 4
Found Instruction =   %18 = load i32, i32* %17, align 4
Found Instruction =   store i32 %40, i32* %3, align 4
Found Instruction =   store i8 0, i8* %50, align 1
Found Instruction =   store i32 %52, i32* %53, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18345==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff0fc13e2c at pc 0x000000400ec0 bp 0x7fff0fc13df0 sp 0x7fff0fc13de8
WRITE of size 4 at 0x7fff0fc13e2c thread T0
    #0 0x400ebf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m+0x400ebf)
    #1 0x4012f9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m+0x4012f9)
    #2 0x7f5a02ad5c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m+0x400ca9)

Address 0x7fff0fc13e2c is located in stack of thread T0 at offset 44 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m+0x400d7f)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m+0x400ebf) 
Shadow bytes around the buggy address:
  0x100061f7a770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061f7a780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061f7a790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061f7a7a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061f7a7b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100061f7a7c0: f1 f1 f1 f1 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3
  0x100061f7a7d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061f7a7e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061f7a7f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061f7a800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100061f7a810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18345==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (249 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m.out
WARNING:Could not find ".llvm_bc" ELF section in "/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m", so skipping this entry.
/home/salman/DPP/dpp-data/juliet-test-suite/instrument.sh: line 8: /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m.bc: No such file or directory
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m_instr.bc'
clang-12: error: no input files
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m.o'
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m_instr.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m.o': No such file or directory
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m_m': No such file or directory
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_43-bad_m_m': No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (272 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 1
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
46(16) 4(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(1) 0(0) 3(1) 
Found Instruction =   store i32 %40, i32* %3, align 4
Found Instruction =   store i8 0, i8* %50, align 1
Found Instruction =   store i32 %52, i32* %1, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 25 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m.out
WARNING:Could not find ".llvm_bc" ELF section in "/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m", so skipping this entry.
/home/salman/DPP/dpp-data/juliet-test-suite/instrument.sh: line 8: /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m.bc: No such file or directory
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m_instr.bc'
clang-12: error: no input files
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m.o'
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m_instr.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m.o': No such file or directory
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m_m': No such file or directory
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_44-bad_m_m': No such file or directory
[ perf record: Woken up 12 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (275 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 66 AddrPE: [218<--219]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %39, i32* %2, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18473==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff5457c09c at pc 0x000000401180 bp 0x7fff5457c070 sp 0x7fff5457c068
WRITE of size 4 at 0x7fff5457c09c thread T0
    #0 0x40117f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m+0x40117f)
    #1 0x400fd4  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m+0x400fd4)
    #2 0x4012c9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m+0x4012c9)
    #3 0x7ff834f18c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m+0x400ca9)

Address 0x7fff5457c09c is located in stack of thread T0 at offset 28 in frame
    #0 0x40104f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m+0x40104f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m+0x40117f) 
Shadow bytes around the buggy address:
  0x10006a8a77c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a8a77d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a8a77e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a8a77f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a8a7800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10006a8a7810: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10006a8a7820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a8a7830: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2
  0x10006a8a7840: 00 06 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a8a7850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10006a8a7860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18473==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 12 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (270 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m.out
WARNING:Could not find ".llvm_bc" ELF section in "/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m", so skipping this entry.
/home/salman/DPP/dpp-data/juliet-test-suite/instrument.sh: line 8: /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m.bc: No such file or directory
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m_instr.bc'
clang-12: error: no input files
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m.o'
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m_instr.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m.o': No such file or directory
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m_m': No such file or directory
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_45-bad_m_m': No such file or directory
[ perf record: Woken up 25 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (273 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 72 AddrPE: [249<--250]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %39, i32* %2, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18590==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffc3d734d3c at pc 0x0000004011d9 bp 0x7ffc3d734d10 sp 0x7ffc3d734d08
WRITE of size 4 at 0x7ffc3d734d3c thread T0
    #0 0x4011d8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m+0x4011d8)
    #1 0x400fcd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m+0x400fcd)
    #2 0x401079  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m+0x401079)
    #3 0x7f08ca8b8c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m+0x400ca9)

Address 0x7ffc3d734d3c is located in stack of thread T0 at offset 28 in frame
    #0 0x4010af  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m+0x4010af)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m+0x4011d8) 
Shadow bytes around the buggy address:
  0x100007ade950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007ade960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007ade970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007ade980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007ade990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100007ade9a0: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x100007ade9b0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007ade9c0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x100007ade9d0: 00 00 f2 f2 00 06 f3 f3 00 00 00 00 00 00 00 00
  0x100007ade9e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100007ade9f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18590==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (246 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m.out
WARNING:Could not find ".llvm_bc" ELF section in "/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m", so skipping this entry.
/home/salman/DPP/dpp-data/juliet-test-suite/instrument.sh: line 8: /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m.bc: No such file or directory
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m_instr.bc'
clang-12: error: no input files
clang-12: error: no such file or directory: '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m.o'
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m_instr.bc': No such file or directory
rm: cannot remove '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m.o': No such file or directory
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m_m': No such file or directory
timeout: failed to run command '/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_51-bad_m_m': No such file or directory
[ perf record: Woken up 31 times to write data ]
[ perf record: Captured and wrote 0.025 MB perf.data (270 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_52-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 74 AddrPE: [259<--260]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %39, i32* %2, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_52-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18649==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff20bfbbfc at pc 0x0000004011f9 bp 0x7fff20bfbbd0 sp 0x7fff20bfbbc8
WRITE of size 4 at 0x7fff20bfbbfc thread T0
    #0 0x4011f8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_52-bad_m+0x4011f8)
    #1 0x4010b2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_52-bad_m+0x4010b2)
    #2 0x400fcd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_52-bad_m+0x400fcd)
    #3 0x401079  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_52-bad_m+0x401079)
    #4 0x7f4be58cac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #5 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_52-bad_m+0x400ca9)

Address 0x7fff20bfbbfc is located in stack of thread T0 at offset 28 in frame
    #0 0x4010cf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_52-bad_m+0x4010cf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_52-bad_m+0x4011f8) 
Shadow bytes around the buggy address:
  0x100064177720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064177730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064177740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064177750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100064177760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100064177770: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x100064177780: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x100064177790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000641777a0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2
  0x1000641777b0: 00 06 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000641777c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18649==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_52-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (250 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_53-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 76 AddrPE: [269<--270]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %39, i32* %2, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_53-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18687==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd21f0e23c at pc 0x000000401219 bp 0x7ffd21f0e210 sp 0x7ffd21f0e208
WRITE of size 4 at 0x7ffd21f0e23c thread T0
    #0 0x401218  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_53-bad_m+0x401218)
    #1 0x4010d2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_53-bad_m+0x4010d2)
    #2 0x4010b2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_53-bad_m+0x4010b2)
    #3 0x400fcd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_53-bad_m+0x400fcd)
    #4 0x401079  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_53-bad_m+0x401079)
    #5 0x7f3965344c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #6 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_53-bad_m+0x400ca9)

Address 0x7ffd21f0e23c is located in stack of thread T0 at offset 28 in frame
    #0 0x4010ef  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_53-bad_m+0x4010ef)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_53-bad_m+0x401218) 
Shadow bytes around the buggy address:
  0x1000243d9bf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000243d9c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000243d9c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000243d9c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000243d9c30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000243d9c40: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x1000243d9c50: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000243d9c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000243d9c70: 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2 00 06 f3 f3
  0x1000243d9c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000243d9c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18687==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_53-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (245 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 78 AddrPE: [279<--280]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %39, i32* %2, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18718==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffd339aeabc at pc 0x000000401239 bp 0x7ffd339aea90 sp 0x7ffd339aea88
WRITE of size 4 at 0x7ffd339aeabc thread T0
    #0 0x401238  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad_m+0x401238)
    #1 0x4010f2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad_m+0x4010f2)
    #2 0x4010d2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad_m+0x4010d2)
    #3 0x4010b2  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad_m+0x4010b2)
    #4 0x400fcd  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad_m+0x400fcd)
    #5 0x401079  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad_m+0x401079)
    #6 0x7f4d7ff4fc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #7 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad_m+0x400ca9)

Address 0x7ffd339aeabc is located in stack of thread T0 at offset 28 in frame
    #0 0x40110f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad_m+0x40110f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad_m+0x401238) 
Shadow bytes around the buggy address:
  0x10002672dd00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002672dd10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002672dd20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002672dd30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002672dd40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10002672dd50: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x10002672dd60: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002672dd70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002672dd80: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 f2 f2
  0x10002672dd90: 00 06 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10002672dda0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18718==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_54-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 12 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (249 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_61-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 65 AddrPE: [163<--164]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 49 AddrPE: [64<--65]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 1, i32* %12, align 4
Found Instruction =   %20 = load i32, i32* %19, align 4
Found Instruction =   store i32 %40, i32* %3, align 4
Found Instruction =   store i8 0, i8* %50, align 1
Found Instruction =   store i32 %52, i32* %2, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_61-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18759==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffe1dadc33c at pc 0x000000400ec2 bp 0x7ffe1dadc310 sp 0x7ffe1dadc308
WRITE of size 4 at 0x7ffe1dadc33c thread T0
    #0 0x400ec1  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_61-bad_m+0x400ec1)
    #1 0x401009  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_61-bad_m+0x401009)
    #2 0x7fbb8ca20c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_61-bad_m+0x400ca9)

Address 0x7ffe1dadc33c is located in stack of thread T0 at offset 28 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_61-bad_m+0x400d7f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_61-bad_m+0x400ec1) 
Shadow bytes around the buggy address:
  0x100043b53810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100043b53820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100043b53830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100043b53840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100043b53850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100043b53860: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x100043b53870: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100043b53880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100043b53890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100043b538a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100043b538b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18759==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_61-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (247 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_62-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 65 AddrPE: [161<--162]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 49 AddrPE: [64<--65]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
46(16) 8(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 1, i32* %10, align 4
Found Instruction =   %18 = load i32, i32* %17, align 4
Found Instruction =   store i32 %40, i32* %3, align 4
Found Instruction =   store i8 0, i8* %50, align 1
Found Instruction =   store i32 %52, i32* %53, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_62-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18795==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe9553848c at pc 0x000000400ec0 bp 0x7ffe95538450 sp 0x7ffe95538448
WRITE of size 4 at 0x7ffe9553848c thread T0
    #0 0x400ebf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_62-bad_m+0x400ebf)
    #1 0x401009  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_62-bad_m+0x401009)
    #2 0x7f1468b36c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #3 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_62-bad_m+0x400ca9)

Address 0x7ffe9553848c is located in stack of thread T0 at offset 44 in frame
    #0 0x400d7f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_62-bad_m+0x400d7f)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_62-bad_m+0x400ebf) 
Shadow bytes around the buggy address:
  0x100052a9f040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052a9f050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052a9f060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052a9f070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052a9f080: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100052a9f090: 04[f2]00 00 00 00 00 f3 f3 f3 f3 f3 00 00 00 00
  0x100052a9f0a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052a9f0b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052a9f0c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052a9f0d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100052a9f0e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18795==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_62-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 26 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_63-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 73 AddrPE: [250<--251]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
48(16) 10(4) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %39, i32* %2, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_63-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18826==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffc5da1c53c at pc 0x000000401240 bp 0x7ffc5da1c510 sp 0x7ffc5da1c508
WRITE of size 4 at 0x7ffc5da1c53c thread T0
    #0 0x40123f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_63-bad_m+0x40123f)
    #1 0x401030  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_63-bad_m+0x401030)
    #2 0x4010d9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_63-bad_m+0x4010d9)
    #3 0x7f61f3aaec86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_63-bad_m+0x400ca9)

Address 0x7ffc5da1c53c is located in stack of thread T0 at offset 28 in frame
    #0 0x40110f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_63-bad_m+0x40110f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_63-bad_m+0x40123f) 
Shadow bytes around the buggy address:
  0x10000bb3b850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000bb3b860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000bb3b870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000bb3b880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000bb3b890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10000bb3b8a0: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x10000bb3b8b0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000bb3b8c0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x10000bb3b8d0: 04 f2 00 00 f2 f2 00 06 f3 f3 f3 f3 00 00 00 00
  0x10000bb3b8e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10000bb3b8f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18826==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_63-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 28 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_64-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 52 AddrPE: [70<--71]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 74 AddrPE: [253<--254]	
   %6 = alloca [10 x i32], align 16 {  }	1	2
50(17) 12(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %39, i32* %2, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store i32 1, i32* %17, align 4
Found Instruction =   %25 = load i32, i32* %24, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_64-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18857==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffe6c5d3cfc at pc 0x000000401248 bp 0x7ffe6c5d3cd0 sp 0x7ffe6c5d3cc8
WRITE of size 4 at 0x7ffe6c5d3cfc thread T0
    #0 0x401247  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_64-bad_m+0x401247)
    #1 0x401030  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_64-bad_m+0x401030)
    #2 0x4010d9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_64-bad_m+0x4010d9)
    #3 0x7f8ec7fd6c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_64-bad_m+0x400ca9)

Address 0x7ffe6c5d3cfc is located in stack of thread T0 at offset 28 in frame
    #0 0x40110f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_64-bad_m+0x40110f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_64-bad_m+0x401247) 
Shadow bytes around the buggy address:
  0x10004d8b2740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d8b2750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d8b2760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d8b2770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d8b2780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10004d8b2790: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x10004d8b27a0: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10004d8b27b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d8b27c0: 00 00 00 00 f1 f1 f1 f1 04 f2 00 00 f2 f2 00 06
  0x10004d8b27d0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x10004d8b27e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18857==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_64-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (241 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_65-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 1
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
46(16) 4(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(1) 0(0) 3(1) 
Found Instruction =   store i32 %40, i32* %3, align 4
Found Instruction =   store i8 0, i8* %50, align 1
Found Instruction =   store i32 %52, i32* %1, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_65-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_65-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 24 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_66-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 3
AddrVFGNode ID: 48 AddrPE: [62<--63]	
   %2 = alloca [5 x i32], align 16 {  }	1	5
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 74 AddrPE: [256<--257]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
49(17) 11(5) 0(0) 0(0)  - 0(0) 0(0) 0(0) 10(3) 0(0) 10(3) 
Found Instruction =   store i32 %40, i32* %3, align 4
Found Instruction =   store i8 0, i8* %50, align 1
Found Instruction =   store i32 %52, i32* %1, align 4
Found Instruction =   store i32 %66, i32* %67, align 8
Found Instruction =   store i32* %0, i32** %2, align 8
Found Instruction =   %6 = load i32*, i32** %2, align 8
Found Instruction =   %8 = load i32, i32* %7, align 4
Found Instruction =   store i32 %8, i32* %3, align 4
Found Instruction =   store i32 1, i32* %15, align 4
Found Instruction =   %23 = load i32, i32* %22, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_66-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18920==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffc95571b7c at pc 0x000000401345 bp 0x7ffc95571b50 sp 0x7ffc95571b48
WRITE of size 4 at 0x7ffc95571b7c thread T0
    #0 0x401344  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_66-bad_m+0x401344)
    #1 0x4010cc  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_66-bad_m+0x4010cc)
    #2 0x401199  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_66-bad_m+0x401199)
    #3 0x7f634fcb1c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400d09  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_66-bad_m+0x400d09)

Address 0x7ffc95571b7c is located in stack of thread T0 at offset 28 in frame
    #0 0x4011cf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_66-bad_m+0x4011cf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_66-bad_m+0x401344) 
Shadow bytes around the buggy address:
  0x100012aa6310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100012aa6320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100012aa6330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100012aa6340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100012aa6350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100012aa6360: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x100012aa6370: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x100012aa6380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100012aa6390: 00 00 00 00 f1 f1 f1 f1 00 00 04 f2 f2 f2 f2 f2
  0x100012aa63a0: 00 00 f2 f2 00 06 f3 f3 00 00 00 00 00 00 00 00
  0x100012aa63b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18920==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_66-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 25 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (243 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_67-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 53 AddrPE: [72<--73]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 74 AddrPE: [257<--258]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %40, i32* %3, align 4
Found Instruction =   store i8 0, i8* %50, align 1
Found Instruction =   store i32 %52, i32* %1, align 4
Found Instruction =   store i32 1, i32* %15, align 4
Found Instruction =   %23 = load i32, i32* %22, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_67-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18953==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd0cef53ec at pc 0x0000004011f6 bp 0x7ffd0cef53b0 sp 0x7ffd0cef53a8
WRITE of size 4 at 0x7ffd0cef53ec thread T0
    #0 0x4011f5  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_67-bad_m+0x4011f5)
    #1 0x400fe1  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_67-bad_m+0x400fe1)
    #2 0x401089  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_67-bad_m+0x401089)
    #3 0x7fee3e3cfc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_67-bad_m+0x400ca9)

Address 0x7ffd0cef53ec is located in stack of thread T0 at offset 44 in frame
    #0 0x4010bf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_67-bad_m+0x4010bf)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_67-bad_m+0x4011f5) 
Shadow bytes around the buggy address:
  0x1000219d6a20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000219d6a30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000219d6a40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000219d6a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000219d6a60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000219d6a70: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04[f2]00 00
  0x1000219d6a80: 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x1000219d6a90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000219d6aa0: f1 f1 f1 f1 04 f2 00 00 f2 f2 00 06 f3 f3 f3 f3
  0x1000219d6ab0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000219d6ac0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18953==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_67-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (246 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_68-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 2
AddrVFGNode ID: 55 AddrPE: [76<--77]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 75 AddrPE: [256<--257]	
   %3 = alloca [10 x i32], align 16 {  }	1	2
44(15) 6(3) 0(0) 0(0)  - 0(0) 0(0) 0(0) 5(2) 0(0) 5(2) 
Found Instruction =   store i32 %39, i32* %2, align 4
Found Instruction =   store i8 0, i8* %49, align 1
Found Instruction =   store i32 %51, i32* %1, align 4
Found Instruction =   store i32 1, i32* %11, align 4
Found Instruction =   %19 = load i32, i32* %18, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_68-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==18988==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffeb08d58bc at pc 0x0000004011e0 bp 0x7ffeb08d5890 sp 0x7ffeb08d5888
WRITE of size 4 at 0x7ffeb08d58bc thread T0
    #0 0x4011df  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_68-bad_m+0x4011df)
    #1 0x400fd6  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_68-bad_m+0x400fd6)
    #2 0x401079  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_68-bad_m+0x401079)
    #3 0x7f3bf610cc86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_68-bad_m+0x400ca9)

Address 0x7ffeb08d58bc is located in stack of thread T0 at offset 28 in frame
    #0 0x4010af  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_68-bad_m+0x4010af)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_68-bad_m+0x4011df) 
Shadow bytes around the buggy address:
  0x100056112ac0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056112ad0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056112ae0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056112af0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056112b00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100056112b10: 00 00 00 00 f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3
  0x100056112b20: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056112b30: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
  0x100056112b40: 00 00 f2 f2 00 06 f3 f3 00 00 00 00 00 00 00 00
  0x100056112b50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100056112b60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==18988==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_68-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (241 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_72-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 21
AddrVFGNode ID: 257 AddrPE: [1336<--1337]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #17 {  }	3	194
AddrVFGNode ID: 439 AddrPE: [2628<--2629]	
   %4 = alloca i32*, align 8 {  }	2	6
AddrVFGNode ID: 440 AddrPE: [2630<--2631]	
   %5 = alloca i32*, align 8 {  }	2	2
AddrVFGNode ID: 278 AddrPE: [1474<--1475]	
   %6 = alloca %"class.std::vector"*, align 8 {  }	1	32
AddrVFGNode ID: 422 AddrPE: [2520<--2521]	
   %4 = alloca i32*, align 8 {  }	1	6
AddrVFGNode ID: 407 AddrPE: [2424<--2425]	
   %5 = alloca i64*, align 8 {  }	1	5
AddrVFGNode ID: 240 AddrPE: [1219<--1220]	
   %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	5
AddrVFGNode ID: 406 AddrPE: [2422<--2423]	
   %4 = alloca i64*, align 8 {  }	1	5
AddrVFGNode ID: 470 AddrPE: [2837<--2838]	
   %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	5
AddrVFGNode ID: 276 AddrPE: [1453<--1454]	
   %6 = alloca i32*, align 8 {  }	1	5
AddrVFGNode ID: 339 AddrPE: [2025<--2026]	
   %4 = alloca %"class.std::vector"*, align 8 {  }	1	4
AddrVFGNode ID: 305 AddrPE: [1823<--1824]	
   %4 = alloca %"struct.std::vector<int>::_Temporary_value"*, align 8 {  }	1	4
AddrVFGNode ID: 59 AddrPE: [74<--75]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 332 AddrPE: [1979<--1980]	
   %2 = alloca %"struct.std::vector<int>::_Temporary_value"*, align 8 {  }	1	3
AddrVFGNode ID: 150 AddrPE: [674<--675]	
   %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 134 AddrPE: [563<--564]	
   %2 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 252 AddrPE: [1314<--1315]	
   %4 = alloca %"class.std::allocator"*, align 8 {  }	1	2
AddrVFGNode ID: 146 AddrPE: [649<--650]	
   %4 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 484 AddrPE: [2909<--2910]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 246 AddrPE: [1273<--1274]	
   %3 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
AddrVFGNode ID: 168 AddrPE: [788<--789]	
   %2 = alloca %"struct.std::_Vector_base"*, align 8 {  }	1	2
568(193) 504(169) 228(8) 194(4)  - 0(0) 0(0) 27(9) 204(4) 0(0) 265(21) 
Found Instruction =   store i32 %58, i32* %3, align 4
Found Instruction =   store i8 0, i8* %68, align 1
Found Instruction =   store i32 %70, i32* %1, align 4
Found Instruction =   store i32* %87, i32** %88, align 8
Found Instruction =   %90 = load i32*, i32** %89, align 8
Found Instruction =   store i32* %91, i32** %93, align 8
Found Instruction =   store i32* %94, i32** %95, align 8
Found Instruction =   %97 = load i32*, i32** %96, align 8
Found Instruction =   store i32* %98, i32** %100, align 8
Found Instruction =   store i32* %101, i32** %102, align 8
Found Instruction =   %104 = load i32*, i32** %103, align 8
Found Instruction =   store i32* %105, i32** %107, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   store i32* %9, i32** %6, align 8
Found Instruction =   store i32* %1, i32** %15, align 8
Found Instruction =   store i32* %17, i32** %18, align 8
Found Instruction =   store i64 %19, i64* %10, align 8
Found Instruction =   store i32* %32, i32** %33, align 8
Found Instruction =   %35 = load i32*, i32** %34, align 8
Found Instruction =   store i32* %19, i32** %20, align 8
Found Instruction =   store i32* %22, i32** %23, align 8
Found Instruction =   %27 = load i32*, i32** %26, align 8
Found Instruction =   %31 = load i32*, i32** %30, align 8
Found Instruction =   %33 = load i32*, i32** %32, align 8
Found Instruction =   store i32* %34, i32** %38, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %13 = load i32*, i32** %12, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   %11 = load i32*, i32** %10, align 8
Found Instruction =   %14 = load i32*, i32** %13, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %13 = load i32*, i32** %5, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   store i32* %1, i32** %4, align 8
Found Instruction =   %5 = load i32*, i32** %3, align 8
Found Instruction =   %6 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   store i32* %1, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %11 = load i32*, i32** %10, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   store i32* %0, i32** %11, align 8
Found Instruction =   store i32* %1, i32** %12, align 8
Found Instruction =   store i32* %2, i32** %7, align 8
Found Instruction =   %17 = load i32*, i32** %7, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   %21 = load i32*, i32** %20, align 8
Found Instruction =   store i32* %0, i32** %10, align 8
Found Instruction =   store i32* %1, i32** %11, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %16 = load i32*, i32** %6, align 8
Found Instruction =   %18 = load i32*, i32** %17, align 8
Found Instruction =   %20 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %0, i32** %9, align 8
Found Instruction =   store i32* %1, i32** %10, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %15 = load i32*, i32** %6, align 8
Found Instruction =   %17 = load i32*, i32** %16, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   store i32* %0, i32** %11, align 8
Found Instruction =   store i32* %1, i32** %12, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %16 = load i32*, i32** %15, align 8
Found Instruction =   store i32* %17, i32** %18, align 8
Found Instruction =   %22 = load i32*, i32** %21, align 8
Found Instruction =   store i32* %23, i32** %24, align 8
Found Instruction =   %25 = load i32*, i32** %6, align 8
Found Instruction =   %27 = load i32*, i32** %26, align 8
Found Instruction =   %29 = load i32*, i32** %28, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %0, i32** %9, align 8
Found Instruction =   store i32* %1, i32** %10, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %14 = load i32*, i32** %13, align 8
Found Instruction =   %19 = load i32*, i32** %18, align 8
Found Instruction =   %21 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   %5 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %2, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %19 = load i32*, i32** %4, align 8
Found Instruction =   %24 = load i32*, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %8, i32** %6, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %3, align 8
Found Instruction =   %5 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %3, align 8
Found Instruction =   store i32* null, i32** %8, align 8
Found Instruction =   store i32* null, i32** %9, align 8
Found Instruction =   store i32* null, i32** %10, align 8
Found Instruction =   store i32* %7, i32** %9, align 8
Found Instruction =   %12 = load i32*, i32** %11, align 8
Found Instruction =   store i32* %12, i32** %14, align 8
Found Instruction =   %17 = load i32*, i32** %16, align 8
Found Instruction =   store i32* %19, i32** %21, align 8
Found Instruction =   store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
Found Instruction =   %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
Found Instruction =   store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
Found Instruction =   %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
Found Instruction =   %9 = load i32*, i32** %8, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %10 = load i32*, i32** %9, align 8
Found Instruction =   store i32* %11, i32** %6, align 8
Found Instruction =   store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
Found Instruction =   %22 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
Found Instruction =   %29 = load i32*, i32** %28, align 8
Found Instruction =   %33 = load i32*, i32** %32, align 8
Found Instruction =   store i32* %44, i32** %45, align 8
Found Instruction =   %50 = load i32*, i32** %49, align 8
Found Instruction =   store i32* %50, i32** %15, align 8
Found Instruction =   %58 = load i32*, i32** %57, align 8
Found Instruction =   %65 = load i32*, i32** %64, align 8
Found Instruction =   %69 = load i32*, i32** %68, align 8
Found Instruction =   %78 = load i32*, i32** %77, align 8
Found Instruction =   store i32* %79, i32** %77, align 8
Found Instruction =   %105 = load i32*, i32** %104, align 8
Found Instruction =   store i32* %112, i32** %116, align 8
Found Instruction =   %123 = load i32*, i32** %122, align 8
Found Instruction =   %132 = load i32*, i32** %131, align 8
Found Instruction =   store i32* %133, i32** %131, align 8
Found Instruction =   store i64 %143, i64* %16, align 8
Found Instruction =   store i32* %144, i32** %145, align 8
Found Instruction =   store i32* %149, i32** %19, align 8
Found Instruction =   %150 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %150, i32** %20, align 8
Found Instruction =   %151 = load i32*, i32** %19, align 8
Found Instruction =   %163 = load i32*, i32** %162, align 8
Found Instruction =   %166 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %169, i32** %20, align 8
Found Instruction =   %179 = load i32*, i32** %178, align 8
Found Instruction =   store i32* %183, i32** %20, align 8
Found Instruction =   %192 = load i32*, i32** %20, align 8
Found Instruction =   %195 = load i32*, i32** %19, align 8
Found Instruction =   %198 = load i32*, i32** %19, align 8
Found Instruction =   %211 = load i32*, i32** %19, align 8
Found Instruction =   %212 = load i32*, i32** %20, align 8
Found Instruction =   %218 = load i32*, i32** %19, align 8
Found Instruction =   %226 = load i32*, i32** %225, align 8
Found Instruction =   %230 = load i32*, i32** %229, align 8
Found Instruction =   %237 = load i32*, i32** %236, align 8
Found Instruction =   %241 = load i32*, i32** %240, align 8
Found Instruction =   %245 = load i32*, i32** %244, align 8
Found Instruction =   %250 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %250, i32** %253, align 8
Found Instruction =   %254 = load i32*, i32** %20, align 8
Found Instruction =   store i32* %254, i32** %257, align 8
Found Instruction =   %258 = load i32*, i32** %19, align 8
Found Instruction =   store i32* %260, i32** %263, align 8
Found Instruction =   store %"struct.std::vector<int>::_Temporary_value"* %0, %"struct.std::vector<int>::_Temporary_value"** %4, align 8
Found Instruction =   %7 = load %"struct.std::vector<int>::_Temporary_value"*, %"struct.std::vector<int>::_Temporary_value"** %4, align 8
Found Instruction =   store %"class.std::vector"* %9, %"class.std::vector"** %8, align 8
Found Instruction =   %12 = load %"class.std::vector"*, %"class.std::vector"** %11, align 8
Found Instruction =   %7 = load i32*, i32** %6, align 8
Found Instruction =   %10 = load i32*, i32** %9, align 8
Found Instruction =   store %"struct.std::vector<int>::_Temporary_value"* %0, %"struct.std::vector<int>::_Temporary_value"** %2, align 8
Found Instruction =   %3 = load %"struct.std::vector<int>::_Temporary_value"*, %"struct.std::vector<int>::_Temporary_value"** %2, align 8
Found Instruction =   %5 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
Found Instruction =   store i32* %0, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
Found Instruction =   %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
Found Instruction =   store i64 %19, i64* %8, align 8
Found Instruction =   store i64 %22, i64* %7, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %19 = load i32*, i32** %4, align 8
Found Instruction =   store i64* %0, i64** %4, align 8
Found Instruction =   store i64* %1, i64** %5, align 8
Found Instruction =   %6 = load i64*, i64** %4, align 8
Found Instruction =   %7 = load i64, i64* %6, align 8
Found Instruction =   %8 = load i64*, i64** %5, align 8
Found Instruction =   %9 = load i64, i64* %8, align 8
Found Instruction =   %12 = load i64*, i64** %5, align 8
Found Instruction =   store i64* %12, i64** %3, align 8
Found Instruction =   %14 = load i64*, i64** %4, align 8
Found Instruction =   store i64* %14, i64** %3, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %7 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   %17 = load i32*, i32** %4, align 8
Found Instruction =   store i32 %16, i32* %17, align 4
Found Instruction =   %21 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %22, i32** %4, align 8
Found Instruction =   %24 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   %11 = load i32*, i32** %4, align 8
Found Instruction =   %12 = load i32*, i32** %5, align 8
Found Instruction =   %16 = load i32*, i32** %4, align 8
Found Instruction =   store i32 %15, i32* %16, align 4
Found Instruction =   %18 = load i32*, i32** %4, align 8
Found Instruction =   store i32* %19, i32** %4, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %4, align 8
Found Instruction =   %9 = load i32*, i32** %5, align 8
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32*, i32** %4, align 8
Found Instruction =   store i64 %13, i64* %7, align 8
Found Instruction =   %17 = load i32*, i32** %6, align 8
Found Instruction =   %22 = load i32*, i32** %4, align 8
Found Instruction =   %27 = load i32*, i32** %6, align 8
Found Instruction =   store i32* %0, i32** %3, align 8
Found Instruction =   %4 = load i32*, i32** %3, align 8
Found Instruction =   store i32** %1, i32*** %4, align 8
Found Instruction =   %7 = load i32**, i32*** %4, align 8
Found Instruction =   %8 = load i32*, i32** %7, align 8
Found Instruction =   store i32* %8, i32** %6, align 8
Found Instruction =   store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %2, align 8
Found Instruction =   store i32* null, i32** %5, align 8
Found Instruction =   store i32* null, i32** %6, align 8
Found Instruction =   store i32* null, i32** %7, align 8
Found Instruction =   %6 = load i32, i32* %5, align 4
Found Instruction =   store i32 %6, i32* %2, align 4
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
Found Instruction =   %9 = load i32*, i32** %8, align 8
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_72-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==19019==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7fff8c1a27fc at pc 0x000000401e61 bp 0x7fff8c1a27d0 sp 0x7fff8c1a27c8
WRITE of size 4 at 0x7fff8c1a27fc thread T0
    #0 0x401e60  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_72-bad_m+0x401e60)
    #1 0x401ad9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_72-bad_m+0x401ad9)
    #2 0x401ca9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_72-bad_m+0x401ca9)
    #3 0x7fabac66ac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x401319  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_72-bad_m+0x401319)

Address 0x7fff8c1a27fc is located in stack of thread T0 at offset 28 in frame
    #0 0x401cdf  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_72-bad_m+0x401cdf)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_72-bad_m+0x401e60) 
Shadow bytes around the buggy address:
  0x10007182c4a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007182c4b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007182c4c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007182c4d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007182c4e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10007182c4f0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1[f1]
  0x10007182c500: 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
  0x10007182c510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10007182c520: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f2 00 00
  0x10007182c530: 00 f2 f2 f2 f2 f2 00 00 f2 f2 00 06 f2 f2 00 f2
  0x10007182c540: f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2 f2 f2 00 f2
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==19019==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_72-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.023 MB perf.data (231 samples) ]
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_73-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 23
AddrVFGNode ID: 224 AddrPE: [1152<--1153]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #16 {  }	4	50
AddrVFGNode ID: 103 AddrPE: [401<--402]	
   %3 = alloca %"struct.std::__detail::_List_node_base"*, align 8 {  }	3	5
AddrVFGNode ID: 102 AddrPE: [399<--400]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	3	4
AddrVFGNode ID: 104 AddrPE: [403<--404]	
   %4 = alloca %"struct.std::_List_node.0"*, align 8 {  }	2	7
AddrVFGNode ID: 239 AddrPE: [1249<--1250]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	4
AddrVFGNode ID: 147 AddrPE: [672<--673]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	3
AddrVFGNode ID: 274 AddrPE: [1494<--1495]	
   %2 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 161 AddrPE: [760<--761]	
   %2 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 160 AddrPE: [746<--747]	
   %4 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 159 AddrPE: [744<--745]	
   %3 = alloca %"struct.std::_List_const_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 55 AddrPE: [72<--73]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 266 AddrPE: [1418<--1419]	
   %4 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 110 AddrPE: [455<--456]	
   %2 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 138 AddrPE: [627<--628]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 175 AddrPE: [846<--847]	
   %7 = alloca %"struct.std::_List_node.0"*, align 8 {  }	1	2
AddrVFGNode ID: 150 AddrPE: [692<--693]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	2
AddrVFGNode ID: 199 AddrPE: [989<--990]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 252 AddrPE: [1349<--1350]	
   %2 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 219 AddrPE: [1129<--1130]	
   %4 = alloca %"class.std::allocator"*, align 8 {  }	1	2
AddrVFGNode ID: 116 AddrPE: [493<--494]	
   %2 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 169 AddrPE: [815<--816]	
   %3 = alloca %"class.std::__cxx11::list"*, align 8 {  }	1	2
AddrVFGNode ID: 120 AddrPE: [519<--520]	
   %3 = alloca %"class.std::__cxx11::_List_base"*, align 8 {  }	1	2
AddrVFGNode ID: 236 AddrPE: [1231<--1232]	
   %3 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, align 8 {  }	1	2
288(116) 235(95) 58(6) 52(4)  - 0(0) 0(0) 81(18) 55(3) 0(0) 92(23) 
Found Instruction =   store i32 %49, i32* %3, align 4
Found Instruction =   store i8 0, i8* %59, align 1
Found Instruction =   store i32 %61, i32* %1, align 4
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %17, %"struct.std::__detail::_List_node_base"** %18, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %20, %"struct.std::__detail::_List_node_base"** %21, align 8
Found Instruction =   %23 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %22, align 8
Found Instruction =   %25 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %24, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %6 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %10, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %11, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %13 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %19 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %20, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %21 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %24 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %23, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %24, %"struct.std::__detail::_List_node_base"** %3, align 8
Found Instruction =   %25 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store i32* %26, i32** %5, align 8
Found Instruction =   %31 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %0, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %5 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %3, align 8
Found Instruction =   %8 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %1, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %11, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %8, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %3, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %1, %"struct.std::_List_const_iterator"** %4, align 8
Found Instruction =   %5 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %3, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   %8 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %4, align 8
Found Instruction =   %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %7, %"struct.std::__detail::_List_node_base"** %8, align 8
Found Instruction =   store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %7, align 8
Found Instruction =   %13 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %7, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %16 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %18 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   %24 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %5, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %2, %"struct.std::_List_node.0"** %6, align 8
Found Instruction =   %12 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %6, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %12, %"struct.std::_List_node.0"** %11, align 8
Found Instruction =   %5 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %4, align 8
Found Instruction =   %11 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %10, align 8
Found Instruction =   store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
Found Instruction =   %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
Found Instruction =   store %"struct.std::_List_node.0"* %0, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_node.0"*, %"struct.std::_List_node.0"** %2, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %7, %"struct.std::__detail::_List_node_base"** %6, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %3, align 8
Found Instruction =   %5 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %3, align 8
Found Instruction =   store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %6, %"struct.std::__detail::_List_node_base"** %10, align 8
Found Instruction =   store %"struct.std::__detail::_List_node_base"* %13, %"struct.std::__detail::_List_node_base"** %17, align 8
Found Instruction =   store %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int>>::_List_impl"** %2, align 8
Found Instruction =   store i32 1, i32* %13, align 4
Found Instruction =   %21 = load i32, i32* %20, align 4
Found Instruction =   store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_73-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==19076==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffef53a201c at pc 0x00000040192c bp 0x7ffef53a1ff0 sp 0x7ffef53a1fe8
WRITE of size 4 at 0x7ffef53a201c thread T0
    #0 0x40192b  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_73-bad_m+0x40192b)
    #1 0x4015e8  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_73-bad_m+0x4015e8)
    #2 0x4017b9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_73-bad_m+0x4017b9)
    #3 0x7fd116854c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x401149  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_73-bad_m+0x401149)

Address 0x7ffef53a201c is located in stack of thread T0 at offset 28 in frame
    #0 0x4017ef  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_73-bad_m+0x4017ef)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_73-bad_m+0x40192b) 
Shadow bytes around the buggy address:
  0x10005ea6c3b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005ea6c3c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005ea6c3d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005ea6c3e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005ea6c3f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10005ea6c400: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10005ea6c410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005ea6c420: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f2 00 00
  0x10005ea6c430: 00 f2 f2 f2 f2 f2 00 00 f2 f2 00 06 f2 f2 00 00
  0x10005ea6c440: 00 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x10005ea6c450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==19076==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_73-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (255 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_74-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 51
AddrVFGNode ID: 265 AddrPE: [1515<--1516]	
   %15 = call noalias nonnull i8* @_Znwm(i64 %14) #18 {  }	4	201
AddrVFGNode ID: 388 AddrPE: [2398<--2399]	
   %6 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	3	15
AddrVFGNode ID: 202 AddrPE: [987<--988]	
   %6 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	18
AddrVFGNode ID: 344 AddrPE: [2016<--2017]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	2	11
AddrVFGNode ID: 208 AddrPE: [999<--1000]	
   %12 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	10
AddrVFGNode ID: 483 AddrPE: [3050<--3051]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	9
AddrVFGNode ID: 117 AddrPE: [456<--457]	
   %4 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	2	7
AddrVFGNode ID: 364 AddrPE: [2218<--2219]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	2	5
AddrVFGNode ID: 389 AddrPE: [2400<--2401]	
   %7 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	17
AddrVFGNode ID: 205 AddrPE: [993<--994]	
   %9 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	10
AddrVFGNode ID: 203 AddrPE: [989<--990]	
   %7 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	9
AddrVFGNode ID: 204 AddrPE: [991<--992]	
   %8 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, align 8 {  }	1	9
AddrVFGNode ID: 225 AddrPE: [1229<--1230]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	8
AddrVFGNode ID: 221 AddrPE: [1202<--1203]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	7
AddrVFGNode ID: 220 AddrPE: [1183<--1184]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	7
AddrVFGNode ID: 201 AddrPE: [985<--986]	
   %5 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	6
AddrVFGNode ID: 191 AddrPE: [902<--903]	
   %7 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	6
AddrVFGNode ID: 386 AddrPE: [2394<--2395]	
   %4 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	6
AddrVFGNode ID: 223 AddrPE: [1225<--1226]	
   %5 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	6
AddrVFGNode ID: 367 AddrPE: [2224<--2225]	
   %9 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	5
AddrVFGNode ID: 163 AddrPE: [731<--732]	
   %4 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	5
AddrVFGNode ID: 450 AddrPE: [2843<--2844]	
   %6 = alloca %"struct.std::pair"*, align 8 {  }	1	4
AddrVFGNode ID: 403 AddrPE: [2549<--2550]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 409 AddrPE: [2604<--2605]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 410 AddrPE: [2606<--2607]	
   %5 = alloca %"struct.std::_Rb_tree_node"**, align 8 {  }	1	4
AddrVFGNode ID: 381 AddrPE: [2366<--2367]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 396 AddrPE: [2495<--2496]	
   %4 = alloca %"struct.std::pair.1"*, align 8 {  }	1	4
AddrVFGNode ID: 199 AddrPE: [955<--956]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 301 AddrPE: [1748<--1749]	
   %6 = alloca i32*, align 8 {  }	1	3
AddrVFGNode ID: 228 AddrPE: [1264<--1265]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 293 AddrPE: [1702<--1703]	
   %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 300 AddrPE: [1746<--1747]	
   %5 = alloca i32*, align 8 {  }	1	3
AddrVFGNode ID: 162 AddrPE: [729<--730]	
   %3 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 294 AddrPE: [1704<--1705]	
   %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 129 AddrPE: [531<--532]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 118 AddrPE: [458<--459]	
   %5 = alloca %"struct.std::_Rb_tree_node"*, align 8 {  }	1	3
AddrVFGNode ID: 115 AddrPE: [438<--439]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	3
AddrVFGNode ID: 298 AddrPE: [1731<--1732]	
   %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8 {  }	1	3
AddrVFGNode ID: 229 AddrPE: [1275<--1276]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 171 AddrPE: [782<--783]	
   %4 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	3
AddrVFGNode ID: 58 AddrPE: [73<--74]	
   %7 = alloca [14 x i8], align 1 {  }	1	3
AddrVFGNode ID: 130 AddrPE: [541<--542]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	3
AddrVFGNode ID: 375 AddrPE: [2315<--2316]	
   %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8 {  }	1	2
AddrVFGNode ID: 143 AddrPE: [617<--618]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
AddrVFGNode ID: 122 AddrPE: [490<--491]	
   %2 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 488 AddrPE: [3107<--3108]	
   %2 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
AddrVFGNode ID: 260 AddrPE: [1492<--1493]	
   %4 = alloca %"struct.std::less"*, align 8 {  }	1	2
AddrVFGNode ID: 482 AddrPE: [3048<--3049]	
   %6 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
AddrVFGNode ID: 505 AddrPE: [3191<--3192]	
   %5 = alloca [10 x i32], align 16 {  }	1	2
AddrVFGNode ID: 474 AddrPE: [2993<--2994]	
   %2 = alloca %"class.std::_Rb_tree"*, align 8 {  }	1	2
AddrVFGNode ID: 170 AddrPE: [780<--781]	
   %3 = alloca %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, align 8 {  }	1	2
700(246) 589(199) 219(8) 219(10)  - 0(0) 0(0) 287(39) 214(5) 0(0) 308(51) 
Found Instruction =   store i32 %52, i32* %3, align 4
Found Instruction =   store i8 0, i8* %62, align 1
Found Instruction =   store i32 %64, i32* %1, align 4
Found Instruction =   store i32 %81, i32* %82, align 4
Found Instruction =   store i32 %84, i32* %85, align 4
Found Instruction =   store i32 %87, i32* %88, align 4
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %16, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %18, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
Found Instruction =   %9 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %19, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %3, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %1, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %3, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %17, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %21, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"* %3, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %16, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %20, align 8
Found Instruction =   %21 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %24 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %23, align 8
Found Instruction =   %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %32 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %38, align 8
Found Instruction =   %46 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %49 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %50, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %51 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %53, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %55 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %58 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %60, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %62 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %64 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %63, %"struct.std::_Rb_tree_node_base"** %65, align 8
Found Instruction =   %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %67 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %66, %"struct.std::_Rb_tree_node_base"** %69, align 8
Found Instruction =   %70 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %73 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %72, align 8
Found Instruction =   %76 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %79 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %81 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Alloc_node"** %8, align 8
Found Instruction =   %85 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %84, %"struct.std::_Rb_tree_node_base"** %87, align 8
Found Instruction =   %89 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %90, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %91 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %93, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %101 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %12, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %16 = load i32, i32* %15, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store i32 %16, i32* %19, align 8
Found Instruction =   %20 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
Found Instruction =   %23 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %25, align 8
Found Instruction =   %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %7, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
Found Instruction =   store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
Found Instruction =   %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store i32* %1, i32** %5, align 8
Found Instruction =   store i32* %2, i32** %6, align 8
Found Instruction =   %8 = load i32*, i32** %5, align 8
Found Instruction =   %9 = load i32, i32* %8, align 4
Found Instruction =   %10 = load i32*, i32** %6, align 8
Found Instruction =   %11 = load i32, i32* %10, align 4
Found Instruction =   store %"struct.std::_Rb_tree_node"* %25, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %37, %"struct.std::_Rb_tree_node_base"** %36, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %38, align 8
Found Instruction =   %48 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %51, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   %61 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %11, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %17 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %19, align 8
Found Instruction =   %21 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %20, align 8
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %43, %"struct.std::_Rb_tree_node_base"** %42, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %44, align 8
Found Instruction =   %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %51, align 8
Found Instruction =   %59 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %58, align 8
Found Instruction =   %61 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %60, align 8
Found Instruction =   %72 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %71, align 8
Found Instruction =   %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %77, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %91, %"struct.std::_Rb_tree_node_base"** %90, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %93, %"struct.std::_Rb_tree_node_base"** %92, align 8
Found Instruction =   %99 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %98, align 8
Found Instruction =   %107 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %106, align 8
Found Instruction =   %109 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %108, align 8
Found Instruction =   %120 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %119, align 8
Found Instruction =   %125 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %124, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %138, %"struct.std::_Rb_tree_node_base"** %137, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %140, %"struct.std::_Rb_tree_node_base"** %139, align 8
Found Instruction =   %145 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %144, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %3, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %22 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store i8 %29, i8* %10, align 1
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   %45 = load i64, i64* %44, align 8
Found Instruction =   store i64 %46, i64* %44, align 8
Found Instruction =   %47 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
Found Instruction =   %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %12, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %25 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store i8 %28, i8* %8, align 1
Found Instruction =   %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %40, %"struct.std::_Rb_tree_node"** %6, align 8
Found Instruction =   %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"** %47, align 8
Found Instruction =   %58 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %57, align 8
Found Instruction =   %67 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %66, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %13, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %13, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
Found Instruction =   store %"struct.std::pair.1"* %0, %"struct.std::pair.1"** %4, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %5, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
Found Instruction =   %7 = load %"struct.std::pair.1"*, %"struct.std::pair.1"** %4, align 8
Found Instruction =   %10 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %13, %"struct.std::_Rb_tree_node_base"** %9, align 8
Found Instruction =   %15 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
Found Instruction =   %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %14, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::pair"* %0, %"struct.std::pair"** %6, align 8
Found Instruction =   %9 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
Found Instruction =   store i32 %15, i32* %11, align 4
Found Instruction =   store i32 0, i32* %16, align 4
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
Found Instruction =   %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
Found Instruction =   store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
Found Instruction =   %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %23 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   %25 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %27, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %29 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   store %"struct.std::_Rb_tree_node"* %31, %"struct.std::_Rb_tree_node"** %7, align 8
Found Instruction =   %34 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
Found Instruction =   store %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   %3 = load %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"*, %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl"** %2, align 8
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   %22 = load i32, i32* %21, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_74-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==19113==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe031fe1ec at pc 0x000000401cbb bp 0x7ffe031fe1b0 sp 0x7ffe031fe1a8
WRITE of size 4 at 0x7ffe031fe1ec thread T0
    #0 0x401cba  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_74-bad_m+0x401cba)
    #1 0x4019b5  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_74-bad_m+0x4019b5)
    #2 0x401b39  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_74-bad_m+0x401b39)
    #3 0x7fa8e816ac86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x401419  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_74-bad_m+0x401419)

Address 0x7ffe031fe1ec is located in stack of thread T0 at offset 44 in frame
    #0 0x401b6f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_74-bad_m+0x401b6f)

  This frame has 2 object(s):
    [32, 36) ''
    [48, 88) '' <== Memory access at offset 44 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_74-bad_m+0x401cba) 
Shadow bytes around the buggy address:
  0x100040637be0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100040637bf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100040637c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100040637c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100040637c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x100040637c30: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04[f2]00 00
  0x100040637c40: 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x100040637c50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100040637c60: f1 f1 f1 f1 00 00 00 00 00 00 f2 f2 f2 f2 00 00
  0x100040637c70: f2 f2 00 06 f2 f2 04 f2 04 f2 04 f2 00 00 00 00
  0x100040637c80: 00 00 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==19113==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_74-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 23 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_81-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 1
AddrVFGNode ID: 69 AddrPE: [161<--162]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
56(21) 4(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(1) 0(0) 3(1) 
Found Instruction =   store i32 %41, i32* %2, align 4
Found Instruction =   store i8 0, i8* %51, align 1
Found Instruction =   store i32 %53, i32* %1, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_81-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_81-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 28 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (239 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_82-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 1
AddrVFGNode ID: 69 AddrPE: [161<--162]	
   %6 = alloca [14 x i8], align 1 {  }	1	3
57(22) 4(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(1) 0(0) 3(1) 
Found Instruction =   store i32 %40, i32* %2, align 4
Found Instruction =   store i8 0, i8* %50, align 1
Found Instruction =   store i32 %52, i32* %1, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_82-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_82-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 13 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (240 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_83-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = __isoc99_sscanf
Function = recv
Top k = 1
AddrVFGNode ID: 54 AddrPE: [78<--79]	
   %9 = alloca [14 x i8], align 1 {  }	1	3
51(17) 4(2) 0(0) 0(0)  - 0(0) 0(0) 0(0) 3(1) 0(0) 3(1) 
Found Instruction =   store i32 %45, i32* %5, align 4
Found Instruction =   store i8 0, i8* %55, align 1
Found Instruction =   store i32 %57, i32* %58, align 4
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_83-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
Calling bad()...
0
0
0
0
0
0
0
0
0
0
Finished bad()
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_83-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 27 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (242 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_84-bad.out
Address sanitizer running...
SVF Initialization Done
Rule1 initialization done...
Function = recv
Function = __isoc99_sscanf
Top k = 2
AddrVFGNode ID: 79 AddrPE: [304<--305]	
   %5 = call noalias nonnull i8* @_Znwm(i64 4) #12 {  }	2	11
AddrVFGNode ID: 55 AddrPE: [78<--79]	
   %9 = alloca [14 x i8], align 1 {  }	1	3
55(20) 14(4) 11(1) 0(0)  - 0(0) 0(0) 0(0) 13(2) 0(0) 13(2) 
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"* %0, %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"** %3, align 8
Found Instruction =   %10 = load %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"** %3, align 8
Found Instruction =   store i32 %11, i32* %12, align 4
Found Instruction =   store i32 %45, i32* %5, align 4
Found Instruction =   store i8 0, i8* %55, align 1
Found Instruction =   store i32 %57, i32* %58, align 4
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"* %0, %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"** %2, align 8
Found Instruction =   %5 = load %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"** %2, align 8
Found Instruction =   %8 = load i32, i32* %7, align 4
Found Instruction =   %12 = load i32, i32* %11, align 4
Found Instruction =   store i32 1, i32* %14, align 4
Found Instruction =   store %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"* %6, %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"** %2, align 8
Found Instruction =   %9 = load %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"*, %"class.CWE124_Buffer_Underwrite__CWE839_listen_socket_84::CWE124_Buffer_Underwrite__CWE839_listen_socket_84_bad"** %2, align 8
Process "timeout 3.0s /home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_84-bad_m" started
Process "/home/salman/DPP/dpp-data/juliet-test-suite/socket.sh" started
=================================================================
==19256==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffedbd4669c at pc 0x000000401517 bp 0x7ffedbd46670 sp 0x7ffedbd46668
WRITE of size 4 at 0x7ffedbd4669c thread T0
    #0 0x401516  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_84-bad_m+0x401516)
    #1 0x401649  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_84-bad_m+0x401649)
    #2 0x4016b9  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_84-bad_m+0x4016b9)
    #3 0x7f05f5643c86  (/lib/x86_64-linux-gnu/libc.so.6+0x21c86)
    #4 0x400f59  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_84-bad_m+0x400f59)

Address 0x7ffedbd4669c is located in stack of thread T0 at offset 28 in frame
    #0 0x40136f  (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_84-bad_m+0x40136f)

  This frame has 1 object(s):
    [32, 72) '' <== Memory access at offset 28 underflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-underflow (/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_84-bad_m+0x401516) 
Shadow bytes around the buggy address:
  0x10005b7a0c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b7a0c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b7a0ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b7a0cb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b7a0cc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x10005b7a0cd0: f1 f1 f1[f1]00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3
  0x10005b7a0ce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b7a0cf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b7a0d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b7a0d10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x10005b7a0d20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==19256==ABORTING
/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/bad/CWE124_Buffer_Underwrite__CWE839_listen_socket_84-bad_m: error while loading shared libraries: libclang_rt.asan-x86_64.so: cannot open shared object file: No such file or directory
[ perf record: Woken up 30 times to write data ]
[ perf record: Captured and wrote 0.024 MB perf.data (250 samples) ]
no symbols found in /usr/bin/timeout, maybe install a debug package?
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_negative_84-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__CWE839_rand_84-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_cpy_84-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_loop_84-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memcpy_84-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_memmove_84-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__malloc_char_ncpy_84-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_cpy_84-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_loop_84-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memcpy_84-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_memmove_84-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_01-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_02-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_03-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_04-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_05-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_06-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_07-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_08-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_09-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_10-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_11-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_12-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_13-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_14-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_15-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_16-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_17-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_18-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_21-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_22-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_31-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_32-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_33-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_34-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_41-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_42-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_43-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_44-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_45-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_51-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_52-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_53-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_54-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_61-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_62-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_63-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_64-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_65-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_66-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_67-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_68-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_72-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_73-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_74-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_81-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_82-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_83-bad.out
======END_A_TESTCASE======
======START_A_TESTCASE======
@&FILENAME&@:/home/salman/DPP/dpp-data/juliet-test-suite/bin/CWE124/output/bad/CWE124_Buffer_Underwrite__new_char_ncpy_84-bad.out
======END_A_TESTCASE======
========== running ./testcases/CWE124_Buffer_Underwrite ==========
