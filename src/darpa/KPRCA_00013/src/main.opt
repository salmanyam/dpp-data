; ModuleID = './main.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.cell = type { i32, i32, i8*, i8* }
%struct.operator_t = type { i8*, double (%struct.stack**, i32*)* }
%struct.stack = type { i8*, %struct.stack* }
%struct.queue = type { i8*, %struct.queue* }

@_g_sheet = internal unnamed_addr global %struct.cell* null, align 8, !dbg !0
@g_sheet = internal unnamed_addr global %struct.cell** null, align 8, !dbg !98
@.str.2 = private unnamed_addr constant [26 x i8] c"!FORMULA: CIRREF/STR/DIV0\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"!VALUE\00", align 1
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@operators = internal global [19 x %struct.operator_t] [%struct.operator_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_avg }, %struct.operator_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_count }, %struct.operator_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_max }, %struct.operator_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_median }, %struct.operator_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_min }, %struct.operator_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_stddev }, %struct.operator_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_abs }, %struct.operator_t { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_add }, %struct.operator_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_cos }, %struct.operator_t { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_ln }, %struct.operator_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_log10 }, %struct.operator_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_power }, %struct.operator_t { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_product }, %struct.operator_t { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_quotient }, %struct.operator_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_sin }, %struct.operator_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_sqrt }, %struct.operator_t { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_subtract }, %struct.operator_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), double (%struct.stack**, i32*)* @handle_op_sum }, %struct.operator_t zeroinitializer], align 16, !dbg !110
@.str.4 = private unnamed_addr constant [4 x i8] c"AVG\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"COUNT\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"MAX\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"MEDIAN\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"MIN\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"STDDEV\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"ABS\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"COS\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"LN\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"LOG10\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"POWER\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"SIN\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"SQRT\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"SUM\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"%s%s=%s\0A\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"Accel:-$ \00", align 1
@str.22 = private unnamed_addr constant [20 x i8] c"Error clearing cell\00", align 1
@str.21 = private unnamed_addr constant [43 x i8] c"Error assigning cell. Valid Cells: A0-ZZ99\00", align 1
@str.20 = private unnamed_addr constant [53 x i8] c"Error showing data. Try SHOW TABLE or SHOW [A0-ZZ99]\00", align 1
@str.19 = private unnamed_addr constant [10 x i8] c"Bad input\00", align 1
@str.18 = private unnamed_addr constant [9 x i8] c"Success.\00", align 1
@str = private unnamed_addr constant [11 x i8] c"Exiting...\00", align 1
@str.23 = private unnamed_addr constant [14 x i8] c"Unknown Input\00", align 1
@.str.10.24 = private unnamed_addr constant [6 x i8] c"SHOW \00", align 1
@.str.11.25 = private unnamed_addr constant [6 x i8] c"REPR \00", align 1
@.str.12.26 = private unnamed_addr constant [7 x i8] c"CLEAR \00", align 1
@.str.13.27 = private unnamed_addr constant [5 x i8] c"EXIT\00", align 1
@.str.14.28 = private unnamed_addr constant [6 x i8] c"TABLE\00", align 1
@.str.15.29 = private unnamed_addr constant [15 x i8] c"Cell Repr: %s\0A\00", align 1
@.str.16.30 = private unnamed_addr constant [16 x i8] c"Cell Value: %s\0A\00", align 1
@.str.17.31 = private unnamed_addr constant [2 x i8] c"=\00", align 1

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @init_sheet() local_unnamed_addr #0 !dbg !194 {
  call void @llvm.dbg.value(metadata i32 0, metadata !201, metadata !DIExpression()), !dbg !202
  %1 = call dereferenceable_or_null(1684800) i8* @calloc(i64 70200, i64 24), !dbg !203
  store i8* %1, i8** bitcast (%struct.cell** @_g_sheet to i8**), align 8, !dbg !204, !tbaa !205
  %2 = icmp eq i8* %1, null, !dbg !209
  br i1 %2, label %33, label %3, !dbg !211

3:                                                ; preds = %0
  %4 = call dereferenceable_or_null(5616) i8* @malloc(i64 5616), !dbg !212
  store i8* %4, i8** bitcast (%struct.cell*** @g_sheet to i8**), align 8, !dbg !213, !tbaa !205
  %5 = icmp eq i8* %4, null, !dbg !214
  br i1 %5, label %33, label %6, !dbg !216

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i64 0, metadata !198, metadata !DIExpression()), !dbg !202
  %7 = load %struct.cell*, %struct.cell** @_g_sheet, align 8, !dbg !217, !tbaa !205
  %8 = load %struct.cell**, %struct.cell*** @g_sheet, align 8, !dbg !217, !tbaa !205
  br label %11, !dbg !220

9:                                                ; preds = %11
  call void @llvm.dbg.value(metadata i32 0, metadata !201, metadata !DIExpression()), !dbg !202
  call void @llvm.dbg.value(metadata i64 0, metadata !198, metadata !DIExpression()), !dbg !202
  %10 = load %struct.cell**, %struct.cell*** @g_sheet, align 8, !dbg !221, !tbaa !205
  br label %18, !dbg !226

11:                                               ; preds = %11, %6
  %12 = phi i64 [ 0, %6 ], [ %16, %11 ]
  call void @llvm.dbg.value(metadata i64 %12, metadata !198, metadata !DIExpression()), !dbg !202
  %13 = mul nuw nsw i64 %12, 100, !dbg !227
  %14 = getelementptr inbounds %struct.cell, %struct.cell* %7, i64 %13, !dbg !228
  %15 = getelementptr inbounds %struct.cell*, %struct.cell** %8, i64 %12, !dbg !229
  store %struct.cell* %14, %struct.cell** %15, align 8, !dbg !230, !tbaa !205
  %16 = add nuw nsw i64 %12, 1, !dbg !231
  call void @llvm.dbg.value(metadata i64 %16, metadata !198, metadata !DIExpression()), !dbg !202
  %17 = icmp eq i64 %16, 702, !dbg !232
  br i1 %17, label %9, label %11, !dbg !220, !llvm.loop !233

18:                                               ; preds = %30, %9
  %19 = phi i32 [ 0, %9 ], [ %26, %30 ]
  %20 = phi i64 [ 0, %9 ], [ %31, %30 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !201, metadata !DIExpression()), !dbg !202
  call void @llvm.dbg.value(metadata i64 %20, metadata !198, metadata !DIExpression()), !dbg !202
  call void @llvm.dbg.value(metadata i32 %19, metadata !201, metadata !DIExpression()), !dbg !202
  call void @llvm.dbg.value(metadata i64 0, metadata !200, metadata !DIExpression()), !dbg !202
  %21 = getelementptr inbounds %struct.cell*, %struct.cell** %10, i64 %20, !dbg !221
  %22 = load %struct.cell*, %struct.cell** %21, align 8, !dbg !221, !tbaa !205
  br label %23, !dbg !235

23:                                               ; preds = %23, %18
  %24 = phi i32 [ %19, %18 ], [ %26, %23 ]
  %25 = phi i64 [ 0, %18 ], [ %28, %23 ]
  call void @llvm.dbg.value(metadata i32 %24, metadata !201, metadata !DIExpression()), !dbg !202
  call void @llvm.dbg.value(metadata i64 %25, metadata !200, metadata !DIExpression()), !dbg !202
  %26 = add i32 %24, 1, !dbg !236
  call void @llvm.dbg.value(metadata i32 %26, metadata !201, metadata !DIExpression()), !dbg !202
  %27 = getelementptr inbounds %struct.cell, %struct.cell* %22, i64 %25, i32 0, !dbg !237
  store i32 %24, i32* %27, align 8, !dbg !238, !tbaa !239
  %28 = add nuw nsw i64 %25, 1, !dbg !242
  call void @llvm.dbg.value(metadata i64 %28, metadata !200, metadata !DIExpression()), !dbg !202
  %29 = icmp eq i64 %28, 100, !dbg !243
  br i1 %29, label %30, label %23, !dbg !235, !llvm.loop !244

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 %26, metadata !201, metadata !DIExpression()), !dbg !202
  %31 = add nuw nsw i64 %20, 1, !dbg !246
  call void @llvm.dbg.value(metadata i64 %31, metadata !198, metadata !DIExpression()), !dbg !202
  %32 = icmp eq i64 %31, 702, !dbg !247
  br i1 %32, label %33, label %18, !dbg !226, !llvm.loop !248

33:                                               ; preds = %30, %3, %0
  %34 = phi i32 [ -1, %0 ], [ -1, %3 ], [ 0, %30 ], !dbg !202
  ret i32 %34, !dbg !250
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @calloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i8* @show_cell(i8* %0, i32 %1, i8* %2, i64 %3) local_unnamed_addr #3 !dbg !251 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.stack*, align 8
  call void @llvm.dbg.value(metadata i8* %0, metadata !255, metadata !DIExpression()), !dbg !265
  call void @llvm.dbg.value(metadata i32 %1, metadata !256, metadata !DIExpression()), !dbg !265
  call void @llvm.dbg.value(metadata i8* %2, metadata !257, metadata !DIExpression()), !dbg !265
  call void @llvm.dbg.value(metadata i64 %3, metadata !258, metadata !DIExpression()), !dbg !265
  %7 = bitcast i32* %5 to i8*, !dbg !266
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #18, !dbg !266
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !260, metadata !DIExpression()), !dbg !265
  %8 = call fastcc %struct.cell* @get_cell(i8* %0), !dbg !267
  call void @llvm.dbg.value(metadata %struct.cell* %8, metadata !261, metadata !DIExpression()), !dbg !265
  %9 = icmp eq %struct.cell* %8, null, !dbg !268
  br i1 %9, label %38, label %10, !dbg !270

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.cell, %struct.cell* %8, i64 0, i32 1, !dbg !271
  %12 = load i32, i32* %11, align 4, !dbg !271, !tbaa !273
  switch i32 %12, label %14 [
    i32 0, label %38
    i32 1, label %13
  ], !dbg !274

13:                                               ; preds = %10
  br label %38, !dbg !275

14:                                               ; preds = %10
  %15 = icmp eq i32 %1, 0, !dbg !277
  br i1 %15, label %19, label %16, !dbg !279

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.cell, %struct.cell* %8, i64 0, i32 2, !dbg !280
  %18 = load i8*, i8** %17, align 8, !dbg !280, !tbaa !281
  br label %38, !dbg !282

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.cell, %struct.cell* %8, i64 0, i32 3, !dbg !283
  %21 = load i8*, i8** %20, align 8, !dbg !283, !tbaa !284
  %22 = icmp eq i8* %21, null, !dbg !285
  br i1 %22, label %35, label %23, !dbg !286

23:                                               ; preds = %19
  %24 = bitcast %struct.stack** %6 to i8*, !dbg !287
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18, !dbg !287
  call void @llvm.dbg.value(metadata %struct.stack* null, metadata !262, metadata !DIExpression()), !dbg !288
  store %struct.stack* null, %struct.stack** %6, align 8, !dbg !289, !tbaa !205
  %25 = load i8*, i8** %20, align 8, !dbg !290, !tbaa !284
  %26 = getelementptr inbounds %struct.cell, %struct.cell* %8, i64 0, i32 0, !dbg !291
  %27 = load i32, i32* %26, align 8, !dbg !291, !tbaa !239
  call void @llvm.dbg.value(metadata i32* %5, metadata !259, metadata !DIExpression(DW_OP_deref)), !dbg !265
  call void @llvm.dbg.value(metadata %struct.stack** %6, metadata !262, metadata !DIExpression(DW_OP_deref)), !dbg !288
  %28 = call fastcc double @eval_formula(i8* %25, i32* nonnull %5, %struct.stack** nonnull %6, i32 %27), !dbg !292
  call void @llvm.dbg.value(metadata double %28, metadata !260, metadata !DIExpression()), !dbg !265
  %29 = load i32, i32* %5, align 4, !dbg !293, !tbaa !295
  call void @llvm.dbg.value(metadata i32 %29, metadata !259, metadata !DIExpression()), !dbg !265
  %30 = icmp eq i32 %29, 0, !dbg !293
  br i1 %30, label %31, label %33, !dbg !296

31:                                               ; preds = %23
  %32 = call i8* @ftoa(double %28, i8* %2, i64 %3) #18, !dbg !297
  br label %33, !dbg !298

33:                                               ; preds = %23, %31
  %34 = phi i8* [ %2, %31 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), %23 ], !dbg !288
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18, !dbg !299
  br label %38

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.cell, %struct.cell* %8, i64 0, i32 2, !dbg !300
  %37 = load i8*, i8** %36, align 8, !dbg !300, !tbaa !281
  br label %38, !dbg !302

38:                                               ; preds = %10, %4, %35, %33, %16, %13
  %39 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), %13 ], [ %18, %16 ], [ %34, %33 ], [ %37, %35 ], [ null, %4 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %10 ], !dbg !265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #18, !dbg !303
  ret i8* %39, !dbg !303
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind uwtable
define internal fastcc %struct.cell* @get_cell(i8* %0) unnamed_addr #3 !dbg !304 {
  %2 = alloca [3 x i8], align 1
  %3 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !308, metadata !DIExpression()), !dbg !318
  %4 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 0, !dbg !319
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %4) #18, !dbg !319
  call void @llvm.dbg.declare(metadata [3 x i8]* %2, metadata !309, metadata !DIExpression()), !dbg !320
  %5 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0, !dbg !321
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %5) #18, !dbg !321
  call void @llvm.dbg.declare(metadata [3 x i8]* %3, metadata !313, metadata !DIExpression()), !dbg !322
  call void @llvm.dbg.value(metadata i32 0, metadata !314, metadata !DIExpression()), !dbg !318
  call void @llvm.dbg.value(metadata i32 0, metadata !315, metadata !DIExpression()), !dbg !318
  %6 = call i32 @get_rowcol(i8* %0, i8* nonnull %4, i8* nonnull %5, i8 signext 0) #18, !dbg !323
  %7 = icmp eq i32 %6, -1, !dbg !325
  br i1 %7, label %46, label %8, !dbg !326

8:                                                ; preds = %1
  %9 = call i64 @strlen(i8* nonnull %4), !dbg !327
  %10 = trunc i64 %9 to i32, !dbg !327
  call void @llvm.dbg.value(metadata i32 %10, metadata !317, metadata !DIExpression()), !dbg !318
  call void @llvm.dbg.value(metadata i32 0, metadata !316, metadata !DIExpression()), !dbg !318
  call void @llvm.dbg.value(metadata i32 0, metadata !314, metadata !DIExpression()), !dbg !318
  %11 = icmp sgt i32 %10, 0, !dbg !328
  br i1 %11, label %12, label %37, !dbg !331

12:                                               ; preds = %8
  %13 = and i64 %9, 4294967295, !dbg !328
  br label %14, !dbg !331

14:                                               ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %31, %14 ]
  %16 = phi i32 [ 0, %12 ], [ %32, %14 ]
  %17 = phi i32 [ 0, %12 ], [ %30, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !316, metadata !DIExpression()), !dbg !318
  call void @llvm.dbg.value(metadata i32 %17, metadata !314, metadata !DIExpression()), !dbg !318
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 %15, !dbg !332
  %19 = load i8, i8* %18, align 1, !dbg !332, !tbaa !333
  %20 = sext i8 %19 to i32, !dbg !332
  %21 = add nsw i32 %20, -64, !dbg !334
  %22 = sitofp i32 %21 to double, !dbg !335
  %23 = xor i32 %16, -1, !dbg !336
  %24 = add i32 %23, %10, !dbg !336
  %25 = sitofp i32 %24 to double, !dbg !337
  %26 = call double @pow(double 2.600000e+01, double %25) #18, !dbg !338
  %27 = fmul double %26, %22, !dbg !339
  %28 = sitofp i32 %17 to double, !dbg !340
  %29 = fadd double %27, %28, !dbg !340
  %30 = fptosi double %29 to i32, !dbg !340
  call void @llvm.dbg.value(metadata i32 %30, metadata !314, metadata !DIExpression()), !dbg !318
  %31 = add nuw nsw i64 %15, 1, !dbg !341
  %32 = add nuw nsw i32 %16, 1, !dbg !341
  call void @llvm.dbg.value(metadata i64 %31, metadata !316, metadata !DIExpression()), !dbg !318
  %33 = icmp eq i64 %31, %13, !dbg !328
  br i1 %33, label %34, label %14, !dbg !331, !llvm.loop !342

34:                                               ; preds = %14
  %35 = add i32 %30, -1, !dbg !344
  %36 = sext i32 %35 to i64, !dbg !344
  br label %37, !dbg !344

37:                                               ; preds = %34, %8
  %38 = phi i64 [ -1, %8 ], [ %36, %34 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !314, metadata !DIExpression()), !dbg !318
  call void @llvm.dbg.value(metadata i32 undef, metadata !314, metadata !DIExpression()), !dbg !318
  %39 = call i64 @strtol(i8* nocapture nonnull %5, i8** null, i32 10), !dbg !345
  call void @llvm.dbg.value(metadata i64 %39, metadata !315, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !318
  %40 = load %struct.cell**, %struct.cell*** @g_sheet, align 8, !dbg !346, !tbaa !205
  %41 = getelementptr inbounds %struct.cell*, %struct.cell** %40, i64 %38, !dbg !346
  %42 = load %struct.cell*, %struct.cell** %41, align 8, !dbg !346, !tbaa !205
  %43 = shl i64 %39, 32, !dbg !346
  %44 = ashr exact i64 %43, 32, !dbg !346
  %45 = getelementptr inbounds %struct.cell, %struct.cell* %42, i64 %44, !dbg !346
  br label %46, !dbg !347

46:                                               ; preds = %1, %37
  %47 = phi %struct.cell* [ %45, %37 ], [ null, %1 ], !dbg !318
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %5) #18, !dbg !348
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %4) #18, !dbg !348
  ret %struct.cell* %47, !dbg !348
}

; Function Attrs: nounwind uwtable
define internal fastcc double @eval_formula(i8* nocapture readonly %0, i32* %1, %struct.stack** %2, i32 %3) unnamed_addr #3 !dbg !349 {
  %5 = alloca [512 x i8], align 16
  %6 = alloca [512 x i8], align 16
  %7 = alloca %struct.queue*, align 8
  %8 = alloca %struct.queue*, align 8
  %9 = alloca %struct.stack*, align 8
  call void @llvm.dbg.value(metadata i8* %0, metadata !353, metadata !DIExpression()), !dbg !379
  call void @llvm.dbg.value(metadata i32* %1, metadata !354, metadata !DIExpression()), !dbg !379
  call void @llvm.dbg.value(metadata %struct.stack** %2, metadata !355, metadata !DIExpression()), !dbg !379
  call void @llvm.dbg.value(metadata i32 %3, metadata !356, metadata !DIExpression()), !dbg !379
  %10 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 0, !dbg !380
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %10) #18, !dbg !380
  call void @llvm.dbg.declare(metadata [512 x i8]* %5, metadata !357, metadata !DIExpression()), !dbg !381
  %11 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0, !dbg !382
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %11) #18, !dbg !382
  call void @llvm.dbg.declare(metadata [512 x i8]* %6, metadata !361, metadata !DIExpression()), !dbg !383
  call void @llvm.dbg.value(metadata i64 512, metadata !362, metadata !DIExpression()), !dbg !379
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !363, metadata !DIExpression()), !dbg !379
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !364, metadata !DIExpression()), !dbg !379
  store i32 0, i32* %1, align 4, !dbg !384, !tbaa !295
  %12 = call i8* @itoa(i32 %3, i8* nonnull %11, i64 512) #18, !dbg !385
  %13 = icmp eq i8* %12, null, !dbg !387
  br i1 %13, label %90, label %14, !dbg !388

14:                                               ; preds = %4
  %15 = call i64 @strlen(i8* nonnull %11), !dbg !389
  %16 = add i64 %15, 1, !dbg !390
  %17 = call i32 @push_copy(%struct.stack** %2, i8* nonnull %11, i64 %16) #18, !dbg !391
  %18 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !392
  %19 = add i64 %18, 1, !dbg !393
  %20 = call fastcc %struct.queue* @infixtorpn(i8* %0, i64 %19), !dbg !394
  call void @llvm.dbg.value(metadata %struct.queue* %20, metadata !367, metadata !DIExpression()), !dbg !379
  store %struct.queue* %20, %struct.queue** %7, align 8, !dbg !395, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.queue* null, metadata !368, metadata !DIExpression()), !dbg !379
  store %struct.queue* null, %struct.queue** %8, align 8, !dbg !396, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* null, metadata !369, metadata !DIExpression()), !dbg !379
  store %struct.stack* null, %struct.stack** %9, align 8, !dbg !397, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* null, metadata !370, metadata !DIExpression()), !dbg !379
  call void @llvm.dbg.value(metadata %struct.operator_t* null, metadata !371, metadata !DIExpression()), !dbg !379
  call void @llvm.dbg.value(metadata %struct.queue* %20, metadata !367, metadata !DIExpression()), !dbg !379
  %21 = icmp eq %struct.queue* %20, null, !dbg !398
  br i1 %21, label %82, label %22, !dbg !399

22:                                               ; preds = %14, %79
  call void @llvm.dbg.value(metadata %struct.queue** %7, metadata !367, metadata !DIExpression(DW_OP_deref)), !dbg !379
  %23 = call i8* @dequeue_copy(%struct.queue** nonnull %7) #18, !dbg !400
  call void @llvm.dbg.value(metadata i8* %23, metadata !366, metadata !DIExpression()), !dbg !379
  %24 = call fastcc i32 @parsearg(i8* %23), !dbg !401
  call void @llvm.dbg.value(metadata i32 %24, metadata !365, metadata !DIExpression()), !dbg !379
  switch i32 %24, label %90 [
    i32 4, label %25
    i32 5, label %27
    i32 6, label %33
  ], !dbg !402

25:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.stack** %9, metadata !369, metadata !DIExpression(DW_OP_deref)), !dbg !379
  %26 = call i32 @push(%struct.stack** nonnull %9, i8* %23) #18, !dbg !403
  br label %79, !dbg !404

27:                                               ; preds = %22
  %28 = call fastcc %struct.operator_t* @get_op(i8* %23), !dbg !405
  call void @llvm.dbg.value(metadata %struct.operator_t* %28, metadata !371, metadata !DIExpression()), !dbg !379
  call void @llvm.dbg.value(metadata %struct.stack** %9, metadata !369, metadata !DIExpression(DW_OP_deref)), !dbg !379
  %29 = call fastcc i32 @eval_function(%struct.operator_t* %28, %struct.stack** nonnull %9, i8* nonnull %10), !dbg !406
  %30 = icmp eq i32 %29, -1, !dbg !408
  br i1 %30, label %90, label %31, !dbg !409

31:                                               ; preds = %27
  call void @llvm.dbg.value(metadata %struct.stack** %9, metadata !369, metadata !DIExpression(DW_OP_deref)), !dbg !379
  %32 = call i32 @push_copy(%struct.stack** nonnull %9, i8* nonnull %10, i64 512) #18, !dbg !410
  br label %79, !dbg !411

33:                                               ; preds = %22
  %34 = load %struct.stack*, %struct.stack** %2, align 8, !dbg !412, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %34, metadata !370, metadata !DIExpression()), !dbg !379
  %35 = call fastcc %struct.cell* @get_cell(i8* %23), !dbg !413
  call void @llvm.dbg.value(metadata %struct.cell* %35, metadata !373, metadata !DIExpression()), !dbg !414
  %36 = icmp eq %struct.cell* %35, null, !dbg !415
  br i1 %36, label %90, label %37, !dbg !417

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata %struct.stack* %34, metadata !370, metadata !DIExpression()), !dbg !379
  %38 = icmp eq %struct.stack* %34, null, !dbg !418
  br i1 %38, label %57, label %39, !dbg !419

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.cell, %struct.cell* %35, i64 0, i32 0, !dbg !420
  br label %41, !dbg !419

41:                                               ; preds = %39, %53
  %42 = phi %struct.stack* [ %34, %39 ], [ %55, %53 ]
  call void @llvm.dbg.value(metadata %struct.stack* %42, metadata !370, metadata !DIExpression()), !dbg !379
  %43 = load i32, i32* %40, align 8, !dbg !423, !tbaa !239
  %44 = call i8* @itoa(i32 %43, i8* nonnull %11, i64 512) #18, !dbg !424
  %45 = icmp eq i8* %44, null, !dbg !425
  br i1 %45, label %90, label %46, !dbg !426

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.stack, %struct.stack* %42, i64 0, i32 0, !dbg !427
  %48 = load i8*, i8** %47, align 8, !dbg !427, !tbaa !429
  %49 = call i64 @strlen(i8* nonnull dereferenceable(1) %48), !dbg !431
  %50 = add i64 %49, 1, !dbg !432
  %51 = call i32 @bcmp(i8* %48, i8* nonnull %11, i64 %50), !dbg !433
  %52 = icmp eq i32 %51, 0, !dbg !434
  br i1 %52, label %90, label %53, !dbg !435

53:                                               ; preds = %46
  %54 = getelementptr inbounds %struct.stack, %struct.stack* %42, i64 0, i32 1, !dbg !436
  %55 = load %struct.stack*, %struct.stack** %54, align 8, !dbg !436, !tbaa !437
  call void @llvm.dbg.value(metadata %struct.stack* %55, metadata !370, metadata !DIExpression()), !dbg !379
  %56 = icmp eq %struct.stack* %55, null, !dbg !418
  br i1 %56, label %57, label %41, !dbg !419, !llvm.loop !438

57:                                               ; preds = %53, %37
  %58 = getelementptr inbounds %struct.cell, %struct.cell* %35, i64 0, i32 1, !dbg !440
  %59 = load i32, i32* %58, align 4, !dbg !440, !tbaa !273
  switch i32 %59, label %90 [
    i32 0, label %60
    i32 4, label %62
    i32 7, label %68
  ], !dbg !442

60:                                               ; preds = %57
  call void @llvm.dbg.value(metadata %struct.stack** %9, metadata !369, metadata !DIExpression(DW_OP_deref)), !dbg !379
  %61 = call i32 @push_copy(%struct.stack** nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), i64 2) #18, !dbg !443
  br label %79, !dbg !445

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.cell, %struct.cell* %35, i64 0, i32 2, !dbg !446
  %64 = load i8*, i8** %63, align 8, !dbg !446, !tbaa !281
  %65 = call i64 @strlen(i8* nonnull dereferenceable(1) %64), !dbg !449
  %66 = add i64 %65, 1, !dbg !450
  call void @llvm.dbg.value(metadata %struct.stack** %9, metadata !369, metadata !DIExpression(DW_OP_deref)), !dbg !379
  %67 = call i32 @push_copy(%struct.stack** nonnull %9, i8* %64, i64 %66) #18, !dbg !451
  br label %79, !dbg !452

68:                                               ; preds = %57
  %69 = getelementptr inbounds %struct.cell, %struct.cell* %35, i64 0, i32 3, !dbg !453
  %70 = load i8*, i8** %69, align 8, !dbg !453, !tbaa !284
  %71 = getelementptr inbounds %struct.cell, %struct.cell* %35, i64 0, i32 0, !dbg !456
  %72 = load i32, i32* %71, align 8, !dbg !456, !tbaa !239
  %73 = call fastcc double @eval_formula(i8* %70, i32* nonnull %1, %struct.stack** nonnull %2, i32 %72), !dbg !457
  call void @llvm.dbg.value(metadata double %73, metadata !363, metadata !DIExpression()), !dbg !379
  %74 = load i32, i32* %1, align 4, !dbg !458, !tbaa !295
  %75 = icmp eq i32 %74, 0, !dbg !458
  br i1 %75, label %76, label %90, !dbg !460

76:                                               ; preds = %68
  %77 = call i8* @ftoa(double %73, i8* nonnull %10, i64 512) #18, !dbg !461
  call void @llvm.dbg.value(metadata %struct.stack** %9, metadata !369, metadata !DIExpression(DW_OP_deref)), !dbg !379
  %78 = call i32 @push_copy(%struct.stack** nonnull %9, i8* nonnull %10, i64 512) #18, !dbg !462
  br label %79

79:                                               ; preds = %60, %76, %62, %31, %25
  %80 = load %struct.queue*, %struct.queue** %7, align 8, !dbg !463, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.queue* %80, metadata !367, metadata !DIExpression()), !dbg !379
  %81 = icmp eq %struct.queue* %80, null, !dbg !398
  br i1 %81, label %82, label %22, !dbg !399, !llvm.loop !464

82:                                               ; preds = %79, %14
  call void @llvm.dbg.value(metadata %struct.stack** %9, metadata !369, metadata !DIExpression(DW_OP_deref)), !dbg !379
  %83 = call i8* @pop_copy(%struct.stack** nonnull %9) #18, !dbg !466
  call void @llvm.dbg.value(metadata i8* %83, metadata !376, metadata !DIExpression()), !dbg !379
  %84 = load %struct.stack*, %struct.stack** %9, align 8, !dbg !467, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %84, metadata !369, metadata !DIExpression()), !dbg !379
  %85 = icmp eq %struct.stack* %84, null, !dbg !469
  br i1 %85, label %86, label %90, !dbg !470

86:                                               ; preds = %82
  %87 = call double @atof(i8* %83, i64 512, i32* nonnull %1) #18, !dbg !471
  call void @llvm.dbg.value(metadata double %87, metadata !364, metadata !DIExpression()), !dbg !379
  %88 = load i32, i32* %1, align 4, !dbg !472, !tbaa !295
  %89 = icmp eq i32 %88, 0, !dbg !472
  br i1 %89, label %92, label %90, !dbg !474

90:                                               ; preds = %57, %68, %22, %33, %27, %46, %41, %86, %82, %4
  %91 = phi double [ 0.000000e+00, %4 ], [ 0.000000e+00, %82 ], [ %87, %86 ], [ 0.000000e+00, %41 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %27 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %22 ], [ 0.000000e+00, %68 ], [ 0.000000e+00, %57 ], !dbg !379
  call void @llvm.dbg.value(metadata double %91, metadata !364, metadata !DIExpression()), !dbg !379
  call void @llvm.dbg.label(metadata !377), !dbg !475
  store i32 1, i32* %1, align 4, !dbg !476, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !363, metadata !DIExpression()), !dbg !379
  call void @llvm.dbg.value(metadata %struct.queue** %7, metadata !367, metadata !DIExpression(DW_OP_deref)), !dbg !379
  call void @clear_queue(%struct.queue** nonnull %7) #18, !dbg !477
  call void @llvm.dbg.value(metadata %struct.queue** %8, metadata !368, metadata !DIExpression(DW_OP_deref)), !dbg !379
  call void @clear_queue(%struct.queue** nonnull %8) #18, !dbg !478
  call void @llvm.dbg.value(metadata %struct.stack** %9, metadata !369, metadata !DIExpression(DW_OP_deref)), !dbg !379
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %9) #18, !dbg !479
  br label %92, !dbg !479

92:                                               ; preds = %86, %90
  %93 = phi double [ %91, %90 ], [ %87, %86 ], !dbg !379
  call void @llvm.dbg.value(metadata double %93, metadata !364, metadata !DIExpression()), !dbg !379
  call void @llvm.dbg.label(metadata !378), !dbg !480
  %94 = call i8* @pop_copy(%struct.stack** %2) #18, !dbg !481
  call void @free(i8* %94), !dbg !482
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %11) #18, !dbg !483
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %10) #18, !dbg !483
  ret double %93, !dbg !484
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc %struct.queue* @infixtorpn(i8* nocapture readonly %0, i64 %1) unnamed_addr #3 !dbg !485 {
  %3 = alloca i16, align 2
  %4 = alloca %struct.stack*, align 8
  %5 = alloca %struct.queue*, align 8
  %6 = alloca [16 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %0, metadata !489, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i64 %1, metadata !490, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 0, metadata !491, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 16, metadata !492, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 -1, metadata !493, metadata !DIExpression()), !dbg !523
  %7 = call i8* @malloc(i64 %1), !dbg !524
  call void @llvm.dbg.value(metadata i8* %7, metadata !494, metadata !DIExpression()), !dbg !523
  %8 = call dereferenceable_or_null(64) i8* @malloc(i64 64), !dbg !525
  %9 = bitcast i8* %8 to i32*, !dbg !525
  call void @llvm.dbg.value(metadata i32* %9, metadata !495, metadata !DIExpression()), !dbg !523
  %10 = bitcast i16* %3 to i8*, !dbg !526
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10) #18, !dbg !526
  call void @llvm.dbg.value(metadata i16 0, metadata !500, metadata !DIExpression()), !dbg !523
  store i16 0, i16* %3, align 2, !dbg !527
  %11 = bitcast %struct.stack** %4 to i8*, !dbg !528
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #18, !dbg !528
  call void @llvm.dbg.value(metadata %struct.stack* null, metadata !506, metadata !DIExpression()), !dbg !523
  store %struct.stack* null, %struct.stack** %4, align 8, !dbg !529, !tbaa !205
  %12 = bitcast %struct.queue** %5 to i8*, !dbg !530
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #18, !dbg !530
  call void @llvm.dbg.value(metadata %struct.queue* null, metadata !507, metadata !DIExpression()), !dbg !523
  store %struct.queue* null, %struct.queue** %5, align 8, !dbg !531, !tbaa !205
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %0, i64 %1, i1 false), !dbg !532
  %13 = call i32 @sanitize_formula(i8* %7, i64 %1) #18, !dbg !533
  %14 = icmp eq i32 %13, 0, !dbg !535
  br i1 %14, label %15, label %238, !dbg !536

15:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8 0, metadata !509, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i64 0, metadata !508, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 16, metadata !492, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 -1, metadata !493, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %7, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %7, metadata !497, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32* %9, metadata !495, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i64 1, metadata !508, metadata !DIExpression()), !dbg !523
  %16 = icmp eq i64 %1, 0, !dbg !537
  br i1 %16, label %217, label %17, !dbg !538

17:                                               ; preds = %15
  %18 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 0, !dbg !539
  br label %23, !dbg !538

19:                                               ; preds = %213
  %20 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !543
  call void @llvm.dbg.value(metadata i8* %20, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %20, metadata !497, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8 %34, metadata !509, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i64 %31, metadata !508, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 %89, metadata !492, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 %214, metadata !493, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %20, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %20, metadata !497, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32* %87, metadata !495, metadata !DIExpression()), !dbg !523
  %21 = add i64 %31, 1, !dbg !544
  call void @llvm.dbg.value(metadata i64 %21, metadata !508, metadata !DIExpression()), !dbg !523
  %22 = icmp ult i64 %31, %1, !dbg !537
  br i1 %22, label %23, label %217, !dbg !538, !llvm.loop !545

23:                                               ; preds = %17, %19
  %24 = phi i64 [ 1, %17 ], [ %21, %19 ]
  %25 = phi i8 [ 0, %17 ], [ %34, %19 ]
  %26 = phi i32 [ 16, %17 ], [ %89, %19 ]
  %27 = phi i32 [ -1, %17 ], [ %214, %19 ]
  %28 = phi i8* [ %7, %17 ], [ %20, %19 ]
  %29 = phi i32* [ %9, %17 ], [ %87, %19 ]
  call void @llvm.dbg.value(metadata i8 %25, metadata !509, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 %26, metadata !492, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 %27, metadata !493, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %28, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %28, metadata !497, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32* %29, metadata !495, metadata !DIExpression()), !dbg !523
  br label %30, !dbg !538

30:                                               ; preds = %23, %44
  %31 = phi i64 [ %24, %23 ], [ %46, %44 ]
  %32 = phi i8 [ %25, %23 ], [ %34, %44 ]
  %33 = phi i8* [ %28, %23 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata i8 %32, metadata !509, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %33, metadata !498, metadata !DIExpression()), !dbg !523
  %34 = load i8, i8* %33, align 1, !dbg !547, !tbaa !333
  %35 = zext i8 %34 to i64, !dbg !547
  %36 = icmp ugt i8 %34, 63, !dbg !549
  %37 = shl i64 1, %35, !dbg !549
  %38 = and i64 %37, 288440382872616961, !dbg !549
  %39 = icmp eq i64 %38, 0, !dbg !549
  %40 = or i1 %36, %39, !dbg !550
  %41 = xor i1 %40, true, !dbg !550
  %42 = icmp eq i8 %34, 0, !dbg !551
  %43 = or i1 %42, %41, !dbg !550
  br i1 %43, label %48, label %44, !dbg !550

44:                                               ; preds = %53, %55, %30
  %45 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !552
  call void @llvm.dbg.value(metadata i8 %34, metadata !509, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i64 %31, metadata !508, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 %26, metadata !492, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 %27, metadata !493, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %45, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %28, metadata !497, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32* %29, metadata !495, metadata !DIExpression()), !dbg !523
  %46 = add i64 %31, 1, !dbg !544
  call void @llvm.dbg.value(metadata i64 %46, metadata !508, metadata !DIExpression()), !dbg !523
  %47 = icmp ult i64 %31, %1, !dbg !537
  br i1 %47, label %30, label %217, !dbg !538, !llvm.loop !545

48:                                               ; preds = %30
  %49 = or i1 %36, %39, !dbg !553
  %50 = xor i1 %49, true, !dbg !554
  %51 = icmp eq i8 %34, 45, !dbg !555
  %52 = and i1 %51, %50, !dbg !554
  br i1 %52, label %53, label %60, !dbg !554

53:                                               ; preds = %48
  %54 = icmp ult i64 %31, 2, !dbg !559
  br i1 %54, label %44, label %55, !dbg !562

55:                                               ; preds = %53
  %56 = icmp ne i8 %32, 41, !dbg !563
  %57 = add i8 %32, -48, !dbg !564
  %58 = icmp ugt i8 %57, 9, !dbg !564
  %59 = and i1 %56, %58, !dbg !565
  br i1 %59, label %44, label %60, !dbg !565

60:                                               ; preds = %55, %48
  call void @llvm.dbg.value(metadata i8* %33, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %33, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %33, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %33, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %33, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %33, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %33, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8* %33, metadata !498, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8 %34, metadata !509, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i8 %34, metadata !499, metadata !DIExpression()), !dbg !523
  store i8 0, i8* %33, align 1, !dbg !566, !tbaa !333
  %61 = call fastcc i32 @parsearg(i8* %28), !dbg !567
  call void @llvm.dbg.value(metadata i32 %61, metadata !505, metadata !DIExpression()), !dbg !523
  switch i32 %61, label %236 [
    i32 4, label %62
    i32 6, label %62
    i32 5, label %66
    i32 1, label %86
  ], !dbg !568

62:                                               ; preds = %60, %60
  %63 = call i64 @strlen(i8* nonnull dereferenceable(1) %28), !dbg !569
  %64 = add i64 %63, 1, !dbg !570
  call void @llvm.dbg.value(metadata %struct.queue** %5, metadata !507, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %65 = call i32 @enqueue_copy(%struct.queue** nonnull %5, i8* %28, i64 %64) #18, !dbg !571
  br label %86, !dbg !572

66:                                               ; preds = %60
  %67 = icmp eq i32 %27, %26, !dbg !573
  br i1 %67, label %68, label %77, !dbg !574

68:                                               ; preds = %66
  %69 = shl nsw i32 %26, 1, !dbg !575
  call void @llvm.dbg.value(metadata i32 %69, metadata !492, metadata !DIExpression()), !dbg !523
  %70 = bitcast i32* %29 to i8*, !dbg !576
  %71 = sext i32 %69 to i64, !dbg !577
  %72 = shl nsw i64 %71, 2, !dbg !578
  %73 = call i8* @realloc(i8* %70, i64 %72), !dbg !579
  call void @llvm.dbg.value(metadata i8* %73, metadata !510, metadata !DIExpression()), !dbg !580
  %74 = icmp eq i8* %73, null, !dbg !581
  %75 = bitcast i8* %73 to i32*, !dbg !583
  %76 = select i1 %74, i32* %29, i32* %75, !dbg !583
  call void @llvm.dbg.value(metadata i32* %76, metadata !495, metadata !DIExpression()), !dbg !523
  br i1 %74, label %236, label %77

77:                                               ; preds = %68, %66
  %78 = phi i32* [ %76, %68 ], [ %29, %66 ], !dbg !584
  %79 = phi i32 [ %69, %68 ], [ %26, %66 ], !dbg !523
  call void @llvm.dbg.value(metadata i32 %79, metadata !492, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32* %78, metadata !495, metadata !DIExpression()), !dbg !523
  %80 = add nsw i32 %27, 1, !dbg !585
  call void @llvm.dbg.value(metadata i32 %80, metadata !493, metadata !DIExpression()), !dbg !523
  %81 = sext i32 %80 to i64, !dbg !586
  %82 = getelementptr inbounds i32, i32* %78, i64 %81, !dbg !586
  store i32 0, i32* %82, align 4, !dbg !587, !tbaa !295
  %83 = call i64 @strlen(i8* nonnull dereferenceable(1) %28), !dbg !588
  %84 = add i64 %83, 1, !dbg !589
  call void @llvm.dbg.value(metadata %struct.stack** %4, metadata !506, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %85 = call i32 @push_copy(%struct.stack** nonnull %4, i8* %28, i64 %84) #18, !dbg !590
  br label %86, !dbg !591

86:                                               ; preds = %60, %77, %62
  %87 = phi i32* [ %29, %60 ], [ %78, %77 ], [ %29, %62 ], !dbg !584
  %88 = phi i32 [ %27, %60 ], [ %80, %77 ], [ %27, %62 ], !dbg !523
  %89 = phi i32 [ %26, %60 ], [ %79, %77 ], [ %26, %62 ], !dbg !523
  call void @llvm.dbg.value(metadata i32 %89, metadata !492, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 %88, metadata !493, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32* %87, metadata !495, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 0, metadata !491, metadata !DIExpression()), !dbg !523
  %90 = sext i8 %34 to i32, !dbg !592
  switch i32 %90, label %236 [
    i32 40, label %97
    i32 41, label %94
    i32 44, label %91
    i32 43, label %159
    i32 45, label %159
    i32 42, label %191
    i32 47, label %191
    i32 0, label %217
  ], !dbg !593

91:                                               ; preds = %86
  %92 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !594, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %92, metadata !506, metadata !DIExpression()), !dbg !523
  %93 = icmp eq %struct.stack* %92, null, !dbg !595
  br i1 %93, label %213, label %142, !dbg !596

94:                                               ; preds = %86
  %95 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !597, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %95, metadata !506, metadata !DIExpression()), !dbg !523
  %96 = icmp eq %struct.stack* %95, null, !dbg !598
  br i1 %96, label %110, label %99, !dbg !599

97:                                               ; preds = %86
  call void @llvm.dbg.value(metadata %struct.stack** %4, metadata !506, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %98 = call i32 @push_copy(%struct.stack** nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i64 2) #18, !dbg !600
  br label %213, !dbg !601

99:                                               ; preds = %94, %106
  %100 = phi %struct.stack* [ %108, %106 ], [ %95, %94 ]
  %101 = call i8* @peek_top(%struct.stack* nonnull %100) #18, !dbg !602
  %102 = call i32 @strcmp(i8* nonnull dereferenceable(1) %101, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)), !dbg !605
  %103 = icmp eq i32 %102, 0, !dbg !606
  call void @llvm.dbg.value(metadata %struct.stack** %4, metadata !506, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %104 = call i8* @pop_copy(%struct.stack** nonnull %4) #18, !dbg !607
  br i1 %103, label %105, label %106, !dbg !608

105:                                              ; preds = %99
  call void @llvm.dbg.value(metadata i8* %104, metadata !504, metadata !DIExpression()), !dbg !523
  call void @free(i8* %104), !dbg !609
  call void @llvm.dbg.value(metadata i32 0, metadata !491, metadata !DIExpression()), !dbg !523
  br label %110, !dbg !611

106:                                              ; preds = %99
  call void @llvm.dbg.value(metadata %struct.queue** %5, metadata !507, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %107 = call i32 @enqueue(%struct.queue** nonnull %5, i8* %104) #18, !dbg !612
  %108 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !597, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %108, metadata !506, metadata !DIExpression()), !dbg !523
  %109 = icmp eq %struct.stack* %108, null, !dbg !598
  br i1 %109, label %110, label %99, !dbg !599, !llvm.loop !614

110:                                              ; preds = %106, %94, %105
  %111 = phi i32 [ 0, %105 ], [ 1, %94 ], [ 1, %106 ], !dbg !616
  call void @llvm.dbg.value(metadata i32 %111, metadata !491, metadata !DIExpression()), !dbg !523
  %112 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !617, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %112, metadata !506, metadata !DIExpression()), !dbg !523
  %113 = call i8* @peek_top(%struct.stack* %112) #18, !dbg !619
  %114 = icmp eq i8* %113, null, !dbg !620
  %115 = icmp slt i32 %88, 0, !dbg !621
  %116 = or i1 %115, %114, !dbg !622
  br i1 %116, label %213, label %117, !dbg !622

117:                                              ; preds = %110
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !515, metadata !DIExpression()), !dbg !623
  %118 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !624, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %118, metadata !506, metadata !DIExpression()), !dbg !523
  %119 = call i8* @peek_top(%struct.stack* %118) #18, !dbg !625
  %120 = load i8, i8* %119, align 1, !dbg !625, !tbaa !333
  %121 = zext i8 %120 to i64, !dbg !625
  %122 = icmp ugt i8 %120, 63, !dbg !626
  %123 = shl i64 1, %121, !dbg !626
  %124 = and i64 %123, 288440382872616961, !dbg !626
  %125 = icmp eq i64 %124, 0, !dbg !626
  %126 = or i1 %122, %125, !dbg !627
  br i1 %126, label %127, label %213, !dbg !628

127:                                              ; preds = %117
  %128 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !629, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %128, metadata !506, metadata !DIExpression()), !dbg !523
  %129 = call i8* @peek_top(%struct.stack* %128) #18, !dbg !630
  %130 = call fastcc i32 @parsearg(i8* %129), !dbg !631
  %131 = icmp eq i32 %130, 5, !dbg !632
  br i1 %131, label %132, label %213, !dbg !633

132:                                              ; preds = %127
  %133 = add nsw i32 %88, -1, !dbg !634
  call void @llvm.dbg.value(metadata i32 %133, metadata !493, metadata !DIExpression()), !dbg !523
  %134 = sext i32 %88 to i64, !dbg !635
  %135 = getelementptr inbounds i32, i32* %87, i64 %134, !dbg !635
  %136 = load i32, i32* %135, align 4, !dbg !635, !tbaa !295
  %137 = add nsw i32 %136, 1, !dbg !636
  %138 = call i8* @itoa(i32 %137, i8* nonnull %18, i64 16) #18, !dbg !637
  call void @llvm.dbg.value(metadata %struct.queue** %5, metadata !507, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %139 = call i32 @enqueue_copy(%struct.queue** nonnull %5, i8* %138, i64 16) #18, !dbg !638
  call void @llvm.dbg.value(metadata %struct.stack** %4, metadata !506, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %140 = call i8* @pop_copy(%struct.stack** nonnull %4) #18, !dbg !639
  call void @llvm.dbg.value(metadata %struct.queue** %5, metadata !507, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %141 = call i32 @enqueue(%struct.queue** nonnull %5, i8* %140) #18, !dbg !640
  br label %213, !dbg !641

142:                                              ; preds = %91, %154
  %143 = phi %struct.stack* [ %157, %154 ], [ %92, %91 ]
  %144 = call i8* @peek_top(%struct.stack* nonnull %143) #18, !dbg !642
  %145 = call i32 @strcmp(i8* nonnull dereferenceable(1) %144, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)), !dbg !645
  %146 = icmp eq i32 %145, 0, !dbg !646
  br i1 %146, label %147, label %154, !dbg !647

147:                                              ; preds = %142
  %148 = icmp sgt i32 %88, -1, !dbg !648
  br i1 %148, label %149, label %213, !dbg !651

149:                                              ; preds = %147
  %150 = sext i32 %88 to i64, !dbg !652
  %151 = getelementptr inbounds i32, i32* %87, i64 %150, !dbg !652
  %152 = load i32, i32* %151, align 4, !dbg !653, !tbaa !295
  %153 = add nsw i32 %152, 1, !dbg !653
  store i32 %153, i32* %151, align 4, !dbg !653, !tbaa !295
  br label %213, !dbg !652

154:                                              ; preds = %142
  call void @llvm.dbg.value(metadata %struct.stack** %4, metadata !506, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %155 = call i8* @pop_copy(%struct.stack** nonnull %4) #18, !dbg !654
  call void @llvm.dbg.value(metadata %struct.queue** %5, metadata !507, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %156 = call i32 @enqueue(%struct.queue** nonnull %5, i8* %155) #18, !dbg !656
  %157 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !594, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %157, metadata !506, metadata !DIExpression()), !dbg !523
  %158 = icmp eq %struct.stack* %157, null, !dbg !595
  br i1 %158, label %213, label %142, !dbg !596, !llvm.loop !657

159:                                              ; preds = %86, %86
  call void @llvm.dbg.value(metadata i8 undef, metadata !500, metadata !DIExpression()), !dbg !523
  store i8 %34, i8* %10, align 2, !dbg !659, !tbaa !333
  %160 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !660, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %160, metadata !506, metadata !DIExpression()), !dbg !523
  %161 = icmp eq %struct.stack* %160, null, !dbg !661
  br i1 %161, label %187, label %162, !dbg !662

162:                                              ; preds = %159, %182
  %163 = phi %struct.stack* [ %185, %182 ], [ %160, %159 ]
  %164 = call i8* @peek_top(%struct.stack* nonnull %163) #18, !dbg !663
  %165 = call i32 @strcmp(i8* nonnull dereferenceable(1) %164, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)), !dbg !666
  %166 = icmp eq i32 %165, 0, !dbg !667
  br i1 %166, label %182, label %167, !dbg !668

167:                                              ; preds = %162
  %168 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !669, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %168, metadata !506, metadata !DIExpression()), !dbg !523
  %169 = call i8* @peek_top(%struct.stack* %168) #18, !dbg !670
  %170 = call i32 @strcmp(i8* nonnull dereferenceable(1) %169, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)), !dbg !671
  %171 = icmp eq i32 %170, 0, !dbg !672
  br i1 %171, label %182, label %172, !dbg !673

172:                                              ; preds = %167
  %173 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !674, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %173, metadata !506, metadata !DIExpression()), !dbg !523
  %174 = call i8* @peek_top(%struct.stack* %173) #18, !dbg !675
  %175 = call i32 @strcmp(i8* nonnull dereferenceable(1) %174, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)), !dbg !676
  %176 = icmp eq i32 %175, 0, !dbg !677
  br i1 %176, label %182, label %177, !dbg !678

177:                                              ; preds = %172
  %178 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !679, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %178, metadata !506, metadata !DIExpression()), !dbg !523
  %179 = call i8* @peek_top(%struct.stack* %178) #18, !dbg !680
  %180 = call i32 @strcmp(i8* nonnull dereferenceable(1) %179, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)), !dbg !681
  %181 = icmp eq i32 %180, 0, !dbg !682
  br i1 %181, label %182, label %187, !dbg !683

182:                                              ; preds = %177, %172, %167, %162
  call void @llvm.dbg.value(metadata %struct.stack** %4, metadata !506, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %183 = call i8* @pop_copy(%struct.stack** nonnull %4) #18, !dbg !684
  call void @llvm.dbg.value(metadata %struct.queue** %5, metadata !507, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %184 = call i32 @enqueue(%struct.queue** nonnull %5, i8* %183) #18, !dbg !685
  %185 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !660, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %185, metadata !506, metadata !DIExpression()), !dbg !523
  %186 = icmp eq %struct.stack* %185, null, !dbg !661
  br i1 %186, label %187, label %162, !dbg !662, !llvm.loop !686

187:                                              ; preds = %177, %182, %159
  call void @llvm.dbg.value(metadata i16* %3, metadata !500, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %188 = call i64 @strlen(i8* nonnull %10), !dbg !688
  %189 = add i64 %188, 1, !dbg !689
  call void @llvm.dbg.value(metadata %struct.stack** %4, metadata !506, metadata !DIExpression(DW_OP_deref)), !dbg !523
  call void @llvm.dbg.value(metadata i16* %3, metadata !500, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %190 = call i32 @push_copy(%struct.stack** nonnull %4, i8* nonnull %10, i64 %189) #18, !dbg !690
  br label %213, !dbg !691

191:                                              ; preds = %86, %86
  call void @llvm.dbg.value(metadata i8 undef, metadata !500, metadata !DIExpression()), !dbg !523
  store i8 %34, i8* %10, align 2, !dbg !692, !tbaa !333
  %192 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !693, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %192, metadata !506, metadata !DIExpression()), !dbg !523
  %193 = icmp eq %struct.stack* %192, null, !dbg !694
  br i1 %193, label %209, label %194, !dbg !695

194:                                              ; preds = %191, %204
  %195 = phi %struct.stack* [ %207, %204 ], [ %192, %191 ]
  %196 = call i8* @peek_top(%struct.stack* nonnull %195) #18, !dbg !696
  %197 = call i32 @strcmp(i8* nonnull dereferenceable(1) %196, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)), !dbg !699
  %198 = icmp eq i32 %197, 0, !dbg !700
  br i1 %198, label %204, label %199, !dbg !701

199:                                              ; preds = %194
  %200 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !702, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %200, metadata !506, metadata !DIExpression()), !dbg !523
  %201 = call i8* @peek_top(%struct.stack* %200) #18, !dbg !703
  %202 = call i32 @strcmp(i8* nonnull dereferenceable(1) %201, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)), !dbg !704
  %203 = icmp eq i32 %202, 0, !dbg !705
  br i1 %203, label %204, label %209, !dbg !706

204:                                              ; preds = %199, %194
  call void @llvm.dbg.value(metadata %struct.stack** %4, metadata !506, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %205 = call i8* @pop_copy(%struct.stack** nonnull %4) #18, !dbg !707
  call void @llvm.dbg.value(metadata %struct.queue** %5, metadata !507, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %206 = call i32 @enqueue(%struct.queue** nonnull %5, i8* %205) #18, !dbg !708
  %207 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !693, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %207, metadata !506, metadata !DIExpression()), !dbg !523
  %208 = icmp eq %struct.stack* %207, null, !dbg !694
  br i1 %208, label %209, label %194, !dbg !695, !llvm.loop !709

209:                                              ; preds = %199, %204, %191
  call void @llvm.dbg.value(metadata i16* %3, metadata !500, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %210 = call i64 @strlen(i8* nonnull %10), !dbg !711
  %211 = add i64 %210, 1, !dbg !712
  call void @llvm.dbg.value(metadata %struct.stack** %4, metadata !506, metadata !DIExpression(DW_OP_deref)), !dbg !523
  call void @llvm.dbg.value(metadata i16* %3, metadata !500, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %212 = call i32 @push_copy(%struct.stack** nonnull %4, i8* nonnull %10, i64 %211) #18, !dbg !713
  br label %213, !dbg !714

213:                                              ; preds = %154, %91, %147, %149, %117, %132, %127, %110, %209, %187, %97
  %214 = phi i32 [ %88, %209 ], [ %88, %187 ], [ %88, %110 ], [ %88, %117 ], [ %133, %132 ], [ %88, %127 ], [ %88, %97 ], [ %88, %149 ], [ %88, %147 ], [ %88, %91 ], [ %88, %154 ], !dbg !523
  %215 = phi i32 [ 0, %209 ], [ 0, %187 ], [ %111, %110 ], [ %111, %117 ], [ %111, %132 ], [ %111, %127 ], [ 0, %97 ], [ 0, %149 ], [ 0, %147 ], [ 1, %91 ], [ 1, %154 ], !dbg !715
  call void @llvm.dbg.value(metadata i32 %215, metadata !491, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.value(metadata i32 %214, metadata !493, metadata !DIExpression()), !dbg !523
  %216 = icmp eq i32 %215, 0, !dbg !716
  call void @llvm.dbg.value(metadata i8* %33, metadata !498, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !523
  call void @llvm.dbg.value(metadata i8* %33, metadata !497, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !523
  br i1 %216, label %19, label %236, !dbg !718

217:                                              ; preds = %86, %19, %44, %15
  %218 = phi i32* [ %9, %15 ], [ %29, %44 ], [ %87, %19 ], [ %87, %86 ], !dbg !584
  call void @llvm.dbg.value(metadata i32* %218, metadata !495, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.label(metadata !520), !dbg !719
  %219 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !720, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %219, metadata !506, metadata !DIExpression()), !dbg !523
  %220 = icmp eq %struct.stack* %219, null, !dbg !721
  br i1 %220, label %238, label %221, !dbg !722

221:                                              ; preds = %217, %231
  %222 = phi %struct.stack* [ %234, %231 ], [ %219, %217 ]
  %223 = call i8* @peek_top(%struct.stack* nonnull %222) #18, !dbg !723
  %224 = call i32 @strcmp(i8* nonnull dereferenceable(1) %223, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)), !dbg !726
  %225 = icmp eq i32 %224, 0, !dbg !727
  br i1 %225, label %236, label %226, !dbg !728

226:                                              ; preds = %221
  %227 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !729, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %227, metadata !506, metadata !DIExpression()), !dbg !523
  %228 = call i8* @peek_top(%struct.stack* %227) #18, !dbg !730
  %229 = call i32 @strcmp(i8* nonnull dereferenceable(1) %228, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0)), !dbg !731
  %230 = icmp eq i32 %229, 0, !dbg !732
  br i1 %230, label %236, label %231, !dbg !733

231:                                              ; preds = %226
  call void @llvm.dbg.value(metadata %struct.stack** %4, metadata !506, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %232 = call i8* @pop_copy(%struct.stack** nonnull %4) #18, !dbg !734
  call void @llvm.dbg.value(metadata %struct.queue** %5, metadata !507, metadata !DIExpression(DW_OP_deref)), !dbg !523
  %233 = call i32 @enqueue(%struct.queue** nonnull %5, i8* %232) #18, !dbg !735
  %234 = load %struct.stack*, %struct.stack** %4, align 8, !dbg !720, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %234, metadata !506, metadata !DIExpression()), !dbg !523
  %235 = icmp eq %struct.stack* %234, null, !dbg !721
  br i1 %235, label %238, label %221, !dbg !722, !llvm.loop !736

236:                                              ; preds = %68, %213, %86, %60, %221, %226
  %237 = phi i32* [ %218, %226 ], [ %218, %221 ], [ %29, %60 ], [ %87, %86 ], [ %87, %213 ], [ %76, %68 ], !dbg !584
  call void @llvm.dbg.value(metadata i32* %237, metadata !495, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.label(metadata !521), !dbg !738
  call void @llvm.dbg.value(metadata %struct.queue** %5, metadata !507, metadata !DIExpression(DW_OP_deref)), !dbg !523
  call void @clear_queue(%struct.queue** nonnull %5) #18, !dbg !739
  call void @llvm.dbg.value(metadata %struct.stack** %4, metadata !506, metadata !DIExpression(DW_OP_deref)), !dbg !523
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %4) #18, !dbg !740
  br label %238, !dbg !740

238:                                              ; preds = %231, %217, %2, %236
  %239 = phi i32* [ %9, %2 ], [ %237, %236 ], [ %218, %217 ], [ %218, %231 ], !dbg !584
  call void @llvm.dbg.value(metadata i32* %239, metadata !495, metadata !DIExpression()), !dbg !523
  call void @llvm.dbg.label(metadata !522), !dbg !741
  call void @free(i8* %7), !dbg !742
  %240 = bitcast i32* %239 to i8*, !dbg !743
  call void @free(i8* %240), !dbg !744
  %241 = load %struct.queue*, %struct.queue** %5, align 8, !dbg !745, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.queue* %241, metadata !507, metadata !DIExpression()), !dbg !523
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #18, !dbg !746
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #18, !dbg !746
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10) #18, !dbg !746
  ret %struct.queue* %241, !dbg !746
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @parsearg(i8* %0) unnamed_addr #3 !dbg !747 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !751, metadata !DIExpression()), !dbg !758
  %2 = icmp eq i8* %0, null, !dbg !759
  br i1 %2, label %80, label %3, !dbg !761

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !756, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 0, metadata !755, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 0, metadata !754, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 0, metadata !753, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 0, metadata !752, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i8* %0, metadata !751, metadata !DIExpression()), !dbg !758
  %4 = load i8, i8* %0, align 1, !dbg !762, !tbaa !333
  %5 = icmp eq i8 %4, 0, !dbg !763
  br i1 %5, label %38, label %6, !dbg !764

6:                                                ; preds = %3, %29
  %7 = phi i8 [ %36, %29 ], [ %4, %3 ]
  %8 = phi i32 [ %34, %29 ], [ 0, %3 ]
  %9 = phi i32 [ %33, %29 ], [ 0, %3 ]
  %10 = phi i32 [ %32, %29 ], [ 0, %3 ]
  %11 = phi i32 [ %31, %29 ], [ 0, %3 ]
  %12 = phi i32 [ %30, %29 ], [ 0, %3 ]
  %13 = phi i8* [ %35, %29 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !756, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %9, metadata !755, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %10, metadata !754, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %11, metadata !753, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %12, metadata !752, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i8* %13, metadata !751, metadata !DIExpression()), !dbg !758
  %14 = add i8 %7, -48, !dbg !765
  %15 = icmp ult i8 %14, 10, !dbg !765
  br i1 %15, label %16, label %18, !dbg !765

16:                                               ; preds = %6
  %17 = add nsw i32 %12, 1, !dbg !768
  call void @llvm.dbg.value(metadata i32 %17, metadata !752, metadata !DIExpression()), !dbg !758
  br label %29, !dbg !770

18:                                               ; preds = %6
  switch i8 %7, label %27 [
    i8 45, label %19
    i8 46, label %22
    i8 34, label %25
  ], !dbg !771

19:                                               ; preds = %18
  %20 = add nsw i32 %12, 1, !dbg !772
  call void @llvm.dbg.value(metadata i32 %20, metadata !752, metadata !DIExpression()), !dbg !758
  %21 = add nsw i32 %10, 1, !dbg !775
  call void @llvm.dbg.value(metadata i32 %21, metadata !754, metadata !DIExpression()), !dbg !758
  br label %29, !dbg !776

22:                                               ; preds = %18
  %23 = add nsw i32 %12, 1, !dbg !777
  call void @llvm.dbg.value(metadata i32 %23, metadata !752, metadata !DIExpression()), !dbg !758
  %24 = add nsw i32 %11, 1, !dbg !780
  call void @llvm.dbg.value(metadata i32 %24, metadata !753, metadata !DIExpression()), !dbg !758
  br label %29, !dbg !781

25:                                               ; preds = %18
  %26 = add nsw i32 %9, 1, !dbg !782
  call void @llvm.dbg.value(metadata i32 %26, metadata !755, metadata !DIExpression()), !dbg !758
  br label %29, !dbg !785

27:                                               ; preds = %18
  %28 = add nsw i32 %8, 1, !dbg !786
  call void @llvm.dbg.value(metadata i32 %28, metadata !756, metadata !DIExpression()), !dbg !758
  br label %29

29:                                               ; preds = %19, %25, %27, %22, %16
  %30 = phi i32 [ %17, %16 ], [ %20, %19 ], [ %23, %22 ], [ %12, %25 ], [ %12, %27 ], !dbg !758
  %31 = phi i32 [ %11, %16 ], [ %11, %19 ], [ %24, %22 ], [ %11, %25 ], [ %11, %27 ], !dbg !758
  %32 = phi i32 [ %10, %16 ], [ %21, %19 ], [ %10, %22 ], [ %10, %25 ], [ %10, %27 ], !dbg !758
  %33 = phi i32 [ %9, %16 ], [ %9, %19 ], [ %9, %22 ], [ %26, %25 ], [ %9, %27 ], !dbg !758
  %34 = phi i32 [ %8, %16 ], [ %8, %19 ], [ %8, %22 ], [ %8, %25 ], [ %28, %27 ], !dbg !758
  call void @llvm.dbg.value(metadata i32 %34, metadata !756, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %33, metadata !755, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %32, metadata !754, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %31, metadata !753, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %30, metadata !752, metadata !DIExpression()), !dbg !758
  %35 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !788
  call void @llvm.dbg.value(metadata i8* %35, metadata !751, metadata !DIExpression()), !dbg !758
  %36 = load i8, i8* %35, align 1, !dbg !762, !tbaa !333
  %37 = icmp eq i8 %36, 0, !dbg !763
  br i1 %37, label %38, label %6, !dbg !764, !llvm.loop !789

38:                                               ; preds = %29, %3
  %39 = phi i32 [ 0, %3 ], [ %30, %29 ], !dbg !758
  %40 = phi i32 [ 0, %3 ], [ %31, %29 ], !dbg !791
  %41 = phi i32 [ 0, %3 ], [ %32, %29 ], !dbg !792
  %42 = phi i32 [ 0, %3 ], [ %33, %29 ], !dbg !793
  %43 = phi i32 [ 0, %3 ], [ %34, %29 ], !dbg !794
  call void @llvm.dbg.value(metadata i32 %39, metadata !752, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %40, metadata !753, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %41, metadata !754, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %42, metadata !755, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i32 %43, metadata !756, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.value(metadata i8* %0, metadata !751, metadata !DIExpression()), !dbg !758
  switch i32 %42, label %48 [
    i32 0, label %49
    i32 2, label %44
  ], !dbg !795

44:                                               ; preds = %38
  %45 = getelementptr inbounds i8, i8* %0, i64 -1, !dbg !796
  call void @llvm.dbg.value(metadata i8* %45, metadata !751, metadata !DIExpression()), !dbg !758
  %46 = load i8, i8* %45, align 1, !dbg !800, !tbaa !333
  %47 = icmp eq i8 %46, 34, !dbg !801
  br i1 %47, label %80, label %48, !dbg !802

48:                                               ; preds = %38, %44
  br label %80, !dbg !803

49:                                               ; preds = %38
  %50 = icmp eq i32 %43, 0, !dbg !804
  br i1 %50, label %62, label %51, !dbg !806

51:                                               ; preds = %49
  %52 = icmp sgt i32 %40, 1, !dbg !807
  %53 = icmp sgt i32 %41, 1, !dbg !810
  %54 = or i1 %52, %53, !dbg !811
  br i1 %54, label %80, label %55, !dbg !811

55:                                               ; preds = %51
  %56 = call i32 @valid_cell_id(i8* nonnull %0) #18, !dbg !812
  %57 = icmp eq i32 %56, 0, !dbg !814
  br i1 %57, label %80, label %58, !dbg !815

58:                                               ; preds = %55
  %59 = call fastcc %struct.operator_t* @get_op(i8* nonnull %0), !dbg !816
  %60 = icmp eq %struct.operator_t* %59, null, !dbg !818
  %61 = select i1 %60, i32 2, i32 5, !dbg !819
  br label %80, !dbg !819

62:                                               ; preds = %49
  %63 = icmp eq i32 %39, 0, !dbg !820
  br i1 %63, label %80, label %64, !dbg !822

64:                                               ; preds = %62
  %65 = icmp sgt i32 %40, 1, !dbg !823
  %66 = icmp sgt i32 %41, 1, !dbg !826
  %67 = or i1 %65, %66, !dbg !827
  br i1 %67, label %80, label %68, !dbg !827

68:                                               ; preds = %64
  %69 = icmp ne i32 %40, 0, !dbg !828
  %70 = icmp eq i32 %39, 1, !dbg !830
  %71 = and i1 %70, %69, !dbg !831
  br i1 %71, label %80, label %72, !dbg !831

72:                                               ; preds = %68
  %73 = icmp ne i32 %41, 0, !dbg !832
  %74 = and i1 %69, %73, !dbg !833
  %75 = icmp eq i32 %39, 2, !dbg !834
  %76 = and i1 %75, %74, !dbg !833
  br i1 %76, label %80, label %77, !dbg !833

77:                                               ; preds = %72
  %78 = and i1 %70, %73, !dbg !835
  %79 = select i1 %78, i32 5, i32 4, !dbg !837
  br label %80, !dbg !837

80:                                               ; preds = %48, %44, %51, %55, %58, %64, %72, %68, %77, %62, %1
  %81 = phi i32 [ 1, %1 ], [ 2, %48 ], [ 3, %44 ], [ 2, %51 ], [ 6, %55 ], [ %61, %58 ], [ 2, %64 ], [ 2, %72 ], [ 2, %68 ], [ %79, %77 ], [ 1, %62 ], !dbg !758
  ret i32 %81, !dbg !838
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.operator_t* @get_op(i8* readonly %0) unnamed_addr #3 !dbg !839 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !843, metadata !DIExpression()), !dbg !848
  %2 = icmp eq i8* %0, null, !dbg !849
  br i1 %2, label %40, label %3, !dbg !851

3:                                                ; preds = %1
  %4 = call i64 @strlen(i8* nonnull %0), !dbg !852
  %5 = add i64 %4, 1, !dbg !853
  %6 = call i8* @malloc(i64 %5), !dbg !854
  call void @llvm.dbg.value(metadata i8* %6, metadata !844, metadata !DIExpression()), !dbg !848
  %7 = call i8* @strcpy(i8* nonnull dereferenceable(1) %6, i8* nonnull %0), !dbg !855
  %8 = call i64 @strlen(i8* nonnull dereferenceable(1) %6), !dbg !856
  call void @llvm.dbg.value(metadata i64 %8, metadata !846, metadata !DIExpression()), !dbg !848
  call void @llvm.dbg.value(metadata i64 0, metadata !845, metadata !DIExpression()), !dbg !848
  %9 = icmp eq i64 %8, 0, !dbg !857
  br i1 %9, label %10, label %13, !dbg !860

10:                                               ; preds = %13, %3
  call void @llvm.dbg.value(metadata %struct.operator_t* getelementptr inbounds ([19 x %struct.operator_t], [19 x %struct.operator_t]* @operators, i64 0, i64 0), metadata !847, metadata !DIExpression()), !dbg !848
  %11 = load i8*, i8** getelementptr inbounds ([19 x %struct.operator_t], [19 x %struct.operator_t]* @operators, i64 0, i64 0, i32 0), align 16, !dbg !861, !tbaa !864
  %12 = icmp eq i8* %11, null, !dbg !866
  br i1 %12, label %34, label %22, !dbg !867

13:                                               ; preds = %3, %13
  %14 = phi i64 [ %20, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i64 %14, metadata !845, metadata !DIExpression()), !dbg !848
  %15 = getelementptr inbounds i8, i8* %6, i64 %14, !dbg !868
  %16 = load i8, i8* %15, align 1, !dbg !868, !tbaa !333
  %17 = sext i8 %16 to i32, !dbg !868
  %18 = call i32 @toupper(i32 %17) #19, !dbg !869
  %19 = trunc i32 %18 to i8, !dbg !869
  store i8 %19, i8* %15, align 1, !dbg !870, !tbaa !333
  %20 = add nuw i64 %14, 1, !dbg !871
  call void @llvm.dbg.value(metadata i64 %20, metadata !845, metadata !DIExpression()), !dbg !848
  %21 = icmp eq i64 %20, %8, !dbg !857
  br i1 %21, label %10, label %13, !dbg !860, !llvm.loop !872

22:                                               ; preds = %10, %27
  %23 = phi i8* [ %29, %27 ], [ %11, %10 ]
  %24 = phi i8** [ %28, %27 ], [ getelementptr inbounds ([19 x %struct.operator_t], [19 x %struct.operator_t]* @operators, i64 0, i64 0, i32 0), %10 ]
  call void @llvm.dbg.value(metadata i8** %24, metadata !847, metadata !DIExpression()), !dbg !848
  %25 = call i32 @strcmp(i8* nonnull %23, i8* nonnull dereferenceable(1) %6), !dbg !874
  %26 = icmp eq i32 %25, 0, !dbg !877
  br i1 %26, label %31, label %27, !dbg !878

27:                                               ; preds = %22
  %28 = getelementptr inbounds i8*, i8** %24, i64 2, !dbg !879
  call void @llvm.dbg.value(metadata i8** %28, metadata !847, metadata !DIExpression()), !dbg !848
  %29 = load i8*, i8** %28, align 8, !dbg !861, !tbaa !864
  %30 = icmp eq i8* %29, null, !dbg !866
  br i1 %30, label %31, label %22, !dbg !867, !llvm.loop !880

31:                                               ; preds = %27, %22
  %32 = phi i8** [ %24, %22 ], [ %28, %27 ]
  %33 = bitcast i8** %32 to %struct.operator_t*
  br label %34, !dbg !882

34:                                               ; preds = %31, %10
  %35 = phi %struct.operator_t* [ getelementptr inbounds ([19 x %struct.operator_t], [19 x %struct.operator_t]* @operators, i64 0, i64 0), %10 ], [ %33, %31 ], !dbg !883
  %36 = phi i8** [ getelementptr inbounds ([19 x %struct.operator_t], [19 x %struct.operator_t]* @operators, i64 0, i64 0, i32 0), %10 ], [ %32, %31 ], !dbg !861
  call void @llvm.dbg.value(metadata %struct.operator_t* %35, metadata !847, metadata !DIExpression()), !dbg !848
  call void @llvm.dbg.value(metadata %struct.operator_t* %35, metadata !847, metadata !DIExpression()), !dbg !848
  call void @free(i8* %6), !dbg !882
  %37 = load i8*, i8** %36, align 8, !dbg !884, !tbaa !864
  %38 = icmp eq i8* %37, null, !dbg !886
  %39 = select i1 %38, %struct.operator_t* null, %struct.operator_t* %35, !dbg !887
  br label %40

40:                                               ; preds = %1, %34
  %41 = phi %struct.operator_t* [ %39, %34 ], [ null, %1 ], !dbg !848
  ret %struct.operator_t* %41, !dbg !888
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @eval_function(%struct.operator_t* readonly %0, %struct.stack** %1, i8* %2) unnamed_addr #3 !dbg !889 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.stack*, align 8
  call void @llvm.dbg.value(metadata %struct.operator_t* %0, metadata !893, metadata !DIExpression()), !dbg !909
  call void @llvm.dbg.value(metadata %struct.stack** %1, metadata !894, metadata !DIExpression()), !dbg !909
  call void @llvm.dbg.value(metadata i8* %2, metadata !895, metadata !DIExpression()), !dbg !909
  call void @llvm.dbg.value(metadata i64 512, metadata !896, metadata !DIExpression()), !dbg !909
  %6 = icmp eq %struct.operator_t* %0, null, !dbg !910
  %7 = icmp eq i8* %2, null, !dbg !912
  %8 = or i1 %6, %7, !dbg !913
  br i1 %8, label %56, label %9, !dbg !913

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !897, metadata !DIExpression()), !dbg !909
  %10 = getelementptr inbounds %struct.operator_t, %struct.operator_t* %0, i64 0, i32 0, !dbg !914
  %11 = load i8*, i8** %10, align 8, !dbg !914, !tbaa !864
  call void @llvm.dbg.value(metadata i8* %11, metadata !899, metadata !DIExpression()), !dbg !909
  call void @llvm.dbg.value(metadata i64 0, metadata !901, metadata !DIExpression()), !dbg !909
  %12 = bitcast i32* %4 to i8*, !dbg !915
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #18, !dbg !915
  call void @llvm.dbg.value(metadata i32 0, metadata !902, metadata !DIExpression()), !dbg !909
  store i32 0, i32* %4, align 4, !dbg !916, !tbaa !295
  %13 = bitcast %struct.stack** %5 to i8*, !dbg !917
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #18, !dbg !917
  call void @llvm.dbg.value(metadata %struct.stack* null, metadata !904, metadata !DIExpression()), !dbg !909
  store %struct.stack* null, %struct.stack** %5, align 8, !dbg !918, !tbaa !205
  %14 = call fastcc i32 @is_arg_arithmetic(i8* %11), !dbg !919
  %15 = icmp eq i32 %14, 0, !dbg !919
  br i1 %15, label %16, label %24, !dbg !920

16:                                               ; preds = %9
  %17 = call i8* @pop_copy(%struct.stack** %1) #18, !dbg !921
  call void @llvm.dbg.value(metadata i8* %17, metadata !905, metadata !DIExpression()), !dbg !922
  %18 = icmp eq i8* %17, null, !dbg !923
  br i1 %18, label %21, label %19, !dbg !925

19:                                               ; preds = %16
  %20 = call i64 @strtol(i8* nocapture nonnull %17, i8** null, i32 10), !dbg !926
  call void @llvm.dbg.value(metadata i64 %20, metadata !901, metadata !DIExpression()), !dbg !909
  call void @free(i8* %17), !dbg !927
  br label %21, !dbg !928

21:                                               ; preds = %16, %19
  %22 = phi i64 [ %20, %19 ], [ 0, %16 ], !dbg !909
  %23 = phi i1 [ true, %19 ], [ false, %16 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !901, metadata !DIExpression()), !dbg !909
  br i1 %23, label %24, label %53

24:                                               ; preds = %21, %9
  %25 = phi i64 [ %22, %21 ], [ 2, %9 ], !dbg !909
  call void @llvm.dbg.value(metadata i64 %25, metadata !901, metadata !DIExpression()), !dbg !909
  call void @llvm.dbg.value(metadata i64 0, metadata !900, metadata !DIExpression()), !dbg !909
  %26 = icmp eq i64 %25, 0, !dbg !929
  br i1 %26, label %44, label %27, !dbg !932

27:                                               ; preds = %24, %41
  %28 = phi i64 [ %42, %41 ], [ 0, %24 ]
  call void @llvm.dbg.value(metadata i64 %28, metadata !900, metadata !DIExpression()), !dbg !909
  %29 = call i8* @pop_copy(%struct.stack** %1) #18, !dbg !933
  call void @llvm.dbg.value(metadata i8* %29, metadata !898, metadata !DIExpression()), !dbg !909
  %30 = call fastcc i32 @parsearg(i8* %29), !dbg !935
  %31 = icmp eq i32 %30, 5, !dbg !937
  br i1 %31, label %32, label %38, !dbg !938

32:                                               ; preds = %27
  %33 = call fastcc %struct.operator_t* @get_op(i8* %29), !dbg !939
  call void @llvm.dbg.value(metadata %struct.operator_t* %33, metadata !903, metadata !DIExpression()), !dbg !909
  call void @free(i8* %29), !dbg !941
  %34 = call fastcc i32 @eval_function(%struct.operator_t* %33, %struct.stack** %1, i8* %2), !dbg !942
  %35 = icmp eq i32 %34, 0, !dbg !944
  br i1 %35, label %36, label %53, !dbg !945

36:                                               ; preds = %32
  call void @llvm.dbg.value(metadata %struct.stack** %5, metadata !904, metadata !DIExpression(DW_OP_deref)), !dbg !909
  %37 = call i32 @push_copy(%struct.stack** nonnull %5, i8* %2, i64 512) #18, !dbg !946
  br label %41, !dbg !947

38:                                               ; preds = %27
  call void @llvm.dbg.value(metadata %struct.stack** %5, metadata !904, metadata !DIExpression(DW_OP_deref)), !dbg !909
  %39 = call i32 @push(%struct.stack** nonnull %5, i8* %29) #18, !dbg !948
  %40 = icmp eq i32 %39, 0, !dbg !950
  br i1 %40, label %41, label %53, !dbg !951

41:                                               ; preds = %38, %36
  %42 = add nuw i64 %28, 1, !dbg !952
  call void @llvm.dbg.value(metadata i64 %42, metadata !900, metadata !DIExpression()), !dbg !909
  %43 = icmp eq i64 %42, %25, !dbg !929
  br i1 %43, label %44, label %27, !dbg !932, !llvm.loop !953

44:                                               ; preds = %41, %24
  %45 = getelementptr inbounds %struct.operator_t, %struct.operator_t* %0, i64 0, i32 1, !dbg !955
  %46 = load double (%struct.stack**, i32*)*, double (%struct.stack**, i32*)** %45, align 8, !dbg !955, !tbaa !956
  call void @llvm.dbg.value(metadata i32* %4, metadata !902, metadata !DIExpression(DW_OP_deref)), !dbg !909
  call void @llvm.dbg.value(metadata %struct.stack** %5, metadata !904, metadata !DIExpression(DW_OP_deref)), !dbg !909
  %47 = call double %46(%struct.stack** nonnull %5, i32* nonnull %4) #18, !dbg !957
  call void @llvm.dbg.value(metadata double %47, metadata !897, metadata !DIExpression()), !dbg !909
  %48 = load i32, i32* %4, align 4, !dbg !958, !tbaa !295
  call void @llvm.dbg.value(metadata i32 %48, metadata !902, metadata !DIExpression()), !dbg !909
  %49 = icmp eq i32 %48, 0, !dbg !958
  br i1 %49, label %50, label %53, !dbg !960

50:                                               ; preds = %44
  %51 = call i8* @ftoa(double %47, i8* %2, i64 512) #18, !dbg !961
  %52 = icmp eq i8* %51, null, !dbg !963
  br i1 %52, label %53, label %54, !dbg !964

53:                                               ; preds = %38, %32, %21, %44, %50
  call void @llvm.dbg.label(metadata !908), !dbg !965
  call void @llvm.dbg.value(metadata %struct.stack** %5, metadata !904, metadata !DIExpression(DW_OP_deref)), !dbg !909
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %5) #18, !dbg !966
  br label %54, !dbg !967

54:                                               ; preds = %50, %53
  %55 = phi i32 [ -1, %53 ], [ 0, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #18, !dbg !968
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #18, !dbg !968
  br label %56

56:                                               ; preds = %3, %54
  %57 = phi i32 [ %55, %54 ], [ -1, %3 ], !dbg !909
  ret i32 %57, !dbg !968
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare !dbg !26 dso_local void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind readonly uwtable
define internal fastcc i32 @is_arg_arithmetic(i8* nocapture readonly %0) unnamed_addr #8 !dbg !969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !971, metadata !DIExpression()), !dbg !972
  %2 = call i32 @bcmp(i8* nonnull dereferenceable(2) %0, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 2), !dbg !973
  %3 = icmp eq i32 %2, 0, !dbg !974
  br i1 %3, label %14, label %4, !dbg !975

4:                                                ; preds = %1
  %5 = call i32 @bcmp(i8* nonnull dereferenceable(2) %0, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0), i64 2), !dbg !976
  %6 = icmp eq i32 %5, 0, !dbg !977
  br i1 %6, label %14, label %7, !dbg !978

7:                                                ; preds = %4
  %8 = call i32 @bcmp(i8* nonnull dereferenceable(2) %0, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i64 2), !dbg !979
  %9 = icmp eq i32 %8, 0, !dbg !980
  br i1 %9, label %14, label %10, !dbg !981

10:                                               ; preds = %7
  %11 = call i32 @bcmp(i8* nonnull dereferenceable(2) %0, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 2), !dbg !982
  %12 = icmp eq i32 %11, 0, !dbg !983
  %13 = zext i1 %12 to i32, !dbg !981
  br label %14, !dbg !981

14:                                               ; preds = %10, %7, %4, %1
  %15 = phi i32 [ 1, %7 ], [ 1, %4 ], [ 1, %1 ], [ %13, %10 ]
  ret i32 %15, !dbg !984
}

; Function Attrs: nofree nounwind
declare dso_local i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare dso_local i8* @strcpy(i8* noalias returned, i8* noalias nocapture readonly) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare dso_local i32 @toupper(i32) local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #10

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare dso_local noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare dso_local double @pow(double, double) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @set_cell(i8* %0, i8* readonly %1, i64 %2) local_unnamed_addr #3 !dbg !985 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !989, metadata !DIExpression()), !dbg !993
  call void @llvm.dbg.value(metadata i8* %1, metadata !990, metadata !DIExpression()), !dbg !993
  call void @llvm.dbg.value(metadata i64 %2, metadata !991, metadata !DIExpression()), !dbg !993
  %4 = icmp eq i8* %1, null, !dbg !994
  br i1 %4, label %44, label %5, !dbg !996

5:                                                ; preds = %3
  %6 = load i8, i8* %1, align 1, !dbg !997
  %7 = icmp eq i8 %6, 0, !dbg !998
  br i1 %7, label %44, label %8, !dbg !999

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %1), !dbg !1000
  %10 = icmp ult i64 %9, %2, !dbg !1001
  br i1 %10, label %11, label %44, !dbg !1002

11:                                               ; preds = %8
  %12 = call fastcc %struct.cell* @get_cell(i8* %0), !dbg !1003
  call void @llvm.dbg.value(metadata %struct.cell* %12, metadata !992, metadata !DIExpression()), !dbg !993
  %13 = icmp eq %struct.cell* %12, null, !dbg !1004
  br i1 %13, label %44, label %14, !dbg !1006

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.cell, %struct.cell* %12, i64 0, i32 1, !dbg !1007
  %16 = load i32, i32* %15, align 4, !dbg !1007, !tbaa !273
  %17 = icmp eq i32 %16, 0, !dbg !1009
  br i1 %17, label %22, label %18, !dbg !1010

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.cell, %struct.cell* %12, i64 0, i32 2, !dbg !1011
  %20 = load i8*, i8** %19, align 8, !dbg !1011, !tbaa !281
  call void @free(i8* %20), !dbg !1013
  %21 = bitcast i32* %15 to i8*, !dbg !1014
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(20) %21, i8 0, i64 20, i1 false), !dbg !1015
  br label %22, !dbg !1014

22:                                               ; preds = %14, %18
  %23 = call i64 @strlen(i8* nonnull %1), !dbg !1016
  %24 = add i64 %23, 1, !dbg !1017
  %25 = call i8* @malloc(i64 %24), !dbg !1018
  %26 = getelementptr inbounds %struct.cell, %struct.cell* %12, i64 0, i32 2, !dbg !1019
  store i8* %25, i8** %26, align 8, !dbg !1020, !tbaa !281
  %27 = icmp eq i8* %25, null, !dbg !1021
  br i1 %27, label %44, label %28, !dbg !1023

28:                                               ; preds = %22
  %29 = call i8* @strcpy(i8* nonnull %25, i8* nonnull %1), !dbg !1024
  %30 = call i64 @strlen(i8* nonnull %1), !dbg !1025
  %31 = icmp ugt i64 %30, 1, !dbg !1027
  br i1 %31, label %32, label %39, !dbg !1028

32:                                               ; preds = %28
  %33 = load i8, i8* %1, align 1, !dbg !1029, !tbaa !333
  %34 = icmp eq i8 %33, 61, !dbg !1030
  br i1 %34, label %35, label %39, !dbg !1031

35:                                               ; preds = %32
  %36 = load i8*, i8** %26, align 8, !dbg !1032, !tbaa !281
  %37 = getelementptr inbounds i8, i8* %36, i64 1, !dbg !1034
  %38 = getelementptr inbounds %struct.cell, %struct.cell* %12, i64 0, i32 3, !dbg !1035
  store i8* %37, i8** %38, align 8, !dbg !1036, !tbaa !284
  store i32 7, i32* %15, align 4, !dbg !1037, !tbaa !273
  br label %44, !dbg !1038

39:                                               ; preds = %32, %28
  %40 = load i8*, i8** %26, align 8, !dbg !1039, !tbaa !281
  %41 = call fastcc i32 @parsearg(i8* %40), !dbg !1041
  %42 = icmp eq i32 %41, 4, !dbg !1042
  %43 = select i1 %42, i32 4, i32 2, !dbg !1044
  store i32 %43, i32* %15, align 4, !dbg !1045
  ret i32 0, !dbg !1044

44:                                               ; preds = %11, %22, %35, %3, %5, %8
  %45 = phi i32 [ -1, %8 ], [ -1, %5 ], [ -1, %3 ], [ -1, %11 ], [ -1, %22 ], [ 0, %35 ], !dbg !993
  ret i32 %45, !dbg !1046
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: nounwind uwtable
define dso_local i32 @clear_cell(i8* %0) local_unnamed_addr #3 !dbg !1047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1049, metadata !DIExpression()), !dbg !1051
  %2 = call fastcc %struct.cell* @get_cell(i8* %0), !dbg !1052
  call void @llvm.dbg.value(metadata %struct.cell* %2, metadata !1050, metadata !DIExpression()), !dbg !1051
  %3 = icmp eq %struct.cell* %2, null, !dbg !1053
  br i1 %3, label %12, label %4, !dbg !1055

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.cell, %struct.cell* %2, i64 0, i32 1, !dbg !1056
  %6 = load i32, i32* %5, align 4, !dbg !1056, !tbaa !273
  %7 = icmp eq i32 %6, 0, !dbg !1058
  br i1 %7, label %12, label %8, !dbg !1059

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.cell, %struct.cell* %2, i64 0, i32 2, !dbg !1060
  %10 = load i8*, i8** %9, align 8, !dbg !1060, !tbaa !281
  call void @free(i8* %10), !dbg !1062
  %11 = bitcast i32* %5 to i8*, !dbg !1063
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(20) %11, i8 0, i64 20, i1 false), !dbg !1064
  br label %12, !dbg !1063

12:                                               ; preds = %8, %4, %1
  %13 = phi i32 [ -1, %1 ], [ 0, %4 ], [ 0, %8 ], !dbg !1051
  ret i32 %13, !dbg !1065
}

; Function Attrs: nounwind uwtable
define dso_local void @print_assigned_cells() local_unnamed_addr #3 !dbg !1066 {
  %1 = alloca [3 x i8], align 1
  %2 = alloca [4 x i8], align 1
  %3 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 0, i64 0, !dbg !1079
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %3) #18, !dbg !1079
  call void @llvm.dbg.declare(metadata [3 x i8]* %1, metadata !1070, metadata !DIExpression()), !dbg !1080
  %4 = getelementptr inbounds [4 x i8], [4 x i8]* %2, i64 0, i64 0, !dbg !1081
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #18, !dbg !1081
  call void @llvm.dbg.declare(metadata [4 x i8]* %2, metadata !1071, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.value(metadata i64 0, metadata !1075, metadata !DIExpression()), !dbg !1083
  %5 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 0, i64 2, !dbg !1084
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 0, i64 1, !dbg !1084
  %7 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 0, i64 1, !dbg !1084
  br label %8, !dbg !1093

8:                                                ; preds = %44, %0
  %9 = phi i64 [ 0, %0 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata i64 %9, metadata !1075, metadata !DIExpression()), !dbg !1083
  call void @llvm.dbg.value(metadata i64 0, metadata !1076, metadata !DIExpression()), !dbg !1083
  br label %10, !dbg !1094

10:                                               ; preds = %41, %8
  %11 = phi i64 [ 0, %8 ], [ %42, %41 ]
  call void @llvm.dbg.value(metadata i64 %11, metadata !1076, metadata !DIExpression()), !dbg !1083
  %12 = load %struct.cell**, %struct.cell*** @g_sheet, align 8, !dbg !1095, !tbaa !205
  %13 = getelementptr inbounds %struct.cell*, %struct.cell** %12, i64 %9, !dbg !1095
  %14 = load %struct.cell*, %struct.cell** %13, align 8, !dbg !1095, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.cell* undef, metadata !1078, metadata !DIExpression()), !dbg !1083
  %15 = getelementptr inbounds %struct.cell, %struct.cell* %14, i64 %11, i32 1, !dbg !1096
  %16 = load i32, i32* %15, align 4, !dbg !1096, !tbaa !273
  %17 = icmp eq i32 %16, 0, !dbg !1097
  br i1 %17, label %41, label %18, !dbg !1098

18:                                               ; preds = %10
  call void @llvm.dbg.value(metadata %struct.cell* undef, metadata !1078, metadata !DIExpression()), !dbg !1083
  %19 = getelementptr inbounds %struct.cell, %struct.cell* %14, i64 %11, i32 0, !dbg !1099
  %20 = load i32, i32* %19, align 8, !dbg !1099, !tbaa !239
  call void @llvm.dbg.value(metadata i32 %20, metadata !1077, metadata !DIExpression()), !dbg !1083
  %21 = urem i32 %20, 100, !dbg !1100
  %22 = udiv i32 %20, 100, !dbg !1101
  %23 = call i8* @itoa(i32 %21, i8* nonnull %4, i64 4) #18, !dbg !1102
  store i8 0, i8* %5, align 1, !dbg !1103, !tbaa !333
  %24 = icmp ult i32 %20, 2600, !dbg !1104
  br i1 %24, label %32, label %25, !dbg !1105

25:                                               ; preds = %18
  %26 = udiv i32 %20, 2600, !dbg !1106
  %27 = udiv i32 %20, 100, !dbg !1107
  %28 = urem i32 %27, 26, !dbg !1108
  %29 = trunc i32 %28 to i8, !dbg !1105
  %30 = add nuw nsw i8 %29, 65, !dbg !1105
  store i8 %30, i8* %6, align 1, !dbg !1109, !tbaa !333
  %31 = add nsw i32 %26, -1, !dbg !1110
  br label %33, !dbg !1111

32:                                               ; preds = %18
  store i8 0, i8* %7, align 1, !dbg !1109, !tbaa !333
  br label %33, !dbg !1111

33:                                               ; preds = %25, %32
  %34 = phi i32 [ %22, %32 ], [ %31, %25 ]
  %35 = urem i32 %34, 26, !dbg !1084
  %36 = trunc i32 %35 to i8, !dbg !1111
  %37 = add nuw nsw i8 %36, 65, !dbg !1111
  store i8 %37, i8* %3, align 1, !dbg !1112, !tbaa !333
  %38 = getelementptr inbounds %struct.cell, %struct.cell* %14, i64 %11, i32 2, !dbg !1113
  %39 = load i8*, i8** %38, align 8, !dbg !1113, !tbaa !281
  %40 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %3, i8* nonnull %4, i8* %39), !dbg !1114
  br label %41, !dbg !1115

41:                                               ; preds = %10, %33
  %42 = add nuw nsw i64 %11, 1, !dbg !1116
  call void @llvm.dbg.value(metadata i64 %42, metadata !1076, metadata !DIExpression()), !dbg !1083
  %43 = icmp eq i64 %42, 100, !dbg !1117
  br i1 %43, label %44, label %10, !dbg !1094, !llvm.loop !1118

44:                                               ; preds = %41
  %45 = add nuw nsw i64 %9, 1, !dbg !1120
  call void @llvm.dbg.value(metadata i64 %45, metadata !1075, metadata !DIExpression()), !dbg !1083
  %46 = icmp eq i64 %45, 702, !dbg !1121
  br i1 %46, label %47, label %8, !dbg !1093, !llvm.loop !1122

47:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #18, !dbg !1124
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %3) #18, !dbg !1124
  ret void, !dbg !1124
}

; Function Attrs: nofree nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i8* @peek_top(%struct.stack* readonly %0) local_unnamed_addr #12 !dbg !1125 {
  call void @llvm.dbg.value(metadata %struct.stack* %0, metadata !1135, metadata !DIExpression()), !dbg !1136
  %2 = icmp eq %struct.stack* %0, null, !dbg !1137
  br i1 %2, label %6, label %3, !dbg !1139

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.stack, %struct.stack* %0, i64 0, i32 0, !dbg !1140
  %5 = load i8*, i8** %4, align 8, !dbg !1140, !tbaa !429
  br label %6, !dbg !1141

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ null, %1 ], !dbg !1136
  ret i8* %7, !dbg !1142
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @push(%struct.stack** nocapture %0, i8* %1) local_unnamed_addr #0 !dbg !1143 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !1148, metadata !DIExpression()), !dbg !1151
  call void @llvm.dbg.value(metadata i8* %1, metadata !1149, metadata !DIExpression()), !dbg !1151
  %3 = icmp eq i8* %1, null, !dbg !1152
  br i1 %3, label %12, label %4, !dbg !1154

4:                                                ; preds = %2
  %5 = call dereferenceable_or_null(16) i8* @malloc(i64 16), !dbg !1155
  call void @llvm.dbg.value(metadata i8* %5, metadata !1150, metadata !DIExpression()), !dbg !1151
  %6 = bitcast i8* %5 to i8**, !dbg !1156
  store i8* %1, i8** %6, align 8, !dbg !1157, !tbaa !429
  %7 = bitcast %struct.stack** %0 to i64*, !dbg !1158
  %8 = load i64, i64* %7, align 8, !dbg !1158, !tbaa !205
  %9 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !1160
  %10 = bitcast i8* %9 to i64*, !dbg !1160
  store i64 %8, i64* %10, align 8, !dbg !1160, !tbaa !437
  %11 = bitcast %struct.stack** %0 to i8**, !dbg !1160
  store i8* %5, i8** %11, align 8, !dbg !1160, !tbaa !205
  br label %12, !dbg !1161

12:                                               ; preds = %4, %2
  %13 = phi i32 [ -1, %2 ], [ 0, %4 ], !dbg !1151
  ret i32 %13, !dbg !1161
}

; Function Attrs: nounwind uwtable
define dso_local i32 @push_copy(%struct.stack** nocapture %0, i8* readonly %1, i64 %2) local_unnamed_addr #3 !dbg !1162 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !1166, metadata !DIExpression()), !dbg !1171
  call void @llvm.dbg.value(metadata i8* %1, metadata !1167, metadata !DIExpression()), !dbg !1171
  call void @llvm.dbg.value(metadata i64 %2, metadata !1168, metadata !DIExpression()), !dbg !1171
  %4 = icmp eq i8* %1, null, !dbg !1172
  br i1 %4, label %23, label %5, !dbg !1174

5:                                                ; preds = %3
  %6 = call i64 @strlen(i8* nonnull %1), !dbg !1175
  call void @llvm.dbg.value(metadata i64 %6, metadata !1169, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1171
  %7 = shl i64 %6, 32, !dbg !1176
  %8 = add i64 %7, 4294967296, !dbg !1176
  %9 = ashr exact i64 %8, 32, !dbg !1176
  %10 = icmp ugt i64 %9, %2, !dbg !1178
  br i1 %10, label %23, label %11, !dbg !1179

11:                                               ; preds = %5
  %12 = call dereferenceable_or_null(16) i8* @malloc(i64 16), !dbg !1180
  call void @llvm.dbg.value(metadata i8* %12, metadata !1170, metadata !DIExpression()), !dbg !1171
  %13 = call i8* @malloc(i64 %9), !dbg !1181
  %14 = bitcast i8* %12 to i8**, !dbg !1182
  store i8* %13, i8** %14, align 8, !dbg !1183, !tbaa !429
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* nonnull align 1 %1, i64 %9, i1 false), !dbg !1184
  %15 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !1185, !tbaa !205
  %16 = icmp eq %struct.stack* %15, null, !dbg !1187
  %17 = getelementptr inbounds i8, i8* %12, i64 8, !dbg !1188
  %18 = bitcast i8* %17 to %struct.stack**, !dbg !1188
  br i1 %16, label %19, label %21, !dbg !1189

19:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* %12, metadata !1170, metadata !DIExpression()), !dbg !1171
  store %struct.stack* null, %struct.stack** %18, align 8, !dbg !1190, !tbaa !437
  %20 = bitcast %struct.stack** %0 to i8**, !dbg !1192
  store i8* %12, i8** %20, align 8, !dbg !1192, !tbaa !205
  br label %23, !dbg !1193

21:                                               ; preds = %11
  store %struct.stack* %15, %struct.stack** %18, align 8, !dbg !1194, !tbaa !437
  %22 = bitcast %struct.stack** %0 to i8**, !dbg !1196
  store i8* %12, i8** %22, align 8, !dbg !1196, !tbaa !205
  br label %23

23:                                               ; preds = %5, %21, %19, %3
  %24 = phi i32 [ -1, %3 ], [ -1, %5 ], [ 0, %21 ], [ 0, %19 ], !dbg !1171
  ret i32 %24, !dbg !1197
}

; Function Attrs: nounwind uwtable
define dso_local i8* @pop_copy(%struct.stack** nocapture %0) local_unnamed_addr #3 !dbg !1198 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !1202, metadata !DIExpression()), !dbg !1205
  %2 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !1206, !tbaa !205
  %3 = icmp eq %struct.stack* %2, null, !dbg !1208
  br i1 %3, label %12, label %4, !dbg !1209

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.stack* %2, metadata !1203, metadata !DIExpression()), !dbg !1205
  %5 = getelementptr inbounds %struct.stack, %struct.stack* %2, i64 0, i32 0, !dbg !1210
  %6 = load i8*, i8** %5, align 8, !dbg !1210, !tbaa !429
  call void @llvm.dbg.value(metadata i8* %6, metadata !1204, metadata !DIExpression()), !dbg !1205
  %7 = getelementptr inbounds %struct.stack, %struct.stack* %2, i64 0, i32 1, !dbg !1211
  %8 = bitcast %struct.stack** %7 to i64*, !dbg !1211
  %9 = load i64, i64* %8, align 8, !dbg !1211, !tbaa !437
  %10 = bitcast %struct.stack** %0 to i64*, !dbg !1212
  store i64 %9, i64* %10, align 8, !dbg !1212, !tbaa !205
  %11 = bitcast %struct.stack* %2 to i8*, !dbg !1213
  call void @free(i8* %11), !dbg !1214
  br label %12

12:                                               ; preds = %1, %4
  %13 = phi i8* [ %6, %4 ], [ null, %1 ], !dbg !1205
  ret i8* %13, !dbg !1215
}

; Function Attrs: nounwind uwtable
define dso_local void @clear_stack(%struct.stack** nocapture %0) local_unnamed_addr #3 !dbg !1216 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !1220, metadata !DIExpression()), !dbg !1223
  %2 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !1224, !tbaa !205
  %3 = icmp eq %struct.stack* %2, null, !dbg !1226
  br i1 %3, label %23, label %4, !dbg !1227

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.stack* %2, metadata !1221, metadata !DIExpression()), !dbg !1223
  %5 = getelementptr inbounds %struct.stack, %struct.stack* %2, i64 0, i32 1, !dbg !1228
  %6 = load %struct.stack*, %struct.stack** %5, align 8, !dbg !1228, !tbaa !437
  %7 = icmp eq %struct.stack* %6, null, !dbg !1229
  %8 = getelementptr inbounds %struct.stack, %struct.stack* %2, i64 0, i32 0, !dbg !1223
  %9 = load i8*, i8** %8, align 8, !dbg !1223, !tbaa !429
  call void @free(i8* %9), !dbg !1223
  br i1 %7, label %20, label %10, !dbg !1230

10:                                               ; preds = %4, %10
  %11 = phi %struct.stack** [ %15, %10 ], [ %5, %4 ]
  %12 = phi %struct.stack* [ %13, %10 ], [ %2, %4 ]
  call void @llvm.dbg.value(metadata %struct.stack* %12, metadata !1221, metadata !DIExpression()), !dbg !1223
  call void @llvm.dbg.value(metadata %struct.stack* %12, metadata !1222, metadata !DIExpression()), !dbg !1223
  %13 = load %struct.stack*, %struct.stack** %11, align 8, !dbg !1231, !tbaa !437
  call void @llvm.dbg.value(metadata %struct.stack* %13, metadata !1221, metadata !DIExpression()), !dbg !1223
  %14 = bitcast %struct.stack* %12 to i8*, !dbg !1233
  call void @free(i8* %14), !dbg !1234
  %15 = getelementptr inbounds %struct.stack, %struct.stack* %13, i64 0, i32 1, !dbg !1228
  %16 = load %struct.stack*, %struct.stack** %15, align 8, !dbg !1228, !tbaa !437
  %17 = icmp eq %struct.stack* %16, null, !dbg !1229
  %18 = getelementptr inbounds %struct.stack, %struct.stack* %13, i64 0, i32 0, !dbg !1223
  %19 = load i8*, i8** %18, align 8, !dbg !1223, !tbaa !429
  call void @free(i8* %19), !dbg !1223
  br i1 %17, label %20, label %10, !dbg !1230, !llvm.loop !1235

20:                                               ; preds = %10, %4
  %21 = phi %struct.stack* [ %2, %4 ], [ %13, %10 ], !dbg !1223
  call void @llvm.dbg.value(metadata %struct.stack* %21, metadata !1221, metadata !DIExpression()), !dbg !1223
  %22 = bitcast %struct.stack* %21 to i8*, !dbg !1237
  call void @free(i8* %22), !dbg !1238
  store %struct.stack* null, %struct.stack** %0, align 8, !dbg !1239, !tbaa !205
  br label %23

23:                                               ; preds = %1, %20
  ret void, !dbg !1240
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i8* @peek_front(%struct.queue* readonly %0) local_unnamed_addr #12 !dbg !1241 {
  call void @llvm.dbg.value(metadata %struct.queue* %0, metadata !1251, metadata !DIExpression()), !dbg !1252
  %2 = icmp eq %struct.queue* %0, null, !dbg !1253
  br i1 %2, label %6, label %3, !dbg !1255

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.queue, %struct.queue* %0, i64 0, i32 0, !dbg !1256
  %5 = load i8*, i8** %4, align 8, !dbg !1256, !tbaa !1257
  br label %6, !dbg !1259

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ null, %1 ], !dbg !1252
  ret i8* %7, !dbg !1260
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @enqueue(%struct.queue** nocapture %0, i8* %1) local_unnamed_addr #0 !dbg !1261 {
  call void @llvm.dbg.value(metadata %struct.queue** %0, metadata !1266, metadata !DIExpression()), !dbg !1272
  call void @llvm.dbg.value(metadata i8* %1, metadata !1267, metadata !DIExpression()), !dbg !1272
  %3 = icmp eq i8* %1, null, !dbg !1273
  br i1 %3, label %21, label %4, !dbg !1275

4:                                                ; preds = %2
  %5 = call dereferenceable_or_null(16) i8* @malloc(i64 16), !dbg !1276
  call void @llvm.dbg.value(metadata i8* %5, metadata !1268, metadata !DIExpression()), !dbg !1272
  %6 = bitcast i8* %5 to i8**, !dbg !1277
  store i8* %1, i8** %6, align 8, !dbg !1278, !tbaa !1257
  %7 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !1279
  %8 = bitcast i8* %7 to %struct.queue**, !dbg !1279
  store %struct.queue* null, %struct.queue** %8, align 8, !dbg !1280, !tbaa !1281
  %9 = load %struct.queue*, %struct.queue** %0, align 8, !dbg !1282, !tbaa !205
  %10 = icmp eq %struct.queue* %9, null, !dbg !1283
  br i1 %10, label %18, label %11, !dbg !1284

11:                                               ; preds = %4, %11
  %12 = phi %struct.queue* [ %14, %11 ], [ %9, %4 ], !dbg !1285
  call void @llvm.dbg.value(metadata %struct.queue* %12, metadata !1269, metadata !DIExpression()), !dbg !1285
  %13 = getelementptr inbounds %struct.queue, %struct.queue* %12, i64 0, i32 1, !dbg !1286
  %14 = load %struct.queue*, %struct.queue** %13, align 8, !dbg !1286, !tbaa !1281
  %15 = icmp eq %struct.queue* %14, null, !dbg !1287
  br i1 %15, label %16, label %11, !dbg !1288, !llvm.loop !1289

16:                                               ; preds = %11
  call void @llvm.dbg.value(metadata %struct.queue* %12, metadata !1269, metadata !DIExpression()), !dbg !1285
  call void @llvm.dbg.value(metadata %struct.queue* %12, metadata !1269, metadata !DIExpression()), !dbg !1285
  call void @llvm.dbg.value(metadata %struct.queue* %12, metadata !1269, metadata !DIExpression()), !dbg !1285
  %17 = getelementptr inbounds %struct.queue, %struct.queue* %12, i64 0, i32 1, !dbg !1286
  br label %18

18:                                               ; preds = %4, %16
  %19 = phi %struct.queue** [ %17, %16 ], [ %0, %4 ]
  %20 = bitcast %struct.queue** %19 to i8**, !dbg !1291
  store i8* %5, i8** %20, align 8, !dbg !1291, !tbaa !205
  br label %21, !dbg !1292

21:                                               ; preds = %18, %2
  %22 = phi i32 [ -1, %2 ], [ 0, %18 ], !dbg !1272
  ret i32 %22, !dbg !1292
}

; Function Attrs: nounwind uwtable
define dso_local i32 @enqueue_copy(%struct.queue** nocapture %0, i8* readonly %1, i64 %2) local_unnamed_addr #3 !dbg !1293 {
  call void @llvm.dbg.value(metadata %struct.queue** %0, metadata !1297, metadata !DIExpression()), !dbg !1305
  call void @llvm.dbg.value(metadata i8* %1, metadata !1298, metadata !DIExpression()), !dbg !1305
  call void @llvm.dbg.value(metadata i64 %2, metadata !1299, metadata !DIExpression()), !dbg !1305
  %4 = icmp eq i8* %1, null, !dbg !1306
  br i1 %4, label %29, label %5, !dbg !1308

5:                                                ; preds = %3
  %6 = call i64 @strlen(i8* nonnull %1), !dbg !1309
  call void @llvm.dbg.value(metadata i64 %6, metadata !1300, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1305
  %7 = shl i64 %6, 32, !dbg !1310
  %8 = add i64 %7, 4294967296, !dbg !1310
  %9 = ashr exact i64 %8, 32, !dbg !1310
  %10 = icmp ugt i64 %9, %2, !dbg !1312
  br i1 %10, label %29, label %11, !dbg !1313

11:                                               ; preds = %5
  %12 = call dereferenceable_or_null(16) i8* @malloc(i64 16), !dbg !1314
  call void @llvm.dbg.value(metadata i8* %12, metadata !1301, metadata !DIExpression()), !dbg !1305
  %13 = call i8* @malloc(i64 %9), !dbg !1315
  %14 = bitcast i8* %12 to i8**, !dbg !1316
  store i8* %13, i8** %14, align 8, !dbg !1317, !tbaa !1257
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* nonnull align 1 %1, i64 %9, i1 false), !dbg !1318
  %15 = getelementptr inbounds i8, i8* %12, i64 8, !dbg !1319
  %16 = bitcast i8* %15 to %struct.queue**, !dbg !1319
  store %struct.queue* null, %struct.queue** %16, align 8, !dbg !1320, !tbaa !1281
  %17 = load %struct.queue*, %struct.queue** %0, align 8, !dbg !1321, !tbaa !205
  %18 = icmp eq %struct.queue* %17, null, !dbg !1322
  br i1 %18, label %19, label %21, !dbg !1323

19:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* %12, metadata !1301, metadata !DIExpression()), !dbg !1305
  %20 = bitcast %struct.queue** %0 to i8**, !dbg !1324
  store i8* %12, i8** %20, align 8, !dbg !1324, !tbaa !205
  br label %29, !dbg !1326

21:                                               ; preds = %11, %21
  %22 = phi %struct.queue* [ %24, %21 ], [ %17, %11 ], !dbg !1327
  call void @llvm.dbg.value(metadata %struct.queue* %22, metadata !1302, metadata !DIExpression()), !dbg !1327
  %23 = getelementptr inbounds %struct.queue, %struct.queue* %22, i64 0, i32 1, !dbg !1328
  %24 = load %struct.queue*, %struct.queue** %23, align 8, !dbg !1328, !tbaa !1281
  %25 = icmp eq %struct.queue* %24, null, !dbg !1329
  br i1 %25, label %26, label %21, !dbg !1330, !llvm.loop !1331

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata %struct.queue* %22, metadata !1302, metadata !DIExpression()), !dbg !1327
  call void @llvm.dbg.value(metadata %struct.queue* %22, metadata !1302, metadata !DIExpression()), !dbg !1327
  call void @llvm.dbg.value(metadata %struct.queue* %22, metadata !1302, metadata !DIExpression()), !dbg !1327
  %27 = getelementptr inbounds %struct.queue, %struct.queue* %22, i64 0, i32 1, !dbg !1328
  %28 = bitcast %struct.queue** %27 to i8**, !dbg !1333
  store i8* %12, i8** %28, align 8, !dbg !1333, !tbaa !1281
  br label %29

29:                                               ; preds = %5, %26, %19, %3
  %30 = phi i32 [ -1, %3 ], [ -1, %5 ], [ 0, %26 ], [ 0, %19 ], !dbg !1305
  ret i32 %30, !dbg !1334
}

; Function Attrs: nounwind uwtable
define dso_local i8* @dequeue_copy(%struct.queue** nocapture %0) local_unnamed_addr #3 !dbg !1335 {
  call void @llvm.dbg.value(metadata %struct.queue** %0, metadata !1339, metadata !DIExpression()), !dbg !1342
  %2 = load %struct.queue*, %struct.queue** %0, align 8, !dbg !1343, !tbaa !205
  %3 = icmp eq %struct.queue* %2, null, !dbg !1345
  br i1 %3, label %12, label %4, !dbg !1346

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.queue* %2, metadata !1340, metadata !DIExpression()), !dbg !1342
  %5 = getelementptr inbounds %struct.queue, %struct.queue* %2, i64 0, i32 0, !dbg !1347
  %6 = load i8*, i8** %5, align 8, !dbg !1347, !tbaa !1257
  call void @llvm.dbg.value(metadata i8* %6, metadata !1341, metadata !DIExpression()), !dbg !1342
  %7 = getelementptr inbounds %struct.queue, %struct.queue* %2, i64 0, i32 1, !dbg !1348
  %8 = bitcast %struct.queue** %7 to i64*, !dbg !1348
  %9 = load i64, i64* %8, align 8, !dbg !1348, !tbaa !1281
  %10 = bitcast %struct.queue** %0 to i64*, !dbg !1349
  store i64 %9, i64* %10, align 8, !dbg !1349, !tbaa !205
  %11 = bitcast %struct.queue* %2 to i8*, !dbg !1350
  call void @free(i8* %11), !dbg !1351
  br label %12

12:                                               ; preds = %1, %4
  %13 = phi i8* [ %6, %4 ], [ null, %1 ], !dbg !1342
  ret i8* %13, !dbg !1352
}

; Function Attrs: nounwind uwtable
define dso_local void @clear_queue(%struct.queue** nocapture %0) local_unnamed_addr #3 !dbg !1353 {
  call void @llvm.dbg.value(metadata %struct.queue** %0, metadata !1357, metadata !DIExpression()), !dbg !1360
  %2 = load %struct.queue*, %struct.queue** %0, align 8, !dbg !1361, !tbaa !205
  %3 = icmp eq %struct.queue* %2, null, !dbg !1363
  br i1 %3, label %23, label %4, !dbg !1364

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.queue* %2, metadata !1358, metadata !DIExpression()), !dbg !1360
  %5 = getelementptr inbounds %struct.queue, %struct.queue* %2, i64 0, i32 1, !dbg !1365
  %6 = load %struct.queue*, %struct.queue** %5, align 8, !dbg !1365, !tbaa !1281
  %7 = icmp eq %struct.queue* %6, null, !dbg !1366
  %8 = getelementptr inbounds %struct.queue, %struct.queue* %2, i64 0, i32 0, !dbg !1360
  %9 = load i8*, i8** %8, align 8, !dbg !1360, !tbaa !1257
  call void @free(i8* %9), !dbg !1360
  br i1 %7, label %20, label %10, !dbg !1367

10:                                               ; preds = %4, %10
  %11 = phi %struct.queue** [ %15, %10 ], [ %5, %4 ]
  %12 = phi %struct.queue* [ %13, %10 ], [ %2, %4 ]
  call void @llvm.dbg.value(metadata %struct.queue* %12, metadata !1358, metadata !DIExpression()), !dbg !1360
  call void @llvm.dbg.value(metadata %struct.queue* %12, metadata !1359, metadata !DIExpression()), !dbg !1360
  %13 = load %struct.queue*, %struct.queue** %11, align 8, !dbg !1368, !tbaa !1281
  call void @llvm.dbg.value(metadata %struct.queue* %13, metadata !1358, metadata !DIExpression()), !dbg !1360
  %14 = bitcast %struct.queue* %12 to i8*, !dbg !1370
  call void @free(i8* %14), !dbg !1371
  %15 = getelementptr inbounds %struct.queue, %struct.queue* %13, i64 0, i32 1, !dbg !1365
  %16 = load %struct.queue*, %struct.queue** %15, align 8, !dbg !1365, !tbaa !1281
  %17 = icmp eq %struct.queue* %16, null, !dbg !1366
  %18 = getelementptr inbounds %struct.queue, %struct.queue* %13, i64 0, i32 0, !dbg !1360
  %19 = load i8*, i8** %18, align 8, !dbg !1360, !tbaa !1257
  call void @free(i8* %19), !dbg !1360
  br i1 %17, label %20, label %10, !dbg !1367, !llvm.loop !1372

20:                                               ; preds = %10, %4
  %21 = phi %struct.queue* [ %2, %4 ], [ %13, %10 ], !dbg !1360
  call void @llvm.dbg.value(metadata %struct.queue* %21, metadata !1358, metadata !DIExpression()), !dbg !1360
  %22 = bitcast %struct.queue* %21 to i8*, !dbg !1374
  call void @free(i8* %22), !dbg !1375
  store %struct.queue* null, %struct.queue** %0, align 8, !dbg !1376, !tbaa !205
  br label %23

23:                                               ; preds = %1, %20
  ret void, !dbg !1377
}

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local i8* @itoa(i32 %0, i8* %1, i64 %2) local_unnamed_addr #13 !dbg !1378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1382, metadata !DIExpression()), !dbg !1391
  call void @llvm.dbg.value(metadata i8* %1, metadata !1383, metadata !DIExpression()), !dbg !1391
  call void @llvm.dbg.value(metadata i64 %2, metadata !1384, metadata !DIExpression()), !dbg !1391
  call void @llvm.dbg.value(metadata i32 10, metadata !1385, metadata !DIExpression()), !dbg !1391
  %4 = icmp ult i64 %2, 2, !dbg !1392
  br i1 %4, label %46, label %5, !dbg !1394

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i64 0, metadata !1386, metadata !DIExpression()), !dbg !1391
  call void @llvm.dbg.value(metadata i32 0, metadata !1387, metadata !DIExpression()), !dbg !1391
  %6 = icmp slt i32 %0, 0, !dbg !1395
  call void @llvm.dbg.value(metadata i32 undef, metadata !1387, metadata !DIExpression()), !dbg !1391
  %7 = add i64 %2, -1, !dbg !1391
  br label %8, !dbg !1397

8:                                                ; preds = %8, %5
  %9 = phi i32 [ %0, %5 ], [ %18, %8 ]
  %10 = phi i64 [ 0, %5 ], [ %17, %8 ], !dbg !1391
  call void @llvm.dbg.value(metadata i64 %10, metadata !1386, metadata !DIExpression()), !dbg !1391
  call void @llvm.dbg.value(metadata i32 %9, metadata !1382, metadata !DIExpression()), !dbg !1391
  %11 = srem i32 %9, 10, !dbg !1398
  %12 = trunc i32 %11 to i8, !dbg !1398
  %13 = sub i8 0, %12, !dbg !1401
  %14 = select i1 %6, i8 %13, i8 %12, !dbg !1401
  %15 = add i8 %14, 48, !dbg !1401
  %16 = getelementptr inbounds i8, i8* %1, i64 %10, !dbg !1398
  store i8 %15, i8* %16, align 1, !dbg !1398, !tbaa !333
  %17 = add nuw i64 %10, 1, !dbg !1398
  call void @llvm.dbg.value(metadata i64 %17, metadata !1386, metadata !DIExpression()), !dbg !1391
  %18 = sdiv i32 %9, 10, !dbg !1402
  call void @llvm.dbg.value(metadata i32 %18, metadata !1382, metadata !DIExpression()), !dbg !1391
  %19 = icmp ult i64 %17, %7, !dbg !1403
  %20 = add i32 %9, 9, !dbg !1404
  %21 = icmp ugt i32 %20, 18, !dbg !1404
  %22 = and i1 %21, %19, !dbg !1404
  br i1 %22, label %8, label %23, !dbg !1405, !llvm.loop !1406

23:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i64 %10, metadata !1386, metadata !DIExpression()), !dbg !1391
  call void @llvm.dbg.value(metadata i64 %10, metadata !1386, metadata !DIExpression()), !dbg !1391
  call void @llvm.dbg.value(metadata i64 %10, metadata !1386, metadata !DIExpression()), !dbg !1391
  call void @llvm.dbg.value(metadata i64 %10, metadata !1386, metadata !DIExpression()), !dbg !1391
  %24 = icmp eq i64 %17, %7, !dbg !1408
  %25 = and i1 %6, %24, !dbg !1410
  %26 = or i1 %21, %25, !dbg !1411
  br i1 %26, label %46, label %27, !dbg !1411

27:                                               ; preds = %23
  br i1 %6, label %28, label %31, !dbg !1412

28:                                               ; preds = %27
  %29 = add i64 %10, 2, !dbg !1413
  call void @llvm.dbg.value(metadata i64 %29, metadata !1386, metadata !DIExpression()), !dbg !1391
  %30 = getelementptr inbounds i8, i8* %1, i64 %17, !dbg !1415
  store i8 45, i8* %30, align 1, !dbg !1416, !tbaa !333
  br label %31, !dbg !1415

31:                                               ; preds = %28, %27
  %32 = phi i64 [ %29, %28 ], [ %17, %27 ], !dbg !1391
  call void @llvm.dbg.value(metadata i64 %32, metadata !1386, metadata !DIExpression()), !dbg !1391
  call void @llvm.dbg.value(metadata i64 %32, metadata !1386, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !1391
  %33 = getelementptr inbounds i8, i8* %1, i64 %32, !dbg !1417
  store i8 0, i8* %33, align 1, !dbg !1418, !tbaa !333
  call void @llvm.dbg.value(metadata i32 0, metadata !1388, metadata !DIExpression()), !dbg !1391
  %34 = add i64 %32, -1, !dbg !1391
  call void @llvm.dbg.value(metadata i64 %34, metadata !1386, metadata !DIExpression()), !dbg !1391
  %35 = icmp eq i64 %34, 0, !dbg !1419
  br i1 %35, label %46, label %36, !dbg !1420

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %43, %36 ], [ 0, %31 ]
  %38 = phi i64 [ %44, %36 ], [ %34, %31 ]
  call void @llvm.dbg.value(metadata i64 %37, metadata !1388, metadata !DIExpression()), !dbg !1391
  %39 = getelementptr inbounds i8, i8* %1, i64 %37, !dbg !1421
  %40 = load i8, i8* %39, align 1, !dbg !1421, !tbaa !333
  call void @llvm.dbg.value(metadata i8 %40, metadata !1389, metadata !DIExpression()), !dbg !1422
  %41 = getelementptr inbounds i8, i8* %1, i64 %38, !dbg !1423
  %42 = load i8, i8* %41, align 1, !dbg !1423, !tbaa !333
  %43 = add nuw i64 %37, 1, !dbg !1424
  call void @llvm.dbg.value(metadata i64 %43, metadata !1388, metadata !DIExpression()), !dbg !1391
  store i8 %42, i8* %39, align 1, !dbg !1425, !tbaa !333
  call void @llvm.dbg.value(metadata i64 %38, metadata !1386, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !1391
  store i8 %40, i8* %41, align 1, !dbg !1426, !tbaa !333
  %44 = add i64 %38, -1, !dbg !1391
  call void @llvm.dbg.value(metadata i64 %44, metadata !1386, metadata !DIExpression()), !dbg !1391
  %45 = icmp ugt i64 %44, %43, !dbg !1419
  br i1 %45, label %36, label %46, !dbg !1420, !llvm.loop !1427

46:                                               ; preds = %36, %31, %23, %3
  %47 = phi i8* [ null, %3 ], [ null, %23 ], [ %1, %31 ], [ %1, %36 ], !dbg !1391
  ret i8* %47, !dbg !1429
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #3 !dbg !1430 {
  %1 = alloca [512 x i8], align 16
  %2 = getelementptr inbounds [512 x i8], [512 x i8]* %1, i64 0, i64 0, !dbg !1435
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %2) #18, !dbg !1435
  call void @llvm.dbg.declare(metadata [512 x i8]* %1, metadata !1432, metadata !DIExpression()), !dbg !1436
  %3 = call i32 (...) bitcast (i32 ()* @init_sheet to i32 (...)*)() #18, !dbg !1437
  call void @llvm.dbg.value(metadata i32 0, metadata !1433, metadata !DIExpression()), !dbg !1438
  br label %4, !dbg !1439

4:                                                ; preds = %14, %0
  %5 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0)), !dbg !1440
  %6 = call fastcc i32 @readline(i8* nonnull %2), !dbg !1442
  call void @llvm.dbg.value(metadata i32 %6, metadata !1434, metadata !DIExpression()), !dbg !1438
  %7 = icmp eq i32 %6, 0, !dbg !1443
  br i1 %7, label %10, label %8, !dbg !1445

8:                                                ; preds = %4
  %9 = call i32 @putchar(i32 10), !dbg !1446
  br label %14, !dbg !1448

10:                                               ; preds = %4
  %11 = call fastcc i32 @parse_line(i8* nonnull %2), !dbg !1449
  switch i32 %11, label %25 [
    i32 -8, label %12
    i32 -4, label %15
    i32 -2, label %17
    i32 -1, label %19
    i32 0, label %21
    i32 1, label %23
  ], !dbg !1450

12:                                               ; preds = %10
  %13 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @str.22, i64 0, i64 0)), !dbg !1451
  br label %14, !dbg !1453

14:                                               ; preds = %12, %15, %17, %19, %21, %25, %8
  br label %4, !dbg !1440

15:                                               ; preds = %10
  %16 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([43 x i8], [43 x i8]* @str.21, i64 0, i64 0)), !dbg !1454
  br label %14, !dbg !1455

17:                                               ; preds = %10
  %18 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([53 x i8], [53 x i8]* @str.20, i64 0, i64 0)), !dbg !1456
  br label %14, !dbg !1457

19:                                               ; preds = %10
  %20 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @str.19, i64 0, i64 0)), !dbg !1458
  br label %14, !dbg !1459

21:                                               ; preds = %10
  %22 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @str.18, i64 0, i64 0)), !dbg !1460
  br label %14, !dbg !1461

23:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 1, metadata !1433, metadata !DIExpression()), !dbg !1438
  %24 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @str, i64 0, i64 0)), !dbg !1462
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %2) #18, !dbg !1463
  ret i32 0, !dbg !1463

25:                                               ; preds = %10
  %26 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @str.23, i64 0, i64 0)), !dbg !1464
  br label %14, !dbg !1465
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @readline(i8* %0) unnamed_addr #3 !dbg !1466 {
  %2 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 0, metadata !1470, metadata !DIExpression()), !dbg !1475
  call void @llvm.dbg.value(metadata i8* %0, metadata !1471, metadata !DIExpression()), !dbg !1475
  call void @llvm.dbg.value(metadata i64 512, metadata !1472, metadata !DIExpression()), !dbg !1475
  %3 = bitcast i64* %2 to i8*, !dbg !1476
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #18, !dbg !1476
  call void @llvm.dbg.value(metadata i64 0, metadata !1473, metadata !DIExpression()), !dbg !1475
  call void @llvm.dbg.value(metadata i8* %0, metadata !1471, metadata !DIExpression()), !dbg !1475
  br label %4, !dbg !1477

4:                                                ; preds = %16, %1
  %5 = phi i64 [ 0, %1 ], [ %18, %16 ]
  %6 = phi i8* [ %0, %1 ], [ %17, %16 ]
  call void @llvm.dbg.value(metadata i64 %5, metadata !1473, metadata !DIExpression()), !dbg !1475
  call void @llvm.dbg.value(metadata i8* %6, metadata !1471, metadata !DIExpression()), !dbg !1475
  call void @llvm.dbg.value(metadata i64* %2, metadata !1474, metadata !DIExpression(DW_OP_deref)), !dbg !1475
  %7 = call i32 @receive(i32 0, i8* %6, i64 1, i64* nonnull %2) #18, !dbg !1479
  %8 = icmp ne i32 %7, 0, !dbg !1483
  %9 = load i64, i64* %2, align 8, !dbg !1484
  call void @llvm.dbg.value(metadata i64 %9, metadata !1474, metadata !DIExpression()), !dbg !1475
  %10 = icmp eq i64 %9, 0, !dbg !1485
  %11 = or i1 %8, %10, !dbg !1486
  br i1 %11, label %12, label %13, !dbg !1486

12:                                               ; preds = %4
  call fastcc void @exit(), !dbg !1487
  unreachable

13:                                               ; preds = %4
  %14 = load i8, i8* %6, align 1, !dbg !1488, !tbaa !333
  %15 = icmp eq i8 %14, 10, !dbg !1490
  br i1 %15, label %20, label %16, !dbg !1491

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !1492
  call void @llvm.dbg.value(metadata i8* %17, metadata !1471, metadata !DIExpression()), !dbg !1475
  %18 = add nuw nsw i64 %5, 1, !dbg !1493
  call void @llvm.dbg.value(metadata i64 %18, metadata !1473, metadata !DIExpression()), !dbg !1475
  %19 = icmp eq i64 %18, 512, !dbg !1494
  br i1 %19, label %20, label %4, !dbg !1477, !llvm.loop !1495

20:                                               ; preds = %16, %13
  %21 = phi i8* [ %6, %13 ], [ %17, %16 ]
  %22 = phi i64 [ %5, %13 ], [ 512, %16 ], !dbg !1497
  call void @llvm.dbg.value(metadata i8* %21, metadata !1471, metadata !DIExpression()), !dbg !1475
  call void @llvm.dbg.value(metadata i8* %21, metadata !1471, metadata !DIExpression()), !dbg !1475
  call void @llvm.dbg.value(metadata i64 %22, metadata !1473, metadata !DIExpression()), !dbg !1475
  call void @llvm.dbg.value(metadata i64 %22, metadata !1473, metadata !DIExpression()), !dbg !1475
  %23 = icmp eq i64 %22, 512, !dbg !1498
  br i1 %23, label %24, label %27, !dbg !1500

24:                                               ; preds = %20
  %25 = load i8, i8* %21, align 1, !dbg !1501, !tbaa !333
  %26 = icmp eq i8 %25, 10, !dbg !1502
  br i1 %26, label %27, label %31, !dbg !1503

27:                                               ; preds = %24, %20
  %28 = load i8, i8* %21, align 1, !dbg !1504, !tbaa !333
  %29 = icmp eq i8 %28, 10, !dbg !1506
  br i1 %29, label %30, label %31, !dbg !1507

30:                                               ; preds = %27
  store i8 0, i8* %21, align 1, !dbg !1508, !tbaa !333
  br label %31, !dbg !1509

31:                                               ; preds = %27, %24, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %24 ], [ 1, %27 ], !dbg !1475
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #18, !dbg !1510
  ret i32 %32, !dbg !1510
}

; Function Attrs: nofree nounwind
declare i32 @putchar(i32) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define internal fastcc i32 @parse_line(i8* %0) unnamed_addr #3 !dbg !1511 {
  %2 = alloca i8*, align 8
  %3 = alloca [32 x i8], align 16
  %4 = alloca [512 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %0, metadata !1513, metadata !DIExpression()), !dbg !1527
  store i8* %0, i8** %2, align 8, !tbaa !205
  call void @llvm.dbg.value(metadata i32 0, metadata !1514, metadata !DIExpression()), !dbg !1527
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0, !dbg !1528
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #18, !dbg !1528
  call void @llvm.dbg.declare(metadata [32 x i8]* %3, metadata !1516, metadata !DIExpression()), !dbg !1529
  %6 = getelementptr inbounds [512 x i8], [512 x i8]* %4, i64 0, i64 0, !dbg !1530
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %6) #18, !dbg !1530
  call void @llvm.dbg.declare(metadata [512 x i8]* %4, metadata !1521, metadata !DIExpression()), !dbg !1531
  call void @llvm.dbg.value(metadata i8* %0, metadata !1513, metadata !DIExpression()), !dbg !1527
  %7 = call i32 @strtrim(i8* %0, i64 512, i32 1) #18, !dbg !1532
  %8 = icmp eq i32 %7, -1, !dbg !1534
  br i1 %8, label %107, label %9, !dbg !1535

9:                                                ; preds = %1
  %10 = load i8*, i8** %2, align 8, !dbg !1536, !tbaa !205
  call void @llvm.dbg.value(metadata i8* %10, metadata !1513, metadata !DIExpression()), !dbg !1527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(5) %5, i8* nonnull align 1 dereferenceable(5) %10, i64 5, i1 false), !dbg !1537
  call void @llvm.dbg.value(metadata i64 0, metadata !1515, metadata !DIExpression()), !dbg !1527
  br label %11, !dbg !1538

11:                                               ; preds = %11, %9
  %12 = phi i64 [ 0, %9 ], [ %18, %11 ]
  call void @llvm.dbg.value(metadata i64 %12, metadata !1515, metadata !DIExpression()), !dbg !1527
  %13 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %12, !dbg !1540
  %14 = load i8, i8* %13, align 1, !dbg !1540, !tbaa !333
  %15 = sext i8 %14 to i32, !dbg !1540
  %16 = call i32 @toupper(i32 %15) #19, !dbg !1542
  %17 = trunc i32 %16 to i8, !dbg !1542
  store i8 %17, i8* %13, align 1, !dbg !1543, !tbaa !333
  %18 = add nuw nsw i64 %12, 1, !dbg !1544
  call void @llvm.dbg.value(metadata i64 %18, metadata !1515, metadata !DIExpression()), !dbg !1527
  %19 = icmp eq i64 %18, 5, !dbg !1545
  br i1 %19, label %20, label %11, !dbg !1538, !llvm.loop !1546

20:                                               ; preds = %11
  %21 = call i32 @bcmp(i8* nonnull dereferenceable(5) %5, i8* nonnull dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.24, i64 0, i64 0), i64 5), !dbg !1548
  %22 = icmp eq i32 %21, 0, !dbg !1550
  br i1 %22, label %62, label %23, !dbg !1551

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* %10, metadata !1513, metadata !DIExpression()), !dbg !1527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(5) %5, i8* nonnull align 1 dereferenceable(5) %10, i64 5, i1 false), !dbg !1552
  call void @llvm.dbg.value(metadata i64 0, metadata !1515, metadata !DIExpression()), !dbg !1527
  br label %24, !dbg !1553

24:                                               ; preds = %24, %23
  %25 = phi i64 [ 0, %23 ], [ %31, %24 ]
  call void @llvm.dbg.value(metadata i64 %25, metadata !1515, metadata !DIExpression()), !dbg !1527
  %26 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %25, !dbg !1555
  %27 = load i8, i8* %26, align 1, !dbg !1555, !tbaa !333
  %28 = sext i8 %27 to i32, !dbg !1555
  %29 = call i32 @toupper(i32 %28) #19, !dbg !1557
  %30 = trunc i32 %29 to i8, !dbg !1557
  store i8 %30, i8* %26, align 1, !dbg !1558, !tbaa !333
  %31 = add nuw nsw i64 %25, 1, !dbg !1559
  call void @llvm.dbg.value(metadata i64 %31, metadata !1515, metadata !DIExpression()), !dbg !1527
  %32 = icmp eq i64 %31, 5, !dbg !1560
  br i1 %32, label %33, label %24, !dbg !1553, !llvm.loop !1561

33:                                               ; preds = %24
  %34 = call i32 @bcmp(i8* nonnull dereferenceable(5) %5, i8* nonnull dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.25, i64 0, i64 0), i64 5), !dbg !1563
  %35 = icmp eq i32 %34, 0, !dbg !1565
  br i1 %35, label %62, label %36, !dbg !1566

36:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i8* %10, metadata !1513, metadata !DIExpression()), !dbg !1527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(6) %5, i8* nonnull align 1 dereferenceable(6) %10, i64 6, i1 false), !dbg !1567
  call void @llvm.dbg.value(metadata i64 0, metadata !1515, metadata !DIExpression()), !dbg !1527
  br label %37, !dbg !1568

37:                                               ; preds = %37, %36
  %38 = phi i64 [ 0, %36 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i64 %38, metadata !1515, metadata !DIExpression()), !dbg !1527
  %39 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %38, !dbg !1570
  %40 = load i8, i8* %39, align 1, !dbg !1570, !tbaa !333
  %41 = sext i8 %40 to i32, !dbg !1570
  %42 = call i32 @toupper(i32 %41) #19, !dbg !1572
  %43 = trunc i32 %42 to i8, !dbg !1572
  store i8 %43, i8* %39, align 1, !dbg !1573, !tbaa !333
  %44 = add nuw nsw i64 %38, 1, !dbg !1574
  call void @llvm.dbg.value(metadata i64 %44, metadata !1515, metadata !DIExpression()), !dbg !1527
  %45 = icmp eq i64 %44, 6, !dbg !1575
  br i1 %45, label %46, label %37, !dbg !1568, !llvm.loop !1576

46:                                               ; preds = %37
  %47 = call i32 @bcmp(i8* nonnull dereferenceable(6) %5, i8* nonnull dereferenceable(6) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12.26, i64 0, i64 0), i64 6), !dbg !1578
  %48 = icmp eq i32 %47, 0, !dbg !1580
  call void @llvm.dbg.value(metadata i8* %10, metadata !1513, metadata !DIExpression()), !dbg !1527
  call void @llvm.dbg.value(metadata i8* %10, metadata !1513, metadata !DIExpression()), !dbg !1527
  br i1 %48, label %92, label %49, !dbg !1581

49:                                               ; preds = %46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(5) %5, i8* nonnull align 1 dereferenceable(5) %10, i64 5, i1 false), !dbg !1582
  call void @llvm.dbg.value(metadata i64 0, metadata !1515, metadata !DIExpression()), !dbg !1527
  br label %50, !dbg !1583

50:                                               ; preds = %50, %49
  %51 = phi i64 [ 0, %49 ], [ %57, %50 ]
  call void @llvm.dbg.value(metadata i64 %51, metadata !1515, metadata !DIExpression()), !dbg !1527
  %52 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %51, !dbg !1585
  %53 = load i8, i8* %52, align 1, !dbg !1585, !tbaa !333
  %54 = sext i8 %53 to i32, !dbg !1585
  %55 = call i32 @toupper(i32 %54) #19, !dbg !1587
  %56 = trunc i32 %55 to i8, !dbg !1587
  store i8 %56, i8* %52, align 1, !dbg !1588, !tbaa !333
  %57 = add nuw nsw i64 %51, 1, !dbg !1589
  call void @llvm.dbg.value(metadata i64 %57, metadata !1515, metadata !DIExpression()), !dbg !1527
  %58 = icmp eq i64 %57, 5, !dbg !1590
  br i1 %58, label %59, label %50, !dbg !1583, !llvm.loop !1591

59:                                               ; preds = %50
  %60 = call i32 @bcmp(i8* nonnull dereferenceable(5) %5, i8* nonnull dereferenceable(5) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13.27, i64 0, i64 0), i64 5), !dbg !1593
  %61 = icmp eq i32 %60, 0, !dbg !1595
  br i1 %61, label %107, label %97, !dbg !1596

62:                                               ; preds = %33, %20
  %63 = phi i32 [ 0, %20 ], [ 1, %33 ], !dbg !1527
  call void @llvm.dbg.value(metadata i32 %63, metadata !1514, metadata !DIExpression()), !dbg !1527
  call void @llvm.dbg.label(metadata !1523), !dbg !1597
  call void @llvm.dbg.value(metadata i8* %10, metadata !1513, metadata !DIExpression()), !dbg !1527
  %64 = call i32 @strtrim(i8* %10, i64 512, i32 2) #18, !dbg !1598
  %65 = load i8*, i8** %2, align 8, !dbg !1599, !tbaa !205
  call void @llvm.dbg.value(metadata i8* %65, metadata !1513, metadata !DIExpression()), !dbg !1527
  %66 = getelementptr inbounds i8, i8* %65, i64 5, !dbg !1599
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(6) %5, i8* nonnull align 1 dereferenceable(6) %66, i64 6, i1 false), !dbg !1600
  call void @llvm.dbg.value(metadata i64 0, metadata !1515, metadata !DIExpression()), !dbg !1527
  br label %67, !dbg !1601

67:                                               ; preds = %67, %62
  %68 = phi i64 [ 0, %62 ], [ %74, %67 ]
  call void @llvm.dbg.value(metadata i64 %68, metadata !1515, metadata !DIExpression()), !dbg !1527
  %69 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %68, !dbg !1603
  %70 = load i8, i8* %69, align 1, !dbg !1603, !tbaa !333
  %71 = sext i8 %70 to i32, !dbg !1603
  %72 = call i32 @toupper(i32 %71) #19, !dbg !1605
  %73 = trunc i32 %72 to i8, !dbg !1605
  store i8 %73, i8* %69, align 1, !dbg !1606, !tbaa !333
  %74 = add nuw nsw i64 %68, 1, !dbg !1607
  call void @llvm.dbg.value(metadata i64 %74, metadata !1515, metadata !DIExpression()), !dbg !1527
  %75 = icmp eq i64 %74, 6, !dbg !1608
  br i1 %75, label %76, label %67, !dbg !1601, !llvm.loop !1609

76:                                               ; preds = %67
  %77 = call i32 @bcmp(i8* nonnull dereferenceable(6) %5, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14.28, i64 0, i64 0), i64 6), !dbg !1611
  %78 = icmp eq i32 %77, 0, !dbg !1613
  br i1 %78, label %79, label %80, !dbg !1614

79:                                               ; preds = %76
  call fastcc void @print_table(), !dbg !1615
  br label %107, !dbg !1617

80:                                               ; preds = %76
  call void @llvm.dbg.value(metadata i8* %65, metadata !1513, metadata !DIExpression()), !dbg !1527
  %81 = call i32 @valid_cell_id(i8* nonnull %66) #18, !dbg !1618
  %82 = icmp eq i32 %81, -1, !dbg !1620
  br i1 %82, label %107, label %83, !dbg !1621

83:                                               ; preds = %80
  %84 = load i8*, i8** %2, align 8, !dbg !1622, !tbaa !205
  call void @llvm.dbg.value(metadata i8* %84, metadata !1513, metadata !DIExpression()), !dbg !1527
  %85 = getelementptr inbounds i8, i8* %84, i64 5, !dbg !1622
  %86 = call i8* @show_cell(i8* nonnull %85, i32 %63, i8* nonnull %6, i64 512) #18, !dbg !1624
  call void @llvm.dbg.value(metadata i8* %86, metadata !1522, metadata !DIExpression()), !dbg !1527
  %87 = icmp eq i32 %63, 0, !dbg !1625
  br i1 %87, label %90, label %88, !dbg !1627

88:                                               ; preds = %83
  %89 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15.29, i64 0, i64 0), i8* %86), !dbg !1628
  br label %107, !dbg !1628

90:                                               ; preds = %83
  %91 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16.30, i64 0, i64 0), i8* %86), !dbg !1629
  br label %107

92:                                               ; preds = %46
  call void @llvm.dbg.label(metadata !1524), !dbg !1630
  %93 = getelementptr inbounds i8, i8* %10, i64 6, !dbg !1631
  %94 = call i32 @clear_cell(i8* nonnull %93) #18, !dbg !1633
  %95 = icmp eq i32 %94, 0, !dbg !1634
  %96 = select i1 %95, i32 0, i32 -8, !dbg !1527
  br label %107, !dbg !1527

97:                                               ; preds = %59
  call void @llvm.dbg.label(metadata !1525), !dbg !1635
  call void @llvm.dbg.value(metadata i8** %2, metadata !1513, metadata !DIExpression(DW_OP_deref)), !dbg !1527
  %98 = call i8* @strsep(i8** nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.31, i64 0, i64 0)) #18, !dbg !1636
  call void @llvm.dbg.value(metadata i8* %98, metadata !1520, metadata !DIExpression()), !dbg !1527
  %99 = icmp eq i8* %98, null, !dbg !1637
  %100 = load i8*, i8** %2, align 8, !dbg !1639
  call void @llvm.dbg.value(metadata i8* %100, metadata !1513, metadata !DIExpression()), !dbg !1527
  %101 = icmp eq i8* %100, null, !dbg !1640
  %102 = or i1 %99, %101, !dbg !1641
  br i1 %102, label %107, label %103, !dbg !1641

103:                                              ; preds = %97
  %104 = call i32 @set_cell(i8* %98, i8* %100, i64 512) #18, !dbg !1642
  %105 = icmp eq i32 %104, 0, !dbg !1644
  %106 = select i1 %105, i32 0, i32 -4, !dbg !1527
  br label %107, !dbg !1527

107:                                              ; preds = %59, %103, %97, %92, %80, %88, %90, %1, %79
  %108 = phi i32 [ 0, %79 ], [ -1, %1 ], [ 0, %90 ], [ 0, %88 ], [ -2, %80 ], [ %96, %92 ], [ -1, %97 ], [ %106, %103 ], [ 1, %59 ], !dbg !1527
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %6) #18, !dbg !1645
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #18, !dbg !1645
  ret i32 %108, !dbg !1645
}

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define internal fastcc void @print_table() unnamed_addr #3 !dbg !1646 {
  call void (...) bitcast (void ()* @print_assigned_cells to void (...)*)() #18, !dbg !1647
  ret void, !dbg !1648
}

declare !dbg !157 dso_local i8* @strsep(i8**, i8*) local_unnamed_addr #15

declare !dbg !142 dso_local i32 @receive(i32, i8*, i64, i64*) local_unnamed_addr #15

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @exit() unnamed_addr #16 !dbg !1649 {
  call void @llvm.dbg.value(metadata i32 0, metadata !1653, metadata !DIExpression()), !dbg !1654
  call void @_terminate(i32 0) #20, !dbg !1655
  unreachable, !dbg !1655
}

; Function Attrs: noreturn
declare !dbg !147 dso_local void @_terminate(i32) local_unnamed_addr #17

; Function Attrs: nofree nounwind uwtable
define dso_local double @atof(i8* readonly %0, i64 %1, i32* nocapture %2) local_unnamed_addr #0 !dbg !1656 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1660, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i64 %1, metadata !1661, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i32* %2, metadata !1662, metadata !DIExpression()), !dbg !1672
  %4 = icmp eq i8* %0, null, !dbg !1673
  br i1 %4, label %77, label %5, !dbg !1675

5:                                                ; preds = %3
  %6 = call i64 @strlen(i8* nonnull %0), !dbg !1676
  %7 = icmp ult i64 %6, %1, !dbg !1677
  br i1 %7, label %8, label %77, !dbg !1678

8:                                                ; preds = %5
  %9 = load i8, i8* %0, align 1, !dbg !1679
  switch i8 %9, label %14 [
    i8 0, label %77
    i8 45, label %10
  ], !dbg !1680

10:                                               ; preds = %8
  %11 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1681
  call void @llvm.dbg.value(metadata i8* %11, metadata !1660, metadata !DIExpression()), !dbg !1672
  %12 = load i8, i8* %11, align 1, !dbg !1684, !tbaa !333
  %13 = icmp eq i8 %12, 0, !dbg !1686
  br i1 %13, label %77, label %14, !dbg !1687

14:                                               ; preds = %8, %10
  %15 = phi i8* [ %11, %10 ], [ %0, %8 ]
  %16 = phi double [ -1.000000e+00, %10 ], [ 1.000000e+00, %8 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !1668, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i8* %15, metadata !1660, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i32 0, metadata !1669, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i32 0, metadata !1667, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i32 0, metadata !1666, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double 1.000000e+00, metadata !1665, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1664, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1663, metadata !DIExpression()), !dbg !1672
  %17 = load i8, i8* %15, align 1, !dbg !1688, !tbaa !333
  %18 = icmp eq i8 %17, 0, !dbg !1689
  br i1 %18, label %78, label %22, !dbg !1690

19:                                               ; preds = %74
  call void @llvm.dbg.value(metadata i32 %70, metadata !1669, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i32 %69, metadata !1667, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i32 %68, metadata !1666, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double %67, metadata !1665, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double %66, metadata !1664, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double %65, metadata !1663, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i8* %76, metadata !1660, metadata !DIExpression()), !dbg !1672
  %20 = load i8, i8* %76, align 1, !dbg !1688, !tbaa !333
  %21 = icmp eq i8 %20, 0, !dbg !1689
  br i1 %21, label %78, label %22, !dbg !1690, !llvm.loop !1691

22:                                               ; preds = %14, %19
  %23 = phi i8 [ %20, %19 ], [ %17, %14 ]
  %24 = phi i32 [ %70, %19 ], [ 0, %14 ]
  %25 = phi i32 [ %69, %19 ], [ 0, %14 ]
  %26 = phi i32 [ %68, %19 ], [ 0, %14 ]
  %27 = phi double [ %67, %19 ], [ 1.000000e+00, %14 ]
  %28 = phi double [ %66, %19 ], [ 0.000000e+00, %14 ]
  %29 = phi double [ %65, %19 ], [ 0.000000e+00, %14 ]
  %30 = phi i8* [ %76, %19 ], [ %15, %14 ]
  %31 = sext i8 %23 to i32, !dbg !1688
  call void @llvm.dbg.value(metadata i32 %24, metadata !1669, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i32 %25, metadata !1667, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i32 %26, metadata !1666, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double %27, metadata !1665, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double %28, metadata !1664, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double %29, metadata !1663, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i8* %30, metadata !1660, metadata !DIExpression()), !dbg !1672
  %32 = add i8 %23, -48, !dbg !1693
  %33 = icmp ult i8 %32, 10, !dbg !1693
  br i1 %33, label %34, label %55, !dbg !1693

34:                                               ; preds = %22
  %35 = icmp eq i32 %25, 0, !dbg !1696
  br i1 %35, label %41, label %36, !dbg !1699

36:                                               ; preds = %34
  %37 = fmul double %28, 1.000000e+01, !dbg !1700
  %38 = add nsw i32 %31, -48, !dbg !1702
  %39 = sitofp i32 %38 to double, !dbg !1703
  %40 = fadd double %37, %39, !dbg !1704
  call void @llvm.dbg.value(metadata double %40, metadata !1664, metadata !DIExpression()), !dbg !1672
  br label %64, !dbg !1705

41:                                               ; preds = %34
  %42 = icmp eq i32 %26, 0, !dbg !1706
  br i1 %42, label %43, label %48, !dbg !1708

43:                                               ; preds = %41
  %44 = fmul double %29, 1.000000e+01, !dbg !1709
  %45 = add nsw i32 %31, -48, !dbg !1711
  %46 = sitofp i32 %45 to double, !dbg !1712
  %47 = fadd double %44, %46, !dbg !1713
  call void @llvm.dbg.value(metadata double %47, metadata !1663, metadata !DIExpression()), !dbg !1672
  br label %64, !dbg !1714

48:                                               ; preds = %41
  %49 = fmul double %27, 1.000000e+01, !dbg !1715
  call void @llvm.dbg.value(metadata double %49, metadata !1665, metadata !DIExpression()), !dbg !1672
  %50 = add nsw i32 %24, 1, !dbg !1717
  call void @llvm.dbg.value(metadata i32 %50, metadata !1669, metadata !DIExpression()), !dbg !1672
  %51 = add nsw i32 %31, -48, !dbg !1718
  %52 = sitofp i32 %51 to double, !dbg !1719
  %53 = fdiv double %52, %49, !dbg !1720
  %54 = fadd double %29, %53, !dbg !1721
  call void @llvm.dbg.value(metadata double %54, metadata !1663, metadata !DIExpression()), !dbg !1672
  br label %64

55:                                               ; preds = %22
  %56 = icmp eq i8 %23, 46, !dbg !1722
  br i1 %56, label %57, label %59, !dbg !1724

57:                                               ; preds = %55
  %58 = add nsw i32 %26, 1, !dbg !1725
  call void @llvm.dbg.value(metadata i32 %58, metadata !1666, metadata !DIExpression()), !dbg !1672
  br label %64, !dbg !1727

59:                                               ; preds = %55
  %60 = call i32 @tolower(i32 %31) #19, !dbg !1728
  %61 = icmp eq i32 %60, 101, !dbg !1730
  br i1 %61, label %62, label %77, !dbg !1731

62:                                               ; preds = %59
  %63 = add nsw i32 %25, 1, !dbg !1732
  call void @llvm.dbg.value(metadata i32 %63, metadata !1667, metadata !DIExpression()), !dbg !1672
  br label %64

64:                                               ; preds = %57, %62, %36, %48, %43
  %65 = phi double [ %29, %36 ], [ %54, %48 ], [ %47, %43 ], [ %29, %57 ], [ %29, %62 ], !dbg !1672
  %66 = phi double [ %40, %36 ], [ %28, %48 ], [ %28, %43 ], [ %28, %57 ], [ %28, %62 ], !dbg !1672
  %67 = phi double [ %27, %36 ], [ %49, %48 ], [ %27, %43 ], [ %27, %57 ], [ %27, %62 ], !dbg !1672
  %68 = phi i32 [ %26, %36 ], [ %26, %48 ], [ 0, %43 ], [ %58, %57 ], [ %26, %62 ], !dbg !1672
  %69 = phi i32 [ %25, %36 ], [ 0, %48 ], [ 0, %43 ], [ %25, %57 ], [ %63, %62 ], !dbg !1672
  %70 = phi i32 [ %24, %36 ], [ %50, %48 ], [ %24, %43 ], [ %24, %57 ], [ %24, %62 ], !dbg !1672
  call void @llvm.dbg.value(metadata i32 %70, metadata !1669, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i32 %69, metadata !1667, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata i32 %68, metadata !1666, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double %67, metadata !1665, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double %66, metadata !1664, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double %65, metadata !1663, metadata !DIExpression()), !dbg !1672
  %71 = icmp sgt i32 %68, 1, !dbg !1734
  %72 = icmp sgt i32 %69, 1, !dbg !1736
  %73 = or i1 %71, %72, !dbg !1737
  br i1 %73, label %77, label %74, !dbg !1737

74:                                               ; preds = %64
  %75 = icmp sgt i32 %70, 4, !dbg !1738
  %76 = getelementptr inbounds i8, i8* %30, i64 1, !dbg !1740
  call void @llvm.dbg.value(metadata i8* %76, metadata !1660, metadata !DIExpression()), !dbg !1672
  br i1 %75, label %78, label %19, !dbg !1741

77:                                               ; preds = %64, %59, %8, %5, %10, %3
  call void @llvm.dbg.label(metadata !1670), !dbg !1742
  store i32 1, i32* %2, align 4, !dbg !1743, !tbaa !295
  br label %89, !dbg !1744

78:                                               ; preds = %74, %19, %14
  %79 = phi double [ 0.000000e+00, %14 ], [ %65, %19 ], [ %65, %74 ], !dbg !1745
  %80 = phi double [ 0.000000e+00, %14 ], [ %66, %19 ], [ %66, %74 ], !dbg !1672
  %81 = phi i32 [ 0, %14 ], [ %69, %19 ], [ %69, %74 ], !dbg !1746
  call void @llvm.dbg.value(metadata i32 %81, metadata !1667, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double %80, metadata !1664, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.value(metadata double %79, metadata !1663, metadata !DIExpression()), !dbg !1672
  call void @llvm.dbg.label(metadata !1671), !dbg !1747
  %82 = icmp eq i32 %81, 0, !dbg !1748
  br i1 %82, label %86, label %83, !dbg !1750

83:                                               ; preds = %78
  %84 = call double @pow(double 1.000000e+01, double %80) #18, !dbg !1751
  %85 = fmul double %79, %84, !dbg !1752
  call void @llvm.dbg.value(metadata double %85, metadata !1663, metadata !DIExpression()), !dbg !1672
  br label %86, !dbg !1753

86:                                               ; preds = %78, %83
  %87 = phi double [ %85, %83 ], [ %79, %78 ], !dbg !1672
  call void @llvm.dbg.value(metadata double %87, metadata !1663, metadata !DIExpression()), !dbg !1672
  %88 = fmul double %16, %87, !dbg !1754
  br label %89, !dbg !1755

89:                                               ; preds = %86, %77
  %90 = phi double [ 0.000000e+00, %77 ], [ %88, %86 ], !dbg !1672
  ret double %90, !dbg !1756
}

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) local_unnamed_addr #9

; Function Attrs: nounwind uwtable
define dso_local i8* @ftoa(double %0, i8* %1, i64 %2) local_unnamed_addr #3 !dbg !1757 {
  call void @llvm.dbg.value(metadata double %0, metadata !1761, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata i8* %1, metadata !1762, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata i64 %2, metadata !1763, metadata !DIExpression()), !dbg !1773
  %4 = icmp ult i64 %2, 2, !dbg !1774
  br i1 %4, label %71, label %5, !dbg !1776

5:                                                ; preds = %3
  %6 = call double @llvm.fabs.f64(double %0) #21, !dbg !1777
  %7 = fcmp oeq double %6, 0x7FF0000000000000, !dbg !1777
  %8 = fcmp uno double %0, 0.000000e+00, !dbg !1779
  %9 = or i1 %8, %7, !dbg !1780
  br i1 %9, label %71, label %10, !dbg !1780

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i64 0, metadata !1764, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata i32 0, metadata !1765, metadata !DIExpression()), !dbg !1773
  %11 = fcmp olt double %0, 0.000000e+00, !dbg !1781
  br i1 %11, label %12, label %14, !dbg !1783

12:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 1, metadata !1765, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata i64 1, metadata !1764, metadata !DIExpression()), !dbg !1773
  store i8 45, i8* %1, align 1, !dbg !1784, !tbaa !333
  %13 = fsub double -0.000000e+00, %0, !dbg !1786
  call void @llvm.dbg.value(metadata double %13, metadata !1761, metadata !DIExpression()), !dbg !1773
  br label %14, !dbg !1787

14:                                               ; preds = %12, %10
  %15 = phi i64 [ 1, %12 ], [ 0, %10 ], !dbg !1773
  %16 = phi double [ %13, %12 ], [ %0, %10 ]
  call void @llvm.dbg.value(metadata double %16, metadata !1761, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata i64 %15, metadata !1764, metadata !DIExpression()), !dbg !1773
  %17 = icmp eq i64 %15, %2, !dbg !1788
  br i1 %17, label %71, label %18, !dbg !1790

18:                                               ; preds = %14
  %19 = call double @remainder(double %16, double 1.000000e-03) #18, !dbg !1791
  %20 = fmul double %19, 1.000000e+04, !dbg !1792
  call void @llvm.dbg.value(metadata double %20, metadata !1766, metadata !DIExpression()), !dbg !1773
  %21 = fcmp ogt double %20, 5.000000e+00, !dbg !1793
  br i1 %21, label %26, label %22, !dbg !1795

22:                                               ; preds = %18
  %23 = fcmp olt double %20, 0.000000e+00, !dbg !1796
  %24 = fcmp ogt double %20, -5.000000e+00, !dbg !1797
  %25 = and i1 %23, %24, !dbg !1798
  br i1 %25, label %26, label %28, !dbg !1798

26:                                               ; preds = %22, %18
  %27 = fadd double %16, 5.000000e-04, !dbg !1799
  call void @llvm.dbg.value(metadata double %27, metadata !1761, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata double %27, metadata !1761, metadata !DIExpression()), !dbg !1773
  br label %28, !dbg !1799

28:                                               ; preds = %26, %22
  %29 = phi double [ %16, %22 ], [ %27, %26 ], !dbg !1773
  call void @llvm.dbg.value(metadata double %29, metadata !1761, metadata !DIExpression()), !dbg !1773
  %30 = fcmp oeq double %29, 0.000000e+00, !dbg !1801
  br i1 %30, label %34, label %31, !dbg !1802

31:                                               ; preds = %28
  %32 = call double @log10(double %29) #18, !dbg !1803
  %33 = fptosi double %32 to i32, !dbg !1802
  br label %34, !dbg !1802

34:                                               ; preds = %28, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %28 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !1767, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata i32 undef, metadata !1767, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata double %29, metadata !1761, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata i64 %15, metadata !1764, metadata !DIExpression()), !dbg !1773
  %36 = icmp eq i64 %15, %2, !dbg !1804
  br i1 %36, label %66, label %37, !dbg !1806

37:                                               ; preds = %34
  %38 = icmp sgt i32 %35, 0, !dbg !1807
  %39 = select i1 %38, i32 %35, i32 0, !dbg !1807
  call void @llvm.dbg.value(metadata i32 %39, metadata !1767, metadata !DIExpression()), !dbg !1773
  br label %40, !dbg !1806

40:                                               ; preds = %37, %49
  %41 = phi double [ %57, %49 ], [ %29, %37 ]
  %42 = phi i32 [ %62, %49 ], [ %39, %37 ]
  %43 = phi i64 [ %60, %49 ], [ %15, %37 ]
  call void @llvm.dbg.value(metadata double %41, metadata !1761, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata i32 %42, metadata !1767, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata i64 %43, metadata !1764, metadata !DIExpression()), !dbg !1773
  %44 = icmp eq i32 %42, -1, !dbg !1808
  br i1 %44, label %45, label %49, !dbg !1810

45:                                               ; preds = %40
  %46 = add i64 %43, 1, !dbg !1811
  call void @llvm.dbg.value(metadata i64 %46, metadata !1764, metadata !DIExpression()), !dbg !1773
  %47 = getelementptr inbounds i8, i8* %1, i64 %43, !dbg !1813
  store i8 46, i8* %47, align 1, !dbg !1814, !tbaa !333
  %48 = icmp eq i64 %46, %2, !dbg !1815
  br i1 %48, label %66, label %49, !dbg !1817

49:                                               ; preds = %45, %40
  %50 = phi i64 [ %46, %45 ], [ %43, %40 ], !dbg !1773
  call void @llvm.dbg.value(metadata i64 %50, metadata !1764, metadata !DIExpression()), !dbg !1773
  %51 = sitofp i32 %42 to double, !dbg !1818
  %52 = call double @pow(double 1.000000e+01, double %51) #18, !dbg !1819
  call void @llvm.dbg.value(metadata double %52, metadata !1768, metadata !DIExpression()), !dbg !1820
  %53 = fdiv double %41, %52, !dbg !1821
  %54 = fptosi double %53 to i32, !dbg !1822
  call void @llvm.dbg.value(metadata i32 %54, metadata !1772, metadata !DIExpression()), !dbg !1820
  %55 = sitofp i32 %54 to double, !dbg !1823
  %56 = fmul double %52, %55, !dbg !1824
  %57 = fsub double %41, %56, !dbg !1825
  call void @llvm.dbg.value(metadata double %57, metadata !1761, metadata !DIExpression()), !dbg !1773
  %58 = trunc i32 %54 to i8, !dbg !1826
  %59 = add i8 %58, 48, !dbg !1826
  %60 = add i64 %50, 1, !dbg !1827
  call void @llvm.dbg.value(metadata i64 %60, metadata !1764, metadata !DIExpression()), !dbg !1773
  %61 = getelementptr inbounds i8, i8* %1, i64 %50, !dbg !1828
  store i8 %59, i8* %61, align 1, !dbg !1829, !tbaa !333
  %62 = add nsw i32 %42, -1, !dbg !1830
  call void @llvm.dbg.value(metadata i32 %62, metadata !1767, metadata !DIExpression()), !dbg !1773
  %63 = icmp slt i32 %42, -2, !dbg !1831
  %64 = icmp eq i64 %60, %2, !dbg !1804
  %65 = or i1 %64, %63, !dbg !1806
  br i1 %65, label %66, label %40, !dbg !1806, !llvm.loop !1832

66:                                               ; preds = %45, %49, %34
  %67 = phi i64 [ %15, %34 ], [ %46, %45 ], [ %60, %49 ], !dbg !1773
  call void @llvm.dbg.value(metadata i64 %67, metadata !1764, metadata !DIExpression()), !dbg !1773
  %68 = icmp eq i64 %67, %2, !dbg !1834
  br i1 %68, label %71, label %69, !dbg !1836

69:                                               ; preds = %66
  %70 = getelementptr inbounds i8, i8* %1, i64 %67, !dbg !1837
  store i8 0, i8* %70, align 1, !dbg !1838, !tbaa !333
  br label %71, !dbg !1839

71:                                               ; preds = %14, %66, %69, %5, %3
  %72 = phi i8* [ null, %3 ], [ null, %5 ], [ null, %14 ], [ %1, %69 ], [ null, %66 ], !dbg !1773
  ret i8* %72, !dbg !1840
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind
declare dso_local double @remainder(double, double) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare dso_local double @log10(double) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @strtrim(i8* nocapture %0, i64 %1, i32 %2) local_unnamed_addr #3 !dbg !1841 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1845, metadata !DIExpression()), !dbg !1853
  call void @llvm.dbg.value(metadata i64 %1, metadata !1846, metadata !DIExpression()), !dbg !1853
  call void @llvm.dbg.value(metadata i32 %2, metadata !1847, metadata !DIExpression()), !dbg !1853
  %4 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !1854
  %5 = trunc i64 %4 to i32, !dbg !1854
  %6 = add i32 %5, 1, !dbg !1854
  call void @llvm.dbg.value(metadata i32 %6, metadata !1849, metadata !DIExpression()), !dbg !1853
  %7 = sext i32 %6 to i64, !dbg !1855
  %8 = icmp ugt i64 %7, %1, !dbg !1857
  br i1 %8, label %57, label %9, !dbg !1858

9:                                                ; preds = %3
  %10 = icmp eq i32 %5, 0, !dbg !1859
  br i1 %10, label %57, label %11, !dbg !1861

11:                                               ; preds = %9
  %12 = or i32 %2, 2, !dbg !1862
  %13 = icmp eq i32 %12, 3, !dbg !1862
  %14 = icmp sgt i32 %6, 0, !dbg !1863
  %15 = and i1 %13, %14, !dbg !1862
  call void @llvm.dbg.value(metadata i8* %0, metadata !1850, metadata !DIExpression()), !dbg !1866
  call void @llvm.dbg.value(metadata i32 0, metadata !1848, metadata !DIExpression()), !dbg !1853
  br i1 %15, label %16, label %33, !dbg !1862

16:                                               ; preds = %11, %29
  %17 = phi i8* [ %31, %29 ], [ %0, %11 ]
  %18 = phi i32 [ %30, %29 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !1850, metadata !DIExpression()), !dbg !1866
  call void @llvm.dbg.value(metadata i32 %18, metadata !1848, metadata !DIExpression()), !dbg !1853
  %19 = load i8, i8* %17, align 1, !dbg !1867, !tbaa !333
  %20 = zext i8 %19 to i64, !dbg !1867
  %21 = icmp ugt i8 %19, 63, !dbg !1870
  %22 = shl i64 1, %20, !dbg !1870
  %23 = and i64 %22, 4294977025, !dbg !1870
  %24 = icmp eq i64 %23, 0, !dbg !1870
  %25 = or i1 %21, %24, !dbg !1871
  br i1 %25, label %26, label %29, !dbg !1872

26:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i8* %17, metadata !1850, metadata !DIExpression()), !dbg !1866
  call void @llvm.dbg.value(metadata i32 %18, metadata !1848, metadata !DIExpression()), !dbg !1853
  call void @llvm.dbg.value(metadata i8* %17, metadata !1850, metadata !DIExpression()), !dbg !1866
  call void @llvm.dbg.value(metadata i32 %18, metadata !1848, metadata !DIExpression()), !dbg !1853
  call void @llvm.dbg.value(metadata i8* %17, metadata !1850, metadata !DIExpression()), !dbg !1866
  call void @llvm.dbg.value(metadata i32 %18, metadata !1848, metadata !DIExpression()), !dbg !1853
  call void @llvm.dbg.value(metadata i32 %18, metadata !1848, metadata !DIExpression()), !dbg !1853
  call void @llvm.dbg.value(metadata i8* %17, metadata !1850, metadata !DIExpression()), !dbg !1866
  %27 = sub nsw i32 %6, %18, !dbg !1873
  %28 = sext i32 %27 to i64, !dbg !1875
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* nonnull align 1 %17, i64 %28, i1 false), !dbg !1876
  br label %33, !dbg !1877

29:                                               ; preds = %16
  %30 = add nuw nsw i32 %18, 1, !dbg !1878
  call void @llvm.dbg.value(metadata i32 %30, metadata !1848, metadata !DIExpression()), !dbg !1853
  %31 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !1879
  call void @llvm.dbg.value(metadata i8* %31, metadata !1850, metadata !DIExpression()), !dbg !1866
  %32 = icmp eq i32 %18, %5, !dbg !1863
  br i1 %32, label %33, label %16, !dbg !1880, !llvm.loop !1881

33:                                               ; preds = %29, %26, %11
  %34 = or i32 %2, 1, !dbg !1883
  %35 = icmp eq i32 %34, 3, !dbg !1883
  br i1 %35, label %36, label %57, !dbg !1883

36:                                               ; preds = %33, %53
  %37 = phi i32 [ %38, %53 ], [ %5, %33 ]
  %38 = add i32 %37, -1, !dbg !1885
  call void @llvm.dbg.value(metadata i32 %38, metadata !1848, metadata !DIExpression()), !dbg !1853
  %39 = icmp sgt i32 %38, -1, !dbg !1888
  br i1 %39, label %40, label %57, !dbg !1890

40:                                               ; preds = %36
  %41 = sext i32 %38 to i64, !dbg !1891
  %42 = getelementptr inbounds i8, i8* %0, i64 %41, !dbg !1891
  %43 = load i8, i8* %42, align 1, !dbg !1891, !tbaa !333
  %44 = zext i8 %43 to i64, !dbg !1891
  %45 = icmp ugt i8 %43, 63, !dbg !1894
  %46 = shl i64 1, %44, !dbg !1894
  %47 = and i64 %46, 4294977025, !dbg !1894
  %48 = icmp eq i64 %47, 0, !dbg !1894
  %49 = or i1 %45, %48, !dbg !1895
  br i1 %49, label %50, label %53, !dbg !1896

50:                                               ; preds = %40
  %51 = sext i32 %37 to i64, !dbg !1897
  %52 = getelementptr inbounds i8, i8* %0, i64 %51, !dbg !1897
  store i8 0, i8* %52, align 1, !dbg !1899, !tbaa !333
  br label %57, !dbg !1900

53:                                               ; preds = %40
  %54 = icmp eq i32 %38, 0, !dbg !1901
  br i1 %54, label %55, label %36, !dbg !1903, !llvm.loop !1904

55:                                               ; preds = %53
  %56 = getelementptr inbounds i8, i8* %0, i64 %41, !dbg !1891
  store i8 0, i8* %56, align 1, !dbg !1906, !tbaa !333
  br label %57, !dbg !1908

57:                                               ; preds = %36, %33, %55, %50, %9, %3
  %58 = phi i32 [ -1, %3 ], [ 0, %9 ], [ 0, %50 ], [ 0, %55 ], [ 0, %33 ], [ 0, %36 ], !dbg !1853
  ret i32 %58, !dbg !1909
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @valid_cell_id(i8* nocapture readonly %0) local_unnamed_addr #8 !dbg !1910 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1912, metadata !DIExpression()), !dbg !1919
  %2 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !1920
  %3 = icmp ult i64 %2, 2, !dbg !1922
  br i1 %3, label %44, label %4, !dbg !1923

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 0, metadata !1913, metadata !DIExpression()), !dbg !1919
  call void @llvm.dbg.value(metadata i64 0, metadata !1914, metadata !DIExpression()), !dbg !1919
  call void @llvm.dbg.value(metadata i8 0, metadata !1917, metadata !DIExpression()), !dbg !1919
  %5 = load i8, i8* %0, align 1, !dbg !1924, !tbaa !333
  %6 = sext i8 %5 to i32, !dbg !1924
  %7 = call i32 @toupper(i32 %6) #19, !dbg !1925
  call void @llvm.dbg.value(metadata i32 %7, metadata !1918, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1919
  %8 = shl i32 %7, 24, !dbg !1926
  %9 = add i32 %8, -1090519040, !dbg !1928
  %10 = icmp ugt i32 %9, 419430400, !dbg !1928
  br i1 %10, label %44, label %11, !dbg !1928

11:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 %7, metadata !1915, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value, DW_OP_LLVM_fragment, 0, 8)), !dbg !1919
  %12 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1929
  %13 = load i8, i8* %12, align 1, !dbg !1929, !tbaa !333
  %14 = sext i8 %13 to i32, !dbg !1929
  %15 = call i32 @toupper(i32 %14) #19, !dbg !1930
  call void @llvm.dbg.value(metadata i32 %15, metadata !1918, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1919
  %16 = shl i32 %15, 24, !dbg !1931
  %17 = add i32 %16, -1073741825, !dbg !1933
  %18 = icmp ult i32 %17, 452984831, !dbg !1933
  %19 = add i32 %16, -788529153, !dbg !1934
  %20 = icmp ult i32 %19, 184549375, !dbg !1934
  %21 = or i1 %18, %20, !dbg !1933
  br i1 %21, label %22, label %44, !dbg !1933

22:                                               ; preds = %11
  %23 = add i32 %16, -788529153, !dbg !1935
  %24 = icmp ult i32 %23, 184549375, !dbg !1935
  %25 = zext i1 %24 to i64, !dbg !1935
  call void @llvm.dbg.value(metadata i64 %25, metadata !1914, metadata !DIExpression()), !dbg !1919
  call void @llvm.dbg.value(metadata i64 2, metadata !1913, metadata !DIExpression()), !dbg !1919
  br label %26, !dbg !1937

26:                                               ; preds = %40, %22
  %27 = phi i64 [ 2, %22 ], [ %42, %40 ]
  %28 = phi i64 [ %25, %22 ], [ %41, %40 ]
  call void @llvm.dbg.value(metadata i64 %27, metadata !1913, metadata !DIExpression()), !dbg !1919
  call void @llvm.dbg.value(metadata i64 %28, metadata !1914, metadata !DIExpression()), !dbg !1919
  %29 = getelementptr inbounds i8, i8* %0, i64 %27, !dbg !1939
  %30 = load i8, i8* %29, align 1, !dbg !1939, !tbaa !333
  %31 = icmp eq i8 %30, 0, !dbg !1943
  %32 = icmp ne i64 %28, 0, !dbg !1944
  %33 = and i1 %32, %31, !dbg !1945
  br i1 %33, label %44, label %34, !dbg !1945

34:                                               ; preds = %26
  %35 = icmp sgt i8 %30, 47, !dbg !1946
  br i1 %35, label %36, label %44, !dbg !1948

36:                                               ; preds = %34
  %37 = icmp slt i8 %30, 58, !dbg !1949
  %38 = icmp ult i64 %28, 2, !dbg !1950
  %39 = and i1 %38, %37, !dbg !1951
  br i1 %39, label %40, label %44, !dbg !1951

40:                                               ; preds = %36
  %41 = add nuw nsw i64 %28, 1, !dbg !1952
  call void @llvm.dbg.value(metadata i64 %41, metadata !1914, metadata !DIExpression()), !dbg !1919
  call void @llvm.dbg.value(metadata i8 undef, metadata !1916, metadata !DIExpression()), !dbg !1919
  %42 = add nuw nsw i64 %27, 1, !dbg !1954
  call void @llvm.dbg.value(metadata i64 %42, metadata !1913, metadata !DIExpression()), !dbg !1919
  %43 = icmp eq i64 %42, 5, !dbg !1955
  br i1 %43, label %44, label %26, !dbg !1937, !llvm.loop !1956

44:                                               ; preds = %26, %36, %34, %40, %11, %4, %1
  %45 = phi i32 [ -1, %1 ], [ -1, %4 ], [ -1, %11 ], [ 0, %26 ], [ -1, %36 ], [ -1, %34 ], [ -1, %40 ], !dbg !1919
  ret i32 %45, !dbg !1958
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @get_rowcol(i8* nocapture readonly %0, i8* nocapture %1, i8* nocapture %2, i8 signext %3) local_unnamed_addr #0 !dbg !1959 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1961, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.value(metadata i8* %1, metadata !1962, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.value(metadata i8* %2, metadata !1963, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.value(metadata i8 %3, metadata !1964, metadata !DIExpression()), !dbg !1968
  %5 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !1969
  %6 = icmp ult i64 %5, 2, !dbg !1971
  br i1 %6, label %57, label %7, !dbg !1972

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i64 0, metadata !1965, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.value(metadata i64 0, metadata !1966, metadata !DIExpression()), !dbg !1968
  %8 = load i8, i8* %0, align 1, !dbg !1973, !tbaa !333
  %9 = sext i8 %8 to i32, !dbg !1973
  %10 = call i32 @toupper(i32 %9) #19, !dbg !1974
  call void @llvm.dbg.value(metadata i32 %10, metadata !1967, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1968
  %11 = shl i32 %10, 24, !dbg !1975
  %12 = add i32 %11, -1090519040, !dbg !1977
  %13 = icmp ugt i32 %12, 419430400, !dbg !1977
  br i1 %13, label %57, label %14, !dbg !1977

14:                                               ; preds = %7
  %15 = trunc i32 %10 to i8, !dbg !1974
  call void @llvm.dbg.value(metadata i8 %15, metadata !1967, metadata !DIExpression()), !dbg !1968
  store i8 %15, i8* %1, align 1, !dbg !1978, !tbaa !333
  %16 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1979
  %17 = load i8, i8* %16, align 1, !dbg !1979, !tbaa !333
  %18 = sext i8 %17 to i32, !dbg !1979
  %19 = call i32 @toupper(i32 %18) #19, !dbg !1980
  call void @llvm.dbg.value(metadata i32 %19, metadata !1967, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1968
  %20 = shl i32 %19, 24, !dbg !1981
  %21 = add i32 %20, -1073741825, !dbg !1983
  %22 = icmp ult i32 %21, 452984831, !dbg !1983
  %23 = add i32 %20, -788529153, !dbg !1984
  %24 = icmp ult i32 %23, 184549375, !dbg !1984
  %25 = or i1 %22, %24, !dbg !1983
  br i1 %25, label %26, label %57, !dbg !1983

26:                                               ; preds = %14
  %27 = trunc i32 %19 to i8, !dbg !1980
  call void @llvm.dbg.value(metadata i8 %27, metadata !1967, metadata !DIExpression()), !dbg !1968
  %28 = add i32 %20, -788529153, !dbg !1985
  %29 = icmp ult i32 %28, 184549375, !dbg !1985
  %30 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1985
  %31 = select i1 %29, i8* %2, i8* %30, !dbg !1985
  %32 = select i1 %29, i64 1, i64 2, !dbg !1985
  %33 = zext i1 %29 to i64, !dbg !1985
  store i8 %27, i8* %31, align 1, !dbg !1987, !tbaa !333
  %34 = getelementptr inbounds i8, i8* %1, i64 %32, !dbg !1987
  store i8 0, i8* %34, align 1, !dbg !1987, !tbaa !333
  call void @llvm.dbg.value(metadata i64 %33, metadata !1966, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.value(metadata i64 2, metadata !1965, metadata !DIExpression()), !dbg !1968
  br label %35, !dbg !1988

35:                                               ; preds = %51, %26
  %36 = phi i64 [ %33, %26 ], [ %52, %51 ]
  %37 = phi i64 [ 2, %26 ], [ %54, %51 ]
  call void @llvm.dbg.value(metadata i64 %36, metadata !1966, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.value(metadata i64 %37, metadata !1965, metadata !DIExpression()), !dbg !1968
  %38 = getelementptr inbounds i8, i8* %0, i64 %37, !dbg !1990
  %39 = load i8, i8* %38, align 1, !dbg !1990, !tbaa !333
  %40 = icmp eq i8 %39, %3, !dbg !1994
  %41 = icmp ne i64 %36, 0, !dbg !1995
  %42 = and i1 %41, %40, !dbg !1996
  br i1 %42, label %43, label %45, !dbg !1996

43:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i64 %36, metadata !1966, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.value(metadata i64 %36, metadata !1966, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.value(metadata i64 %36, metadata !1966, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.value(metadata i64 %36, metadata !1966, metadata !DIExpression()), !dbg !1968
  %44 = getelementptr inbounds i8, i8* %2, i64 %36, !dbg !1997
  store i8 0, i8* %44, align 1, !dbg !1999, !tbaa !333
  br label %57, !dbg !2000

45:                                               ; preds = %35
  %46 = icmp sgt i8 %39, 47, !dbg !2001
  br i1 %46, label %47, label %57, !dbg !2003

47:                                               ; preds = %45
  %48 = icmp slt i8 %39, 58, !dbg !2004
  %49 = icmp ult i64 %36, 2, !dbg !2005
  %50 = and i1 %49, %48, !dbg !2006
  br i1 %50, label %51, label %57, !dbg !2006

51:                                               ; preds = %47
  %52 = add nuw nsw i64 %36, 1, !dbg !2007
  call void @llvm.dbg.value(metadata i64 %52, metadata !1966, metadata !DIExpression()), !dbg !1968
  %53 = getelementptr inbounds i8, i8* %2, i64 %36, !dbg !2009
  store i8 %39, i8* %53, align 1, !dbg !2010, !tbaa !333
  %54 = add nuw nsw i64 %37, 1, !dbg !2011
  call void @llvm.dbg.value(metadata i64 %54, metadata !1965, metadata !DIExpression()), !dbg !1968
  %55 = or i64 %33, 2, !dbg !2012
  %56 = icmp eq i64 %36, %55, !dbg !2012
  br i1 %56, label %57, label %35, !dbg !1988, !llvm.loop !2013

57:                                               ; preds = %47, %45, %51, %14, %43, %7, %4
  %58 = phi i32 [ -1, %4 ], [ 0, %43 ], [ -1, %7 ], [ -1, %14 ], [ -1, %51 ], [ -1, %45 ], [ -1, %47 ], !dbg !1968
  ret i32 %58, !dbg !2015
}

; Function Attrs: nounwind uwtable
define dso_local i32 @sanitize_formula(i8* nocapture %0, i64 %1) local_unnamed_addr #3 !dbg !2016 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2020, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i64 %1, metadata !2021, metadata !DIExpression()), !dbg !2026
  %3 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !2027
  call void @llvm.dbg.value(metadata i64 %3, metadata !2024, metadata !DIExpression()), !dbg !2026
  %4 = icmp ugt i64 %3, %1, !dbg !2028
  br i1 %4, label %29, label %5, !dbg !2030

5:                                                ; preds = %2
  %6 = call i8* @calloc(i64 1, i64 %1), !dbg !2031
  call void @llvm.dbg.value(metadata i8* %6, metadata !2025, metadata !DIExpression()), !dbg !2026
  %7 = icmp eq i8* %6, null, !dbg !2032
  br i1 %7, label %29, label %8, !dbg !2034

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 0, metadata !2022, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i64 0, metadata !2023, metadata !DIExpression()), !dbg !2026
  %9 = icmp eq i64 %3, 0, !dbg !2035
  br i1 %9, label %28, label %10, !dbg !2038

10:                                               ; preds = %8, %24
  %11 = phi i64 [ %26, %24 ], [ 0, %8 ]
  %12 = phi i64 [ %25, %24 ], [ 0, %8 ]
  call void @llvm.dbg.value(metadata i64 %11, metadata !2022, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i64 %12, metadata !2023, metadata !DIExpression()), !dbg !2026
  %13 = getelementptr inbounds i8, i8* %0, i64 %11, !dbg !2039
  %14 = load i8, i8* %13, align 1, !dbg !2039, !tbaa !333
  %15 = zext i8 %14 to i64, !dbg !2039
  %16 = icmp ugt i8 %14, 63, !dbg !2042
  %17 = shl i64 1, %15, !dbg !2042
  %18 = and i64 %17, 4294977025, !dbg !2042
  %19 = icmp eq i64 %18, 0, !dbg !2042
  %20 = or i1 %16, %19, !dbg !2043
  br i1 %20, label %21, label %24, !dbg !2044

21:                                               ; preds = %10
  %22 = add i64 %12, 1, !dbg !2045
  call void @llvm.dbg.value(metadata i64 %22, metadata !2023, metadata !DIExpression()), !dbg !2026
  %23 = getelementptr inbounds i8, i8* %6, i64 %12, !dbg !2046
  store i8 %14, i8* %23, align 1, !dbg !2047, !tbaa !333
  br label %24, !dbg !2046

24:                                               ; preds = %10, %21
  %25 = phi i64 [ %22, %21 ], [ %12, %10 ], !dbg !2048
  call void @llvm.dbg.value(metadata i64 %25, metadata !2023, metadata !DIExpression()), !dbg !2026
  %26 = add nuw i64 %11, 1, !dbg !2049
  call void @llvm.dbg.value(metadata i64 %26, metadata !2022, metadata !DIExpression()), !dbg !2026
  %27 = icmp eq i64 %26, %3, !dbg !2035
  br i1 %27, label %28, label %10, !dbg !2038, !llvm.loop !2050

28:                                               ; preds = %24, %8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* nonnull align 1 %6, i64 %1, i1 false), !dbg !2052
  call void @free(i8* %6), !dbg !2053
  br label %29, !dbg !2054

29:                                               ; preds = %28, %5, %2
  %30 = phi i32 [ -1, %2 ], [ 0, %28 ], [ -1, %5 ], !dbg !2026
  ret i32 %30, !dbg !2055
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_avg(%struct.stack** %0, i32* %1) #3 !dbg !2056 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2061, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.value(metadata i32* %1, metadata !2062, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.value(metadata i64 0, metadata !2063, metadata !DIExpression()), !dbg !2069
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2070, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2072
  br i1 %4, label %22, label %5, !dbg !2073

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2064, metadata !DIExpression()), !dbg !2069
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2074
  call void @llvm.dbg.value(metadata i8* %6, metadata !2066, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.value(metadata i64 0, metadata !2063, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2064, metadata !DIExpression()), !dbg !2069
  %7 = icmp eq i8* %6, null, !dbg !2075
  br i1 %7, label %24, label %8, !dbg !2076

8:                                                ; preds = %5, %17
  %9 = phi i8* [ %19, %17 ], [ %6, %5 ]
  %10 = phi i64 [ %20, %17 ], [ 0, %5 ]
  %11 = phi double [ %18, %17 ], [ 0.000000e+00, %5 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !2066, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.value(metadata i64 %10, metadata !2063, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.value(metadata double %11, metadata !2064, metadata !DIExpression()), !dbg !2069
  %12 = call i64 @strlen(i8* nonnull %9), !dbg !2077
  %13 = add i64 %12, 1, !dbg !2079
  %14 = call double @atof(i8* nonnull %9, i64 %13, i32* %1) #18, !dbg !2080
  call void @llvm.dbg.value(metadata double %14, metadata !2065, metadata !DIExpression()), !dbg !2069
  call void @free(i8* %9), !dbg !2081
  %15 = load i32, i32* %1, align 4, !dbg !2082, !tbaa !295
  %16 = icmp eq i32 %15, 0, !dbg !2082
  br i1 %16, label %17, label %22, !dbg !2084

17:                                               ; preds = %8
  %18 = fadd double %11, %14, !dbg !2085
  call void @llvm.dbg.value(metadata double %18, metadata !2064, metadata !DIExpression()), !dbg !2069
  %19 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2086
  call void @llvm.dbg.value(metadata i8* %19, metadata !2066, metadata !DIExpression()), !dbg !2069
  %20 = add i64 %10, 1, !dbg !2087
  call void @llvm.dbg.value(metadata i64 %20, metadata !2063, metadata !DIExpression()), !dbg !2069
  %21 = icmp eq i8* %19, null, !dbg !2075
  br i1 %21, label %24, label %8, !dbg !2076, !llvm.loop !2088

22:                                               ; preds = %8, %24, %2
  %23 = phi i64 [ 0, %2 ], [ 1, %24 ], [ %10, %8 ], !dbg !2069
  call void @llvm.dbg.value(metadata i64 %23, metadata !2063, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.label(metadata !2067), !dbg !2090
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2091
  store i32 1, i32* %1, align 4, !dbg !2092, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2064, metadata !DIExpression()), !dbg !2069
  br label %24, !dbg !2093

24:                                               ; preds = %17, %5, %22
  %25 = phi double [ 0.000000e+00, %22 ], [ 0.000000e+00, %5 ], [ %18, %17 ], !dbg !2069
  %26 = phi i64 [ %23, %22 ], [ 0, %5 ], [ %20, %17 ], !dbg !2094
  call void @llvm.dbg.value(metadata i64 %26, metadata !2063, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.value(metadata double %25, metadata !2064, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.label(metadata !2068), !dbg !2095
  %27 = icmp eq i64 %26, 0, !dbg !2096
  br i1 %27, label %22, label %28, !dbg !2098

28:                                               ; preds = %24
  %29 = uitofp i64 %26 to double, !dbg !2099
  %30 = fdiv double %25, %29, !dbg !2100
  ret double %30, !dbg !2101
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_count(%struct.stack** %0, i32* %1) #3 !dbg !2102 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2104, metadata !DIExpression()), !dbg !2112
  call void @llvm.dbg.value(metadata i32* %1, metadata !2105, metadata !DIExpression()), !dbg !2112
  call void @llvm.dbg.value(metadata i64 0, metadata !2106, metadata !DIExpression()), !dbg !2112
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2113, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2115
  br i1 %4, label %23, label %5, !dbg !2116

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2107, metadata !DIExpression()), !dbg !2112
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2117
  call void @llvm.dbg.value(metadata i8* %6, metadata !2109, metadata !DIExpression()), !dbg !2112
  call void @llvm.dbg.value(metadata i64 0, metadata !2106, metadata !DIExpression()), !dbg !2112
  %7 = icmp eq i8* %6, null, !dbg !2118
  br i1 %7, label %20, label %8, !dbg !2119

8:                                                ; preds = %5, %16
  %9 = phi i8* [ %17, %16 ], [ %6, %5 ]
  %10 = phi i64 [ %18, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !2109, metadata !DIExpression()), !dbg !2112
  call void @llvm.dbg.value(metadata i64 %10, metadata !2106, metadata !DIExpression()), !dbg !2112
  %11 = call i64 @strlen(i8* nonnull %9), !dbg !2120
  %12 = add i64 %11, 1, !dbg !2122
  %13 = call double @atof(i8* nonnull %9, i64 %12, i32* %1) #18, !dbg !2123
  call void @llvm.dbg.value(metadata double %13, metadata !2108, metadata !DIExpression()), !dbg !2112
  call void @free(i8* %9), !dbg !2124
  %14 = load i32, i32* %1, align 4, !dbg !2125, !tbaa !295
  %15 = icmp eq i32 %14, 0, !dbg !2125
  br i1 %15, label %16, label %23, !dbg !2127

16:                                               ; preds = %8
  %17 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2128
  call void @llvm.dbg.value(metadata i8* %17, metadata !2109, metadata !DIExpression()), !dbg !2112
  %18 = add i64 %10, 1, !dbg !2129
  call void @llvm.dbg.value(metadata i64 %18, metadata !2106, metadata !DIExpression()), !dbg !2112
  %19 = icmp eq i8* %17, null, !dbg !2118
  br i1 %19, label %20, label %8, !dbg !2119, !llvm.loop !2130

20:                                               ; preds = %16, %5
  %21 = phi i64 [ 0, %5 ], [ %18, %16 ], !dbg !2112
  call void @llvm.dbg.value(metadata i64 %21, metadata !2106, metadata !DIExpression()), !dbg !2112
  %22 = uitofp i64 %21 to double, !dbg !2132
  call void @llvm.dbg.value(metadata double %22, metadata !2107, metadata !DIExpression()), !dbg !2112
  br label %25, !dbg !2133

23:                                               ; preds = %8, %25, %2
  %24 = phi i64 [ 0, %2 ], [ 1, %25 ], [ %10, %8 ], !dbg !2112
  call void @llvm.dbg.value(metadata i64 %24, metadata !2106, metadata !DIExpression()), !dbg !2112
  call void @llvm.dbg.label(metadata !2110), !dbg !2134
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2135
  store i32 1, i32* %1, align 4, !dbg !2136, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2107, metadata !DIExpression()), !dbg !2112
  br label %25, !dbg !2137

25:                                               ; preds = %23, %20
  %26 = phi double [ 0.000000e+00, %23 ], [ %22, %20 ], !dbg !2112
  %27 = phi i64 [ %24, %23 ], [ %21, %20 ], !dbg !2138
  call void @llvm.dbg.value(metadata i64 %27, metadata !2106, metadata !DIExpression()), !dbg !2112
  call void @llvm.dbg.value(metadata double %26, metadata !2107, metadata !DIExpression()), !dbg !2112
  call void @llvm.dbg.label(metadata !2111), !dbg !2139
  %28 = icmp eq i64 %27, 0, !dbg !2140
  br i1 %28, label %23, label %29, !dbg !2142

29:                                               ; preds = %25
  ret double %26, !dbg !2143
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_max(%struct.stack** %0, i32* %1) #3 !dbg !2144 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2146, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.value(metadata i32* %1, metadata !2147, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.value(metadata i64 0, metadata !2148, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2149, metadata !DIExpression()), !dbg !2154
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2155, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2157
  br i1 %4, label %34, label %5, !dbg !2158

5:                                                ; preds = %2
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2159
  call void @llvm.dbg.value(metadata i8* %6, metadata !2151, metadata !DIExpression()), !dbg !2154
  %7 = icmp eq i8* %6, null, !dbg !2160
  br i1 %7, label %14, label %8, !dbg !2162

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2163
  %10 = add i64 %9, 1, !dbg !2165
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2166
  call void @llvm.dbg.value(metadata double %11, metadata !2149, metadata !DIExpression()), !dbg !2154
  call void @free(i8* %6), !dbg !2167
  %12 = load i32, i32* %1, align 4, !dbg !2168, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2168
  br i1 %13, label %14, label %34, !dbg !2170

14:                                               ; preds = %8, %5
  %15 = phi double [ 0.000000e+00, %5 ], [ %11, %8 ], !dbg !2154
  %16 = phi i64 [ 0, %5 ], [ 1, %8 ], !dbg !2154
  call void @llvm.dbg.value(metadata i64 %16, metadata !2148, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.value(metadata double %15, metadata !2149, metadata !DIExpression()), !dbg !2154
  %17 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2171
  call void @llvm.dbg.value(metadata i8* %17, metadata !2151, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.value(metadata i64 %16, metadata !2148, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.value(metadata double %15, metadata !2149, metadata !DIExpression()), !dbg !2154
  %18 = icmp eq i8* %17, null, !dbg !2172
  br i1 %18, label %36, label %19, !dbg !2173

19:                                               ; preds = %14, %28
  %20 = phi i8* [ %31, %28 ], [ %17, %14 ]
  %21 = phi i64 [ %32, %28 ], [ %16, %14 ]
  %22 = phi double [ %30, %28 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata i8* %20, metadata !2151, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.value(metadata i64 %21, metadata !2148, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.value(metadata double %22, metadata !2149, metadata !DIExpression()), !dbg !2154
  %23 = call i64 @strlen(i8* nonnull %20), !dbg !2174
  %24 = add i64 %23, 1, !dbg !2176
  %25 = call double @atof(i8* nonnull %20, i64 %24, i32* %1) #18, !dbg !2177
  call void @llvm.dbg.value(metadata double %25, metadata !2150, metadata !DIExpression()), !dbg !2154
  call void @free(i8* %20), !dbg !2178
  %26 = load i32, i32* %1, align 4, !dbg !2179, !tbaa !295
  %27 = icmp eq i32 %26, 0, !dbg !2179
  br i1 %27, label %28, label %34, !dbg !2181

28:                                               ; preds = %19
  %29 = fcmp ogt double %25, %22, !dbg !2182
  %30 = select i1 %29, double %25, double %22, !dbg !2184
  call void @llvm.dbg.value(metadata double %30, metadata !2149, metadata !DIExpression()), !dbg !2154
  %31 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2185
  call void @llvm.dbg.value(metadata i8* %31, metadata !2151, metadata !DIExpression()), !dbg !2154
  %32 = add i64 %21, 1, !dbg !2186
  call void @llvm.dbg.value(metadata i64 %32, metadata !2148, metadata !DIExpression()), !dbg !2154
  %33 = icmp eq i8* %31, null, !dbg !2172
  br i1 %33, label %36, label %19, !dbg !2173, !llvm.loop !2187

34:                                               ; preds = %19, %36, %8, %2
  %35 = phi i64 [ 0, %2 ], [ 0, %8 ], [ 1, %36 ], [ %21, %19 ], !dbg !2154
  call void @llvm.dbg.value(metadata i64 %35, metadata !2148, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.label(metadata !2152), !dbg !2189
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2190
  store i32 1, i32* %1, align 4, !dbg !2191, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2149, metadata !DIExpression()), !dbg !2154
  br label %36, !dbg !2192

36:                                               ; preds = %28, %14, %34
  %37 = phi double [ 0.000000e+00, %34 ], [ %15, %14 ], [ %30, %28 ], !dbg !2154
  %38 = phi i64 [ %35, %34 ], [ %16, %14 ], [ %32, %28 ], !dbg !2154
  call void @llvm.dbg.value(metadata i64 %38, metadata !2148, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.value(metadata double %37, metadata !2149, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.label(metadata !2153), !dbg !2193
  %39 = icmp eq i64 %38, 0, !dbg !2194
  br i1 %39, label %34, label %40, !dbg !2196

40:                                               ; preds = %36
  ret double %37, !dbg !2197
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_median(%struct.stack** %0, i32* %1) #3 !dbg !2198 {
  %3 = alloca %struct.stack*, align 8
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2200, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata i32* %1, metadata !2201, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata i64 0, metadata !2202, metadata !DIExpression()), !dbg !2217
  %4 = bitcast %struct.stack** %3 to i8*, !dbg !2218
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #18, !dbg !2218
  %5 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2219, !tbaa !205
  %6 = icmp eq %struct.stack* %5, null, !dbg !2221
  br i1 %6, label %133, label %7, !dbg !2222

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.stack* null, metadata !2203, metadata !DIExpression()), !dbg !2217
  store %struct.stack* null, %struct.stack** %3, align 8, !dbg !2223, !tbaa !205
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2206, metadata !DIExpression()), !dbg !2217
  %8 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2224
  call void @llvm.dbg.value(metadata i8* %8, metadata !2209, metadata !DIExpression()), !dbg !2217
  %9 = call i64 @strlen(i8* nonnull dereferenceable(1) %8), !dbg !2225
  %10 = add i64 %9, 1, !dbg !2226
  %11 = call double @atof(i8* %8, i64 %10, i32* %1) #18, !dbg !2227
  call void @llvm.dbg.value(metadata double %11, metadata !2207, metadata !DIExpression()), !dbg !2217
  %12 = load i32, i32* %1, align 4, !dbg !2228, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2228
  br i1 %13, label %15, label %14, !dbg !2230

14:                                               ; preds = %7
  call void @free(i8* %8), !dbg !2231
  br label %133, !dbg !2233

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.stack** %3, metadata !2203, metadata !DIExpression(DW_OP_deref)), !dbg !2217
  %16 = call i32 @push(%struct.stack** nonnull %3, i8* %8) #18, !dbg !2234
  call void @llvm.dbg.value(metadata i64 1, metadata !2202, metadata !DIExpression()), !dbg !2217
  %17 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2236
  call void @llvm.dbg.value(metadata i8* %17, metadata !2209, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata i64 1, metadata !2202, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* undef, metadata !2205, metadata !DIExpression()), !dbg !2217
  %18 = icmp eq i8* %17, null, !dbg !2237
  br i1 %18, label %83, label %19, !dbg !2238

19:                                               ; preds = %15, %78
  %20 = phi i8* [ %80, %78 ], [ %17, %15 ]
  %21 = phi i64 [ %81, %78 ], [ 1, %15 ]
  %22 = phi %struct.stack* [ %79, %78 ], [ undef, %15 ]
  call void @llvm.dbg.value(metadata i8* %20, metadata !2209, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata i64 %21, metadata !2202, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %22, metadata !2205, metadata !DIExpression()), !dbg !2217
  %23 = call i64 @strlen(i8* nonnull %20), !dbg !2239
  %24 = add i64 %23, 1, !dbg !2240
  %25 = call double @atof(i8* nonnull %20, i64 %24, i32* nonnull %1) #18, !dbg !2241
  call void @llvm.dbg.value(metadata double %25, metadata !2207, metadata !DIExpression()), !dbg !2217
  %26 = load i32, i32* %1, align 4, !dbg !2242, !tbaa !295
  %27 = icmp eq i32 %26, 0, !dbg !2242
  br i1 %27, label %28, label %133, !dbg !2244

28:                                               ; preds = %19
  %29 = load %struct.stack*, %struct.stack** %3, align 8, !dbg !2245, !tbaa !205
  call void @llvm.dbg.value(metadata i32 0, metadata !2210, metadata !DIExpression()), !dbg !2245
  call void @llvm.dbg.value(metadata %struct.stack* %22, metadata !2205, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %29, metadata !2204, metadata !DIExpression()), !dbg !2217
  %30 = icmp eq %struct.stack* %29, null, !dbg !2246
  br i1 %30, label %63, label %31, !dbg !2247

31:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 0, metadata !2210, metadata !DIExpression()), !dbg !2245
  call void @llvm.dbg.value(metadata %struct.stack* %22, metadata !2205, metadata !DIExpression()), !dbg !2217
  %32 = getelementptr inbounds %struct.stack, %struct.stack* %29, i64 0, i32 0, !dbg !2248
  %33 = load i8*, i8** %32, align 8, !dbg !2248, !tbaa !429
  %34 = call i64 @strlen(i8* nonnull dereferenceable(1) %33), !dbg !2250
  %35 = add i64 %34, 1, !dbg !2251
  %36 = call double @atof(i8* %33, i64 %35, i32* nonnull %1) #18, !dbg !2252
  call void @llvm.dbg.value(metadata double %36, metadata !2208, metadata !DIExpression()), !dbg !2217
  %37 = fcmp ugt double %25, %36, !dbg !2253
  br i1 %37, label %58, label %45, !dbg !2255

38:                                               ; preds = %58
  call void @llvm.dbg.value(metadata i32 undef, metadata !2210, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2245
  call void @llvm.dbg.value(metadata %struct.stack* %59, metadata !2205, metadata !DIExpression()), !dbg !2217
  %39 = getelementptr inbounds %struct.stack, %struct.stack* %61, i64 0, i32 0, !dbg !2248
  %40 = load i8*, i8** %39, align 8, !dbg !2248, !tbaa !429
  %41 = call i64 @strlen(i8* nonnull dereferenceable(1) %40), !dbg !2250
  %42 = add i64 %41, 1, !dbg !2251
  %43 = call double @atof(i8* %40, i64 %42, i32* nonnull %1) #18, !dbg !2252
  call void @llvm.dbg.value(metadata double %43, metadata !2208, metadata !DIExpression()), !dbg !2217
  %44 = fcmp ugt double %25, %43, !dbg !2253
  br i1 %44, label %58, label %45, !dbg !2255, !llvm.loop !2256

45:                                               ; preds = %38, %31
  %46 = phi %struct.stack* [ %29, %31 ], [ %61, %38 ]
  %47 = phi i1 [ true, %31 ], [ false, %38 ]
  %48 = phi %struct.stack* [ %22, %31 ], [ %59, %38 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !2210, metadata !DIExpression()), !dbg !2245
  call void @llvm.dbg.value(metadata %struct.stack* %48, metadata !2205, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata i32 undef, metadata !2210, metadata !DIExpression()), !dbg !2245
  call void @llvm.dbg.value(metadata %struct.stack* %48, metadata !2205, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %48, metadata !2205, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata i32 undef, metadata !2210, metadata !DIExpression()), !dbg !2245
  br i1 %47, label %49, label %51, !dbg !2258

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.stack** %3, metadata !2203, metadata !DIExpression(DW_OP_deref)), !dbg !2217
  %50 = call i32 @push(%struct.stack** nonnull %3, i8* nonnull %20) #18, !dbg !2260
  br label %78, !dbg !2263

51:                                               ; preds = %45
  %52 = call dereferenceable_or_null(16) i8* @malloc(i64 16), !dbg !2264
  call void @llvm.dbg.value(metadata i8* %52, metadata !2213, metadata !DIExpression()), !dbg !2245
  %53 = bitcast i8* %52 to i8**, !dbg !2266
  store i8* %20, i8** %53, align 8, !dbg !2267, !tbaa !429
  %54 = getelementptr inbounds i8, i8* %52, i64 8, !dbg !2268
  %55 = bitcast i8* %54 to %struct.stack**, !dbg !2268
  store %struct.stack* %46, %struct.stack** %55, align 8, !dbg !2269, !tbaa !437
  %56 = getelementptr inbounds %struct.stack, %struct.stack* %48, i64 0, i32 1, !dbg !2270
  %57 = bitcast %struct.stack** %56 to i8**, !dbg !2271
  store i8* %52, i8** %57, align 8, !dbg !2271, !tbaa !437
  br label %78

58:                                               ; preds = %31, %38
  %59 = phi %struct.stack* [ %61, %38 ], [ %29, %31 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !2210, metadata !DIExpression()), !dbg !2245
  call void @llvm.dbg.value(metadata %struct.stack* %59, metadata !2205, metadata !DIExpression()), !dbg !2217
  %60 = getelementptr inbounds %struct.stack, %struct.stack* %59, i64 0, i32 1, !dbg !2272
  call void @llvm.dbg.value(metadata %struct.stack* undef, metadata !2204, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata i32 undef, metadata !2210, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2245
  %61 = load %struct.stack*, %struct.stack** %60, align 8, !dbg !2245, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %61, metadata !2204, metadata !DIExpression()), !dbg !2217
  %62 = icmp eq %struct.stack* %61, null, !dbg !2246
  br i1 %62, label %63, label %38, !dbg !2247, !llvm.loop !2256

63:                                               ; preds = %58, %28
  %64 = phi %struct.stack* [ %22, %28 ], [ %59, %58 ]
  call void @llvm.dbg.value(metadata %struct.stack* %64, metadata !2205, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata i32 undef, metadata !2212, metadata !DIExpression()), !dbg !2245
  %65 = load %struct.stack*, %struct.stack** %3, align 8, !dbg !2274, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %65, metadata !2203, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %65, metadata !2204, metadata !DIExpression()), !dbg !2217
  br label %66, !dbg !2277

66:                                               ; preds = %66, %63
  %67 = phi %struct.stack* [ %65, %63 ], [ %69, %66 ], !dbg !2278
  call void @llvm.dbg.value(metadata %struct.stack* %67, metadata !2204, metadata !DIExpression()), !dbg !2217
  %68 = getelementptr inbounds %struct.stack, %struct.stack* %67, i64 0, i32 1, !dbg !2279
  %69 = load %struct.stack*, %struct.stack** %68, align 8, !dbg !2279, !tbaa !437
  %70 = icmp eq %struct.stack* %69, null, !dbg !2280
  br i1 %70, label %71, label %66, !dbg !2277, !llvm.loop !2281

71:                                               ; preds = %66
  call void @llvm.dbg.value(metadata %struct.stack* %67, metadata !2204, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %67, metadata !2204, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %67, metadata !2204, metadata !DIExpression()), !dbg !2217
  %72 = getelementptr inbounds %struct.stack, %struct.stack* %67, i64 0, i32 1, !dbg !2279
  %73 = call dereferenceable_or_null(16) i8* @malloc(i64 16), !dbg !2283
  call void @llvm.dbg.value(metadata i8* %73, metadata !2213, metadata !DIExpression()), !dbg !2245
  %74 = bitcast i8* %73 to i8**, !dbg !2284
  store i8* %20, i8** %74, align 8, !dbg !2285, !tbaa !429
  %75 = getelementptr inbounds i8, i8* %73, i64 8, !dbg !2286
  %76 = bitcast i8* %75 to %struct.stack**, !dbg !2286
  store %struct.stack* null, %struct.stack** %76, align 8, !dbg !2287, !tbaa !437
  %77 = bitcast %struct.stack** %72 to i8**, !dbg !2288
  store i8* %73, i8** %77, align 8, !dbg !2288, !tbaa !437
  br label %78, !dbg !2289

78:                                               ; preds = %51, %49, %71
  %79 = phi %struct.stack* [ %48, %51 ], [ %48, %49 ], [ %64, %71 ]
  %80 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2290
  call void @llvm.dbg.value(metadata i8* %80, metadata !2209, metadata !DIExpression()), !dbg !2217
  %81 = add i64 %21, 1, !dbg !2291
  call void @llvm.dbg.value(metadata i64 %81, metadata !2202, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %79, metadata !2205, metadata !DIExpression()), !dbg !2217
  %82 = icmp eq i8* %80, null, !dbg !2237
  br i1 %82, label %83, label %19, !dbg !2238, !llvm.loop !2292

83:                                               ; preds = %78, %15
  %84 = phi i64 [ 1, %15 ], [ %81, %78 ], !dbg !2217
  call void @llvm.dbg.value(metadata i64 %84, metadata !2202, metadata !DIExpression()), !dbg !2217
  %85 = load %struct.stack*, %struct.stack** %3, align 8, !dbg !2294, !tbaa !205
  call void @llvm.dbg.value(metadata %struct.stack* %85, metadata !2203, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %85, metadata !2204, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata i32 0, metadata !2214, metadata !DIExpression()), !dbg !2217
  %86 = and i64 %84, 1, !dbg !2295
  %87 = icmp eq i64 %86, 0, !dbg !2297
  call void @llvm.dbg.value(metadata i32 0, metadata !2214, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata i32 0, metadata !2214, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata i32 0, metadata !2214, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %85, metadata !2204, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %85, metadata !2204, metadata !DIExpression()), !dbg !2217
  %88 = lshr i64 %84, 1, !dbg !2298
  br i1 %87, label %91, label %89, !dbg !2299

89:                                               ; preds = %83
  %90 = icmp eq i64 %88, 0, !dbg !2300
  br i1 %90, label %125, label %118, !dbg !2304

91:                                               ; preds = %83
  %92 = add nsw i64 %88, -1, !dbg !2305
  %93 = icmp eq i64 %92, 0, !dbg !2309
  br i1 %93, label %101, label %94, !dbg !2310

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %99, %94 ], [ 0, %91 ]
  %96 = phi %struct.stack* [ %98, %94 ], [ %85, %91 ]
  call void @llvm.dbg.value(metadata i64 %95, metadata !2214, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %96, metadata !2204, metadata !DIExpression()), !dbg !2217
  %97 = getelementptr inbounds %struct.stack, %struct.stack* %96, i64 0, i32 1, !dbg !2311
  %98 = load %struct.stack*, %struct.stack** %97, align 8, !dbg !2311, !tbaa !437
  call void @llvm.dbg.value(metadata %struct.stack* %98, metadata !2204, metadata !DIExpression()), !dbg !2217
  %99 = add nuw i64 %95, 1, !dbg !2312
  call void @llvm.dbg.value(metadata i64 %99, metadata !2214, metadata !DIExpression()), !dbg !2217
  %100 = icmp eq i64 %99, %92, !dbg !2309
  br i1 %100, label %101, label %94, !dbg !2310, !llvm.loop !2313

101:                                              ; preds = %94, %91
  %102 = phi %struct.stack* [ %85, %91 ], [ %98, %94 ], !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %102, metadata !2204, metadata !DIExpression()), !dbg !2217
  %103 = getelementptr inbounds %struct.stack, %struct.stack* %102, i64 0, i32 0, !dbg !2315
  %104 = load i8*, i8** %103, align 8, !dbg !2315, !tbaa !429
  %105 = call i64 @strlen(i8* nonnull dereferenceable(1) %104), !dbg !2316
  %106 = add i64 %105, 1, !dbg !2317
  %107 = call double @atof(i8* %104, i64 %106, i32* nonnull %1) #18, !dbg !2318
  %108 = fadd double %107, 0.000000e+00, !dbg !2319
  call void @llvm.dbg.value(metadata double %108, metadata !2206, metadata !DIExpression()), !dbg !2217
  %109 = getelementptr inbounds %struct.stack, %struct.stack* %102, i64 0, i32 1, !dbg !2320
  %110 = load %struct.stack*, %struct.stack** %109, align 8, !dbg !2320, !tbaa !437
  call void @llvm.dbg.value(metadata %struct.stack* %110, metadata !2204, metadata !DIExpression()), !dbg !2217
  %111 = getelementptr inbounds %struct.stack, %struct.stack* %110, i64 0, i32 0, !dbg !2321
  %112 = load i8*, i8** %111, align 8, !dbg !2321, !tbaa !429
  %113 = call i64 @strlen(i8* nonnull dereferenceable(1) %112), !dbg !2322
  %114 = add i64 %113, 1, !dbg !2323
  %115 = call double @atof(i8* %112, i64 %114, i32* nonnull %1) #18, !dbg !2324
  %116 = fadd double %108, %115, !dbg !2325
  call void @llvm.dbg.value(metadata double %116, metadata !2206, metadata !DIExpression()), !dbg !2217
  %117 = fmul double %116, 5.000000e-01, !dbg !2326
  call void @llvm.dbg.value(metadata double %117, metadata !2206, metadata !DIExpression()), !dbg !2217
  br label %135, !dbg !2327

118:                                              ; preds = %89, %118
  %119 = phi i64 [ %123, %118 ], [ 0, %89 ]
  %120 = phi %struct.stack* [ %122, %118 ], [ %85, %89 ]
  call void @llvm.dbg.value(metadata i64 %119, metadata !2214, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %120, metadata !2204, metadata !DIExpression()), !dbg !2217
  %121 = getelementptr inbounds %struct.stack, %struct.stack* %120, i64 0, i32 1, !dbg !2328
  %122 = load %struct.stack*, %struct.stack** %121, align 8, !dbg !2328, !tbaa !437
  call void @llvm.dbg.value(metadata %struct.stack* %122, metadata !2204, metadata !DIExpression()), !dbg !2217
  %123 = add nuw nsw i64 %119, 1, !dbg !2329
  call void @llvm.dbg.value(metadata i64 %123, metadata !2214, metadata !DIExpression()), !dbg !2217
  %124 = icmp eq i64 %123, %88, !dbg !2300
  br i1 %124, label %125, label %118, !dbg !2304, !llvm.loop !2330

125:                                              ; preds = %118, %89
  %126 = phi %struct.stack* [ %85, %89 ], [ %122, %118 ], !dbg !2217
  call void @llvm.dbg.value(metadata %struct.stack* %126, metadata !2204, metadata !DIExpression()), !dbg !2217
  %127 = getelementptr inbounds %struct.stack, %struct.stack* %126, i64 0, i32 0, !dbg !2332
  %128 = load i8*, i8** %127, align 8, !dbg !2332, !tbaa !429
  %129 = call i64 @strlen(i8* nonnull dereferenceable(1) %128), !dbg !2333
  %130 = add i64 %129, 1, !dbg !2334
  %131 = call double @atof(i8* %128, i64 %130, i32* nonnull %1) #18, !dbg !2335
  %132 = fadd double %131, 0.000000e+00, !dbg !2336
  call void @llvm.dbg.value(metadata double %132, metadata !2206, metadata !DIExpression()), !dbg !2217
  br label %135

133:                                              ; preds = %19, %135, %2, %14
  %134 = phi i64 [ 0, %2 ], [ 0, %14 ], [ 1, %135 ], [ %21, %19 ], !dbg !2217
  call void @llvm.dbg.value(metadata i64 %134, metadata !2202, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.label(metadata !2215), !dbg !2337
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2338
  store i32 1, i32* %1, align 4, !dbg !2339, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2206, metadata !DIExpression()), !dbg !2217
  br label %135, !dbg !2340

135:                                              ; preds = %101, %125, %133
  %136 = phi double [ 0.000000e+00, %133 ], [ %117, %101 ], [ %132, %125 ], !dbg !2217
  %137 = phi i64 [ %134, %133 ], [ %84, %101 ], [ %84, %125 ], !dbg !2217
  call void @llvm.dbg.value(metadata i64 %137, metadata !2202, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.value(metadata double %136, metadata !2206, metadata !DIExpression()), !dbg !2217
  call void @llvm.dbg.label(metadata !2216), !dbg !2341
  %138 = icmp eq i64 %137, 0, !dbg !2342
  br i1 %138, label %133, label %139, !dbg !2344

139:                                              ; preds = %135
  call void @llvm.dbg.value(metadata %struct.stack** %3, metadata !2203, metadata !DIExpression(DW_OP_deref)), !dbg !2217
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %3) #18, !dbg !2345
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #18, !dbg !2346
  ret double %136, !dbg !2347
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_min(%struct.stack** %0, i32* %1) #3 !dbg !2348 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2350, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i32* %1, metadata !2351, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i64 0, metadata !2352, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2353, metadata !DIExpression()), !dbg !2358
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2359, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2361
  br i1 %4, label %34, label %5, !dbg !2362

5:                                                ; preds = %2
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2363
  call void @llvm.dbg.value(metadata i8* %6, metadata !2355, metadata !DIExpression()), !dbg !2358
  %7 = icmp eq i8* %6, null, !dbg !2364
  br i1 %7, label %14, label %8, !dbg !2366

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2367
  %10 = add i64 %9, 1, !dbg !2369
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2370
  call void @llvm.dbg.value(metadata double %11, metadata !2353, metadata !DIExpression()), !dbg !2358
  call void @free(i8* %6), !dbg !2371
  %12 = load i32, i32* %1, align 4, !dbg !2372, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2372
  br i1 %13, label %14, label %34, !dbg !2374

14:                                               ; preds = %8, %5
  %15 = phi double [ 0.000000e+00, %5 ], [ %11, %8 ], !dbg !2358
  %16 = phi i64 [ 0, %5 ], [ 1, %8 ], !dbg !2358
  call void @llvm.dbg.value(metadata i64 %16, metadata !2352, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata double %15, metadata !2353, metadata !DIExpression()), !dbg !2358
  %17 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2375
  call void @llvm.dbg.value(metadata i8* %17, metadata !2355, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i64 %16, metadata !2352, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata double %15, metadata !2353, metadata !DIExpression()), !dbg !2358
  %18 = icmp eq i8* %17, null, !dbg !2376
  br i1 %18, label %36, label %19, !dbg !2377

19:                                               ; preds = %14, %28
  %20 = phi i8* [ %31, %28 ], [ %17, %14 ]
  %21 = phi i64 [ %32, %28 ], [ %16, %14 ]
  %22 = phi double [ %30, %28 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata i8* %20, metadata !2355, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata i64 %21, metadata !2352, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata double %22, metadata !2353, metadata !DIExpression()), !dbg !2358
  %23 = call i64 @strlen(i8* nonnull %20), !dbg !2378
  %24 = add i64 %23, 1, !dbg !2380
  %25 = call double @atof(i8* nonnull %20, i64 %24, i32* %1) #18, !dbg !2381
  call void @llvm.dbg.value(metadata double %25, metadata !2354, metadata !DIExpression()), !dbg !2358
  call void @free(i8* %20), !dbg !2382
  %26 = load i32, i32* %1, align 4, !dbg !2383, !tbaa !295
  %27 = icmp eq i32 %26, 0, !dbg !2383
  br i1 %27, label %28, label %34, !dbg !2385

28:                                               ; preds = %19
  %29 = fcmp olt double %25, %22, !dbg !2386
  %30 = select i1 %29, double %25, double %22, !dbg !2388
  call void @llvm.dbg.value(metadata double %30, metadata !2353, metadata !DIExpression()), !dbg !2358
  %31 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2389
  call void @llvm.dbg.value(metadata i8* %31, metadata !2355, metadata !DIExpression()), !dbg !2358
  %32 = add i64 %21, 1, !dbg !2390
  call void @llvm.dbg.value(metadata i64 %32, metadata !2352, metadata !DIExpression()), !dbg !2358
  %33 = icmp eq i8* %31, null, !dbg !2376
  br i1 %33, label %36, label %19, !dbg !2377, !llvm.loop !2391

34:                                               ; preds = %19, %36, %8, %2
  %35 = phi i64 [ 0, %2 ], [ 0, %8 ], [ 1, %36 ], [ %21, %19 ], !dbg !2358
  call void @llvm.dbg.value(metadata i64 %35, metadata !2352, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.label(metadata !2356), !dbg !2393
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2394
  store i32 1, i32* %1, align 4, !dbg !2395, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2353, metadata !DIExpression()), !dbg !2358
  br label %36, !dbg !2396

36:                                               ; preds = %28, %14, %34
  %37 = phi double [ 0.000000e+00, %34 ], [ %15, %14 ], [ %30, %28 ], !dbg !2358
  %38 = phi i64 [ %35, %34 ], [ %16, %14 ], [ %32, %28 ], !dbg !2358
  call void @llvm.dbg.value(metadata i64 %38, metadata !2352, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.value(metadata double %37, metadata !2353, metadata !DIExpression()), !dbg !2358
  call void @llvm.dbg.label(metadata !2357), !dbg !2397
  %39 = icmp eq i64 %38, 0, !dbg !2398
  br i1 %39, label %34, label %40, !dbg !2400

40:                                               ; preds = %36
  ret double %37, !dbg !2401
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_stddev(%struct.stack** %0, i32* %1) #3 !dbg !2402 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2404, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i32* %1, metadata !2405, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i64 0, metadata !2406, metadata !DIExpression()), !dbg !2414
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2415, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2417
  br i1 %4, label %42, label %5, !dbg !2418

5:                                                ; preds = %2, %16
  %6 = phi %struct.stack* [ %20, %16 ], [ %3, %2 ]
  %7 = phi double [ %17, %16 ], [ 0.000000e+00, %2 ]
  %8 = phi i64 [ %18, %16 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata %struct.stack* %6, metadata !2410, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata double %7, metadata !2409, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i64 %8, metadata !2406, metadata !DIExpression()), !dbg !2414
  %9 = getelementptr inbounds %struct.stack, %struct.stack* %6, i64 0, i32 0, !dbg !2419
  %10 = load i8*, i8** %9, align 8, !dbg !2419, !tbaa !429
  %11 = call i64 @strlen(i8* nonnull dereferenceable(1) %10), !dbg !2421
  %12 = add i64 %11, 1, !dbg !2422
  %13 = call double @atof(i8* %10, i64 %12, i32* %1) #18, !dbg !2423
  call void @llvm.dbg.value(metadata double %13, metadata !2408, metadata !DIExpression()), !dbg !2414
  %14 = load i32, i32* %1, align 4, !dbg !2424, !tbaa !295
  %15 = icmp eq i32 %14, 0, !dbg !2424
  br i1 %15, label %16, label %42, !dbg !2426

16:                                               ; preds = %5
  %17 = fadd double %7, %13, !dbg !2427
  call void @llvm.dbg.value(metadata double %17, metadata !2409, metadata !DIExpression()), !dbg !2414
  %18 = add i64 %8, 1, !dbg !2428
  call void @llvm.dbg.value(metadata i64 %18, metadata !2406, metadata !DIExpression()), !dbg !2414
  %19 = getelementptr inbounds %struct.stack, %struct.stack* %6, i64 0, i32 1, !dbg !2429
  %20 = load %struct.stack*, %struct.stack** %19, align 8, !dbg !2429, !tbaa !437
  call void @llvm.dbg.value(metadata %struct.stack* %20, metadata !2410, metadata !DIExpression()), !dbg !2414
  %21 = icmp eq %struct.stack* %20, null, !dbg !2430
  br i1 %21, label %22, label %5, !dbg !2431, !llvm.loop !2432

22:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i64 %18, metadata !2406, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata double %17, metadata !2409, metadata !DIExpression()), !dbg !2414
  %23 = icmp eq i64 %18, 0, !dbg !2434
  br i1 %23, label %44, label %24, !dbg !2436

24:                                               ; preds = %22
  %25 = uitofp i64 %18 to double, !dbg !2437
  %26 = fdiv double %17, %25, !dbg !2438
  call void @llvm.dbg.value(metadata double %26, metadata !2409, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i64 0, metadata !2406, metadata !DIExpression()), !dbg !2414
  %27 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2439
  call void @llvm.dbg.value(metadata i8* %27, metadata !2411, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2407, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i64 0, metadata !2406, metadata !DIExpression()), !dbg !2414
  %28 = icmp eq i8* %27, null, !dbg !2440
  br i1 %28, label %44, label %29, !dbg !2441

29:                                               ; preds = %24, %29
  %30 = phi i8* [ %39, %29 ], [ %27, %24 ]
  %31 = phi double [ %38, %29 ], [ 0.000000e+00, %24 ]
  %32 = phi i64 [ %40, %29 ], [ 0, %24 ]
  call void @llvm.dbg.value(metadata i8* %30, metadata !2411, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata double %31, metadata !2407, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i64 %32, metadata !2406, metadata !DIExpression()), !dbg !2414
  %33 = call i64 @strlen(i8* nonnull %30), !dbg !2442
  %34 = add i64 %33, 1, !dbg !2444
  %35 = call double @atof(i8* nonnull %30, i64 %34, i32* nonnull %1) #18, !dbg !2445
  call void @llvm.dbg.value(metadata double %35, metadata !2408, metadata !DIExpression()), !dbg !2414
  call void @free(i8* %30), !dbg !2446
  %36 = fsub double %35, %26, !dbg !2447
  %37 = fmul double %36, %36, !dbg !2448
  %38 = fadd double %31, %37, !dbg !2449
  call void @llvm.dbg.value(metadata double %38, metadata !2407, metadata !DIExpression()), !dbg !2414
  %39 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2450
  call void @llvm.dbg.value(metadata i8* %39, metadata !2411, metadata !DIExpression()), !dbg !2414
  %40 = add i64 %32, 1, !dbg !2451
  call void @llvm.dbg.value(metadata i64 %40, metadata !2406, metadata !DIExpression()), !dbg !2414
  %41 = icmp eq i8* %39, null, !dbg !2440
  br i1 %41, label %44, label %29, !dbg !2441, !llvm.loop !2452

42:                                               ; preds = %5, %44, %2
  %43 = phi i64 [ 0, %2 ], [ 1, %44 ], [ %8, %5 ], !dbg !2414
  call void @llvm.dbg.value(metadata i64 %43, metadata !2406, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.label(metadata !2412), !dbg !2454
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2455
  store i32 1, i32* %1, align 4, !dbg !2456, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2407, metadata !DIExpression()), !dbg !2414
  br label %44, !dbg !2457

44:                                               ; preds = %29, %24, %22, %42
  %45 = phi i64 [ %43, %42 ], [ 0, %22 ], [ 0, %24 ], [ %40, %29 ], !dbg !2414
  %46 = phi double [ 0.000000e+00, %42 ], [ 0.000000e+00, %22 ], [ 0.000000e+00, %24 ], [ %38, %29 ], !dbg !2414
  call void @llvm.dbg.value(metadata double %46, metadata !2407, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.value(metadata i64 %45, metadata !2406, metadata !DIExpression()), !dbg !2414
  call void @llvm.dbg.label(metadata !2413), !dbg !2458
  %47 = icmp eq i64 %45, 0, !dbg !2459
  br i1 %47, label %42, label %48, !dbg !2461

48:                                               ; preds = %44
  %49 = uitofp i64 %45 to double, !dbg !2462
  %50 = fdiv double %46, %49, !dbg !2463
  %51 = call double @sqrt(double %50) #18, !dbg !2464
  ret double %51, !dbg !2465
}

; Function Attrs: nofree nounwind
declare dso_local double @sqrt(double) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_abs(%struct.stack** %0, i32* %1) #3 !dbg !2466 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2468, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.value(metadata i32* %1, metadata !2469, metadata !DIExpression()), !dbg !2475
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2476, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2478
  br i1 %4, label %19, label %5, !dbg !2479

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2470, metadata !DIExpression()), !dbg !2475
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2480
  call void @llvm.dbg.value(metadata i8* %6, metadata !2472, metadata !DIExpression()), !dbg !2475
  %7 = icmp eq i8* %6, null, !dbg !2481
  br i1 %7, label %19, label %8, !dbg !2483

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2484
  %10 = add i64 %9, 1, !dbg !2485
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2486
  call void @llvm.dbg.value(metadata double %11, metadata !2471, metadata !DIExpression()), !dbg !2475
  call void @free(i8* %6), !dbg !2487
  %12 = load i32, i32* %1, align 4, !dbg !2488, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2488
  br i1 %13, label %14, label %19, !dbg !2490

14:                                               ; preds = %8
  %15 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2491, !tbaa !205
  %16 = icmp eq %struct.stack* %15, null, !dbg !2493
  br i1 %16, label %17, label %19, !dbg !2494

17:                                               ; preds = %14
  %18 = call double @llvm.fabs.f64(double %11), !dbg !2495
  call void @llvm.dbg.value(metadata double %18, metadata !2470, metadata !DIExpression()), !dbg !2475
  br label %20, !dbg !2496

19:                                               ; preds = %14, %8, %5, %2
  call void @llvm.dbg.label(metadata !2473), !dbg !2497
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2498
  store i32 1, i32* %1, align 4, !dbg !2499, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2470, metadata !DIExpression()), !dbg !2475
  br label %20, !dbg !2500

20:                                               ; preds = %19, %17
  %21 = phi double [ 0.000000e+00, %19 ], [ %18, %17 ], !dbg !2475
  call void @llvm.dbg.value(metadata double %21, metadata !2470, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.label(metadata !2474), !dbg !2501
  ret double %21, !dbg !2502
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_add(%struct.stack** %0, i32* %1) #3 !dbg !2503 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2505, metadata !DIExpression()), !dbg !2513
  call void @llvm.dbg.value(metadata i32* %1, metadata !2506, metadata !DIExpression()), !dbg !2513
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2514, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2516
  br i1 %4, label %28, label %5, !dbg !2517

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2507, metadata !DIExpression()), !dbg !2513
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2518
  call void @llvm.dbg.value(metadata i8* %6, metadata !2510, metadata !DIExpression()), !dbg !2513
  %7 = icmp eq i8* %6, null, !dbg !2519
  br i1 %7, label %28, label %8, !dbg !2521

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2522
  %10 = add i64 %9, 1, !dbg !2523
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2524
  call void @llvm.dbg.value(metadata double %11, metadata !2508, metadata !DIExpression()), !dbg !2513
  call void @free(i8* %6), !dbg !2525
  %12 = load i32, i32* %1, align 4, !dbg !2526, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2526
  br i1 %13, label %14, label %28, !dbg !2528

14:                                               ; preds = %8
  %15 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2529
  call void @llvm.dbg.value(metadata i8* %15, metadata !2510, metadata !DIExpression()), !dbg !2513
  %16 = icmp eq i8* %15, null, !dbg !2530
  br i1 %16, label %28, label %17, !dbg !2532

17:                                               ; preds = %14
  %18 = call i64 @strlen(i8* nonnull %15), !dbg !2533
  %19 = add i64 %18, 1, !dbg !2534
  %20 = call double @atof(i8* nonnull %15, i64 %19, i32* nonnull %1) #18, !dbg !2535
  call void @llvm.dbg.value(metadata double %20, metadata !2509, metadata !DIExpression()), !dbg !2513
  call void @free(i8* %15), !dbg !2536
  %21 = load i32, i32* %1, align 4, !dbg !2537, !tbaa !295
  %22 = icmp eq i32 %21, 0, !dbg !2537
  br i1 %22, label %23, label %28, !dbg !2539

23:                                               ; preds = %17
  %24 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2540, !tbaa !205
  %25 = icmp eq %struct.stack* %24, null, !dbg !2542
  br i1 %25, label %26, label %28, !dbg !2543

26:                                               ; preds = %23
  %27 = fadd double %11, %20, !dbg !2544
  call void @llvm.dbg.value(metadata double %27, metadata !2507, metadata !DIExpression()), !dbg !2513
  br label %29, !dbg !2545

28:                                               ; preds = %23, %17, %8, %14, %5, %2
  call void @llvm.dbg.label(metadata !2511), !dbg !2546
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2547
  store i32 1, i32* %1, align 4, !dbg !2548, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2507, metadata !DIExpression()), !dbg !2513
  br label %29, !dbg !2549

29:                                               ; preds = %28, %26
  %30 = phi double [ 0.000000e+00, %28 ], [ %27, %26 ], !dbg !2513
  call void @llvm.dbg.value(metadata double %30, metadata !2507, metadata !DIExpression()), !dbg !2513
  call void @llvm.dbg.label(metadata !2512), !dbg !2550
  ret double %30, !dbg !2551
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_cos(%struct.stack** %0, i32* %1) #3 !dbg !2552 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2554, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.value(metadata i32* %1, metadata !2555, metadata !DIExpression()), !dbg !2561
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2562, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2564
  br i1 %4, label %19, label %5, !dbg !2565

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2556, metadata !DIExpression()), !dbg !2561
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2566
  call void @llvm.dbg.value(metadata i8* %6, metadata !2558, metadata !DIExpression()), !dbg !2561
  %7 = icmp eq i8* %6, null, !dbg !2567
  br i1 %7, label %19, label %8, !dbg !2569

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2570
  %10 = add i64 %9, 1, !dbg !2571
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2572
  call void @llvm.dbg.value(metadata double %11, metadata !2557, metadata !DIExpression()), !dbg !2561
  call void @free(i8* %6), !dbg !2573
  %12 = load i32, i32* %1, align 4, !dbg !2574, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2574
  br i1 %13, label %14, label %19, !dbg !2576

14:                                               ; preds = %8
  %15 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2577, !tbaa !205
  %16 = icmp eq %struct.stack* %15, null, !dbg !2579
  br i1 %16, label %17, label %19, !dbg !2580

17:                                               ; preds = %14
  %18 = call double @cos(double %11) #18, !dbg !2581
  call void @llvm.dbg.value(metadata double %18, metadata !2556, metadata !DIExpression()), !dbg !2561
  br label %20, !dbg !2582

19:                                               ; preds = %14, %8, %5, %2
  call void @llvm.dbg.label(metadata !2559), !dbg !2583
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2584
  store i32 1, i32* %1, align 4, !dbg !2585, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2556, metadata !DIExpression()), !dbg !2561
  br label %20, !dbg !2586

20:                                               ; preds = %19, %17
  %21 = phi double [ 0.000000e+00, %19 ], [ %18, %17 ], !dbg !2561
  call void @llvm.dbg.value(metadata double %21, metadata !2556, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.label(metadata !2560), !dbg !2587
  ret double %21, !dbg !2588
}

; Function Attrs: nofree nounwind
declare dso_local double @cos(double) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_ln(%struct.stack** %0, i32* %1) #3 !dbg !2589 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2591, metadata !DIExpression()), !dbg !2598
  call void @llvm.dbg.value(metadata i32* %1, metadata !2592, metadata !DIExpression()), !dbg !2598
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2599, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2601
  br i1 %4, label %21, label %5, !dbg !2602

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2593, metadata !DIExpression()), !dbg !2598
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2603
  call void @llvm.dbg.value(metadata i8* %6, metadata !2595, metadata !DIExpression()), !dbg !2598
  %7 = icmp eq i8* %6, null, !dbg !2604
  br i1 %7, label %21, label %8, !dbg !2606

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2607
  %10 = add i64 %9, 1, !dbg !2608
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2609
  call void @llvm.dbg.value(metadata double %11, metadata !2594, metadata !DIExpression()), !dbg !2598
  call void @free(i8* %6), !dbg !2610
  %12 = load i32, i32* %1, align 4, !dbg !2611, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2611
  br i1 %13, label %14, label %21, !dbg !2613

14:                                               ; preds = %8
  %15 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2614, !tbaa !205
  %16 = icmp ne %struct.stack* %15, null, !dbg !2616
  %17 = fcmp oeq double %11, 0.000000e+00, !dbg !2617
  %18 = or i1 %17, %16, !dbg !2619
  br i1 %18, label %21, label %19, !dbg !2619

19:                                               ; preds = %14
  %20 = call double @log(double %11) #18, !dbg !2620
  call void @llvm.dbg.value(metadata double %20, metadata !2593, metadata !DIExpression()), !dbg !2598
  br label %22, !dbg !2621

21:                                               ; preds = %8, %14, %5, %2
  call void @llvm.dbg.label(metadata !2596), !dbg !2622
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2623
  store i32 1, i32* %1, align 4, !dbg !2624, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2593, metadata !DIExpression()), !dbg !2598
  br label %22, !dbg !2625

22:                                               ; preds = %21, %19
  %23 = phi double [ 0.000000e+00, %21 ], [ %20, %19 ], !dbg !2598
  call void @llvm.dbg.value(metadata double %23, metadata !2593, metadata !DIExpression()), !dbg !2598
  call void @llvm.dbg.label(metadata !2597), !dbg !2626
  ret double %23, !dbg !2627
}

; Function Attrs: nofree nounwind
declare dso_local double @log(double) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_log10(%struct.stack** %0, i32* %1) #3 !dbg !2628 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2630, metadata !DIExpression()), !dbg !2637
  call void @llvm.dbg.value(metadata i32* %1, metadata !2631, metadata !DIExpression()), !dbg !2637
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2638, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2640
  br i1 %4, label %21, label %5, !dbg !2641

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2632, metadata !DIExpression()), !dbg !2637
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2642
  call void @llvm.dbg.value(metadata i8* %6, metadata !2634, metadata !DIExpression()), !dbg !2637
  %7 = icmp eq i8* %6, null, !dbg !2643
  br i1 %7, label %21, label %8, !dbg !2645

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2646
  %10 = add i64 %9, 1, !dbg !2647
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2648
  call void @llvm.dbg.value(metadata double %11, metadata !2633, metadata !DIExpression()), !dbg !2637
  call void @free(i8* %6), !dbg !2649
  %12 = load i32, i32* %1, align 4, !dbg !2650, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2650
  br i1 %13, label %14, label %21, !dbg !2652

14:                                               ; preds = %8
  %15 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2653, !tbaa !205
  %16 = icmp ne %struct.stack* %15, null, !dbg !2655
  %17 = fcmp oeq double %11, 0.000000e+00, !dbg !2656
  %18 = or i1 %17, %16, !dbg !2658
  br i1 %18, label %21, label %19, !dbg !2658

19:                                               ; preds = %14
  %20 = call double @log10(double %11) #18, !dbg !2659
  call void @llvm.dbg.value(metadata double %20, metadata !2632, metadata !DIExpression()), !dbg !2637
  br label %22, !dbg !2660

21:                                               ; preds = %8, %14, %5, %2
  call void @llvm.dbg.label(metadata !2635), !dbg !2661
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2662
  store i32 1, i32* %1, align 4, !dbg !2663, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2632, metadata !DIExpression()), !dbg !2637
  br label %22, !dbg !2664

22:                                               ; preds = %21, %19
  %23 = phi double [ 0.000000e+00, %21 ], [ %20, %19 ], !dbg !2637
  call void @llvm.dbg.value(metadata double %23, metadata !2632, metadata !DIExpression()), !dbg !2637
  call void @llvm.dbg.label(metadata !2636), !dbg !2665
  ret double %23, !dbg !2666
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_power(%struct.stack** %0, i32* %1) #3 !dbg !2667 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2669, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.value(metadata i32* %1, metadata !2670, metadata !DIExpression()), !dbg !2677
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2678, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2680
  br i1 %4, label %50, label %5, !dbg !2681

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2671, metadata !DIExpression()), !dbg !2677
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2682
  call void @llvm.dbg.value(metadata i8* %6, metadata !2674, metadata !DIExpression()), !dbg !2677
  %7 = icmp eq i8* %6, null, !dbg !2683
  br i1 %7, label %50, label %8, !dbg !2685

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2686
  %10 = add i64 %9, 1, !dbg !2687
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2688
  call void @llvm.dbg.value(metadata double %11, metadata !2672, metadata !DIExpression()), !dbg !2677
  call void @free(i8* %6), !dbg !2689
  %12 = load i32, i32* %1, align 4, !dbg !2690, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2690
  br i1 %13, label %14, label %50, !dbg !2692

14:                                               ; preds = %8
  %15 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2693
  call void @llvm.dbg.value(metadata i8* %15, metadata !2674, metadata !DIExpression()), !dbg !2677
  %16 = icmp eq i8* %15, null, !dbg !2694
  br i1 %16, label %50, label %17, !dbg !2696

17:                                               ; preds = %14
  %18 = call i64 @strlen(i8* nonnull %15), !dbg !2697
  %19 = add i64 %18, 1, !dbg !2698
  %20 = call double @atof(i8* nonnull %15, i64 %19, i32* nonnull %1) #18, !dbg !2699
  call void @llvm.dbg.value(metadata double %20, metadata !2673, metadata !DIExpression()), !dbg !2677
  call void @free(i8* %15), !dbg !2700
  %21 = load i32, i32* %1, align 4, !dbg !2701, !tbaa !295
  %22 = icmp eq i32 %21, 0, !dbg !2701
  br i1 %22, label %23, label %50, !dbg !2703

23:                                               ; preds = %17
  %24 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2704, !tbaa !205
  %25 = icmp eq %struct.stack* %24, null, !dbg !2706
  br i1 %25, label %26, label %50, !dbg !2707

26:                                               ; preds = %23
  %27 = fcmp oeq double %20, 0.000000e+00, !dbg !2708
  br i1 %27, label %51, label %28, !dbg !2710

28:                                               ; preds = %26
  %29 = fcmp oeq double %20, 1.000000e+00, !dbg !2711
  br i1 %29, label %51, label %30, !dbg !2713

30:                                               ; preds = %28
  %31 = fcmp uno double %20, 0.000000e+00, !dbg !2714
  br i1 %31, label %51, label %32, !dbg !2716

32:                                               ; preds = %30
  %33 = fcmp oeq double %11, 0.000000e+00, !dbg !2717
  %34 = fcmp ogt double %20, 0.000000e+00, !dbg !2719
  %35 = and i1 %33, %34, !dbg !2720
  br i1 %35, label %51, label %36, !dbg !2720

36:                                               ; preds = %32
  %37 = fcmp olt double %11, 0.000000e+00, !dbg !2721
  br i1 %37, label %38, label %48, !dbg !2723

38:                                               ; preds = %36
  %39 = call double @remainder(double %20, double 1.000000e+00) #18, !dbg !2724
  %40 = fcmp oeq double %39, 0.000000e+00, !dbg !2725
  br i1 %40, label %41, label %48, !dbg !2726

41:                                               ; preds = %38
  %42 = fneg double %11, !dbg !2727
  %43 = call double @pow(double %42, double %20) #18, !dbg !2728
  %44 = call double @remainder(double %20, double 2.000000e+00) #18, !dbg !2729
  %45 = fcmp oeq double %44, 0.000000e+00, !dbg !2730
  %46 = fneg double %43, !dbg !2731
  %47 = select i1 %45, double %43, double %46, !dbg !2731
  call void @llvm.dbg.value(metadata double %47, metadata !2671, metadata !DIExpression()), !dbg !2677
  br label %51, !dbg !2732

48:                                               ; preds = %38, %36
  %49 = call double @pow(double %11, double %20) #18, !dbg !2733
  call void @llvm.dbg.value(metadata double %49, metadata !2671, metadata !DIExpression()), !dbg !2677
  br label %51

50:                                               ; preds = %23, %17, %8, %14, %5, %2
  call void @llvm.dbg.label(metadata !2675), !dbg !2734
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2735
  store i32 1, i32* %1, align 4, !dbg !2736, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2671, metadata !DIExpression()), !dbg !2677
  br label %51, !dbg !2737

51:                                               ; preds = %32, %30, %28, %26, %41, %48, %50
  %52 = phi double [ 0.000000e+00, %50 ], [ %47, %41 ], [ %49, %48 ], [ 1.000000e+00, %26 ], [ %11, %28 ], [ %20, %30 ], [ 0.000000e+00, %32 ], !dbg !2677
  call void @llvm.dbg.value(metadata double %52, metadata !2671, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.label(metadata !2676), !dbg !2738
  ret double %52, !dbg !2739
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_product(%struct.stack** %0, i32* %1) #3 !dbg !2740 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2742, metadata !DIExpression()), !dbg !2750
  call void @llvm.dbg.value(metadata i32* %1, metadata !2743, metadata !DIExpression()), !dbg !2750
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2751, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2753
  br i1 %4, label %28, label %5, !dbg !2754

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2744, metadata !DIExpression()), !dbg !2750
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2755
  call void @llvm.dbg.value(metadata i8* %6, metadata !2747, metadata !DIExpression()), !dbg !2750
  %7 = icmp eq i8* %6, null, !dbg !2756
  br i1 %7, label %28, label %8, !dbg !2758

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2759
  %10 = add i64 %9, 1, !dbg !2760
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2761
  call void @llvm.dbg.value(metadata double %11, metadata !2745, metadata !DIExpression()), !dbg !2750
  call void @free(i8* %6), !dbg !2762
  %12 = load i32, i32* %1, align 4, !dbg !2763, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2763
  br i1 %13, label %14, label %28, !dbg !2765

14:                                               ; preds = %8
  %15 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2766
  call void @llvm.dbg.value(metadata i8* %15, metadata !2747, metadata !DIExpression()), !dbg !2750
  %16 = icmp eq i8* %15, null, !dbg !2767
  br i1 %16, label %28, label %17, !dbg !2769

17:                                               ; preds = %14
  %18 = call i64 @strlen(i8* nonnull %15), !dbg !2770
  %19 = add i64 %18, 1, !dbg !2771
  %20 = call double @atof(i8* nonnull %15, i64 %19, i32* nonnull %1) #18, !dbg !2772
  call void @llvm.dbg.value(metadata double %20, metadata !2746, metadata !DIExpression()), !dbg !2750
  call void @free(i8* %15), !dbg !2773
  %21 = load i32, i32* %1, align 4, !dbg !2774, !tbaa !295
  %22 = icmp eq i32 %21, 0, !dbg !2774
  br i1 %22, label %23, label %28, !dbg !2776

23:                                               ; preds = %17
  %24 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2777, !tbaa !205
  %25 = icmp eq %struct.stack* %24, null, !dbg !2779
  br i1 %25, label %26, label %28, !dbg !2780

26:                                               ; preds = %23
  %27 = fmul double %11, %20, !dbg !2781
  call void @llvm.dbg.value(metadata double %27, metadata !2744, metadata !DIExpression()), !dbg !2750
  br label %29, !dbg !2782

28:                                               ; preds = %23, %17, %8, %14, %5, %2
  call void @llvm.dbg.label(metadata !2748), !dbg !2783
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2784
  store i32 1, i32* %1, align 4, !dbg !2785, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2744, metadata !DIExpression()), !dbg !2750
  br label %29, !dbg !2786

29:                                               ; preds = %28, %26
  %30 = phi double [ 0.000000e+00, %28 ], [ %27, %26 ], !dbg !2750
  call void @llvm.dbg.value(metadata double %30, metadata !2744, metadata !DIExpression()), !dbg !2750
  call void @llvm.dbg.label(metadata !2749), !dbg !2787
  ret double %30, !dbg !2788
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_quotient(%struct.stack** %0, i32* %1) #3 !dbg !2789 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2791, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.value(metadata i32* %1, metadata !2792, metadata !DIExpression()), !dbg !2799
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2800, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2802
  br i1 %4, label %30, label %5, !dbg !2803

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2793, metadata !DIExpression()), !dbg !2799
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2804
  call void @llvm.dbg.value(metadata i8* %6, metadata !2796, metadata !DIExpression()), !dbg !2799
  %7 = icmp eq i8* %6, null, !dbg !2805
  br i1 %7, label %30, label %8, !dbg !2807

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2808
  %10 = add i64 %9, 1, !dbg !2809
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2810
  call void @llvm.dbg.value(metadata double %11, metadata !2794, metadata !DIExpression()), !dbg !2799
  call void @free(i8* %6), !dbg !2811
  %12 = load i32, i32* %1, align 4, !dbg !2812, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2812
  br i1 %13, label %14, label %30, !dbg !2814

14:                                               ; preds = %8
  %15 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2815
  call void @llvm.dbg.value(metadata i8* %15, metadata !2796, metadata !DIExpression()), !dbg !2799
  %16 = icmp eq i8* %15, null, !dbg !2816
  br i1 %16, label %30, label %17, !dbg !2818

17:                                               ; preds = %14
  %18 = call i64 @strlen(i8* nonnull %15), !dbg !2819
  %19 = add i64 %18, 1, !dbg !2820
  %20 = call double @atof(i8* nonnull %15, i64 %19, i32* nonnull %1) #18, !dbg !2821
  call void @llvm.dbg.value(metadata double %20, metadata !2795, metadata !DIExpression()), !dbg !2799
  call void @free(i8* %15), !dbg !2822
  %21 = load i32, i32* %1, align 4, !dbg !2823, !tbaa !295
  %22 = icmp eq i32 %21, 0, !dbg !2823
  br i1 %22, label %23, label %30, !dbg !2825

23:                                               ; preds = %17
  %24 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2826, !tbaa !205
  %25 = icmp ne %struct.stack* %24, null, !dbg !2828
  %26 = fcmp oeq double %20, 0.000000e+00, !dbg !2829
  %27 = or i1 %26, %25, !dbg !2831
  br i1 %27, label %30, label %28, !dbg !2831

28:                                               ; preds = %23
  %29 = fdiv double %11, %20, !dbg !2832
  call void @llvm.dbg.value(metadata double %29, metadata !2793, metadata !DIExpression()), !dbg !2799
  br label %31, !dbg !2833

30:                                               ; preds = %17, %8, %23, %14, %5, %2
  call void @llvm.dbg.label(metadata !2797), !dbg !2834
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2835
  store i32 1, i32* %1, align 4, !dbg !2836, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2793, metadata !DIExpression()), !dbg !2799
  br label %31, !dbg !2837

31:                                               ; preds = %30, %28
  %32 = phi double [ 0.000000e+00, %30 ], [ %29, %28 ], !dbg !2799
  call void @llvm.dbg.value(metadata double %32, metadata !2793, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.label(metadata !2798), !dbg !2838
  ret double %32, !dbg !2839
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_sin(%struct.stack** %0, i32* %1) #3 !dbg !2840 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2842, metadata !DIExpression()), !dbg !2849
  call void @llvm.dbg.value(metadata i32* %1, metadata !2843, metadata !DIExpression()), !dbg !2849
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2850, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2852
  br i1 %4, label %19, label %5, !dbg !2853

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2844, metadata !DIExpression()), !dbg !2849
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2854
  call void @llvm.dbg.value(metadata i8* %6, metadata !2846, metadata !DIExpression()), !dbg !2849
  %7 = icmp eq i8* %6, null, !dbg !2855
  br i1 %7, label %19, label %8, !dbg !2857

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2858
  %10 = add i64 %9, 1, !dbg !2859
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2860
  call void @llvm.dbg.value(metadata double %11, metadata !2845, metadata !DIExpression()), !dbg !2849
  call void @free(i8* %6), !dbg !2861
  %12 = load i32, i32* %1, align 4, !dbg !2862, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2862
  br i1 %13, label %14, label %19, !dbg !2864

14:                                               ; preds = %8
  %15 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2865, !tbaa !205
  %16 = icmp eq %struct.stack* %15, null, !dbg !2867
  br i1 %16, label %17, label %19, !dbg !2868

17:                                               ; preds = %14
  %18 = call double @sin(double %11) #18, !dbg !2869
  call void @llvm.dbg.value(metadata double %18, metadata !2844, metadata !DIExpression()), !dbg !2849
  br label %20, !dbg !2870

19:                                               ; preds = %14, %8, %5, %2
  call void @llvm.dbg.label(metadata !2847), !dbg !2871
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2872
  store i32 1, i32* %1, align 4, !dbg !2873, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2844, metadata !DIExpression()), !dbg !2849
  br label %20, !dbg !2874

20:                                               ; preds = %19, %17
  %21 = phi double [ 0.000000e+00, %19 ], [ %18, %17 ], !dbg !2849
  call void @llvm.dbg.value(metadata double %21, metadata !2844, metadata !DIExpression()), !dbg !2849
  call void @llvm.dbg.label(metadata !2848), !dbg !2875
  ret double %21, !dbg !2876
}

; Function Attrs: nofree nounwind
declare dso_local double @sin(double) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_sqrt(%struct.stack** %0, i32* %1) #3 !dbg !2877 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2879, metadata !DIExpression()), !dbg !2886
  call void @llvm.dbg.value(metadata i32* %1, metadata !2880, metadata !DIExpression()), !dbg !2886
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2887, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2889
  br i1 %4, label %21, label %5, !dbg !2890

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2881, metadata !DIExpression()), !dbg !2886
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2891
  call void @llvm.dbg.value(metadata i8* %6, metadata !2883, metadata !DIExpression()), !dbg !2886
  %7 = icmp eq i8* %6, null, !dbg !2892
  br i1 %7, label %21, label %8, !dbg !2894

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2895
  %10 = add i64 %9, 1, !dbg !2896
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2897
  call void @llvm.dbg.value(metadata double %11, metadata !2882, metadata !DIExpression()), !dbg !2886
  call void @free(i8* %6), !dbg !2898
  %12 = load i32, i32* %1, align 4, !dbg !2899, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2899
  br i1 %13, label %14, label %21, !dbg !2901

14:                                               ; preds = %8
  %15 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2902, !tbaa !205
  %16 = icmp ne %struct.stack* %15, null, !dbg !2904
  %17 = fcmp olt double %11, 0.000000e+00, !dbg !2905
  %18 = or i1 %17, %16, !dbg !2907
  br i1 %18, label %21, label %19, !dbg !2907

19:                                               ; preds = %14
  %20 = call double @sqrt(double %11) #18, !dbg !2908
  call void @llvm.dbg.value(metadata double %20, metadata !2881, metadata !DIExpression()), !dbg !2886
  br label %22, !dbg !2909

21:                                               ; preds = %8, %14, %5, %2
  call void @llvm.dbg.label(metadata !2884), !dbg !2910
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2911
  store i32 1, i32* %1, align 4, !dbg !2912, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2881, metadata !DIExpression()), !dbg !2886
  br label %22, !dbg !2913

22:                                               ; preds = %21, %19
  %23 = phi double [ 0.000000e+00, %21 ], [ %20, %19 ], !dbg !2886
  call void @llvm.dbg.value(metadata double %23, metadata !2881, metadata !DIExpression()), !dbg !2886
  call void @llvm.dbg.label(metadata !2885), !dbg !2914
  ret double %23, !dbg !2915
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_subtract(%struct.stack** %0, i32* %1) #3 !dbg !2916 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2918, metadata !DIExpression()), !dbg !2926
  call void @llvm.dbg.value(metadata i32* %1, metadata !2919, metadata !DIExpression()), !dbg !2926
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2927, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2929
  br i1 %4, label %28, label %5, !dbg !2930

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2920, metadata !DIExpression()), !dbg !2926
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2931
  call void @llvm.dbg.value(metadata i8* %6, metadata !2923, metadata !DIExpression()), !dbg !2926
  %7 = icmp eq i8* %6, null, !dbg !2932
  br i1 %7, label %28, label %8, !dbg !2934

8:                                                ; preds = %5
  %9 = call i64 @strlen(i8* nonnull %6), !dbg !2935
  %10 = add i64 %9, 1, !dbg !2936
  %11 = call double @atof(i8* nonnull %6, i64 %10, i32* %1) #18, !dbg !2937
  call void @llvm.dbg.value(metadata double %11, metadata !2921, metadata !DIExpression()), !dbg !2926
  call void @free(i8* %6), !dbg !2938
  %12 = load i32, i32* %1, align 4, !dbg !2939, !tbaa !295
  %13 = icmp eq i32 %12, 0, !dbg !2939
  br i1 %13, label %14, label %28, !dbg !2941

14:                                               ; preds = %8
  %15 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2942
  call void @llvm.dbg.value(metadata i8* %15, metadata !2923, metadata !DIExpression()), !dbg !2926
  %16 = icmp eq i8* %15, null, !dbg !2943
  br i1 %16, label %28, label %17, !dbg !2945

17:                                               ; preds = %14
  %18 = call i64 @strlen(i8* nonnull %15), !dbg !2946
  %19 = add i64 %18, 1, !dbg !2947
  %20 = call double @atof(i8* nonnull %15, i64 %19, i32* nonnull %1) #18, !dbg !2948
  call void @llvm.dbg.value(metadata double %20, metadata !2922, metadata !DIExpression()), !dbg !2926
  call void @free(i8* %15), !dbg !2949
  %21 = load i32, i32* %1, align 4, !dbg !2950, !tbaa !295
  %22 = icmp eq i32 %21, 0, !dbg !2950
  br i1 %22, label %23, label %28, !dbg !2952

23:                                               ; preds = %17
  %24 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2953, !tbaa !205
  %25 = icmp eq %struct.stack* %24, null, !dbg !2955
  br i1 %25, label %26, label %28, !dbg !2956

26:                                               ; preds = %23
  %27 = fsub double %11, %20, !dbg !2957
  call void @llvm.dbg.value(metadata double %27, metadata !2920, metadata !DIExpression()), !dbg !2926
  br label %29, !dbg !2958

28:                                               ; preds = %23, %17, %8, %14, %5, %2
  call void @llvm.dbg.label(metadata !2924), !dbg !2959
  call void (%struct.stack**, ...) bitcast (void (%struct.stack**)* @clear_stack to void (%struct.stack**, ...)*)(%struct.stack** nonnull %0) #18, !dbg !2960
  store i32 1, i32* %1, align 4, !dbg !2961, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2920, metadata !DIExpression()), !dbg !2926
  br label %29, !dbg !2962

29:                                               ; preds = %28, %26
  %30 = phi double [ 0.000000e+00, %28 ], [ %27, %26 ], !dbg !2926
  call void @llvm.dbg.value(metadata double %30, metadata !2920, metadata !DIExpression()), !dbg !2926
  call void @llvm.dbg.label(metadata !2925), !dbg !2963
  ret double %30, !dbg !2964
}

; Function Attrs: nounwind uwtable
define dso_local double @handle_op_sum(%struct.stack** %0, i32* %1) #3 !dbg !2965 {
  call void @llvm.dbg.value(metadata %struct.stack** %0, metadata !2967, metadata !DIExpression()), !dbg !2974
  call void @llvm.dbg.value(metadata i32* %1, metadata !2968, metadata !DIExpression()), !dbg !2974
  %3 = load %struct.stack*, %struct.stack** %0, align 8, !dbg !2975, !tbaa !205
  %4 = icmp eq %struct.stack* %3, null, !dbg !2977
  br i1 %4, label %20, label %5, !dbg !2978

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2969, metadata !DIExpression()), !dbg !2974
  %6 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2979
  call void @llvm.dbg.value(metadata i8* %6, metadata !2971, metadata !DIExpression()), !dbg !2974
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2969, metadata !DIExpression()), !dbg !2974
  %7 = icmp eq i8* %6, null, !dbg !2980
  br i1 %7, label %21, label %8, !dbg !2981

8:                                                ; preds = %5, %16
  %9 = phi i8* [ %18, %16 ], [ %6, %5 ]
  %10 = phi double [ %17, %16 ], [ 0.000000e+00, %5 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !2971, metadata !DIExpression()), !dbg !2974
  call void @llvm.dbg.value(metadata double %10, metadata !2969, metadata !DIExpression()), !dbg !2974
  %11 = call i64 @strlen(i8* nonnull %9), !dbg !2982
  %12 = add i64 %11, 1, !dbg !2984
  %13 = call double @atof(i8* nonnull %9, i64 %12, i32* %1) #18, !dbg !2985
  call void @llvm.dbg.value(metadata double %13, metadata !2970, metadata !DIExpression()), !dbg !2974
  call void @free(i8* %9), !dbg !2986
  %14 = load i32, i32* %1, align 4, !dbg !2987, !tbaa !295
  %15 = icmp eq i32 %14, 0, !dbg !2987
  br i1 %15, label %16, label %20, !dbg !2989

16:                                               ; preds = %8
  %17 = fadd double %10, %13, !dbg !2990
  call void @llvm.dbg.value(metadata double %17, metadata !2969, metadata !DIExpression()), !dbg !2974
  %18 = call i8* @pop_copy(%struct.stack** nonnull %0) #18, !dbg !2991
  call void @llvm.dbg.value(metadata i8* %18, metadata !2971, metadata !DIExpression()), !dbg !2974
  %19 = icmp eq i8* %18, null, !dbg !2980
  br i1 %19, label %21, label %8, !dbg !2981, !llvm.loop !2992

20:                                               ; preds = %8, %2
  call void @llvm.dbg.label(metadata !2972), !dbg !2994
  store i32 1, i32* %1, align 4, !dbg !2995, !tbaa !295
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !2969, metadata !DIExpression()), !dbg !2974
  br label %21, !dbg !2996

21:                                               ; preds = %16, %5, %20
  %22 = phi double [ 0.000000e+00, %20 ], [ 0.000000e+00, %5 ], [ %17, %16 ], !dbg !2974
  call void @llvm.dbg.value(metadata double %22, metadata !2969, metadata !DIExpression()), !dbg !2974
  call void @llvm.dbg.label(metadata !2973), !dbg !2997
  ret double %22, !dbg !2998
}

attributes #0 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #12 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind }
attributes #15 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noreturn nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind }
attributes #19 = { nounwind readonly }
attributes #20 = { noreturn nounwind }
attributes #21 = { readnone }

!llvm.dbg.cu = !{!2, !128, !131, !133, !135, !167, !169, !171, !173}
!llvm.ident = !{!190, !190, !190, !190, !190, !190, !190, !190, !190}
!llvm.module.flags = !{!191, !192, !193}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_g_sheet", scope: !2, file: !3, line: 58, type: !101, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !16, globals: !97, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "accel.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 43, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10, !11, !12, !13, !14, !15}
!8 = !DIEnumerator(name: "UNUSED", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "BAD_CELL", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "STRING", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "QUOTED_STRING", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "DOUBLE", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "FUNCTION", value: 5, isUnsigned: true)
!14 = !DIEnumerator(name: "CELL_ID", value: 6, isUnsigned: true)
!15 = !DIEnumerator(name: "FORMULA", value: 7, isUnsigned: true)
!16 = !{!17, !26, !31, !35, !21, !39, !42, !54, !66, !69, !75, !78, !82, !85, !88, !91, !94}
!17 = !DISubprogram(name: "ftoa", scope: !18, file: !18, line: 7, type: !19, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!18 = !DIFile(filename: "./convert.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!19 = !DISubroutineType(types: !20)
!20 = !{!21, !23, !21, !24}
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!22 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!23 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!24 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!25 = !{}
!26 = !DISubprogram(name: "free", scope: !27, file: !27, line: 20, type: !28, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!27 = !DIFile(filename: "./stdlib.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!28 = !DISubroutineType(types: !29)
!29 = !{null, !30}
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!31 = !DISubprogram(name: "itoa", scope: !18, file: !18, line: 6, type: !32, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!32 = !DISubroutineType(types: !33)
!33 = !{!21, !34, !21, !24}
!34 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!35 = !DISubprogram(name: "valid_cell_id", scope: !36, file: !36, line: 10, type: !37, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!36 = !DIFile(filename: "./accelio.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!37 = !DISubroutineType(types: !38)
!38 = !{!34, !21}
!39 = !DISubprogram(name: "get_rowcol", scope: !36, file: !36, line: 11, type: !40, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!40 = !DISubroutineType(types: !41)
!41 = !{!34, !21, !21, !21, !22}
!42 = !DISubprogram(name: "push_copy", scope: !43, file: !43, line: 12, type: !44, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!43 = !DIFile(filename: "./stack.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!44 = !DISubroutineType(types: !45)
!45 = !{!34, !46, !21, !24}
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!48 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stack", file: !43, line: 5, size: 128, elements: !49)
!49 = !{!50, !51}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !48, file: !43, line: 6, baseType: !21, size: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !48, file: !43, line: 7, baseType: !52, size: 64, offset: 64)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!53 = !DIDerivedType(tag: DW_TAG_typedef, name: "stack_t", file: !43, line: 4, baseType: !48)
!54 = !DISubprogram(name: "dequeue_copy", scope: !55, file: !55, line: 13, type: !56, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!55 = !DIFile(filename: "./queue.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!56 = !DISubroutineType(types: !57)
!57 = !{!21, !58}
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!60 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue", file: !55, line: 5, size: 128, elements: !61)
!61 = !{!62, !63}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !60, file: !55, line: 6, baseType: !21, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !60, file: !55, line: 7, baseType: !64, size: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "queue_t", file: !55, line: 4, baseType: !60)
!66 = !DISubprogram(name: "push", scope: !43, file: !43, line: 11, type: !67, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!67 = !DISubroutineType(types: !68)
!68 = !{!34, !46, !21}
!69 = !DISubprogram(name: "memcmp", scope: !70, file: !70, line: 9, type: !71, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!70 = !DIFile(filename: "./string.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!71 = !DISubroutineType(types: !72)
!72 = !{!34, !30, !73, !24}
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!75 = !DISubprogram(name: "pop_copy", scope: !43, file: !43, line: 13, type: !76, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!76 = !DISubroutineType(types: !77)
!77 = !{!21, !46}
!78 = !DISubprogram(name: "atof", scope: !18, file: !18, line: 8, type: !79, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!79 = !DISubroutineType(types: !80)
!80 = !{!23, !21, !24, !81}
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!82 = !DISubprogram(name: "clear_queue", scope: !55, file: !55, line: 14, type: !83, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!83 = !DISubroutineType(types: !84)
!84 = !{null, !58}
!85 = !DISubprogram(name: "sanitize_formula", scope: !36, file: !36, line: 12, type: !86, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!86 = !DISubroutineType(types: !87)
!87 = !{!34, !21, !24}
!88 = !DISubprogram(name: "enqueue_copy", scope: !55, file: !55, line: 12, type: !89, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!89 = !DISubroutineType(types: !90)
!90 = !{!34, !58, !21, !24}
!91 = !DISubprogram(name: "peek_top", scope: !43, file: !43, line: 10, type: !92, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!92 = !DISubroutineType(types: !93)
!93 = !{!21, !47}
!94 = !DISubprogram(name: "enqueue", scope: !55, file: !55, line: 11, type: !95, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!95 = !DISubroutineType(types: !96)
!96 = !{!34, !58, !21}
!97 = !{!0, !98, !110}
!98 = !DIGlobalVariableExpression(var: !99, expr: !DIExpression())
!99 = distinct !DIGlobalVariable(name: "g_sheet", scope: !2, file: !3, line: 59, type: !100, isLocal: true, isDefinition: true)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "cell_t", file: !3, line: 49, baseType: !103)
!103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cell", file: !3, line: 44, size: 192, elements: !104)
!104 = !{!105, !106, !108, !109}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !103, file: !3, line: 45, baseType: !6, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "cell_type", scope: !103, file: !3, line: 46, baseType: !107, size: 32, offset: 32)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "cell_type_e", file: !3, line: 43, baseType: !5)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !103, file: !3, line: 47, baseType: !21, size: 64, offset: 64)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "formula", scope: !103, file: !3, line: 48, baseType: !21, size: 64, offset: 128)
!110 = !DIGlobalVariableExpression(var: !111, expr: !DIExpression())
!111 = distinct !DIGlobalVariable(name: "operators", scope: !2, file: !3, line: 61, type: !112, isLocal: true, isDefinition: true)
!112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 2432, elements: !126)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "operator_t", file: !114, line: 11, baseType: !115)
!114 = !DIFile(filename: "./accelfunc.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 8, size: 128, elements: !116)
!116 = !{!117, !120}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !115, file: !114, line: 9, baseType: !118, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !115, file: !114, line: 10, baseType: !121, size: 64, offset: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "handle_op_t", file: !114, line: 6, baseType: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!123 = !DISubroutineType(types: !124)
!124 = !{!23, !125, !81}
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!126 = !{!127}
!127 = !DISubrange(count: 19, lowerBound: 0)
!128 = distinct !DICompileUnit(language: DW_LANG_C99, file: !129, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !130, splitDebugInlining: false, nameTableKind: None)
!129 = !DIFile(filename: "stack.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!130 = !{!26}
!131 = distinct !DICompileUnit(language: DW_LANG_C99, file: !132, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !130, splitDebugInlining: false, nameTableKind: None)
!132 = !DIFile(filename: "queue.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!133 = distinct !DICompileUnit(language: DW_LANG_C99, file: !134, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, splitDebugInlining: false, nameTableKind: None)
!134 = !DIFile(filename: "itoa.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !136, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !137, splitDebugInlining: false, nameTableKind: None)
!136 = !DIFile(filename: "main.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!137 = !{!138, !142, !147, !150, !69, !35, !153, !156, !157, !161, !164}
!138 = !DISubprogram(name: "init_sheet", scope: !139, file: !139, line: 4, type: !140, spFlags: DISPFlagOptimized, retainedNodes: !25)
!139 = !DIFile(filename: "./accel.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!140 = !DISubroutineType(types: !141)
!141 = !{!34, null}
!142 = !DISubprogram(name: "receive", scope: !143, file: !143, line: 54, type: !144, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!143 = !DIFile(filename: "./libcgc.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!144 = !DISubroutineType(types: !145)
!145 = !{!34, !34, !30, !24, !146}
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!147 = !DISubprogram(name: "_terminate", scope: !143, file: !143, line: 52, type: !148, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized, retainedNodes: !25)
!148 = !DISubroutineType(types: !149)
!149 = !{null, !6}
!150 = !DISubprogram(name: "strtrim", scope: !36, file: !36, line: 9, type: !151, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!151 = !DISubroutineType(types: !152)
!152 = !{!34, !21, !24, !34}
!153 = !DISubprogram(name: "show_cell", scope: !139, file: !139, line: 5, type: !154, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!154 = !DISubroutineType(types: !155)
!155 = !{!21, !21, !34, !21, !24}
!156 = !DISubprogram(name: "clear_cell", scope: !139, file: !139, line: 7, type: !37, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!157 = !DISubprogram(name: "strsep", scope: !70, file: !70, line: 16, type: !158, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!158 = !DISubroutineType(types: !159)
!159 = !{!21, !160, !118}
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!161 = !DISubprogram(name: "set_cell", scope: !139, file: !139, line: 6, type: !162, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!162 = !DISubroutineType(types: !163)
!163 = !{!34, !21, !21, !24}
!164 = !DISubprogram(name: "print_assigned_cells", scope: !139, file: !139, line: 8, type: !165, spFlags: DISPFlagOptimized, retainedNodes: !25)
!165 = !DISubroutineType(types: !166)
!166 = !{null, null}
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, splitDebugInlining: false, nameTableKind: None)
!168 = !DIFile(filename: "atof.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!169 = distinct !DICompileUnit(language: DW_LANG_C99, file: !170, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, splitDebugInlining: false, nameTableKind: None)
!170 = !DIFile(filename: "ftoa.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!171 = distinct !DICompileUnit(language: DW_LANG_C99, file: !172, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !130, splitDebugInlining: false, nameTableKind: None)
!172 = !DIFile(filename: "accelio.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!173 = distinct !DICompileUnit(language: DW_LANG_C99, file: !174, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !25, retainedTypes: !175, splitDebugInlining: false, nameTableKind: None)
!174 = !DIFile(filename: "accelfunc.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00013/src")
!175 = !{!176, !78, !26, !23, !187}
!176 = !DISubprogram(name: "pop_copy", scope: !43, file: !43, line: 13, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!177 = !DISubroutineType(types: !178)
!178 = !{!21, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stack", file: !43, line: 5, size: 128, elements: !182)
!182 = !{!183, !184}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !43, line: 6, baseType: !21, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !181, file: !43, line: 7, baseType: !185, size: 64, offset: 64)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "stack_t", file: !43, line: 4, baseType: !181)
!187 = !DISubprogram(name: "push", scope: !43, file: !43, line: 11, type: !188, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !25)
!188 = !DISubroutineType(types: !189)
!189 = !{!34, !179, !21}
!190 = !{!"clang version 10.0.0-4ubuntu1 "}
!191 = !{i32 7, !"Dwarf Version", i32 4}
!192 = !{i32 2, !"Debug Info Version", i32 3}
!193 = !{i32 1, !"wchar_size", i32 4}
!194 = distinct !DISubprogram(name: "init_sheet", scope: !3, file: !3, line: 84, type: !195, scopeLine: 85, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !197)
!195 = !DISubroutineType(types: !196)
!196 = !{!34}
!197 = !{!198, !200, !201}
!198 = !DILocalVariable(name: "i", scope: !194, file: !3, line: 86, type: !199)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !143, line: 13, baseType: !24)
!200 = !DILocalVariable(name: "j", scope: !194, file: !3, line: 86, type: !199)
!201 = !DILocalVariable(name: "id", scope: !194, file: !3, line: 87, type: !6)
!202 = !DILocation(line: 0, scope: !194)
!203 = !DILocation(line: 90, column: 16, scope: !194)
!204 = !DILocation(line: 90, column: 14, scope: !194)
!205 = !{!206, !206, i64 0}
!206 = !{!"any pointer", !207, i64 0}
!207 = !{!"omnipotent char", !208, i64 0}
!208 = !{!"Simple C/C++ TBAA"}
!209 = !DILocation(line: 91, column: 18, scope: !210)
!210 = distinct !DILexicalBlock(scope: !194, file: !3, line: 91, column: 9)
!211 = !DILocation(line: 91, column: 9, scope: !194)
!212 = !DILocation(line: 94, column: 15, scope: !194)
!213 = !DILocation(line: 94, column: 13, scope: !194)
!214 = !DILocation(line: 95, column: 17, scope: !215)
!215 = distinct !DILexicalBlock(scope: !194, file: !3, line: 95, column: 9)
!216 = !DILocation(line: 95, column: 9, scope: !194)
!217 = !DILocation(line: 0, scope: !218)
!218 = distinct !DILexicalBlock(scope: !219, file: !3, line: 98, column: 5)
!219 = distinct !DILexicalBlock(scope: !194, file: !3, line: 98, column: 5)
!220 = !DILocation(line: 98, column: 5, scope: !219)
!221 = !DILocation(line: 0, scope: !222)
!222 = distinct !DILexicalBlock(scope: !223, file: !3, line: 102, column: 9)
!223 = distinct !DILexicalBlock(scope: !224, file: !3, line: 102, column: 9)
!224 = distinct !DILexicalBlock(scope: !225, file: !3, line: 101, column: 5)
!225 = distinct !DILexicalBlock(scope: !194, file: !3, line: 101, column: 5)
!226 = !DILocation(line: 101, column: 5, scope: !225)
!227 = !DILocation(line: 99, column: 34, scope: !218)
!228 = !DILocation(line: 99, column: 23, scope: !218)
!229 = !DILocation(line: 99, column: 9, scope: !218)
!230 = !DILocation(line: 99, column: 20, scope: !218)
!231 = !DILocation(line: 98, column: 32, scope: !218)
!232 = !DILocation(line: 98, column: 19, scope: !218)
!233 = distinct !{!233, !220, !234}
!234 = !DILocation(line: 99, column: 44, scope: !219)
!235 = !DILocation(line: 102, column: 9, scope: !223)
!236 = !DILocation(line: 103, column: 34, scope: !222)
!237 = !DILocation(line: 103, column: 27, scope: !222)
!238 = !DILocation(line: 103, column: 30, scope: !222)
!239 = !{!240, !241, i64 0}
!240 = !{!"cell", !241, i64 0, !207, i64 4, !206, i64 8, !206, i64 16}
!241 = !{!"int", !207, i64 0}
!242 = !DILocation(line: 102, column: 36, scope: !222)
!243 = !DILocation(line: 102, column: 23, scope: !222)
!244 = distinct !{!244, !235, !245}
!245 = !DILocation(line: 103, column: 34, scope: !223)
!246 = !DILocation(line: 101, column: 32, scope: !224)
!247 = !DILocation(line: 101, column: 19, scope: !224)
!248 = distinct !{!248, !226, !249}
!249 = !DILocation(line: 103, column: 34, scope: !225)
!250 = !DILocation(line: 106, column: 1, scope: !194)
!251 = distinct !DISubprogram(name: "show_cell", scope: !3, file: !3, line: 108, type: !252, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !254)
!252 = !DISubroutineType(types: !253)
!253 = !{!21, !21, !34, !21, !199}
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262}
!255 = !DILocalVariable(name: "cell_id", arg: 1, scope: !251, file: !3, line: 108, type: !21)
!256 = !DILocalVariable(name: "is_repr", arg: 2, scope: !251, file: !3, line: 108, type: !34)
!257 = !DILocalVariable(name: "val_str", arg: 3, scope: !251, file: !3, line: 108, type: !21)
!258 = !DILocalVariable(name: "size", arg: 4, scope: !251, file: !3, line: 108, type: !199)
!259 = !DILocalVariable(name: "is_bad_formula", scope: !251, file: !3, line: 110, type: !34)
!260 = !DILocalVariable(name: "val", scope: !251, file: !3, line: 111, type: !23)
!261 = !DILocalVariable(name: "cell", scope: !251, file: !3, line: 112, type: !101)
!262 = !DILocalVariable(name: "cir_ref", scope: !263, file: !3, line: 126, type: !52)
!263 = distinct !DILexicalBlock(scope: !264, file: !3, line: 125, column: 32)
!264 = distinct !DILexicalBlock(scope: !251, file: !3, line: 125, column: 9)
!265 = !DILocation(line: 0, scope: !251)
!266 = !DILocation(line: 110, column: 5, scope: !251)
!267 = !DILocation(line: 112, column: 20, scope: !251)
!268 = !DILocation(line: 114, column: 14, scope: !269)
!269 = distinct !DILexicalBlock(scope: !251, file: !3, line: 114, column: 9)
!270 = !DILocation(line: 114, column: 9, scope: !251)
!271 = !DILocation(line: 117, column: 15, scope: !272)
!272 = distinct !DILexicalBlock(scope: !251, file: !3, line: 117, column: 9)
!273 = !{!240, !207, i64 4}
!274 = !DILocation(line: 117, column: 9, scope: !251)
!275 = !DILocation(line: 120, column: 9, scope: !276)
!276 = distinct !DILexicalBlock(scope: !251, file: !3, line: 119, column: 9)
!277 = !DILocation(line: 122, column: 9, scope: !278)
!278 = distinct !DILexicalBlock(scope: !251, file: !3, line: 122, column: 9)
!279 = !DILocation(line: 122, column: 9, scope: !251)
!280 = !DILocation(line: 123, column: 22, scope: !278)
!281 = !{!240, !206, i64 8}
!282 = !DILocation(line: 123, column: 9, scope: !278)
!283 = !DILocation(line: 125, column: 15, scope: !264)
!284 = !{!240, !206, i64 16}
!285 = !DILocation(line: 125, column: 23, scope: !264)
!286 = !DILocation(line: 125, column: 9, scope: !251)
!287 = !DILocation(line: 126, column: 9, scope: !263)
!288 = !DILocation(line: 0, scope: !263)
!289 = !DILocation(line: 126, column: 18, scope: !263)
!290 = !DILocation(line: 127, column: 34, scope: !263)
!291 = !DILocation(line: 127, column: 76, scope: !263)
!292 = !DILocation(line: 127, column: 15, scope: !263)
!293 = !DILocation(line: 128, column: 13, scope: !294)
!294 = distinct !DILexicalBlock(scope: !263, file: !3, line: 128, column: 13)
!295 = !{!241, !241, i64 0}
!296 = !DILocation(line: 128, column: 13, scope: !263)
!297 = !DILocation(line: 132, column: 9, scope: !263)
!298 = !DILocation(line: 133, column: 9, scope: !263)
!299 = !DILocation(line: 134, column: 5, scope: !264)
!300 = !DILocation(line: 135, column: 22, scope: !301)
!301 = distinct !DILexicalBlock(scope: !264, file: !3, line: 134, column: 12)
!302 = !DILocation(line: 135, column: 9, scope: !301)
!303 = !DILocation(line: 137, column: 1, scope: !251)
!304 = distinct !DISubprogram(name: "get_cell", scope: !3, file: !3, line: 305, type: !305, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !307)
!305 = !DISubroutineType(types: !306)
!306 = !{!101, !21}
!307 = !{!308, !309, !313, !314, !315, !316, !317}
!308 = !DILocalVariable(name: "cell_id", arg: 1, scope: !304, file: !3, line: 305, type: !21)
!309 = !DILocalVariable(name: "row_str", scope: !304, file: !3, line: 307, type: !310)
!310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 24, elements: !311)
!311 = !{!312}
!312 = !DISubrange(count: 3, lowerBound: 0)
!313 = !DILocalVariable(name: "col_str", scope: !304, file: !3, line: 308, type: !310)
!314 = !DILocalVariable(name: "row_idx", scope: !304, file: !3, line: 309, type: !34)
!315 = !DILocalVariable(name: "col_idx", scope: !304, file: !3, line: 309, type: !34)
!316 = !DILocalVariable(name: "i", scope: !304, file: !3, line: 310, type: !34)
!317 = !DILocalVariable(name: "len", scope: !304, file: !3, line: 310, type: !34)
!318 = !DILocation(line: 0, scope: !304)
!319 = !DILocation(line: 307, column: 5, scope: !304)
!320 = !DILocation(line: 307, column: 10, scope: !304)
!321 = !DILocation(line: 308, column: 5, scope: !304)
!322 = !DILocation(line: 308, column: 10, scope: !304)
!323 = !DILocation(line: 312, column: 9, scope: !324)
!324 = distinct !DILexicalBlock(scope: !304, file: !3, line: 312, column: 9)
!325 = !DILocation(line: 312, column: 53, scope: !324)
!326 = !DILocation(line: 312, column: 9, scope: !304)
!327 = !DILocation(line: 315, column: 11, scope: !304)
!328 = !DILocation(line: 316, column: 19, scope: !329)
!329 = distinct !DILexicalBlock(scope: !330, file: !3, line: 316, column: 5)
!330 = distinct !DILexicalBlock(scope: !304, file: !3, line: 316, column: 5)
!331 = !DILocation(line: 316, column: 5, scope: !330)
!332 = !DILocation(line: 317, column: 22, scope: !329)
!333 = !{!207, !207, i64 0}
!334 = !DILocation(line: 317, column: 33, scope: !329)
!335 = !DILocation(line: 317, column: 21, scope: !329)
!336 = !DILocation(line: 317, column: 57, scope: !329)
!337 = !DILocation(line: 317, column: 49, scope: !329)
!338 = !DILocation(line: 317, column: 41, scope: !329)
!339 = !DILocation(line: 317, column: 39, scope: !329)
!340 = !DILocation(line: 317, column: 17, scope: !329)
!341 = !DILocation(line: 316, column: 27, scope: !329)
!342 = distinct !{!342, !331, !343}
!343 = !DILocation(line: 317, column: 61, scope: !330)
!344 = !DILocation(line: 319, column: 5, scope: !304)
!345 = !DILocation(line: 320, column: 15, scope: !304)
!346 = !DILocation(line: 321, column: 13, scope: !304)
!347 = !DILocation(line: 321, column: 5, scope: !304)
!348 = !DILocation(line: 323, column: 1, scope: !304)
!349 = distinct !DISubprogram(name: "eval_formula", scope: !3, file: !3, line: 379, type: !350, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !352)
!350 = !DISubroutineType(types: !351)
!351 = !{!23, !21, !81, !125, !34}
!352 = !{!353, !354, !355, !356, !357, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !373, !376, !377, !378}
!353 = !DILocalVariable(name: "formula", arg: 1, scope: !349, file: !3, line: 379, type: !21)
!354 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !349, file: !3, line: 379, type: !81)
!355 = !DILocalVariable(name: "cir_ref", arg: 3, scope: !349, file: !3, line: 379, type: !125)
!356 = !DILocalVariable(name: "id", arg: 4, scope: !349, file: !3, line: 379, type: !34)
!357 = !DILocalVariable(name: "val_str", scope: !349, file: !3, line: 381, type: !358)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4096, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 512, lowerBound: 0)
!361 = !DILocalVariable(name: "tmp_id_str", scope: !349, file: !3, line: 382, type: !358)
!362 = !DILocalVariable(name: "size", scope: !349, file: !3, line: 383, type: !199)
!363 = !DILocalVariable(name: "val", scope: !349, file: !3, line: 384, type: !23)
!364 = !DILocalVariable(name: "result", scope: !349, file: !3, line: 385, type: !23)
!365 = !DILocalVariable(name: "cell_type", scope: !349, file: !3, line: 387, type: !107)
!366 = !DILocalVariable(name: "arg", scope: !349, file: !3, line: 388, type: !21)
!367 = !DILocalVariable(name: "rpn", scope: !349, file: !3, line: 394, type: !64)
!368 = !DILocalVariable(name: "args", scope: !349, file: !3, line: 396, type: !64)
!369 = !DILocalVariable(name: "values", scope: !349, file: !3, line: 397, type: !52)
!370 = !DILocalVariable(name: "tmp", scope: !349, file: !3, line: 399, type: !52)
!371 = !DILocalVariable(name: "op", scope: !349, file: !3, line: 400, type: !372)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!373 = !DILocalVariable(name: "cell", scope: !374, file: !3, line: 419, type: !101)
!374 = distinct !DILexicalBlock(scope: !375, file: !3, line: 405, column: 27)
!375 = distinct !DILexicalBlock(scope: !349, file: !3, line: 402, column: 25)
!376 = !DILocalVariable(name: "result_str", scope: !349, file: !3, line: 453, type: !21)
!377 = !DILabel(scope: !349, name: "error", file: !3, line: 463)
!378 = !DILabel(scope: !349, name: "cleanup", file: !3, line: 469)
!379 = !DILocation(line: 0, scope: !349)
!380 = !DILocation(line: 381, column: 5, scope: !349)
!381 = !DILocation(line: 381, column: 10, scope: !349)
!382 = !DILocation(line: 382, column: 5, scope: !349)
!383 = !DILocation(line: 382, column: 10, scope: !349)
!384 = !DILocation(line: 386, column: 21, scope: !349)
!385 = !DILocation(line: 390, column: 8, scope: !386)
!386 = distinct !DILexicalBlock(scope: !349, file: !3, line: 390, column: 8)
!387 = !DILocation(line: 390, column: 35, scope: !386)
!388 = !DILocation(line: 390, column: 8, scope: !349)
!389 = !DILocation(line: 393, column: 36, scope: !349)
!390 = !DILocation(line: 393, column: 55, scope: !349)
!391 = !DILocation(line: 393, column: 5, scope: !349)
!392 = !DILocation(line: 394, column: 40, scope: !349)
!393 = !DILocation(line: 394, column: 56, scope: !349)
!394 = !DILocation(line: 394, column: 20, scope: !349)
!395 = !DILocation(line: 394, column: 14, scope: !349)
!396 = !DILocation(line: 396, column: 14, scope: !349)
!397 = !DILocation(line: 397, column: 14, scope: !349)
!398 = !DILocation(line: 402, column: 16, scope: !349)
!399 = !DILocation(line: 402, column: 5, scope: !349)
!400 = !DILocation(line: 403, column: 15, scope: !375)
!401 = !DILocation(line: 404, column: 21, scope: !375)
!402 = !DILocation(line: 405, column: 9, scope: !375)
!403 = !DILocation(line: 407, column: 17, scope: !374)
!404 = !DILocation(line: 408, column: 17, scope: !374)
!405 = !DILocation(line: 410, column: 22, scope: !374)
!406 = !DILocation(line: 411, column: 21, scope: !407)
!407 = distinct !DILexicalBlock(scope: !374, file: !3, line: 411, column: 21)
!408 = !DILocation(line: 411, column: 63, scope: !407)
!409 = !DILocation(line: 411, column: 21, scope: !374)
!410 = !DILocation(line: 415, column: 17, scope: !374)
!411 = !DILocation(line: 416, column: 17, scope: !374)
!412 = !DILocation(line: 418, column: 23, scope: !374)
!413 = !DILocation(line: 419, column: 32, scope: !374)
!414 = !DILocation(line: 0, scope: !374)
!415 = !DILocation(line: 420, column: 25, scope: !416)
!416 = distinct !DILexicalBlock(scope: !374, file: !3, line: 420, column: 20)
!417 = !DILocation(line: 420, column: 20, scope: !374)
!418 = !DILocation(line: 423, column: 28, scope: !374)
!419 = !DILocation(line: 423, column: 17, scope: !374)
!420 = !DILocation(line: 0, scope: !421)
!421 = distinct !DILexicalBlock(scope: !422, file: !3, line: 424, column: 24)
!422 = distinct !DILexicalBlock(scope: !374, file: !3, line: 423, column: 37)
!423 = !DILocation(line: 424, column: 35, scope: !421)
!424 = !DILocation(line: 424, column: 24, scope: !421)
!425 = !DILocation(line: 424, column: 57, scope: !421)
!426 = !DILocation(line: 424, column: 24, scope: !422)
!427 = !DILocation(line: 427, column: 37, scope: !428)
!428 = distinct !DILexicalBlock(scope: !422, file: !3, line: 427, column: 25)
!429 = !{!430, !206, i64 0}
!430 = !{!"stack", !206, i64 0, !206, i64 8}
!431 = !DILocation(line: 427, column: 55, scope: !428)
!432 = !DILocation(line: 427, column: 73, scope: !428)
!433 = !DILocation(line: 427, column: 25, scope: !428)
!434 = !DILocation(line: 427, column: 78, scope: !428)
!435 = !DILocation(line: 427, column: 25, scope: !422)
!436 = !DILocation(line: 429, column: 32, scope: !422)
!437 = !{!430, !206, i64 8}
!438 = distinct !{!438, !419, !439}
!439 = !DILocation(line: 430, column: 17, scope: !374)
!440 = !DILocation(line: 432, column: 27, scope: !441)
!441 = distinct !DILexicalBlock(scope: !374, file: !3, line: 432, column: 21)
!442 = !DILocation(line: 432, column: 21, scope: !374)
!443 = !DILocation(line: 433, column: 21, scope: !444)
!444 = distinct !DILexicalBlock(scope: !441, file: !3, line: 432, column: 48)
!445 = !DILocation(line: 434, column: 17, scope: !444)
!446 = !DILocation(line: 435, column: 46, scope: !447)
!447 = distinct !DILexicalBlock(scope: !448, file: !3, line: 434, column: 55)
!448 = distinct !DILexicalBlock(scope: !441, file: !3, line: 434, column: 28)
!449 = !DILocation(line: 435, column: 51, scope: !447)
!450 = !DILocation(line: 435, column: 69, scope: !447)
!451 = !DILocation(line: 435, column: 21, scope: !447)
!452 = !DILocation(line: 436, column: 17, scope: !447)
!453 = !DILocation(line: 437, column: 46, scope: !454)
!454 = distinct !DILexicalBlock(scope: !455, file: !3, line: 436, column: 55)
!455 = distinct !DILexicalBlock(scope: !448, file: !3, line: 436, column: 27)
!456 = !DILocation(line: 437, column: 86, scope: !454)
!457 = !DILocation(line: 437, column: 27, scope: !454)
!458 = !DILocation(line: 438, column: 24, scope: !459)
!459 = distinct !DILexicalBlock(scope: !454, file: !3, line: 438, column: 24)
!460 = !DILocation(line: 438, column: 24, scope: !454)
!461 = !DILocation(line: 441, column: 21, scope: !454)
!462 = !DILocation(line: 442, column: 21, scope: !454)
!463 = !DILocation(line: 402, column: 12, scope: !349)
!464 = distinct !{!464, !399, !465}
!465 = !DILocation(line: 451, column: 5, scope: !349)
!466 = !DILocation(line: 453, column: 24, scope: !349)
!467 = !DILocation(line: 454, column: 9, scope: !468)
!468 = distinct !DILexicalBlock(scope: !349, file: !3, line: 454, column: 9)
!469 = !DILocation(line: 454, column: 16, scope: !468)
!470 = !DILocation(line: 454, column: 9, scope: !349)
!471 = !DILocation(line: 457, column: 14, scope: !349)
!472 = !DILocation(line: 458, column: 9, scope: !473)
!473 = distinct !DILexicalBlock(scope: !349, file: !3, line: 458, column: 9)
!474 = !DILocation(line: 458, column: 9, scope: !349)
!475 = !DILocation(line: 463, column: 1, scope: !349)
!476 = !DILocation(line: 464, column: 21, scope: !349)
!477 = !DILocation(line: 466, column: 5, scope: !349)
!478 = !DILocation(line: 467, column: 5, scope: !349)
!479 = !DILocation(line: 468, column: 5, scope: !349)
!480 = !DILocation(line: 469, column: 1, scope: !349)
!481 = !DILocation(line: 470, column: 10, scope: !349)
!482 = !DILocation(line: 470, column: 5, scope: !349)
!483 = !DILocation(line: 473, column: 1, scope: !349)
!484 = !DILocation(line: 472, column: 5, scope: !349)
!485 = distinct !DISubprogram(name: "infixtorpn", scope: !3, file: !3, line: 475, type: !486, scopeLine: 476, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !488)
!486 = !DISubroutineType(types: !487)
!487 = !{!64, !21, !199}
!488 = !{!489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !504, !505, !506, !507, !508, !509, !510, !515, !520, !521, !522}
!489 = !DILocalVariable(name: "infix", arg: 1, scope: !485, file: !3, line: 475, type: !21)
!490 = !DILocalVariable(name: "size", arg: 2, scope: !485, file: !3, line: 475, type: !199)
!491 = !DILocalVariable(name: "is_mismatched", scope: !485, file: !3, line: 478, type: !34)
!492 = !DILocalVariable(name: "func_size", scope: !485, file: !3, line: 479, type: !34)
!493 = !DILocalVariable(name: "func_idx", scope: !485, file: !3, line: 480, type: !34)
!494 = !DILocalVariable(name: "formula", scope: !485, file: !3, line: 481, type: !21)
!495 = !DILocalVariable(name: "func_args", scope: !485, file: !3, line: 482, type: !81)
!496 = !DILocalVariable(name: "delims", scope: !485, file: !3, line: 484, type: !21)
!497 = !DILocalVariable(name: "arg", scope: !485, file: !3, line: 485, type: !21)
!498 = !DILocalVariable(name: "iter", scope: !485, file: !3, line: 485, type: !21)
!499 = !DILocalVariable(name: "delim", scope: !485, file: !3, line: 486, type: !22)
!500 = !DILocalVariable(name: "arith_op", scope: !485, file: !3, line: 487, type: !501)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 16, elements: !502)
!502 = !{!503}
!503 = !DISubrange(count: 2, lowerBound: 0)
!504 = !DILocalVariable(name: "value", scope: !485, file: !3, line: 488, type: !21)
!505 = !DILocalVariable(name: "arg_type", scope: !485, file: !3, line: 489, type: !107)
!506 = !DILocalVariable(name: "operators", scope: !485, file: !3, line: 490, type: !52)
!507 = !DILocalVariable(name: "output_q", scope: !485, file: !3, line: 491, type: !64)
!508 = !DILocalVariable(name: "i", scope: !485, file: !3, line: 498, type: !199)
!509 = !DILocalVariable(name: "prev_char", scope: !485, file: !3, line: 499, type: !22)
!510 = !DILocalVariable(name: "temp", scope: !511, file: !3, line: 531, type: !81)
!511 = distinct !DILexicalBlock(scope: !512, file: !3, line: 528, column: 43)
!512 = distinct !DILexicalBlock(scope: !513, file: !3, line: 528, column: 20)
!513 = distinct !DILexicalBlock(scope: !514, file: !3, line: 519, column: 27)
!514 = distinct !DILexicalBlock(scope: !485, file: !3, line: 500, column: 25)
!515 = !DILocalVariable(name: "num_args_str", scope: !516, file: !3, line: 568, type: !517)
!516 = distinct !DILexicalBlock(scope: !514, file: !3, line: 547, column: 23)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 128, elements: !518)
!518 = !{!519}
!519 = !DISubrange(count: 16, lowerBound: 0)
!520 = !DILabel(scope: !485, name: "finish", file: !3, line: 633)
!521 = !DILabel(scope: !485, name: "error", file: !3, line: 644)
!522 = !DILabel(scope: !485, name: "cleanup", file: !3, line: 648)
!523 = !DILocation(line: 0, scope: !485)
!524 = !DILocation(line: 481, column: 21, scope: !485)
!525 = !DILocation(line: 482, column: 22, scope: !485)
!526 = !DILocation(line: 487, column: 5, scope: !485)
!527 = !DILocation(line: 487, column: 10, scope: !485)
!528 = !DILocation(line: 490, column: 5, scope: !485)
!529 = !DILocation(line: 490, column: 14, scope: !485)
!530 = !DILocation(line: 491, column: 5, scope: !485)
!531 = !DILocation(line: 491, column: 14, scope: !485)
!532 = !DILocation(line: 493, column: 5, scope: !485)
!533 = !DILocation(line: 494, column: 9, scope: !534)
!534 = distinct !DILexicalBlock(scope: !485, file: !3, line: 494, column: 9)
!535 = !DILocation(line: 494, column: 41, scope: !534)
!536 = !DILocation(line: 494, column: 9, scope: !485)
!537 = !DILocation(line: 500, column: 17, scope: !485)
!538 = !DILocation(line: 500, column: 5, scope: !485)
!539 = !DILocation(line: 0, scope: !540)
!540 = distinct !DILexicalBlock(scope: !541, file: !3, line: 571, column: 71)
!541 = distinct !DILexicalBlock(scope: !542, file: !3, line: 571, column: 28)
!542 = distinct !DILexicalBlock(scope: !516, file: !3, line: 569, column: 20)
!543 = !DILocation(line: 631, column: 15, scope: !514)
!544 = !DILocation(line: 500, column: 14, scope: !485)
!545 = distinct !{!545, !538, !546}
!546 = !DILocation(line: 632, column: 5, scope: !485)
!547 = !DILocation(line: 501, column: 28, scope: !548)
!548 = distinct !DILexicalBlock(scope: !514, file: !3, line: 501, column: 13)
!549 = !DILocation(line: 501, column: 13, scope: !548)
!550 = !DILocation(line: 501, column: 43, scope: !548)
!551 = !DILocation(line: 501, column: 52, scope: !548)
!552 = !DILocation(line: 0, scope: !548)
!553 = !DILocation(line: 501, column: 35, scope: !548)
!554 = !DILocation(line: 505, column: 20, scope: !548)
!555 = !DILocation(line: 506, column: 23, scope: !556)
!556 = distinct !DILexicalBlock(scope: !557, file: !3, line: 506, column: 17)
!557 = distinct !DILexicalBlock(scope: !558, file: !3, line: 505, column: 51)
!558 = distinct !DILexicalBlock(scope: !548, file: !3, line: 505, column: 20)
!559 = !DILocation(line: 507, column: 22, scope: !560)
!560 = distinct !DILexicalBlock(scope: !561, file: !3, line: 507, column: 20)
!561 = distinct !DILexicalBlock(scope: !556, file: !3, line: 506, column: 31)
!562 = !DILocation(line: 507, column: 27, scope: !560)
!563 = !DILocation(line: 507, column: 41, scope: !560)
!564 = !DILocation(line: 507, column: 68, scope: !560)
!565 = !DILocation(line: 507, column: 48, scope: !560)
!566 = !DILocation(line: 517, column: 15, scope: !514)
!567 = !DILocation(line: 518, column: 20, scope: !514)
!568 = !DILocation(line: 519, column: 9, scope: !514)
!569 = !DILocation(line: 522, column: 46, scope: !513)
!570 = !DILocation(line: 522, column: 58, scope: !513)
!571 = !DILocation(line: 522, column: 17, scope: !513)
!572 = !DILocation(line: 523, column: 17, scope: !513)
!573 = !DILocation(line: 528, column: 29, scope: !512)
!574 = !DILocation(line: 528, column: 20, scope: !513)
!575 = !DILocation(line: 530, column: 31, scope: !511)
!576 = !DILocation(line: 531, column: 41, scope: !511)
!577 = !DILocation(line: 531, column: 52, scope: !511)
!578 = !DILocation(line: 531, column: 62, scope: !511)
!579 = !DILocation(line: 531, column: 33, scope: !511)
!580 = !DILocation(line: 0, scope: !511)
!581 = !DILocation(line: 532, column: 30, scope: !582)
!582 = distinct !DILexicalBlock(scope: !511, file: !3, line: 532, column: 25)
!583 = !DILocation(line: 532, column: 25, scope: !511)
!584 = !DILocation(line: 482, column: 10, scope: !485)
!585 = !DILocation(line: 537, column: 27, scope: !513)
!586 = !DILocation(line: 537, column: 17, scope: !513)
!587 = !DILocation(line: 537, column: 39, scope: !513)
!588 = !DILocation(line: 538, column: 44, scope: !513)
!589 = !DILocation(line: 538, column: 56, scope: !513)
!590 = !DILocation(line: 538, column: 17, scope: !513)
!591 = !DILocation(line: 539, column: 17, scope: !513)
!592 = !DILocation(line: 547, column: 16, scope: !514)
!593 = !DILocation(line: 547, column: 9, scope: !514)
!594 = !DILocation(line: 580, column: 24, scope: !516)
!595 = !DILocation(line: 580, column: 34, scope: !516)
!596 = !DILocation(line: 580, column: 17, scope: !516)
!597 = !DILocation(line: 553, column: 24, scope: !516)
!598 = !DILocation(line: 553, column: 34, scope: !516)
!599 = !DILocation(line: 553, column: 17, scope: !516)
!600 = !DILocation(line: 549, column: 17, scope: !516)
!601 = !DILocation(line: 550, column: 17, scope: !516)
!602 = !DILocation(line: 554, column: 32, scope: !603)
!603 = distinct !DILexicalBlock(scope: !604, file: !3, line: 554, column: 25)
!604 = distinct !DILexicalBlock(scope: !516, file: !3, line: 553, column: 43)
!605 = !DILocation(line: 554, column: 25, scope: !603)
!606 = !DILocation(line: 554, column: 58, scope: !603)
!607 = !DILocation(line: 0, scope: !603)
!608 = !DILocation(line: 554, column: 25, scope: !604)
!609 = !DILocation(line: 556, column: 25, scope: !610)
!610 = distinct !DILexicalBlock(scope: !603, file: !3, line: 554, column: 64)
!611 = !DILocation(line: 558, column: 25, scope: !610)
!612 = !DILocation(line: 560, column: 25, scope: !613)
!613 = distinct !DILexicalBlock(scope: !603, file: !3, line: 559, column: 28)
!614 = distinct !{!614, !599, !615}
!615 = !DILocation(line: 562, column: 17, scope: !516)
!616 = !DILocation(line: 0, scope: !516)
!617 = !DILocation(line: 565, column: 30, scope: !618)
!618 = distinct !DILexicalBlock(scope: !516, file: !3, line: 565, column: 21)
!619 = !DILocation(line: 565, column: 21, scope: !618)
!620 = !DILocation(line: 565, column: 41, scope: !618)
!621 = !DILocation(line: 565, column: 61, scope: !618)
!622 = !DILocation(line: 565, column: 49, scope: !618)
!623 = !DILocation(line: 568, column: 22, scope: !516)
!624 = !DILocation(line: 569, column: 44, scope: !542)
!625 = !DILocation(line: 569, column: 35, scope: !542)
!626 = !DILocation(line: 569, column: 20, scope: !542)
!627 = !DILocation(line: 569, column: 59, scope: !542)
!628 = !DILocation(line: 569, column: 20, scope: !516)
!629 = !DILocation(line: 571, column: 46, scope: !541)
!630 = !DILocation(line: 571, column: 37, scope: !541)
!631 = !DILocation(line: 571, column: 28, scope: !541)
!632 = !DILocation(line: 571, column: 58, scope: !541)
!633 = !DILocation(line: 571, column: 28, scope: !542)
!634 = !DILocation(line: 572, column: 68, scope: !540)
!635 = !DILocation(line: 572, column: 50, scope: !540)
!636 = !DILocation(line: 572, column: 72, scope: !540)
!637 = !DILocation(line: 572, column: 45, scope: !540)
!638 = !DILocation(line: 572, column: 21, scope: !540)
!639 = !DILocation(line: 574, column: 40, scope: !540)
!640 = !DILocation(line: 574, column: 21, scope: !540)
!641 = !DILocation(line: 575, column: 17, scope: !540)
!642 = !DILocation(line: 581, column: 32, scope: !643)
!643 = distinct !DILexicalBlock(scope: !644, file: !3, line: 581, column: 25)
!644 = distinct !DILexicalBlock(scope: !516, file: !3, line: 580, column: 43)
!645 = !DILocation(line: 581, column: 25, scope: !643)
!646 = !DILocation(line: 581, column: 58, scope: !643)
!647 = !DILocation(line: 581, column: 25, scope: !644)
!648 = !DILocation(line: 582, column: 38, scope: !649)
!649 = distinct !DILexicalBlock(scope: !650, file: !3, line: 582, column: 29)
!650 = distinct !DILexicalBlock(scope: !643, file: !3, line: 581, column: 64)
!651 = !DILocation(line: 582, column: 29, scope: !650)
!652 = !DILocation(line: 583, column: 29, scope: !649)
!653 = !DILocation(line: 583, column: 48, scope: !649)
!654 = !DILocation(line: 587, column: 44, scope: !655)
!655 = distinct !DILexicalBlock(scope: !643, file: !3, line: 586, column: 28)
!656 = !DILocation(line: 587, column: 25, scope: !655)
!657 = distinct !{!657, !596, !658}
!658 = !DILocation(line: 589, column: 17, scope: !516)
!659 = !DILocation(line: 596, column: 29, scope: !516)
!660 = !DILocation(line: 597, column: 24, scope: !516)
!661 = !DILocation(line: 597, column: 34, scope: !516)
!662 = !DILocation(line: 597, column: 17, scope: !516)
!663 = !DILocation(line: 598, column: 32, scope: !664)
!664 = distinct !DILexicalBlock(scope: !665, file: !3, line: 598, column: 25)
!665 = distinct !DILexicalBlock(scope: !516, file: !3, line: 597, column: 43)
!666 = !DILocation(line: 598, column: 25, scope: !664)
!667 = !DILocation(line: 598, column: 58, scope: !664)
!668 = !DILocation(line: 598, column: 63, scope: !664)
!669 = !DILocation(line: 598, column: 82, scope: !664)
!670 = !DILocation(line: 598, column: 73, scope: !664)
!671 = !DILocation(line: 598, column: 66, scope: !664)
!672 = !DILocation(line: 598, column: 99, scope: !664)
!673 = !DILocation(line: 598, column: 104, scope: !664)
!674 = !DILocation(line: 599, column: 41, scope: !664)
!675 = !DILocation(line: 599, column: 32, scope: !664)
!676 = !DILocation(line: 599, column: 25, scope: !664)
!677 = !DILocation(line: 599, column: 58, scope: !664)
!678 = !DILocation(line: 599, column: 63, scope: !664)
!679 = !DILocation(line: 599, column: 82, scope: !664)
!680 = !DILocation(line: 599, column: 73, scope: !664)
!681 = !DILocation(line: 599, column: 66, scope: !664)
!682 = !DILocation(line: 599, column: 99, scope: !664)
!683 = !DILocation(line: 598, column: 25, scope: !665)
!684 = !DILocation(line: 600, column: 44, scope: !664)
!685 = !DILocation(line: 600, column: 25, scope: !664)
!686 = distinct !{!686, !662, !687}
!687 = !DILocation(line: 603, column: 17, scope: !516)
!688 = !DILocation(line: 605, column: 49, scope: !516)
!689 = !DILocation(line: 605, column: 65, scope: !516)
!690 = !DILocation(line: 605, column: 17, scope: !516)
!691 = !DILocation(line: 606, column: 17, scope: !516)
!692 = !DILocation(line: 610, column: 29, scope: !516)
!693 = !DILocation(line: 611, column: 24, scope: !516)
!694 = !DILocation(line: 611, column: 34, scope: !516)
!695 = !DILocation(line: 611, column: 17, scope: !516)
!696 = !DILocation(line: 612, column: 32, scope: !697)
!697 = distinct !DILexicalBlock(scope: !698, file: !3, line: 612, column: 25)
!698 = distinct !DILexicalBlock(scope: !516, file: !3, line: 611, column: 43)
!699 = !DILocation(line: 612, column: 25, scope: !697)
!700 = !DILocation(line: 612, column: 58, scope: !697)
!701 = !DILocation(line: 612, column: 63, scope: !697)
!702 = !DILocation(line: 612, column: 82, scope: !697)
!703 = !DILocation(line: 612, column: 73, scope: !697)
!704 = !DILocation(line: 612, column: 66, scope: !697)
!705 = !DILocation(line: 612, column: 99, scope: !697)
!706 = !DILocation(line: 612, column: 25, scope: !698)
!707 = !DILocation(line: 613, column: 44, scope: !697)
!708 = !DILocation(line: 613, column: 25, scope: !697)
!709 = distinct !{!709, !695, !710}
!710 = !DILocation(line: 617, column: 17, scope: !516)
!711 = !DILocation(line: 619, column: 49, scope: !516)
!712 = !DILocation(line: 619, column: 65, scope: !516)
!713 = !DILocation(line: 619, column: 17, scope: !516)
!714 = !DILocation(line: 620, column: 17, scope: !516)
!715 = !DILocation(line: 0, scope: !514)
!716 = !DILocation(line: 628, column: 13, scope: !717)
!717 = distinct !DILexicalBlock(scope: !514, file: !3, line: 628, column: 13)
!718 = !DILocation(line: 628, column: 13, scope: !514)
!719 = !DILocation(line: 633, column: 1, scope: !485)
!720 = !DILocation(line: 635, column: 12, scope: !485)
!721 = !DILocation(line: 635, column: 22, scope: !485)
!722 = !DILocation(line: 635, column: 5, scope: !485)
!723 = !DILocation(line: 636, column: 20, scope: !724)
!724 = distinct !DILexicalBlock(scope: !725, file: !3, line: 636, column: 13)
!725 = distinct !DILexicalBlock(scope: !485, file: !3, line: 635, column: 31)
!726 = !DILocation(line: 636, column: 13, scope: !724)
!727 = !DILocation(line: 636, column: 46, scope: !724)
!728 = !DILocation(line: 636, column: 51, scope: !724)
!729 = !DILocation(line: 636, column: 70, scope: !724)
!730 = !DILocation(line: 636, column: 61, scope: !724)
!731 = !DILocation(line: 636, column: 54, scope: !724)
!732 = !DILocation(line: 636, column: 87, scope: !724)
!733 = !DILocation(line: 636, column: 13, scope: !725)
!734 = !DILocation(line: 639, column: 28, scope: !725)
!735 = !DILocation(line: 639, column: 9, scope: !725)
!736 = distinct !{!736, !722, !737}
!737 = !DILocation(line: 640, column: 5, scope: !485)
!738 = !DILocation(line: 644, column: 1, scope: !485)
!739 = !DILocation(line: 645, column: 5, scope: !485)
!740 = !DILocation(line: 646, column: 5, scope: !485)
!741 = !DILocation(line: 648, column: 1, scope: !485)
!742 = !DILocation(line: 649, column: 5, scope: !485)
!743 = !DILocation(line: 650, column: 10, scope: !485)
!744 = !DILocation(line: 650, column: 5, scope: !485)
!745 = !DILocation(line: 651, column: 12, scope: !485)
!746 = !DILocation(line: 652, column: 1, scope: !485)
!747 = distinct !DISubprogram(name: "parsearg", scope: !3, file: !3, line: 238, type: !748, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !750)
!748 = !DISubroutineType(types: !749)
!749 = !{!107, !21}
!750 = !{!751, !752, !753, !754, !755, !756, !757}
!751 = !DILocalVariable(name: "arg", arg: 1, scope: !747, file: !3, line: 238, type: !21)
!752 = !DILocalVariable(name: "is_double", scope: !747, file: !3, line: 243, type: !34)
!753 = !DILocalVariable(name: "has_period", scope: !747, file: !3, line: 243, type: !34)
!754 = !DILocalVariable(name: "has_negative", scope: !747, file: !3, line: 243, type: !34)
!755 = !DILocalVariable(name: "is_hard_string", scope: !747, file: !3, line: 244, type: !34)
!756 = !DILocalVariable(name: "is_soft_string", scope: !747, file: !3, line: 244, type: !34)
!757 = !DILocalVariable(name: "beg_arg", scope: !747, file: !3, line: 245, type: !21)
!758 = !DILocation(line: 0, scope: !747)
!759 = !DILocation(line: 240, column: 13, scope: !760)
!760 = distinct !DILexicalBlock(scope: !747, file: !3, line: 240, column: 9)
!761 = !DILocation(line: 240, column: 9, scope: !747)
!762 = !DILocation(line: 247, column: 12, scope: !747)
!763 = !DILocation(line: 247, column: 17, scope: !747)
!764 = !DILocation(line: 247, column: 5, scope: !747)
!765 = !DILocation(line: 248, column: 25, scope: !766)
!766 = distinct !DILexicalBlock(scope: !767, file: !3, line: 248, column: 13)
!767 = distinct !DILexicalBlock(scope: !747, file: !3, line: 247, column: 26)
!768 = !DILocation(line: 249, column: 22, scope: !769)
!769 = distinct !DILexicalBlock(scope: !766, file: !3, line: 248, column: 41)
!770 = !DILocation(line: 250, column: 9, scope: !769)
!771 = !DILocation(line: 250, column: 20, scope: !766)
!772 = !DILocation(line: 251, column: 22, scope: !773)
!773 = distinct !DILexicalBlock(scope: !774, file: !3, line: 250, column: 33)
!774 = distinct !DILexicalBlock(scope: !766, file: !3, line: 250, column: 20)
!775 = !DILocation(line: 252, column: 25, scope: !773)
!776 = !DILocation(line: 253, column: 9, scope: !773)
!777 = !DILocation(line: 254, column: 22, scope: !778)
!778 = distinct !DILexicalBlock(scope: !779, file: !3, line: 253, column: 33)
!779 = distinct !DILexicalBlock(scope: !774, file: !3, line: 253, column: 20)
!780 = !DILocation(line: 255, column: 23, scope: !778)
!781 = !DILocation(line: 256, column: 9, scope: !778)
!782 = !DILocation(line: 257, column: 27, scope: !783)
!783 = distinct !DILexicalBlock(scope: !784, file: !3, line: 256, column: 33)
!784 = distinct !DILexicalBlock(scope: !779, file: !3, line: 256, column: 20)
!785 = !DILocation(line: 258, column: 9, scope: !783)
!786 = !DILocation(line: 259, column: 27, scope: !787)
!787 = distinct !DILexicalBlock(scope: !784, file: !3, line: 258, column: 16)
!788 = !DILocation(line: 261, column: 12, scope: !767)
!789 = distinct !{!789, !764, !790}
!790 = !DILocation(line: 262, column: 5, scope: !747)
!791 = !DILocation(line: 243, column: 24, scope: !747)
!792 = !DILocation(line: 243, column: 40, scope: !747)
!793 = !DILocation(line: 244, column: 9, scope: !747)
!794 = !DILocation(line: 244, column: 29, scope: !747)
!795 = !DILocation(line: 265, column: 9, scope: !747)
!796 = !DILocation(line: 266, column: 38, scope: !797)
!797 = distinct !DILexicalBlock(scope: !798, file: !3, line: 266, column: 13)
!798 = distinct !DILexicalBlock(scope: !799, file: !3, line: 265, column: 25)
!799 = distinct !DILexicalBlock(scope: !747, file: !3, line: 265, column: 9)
!800 = !DILocation(line: 266, column: 36, scope: !797)
!801 = !DILocation(line: 266, column: 45, scope: !797)
!802 = !DILocation(line: 266, column: 13, scope: !798)
!803 = !DILocation(line: 269, column: 13, scope: !797)
!804 = !DILocation(line: 270, column: 16, scope: !805)
!805 = distinct !DILexicalBlock(scope: !799, file: !3, line: 270, column: 16)
!806 = !DILocation(line: 270, column: 16, scope: !799)
!807 = !DILocation(line: 271, column: 24, scope: !808)
!808 = distinct !DILexicalBlock(scope: !809, file: !3, line: 271, column: 13)
!809 = distinct !DILexicalBlock(scope: !805, file: !3, line: 270, column: 32)
!810 = !DILocation(line: 271, column: 44, scope: !808)
!811 = !DILocation(line: 271, column: 28, scope: !808)
!812 = !DILocation(line: 274, column: 13, scope: !813)
!813 = distinct !DILexicalBlock(scope: !809, file: !3, line: 274, column: 13)
!814 = !DILocation(line: 274, column: 32, scope: !813)
!815 = !DILocation(line: 274, column: 13, scope: !809)
!816 = !DILocation(line: 277, column: 13, scope: !817)
!817 = distinct !DILexicalBlock(scope: !809, file: !3, line: 277, column: 13)
!818 = !DILocation(line: 277, column: 25, scope: !817)
!819 = !DILocation(line: 0, scope: !809)
!820 = !DILocation(line: 281, column: 16, scope: !821)
!821 = distinct !DILexicalBlock(scope: !805, file: !3, line: 281, column: 16)
!822 = !DILocation(line: 281, column: 16, scope: !805)
!823 = !DILocation(line: 282, column: 24, scope: !824)
!824 = distinct !DILexicalBlock(scope: !825, file: !3, line: 282, column: 13)
!825 = distinct !DILexicalBlock(scope: !821, file: !3, line: 281, column: 27)
!826 = !DILocation(line: 282, column: 44, scope: !824)
!827 = !DILocation(line: 282, column: 28, scope: !824)
!828 = !DILocation(line: 285, column: 14, scope: !829)
!829 = distinct !DILexicalBlock(scope: !825, file: !3, line: 285, column: 13)
!830 = !DILocation(line: 285, column: 38, scope: !829)
!831 = !DILocation(line: 285, column: 25, scope: !829)
!832 = !DILocation(line: 285, column: 62, scope: !829)
!833 = !DILocation(line: 285, column: 59, scope: !829)
!834 = !DILocation(line: 285, column: 88, scope: !829)
!835 = !DILocation(line: 288, column: 26, scope: !836)
!836 = distinct !DILexicalBlock(scope: !825, file: !3, line: 288, column: 13)
!837 = !DILocation(line: 0, scope: !825)
!838 = !DILocation(line: 295, column: 1, scope: !747)
!839 = distinct !DISubprogram(name: "get_op", scope: !3, file: !3, line: 214, type: !840, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !842)
!840 = !DISubroutineType(types: !841)
!841 = !{!372, !21}
!842 = !{!843, !844, !845, !846, !847}
!843 = !DILocalVariable(name: "name", arg: 1, scope: !839, file: !3, line: 214, type: !21)
!844 = !DILocalVariable(name: "upper_name", scope: !839, file: !3, line: 219, type: !21)
!845 = !DILocalVariable(name: "i", scope: !839, file: !3, line: 221, type: !199)
!846 = !DILocalVariable(name: "len", scope: !839, file: !3, line: 221, type: !199)
!847 = !DILocalVariable(name: "op", scope: !839, file: !3, line: 225, type: !372)
!848 = !DILocation(line: 0, scope: !839)
!849 = !DILocation(line: 216, column: 13, scope: !850)
!850 = distinct !DILexicalBlock(scope: !839, file: !3, line: 216, column: 8)
!851 = !DILocation(line: 216, column: 8, scope: !839)
!852 = !DILocation(line: 219, column: 40, scope: !839)
!853 = !DILocation(line: 219, column: 53, scope: !839)
!854 = !DILocation(line: 219, column: 33, scope: !839)
!855 = !DILocation(line: 220, column: 5, scope: !839)
!856 = !DILocation(line: 221, column: 21, scope: !839)
!857 = !DILocation(line: 222, column: 19, scope: !858)
!858 = distinct !DILexicalBlock(scope: !859, file: !3, line: 222, column: 5)
!859 = distinct !DILexicalBlock(scope: !839, file: !3, line: 222, column: 5)
!860 = !DILocation(line: 222, column: 5, scope: !859)
!861 = !DILocation(line: 226, column: 34, scope: !862)
!862 = distinct !DILexicalBlock(scope: !863, file: !3, line: 226, column: 5)
!863 = distinct !DILexicalBlock(scope: !839, file: !3, line: 226, column: 5)
!864 = !{!865, !206, i64 0}
!865 = !{!"", !206, i64 0, !206, i64 8}
!866 = !DILocation(line: 226, column: 39, scope: !862)
!867 = !DILocation(line: 226, column: 5, scope: !863)
!868 = !DILocation(line: 223, column: 33, scope: !858)
!869 = !DILocation(line: 223, column: 25, scope: !858)
!870 = !DILocation(line: 223, column: 23, scope: !858)
!871 = !DILocation(line: 222, column: 27, scope: !858)
!872 = distinct !{!872, !860, !873}
!873 = !DILocation(line: 223, column: 46, scope: !859)
!874 = !DILocation(line: 227, column: 13, scope: !875)
!875 = distinct !DILexicalBlock(scope: !876, file: !3, line: 227, column: 13)
!876 = distinct !DILexicalBlock(scope: !862, file: !3, line: 226, column: 54)
!877 = !DILocation(line: 227, column: 42, scope: !875)
!878 = !DILocation(line: 227, column: 13, scope: !876)
!879 = !DILocation(line: 226, column: 50, scope: !862)
!880 = distinct !{!880, !867, !881}
!881 = !DILocation(line: 229, column: 5, scope: !863)
!882 = !DILocation(line: 231, column: 5, scope: !839)
!883 = !DILocation(line: 0, scope: !863)
!884 = !DILocation(line: 232, column: 13, scope: !885)
!885 = distinct !DILexicalBlock(scope: !839, file: !3, line: 232, column: 9)
!886 = !DILocation(line: 232, column: 18, scope: !885)
!887 = !DILocation(line: 0, scope: !885)
!888 = !DILocation(line: 236, column: 1, scope: !839)
!889 = distinct !DISubprogram(name: "eval_function", scope: !3, file: !3, line: 325, type: !890, scopeLine: 326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !892)
!890 = !DISubroutineType(types: !891)
!891 = !{!34, !372, !125, !21, !199}
!892 = !{!893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !908}
!893 = !DILocalVariable(name: "op", arg: 1, scope: !889, file: !3, line: 325, type: !372)
!894 = !DILocalVariable(name: "values", arg: 2, scope: !889, file: !3, line: 325, type: !125)
!895 = !DILocalVariable(name: "val_str", arg: 3, scope: !889, file: !3, line: 325, type: !21)
!896 = !DILocalVariable(name: "size", arg: 4, scope: !889, file: !3, line: 325, type: !199)
!897 = !DILocalVariable(name: "val", scope: !889, file: !3, line: 330, type: !23)
!898 = !DILocalVariable(name: "arg", scope: !889, file: !3, line: 331, type: !21)
!899 = !DILocalVariable(name: "op_name", scope: !889, file: !3, line: 332, type: !21)
!900 = !DILocalVariable(name: "i", scope: !889, file: !3, line: 333, type: !199)
!901 = !DILocalVariable(name: "num_args", scope: !889, file: !3, line: 333, type: !199)
!902 = !DILocalVariable(name: "is_bad_formula", scope: !889, file: !3, line: 334, type: !34)
!903 = !DILocalVariable(name: "nested_op", scope: !889, file: !3, line: 335, type: !372)
!904 = !DILocalVariable(name: "args", scope: !889, file: !3, line: 337, type: !52)
!905 = !DILocalVariable(name: "arg_count", scope: !906, file: !3, line: 341, type: !21)
!906 = distinct !DILexicalBlock(scope: !907, file: !3, line: 340, column: 12)
!907 = distinct !DILexicalBlock(scope: !889, file: !3, line: 338, column: 9)
!908 = !DILabel(scope: !889, name: "error", file: !3, line: 374)
!909 = !DILocation(line: 0, scope: !889)
!910 = !DILocation(line: 327, column: 12, scope: !911)
!911 = distinct !DILexicalBlock(scope: !889, file: !3, line: 327, column: 9)
!912 = !DILocation(line: 327, column: 31, scope: !911)
!913 = !DILocation(line: 327, column: 20, scope: !911)
!914 = !DILocation(line: 332, column: 34, scope: !889)
!915 = !DILocation(line: 334, column: 5, scope: !889)
!916 = !DILocation(line: 334, column: 9, scope: !889)
!917 = !DILocation(line: 337, column: 5, scope: !889)
!918 = !DILocation(line: 337, column: 14, scope: !889)
!919 = !DILocation(line: 338, column: 9, scope: !907)
!920 = !DILocation(line: 338, column: 9, scope: !889)
!921 = !DILocation(line: 341, column: 27, scope: !906)
!922 = !DILocation(line: 0, scope: !906)
!923 = !DILocation(line: 342, column: 23, scope: !924)
!924 = distinct !DILexicalBlock(scope: !906, file: !3, line: 342, column: 13)
!925 = !DILocation(line: 342, column: 13, scope: !906)
!926 = !DILocation(line: 345, column: 20, scope: !906)
!927 = !DILocation(line: 346, column: 9, scope: !906)
!928 = !DILocation(line: 347, column: 5, scope: !907)
!929 = !DILocation(line: 349, column: 19, scope: !930)
!930 = distinct !DILexicalBlock(scope: !931, file: !3, line: 349, column: 5)
!931 = distinct !DILexicalBlock(scope: !889, file: !3, line: 349, column: 5)
!932 = !DILocation(line: 349, column: 5, scope: !931)
!933 = !DILocation(line: 350, column: 15, scope: !934)
!934 = distinct !DILexicalBlock(scope: !930, file: !3, line: 349, column: 36)
!935 = !DILocation(line: 352, column: 13, scope: !936)
!936 = distinct !DILexicalBlock(scope: !934, file: !3, line: 352, column: 13)
!937 = !DILocation(line: 352, column: 27, scope: !936)
!938 = !DILocation(line: 352, column: 13, scope: !934)
!939 = !DILocation(line: 353, column: 25, scope: !940)
!940 = distinct !DILexicalBlock(scope: !936, file: !3, line: 352, column: 40)
!941 = !DILocation(line: 354, column: 13, scope: !940)
!942 = !DILocation(line: 355, column: 17, scope: !943)
!943 = distinct !DILexicalBlock(scope: !940, file: !3, line: 355, column: 17)
!944 = !DILocation(line: 355, column: 65, scope: !943)
!945 = !DILocation(line: 355, column: 17, scope: !940)
!946 = !DILocation(line: 356, column: 17, scope: !943)
!947 = !DILocation(line: 360, column: 9, scope: !940)
!948 = !DILocation(line: 360, column: 20, scope: !949)
!949 = distinct !DILexicalBlock(scope: !936, file: !3, line: 360, column: 20)
!950 = !DILocation(line: 360, column: 37, scope: !949)
!951 = !DILocation(line: 360, column: 20, scope: !936)
!952 = !DILocation(line: 349, column: 32, scope: !930)
!953 = distinct !{!953, !932, !954}
!954 = !DILocation(line: 363, column: 5, scope: !931)
!955 = !DILocation(line: 365, column: 15, scope: !889)
!956 = !{!865, !206, i64 8}
!957 = !DILocation(line: 365, column: 11, scope: !889)
!958 = !DILocation(line: 366, column: 9, scope: !959)
!959 = distinct !DILexicalBlock(scope: !889, file: !3, line: 366, column: 9)
!960 = !DILocation(line: 366, column: 9, scope: !889)
!961 = !DILocation(line: 369, column: 9, scope: !962)
!962 = distinct !DILexicalBlock(scope: !889, file: !3, line: 369, column: 9)
!963 = !DILocation(line: 369, column: 34, scope: !962)
!964 = !DILocation(line: 369, column: 9, scope: !889)
!965 = !DILocation(line: 374, column: 1, scope: !889)
!966 = !DILocation(line: 375, column: 5, scope: !889)
!967 = !DILocation(line: 376, column: 5, scope: !889)
!968 = !DILocation(line: 377, column: 1, scope: !889)
!969 = distinct !DISubprogram(name: "is_arg_arithmetic", scope: !3, file: !3, line: 297, type: !37, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !970)
!970 = !{!971}
!971 = !DILocalVariable(name: "arg", arg: 1, scope: !969, file: !3, line: 297, type: !21)
!972 = !DILocation(line: 0, scope: !969)
!973 = !DILocation(line: 299, column: 14, scope: !969)
!974 = !DILocation(line: 299, column: 34, scope: !969)
!975 = !DILocation(line: 299, column: 40, scope: !969)
!976 = !DILocation(line: 300, column: 14, scope: !969)
!977 = !DILocation(line: 300, column: 34, scope: !969)
!978 = !DILocation(line: 300, column: 40, scope: !969)
!979 = !DILocation(line: 301, column: 14, scope: !969)
!980 = !DILocation(line: 301, column: 34, scope: !969)
!981 = !DILocation(line: 301, column: 40, scope: !969)
!982 = !DILocation(line: 302, column: 14, scope: !969)
!983 = !DILocation(line: 302, column: 34, scope: !969)
!984 = !DILocation(line: 299, column: 5, scope: !969)
!985 = distinct !DISubprogram(name: "set_cell", scope: !3, file: !3, line: 140, type: !986, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !988)
!986 = !DISubroutineType(types: !987)
!987 = !{!34, !21, !21, !199}
!988 = !{!989, !990, !991, !992}
!989 = !DILocalVariable(name: "cell_id", arg: 1, scope: !985, file: !3, line: 140, type: !21)
!990 = !DILocalVariable(name: "cell_str", arg: 2, scope: !985, file: !3, line: 140, type: !21)
!991 = !DILocalVariable(name: "size", arg: 3, scope: !985, file: !3, line: 140, type: !199)
!992 = !DILocalVariable(name: "cell", scope: !985, file: !3, line: 145, type: !101)
!993 = !DILocation(line: 0, scope: !985)
!994 = !DILocation(line: 142, column: 18, scope: !995)
!995 = distinct !DILexicalBlock(scope: !985, file: !3, line: 142, column: 9)
!996 = !DILocation(line: 142, column: 26, scope: !995)
!997 = !DILocation(line: 142, column: 29, scope: !995)
!998 = !DILocation(line: 142, column: 46, scope: !995)
!999 = !DILocation(line: 142, column: 51, scope: !995)
!1000 = !DILocation(line: 142, column: 54, scope: !995)
!1001 = !DILocation(line: 142, column: 71, scope: !995)
!1002 = !DILocation(line: 142, column: 9, scope: !985)
!1003 = !DILocation(line: 145, column: 20, scope: !985)
!1004 = !DILocation(line: 146, column: 14, scope: !1005)
!1005 = distinct !DILexicalBlock(scope: !985, file: !3, line: 146, column: 9)
!1006 = !DILocation(line: 146, column: 9, scope: !985)
!1007 = !DILocation(line: 149, column: 15, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !985, file: !3, line: 149, column: 9)
!1009 = !DILocation(line: 149, column: 25, scope: !1008)
!1010 = !DILocation(line: 149, column: 9, scope: !985)
!1011 = !DILocation(line: 150, column: 20, scope: !1012)
!1012 = distinct !DILexicalBlock(scope: !1008, file: !3, line: 149, column: 36)
!1013 = !DILocation(line: 150, column: 9, scope: !1012)
!1014 = !DILocation(line: 154, column: 5, scope: !1012)
!1015 = !DILocation(line: 152, column: 25, scope: !1012)
!1016 = !DILocation(line: 156, column: 24, scope: !985)
!1017 = !DILocation(line: 156, column: 41, scope: !985)
!1018 = !DILocation(line: 156, column: 17, scope: !985)
!1019 = !DILocation(line: 156, column: 11, scope: !985)
!1020 = !DILocation(line: 156, column: 15, scope: !985)
!1021 = !DILocation(line: 157, column: 18, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !985, file: !3, line: 157, column: 8)
!1023 = !DILocation(line: 157, column: 8, scope: !985)
!1024 = !DILocation(line: 160, column: 5, scope: !985)
!1025 = !DILocation(line: 161, column: 9, scope: !1026)
!1026 = distinct !DILexicalBlock(scope: !985, file: !3, line: 161, column: 9)
!1027 = !DILocation(line: 161, column: 26, scope: !1026)
!1028 = !DILocation(line: 161, column: 31, scope: !1026)
!1029 = !DILocation(line: 161, column: 34, scope: !1026)
!1030 = !DILocation(line: 161, column: 46, scope: !1026)
!1031 = !DILocation(line: 161, column: 9, scope: !985)
!1032 = !DILocation(line: 162, column: 32, scope: !1033)
!1033 = distinct !DILexicalBlock(scope: !1026, file: !3, line: 161, column: 54)
!1034 = !DILocation(line: 162, column: 26, scope: !1033)
!1035 = !DILocation(line: 162, column: 15, scope: !1033)
!1036 = !DILocation(line: 162, column: 23, scope: !1033)
!1037 = !DILocation(line: 163, column: 25, scope: !1033)
!1038 = !DILocation(line: 164, column: 5, scope: !1033)
!1039 = !DILocation(line: 166, column: 42, scope: !1040)
!1040 = distinct !DILexicalBlock(scope: !1026, file: !3, line: 164, column: 12)
!1041 = !DILocation(line: 166, column: 27, scope: !1040)
!1042 = !DILocation(line: 167, column: 29, scope: !1043)
!1043 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 167, column: 13)
!1044 = !DILocation(line: 167, column: 13, scope: !1040)
!1045 = !DILocation(line: 0, scope: !1040)
!1046 = !DILocation(line: 172, column: 1, scope: !985)
!1047 = distinct !DISubprogram(name: "clear_cell", scope: !3, file: !3, line: 174, type: !37, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1048)
!1048 = !{!1049, !1050}
!1049 = !DILocalVariable(name: "cell_id", arg: 1, scope: !1047, file: !3, line: 174, type: !21)
!1050 = !DILocalVariable(name: "cell", scope: !1047, file: !3, line: 177, type: !101)
!1051 = !DILocation(line: 0, scope: !1047)
!1052 = !DILocation(line: 177, column: 20, scope: !1047)
!1053 = !DILocation(line: 179, column: 14, scope: !1054)
!1054 = distinct !DILexicalBlock(scope: !1047, file: !3, line: 179, column: 9)
!1055 = !DILocation(line: 179, column: 9, scope: !1047)
!1056 = !DILocation(line: 182, column: 15, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1047, file: !3, line: 182, column: 9)
!1058 = !DILocation(line: 182, column: 25, scope: !1057)
!1059 = !DILocation(line: 182, column: 9, scope: !1047)
!1060 = !DILocation(line: 183, column: 20, scope: !1061)
!1061 = distinct !DILexicalBlock(scope: !1057, file: !3, line: 182, column: 36)
!1062 = !DILocation(line: 183, column: 9, scope: !1061)
!1063 = !DILocation(line: 187, column: 5, scope: !1061)
!1064 = !DILocation(line: 185, column: 25, scope: !1061)
!1065 = !DILocation(line: 190, column: 1, scope: !1047)
!1066 = distinct !DISubprogram(name: "print_assigned_cells", scope: !3, file: !3, line: 192, type: !1067, scopeLine: 193, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1069)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{null}
!1069 = !{!1070, !1071, !1075, !1076, !1077, !1078}
!1070 = !DILocalVariable(name: "row_id", scope: !1066, file: !3, line: 194, type: !310)
!1071 = !DILocalVariable(name: "col_id", scope: !1066, file: !3, line: 195, type: !1072)
!1072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 32, elements: !1073)
!1073 = !{!1074}
!1074 = !DISubrange(count: 4, lowerBound: 0)
!1075 = !DILocalVariable(name: "i", scope: !1066, file: !3, line: 196, type: !199)
!1076 = !DILocalVariable(name: "j", scope: !1066, file: !3, line: 196, type: !199)
!1077 = !DILocalVariable(name: "id", scope: !1066, file: !3, line: 197, type: !6)
!1078 = !DILocalVariable(name: "cell", scope: !1066, file: !3, line: 198, type: !101)
!1079 = !DILocation(line: 194, column: 5, scope: !1066)
!1080 = !DILocation(line: 194, column: 10, scope: !1066)
!1081 = !DILocation(line: 195, column: 5, scope: !1066)
!1082 = !DILocation(line: 195, column: 10, scope: !1066)
!1083 = !DILocation(line: 0, scope: !1066)
!1084 = !DILocation(line: 0, scope: !1085)
!1085 = distinct !DILexicalBlock(scope: !1086, file: !3, line: 202, column: 44)
!1086 = distinct !DILexicalBlock(scope: !1087, file: !3, line: 202, column: 17)
!1087 = distinct !DILexicalBlock(scope: !1088, file: !3, line: 200, column: 40)
!1088 = distinct !DILexicalBlock(scope: !1089, file: !3, line: 200, column: 9)
!1089 = distinct !DILexicalBlock(scope: !1090, file: !3, line: 200, column: 9)
!1090 = distinct !DILexicalBlock(scope: !1091, file: !3, line: 199, column: 36)
!1091 = distinct !DILexicalBlock(scope: !1092, file: !3, line: 199, column: 5)
!1092 = distinct !DILexicalBlock(scope: !1066, file: !3, line: 199, column: 5)
!1093 = !DILocation(line: 199, column: 5, scope: !1092)
!1094 = !DILocation(line: 200, column: 9, scope: !1089)
!1095 = !DILocation(line: 201, column: 21, scope: !1087)
!1096 = !DILocation(line: 202, column: 23, scope: !1086)
!1097 = !DILocation(line: 202, column: 33, scope: !1086)
!1098 = !DILocation(line: 202, column: 17, scope: !1087)
!1099 = !DILocation(line: 203, column: 28, scope: !1085)
!1100 = !DILocation(line: 204, column: 25, scope: !1085)
!1101 = !DILocation(line: 207, column: 59, scope: !1085)
!1102 = !DILocation(line: 204, column: 17, scope: !1085)
!1103 = !DILocation(line: 205, column: 27, scope: !1085)
!1104 = !DILocation(line: 206, column: 47, scope: !1085)
!1105 = !DILocation(line: 206, column: 29, scope: !1085)
!1106 = !DILocation(line: 206, column: 33, scope: !1085)
!1107 = !DILocation(line: 206, column: 66, scope: !1085)
!1108 = !DILocation(line: 206, column: 73, scope: !1085)
!1109 = !DILocation(line: 206, column: 27, scope: !1085)
!1110 = !DILocation(line: 207, column: 100, scope: !1085)
!1111 = !DILocation(line: 207, column: 29, scope: !1085)
!1112 = !DILocation(line: 207, column: 27, scope: !1085)
!1113 = !DILocation(line: 208, column: 59, scope: !1085)
!1114 = !DILocation(line: 208, column: 17, scope: !1085)
!1115 = !DILocation(line: 209, column: 13, scope: !1085)
!1116 = !DILocation(line: 200, column: 36, scope: !1088)
!1117 = !DILocation(line: 200, column: 23, scope: !1088)
!1118 = distinct !{!1118, !1094, !1119}
!1119 = !DILocation(line: 210, column: 9, scope: !1089)
!1120 = !DILocation(line: 199, column: 32, scope: !1091)
!1121 = !DILocation(line: 199, column: 19, scope: !1091)
!1122 = distinct !{!1122, !1093, !1123}
!1123 = !DILocation(line: 211, column: 5, scope: !1092)
!1124 = !DILocation(line: 212, column: 1, scope: !1066)
!1125 = distinct !DISubprogram(name: "peek_top", scope: !129, file: !129, line: 28, type: !1126, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !128, retainedNodes: !1134)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!21, !1128}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "stack_t", file: !43, line: 4, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stack", file: !43, line: 5, size: 128, elements: !1131)
!1131 = !{!1132, !1133}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1130, file: !43, line: 6, baseType: !21, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1130, file: !43, line: 7, baseType: !1128, size: 64, offset: 64)
!1134 = !{!1135}
!1135 = !DILocalVariable(name: "stack", arg: 1, scope: !1125, file: !129, line: 28, type: !1128)
!1136 = !DILocation(line: 0, scope: !1125)
!1137 = !DILocation(line: 30, column: 14, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1125, file: !129, line: 30, column: 8)
!1139 = !DILocation(line: 30, column: 8, scope: !1125)
!1140 = !DILocation(line: 33, column: 19, scope: !1125)
!1141 = !DILocation(line: 33, column: 5, scope: !1125)
!1142 = !DILocation(line: 34, column: 1, scope: !1125)
!1143 = distinct !DISubprogram(name: "push", scope: !129, file: !129, line: 36, type: !1144, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !128, retainedNodes: !1147)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!34, !1146, !21}
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1147 = !{!1148, !1149, !1150}
!1148 = !DILocalVariable(name: "stack", arg: 1, scope: !1143, file: !129, line: 36, type: !1146)
!1149 = !DILocalVariable(name: "data", arg: 2, scope: !1143, file: !129, line: 36, type: !21)
!1150 = !DILocalVariable(name: "top", scope: !1143, file: !129, line: 41, type: !1128)
!1151 = !DILocation(line: 0, scope: !1143)
!1152 = !DILocation(line: 38, column: 14, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !1143, file: !129, line: 38, column: 9)
!1154 = !DILocation(line: 38, column: 9, scope: !1143)
!1155 = !DILocation(line: 41, column: 20, scope: !1143)
!1156 = !DILocation(line: 42, column: 10, scope: !1143)
!1157 = !DILocation(line: 42, column: 15, scope: !1143)
!1158 = !DILocation(line: 44, column: 8, scope: !1159)
!1159 = distinct !DILexicalBlock(scope: !1143, file: !129, line: 44, column: 8)
!1160 = !DILocation(line: 0, scope: !1159)
!1161 = !DILocation(line: 53, column: 1, scope: !1143)
!1162 = distinct !DISubprogram(name: "push_copy", scope: !129, file: !129, line: 55, type: !1163, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !128, retainedNodes: !1165)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!34, !1146, !21, !199}
!1165 = !{!1166, !1167, !1168, !1169, !1170}
!1166 = !DILocalVariable(name: "stack", arg: 1, scope: !1162, file: !129, line: 55, type: !1146)
!1167 = !DILocalVariable(name: "data", arg: 2, scope: !1162, file: !129, line: 55, type: !21)
!1168 = !DILocalVariable(name: "size", arg: 3, scope: !1162, file: !129, line: 55, type: !199)
!1169 = !DILocalVariable(name: "data_len", scope: !1162, file: !129, line: 60, type: !34)
!1170 = !DILocalVariable(name: "top", scope: !1162, file: !129, line: 64, type: !1128)
!1171 = !DILocation(line: 0, scope: !1162)
!1172 = !DILocation(line: 57, column: 14, scope: !1173)
!1173 = distinct !DILexicalBlock(scope: !1162, file: !129, line: 57, column: 9)
!1174 = !DILocation(line: 57, column: 9, scope: !1162)
!1175 = !DILocation(line: 60, column: 20, scope: !1162)
!1176 = !DILocation(line: 61, column: 9, scope: !1177)
!1177 = distinct !DILexicalBlock(scope: !1162, file: !129, line: 61, column: 9)
!1178 = !DILocation(line: 61, column: 18, scope: !1177)
!1179 = !DILocation(line: 61, column: 9, scope: !1162)
!1180 = !DILocation(line: 64, column: 20, scope: !1162)
!1181 = !DILocation(line: 65, column: 17, scope: !1162)
!1182 = !DILocation(line: 65, column: 10, scope: !1162)
!1183 = !DILocation(line: 65, column: 15, scope: !1162)
!1184 = !DILocation(line: 66, column: 5, scope: !1162)
!1185 = !DILocation(line: 68, column: 8, scope: !1186)
!1186 = distinct !DILexicalBlock(scope: !1162, file: !129, line: 68, column: 8)
!1187 = !DILocation(line: 68, column: 15, scope: !1186)
!1188 = !DILocation(line: 0, scope: !1186)
!1189 = !DILocation(line: 68, column: 8, scope: !1162)
!1190 = !DILocation(line: 69, column: 19, scope: !1191)
!1191 = distinct !DILexicalBlock(scope: !1186, file: !129, line: 68, column: 24)
!1192 = !DILocation(line: 70, column: 16, scope: !1191)
!1193 = !DILocation(line: 71, column: 5, scope: !1191)
!1194 = !DILocation(line: 72, column: 19, scope: !1195)
!1195 = distinct !DILexicalBlock(scope: !1186, file: !129, line: 71, column: 12)
!1196 = !DILocation(line: 73, column: 16, scope: !1195)
!1197 = !DILocation(line: 77, column: 1, scope: !1162)
!1198 = distinct !DISubprogram(name: "pop_copy", scope: !129, file: !129, line: 79, type: !1199, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !128, retainedNodes: !1201)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!21, !1146}
!1201 = !{!1202, !1203, !1204}
!1202 = !DILocalVariable(name: "stack", arg: 1, scope: !1198, file: !129, line: 79, type: !1146)
!1203 = !DILocalVariable(name: "top", scope: !1198, file: !129, line: 84, type: !1128)
!1204 = !DILocalVariable(name: "popped_data", scope: !1198, file: !129, line: 85, type: !21)
!1205 = !DILocation(line: 0, scope: !1198)
!1206 = !DILocation(line: 81, column: 8, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1198, file: !129, line: 81, column: 8)
!1208 = !DILocation(line: 81, column: 15, scope: !1207)
!1209 = !DILocation(line: 81, column: 8, scope: !1198)
!1210 = !DILocation(line: 85, column: 30, scope: !1198)
!1211 = !DILocation(line: 86, column: 19, scope: !1198)
!1212 = !DILocation(line: 86, column: 12, scope: !1198)
!1213 = !DILocation(line: 87, column: 10, scope: !1198)
!1214 = !DILocation(line: 87, column: 5, scope: !1198)
!1215 = !DILocation(line: 90, column: 1, scope: !1198)
!1216 = distinct !DISubprogram(name: "clear_stack", scope: !129, file: !129, line: 93, type: !1217, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !128, retainedNodes: !1219)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{null, !1146}
!1219 = !{!1220, !1221, !1222}
!1220 = !DILocalVariable(name: "stack", arg: 1, scope: !1216, file: !129, line: 93, type: !1146)
!1221 = !DILocalVariable(name: "top", scope: !1216, file: !129, line: 98, type: !1128)
!1222 = !DILocalVariable(name: "old_top", scope: !1216, file: !129, line: 98, type: !1128)
!1223 = !DILocation(line: 0, scope: !1216)
!1224 = !DILocation(line: 95, column: 9, scope: !1225)
!1225 = distinct !DILexicalBlock(scope: !1216, file: !129, line: 95, column: 9)
!1226 = !DILocation(line: 95, column: 16, scope: !1225)
!1227 = !DILocation(line: 95, column: 9, scope: !1216)
!1228 = !DILocation(line: 99, column: 16, scope: !1216)
!1229 = !DILocation(line: 99, column: 21, scope: !1216)
!1230 = !DILocation(line: 99, column: 5, scope: !1216)
!1231 = !DILocation(line: 102, column: 20, scope: !1232)
!1232 = distinct !DILexicalBlock(scope: !1216, file: !129, line: 99, column: 30)
!1233 = !DILocation(line: 103, column: 14, scope: !1232)
!1234 = !DILocation(line: 103, column: 9, scope: !1232)
!1235 = distinct !{!1235, !1230, !1236}
!1236 = !DILocation(line: 104, column: 5, scope: !1216)
!1237 = !DILocation(line: 106, column: 10, scope: !1216)
!1238 = !DILocation(line: 106, column: 5, scope: !1216)
!1239 = !DILocation(line: 107, column: 12, scope: !1216)
!1240 = !DILocation(line: 108, column: 1, scope: !1216)
!1241 = distinct !DISubprogram(name: "peek_front", scope: !132, file: !132, line: 28, type: !1242, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !131, retainedNodes: !1250)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!21, !1244}
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "queue_t", file: !55, line: 4, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue", file: !55, line: 5, size: 128, elements: !1247)
!1247 = !{!1248, !1249}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1246, file: !55, line: 6, baseType: !21, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1246, file: !55, line: 7, baseType: !1244, size: 64, offset: 64)
!1250 = !{!1251}
!1251 = !DILocalVariable(name: "queue", arg: 1, scope: !1241, file: !132, line: 28, type: !1244)
!1252 = !DILocation(line: 0, scope: !1241)
!1253 = !DILocation(line: 30, column: 15, scope: !1254)
!1254 = distinct !DILexicalBlock(scope: !1241, file: !132, line: 30, column: 9)
!1255 = !DILocation(line: 30, column: 9, scope: !1241)
!1256 = !DILocation(line: 33, column: 19, scope: !1241)
!1257 = !{!1258, !206, i64 0}
!1258 = !{!"queue", !206, i64 0, !206, i64 8}
!1259 = !DILocation(line: 33, column: 5, scope: !1241)
!1260 = !DILocation(line: 34, column: 1, scope: !1241)
!1261 = distinct !DISubprogram(name: "enqueue", scope: !132, file: !132, line: 36, type: !1262, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !131, retainedNodes: !1265)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!34, !1264, !21}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1265 = !{!1266, !1267, !1268, !1269}
!1266 = !DILocalVariable(name: "queue", arg: 1, scope: !1261, file: !132, line: 36, type: !1264)
!1267 = !DILocalVariable(name: "data", arg: 2, scope: !1261, file: !132, line: 36, type: !21)
!1268 = !DILocalVariable(name: "back", scope: !1261, file: !132, line: 41, type: !1244)
!1269 = !DILocalVariable(name: "iter", scope: !1270, file: !132, line: 48, type: !1244)
!1270 = distinct !DILexicalBlock(scope: !1271, file: !132, line: 47, column: 12)
!1271 = distinct !DILexicalBlock(scope: !1261, file: !132, line: 45, column: 8)
!1272 = !DILocation(line: 0, scope: !1261)
!1273 = !DILocation(line: 38, column: 14, scope: !1274)
!1274 = distinct !DILexicalBlock(scope: !1261, file: !132, line: 38, column: 9)
!1275 = !DILocation(line: 38, column: 9, scope: !1261)
!1276 = !DILocation(line: 41, column: 21, scope: !1261)
!1277 = !DILocation(line: 42, column: 11, scope: !1261)
!1278 = !DILocation(line: 42, column: 16, scope: !1261)
!1279 = !DILocation(line: 43, column: 11, scope: !1261)
!1280 = !DILocation(line: 43, column: 16, scope: !1261)
!1281 = !{!1258, !206, i64 8}
!1282 = !DILocation(line: 45, column: 8, scope: !1271)
!1283 = !DILocation(line: 45, column: 15, scope: !1271)
!1284 = !DILocation(line: 45, column: 8, scope: !1261)
!1285 = !DILocation(line: 0, scope: !1270)
!1286 = !DILocation(line: 49, column: 22, scope: !1270)
!1287 = !DILocation(line: 49, column: 27, scope: !1270)
!1288 = !DILocation(line: 49, column: 9, scope: !1270)
!1289 = distinct !{!1289, !1288, !1290}
!1290 = !DILocation(line: 50, column: 26, scope: !1270)
!1291 = !DILocation(line: 0, scope: !1271)
!1292 = !DILocation(line: 56, column: 1, scope: !1261)
!1293 = distinct !DISubprogram(name: "enqueue_copy", scope: !132, file: !132, line: 58, type: !1294, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !131, retainedNodes: !1296)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!34, !1264, !21, !199}
!1296 = !{!1297, !1298, !1299, !1300, !1301, !1302}
!1297 = !DILocalVariable(name: "queue", arg: 1, scope: !1293, file: !132, line: 58, type: !1264)
!1298 = !DILocalVariable(name: "data", arg: 2, scope: !1293, file: !132, line: 58, type: !21)
!1299 = !DILocalVariable(name: "size", arg: 3, scope: !1293, file: !132, line: 58, type: !199)
!1300 = !DILocalVariable(name: "data_len", scope: !1293, file: !132, line: 63, type: !34)
!1301 = !DILocalVariable(name: "back", scope: !1293, file: !132, line: 67, type: !1244)
!1302 = !DILocalVariable(name: "iter", scope: !1303, file: !132, line: 75, type: !1244)
!1303 = distinct !DILexicalBlock(scope: !1304, file: !132, line: 74, column: 12)
!1304 = distinct !DILexicalBlock(scope: !1293, file: !132, line: 72, column: 8)
!1305 = !DILocation(line: 0, scope: !1293)
!1306 = !DILocation(line: 60, column: 14, scope: !1307)
!1307 = distinct !DILexicalBlock(scope: !1293, file: !132, line: 60, column: 9)
!1308 = !DILocation(line: 60, column: 9, scope: !1293)
!1309 = !DILocation(line: 63, column: 20, scope: !1293)
!1310 = !DILocation(line: 64, column: 9, scope: !1311)
!1311 = distinct !DILexicalBlock(scope: !1293, file: !132, line: 64, column: 9)
!1312 = !DILocation(line: 64, column: 18, scope: !1311)
!1313 = !DILocation(line: 64, column: 9, scope: !1293)
!1314 = !DILocation(line: 67, column: 21, scope: !1293)
!1315 = !DILocation(line: 68, column: 18, scope: !1293)
!1316 = !DILocation(line: 68, column: 11, scope: !1293)
!1317 = !DILocation(line: 68, column: 16, scope: !1293)
!1318 = !DILocation(line: 69, column: 5, scope: !1293)
!1319 = !DILocation(line: 70, column: 11, scope: !1293)
!1320 = !DILocation(line: 70, column: 16, scope: !1293)
!1321 = !DILocation(line: 72, column: 8, scope: !1304)
!1322 = !DILocation(line: 72, column: 15, scope: !1304)
!1323 = !DILocation(line: 72, column: 8, scope: !1293)
!1324 = !DILocation(line: 73, column: 16, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1304, file: !132, line: 72, column: 24)
!1326 = !DILocation(line: 74, column: 5, scope: !1325)
!1327 = !DILocation(line: 0, scope: !1303)
!1328 = !DILocation(line: 76, column: 22, scope: !1303)
!1329 = !DILocation(line: 76, column: 27, scope: !1303)
!1330 = !DILocation(line: 76, column: 9, scope: !1303)
!1331 = distinct !{!1331, !1330, !1332}
!1332 = !DILocation(line: 77, column: 26, scope: !1303)
!1333 = !DILocation(line: 79, column: 20, scope: !1303)
!1334 = !DILocation(line: 83, column: 1, scope: !1293)
!1335 = distinct !DISubprogram(name: "dequeue_copy", scope: !132, file: !132, line: 85, type: !1336, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !131, retainedNodes: !1338)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!21, !1264}
!1338 = !{!1339, !1340, !1341}
!1339 = !DILocalVariable(name: "queue", arg: 1, scope: !1335, file: !132, line: 85, type: !1264)
!1340 = !DILocalVariable(name: "front", scope: !1335, file: !132, line: 90, type: !1244)
!1341 = !DILocalVariable(name: "popped_data", scope: !1335, file: !132, line: 91, type: !21)
!1342 = !DILocation(line: 0, scope: !1335)
!1343 = !DILocation(line: 87, column: 8, scope: !1344)
!1344 = distinct !DILexicalBlock(scope: !1335, file: !132, line: 87, column: 8)
!1345 = !DILocation(line: 87, column: 15, scope: !1344)
!1346 = !DILocation(line: 87, column: 8, scope: !1335)
!1347 = !DILocation(line: 91, column: 32, scope: !1335)
!1348 = !DILocation(line: 92, column: 21, scope: !1335)
!1349 = !DILocation(line: 92, column: 12, scope: !1335)
!1350 = !DILocation(line: 93, column: 10, scope: !1335)
!1351 = !DILocation(line: 93, column: 5, scope: !1335)
!1352 = !DILocation(line: 96, column: 1, scope: !1335)
!1353 = distinct !DISubprogram(name: "clear_queue", scope: !132, file: !132, line: 99, type: !1354, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !131, retainedNodes: !1356)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{null, !1264}
!1356 = !{!1357, !1358, !1359}
!1357 = !DILocalVariable(name: "queue", arg: 1, scope: !1353, file: !132, line: 99, type: !1264)
!1358 = !DILocalVariable(name: "front", scope: !1353, file: !132, line: 104, type: !1244)
!1359 = !DILocalVariable(name: "old_front", scope: !1353, file: !132, line: 104, type: !1244)
!1360 = !DILocation(line: 0, scope: !1353)
!1361 = !DILocation(line: 101, column: 9, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1353, file: !132, line: 101, column: 9)
!1363 = !DILocation(line: 101, column: 16, scope: !1362)
!1364 = !DILocation(line: 101, column: 9, scope: !1353)
!1365 = !DILocation(line: 105, column: 18, scope: !1353)
!1366 = !DILocation(line: 105, column: 23, scope: !1353)
!1367 = !DILocation(line: 105, column: 5, scope: !1353)
!1368 = !DILocation(line: 108, column: 24, scope: !1369)
!1369 = distinct !DILexicalBlock(scope: !1353, file: !132, line: 105, column: 32)
!1370 = !DILocation(line: 109, column: 14, scope: !1369)
!1371 = !DILocation(line: 109, column: 9, scope: !1369)
!1372 = distinct !{!1372, !1367, !1373}
!1373 = !DILocation(line: 110, column: 5, scope: !1353)
!1374 = !DILocation(line: 112, column: 10, scope: !1353)
!1375 = !DILocation(line: 112, column: 5, scope: !1353)
!1376 = !DILocation(line: 113, column: 12, scope: !1353)
!1377 = !DILocation(line: 114, column: 1, scope: !1353)
!1378 = distinct !DISubprogram(name: "itoa", scope: !134, file: !134, line: 29, type: !1379, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !133, retainedNodes: !1381)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{!21, !34, !21, !199}
!1381 = !{!1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389}
!1382 = !DILocalVariable(name: "value", arg: 1, scope: !1378, file: !134, line: 29, type: !34)
!1383 = !DILocalVariable(name: "str", arg: 2, scope: !1378, file: !134, line: 29, type: !21)
!1384 = !DILocalVariable(name: "size", arg: 3, scope: !1378, file: !134, line: 29, type: !199)
!1385 = !DILocalVariable(name: "base", scope: !1378, file: !134, line: 31, type: !34)
!1386 = !DILocalVariable(name: "i", scope: !1378, file: !134, line: 35, type: !199)
!1387 = !DILocalVariable(name: "is_negative", scope: !1378, file: !134, line: 36, type: !34)
!1388 = !DILocalVariable(name: "j", scope: !1378, file: !134, line: 57, type: !34)
!1389 = !DILocalVariable(name: "c", scope: !1390, file: !134, line: 59, type: !22)
!1390 = distinct !DILexicalBlock(scope: !1378, file: !134, line: 58, column: 19)
!1391 = !DILocation(line: 0, scope: !1378)
!1392 = !DILocation(line: 32, column: 14, scope: !1393)
!1393 = distinct !DILexicalBlock(scope: !1378, file: !134, line: 32, column: 9)
!1394 = !DILocation(line: 32, column: 9, scope: !1378)
!1395 = !DILocation(line: 38, column: 15, scope: !1396)
!1396 = distinct !DILexicalBlock(scope: !1378, file: !134, line: 38, column: 9)
!1397 = !DILocation(line: 41, column: 5, scope: !1378)
!1398 = !DILocation(line: 0, scope: !1399)
!1399 = distinct !DILexicalBlock(scope: !1400, file: !134, line: 42, column: 13)
!1400 = distinct !DILexicalBlock(scope: !1378, file: !134, line: 41, column: 8)
!1401 = !DILocation(line: 42, column: 13, scope: !1400)
!1402 = !DILocation(line: 47, column: 15, scope: !1400)
!1403 = !DILocation(line: 48, column: 16, scope: !1378)
!1404 = !DILocation(line: 48, column: 27, scope: !1378)
!1405 = !DILocation(line: 48, column: 5, scope: !1400)
!1406 = distinct !{!1406, !1397, !1407}
!1407 = !DILocation(line: 48, column: 40, scope: !1378)
!1408 = !DILocation(line: 50, column: 26, scope: !1409)
!1409 = distinct !DILexicalBlock(scope: !1378, file: !134, line: 50, column: 9)
!1410 = !DILocation(line: 50, column: 39, scope: !1409)
!1411 = !DILocation(line: 50, column: 20, scope: !1409)
!1412 = !DILocation(line: 53, column: 9, scope: !1378)
!1413 = !DILocation(line: 54, column: 14, scope: !1414)
!1414 = distinct !DILexicalBlock(scope: !1378, file: !134, line: 53, column: 9)
!1415 = !DILocation(line: 54, column: 9, scope: !1414)
!1416 = !DILocation(line: 54, column: 18, scope: !1414)
!1417 = !DILocation(line: 55, column: 5, scope: !1378)
!1418 = !DILocation(line: 55, column: 14, scope: !1378)
!1419 = !DILocation(line: 58, column: 14, scope: !1378)
!1420 = !DILocation(line: 58, column: 5, scope: !1378)
!1421 = !DILocation(line: 59, column: 18, scope: !1390)
!1422 = !DILocation(line: 0, scope: !1390)
!1423 = !DILocation(line: 60, column: 20, scope: !1390)
!1424 = !DILocation(line: 60, column: 14, scope: !1390)
!1425 = !DILocation(line: 60, column: 18, scope: !1390)
!1426 = !DILocation(line: 61, column: 18, scope: !1390)
!1427 = distinct !{!1427, !1420, !1428}
!1428 = !DILocation(line: 62, column: 5, scope: !1378)
!1429 = !DILocation(line: 65, column: 1, scope: !1378)
!1430 = distinct !DISubprogram(name: "main", scope: !136, file: !136, line: 163, type: !195, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !135, retainedNodes: !1431)
!1431 = !{!1432, !1433, !1434}
!1432 = !DILocalVariable(name: "line", scope: !1430, file: !136, line: 164, type: !358)
!1433 = !DILocalVariable(name: "exit", scope: !1430, file: !136, line: 166, type: !34)
!1434 = !DILocalVariable(name: "line_status", scope: !1430, file: !136, line: 167, type: !34)
!1435 = !DILocation(line: 164, column: 5, scope: !1430)
!1436 = !DILocation(line: 164, column: 10, scope: !1430)
!1437 = !DILocation(line: 165, column: 5, scope: !1430)
!1438 = !DILocation(line: 0, scope: !1430)
!1439 = !DILocation(line: 169, column: 5, scope: !1430)
!1440 = !DILocation(line: 170, column: 9, scope: !1441)
!1441 = distinct !DILexicalBlock(scope: !1430, file: !136, line: 169, column: 8)
!1442 = !DILocation(line: 171, column: 23, scope: !1441)
!1443 = !DILocation(line: 172, column: 24, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1441, file: !136, line: 172, column: 12)
!1445 = !DILocation(line: 172, column: 12, scope: !1441)
!1446 = !DILocation(line: 173, column: 13, scope: !1447)
!1447 = distinct !DILexicalBlock(scope: !1444, file: !136, line: 172, column: 30)
!1448 = !DILocation(line: 174, column: 13, scope: !1447)
!1449 = !DILocation(line: 177, column: 17, scope: !1441)
!1450 = !DILocation(line: 177, column: 9, scope: !1441)
!1451 = !DILocation(line: 179, column: 17, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1441, file: !136, line: 177, column: 35)
!1453 = !DILocation(line: 180, column: 17, scope: !1452)
!1454 = !DILocation(line: 182, column: 17, scope: !1452)
!1455 = !DILocation(line: 183, column: 17, scope: !1452)
!1456 = !DILocation(line: 185, column: 17, scope: !1452)
!1457 = !DILocation(line: 186, column: 17, scope: !1452)
!1458 = !DILocation(line: 188, column: 17, scope: !1452)
!1459 = !DILocation(line: 189, column: 17, scope: !1452)
!1460 = !DILocation(line: 191, column: 17, scope: !1452)
!1461 = !DILocation(line: 192, column: 17, scope: !1452)
!1462 = !DILocation(line: 195, column: 17, scope: !1452)
!1463 = !DILocation(line: 205, column: 1, scope: !1430)
!1464 = !DILocation(line: 198, column: 17, scope: !1452)
!1465 = !DILocation(line: 199, column: 17, scope: !1452)
!1466 = distinct !DISubprogram(name: "readline", scope: !136, file: !136, line: 54, type: !1467, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !135, retainedNodes: !1469)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!34, !34, !21, !199}
!1469 = !{!1470, !1471, !1472, !1473, !1474}
!1470 = !DILocalVariable(name: "fd", arg: 1, scope: !1466, file: !136, line: 54, type: !34)
!1471 = !DILocalVariable(name: "line", arg: 2, scope: !1466, file: !136, line: 54, type: !21)
!1472 = !DILocalVariable(name: "line_size", arg: 3, scope: !1466, file: !136, line: 54, type: !199)
!1473 = !DILocalVariable(name: "i", scope: !1466, file: !136, line: 56, type: !199)
!1474 = !DILocalVariable(name: "rx", scope: !1466, file: !136, line: 57, type: !199)
!1475 = !DILocation(line: 0, scope: !1466)
!1476 = !DILocation(line: 57, column: 5, scope: !1466)
!1477 = !DILocation(line: 59, column: 5, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1466, file: !136, line: 59, column: 5)
!1479 = !DILocation(line: 60, column: 13, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1481, file: !136, line: 60, column: 13)
!1481 = distinct !DILexicalBlock(scope: !1482, file: !136, line: 59, column: 37)
!1482 = distinct !DILexicalBlock(scope: !1478, file: !136, line: 59, column: 5)
!1483 = !DILocation(line: 60, column: 39, scope: !1480)
!1484 = !DILocation(line: 60, column: 47, scope: !1480)
!1485 = !DILocation(line: 60, column: 50, scope: !1480)
!1486 = !DILocation(line: 60, column: 44, scope: !1480)
!1487 = !DILocation(line: 61, column: 13, scope: !1480)
!1488 = !DILocation(line: 62, column: 13, scope: !1489)
!1489 = distinct !DILexicalBlock(scope: !1481, file: !136, line: 62, column: 13)
!1490 = !DILocation(line: 62, column: 19, scope: !1489)
!1491 = !DILocation(line: 62, column: 13, scope: !1481)
!1492 = !DILocation(line: 64, column: 13, scope: !1481)
!1493 = !DILocation(line: 59, column: 33, scope: !1482)
!1494 = !DILocation(line: 59, column: 19, scope: !1482)
!1495 = distinct !{!1495, !1477, !1496}
!1496 = !DILocation(line: 65, column: 5, scope: !1478)
!1497 = !DILocation(line: 0, scope: !1478)
!1498 = !DILocation(line: 67, column: 11, scope: !1499)
!1499 = distinct !DILexicalBlock(scope: !1466, file: !136, line: 67, column: 9)
!1500 = !DILocation(line: 67, column: 24, scope: !1499)
!1501 = !DILocation(line: 67, column: 27, scope: !1499)
!1502 = !DILocation(line: 67, column: 33, scope: !1499)
!1503 = !DILocation(line: 67, column: 9, scope: !1466)
!1504 = !DILocation(line: 69, column: 14, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1499, file: !136, line: 69, column: 14)
!1506 = !DILocation(line: 69, column: 20, scope: !1505)
!1507 = !DILocation(line: 69, column: 14, scope: !1499)
!1508 = !DILocation(line: 72, column: 15, scope: !1505)
!1509 = !DILocation(line: 74, column: 5, scope: !1466)
!1510 = !DILocation(line: 75, column: 1, scope: !1466)
!1511 = distinct !DISubprogram(name: "parse_line", scope: !136, file: !136, line: 77, type: !37, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !135, retainedNodes: !1512)
!1512 = !{!1513, !1514, !1515, !1516, !1520, !1521, !1522, !1523, !1524, !1525, !1526}
!1513 = !DILocalVariable(name: "line", arg: 1, scope: !1511, file: !136, line: 77, type: !21)
!1514 = !DILocalVariable(name: "is_repr", scope: !1511, file: !136, line: 79, type: !34)
!1515 = !DILocalVariable(name: "i", scope: !1511, file: !136, line: 80, type: !199)
!1516 = !DILocalVariable(name: "tmp", scope: !1511, file: !136, line: 81, type: !1517)
!1517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 256, elements: !1518)
!1518 = !{!1519}
!1519 = !DISubrange(count: 32, lowerBound: 0)
!1520 = !DILocalVariable(name: "tok", scope: !1511, file: !136, line: 82, type: !21)
!1521 = !DILocalVariable(name: "val_str", scope: !1511, file: !136, line: 83, type: !358)
!1522 = !DILocalVariable(name: "cell_str", scope: !1511, file: !136, line: 84, type: !21)
!1523 = !DILabel(scope: !1511, name: "show_cmd", file: !136, line: 122)
!1524 = !DILabel(scope: !1511, name: "clear_cmd", file: !136, line: 143)
!1525 = !DILabel(scope: !1511, name: "assign_cmd", file: !136, line: 149)
!1526 = !DILabel(scope: !1511, name: "exit_cmd", file: !136, line: 159)
!1527 = !DILocation(line: 0, scope: !1511)
!1528 = !DILocation(line: 81, column: 5, scope: !1511)
!1529 = !DILocation(line: 81, column: 10, scope: !1511)
!1530 = !DILocation(line: 83, column: 5, scope: !1511)
!1531 = !DILocation(line: 83, column: 10, scope: !1511)
!1532 = !DILocation(line: 86, column: 9, scope: !1533)
!1533 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 86, column: 9)
!1534 = !DILocation(line: 86, column: 46, scope: !1533)
!1535 = !DILocation(line: 86, column: 9, scope: !1511)
!1536 = !DILocation(line: 89, column: 17, scope: !1511)
!1537 = !DILocation(line: 89, column: 5, scope: !1511)
!1538 = !DILocation(line: 90, column: 5, scope: !1539)
!1539 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 90, column: 5)
!1540 = !DILocation(line: 91, column: 26, scope: !1541)
!1541 = distinct !DILexicalBlock(scope: !1539, file: !136, line: 90, column: 5)
!1542 = !DILocation(line: 91, column: 18, scope: !1541)
!1543 = !DILocation(line: 91, column: 16, scope: !1541)
!1544 = !DILocation(line: 90, column: 36, scope: !1541)
!1545 = !DILocation(line: 90, column: 19, scope: !1541)
!1546 = distinct !{!1546, !1538, !1547}
!1547 = !DILocation(line: 91, column: 32, scope: !1539)
!1548 = !DILocation(line: 93, column: 9, scope: !1549)
!1549 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 93, column: 9)
!1550 = !DILocation(line: 93, column: 41, scope: !1549)
!1551 = !DILocation(line: 93, column: 9, scope: !1511)
!1552 = !DILocation(line: 96, column: 5, scope: !1511)
!1553 = !DILocation(line: 97, column: 5, scope: !1554)
!1554 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 97, column: 5)
!1555 = !DILocation(line: 98, column: 26, scope: !1556)
!1556 = distinct !DILexicalBlock(scope: !1554, file: !136, line: 97, column: 5)
!1557 = !DILocation(line: 98, column: 18, scope: !1556)
!1558 = !DILocation(line: 98, column: 16, scope: !1556)
!1559 = !DILocation(line: 97, column: 36, scope: !1556)
!1560 = !DILocation(line: 97, column: 19, scope: !1556)
!1561 = distinct !{!1561, !1553, !1562}
!1562 = !DILocation(line: 98, column: 32, scope: !1554)
!1563 = !DILocation(line: 100, column: 9, scope: !1564)
!1564 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 100, column: 9)
!1565 = !DILocation(line: 100, column: 41, scope: !1564)
!1566 = !DILocation(line: 100, column: 9, scope: !1511)
!1567 = !DILocation(line: 105, column: 5, scope: !1511)
!1568 = !DILocation(line: 106, column: 5, scope: !1569)
!1569 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 106, column: 5)
!1570 = !DILocation(line: 107, column: 26, scope: !1571)
!1571 = distinct !DILexicalBlock(scope: !1569, file: !136, line: 106, column: 5)
!1572 = !DILocation(line: 107, column: 18, scope: !1571)
!1573 = !DILocation(line: 107, column: 16, scope: !1571)
!1574 = !DILocation(line: 106, column: 37, scope: !1571)
!1575 = !DILocation(line: 106, column: 19, scope: !1571)
!1576 = distinct !{!1576, !1568, !1577}
!1577 = !DILocation(line: 107, column: 32, scope: !1569)
!1578 = !DILocation(line: 109, column: 9, scope: !1579)
!1579 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 109, column: 9)
!1580 = !DILocation(line: 109, column: 43, scope: !1579)
!1581 = !DILocation(line: 109, column: 9, scope: !1511)
!1582 = !DILocation(line: 113, column: 5, scope: !1511)
!1583 = !DILocation(line: 114, column: 5, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 114, column: 5)
!1585 = !DILocation(line: 115, column: 26, scope: !1586)
!1586 = distinct !DILexicalBlock(scope: !1584, file: !136, line: 114, column: 5)
!1587 = !DILocation(line: 115, column: 18, scope: !1586)
!1588 = !DILocation(line: 115, column: 16, scope: !1586)
!1589 = !DILocation(line: 114, column: 36, scope: !1586)
!1590 = !DILocation(line: 114, column: 19, scope: !1586)
!1591 = distinct !{!1591, !1583, !1592}
!1592 = !DILocation(line: 115, column: 32, scope: !1584)
!1593 = !DILocation(line: 117, column: 9, scope: !1594)
!1594 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 117, column: 9)
!1595 = !DILocation(line: 117, column: 41, scope: !1594)
!1596 = !DILocation(line: 117, column: 9, scope: !1511)
!1597 = !DILocation(line: 122, column: 1, scope: !1511)
!1598 = !DILocation(line: 123, column: 5, scope: !1511)
!1599 = !DILocation(line: 124, column: 18, scope: !1511)
!1600 = !DILocation(line: 124, column: 5, scope: !1511)
!1601 = !DILocation(line: 125, column: 5, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 125, column: 5)
!1603 = !DILocation(line: 126, column: 26, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !1602, file: !136, line: 125, column: 5)
!1605 = !DILocation(line: 126, column: 18, scope: !1604)
!1606 = !DILocation(line: 126, column: 16, scope: !1604)
!1607 = !DILocation(line: 125, column: 37, scope: !1604)
!1608 = !DILocation(line: 125, column: 19, scope: !1604)
!1609 = distinct !{!1609, !1601, !1610}
!1610 = !DILocation(line: 126, column: 32, scope: !1602)
!1611 = !DILocation(line: 129, column: 9, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 129, column: 9)
!1613 = !DILocation(line: 129, column: 43, scope: !1612)
!1614 = !DILocation(line: 129, column: 9, scope: !1511)
!1615 = !DILocation(line: 130, column: 9, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1612, file: !136, line: 129, column: 49)
!1617 = !DILocation(line: 131, column: 9, scope: !1616)
!1618 = !DILocation(line: 132, column: 16, scope: !1619)
!1619 = distinct !DILexicalBlock(scope: !1612, file: !136, line: 132, column: 16)
!1620 = !DILocation(line: 132, column: 51, scope: !1619)
!1621 = !DILocation(line: 132, column: 16, scope: !1612)
!1622 = !DILocation(line: 133, column: 31, scope: !1623)
!1623 = distinct !DILexicalBlock(scope: !1619, file: !136, line: 132, column: 58)
!1624 = !DILocation(line: 133, column: 20, scope: !1623)
!1625 = !DILocation(line: 134, column: 13, scope: !1626)
!1626 = distinct !DILexicalBlock(scope: !1623, file: !136, line: 134, column: 13)
!1627 = !DILocation(line: 134, column: 13, scope: !1623)
!1628 = !DILocation(line: 135, column: 13, scope: !1626)
!1629 = !DILocation(line: 137, column: 13, scope: !1626)
!1630 = !DILocation(line: 143, column: 1, scope: !1511)
!1631 = !DILocation(line: 144, column: 21, scope: !1632)
!1632 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 144, column: 9)
!1633 = !DILocation(line: 144, column: 9, scope: !1632)
!1634 = !DILocation(line: 144, column: 42, scope: !1632)
!1635 = !DILocation(line: 149, column: 1, scope: !1511)
!1636 = !DILocation(line: 150, column: 11, scope: !1511)
!1637 = !DILocation(line: 151, column: 13, scope: !1638)
!1638 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 151, column: 9)
!1639 = !DILocation(line: 151, column: 24, scope: !1638)
!1640 = !DILocation(line: 151, column: 29, scope: !1638)
!1641 = !DILocation(line: 151, column: 21, scope: !1638)
!1642 = !DILocation(line: 154, column: 9, scope: !1643)
!1643 = distinct !DILexicalBlock(scope: !1511, file: !136, line: 154, column: 9)
!1644 = !DILocation(line: 154, column: 40, scope: !1643)
!1645 = !DILocation(line: 161, column: 1, scope: !1511)
!1646 = distinct !DISubprogram(name: "print_table", scope: !136, file: !136, line: 50, type: !1067, scopeLine: 50, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !135, retainedNodes: !25)
!1647 = !DILocation(line: 51, column: 4, scope: !1646)
!1648 = !DILocation(line: 52, column: 1, scope: !1646)
!1649 = distinct !DISubprogram(name: "exit", scope: !27, file: !27, line: 23, type: !1650, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !135, retainedNodes: !1652)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{null, !34}
!1652 = !{!1653}
!1653 = !DILocalVariable(name: "ret", arg: 1, scope: !1649, file: !27, line: 23, type: !34)
!1654 = !DILocation(line: 0, scope: !1649)
!1655 = !DILocation(line: 25, column: 5, scope: !1649)
!1656 = distinct !DISubprogram(name: "atof", scope: !168, file: !168, line: 29, type: !1657, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !1659)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!23, !21, !199, !81}
!1659 = !{!1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671}
!1660 = !DILocalVariable(name: "str", arg: 1, scope: !1656, file: !168, line: 29, type: !21)
!1661 = !DILocalVariable(name: "size", arg: 2, scope: !1656, file: !168, line: 29, type: !199)
!1662 = !DILocalVariable(name: "bad_conversion", arg: 3, scope: !1656, file: !168, line: 29, type: !81)
!1663 = !DILocalVariable(name: "val", scope: !1656, file: !168, line: 34, type: !23)
!1664 = !DILocalVariable(name: "exp", scope: !1656, file: !168, line: 34, type: !23)
!1665 = !DILocalVariable(name: "dec_multiplier", scope: !1656, file: !168, line: 34, type: !23)
!1666 = !DILocalVariable(name: "has_period", scope: !1656, file: !168, line: 35, type: !34)
!1667 = !DILocalVariable(name: "has_exp", scope: !1656, file: !168, line: 35, type: !34)
!1668 = !DILocalVariable(name: "negative", scope: !1656, file: !168, line: 36, type: !34)
!1669 = !DILocalVariable(name: "num_dec", scope: !1656, file: !168, line: 37, type: !34)
!1670 = !DILabel(scope: !1656, name: "error", file: !168, line: 75)
!1671 = !DILabel(scope: !1656, name: "done", file: !168, line: 79)
!1672 = !DILocation(line: 0, scope: !1656)
!1673 = !DILocation(line: 31, column: 13, scope: !1674)
!1674 = distinct !DILexicalBlock(scope: !1656, file: !168, line: 31, column: 9)
!1675 = !DILocation(line: 31, column: 21, scope: !1674)
!1676 = !DILocation(line: 31, column: 24, scope: !1674)
!1677 = !DILocation(line: 31, column: 36, scope: !1674)
!1678 = !DILocation(line: 31, column: 44, scope: !1674)
!1679 = !DILocation(line: 31, column: 47, scope: !1674)
!1680 = !DILocation(line: 31, column: 9, scope: !1656)
!1681 = !DILocation(line: 40, column: 12, scope: !1682)
!1682 = distinct !DILexicalBlock(scope: !1683, file: !168, line: 39, column: 22)
!1683 = distinct !DILexicalBlock(scope: !1656, file: !168, line: 39, column: 9)
!1684 = !DILocation(line: 41, column: 13, scope: !1685)
!1685 = distinct !DILexicalBlock(scope: !1682, file: !168, line: 41, column: 13)
!1686 = !DILocation(line: 41, column: 18, scope: !1685)
!1687 = !DILocation(line: 41, column: 13, scope: !1682)
!1688 = !DILocation(line: 46, column: 12, scope: !1656)
!1689 = !DILocation(line: 46, column: 17, scope: !1656)
!1690 = !DILocation(line: 46, column: 5, scope: !1656)
!1691 = distinct !{!1691, !1690, !1692}
!1692 = !DILocation(line: 72, column: 5, scope: !1656)
!1693 = !DILocation(line: 47, column: 25, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1695, file: !168, line: 47, column: 13)
!1695 = distinct !DILexicalBlock(scope: !1656, file: !168, line: 46, column: 26)
!1696 = !DILocation(line: 48, column: 17, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1698, file: !168, line: 48, column: 17)
!1698 = distinct !DILexicalBlock(scope: !1694, file: !168, line: 47, column: 41)
!1699 = !DILocation(line: 48, column: 17, scope: !1698)
!1700 = !DILocation(line: 49, column: 28, scope: !1701)
!1701 = distinct !DILexicalBlock(scope: !1697, file: !168, line: 48, column: 26)
!1702 = !DILocation(line: 49, column: 42, scope: !1701)
!1703 = !DILocation(line: 49, column: 36, scope: !1701)
!1704 = !DILocation(line: 49, column: 34, scope: !1701)
!1705 = !DILocation(line: 50, column: 13, scope: !1701)
!1706 = !DILocation(line: 50, column: 25, scope: !1707)
!1707 = distinct !DILexicalBlock(scope: !1697, file: !168, line: 50, column: 24)
!1708 = !DILocation(line: 50, column: 24, scope: !1697)
!1709 = !DILocation(line: 51, column: 28, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1707, file: !168, line: 50, column: 37)
!1711 = !DILocation(line: 51, column: 42, scope: !1710)
!1712 = !DILocation(line: 51, column: 36, scope: !1710)
!1713 = !DILocation(line: 51, column: 34, scope: !1710)
!1714 = !DILocation(line: 52, column: 13, scope: !1710)
!1715 = !DILocation(line: 53, column: 32, scope: !1716)
!1716 = distinct !DILexicalBlock(scope: !1707, file: !168, line: 52, column: 20)
!1717 = !DILocation(line: 54, column: 24, scope: !1716)
!1718 = !DILocation(line: 55, column: 31, scope: !1716)
!1719 = !DILocation(line: 55, column: 25, scope: !1716)
!1720 = !DILocation(line: 55, column: 38, scope: !1716)
!1721 = !DILocation(line: 55, column: 21, scope: !1716)
!1722 = !DILocation(line: 57, column: 25, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1694, file: !168, line: 57, column: 20)
!1724 = !DILocation(line: 57, column: 20, scope: !1694)
!1725 = !DILocation(line: 58, column: 23, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1723, file: !168, line: 57, column: 33)
!1727 = !DILocation(line: 59, column: 9, scope: !1726)
!1728 = !DILocation(line: 59, column: 20, scope: !1729)
!1729 = distinct !DILexicalBlock(scope: !1723, file: !168, line: 59, column: 20)
!1730 = !DILocation(line: 59, column: 34, scope: !1729)
!1731 = !DILocation(line: 59, column: 20, scope: !1723)
!1732 = !DILocation(line: 60, column: 20, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1729, file: !168, line: 59, column: 42)
!1734 = !DILocation(line: 65, column: 24, scope: !1735)
!1735 = distinct !DILexicalBlock(scope: !1695, file: !168, line: 65, column: 13)
!1736 = !DILocation(line: 65, column: 39, scope: !1735)
!1737 = !DILocation(line: 65, column: 28, scope: !1735)
!1738 = !DILocation(line: 68, column: 21, scope: !1739)
!1739 = distinct !DILexicalBlock(scope: !1695, file: !168, line: 68, column: 13)
!1740 = !DILocation(line: 71, column: 12, scope: !1695)
!1741 = !DILocation(line: 68, column: 13, scope: !1695)
!1742 = !DILocation(line: 75, column: 1, scope: !1656)
!1743 = !DILocation(line: 76, column: 21, scope: !1656)
!1744 = !DILocation(line: 77, column: 5, scope: !1656)
!1745 = !DILocation(line: 34, column: 12, scope: !1656)
!1746 = !DILocation(line: 35, column: 25, scope: !1656)
!1747 = !DILocation(line: 79, column: 1, scope: !1656)
!1748 = !DILocation(line: 80, column: 9, scope: !1749)
!1749 = distinct !DILexicalBlock(scope: !1656, file: !168, line: 80, column: 9)
!1750 = !DILocation(line: 80, column: 9, scope: !1656)
!1751 = !DILocation(line: 81, column: 16, scope: !1749)
!1752 = !DILocation(line: 81, column: 13, scope: !1749)
!1753 = !DILocation(line: 81, column: 9, scope: !1749)
!1754 = !DILocation(line: 83, column: 16, scope: !1656)
!1755 = !DILocation(line: 83, column: 5, scope: !1656)
!1756 = !DILocation(line: 84, column: 1, scope: !1656)
!1757 = distinct !DISubprogram(name: "ftoa", scope: !170, file: !170, line: 29, type: !1758, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !169, retainedNodes: !1760)
!1758 = !DISubroutineType(types: !1759)
!1759 = !{!21, !23, !21, !199}
!1760 = !{!1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1772}
!1761 = !DILocalVariable(name: "value", arg: 1, scope: !1757, file: !170, line: 29, type: !23)
!1762 = !DILocalVariable(name: "str", arg: 2, scope: !1757, file: !170, line: 29, type: !21)
!1763 = !DILocalVariable(name: "size", arg: 3, scope: !1757, file: !170, line: 29, type: !199)
!1764 = !DILocalVariable(name: "i", scope: !1757, file: !170, line: 36, type: !199)
!1765 = !DILocalVariable(name: "negative", scope: !1757, file: !170, line: 37, type: !34)
!1766 = !DILocalVariable(name: "rem", scope: !1757, file: !170, line: 49, type: !23)
!1767 = !DILocalVariable(name: "magnitude", scope: !1757, file: !170, line: 56, type: !34)
!1768 = !DILocalVariable(name: "e", scope: !1769, file: !170, line: 71, type: !23)
!1769 = distinct !DILexicalBlock(scope: !1770, file: !170, line: 60, column: 5)
!1770 = distinct !DILexicalBlock(scope: !1771, file: !170, line: 59, column: 5)
!1771 = distinct !DILexicalBlock(scope: !1757, file: !170, line: 59, column: 5)
!1772 = !DILocalVariable(name: "digit", scope: !1769, file: !170, line: 72, type: !34)
!1773 = !DILocation(line: 0, scope: !1757)
!1774 = !DILocation(line: 30, column: 14, scope: !1775)
!1775 = distinct !DILexicalBlock(scope: !1757, file: !170, line: 30, column: 9)
!1776 = !DILocation(line: 30, column: 9, scope: !1757)
!1777 = !DILocation(line: 33, column: 9, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1757, file: !170, line: 33, column: 9)
!1779 = !DILocation(line: 33, column: 25, scope: !1778)
!1780 = !DILocation(line: 33, column: 22, scope: !1778)
!1781 = !DILocation(line: 39, column: 15, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1757, file: !170, line: 39, column: 9)
!1783 = !DILocation(line: 39, column: 9, scope: !1757)
!1784 = !DILocation(line: 41, column: 18, scope: !1785)
!1785 = distinct !DILexicalBlock(scope: !1782, file: !170, line: 39, column: 20)
!1786 = !DILocation(line: 42, column: 15, scope: !1785)
!1787 = !DILocation(line: 43, column: 5, scope: !1785)
!1788 = !DILocation(line: 45, column: 11, scope: !1789)
!1789 = distinct !DILexicalBlock(scope: !1757, file: !170, line: 45, column: 9)
!1790 = !DILocation(line: 45, column: 9, scope: !1757)
!1791 = !DILocation(line: 49, column: 18, scope: !1757)
!1792 = !DILocation(line: 49, column: 42, scope: !1757)
!1793 = !DILocation(line: 50, column: 13, scope: !1794)
!1794 = distinct !DILexicalBlock(scope: !1757, file: !170, line: 50, column: 9)
!1795 = !DILocation(line: 50, column: 17, scope: !1794)
!1796 = !DILocation(line: 50, column: 25, scope: !1794)
!1797 = !DILocation(line: 50, column: 36, scope: !1794)
!1798 = !DILocation(line: 50, column: 29, scope: !1794)
!1799 = !DILocation(line: 0, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1794, file: !170, line: 51, column: 13)
!1801 = !DILocation(line: 56, column: 27, scope: !1757)
!1802 = !DILocation(line: 56, column: 21, scope: !1757)
!1803 = !DILocation(line: 56, column: 38, scope: !1757)
!1804 = !DILocation(line: 61, column: 15, scope: !1805)
!1805 = distinct !DILexicalBlock(scope: !1769, file: !170, line: 61, column: 13)
!1806 = !DILocation(line: 59, column: 5, scope: !1771)
!1807 = !DILocation(line: 57, column: 9, scope: !1757)
!1808 = !DILocation(line: 64, column: 23, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !1769, file: !170, line: 64, column: 13)
!1810 = !DILocation(line: 64, column: 13, scope: !1769)
!1811 = !DILocation(line: 66, column: 18, scope: !1812)
!1812 = distinct !DILexicalBlock(scope: !1809, file: !170, line: 65, column: 9)
!1813 = !DILocation(line: 66, column: 13, scope: !1812)
!1814 = !DILocation(line: 66, column: 22, scope: !1812)
!1815 = !DILocation(line: 67, column: 19, scope: !1816)
!1816 = distinct !DILexicalBlock(scope: !1812, file: !170, line: 67, column: 17)
!1817 = !DILocation(line: 67, column: 17, scope: !1812)
!1818 = !DILocation(line: 71, column: 28, scope: !1769)
!1819 = !DILocation(line: 71, column: 20, scope: !1769)
!1820 = !DILocation(line: 0, scope: !1769)
!1821 = !DILocation(line: 72, column: 27, scope: !1769)
!1822 = !DILocation(line: 72, column: 21, scope: !1769)
!1823 = !DILocation(line: 73, column: 18, scope: !1769)
!1824 = !DILocation(line: 73, column: 24, scope: !1769)
!1825 = !DILocation(line: 73, column: 15, scope: !1769)
!1826 = !DILocation(line: 74, column: 20, scope: !1769)
!1827 = !DILocation(line: 74, column: 14, scope: !1769)
!1828 = !DILocation(line: 74, column: 9, scope: !1769)
!1829 = !DILocation(line: 74, column: 18, scope: !1769)
!1830 = !DILocation(line: 59, column: 37, scope: !1770)
!1831 = !DILocation(line: 59, column: 22, scope: !1770)
!1832 = distinct !{!1832, !1806, !1833}
!1833 = !DILocation(line: 75, column: 5, scope: !1771)
!1834 = !DILocation(line: 77, column: 11, scope: !1835)
!1835 = distinct !DILexicalBlock(scope: !1757, file: !170, line: 77, column: 9)
!1836 = !DILocation(line: 77, column: 9, scope: !1757)
!1837 = !DILocation(line: 80, column: 9, scope: !1835)
!1838 = !DILocation(line: 80, column: 16, scope: !1835)
!1839 = !DILocation(line: 82, column: 5, scope: !1757)
!1840 = !DILocation(line: 83, column: 1, scope: !1757)
!1841 = distinct !DISubprogram(name: "strtrim", scope: !172, file: !172, line: 33, type: !1842, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !171, retainedNodes: !1844)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{!34, !21, !199, !34}
!1844 = !{!1845, !1846, !1847, !1848, !1849, !1850}
!1845 = !DILocalVariable(name: "str", arg: 1, scope: !1841, file: !172, line: 33, type: !21)
!1846 = !DILocalVariable(name: "size", arg: 2, scope: !1841, file: !172, line: 33, type: !199)
!1847 = !DILocalVariable(name: "sides", arg: 3, scope: !1841, file: !172, line: 33, type: !34)
!1848 = !DILocalVariable(name: "i", scope: !1841, file: !172, line: 35, type: !34)
!1849 = !DILocalVariable(name: "len", scope: !1841, file: !172, line: 35, type: !34)
!1850 = !DILocalVariable(name: "tmp", scope: !1851, file: !172, line: 43, type: !21)
!1851 = distinct !DILexicalBlock(scope: !1852, file: !172, line: 42, column: 51)
!1852 = distinct !DILexicalBlock(scope: !1841, file: !172, line: 42, column: 9)
!1853 = !DILocation(line: 0, scope: !1841)
!1854 = !DILocation(line: 36, column: 11, scope: !1841)
!1855 = !DILocation(line: 37, column: 9, scope: !1856)
!1856 = distinct !DILexicalBlock(scope: !1841, file: !172, line: 37, column: 9)
!1857 = !DILocation(line: 37, column: 13, scope: !1856)
!1858 = !DILocation(line: 37, column: 9, scope: !1841)
!1859 = !DILocation(line: 39, column: 18, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1856, file: !172, line: 39, column: 14)
!1861 = !DILocation(line: 39, column: 14, scope: !1856)
!1862 = !DILocation(line: 42, column: 29, scope: !1852)
!1863 = !DILocation(line: 44, column: 23, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1865, file: !172, line: 44, column: 9)
!1865 = distinct !DILexicalBlock(scope: !1851, file: !172, line: 44, column: 9)
!1866 = !DILocation(line: 0, scope: !1851)
!1867 = !DILocation(line: 45, column: 36, scope: !1868)
!1868 = distinct !DILexicalBlock(scope: !1869, file: !172, line: 45, column: 17)
!1869 = distinct !DILexicalBlock(scope: !1864, file: !172, line: 44, column: 42)
!1870 = !DILocation(line: 45, column: 17, scope: !1868)
!1871 = !DILocation(line: 45, column: 42, scope: !1868)
!1872 = !DILocation(line: 45, column: 17, scope: !1869)
!1873 = !DILocation(line: 46, column: 38, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1868, file: !172, line: 45, column: 51)
!1875 = !DILocation(line: 46, column: 34, scope: !1874)
!1876 = !DILocation(line: 46, column: 17, scope: !1874)
!1877 = !DILocation(line: 47, column: 17, scope: !1874)
!1878 = !DILocation(line: 44, column: 31, scope: !1864)
!1879 = !DILocation(line: 44, column: 38, scope: !1864)
!1880 = !DILocation(line: 44, column: 9, scope: !1865)
!1881 = distinct !{!1881, !1880, !1882}
!1882 = !DILocation(line: 49, column: 9, scope: !1865)
!1883 = !DILocation(line: 52, column: 29, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !1841, file: !172, line: 52, column: 9)
!1885 = !DILocation(line: 0, scope: !1886)
!1886 = distinct !DILexicalBlock(scope: !1887, file: !172, line: 53, column: 9)
!1887 = distinct !DILexicalBlock(scope: !1884, file: !172, line: 52, column: 70)
!1888 = !DILocation(line: 53, column: 29, scope: !1889)
!1889 = distinct !DILexicalBlock(scope: !1886, file: !172, line: 53, column: 9)
!1890 = !DILocation(line: 53, column: 9, scope: !1886)
!1891 = !DILocation(line: 54, column: 36, scope: !1892)
!1892 = distinct !DILexicalBlock(scope: !1893, file: !172, line: 54, column: 17)
!1893 = distinct !DILexicalBlock(scope: !1889, file: !172, line: 53, column: 41)
!1894 = !DILocation(line: 54, column: 17, scope: !1892)
!1895 = !DILocation(line: 54, column: 44, scope: !1892)
!1896 = !DILocation(line: 54, column: 17, scope: !1893)
!1897 = !DILocation(line: 55, column: 17, scope: !1898)
!1898 = distinct !DILexicalBlock(scope: !1892, file: !172, line: 54, column: 53)
!1899 = !DILocation(line: 55, column: 28, scope: !1898)
!1900 = !DILocation(line: 56, column: 17, scope: !1898)
!1901 = !DILocation(line: 57, column: 26, scope: !1902)
!1902 = distinct !DILexicalBlock(scope: !1892, file: !172, line: 57, column: 24)
!1903 = !DILocation(line: 57, column: 24, scope: !1892)
!1904 = distinct !{!1904, !1890, !1905}
!1905 = !DILocation(line: 61, column: 9, scope: !1886)
!1906 = !DILocation(line: 58, column: 24, scope: !1907)
!1907 = distinct !DILexicalBlock(scope: !1902, file: !172, line: 57, column: 32)
!1908 = !DILocation(line: 59, column: 17, scope: !1907)
!1909 = !DILocation(line: 65, column: 1, scope: !1841)
!1910 = distinct !DISubprogram(name: "valid_cell_id", scope: !172, file: !172, line: 68, type: !37, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !171, retainedNodes: !1911)
!1911 = !{!1912, !1913, !1914, !1915, !1916, !1917, !1918}
!1912 = !DILocalVariable(name: "input", arg: 1, scope: !1910, file: !172, line: 68, type: !21)
!1913 = !DILocalVariable(name: "i", scope: !1910, file: !172, line: 73, type: !199)
!1914 = !DILocalVariable(name: "is_num", scope: !1910, file: !172, line: 73, type: !199)
!1915 = !DILocalVariable(name: "row", scope: !1910, file: !172, line: 74, type: !310)
!1916 = !DILocalVariable(name: "col", scope: !1910, file: !172, line: 75, type: !310)
!1917 = !DILocalVariable(name: "delim", scope: !1910, file: !172, line: 76, type: !22)
!1918 = !DILocalVariable(name: "c", scope: !1910, file: !172, line: 77, type: !22)
!1919 = !DILocation(line: 0, scope: !1910)
!1920 = !DILocation(line: 70, column: 9, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1910, file: !172, line: 70, column: 9)
!1922 = !DILocation(line: 70, column: 23, scope: !1921)
!1923 = !DILocation(line: 70, column: 9, scope: !1910)
!1924 = !DILocation(line: 77, column: 22, scope: !1910)
!1925 = !DILocation(line: 77, column: 14, scope: !1910)
!1926 = !DILocation(line: 78, column: 9, scope: !1927)
!1927 = distinct !DILexicalBlock(scope: !1910, file: !172, line: 78, column: 9)
!1928 = !DILocation(line: 78, column: 17, scope: !1927)
!1929 = !DILocation(line: 82, column: 17, scope: !1910)
!1930 = !DILocation(line: 82, column: 9, scope: !1910)
!1931 = !DILocation(line: 83, column: 11, scope: !1932)
!1932 = distinct !DILexicalBlock(scope: !1910, file: !172, line: 83, column: 9)
!1933 = !DILocation(line: 83, column: 20, scope: !1932)
!1934 = !DILocation(line: 83, column: 47, scope: !1932)
!1935 = !DILocation(line: 86, column: 18, scope: !1936)
!1936 = distinct !DILexicalBlock(scope: !1910, file: !172, line: 86, column: 9)
!1937 = !DILocation(line: 94, column: 5, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1910, file: !172, line: 94, column: 5)
!1939 = !DILocation(line: 95, column: 13, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1941, file: !172, line: 95, column: 13)
!1941 = distinct !DILexicalBlock(scope: !1942, file: !172, line: 94, column: 29)
!1942 = distinct !DILexicalBlock(scope: !1938, file: !172, line: 94, column: 5)
!1943 = !DILocation(line: 95, column: 22, scope: !1940)
!1944 = !DILocation(line: 95, column: 34, scope: !1940)
!1945 = !DILocation(line: 95, column: 31, scope: !1940)
!1946 = !DILocation(line: 99, column: 22, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1941, file: !172, line: 99, column: 13)
!1948 = !DILocation(line: 99, column: 29, scope: !1947)
!1949 = !DILocation(line: 99, column: 41, scope: !1947)
!1950 = !DILocation(line: 99, column: 58, scope: !1947)
!1951 = !DILocation(line: 99, column: 48, scope: !1947)
!1952 = !DILocation(line: 100, column: 23, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1947, file: !172, line: 99, column: 63)
!1954 = !DILocation(line: 94, column: 25, scope: !1942)
!1955 = !DILocation(line: 94, column: 19, scope: !1942)
!1956 = distinct !{!1956, !1937, !1957}
!1957 = !DILocation(line: 105, column: 5, scope: !1938)
!1958 = !DILocation(line: 108, column: 1, scope: !1910)
!1959 = distinct !DISubprogram(name: "get_rowcol", scope: !172, file: !172, line: 111, type: !40, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !171, retainedNodes: !1960)
!1960 = !{!1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1961 = !DILocalVariable(name: "input", arg: 1, scope: !1959, file: !172, line: 111, type: !21)
!1962 = !DILocalVariable(name: "row", arg: 2, scope: !1959, file: !172, line: 111, type: !21)
!1963 = !DILocalVariable(name: "col", arg: 3, scope: !1959, file: !172, line: 111, type: !21)
!1964 = !DILocalVariable(name: "delim", arg: 4, scope: !1959, file: !172, line: 111, type: !22)
!1965 = !DILocalVariable(name: "i", scope: !1959, file: !172, line: 116, type: !199)
!1966 = !DILocalVariable(name: "is_num", scope: !1959, file: !172, line: 116, type: !199)
!1967 = !DILocalVariable(name: "c", scope: !1959, file: !172, line: 117, type: !22)
!1968 = !DILocation(line: 0, scope: !1959)
!1969 = !DILocation(line: 113, column: 9, scope: !1970)
!1970 = distinct !DILexicalBlock(scope: !1959, file: !172, line: 113, column: 9)
!1971 = !DILocation(line: 113, column: 23, scope: !1970)
!1972 = !DILocation(line: 113, column: 9, scope: !1959)
!1973 = !DILocation(line: 117, column: 22, scope: !1959)
!1974 = !DILocation(line: 117, column: 14, scope: !1959)
!1975 = !DILocation(line: 118, column: 9, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1959, file: !172, line: 118, column: 9)
!1977 = !DILocation(line: 118, column: 17, scope: !1976)
!1978 = !DILocation(line: 120, column: 12, scope: !1959)
!1979 = !DILocation(line: 122, column: 17, scope: !1959)
!1980 = !DILocation(line: 122, column: 9, scope: !1959)
!1981 = !DILocation(line: 123, column: 11, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1959, file: !172, line: 123, column: 9)
!1983 = !DILocation(line: 123, column: 20, scope: !1982)
!1984 = !DILocation(line: 123, column: 47, scope: !1982)
!1985 = !DILocation(line: 126, column: 18, scope: !1986)
!1986 = distinct !DILexicalBlock(scope: !1959, file: !172, line: 126, column: 9)
!1987 = !DILocation(line: 0, scope: !1986)
!1988 = !DILocation(line: 134, column: 5, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !1959, file: !172, line: 134, column: 5)
!1990 = !DILocation(line: 135, column: 13, scope: !1991)
!1991 = distinct !DILexicalBlock(scope: !1992, file: !172, line: 135, column: 13)
!1992 = distinct !DILexicalBlock(scope: !1993, file: !172, line: 134, column: 29)
!1993 = distinct !DILexicalBlock(scope: !1989, file: !172, line: 134, column: 5)
!1994 = !DILocation(line: 135, column: 22, scope: !1991)
!1995 = !DILocation(line: 135, column: 34, scope: !1991)
!1996 = !DILocation(line: 135, column: 31, scope: !1991)
!1997 = !DILocation(line: 136, column: 13, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1991, file: !172, line: 135, column: 42)
!1999 = !DILocation(line: 136, column: 25, scope: !1998)
!2000 = !DILocation(line: 137, column: 13, scope: !1998)
!2001 = !DILocation(line: 139, column: 22, scope: !2002)
!2002 = distinct !DILexicalBlock(scope: !1992, file: !172, line: 139, column: 13)
!2003 = !DILocation(line: 139, column: 29, scope: !2002)
!2004 = !DILocation(line: 139, column: 41, scope: !2002)
!2005 = !DILocation(line: 139, column: 58, scope: !2002)
!2006 = !DILocation(line: 139, column: 48, scope: !2002)
!2007 = !DILocation(line: 140, column: 23, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !2002, file: !172, line: 139, column: 63)
!2009 = !DILocation(line: 140, column: 13, scope: !2008)
!2010 = !DILocation(line: 140, column: 27, scope: !2008)
!2011 = !DILocation(line: 134, column: 25, scope: !1993)
!2012 = !DILocation(line: 134, column: 19, scope: !1993)
!2013 = distinct !{!2013, !1988, !2014}
!2014 = !DILocation(line: 145, column: 5, scope: !1989)
!2015 = !DILocation(line: 148, column: 1, scope: !1959)
!2016 = distinct !DISubprogram(name: "sanitize_formula", scope: !172, file: !172, line: 150, type: !2017, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !171, retainedNodes: !2019)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!34, !21, !199}
!2019 = !{!2020, !2021, !2022, !2023, !2024, !2025}
!2020 = !DILocalVariable(name: "formula", arg: 1, scope: !2016, file: !172, line: 150, type: !21)
!2021 = !DILocalVariable(name: "size", arg: 2, scope: !2016, file: !172, line: 150, type: !199)
!2022 = !DILocalVariable(name: "i", scope: !2016, file: !172, line: 152, type: !199)
!2023 = !DILocalVariable(name: "j", scope: !2016, file: !172, line: 152, type: !199)
!2024 = !DILocalVariable(name: "len", scope: !2016, file: !172, line: 152, type: !199)
!2025 = !DILocalVariable(name: "sanitized", scope: !2016, file: !172, line: 157, type: !21)
!2026 = !DILocation(line: 0, scope: !2016)
!2027 = !DILocation(line: 153, column: 11, scope: !2016)
!2028 = !DILocation(line: 154, column: 13, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !2016, file: !172, line: 154, column: 9)
!2030 = !DILocation(line: 154, column: 9, scope: !2016)
!2031 = !DILocation(line: 157, column: 23, scope: !2016)
!2032 = !DILocation(line: 158, column: 19, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !2016, file: !172, line: 158, column: 9)
!2034 = !DILocation(line: 158, column: 9, scope: !2016)
!2035 = !DILocation(line: 162, column: 24, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2037, file: !172, line: 162, column: 5)
!2037 = distinct !DILexicalBlock(scope: !2016, file: !172, line: 162, column: 5)
!2038 = !DILocation(line: 162, column: 5, scope: !2037)
!2039 = !DILocation(line: 163, column: 32, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2041, file: !172, line: 163, column: 13)
!2041 = distinct !DILexicalBlock(scope: !2036, file: !172, line: 162, column: 36)
!2042 = !DILocation(line: 163, column: 13, scope: !2040)
!2043 = !DILocation(line: 163, column: 44, scope: !2040)
!2044 = !DILocation(line: 163, column: 13, scope: !2041)
!2045 = !DILocation(line: 164, column: 24, scope: !2040)
!2046 = !DILocation(line: 164, column: 13, scope: !2040)
!2047 = !DILocation(line: 164, column: 28, scope: !2040)
!2048 = !DILocation(line: 0, scope: !2037)
!2049 = !DILocation(line: 162, column: 32, scope: !2036)
!2050 = distinct !{!2050, !2038, !2051}
!2051 = !DILocation(line: 165, column: 5, scope: !2037)
!2052 = !DILocation(line: 166, column: 5, scope: !2016)
!2053 = !DILocation(line: 167, column: 5, scope: !2016)
!2054 = !DILocation(line: 168, column: 5, scope: !2016)
!2055 = !DILocation(line: 169, column: 1, scope: !2016)
!2056 = distinct !DISubprogram(name: "handle_op_avg", scope: !174, file: !174, line: 31, type: !2057, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2060)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{!23, !2059, !81}
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!2060 = !{!2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068}
!2061 = !DILocalVariable(name: "args", arg: 1, scope: !2056, file: !174, line: 31, type: !2059)
!2062 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2056, file: !174, line: 31, type: !81)
!2063 = !DILocalVariable(name: "i", scope: !2056, file: !174, line: 33, type: !199)
!2064 = !DILocalVariable(name: "result", scope: !2056, file: !174, line: 37, type: !23)
!2065 = !DILocalVariable(name: "operand", scope: !2056, file: !174, line: 37, type: !23)
!2066 = !DILocalVariable(name: "front", scope: !2056, file: !174, line: 38, type: !21)
!2067 = !DILabel(scope: !2056, name: "error", file: !174, line: 52)
!2068 = !DILabel(scope: !2056, name: "done", file: !174, line: 56)
!2069 = !DILocation(line: 0, scope: !2056)
!2070 = !DILocation(line: 34, column: 9, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !2056, file: !174, line: 34, column: 9)
!2072 = !DILocation(line: 34, column: 15, scope: !2071)
!2073 = !DILocation(line: 34, column: 9, scope: !2056)
!2074 = !DILocation(line: 38, column: 19, scope: !2056)
!2075 = !DILocation(line: 39, column: 17, scope: !2056)
!2076 = !DILocation(line: 39, column: 5, scope: !2056)
!2077 = !DILocation(line: 40, column: 31, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2056, file: !174, line: 39, column: 26)
!2079 = !DILocation(line: 40, column: 45, scope: !2078)
!2080 = !DILocation(line: 40, column: 19, scope: !2078)
!2081 = !DILocation(line: 41, column: 9, scope: !2078)
!2082 = !DILocation(line: 42, column: 12, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2078, file: !174, line: 42, column: 12)
!2084 = !DILocation(line: 42, column: 12, scope: !2078)
!2085 = !DILocation(line: 45, column: 16, scope: !2078)
!2086 = !DILocation(line: 46, column: 17, scope: !2078)
!2087 = !DILocation(line: 47, column: 10, scope: !2078)
!2088 = distinct !{!2088, !2076, !2089}
!2089 = !DILocation(line: 48, column: 5, scope: !2056)
!2090 = !DILocation(line: 52, column: 1, scope: !2056)
!2091 = !DILocation(line: 53, column: 5, scope: !2056)
!2092 = !DILocation(line: 54, column: 21, scope: !2056)
!2093 = !DILocation(line: 55, column: 2, scope: !2056)
!2094 = !DILocation(line: 33, column: 12, scope: !2056)
!2095 = !DILocation(line: 56, column: 1, scope: !2056)
!2096 = !DILocation(line: 57, column: 11, scope: !2097)
!2097 = distinct !DILexicalBlock(scope: !2056, file: !174, line: 57, column: 9)
!2098 = !DILocation(line: 57, column: 9, scope: !2056)
!2099 = !DILocation(line: 61, column: 21, scope: !2056)
!2100 = !DILocation(line: 61, column: 19, scope: !2056)
!2101 = !DILocation(line: 61, column: 5, scope: !2056)
!2102 = distinct !DISubprogram(name: "handle_op_count", scope: !174, file: !174, line: 64, type: !2057, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2103)
!2103 = !{!2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111}
!2104 = !DILocalVariable(name: "args", arg: 1, scope: !2102, file: !174, line: 64, type: !2059)
!2105 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2102, file: !174, line: 64, type: !81)
!2106 = !DILocalVariable(name: "i", scope: !2102, file: !174, line: 66, type: !199)
!2107 = !DILocalVariable(name: "result", scope: !2102, file: !174, line: 70, type: !23)
!2108 = !DILocalVariable(name: "operand", scope: !2102, file: !174, line: 70, type: !23)
!2109 = !DILocalVariable(name: "front", scope: !2102, file: !174, line: 71, type: !21)
!2110 = !DILabel(scope: !2102, name: "error", file: !174, line: 85)
!2111 = !DILabel(scope: !2102, name: "done", file: !174, line: 89)
!2112 = !DILocation(line: 0, scope: !2102)
!2113 = !DILocation(line: 67, column: 9, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !2102, file: !174, line: 67, column: 9)
!2115 = !DILocation(line: 67, column: 15, scope: !2114)
!2116 = !DILocation(line: 67, column: 9, scope: !2102)
!2117 = !DILocation(line: 71, column: 19, scope: !2102)
!2118 = !DILocation(line: 72, column: 17, scope: !2102)
!2119 = !DILocation(line: 72, column: 5, scope: !2102)
!2120 = !DILocation(line: 73, column: 31, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !2102, file: !174, line: 72, column: 26)
!2122 = !DILocation(line: 73, column: 45, scope: !2121)
!2123 = !DILocation(line: 73, column: 19, scope: !2121)
!2124 = !DILocation(line: 74, column: 9, scope: !2121)
!2125 = !DILocation(line: 75, column: 12, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2121, file: !174, line: 75, column: 12)
!2127 = !DILocation(line: 75, column: 12, scope: !2121)
!2128 = !DILocation(line: 78, column: 17, scope: !2121)
!2129 = !DILocation(line: 79, column: 10, scope: !2121)
!2130 = distinct !{!2130, !2119, !2131}
!2131 = !DILocation(line: 80, column: 5, scope: !2102)
!2132 = !DILocation(line: 82, column: 14, scope: !2102)
!2133 = !DILocation(line: 83, column: 5, scope: !2102)
!2134 = !DILocation(line: 85, column: 1, scope: !2102)
!2135 = !DILocation(line: 86, column: 5, scope: !2102)
!2136 = !DILocation(line: 87, column: 21, scope: !2102)
!2137 = !DILocation(line: 88, column: 2, scope: !2102)
!2138 = !DILocation(line: 66, column: 12, scope: !2102)
!2139 = !DILocation(line: 89, column: 1, scope: !2102)
!2140 = !DILocation(line: 90, column: 11, scope: !2141)
!2141 = distinct !DILexicalBlock(scope: !2102, file: !174, line: 90, column: 9)
!2142 = !DILocation(line: 90, column: 9, scope: !2102)
!2143 = !DILocation(line: 94, column: 5, scope: !2102)
!2144 = distinct !DISubprogram(name: "handle_op_max", scope: !174, file: !174, line: 97, type: !2057, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2145)
!2145 = !{!2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153}
!2146 = !DILocalVariable(name: "args", arg: 1, scope: !2144, file: !174, line: 97, type: !2059)
!2147 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2144, file: !174, line: 97, type: !81)
!2148 = !DILocalVariable(name: "i", scope: !2144, file: !174, line: 99, type: !199)
!2149 = !DILocalVariable(name: "max", scope: !2144, file: !174, line: 100, type: !23)
!2150 = !DILocalVariable(name: "operand", scope: !2144, file: !174, line: 104, type: !23)
!2151 = !DILocalVariable(name: "front", scope: !2144, file: !174, line: 105, type: !21)
!2152 = !DILabel(scope: !2144, name: "error", file: !174, line: 130)
!2153 = !DILabel(scope: !2144, name: "done", file: !174, line: 134)
!2154 = !DILocation(line: 0, scope: !2144)
!2155 = !DILocation(line: 101, column: 9, scope: !2156)
!2156 = distinct !DILexicalBlock(scope: !2144, file: !174, line: 101, column: 9)
!2157 = !DILocation(line: 101, column: 15, scope: !2156)
!2158 = !DILocation(line: 101, column: 9, scope: !2144)
!2159 = !DILocation(line: 105, column: 19, scope: !2144)
!2160 = !DILocation(line: 106, column: 15, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2144, file: !174, line: 106, column: 9)
!2162 = !DILocation(line: 106, column: 9, scope: !2144)
!2163 = !DILocation(line: 107, column: 27, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2161, file: !174, line: 106, column: 24)
!2165 = !DILocation(line: 107, column: 41, scope: !2164)
!2166 = !DILocation(line: 107, column: 15, scope: !2164)
!2167 = !DILocation(line: 108, column: 9, scope: !2164)
!2168 = !DILocation(line: 109, column: 13, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2164, file: !174, line: 109, column: 13)
!2170 = !DILocation(line: 109, column: 13, scope: !2164)
!2171 = !DILocation(line: 114, column: 13, scope: !2144)
!2172 = !DILocation(line: 115, column: 17, scope: !2144)
!2173 = !DILocation(line: 115, column: 5, scope: !2144)
!2174 = !DILocation(line: 116, column: 31, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2144, file: !174, line: 115, column: 26)
!2176 = !DILocation(line: 116, column: 45, scope: !2175)
!2177 = !DILocation(line: 116, column: 19, scope: !2175)
!2178 = !DILocation(line: 117, column: 9, scope: !2175)
!2179 = !DILocation(line: 118, column: 12, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !2175, file: !174, line: 118, column: 12)
!2181 = !DILocation(line: 118, column: 12, scope: !2175)
!2182 = !DILocation(line: 121, column: 21, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2175, file: !174, line: 121, column: 13)
!2184 = !DILocation(line: 121, column: 13, scope: !2175)
!2185 = !DILocation(line: 124, column: 17, scope: !2175)
!2186 = !DILocation(line: 125, column: 10, scope: !2175)
!2187 = distinct !{!2187, !2173, !2188}
!2188 = !DILocation(line: 126, column: 5, scope: !2144)
!2189 = !DILocation(line: 130, column: 1, scope: !2144)
!2190 = !DILocation(line: 131, column: 5, scope: !2144)
!2191 = !DILocation(line: 132, column: 21, scope: !2144)
!2192 = !DILocation(line: 133, column: 5, scope: !2144)
!2193 = !DILocation(line: 134, column: 1, scope: !2144)
!2194 = !DILocation(line: 135, column: 11, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2144, file: !174, line: 135, column: 9)
!2196 = !DILocation(line: 135, column: 9, scope: !2144)
!2197 = !DILocation(line: 139, column: 2, scope: !2144)
!2198 = distinct !DISubprogram(name: "handle_op_median", scope: !174, file: !174, line: 142, type: !2057, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2199)
!2199 = !{!2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2212, !2213, !2214, !2215, !2216}
!2200 = !DILocalVariable(name: "args", arg: 1, scope: !2198, file: !174, line: 142, type: !2059)
!2201 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2198, file: !174, line: 142, type: !81)
!2202 = !DILocalVariable(name: "i", scope: !2198, file: !174, line: 144, type: !199)
!2203 = !DILocalVariable(name: "sorted", scope: !2198, file: !174, line: 145, type: !185)
!2204 = !DILocalVariable(name: "tmp", scope: !2198, file: !174, line: 145, type: !185)
!2205 = !DILocalVariable(name: "prev", scope: !2198, file: !174, line: 145, type: !185)
!2206 = !DILocalVariable(name: "median", scope: !2198, file: !174, line: 153, type: !23)
!2207 = !DILocalVariable(name: "operand", scope: !2198, file: !174, line: 153, type: !23)
!2208 = !DILocalVariable(name: "temp", scope: !2198, file: !174, line: 153, type: !23)
!2209 = !DILocalVariable(name: "front", scope: !2198, file: !174, line: 154, type: !21)
!2210 = !DILocalVariable(name: "passed_first", scope: !2211, file: !174, line: 173, type: !34)
!2211 = distinct !DILexicalBlock(scope: !2198, file: !174, line: 166, column: 26)
!2212 = !DILocalVariable(name: "is_inserted", scope: !2211, file: !174, line: 173, type: !34)
!2213 = !DILocalVariable(name: "elem", scope: !2211, file: !174, line: 174, type: !185)
!2214 = !DILocalVariable(name: "j", scope: !2198, file: !174, line: 210, type: !34)
!2215 = !DILabel(scope: !2198, name: "error", file: !174, line: 229)
!2216 = !DILabel(scope: !2198, name: "done", file: !174, line: 233)
!2217 = !DILocation(line: 0, scope: !2198)
!2218 = !DILocation(line: 145, column: 5, scope: !2198)
!2219 = !DILocation(line: 149, column: 9, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2198, file: !174, line: 149, column: 9)
!2221 = !DILocation(line: 149, column: 15, scope: !2220)
!2222 = !DILocation(line: 149, column: 9, scope: !2198)
!2223 = !DILocation(line: 151, column: 12, scope: !2198)
!2224 = !DILocation(line: 154, column: 19, scope: !2198)
!2225 = !DILocation(line: 156, column: 27, scope: !2198)
!2226 = !DILocation(line: 156, column: 41, scope: !2198)
!2227 = !DILocation(line: 156, column: 15, scope: !2198)
!2228 = !DILocation(line: 157, column: 8, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2198, file: !174, line: 157, column: 8)
!2230 = !DILocation(line: 157, column: 8, scope: !2198)
!2231 = !DILocation(line: 158, column: 9, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2229, file: !174, line: 157, column: 25)
!2233 = !DILocation(line: 159, column: 9, scope: !2232)
!2234 = !DILocation(line: 161, column: 9, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2229, file: !174, line: 160, column: 12)
!2236 = !DILocation(line: 165, column: 13, scope: !2198)
!2237 = !DILocation(line: 166, column: 17, scope: !2198)
!2238 = !DILocation(line: 166, column: 5, scope: !2198)
!2239 = !DILocation(line: 167, column: 31, scope: !2211)
!2240 = !DILocation(line: 167, column: 45, scope: !2211)
!2241 = !DILocation(line: 167, column: 19, scope: !2211)
!2242 = !DILocation(line: 168, column: 12, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2211, file: !174, line: 168, column: 12)
!2244 = !DILocation(line: 168, column: 12, scope: !2211)
!2245 = !DILocation(line: 0, scope: !2211)
!2246 = !DILocation(line: 175, column: 20, scope: !2211)
!2247 = !DILocation(line: 175, column: 9, scope: !2211)
!2248 = !DILocation(line: 176, column: 30, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2211, file: !174, line: 175, column: 29)
!2250 = !DILocation(line: 176, column: 36, scope: !2249)
!2251 = !DILocation(line: 176, column: 54, scope: !2249)
!2252 = !DILocation(line: 176, column: 20, scope: !2249)
!2253 = !DILocation(line: 177, column: 25, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2249, file: !174, line: 177, column: 17)
!2255 = !DILocation(line: 177, column: 17, scope: !2249)
!2256 = distinct !{!2256, !2247, !2257}
!2257 = !DILocation(line: 193, column: 9, scope: !2211)
!2258 = !DILocation(line: 178, column: 21, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2254, file: !174, line: 177, column: 34)
!2260 = !DILocation(line: 179, column: 21, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2262, file: !174, line: 178, column: 36)
!2262 = distinct !DILexicalBlock(scope: !2259, file: !174, line: 178, column: 21)
!2263 = !DILocation(line: 180, column: 17, scope: !2261)
!2264 = !DILocation(line: 181, column: 28, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2262, file: !174, line: 180, column: 24)
!2266 = !DILocation(line: 182, column: 27, scope: !2265)
!2267 = !DILocation(line: 182, column: 32, scope: !2265)
!2268 = !DILocation(line: 183, column: 27, scope: !2265)
!2269 = !DILocation(line: 183, column: 32, scope: !2265)
!2270 = !DILocation(line: 184, column: 27, scope: !2265)
!2271 = !DILocation(line: 184, column: 32, scope: !2265)
!2272 = !DILocation(line: 190, column: 28, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2254, file: !174, line: 188, column: 20)
!2274 = !DILocation(line: 195, column: 19, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2276, file: !174, line: 194, column: 27)
!2276 = distinct !DILexicalBlock(scope: !2211, file: !174, line: 194, column: 13)
!2277 = !DILocation(line: 196, column: 13, scope: !2275)
!2278 = !DILocation(line: 0, scope: !2275)
!2279 = !DILocation(line: 196, column: 25, scope: !2275)
!2280 = !DILocation(line: 196, column: 30, scope: !2275)
!2281 = distinct !{!2281, !2277, !2282}
!2282 = !DILocation(line: 197, column: 28, scope: !2275)
!2283 = !DILocation(line: 199, column: 20, scope: !2275)
!2284 = !DILocation(line: 200, column: 19, scope: !2275)
!2285 = !DILocation(line: 200, column: 24, scope: !2275)
!2286 = !DILocation(line: 201, column: 19, scope: !2275)
!2287 = !DILocation(line: 201, column: 24, scope: !2275)
!2288 = !DILocation(line: 202, column: 23, scope: !2275)
!2289 = !DILocation(line: 203, column: 9, scope: !2275)
!2290 = !DILocation(line: 205, column: 17, scope: !2211)
!2291 = !DILocation(line: 206, column: 10, scope: !2211)
!2292 = distinct !{!2292, !2238, !2293}
!2293 = !DILocation(line: 207, column: 5, scope: !2198)
!2294 = !DILocation(line: 209, column: 11, scope: !2198)
!2295 = !DILocation(line: 211, column: 11, scope: !2296)
!2296 = distinct !DILexicalBlock(scope: !2198, file: !174, line: 211, column: 9)
!2297 = !DILocation(line: 211, column: 15, scope: !2296)
!2298 = !DILocation(line: 0, scope: !2296)
!2299 = !DILocation(line: 211, column: 9, scope: !2198)
!2300 = !DILocation(line: 221, column: 22, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2302, file: !174, line: 221, column: 9)
!2302 = distinct !DILexicalBlock(scope: !2303, file: !174, line: 221, column: 9)
!2303 = distinct !DILexicalBlock(scope: !2296, file: !174, line: 220, column: 12)
!2304 = !DILocation(line: 221, column: 9, scope: !2302)
!2305 = !DILocation(line: 212, column: 32, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2307, file: !174, line: 212, column: 9)
!2307 = distinct !DILexicalBlock(scope: !2308, file: !174, line: 212, column: 9)
!2308 = distinct !DILexicalBlock(scope: !2296, file: !174, line: 211, column: 21)
!2309 = !DILocation(line: 212, column: 22, scope: !2306)
!2310 = !DILocation(line: 212, column: 9, scope: !2307)
!2311 = !DILocation(line: 213, column: 24, scope: !2306)
!2312 = !DILocation(line: 212, column: 38, scope: !2306)
!2313 = distinct !{!2313, !2310, !2314}
!2314 = !DILocation(line: 213, column: 24, scope: !2307)
!2315 = !DILocation(line: 215, column: 29, scope: !2308)
!2316 = !DILocation(line: 215, column: 35, scope: !2308)
!2317 = !DILocation(line: 215, column: 53, scope: !2308)
!2318 = !DILocation(line: 215, column: 19, scope: !2308)
!2319 = !DILocation(line: 215, column: 16, scope: !2308)
!2320 = !DILocation(line: 216, column: 20, scope: !2308)
!2321 = !DILocation(line: 217, column: 29, scope: !2308)
!2322 = !DILocation(line: 217, column: 35, scope: !2308)
!2323 = !DILocation(line: 217, column: 53, scope: !2308)
!2324 = !DILocation(line: 217, column: 19, scope: !2308)
!2325 = !DILocation(line: 217, column: 16, scope: !2308)
!2326 = !DILocation(line: 219, column: 16, scope: !2308)
!2327 = !DILocation(line: 220, column: 5, scope: !2308)
!2328 = !DILocation(line: 222, column: 24, scope: !2301)
!2329 = !DILocation(line: 221, column: 34, scope: !2301)
!2330 = distinct !{!2330, !2304, !2331}
!2331 = !DILocation(line: 222, column: 24, scope: !2302)
!2332 = !DILocation(line: 224, column: 29, scope: !2303)
!2333 = !DILocation(line: 224, column: 35, scope: !2303)
!2334 = !DILocation(line: 224, column: 53, scope: !2303)
!2335 = !DILocation(line: 224, column: 19, scope: !2303)
!2336 = !DILocation(line: 224, column: 16, scope: !2303)
!2337 = !DILocation(line: 229, column: 1, scope: !2198)
!2338 = !DILocation(line: 230, column: 5, scope: !2198)
!2339 = !DILocation(line: 231, column: 21, scope: !2198)
!2340 = !DILocation(line: 232, column: 5, scope: !2198)
!2341 = !DILocation(line: 233, column: 1, scope: !2198)
!2342 = !DILocation(line: 234, column: 11, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2198, file: !174, line: 234, column: 9)
!2344 = !DILocation(line: 234, column: 9, scope: !2198)
!2345 = !DILocation(line: 238, column: 5, scope: !2198)
!2346 = !DILocation(line: 240, column: 1, scope: !2198)
!2347 = !DILocation(line: 239, column: 2, scope: !2198)
!2348 = distinct !DISubprogram(name: "handle_op_min", scope: !174, file: !174, line: 242, type: !2057, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2349)
!2349 = !{!2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357}
!2350 = !DILocalVariable(name: "args", arg: 1, scope: !2348, file: !174, line: 242, type: !2059)
!2351 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2348, file: !174, line: 242, type: !81)
!2352 = !DILocalVariable(name: "i", scope: !2348, file: !174, line: 244, type: !199)
!2353 = !DILocalVariable(name: "min", scope: !2348, file: !174, line: 245, type: !23)
!2354 = !DILocalVariable(name: "operand", scope: !2348, file: !174, line: 249, type: !23)
!2355 = !DILocalVariable(name: "front", scope: !2348, file: !174, line: 250, type: !21)
!2356 = !DILabel(scope: !2348, name: "error", file: !174, line: 275)
!2357 = !DILabel(scope: !2348, name: "done", file: !174, line: 279)
!2358 = !DILocation(line: 0, scope: !2348)
!2359 = !DILocation(line: 246, column: 9, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2348, file: !174, line: 246, column: 9)
!2361 = !DILocation(line: 246, column: 15, scope: !2360)
!2362 = !DILocation(line: 246, column: 9, scope: !2348)
!2363 = !DILocation(line: 250, column: 19, scope: !2348)
!2364 = !DILocation(line: 251, column: 15, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2348, file: !174, line: 251, column: 9)
!2366 = !DILocation(line: 251, column: 9, scope: !2348)
!2367 = !DILocation(line: 252, column: 27, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2365, file: !174, line: 251, column: 24)
!2369 = !DILocation(line: 252, column: 41, scope: !2368)
!2370 = !DILocation(line: 252, column: 15, scope: !2368)
!2371 = !DILocation(line: 253, column: 9, scope: !2368)
!2372 = !DILocation(line: 254, column: 13, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2368, file: !174, line: 254, column: 13)
!2374 = !DILocation(line: 254, column: 13, scope: !2368)
!2375 = !DILocation(line: 259, column: 13, scope: !2348)
!2376 = !DILocation(line: 260, column: 17, scope: !2348)
!2377 = !DILocation(line: 260, column: 5, scope: !2348)
!2378 = !DILocation(line: 261, column: 31, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2348, file: !174, line: 260, column: 26)
!2380 = !DILocation(line: 261, column: 45, scope: !2379)
!2381 = !DILocation(line: 261, column: 19, scope: !2379)
!2382 = !DILocation(line: 262, column: 9, scope: !2379)
!2383 = !DILocation(line: 263, column: 12, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2379, file: !174, line: 263, column: 12)
!2385 = !DILocation(line: 263, column: 12, scope: !2379)
!2386 = !DILocation(line: 266, column: 21, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2379, file: !174, line: 266, column: 13)
!2388 = !DILocation(line: 266, column: 13, scope: !2379)
!2389 = !DILocation(line: 269, column: 17, scope: !2379)
!2390 = !DILocation(line: 270, column: 10, scope: !2379)
!2391 = distinct !{!2391, !2377, !2392}
!2392 = !DILocation(line: 271, column: 5, scope: !2348)
!2393 = !DILocation(line: 275, column: 1, scope: !2348)
!2394 = !DILocation(line: 276, column: 5, scope: !2348)
!2395 = !DILocation(line: 277, column: 21, scope: !2348)
!2396 = !DILocation(line: 278, column: 5, scope: !2348)
!2397 = !DILocation(line: 279, column: 1, scope: !2348)
!2398 = !DILocation(line: 280, column: 11, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2348, file: !174, line: 280, column: 9)
!2400 = !DILocation(line: 280, column: 9, scope: !2348)
!2401 = !DILocation(line: 284, column: 2, scope: !2348)
!2402 = distinct !DISubprogram(name: "handle_op_stddev", scope: !174, file: !174, line: 287, type: !2057, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2403)
!2403 = !{!2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413}
!2404 = !DILocalVariable(name: "args", arg: 1, scope: !2402, file: !174, line: 287, type: !2059)
!2405 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2402, file: !174, line: 287, type: !81)
!2406 = !DILocalVariable(name: "i", scope: !2402, file: !174, line: 289, type: !199)
!2407 = !DILocalVariable(name: "result", scope: !2402, file: !174, line: 293, type: !23)
!2408 = !DILocalVariable(name: "operand", scope: !2402, file: !174, line: 293, type: !23)
!2409 = !DILocalVariable(name: "mean", scope: !2402, file: !174, line: 293, type: !23)
!2410 = !DILocalVariable(name: "tmp", scope: !2402, file: !174, line: 294, type: !185)
!2411 = !DILocalVariable(name: "front", scope: !2402, file: !174, line: 310, type: !21)
!2412 = !DILabel(scope: !2402, name: "error", file: !174, line: 324)
!2413 = !DILabel(scope: !2402, name: "done", file: !174, line: 328)
!2414 = !DILocation(line: 0, scope: !2402)
!2415 = !DILocation(line: 290, column: 9, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2402, file: !174, line: 290, column: 9)
!2417 = !DILocation(line: 290, column: 15, scope: !2416)
!2418 = !DILocation(line: 290, column: 9, scope: !2402)
!2419 = !DILocation(line: 297, column: 29, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2402, file: !174, line: 296, column: 25)
!2421 = !DILocation(line: 297, column: 35, scope: !2420)
!2422 = !DILocation(line: 297, column: 53, scope: !2420)
!2423 = !DILocation(line: 297, column: 19, scope: !2420)
!2424 = !DILocation(line: 298, column: 12, scope: !2425)
!2425 = distinct !DILexicalBlock(scope: !2420, file: !174, line: 298, column: 12)
!2426 = !DILocation(line: 298, column: 12, scope: !2420)
!2427 = !DILocation(line: 301, column: 14, scope: !2420)
!2428 = !DILocation(line: 302, column: 10, scope: !2420)
!2429 = !DILocation(line: 303, column: 20, scope: !2420)
!2430 = !DILocation(line: 296, column: 16, scope: !2402)
!2431 = !DILocation(line: 296, column: 5, scope: !2402)
!2432 = distinct !{!2432, !2431, !2433}
!2433 = !DILocation(line: 304, column: 5, scope: !2402)
!2434 = !DILocation(line: 305, column: 11, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2402, file: !174, line: 305, column: 9)
!2436 = !DILocation(line: 305, column: 9, scope: !2402)
!2437 = !DILocation(line: 307, column: 13, scope: !2402)
!2438 = !DILocation(line: 307, column: 10, scope: !2402)
!2439 = !DILocation(line: 310, column: 19, scope: !2402)
!2440 = !DILocation(line: 311, column: 17, scope: !2402)
!2441 = !DILocation(line: 311, column: 5, scope: !2402)
!2442 = !DILocation(line: 312, column: 31, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2402, file: !174, line: 311, column: 26)
!2444 = !DILocation(line: 312, column: 45, scope: !2443)
!2445 = !DILocation(line: 312, column: 19, scope: !2443)
!2446 = !DILocation(line: 313, column: 9, scope: !2443)
!2447 = !DILocation(line: 317, column: 29, scope: !2443)
!2448 = !DILocation(line: 317, column: 37, scope: !2443)
!2449 = !DILocation(line: 317, column: 16, scope: !2443)
!2450 = !DILocation(line: 318, column: 17, scope: !2443)
!2451 = !DILocation(line: 319, column: 10, scope: !2443)
!2452 = distinct !{!2452, !2441, !2453}
!2453 = !DILocation(line: 320, column: 5, scope: !2402)
!2454 = !DILocation(line: 324, column: 1, scope: !2402)
!2455 = !DILocation(line: 325, column: 5, scope: !2402)
!2456 = !DILocation(line: 326, column: 21, scope: !2402)
!2457 = !DILocation(line: 327, column: 2, scope: !2402)
!2458 = !DILocation(line: 328, column: 1, scope: !2402)
!2459 = !DILocation(line: 329, column: 11, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2402, file: !174, line: 329, column: 9)
!2461 = !DILocation(line: 329, column: 9, scope: !2402)
!2462 = !DILocation(line: 333, column: 26, scope: !2402)
!2463 = !DILocation(line: 333, column: 24, scope: !2402)
!2464 = !DILocation(line: 333, column: 12, scope: !2402)
!2465 = !DILocation(line: 333, column: 5, scope: !2402)
!2466 = distinct !DISubprogram(name: "handle_op_abs", scope: !174, file: !174, line: 336, type: !2057, scopeLine: 337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2467)
!2467 = !{!2468, !2469, !2470, !2471, !2472, !2473, !2474}
!2468 = !DILocalVariable(name: "args", arg: 1, scope: !2466, file: !174, line: 336, type: !2059)
!2469 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2466, file: !174, line: 336, type: !81)
!2470 = !DILocalVariable(name: "result", scope: !2466, file: !174, line: 341, type: !23)
!2471 = !DILocalVariable(name: "operand1", scope: !2466, file: !174, line: 341, type: !23)
!2472 = !DILocalVariable(name: "front", scope: !2466, file: !174, line: 342, type: !21)
!2473 = !DILabel(scope: !2466, name: "error", file: !174, line: 359)
!2474 = !DILabel(scope: !2466, name: "done", file: !174, line: 363)
!2475 = !DILocation(line: 0, scope: !2466)
!2476 = !DILocation(line: 338, column: 9, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2466, file: !174, line: 338, column: 9)
!2478 = !DILocation(line: 338, column: 15, scope: !2477)
!2479 = !DILocation(line: 338, column: 9, scope: !2466)
!2480 = !DILocation(line: 345, column: 13, scope: !2466)
!2481 = !DILocation(line: 346, column: 15, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2466, file: !174, line: 346, column: 9)
!2483 = !DILocation(line: 346, column: 9, scope: !2466)
!2484 = !DILocation(line: 348, column: 28, scope: !2466)
!2485 = !DILocation(line: 348, column: 42, scope: !2466)
!2486 = !DILocation(line: 348, column: 16, scope: !2466)
!2487 = !DILocation(line: 349, column: 5, scope: !2466)
!2488 = !DILocation(line: 350, column: 8, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2466, file: !174, line: 350, column: 8)
!2490 = !DILocation(line: 350, column: 8, scope: !2466)
!2491 = !DILocation(line: 353, column: 9, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2466, file: !174, line: 353, column: 9)
!2493 = !DILocation(line: 353, column: 15, scope: !2492)
!2494 = !DILocation(line: 353, column: 9, scope: !2466)
!2495 = !DILocation(line: 356, column: 14, scope: !2466)
!2496 = !DILocation(line: 357, column: 5, scope: !2466)
!2497 = !DILocation(line: 359, column: 1, scope: !2466)
!2498 = !DILocation(line: 360, column: 5, scope: !2466)
!2499 = !DILocation(line: 361, column: 21, scope: !2466)
!2500 = !DILocation(line: 362, column: 2, scope: !2466)
!2501 = !DILocation(line: 363, column: 1, scope: !2466)
!2502 = !DILocation(line: 364, column: 5, scope: !2466)
!2503 = distinct !DISubprogram(name: "handle_op_add", scope: !174, file: !174, line: 367, type: !2057, scopeLine: 368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2504)
!2504 = !{!2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512}
!2505 = !DILocalVariable(name: "args", arg: 1, scope: !2503, file: !174, line: 367, type: !2059)
!2506 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2503, file: !174, line: 367, type: !81)
!2507 = !DILocalVariable(name: "result", scope: !2503, file: !174, line: 372, type: !23)
!2508 = !DILocalVariable(name: "operand1", scope: !2503, file: !174, line: 372, type: !23)
!2509 = !DILocalVariable(name: "operand2", scope: !2503, file: !174, line: 372, type: !23)
!2510 = !DILocalVariable(name: "front", scope: !2503, file: !174, line: 373, type: !21)
!2511 = !DILabel(scope: !2503, name: "error", file: !174, line: 399)
!2512 = !DILabel(scope: !2503, name: "done", file: !174, line: 403)
!2513 = !DILocation(line: 0, scope: !2503)
!2514 = !DILocation(line: 369, column: 9, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !2503, file: !174, line: 369, column: 9)
!2516 = !DILocation(line: 369, column: 15, scope: !2515)
!2517 = !DILocation(line: 369, column: 9, scope: !2503)
!2518 = !DILocation(line: 376, column: 13, scope: !2503)
!2519 = !DILocation(line: 377, column: 15, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2503, file: !174, line: 377, column: 9)
!2521 = !DILocation(line: 377, column: 9, scope: !2503)
!2522 = !DILocation(line: 379, column: 28, scope: !2503)
!2523 = !DILocation(line: 379, column: 42, scope: !2503)
!2524 = !DILocation(line: 379, column: 16, scope: !2503)
!2525 = !DILocation(line: 380, column: 5, scope: !2503)
!2526 = !DILocation(line: 381, column: 8, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2503, file: !174, line: 381, column: 8)
!2528 = !DILocation(line: 381, column: 8, scope: !2503)
!2529 = !DILocation(line: 385, column: 13, scope: !2503)
!2530 = !DILocation(line: 386, column: 15, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2503, file: !174, line: 386, column: 9)
!2532 = !DILocation(line: 386, column: 9, scope: !2503)
!2533 = !DILocation(line: 388, column: 28, scope: !2503)
!2534 = !DILocation(line: 388, column: 42, scope: !2503)
!2535 = !DILocation(line: 388, column: 16, scope: !2503)
!2536 = !DILocation(line: 389, column: 5, scope: !2503)
!2537 = !DILocation(line: 390, column: 8, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2503, file: !174, line: 390, column: 8)
!2539 = !DILocation(line: 390, column: 8, scope: !2503)
!2540 = !DILocation(line: 393, column: 9, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2503, file: !174, line: 393, column: 9)
!2542 = !DILocation(line: 393, column: 15, scope: !2541)
!2543 = !DILocation(line: 393, column: 9, scope: !2503)
!2544 = !DILocation(line: 396, column: 23, scope: !2503)
!2545 = !DILocation(line: 397, column: 5, scope: !2503)
!2546 = !DILocation(line: 399, column: 1, scope: !2503)
!2547 = !DILocation(line: 400, column: 5, scope: !2503)
!2548 = !DILocation(line: 401, column: 21, scope: !2503)
!2549 = !DILocation(line: 402, column: 2, scope: !2503)
!2550 = !DILocation(line: 403, column: 1, scope: !2503)
!2551 = !DILocation(line: 404, column: 5, scope: !2503)
!2552 = distinct !DISubprogram(name: "handle_op_cos", scope: !174, file: !174, line: 407, type: !2057, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2553)
!2553 = !{!2554, !2555, !2556, !2557, !2558, !2559, !2560}
!2554 = !DILocalVariable(name: "args", arg: 1, scope: !2552, file: !174, line: 407, type: !2059)
!2555 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2552, file: !174, line: 407, type: !81)
!2556 = !DILocalVariable(name: "result", scope: !2552, file: !174, line: 412, type: !23)
!2557 = !DILocalVariable(name: "operand1", scope: !2552, file: !174, line: 412, type: !23)
!2558 = !DILocalVariable(name: "front", scope: !2552, file: !174, line: 413, type: !21)
!2559 = !DILabel(scope: !2552, name: "error", file: !174, line: 430)
!2560 = !DILabel(scope: !2552, name: "done", file: !174, line: 434)
!2561 = !DILocation(line: 0, scope: !2552)
!2562 = !DILocation(line: 409, column: 9, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2552, file: !174, line: 409, column: 9)
!2564 = !DILocation(line: 409, column: 15, scope: !2563)
!2565 = !DILocation(line: 409, column: 9, scope: !2552)
!2566 = !DILocation(line: 416, column: 13, scope: !2552)
!2567 = !DILocation(line: 417, column: 15, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2552, file: !174, line: 417, column: 9)
!2569 = !DILocation(line: 417, column: 9, scope: !2552)
!2570 = !DILocation(line: 419, column: 28, scope: !2552)
!2571 = !DILocation(line: 419, column: 42, scope: !2552)
!2572 = !DILocation(line: 419, column: 16, scope: !2552)
!2573 = !DILocation(line: 420, column: 5, scope: !2552)
!2574 = !DILocation(line: 421, column: 8, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2552, file: !174, line: 421, column: 8)
!2576 = !DILocation(line: 421, column: 8, scope: !2552)
!2577 = !DILocation(line: 424, column: 9, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2552, file: !174, line: 424, column: 9)
!2579 = !DILocation(line: 424, column: 15, scope: !2578)
!2580 = !DILocation(line: 424, column: 9, scope: !2552)
!2581 = !DILocation(line: 427, column: 14, scope: !2552)
!2582 = !DILocation(line: 428, column: 5, scope: !2552)
!2583 = !DILocation(line: 430, column: 1, scope: !2552)
!2584 = !DILocation(line: 431, column: 5, scope: !2552)
!2585 = !DILocation(line: 432, column: 21, scope: !2552)
!2586 = !DILocation(line: 433, column: 2, scope: !2552)
!2587 = !DILocation(line: 434, column: 1, scope: !2552)
!2588 = !DILocation(line: 435, column: 5, scope: !2552)
!2589 = distinct !DISubprogram(name: "handle_op_ln", scope: !174, file: !174, line: 438, type: !2057, scopeLine: 439, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2590)
!2590 = !{!2591, !2592, !2593, !2594, !2595, !2596, !2597}
!2591 = !DILocalVariable(name: "args", arg: 1, scope: !2589, file: !174, line: 438, type: !2059)
!2592 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2589, file: !174, line: 438, type: !81)
!2593 = !DILocalVariable(name: "result", scope: !2589, file: !174, line: 443, type: !23)
!2594 = !DILocalVariable(name: "operand1", scope: !2589, file: !174, line: 443, type: !23)
!2595 = !DILocalVariable(name: "front", scope: !2589, file: !174, line: 444, type: !21)
!2596 = !DILabel(scope: !2589, name: "error", file: !174, line: 464)
!2597 = !DILabel(scope: !2589, name: "done", file: !174, line: 468)
!2598 = !DILocation(line: 0, scope: !2589)
!2599 = !DILocation(line: 440, column: 9, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2589, file: !174, line: 440, column: 9)
!2601 = !DILocation(line: 440, column: 15, scope: !2600)
!2602 = !DILocation(line: 440, column: 9, scope: !2589)
!2603 = !DILocation(line: 447, column: 13, scope: !2589)
!2604 = !DILocation(line: 448, column: 15, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2589, file: !174, line: 448, column: 9)
!2606 = !DILocation(line: 448, column: 9, scope: !2589)
!2607 = !DILocation(line: 450, column: 28, scope: !2589)
!2608 = !DILocation(line: 450, column: 42, scope: !2589)
!2609 = !DILocation(line: 450, column: 16, scope: !2589)
!2610 = !DILocation(line: 451, column: 5, scope: !2589)
!2611 = !DILocation(line: 452, column: 8, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2589, file: !174, line: 452, column: 8)
!2613 = !DILocation(line: 452, column: 8, scope: !2589)
!2614 = !DILocation(line: 455, column: 9, scope: !2615)
!2615 = distinct !DILexicalBlock(scope: !2589, file: !174, line: 455, column: 9)
!2616 = !DILocation(line: 455, column: 15, scope: !2615)
!2617 = !DILocation(line: 458, column: 18, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2589, file: !174, line: 458, column: 9)
!2619 = !DILocation(line: 455, column: 9, scope: !2589)
!2620 = !DILocation(line: 461, column: 14, scope: !2589)
!2621 = !DILocation(line: 462, column: 5, scope: !2589)
!2622 = !DILocation(line: 464, column: 1, scope: !2589)
!2623 = !DILocation(line: 465, column: 5, scope: !2589)
!2624 = !DILocation(line: 466, column: 21, scope: !2589)
!2625 = !DILocation(line: 467, column: 2, scope: !2589)
!2626 = !DILocation(line: 468, column: 1, scope: !2589)
!2627 = !DILocation(line: 469, column: 5, scope: !2589)
!2628 = distinct !DISubprogram(name: "handle_op_log10", scope: !174, file: !174, line: 472, type: !2057, scopeLine: 473, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2629)
!2629 = !{!2630, !2631, !2632, !2633, !2634, !2635, !2636}
!2630 = !DILocalVariable(name: "args", arg: 1, scope: !2628, file: !174, line: 472, type: !2059)
!2631 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2628, file: !174, line: 472, type: !81)
!2632 = !DILocalVariable(name: "result", scope: !2628, file: !174, line: 477, type: !23)
!2633 = !DILocalVariable(name: "operand1", scope: !2628, file: !174, line: 477, type: !23)
!2634 = !DILocalVariable(name: "front", scope: !2628, file: !174, line: 478, type: !21)
!2635 = !DILabel(scope: !2628, name: "error", file: !174, line: 498)
!2636 = !DILabel(scope: !2628, name: "done", file: !174, line: 502)
!2637 = !DILocation(line: 0, scope: !2628)
!2638 = !DILocation(line: 474, column: 9, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2628, file: !174, line: 474, column: 9)
!2640 = !DILocation(line: 474, column: 15, scope: !2639)
!2641 = !DILocation(line: 474, column: 9, scope: !2628)
!2642 = !DILocation(line: 481, column: 13, scope: !2628)
!2643 = !DILocation(line: 482, column: 15, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2628, file: !174, line: 482, column: 9)
!2645 = !DILocation(line: 482, column: 9, scope: !2628)
!2646 = !DILocation(line: 484, column: 28, scope: !2628)
!2647 = !DILocation(line: 484, column: 42, scope: !2628)
!2648 = !DILocation(line: 484, column: 16, scope: !2628)
!2649 = !DILocation(line: 485, column: 5, scope: !2628)
!2650 = !DILocation(line: 486, column: 8, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2628, file: !174, line: 486, column: 8)
!2652 = !DILocation(line: 486, column: 8, scope: !2628)
!2653 = !DILocation(line: 489, column: 9, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2628, file: !174, line: 489, column: 9)
!2655 = !DILocation(line: 489, column: 15, scope: !2654)
!2656 = !DILocation(line: 492, column: 18, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2628, file: !174, line: 492, column: 9)
!2658 = !DILocation(line: 489, column: 9, scope: !2628)
!2659 = !DILocation(line: 495, column: 14, scope: !2628)
!2660 = !DILocation(line: 496, column: 5, scope: !2628)
!2661 = !DILocation(line: 498, column: 1, scope: !2628)
!2662 = !DILocation(line: 499, column: 5, scope: !2628)
!2663 = !DILocation(line: 500, column: 21, scope: !2628)
!2664 = !DILocation(line: 501, column: 2, scope: !2628)
!2665 = !DILocation(line: 502, column: 1, scope: !2628)
!2666 = !DILocation(line: 503, column: 5, scope: !2628)
!2667 = distinct !DISubprogram(name: "handle_op_power", scope: !174, file: !174, line: 506, type: !2057, scopeLine: 507, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2668)
!2668 = !{!2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676}
!2669 = !DILocalVariable(name: "args", arg: 1, scope: !2667, file: !174, line: 506, type: !2059)
!2670 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2667, file: !174, line: 506, type: !81)
!2671 = !DILocalVariable(name: "result", scope: !2667, file: !174, line: 511, type: !23)
!2672 = !DILocalVariable(name: "operand1", scope: !2667, file: !174, line: 511, type: !23)
!2673 = !DILocalVariable(name: "operand2", scope: !2667, file: !174, line: 511, type: !23)
!2674 = !DILocalVariable(name: "front", scope: !2667, file: !174, line: 512, type: !21)
!2675 = !DILabel(scope: !2667, name: "error", file: !174, line: 549)
!2676 = !DILabel(scope: !2667, name: "done", file: !174, line: 553)
!2677 = !DILocation(line: 0, scope: !2667)
!2678 = !DILocation(line: 508, column: 9, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2667, file: !174, line: 508, column: 9)
!2680 = !DILocation(line: 508, column: 15, scope: !2679)
!2681 = !DILocation(line: 508, column: 9, scope: !2667)
!2682 = !DILocation(line: 515, column: 13, scope: !2667)
!2683 = !DILocation(line: 516, column: 15, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2667, file: !174, line: 516, column: 9)
!2685 = !DILocation(line: 516, column: 9, scope: !2667)
!2686 = !DILocation(line: 518, column: 28, scope: !2667)
!2687 = !DILocation(line: 518, column: 42, scope: !2667)
!2688 = !DILocation(line: 518, column: 16, scope: !2667)
!2689 = !DILocation(line: 519, column: 5, scope: !2667)
!2690 = !DILocation(line: 520, column: 8, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2667, file: !174, line: 520, column: 8)
!2692 = !DILocation(line: 520, column: 8, scope: !2667)
!2693 = !DILocation(line: 524, column: 13, scope: !2667)
!2694 = !DILocation(line: 525, column: 15, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2667, file: !174, line: 525, column: 9)
!2696 = !DILocation(line: 525, column: 9, scope: !2667)
!2697 = !DILocation(line: 527, column: 28, scope: !2667)
!2698 = !DILocation(line: 527, column: 42, scope: !2667)
!2699 = !DILocation(line: 527, column: 16, scope: !2667)
!2700 = !DILocation(line: 528, column: 5, scope: !2667)
!2701 = !DILocation(line: 529, column: 8, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2667, file: !174, line: 529, column: 8)
!2703 = !DILocation(line: 529, column: 8, scope: !2667)
!2704 = !DILocation(line: 532, column: 9, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2667, file: !174, line: 532, column: 9)
!2706 = !DILocation(line: 532, column: 15, scope: !2705)
!2707 = !DILocation(line: 532, column: 9, scope: !2667)
!2708 = !DILocation(line: 535, column: 18, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2667, file: !174, line: 535, column: 9)
!2710 = !DILocation(line: 535, column: 9, scope: !2667)
!2711 = !DILocation(line: 537, column: 23, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2709, file: !174, line: 537, column: 14)
!2713 = !DILocation(line: 537, column: 14, scope: !2709)
!2714 = !DILocation(line: 539, column: 14, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2712, file: !174, line: 539, column: 14)
!2716 = !DILocation(line: 539, column: 14, scope: !2712)
!2717 = !DILocation(line: 541, column: 23, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2715, file: !174, line: 541, column: 14)
!2719 = !DILocation(line: 541, column: 40, scope: !2718)
!2720 = !DILocation(line: 541, column: 28, scope: !2718)
!2721 = !DILocation(line: 543, column: 23, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2718, file: !174, line: 543, column: 14)
!2723 = !DILocation(line: 543, column: 27, scope: !2722)
!2724 = !DILocation(line: 543, column: 30, scope: !2722)
!2725 = !DILocation(line: 543, column: 53, scope: !2722)
!2726 = !DILocation(line: 543, column: 14, scope: !2718)
!2727 = !DILocation(line: 544, column: 22, scope: !2722)
!2728 = !DILocation(line: 544, column: 18, scope: !2722)
!2729 = !DILocation(line: 544, column: 46, scope: !2722)
!2730 = !DILocation(line: 544, column: 69, scope: !2722)
!2731 = !DILocation(line: 544, column: 43, scope: !2722)
!2732 = !DILocation(line: 544, column: 9, scope: !2722)
!2733 = !DILocation(line: 546, column: 18, scope: !2722)
!2734 = !DILocation(line: 549, column: 1, scope: !2667)
!2735 = !DILocation(line: 550, column: 5, scope: !2667)
!2736 = !DILocation(line: 551, column: 21, scope: !2667)
!2737 = !DILocation(line: 552, column: 2, scope: !2667)
!2738 = !DILocation(line: 553, column: 1, scope: !2667)
!2739 = !DILocation(line: 554, column: 5, scope: !2667)
!2740 = distinct !DISubprogram(name: "handle_op_product", scope: !174, file: !174, line: 557, type: !2057, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2741)
!2741 = !{!2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749}
!2742 = !DILocalVariable(name: "args", arg: 1, scope: !2740, file: !174, line: 557, type: !2059)
!2743 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2740, file: !174, line: 557, type: !81)
!2744 = !DILocalVariable(name: "result", scope: !2740, file: !174, line: 562, type: !23)
!2745 = !DILocalVariable(name: "operand1", scope: !2740, file: !174, line: 562, type: !23)
!2746 = !DILocalVariable(name: "operand2", scope: !2740, file: !174, line: 562, type: !23)
!2747 = !DILocalVariable(name: "front", scope: !2740, file: !174, line: 563, type: !21)
!2748 = !DILabel(scope: !2740, name: "error", file: !174, line: 589)
!2749 = !DILabel(scope: !2740, name: "done", file: !174, line: 593)
!2750 = !DILocation(line: 0, scope: !2740)
!2751 = !DILocation(line: 559, column: 9, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2740, file: !174, line: 559, column: 9)
!2753 = !DILocation(line: 559, column: 15, scope: !2752)
!2754 = !DILocation(line: 559, column: 9, scope: !2740)
!2755 = !DILocation(line: 566, column: 13, scope: !2740)
!2756 = !DILocation(line: 567, column: 15, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2740, file: !174, line: 567, column: 9)
!2758 = !DILocation(line: 567, column: 9, scope: !2740)
!2759 = !DILocation(line: 569, column: 28, scope: !2740)
!2760 = !DILocation(line: 569, column: 42, scope: !2740)
!2761 = !DILocation(line: 569, column: 16, scope: !2740)
!2762 = !DILocation(line: 570, column: 5, scope: !2740)
!2763 = !DILocation(line: 571, column: 8, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2740, file: !174, line: 571, column: 8)
!2765 = !DILocation(line: 571, column: 8, scope: !2740)
!2766 = !DILocation(line: 575, column: 13, scope: !2740)
!2767 = !DILocation(line: 576, column: 15, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2740, file: !174, line: 576, column: 9)
!2769 = !DILocation(line: 576, column: 9, scope: !2740)
!2770 = !DILocation(line: 578, column: 28, scope: !2740)
!2771 = !DILocation(line: 578, column: 42, scope: !2740)
!2772 = !DILocation(line: 578, column: 16, scope: !2740)
!2773 = !DILocation(line: 579, column: 5, scope: !2740)
!2774 = !DILocation(line: 580, column: 8, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2740, file: !174, line: 580, column: 8)
!2776 = !DILocation(line: 580, column: 8, scope: !2740)
!2777 = !DILocation(line: 583, column: 9, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2740, file: !174, line: 583, column: 9)
!2779 = !DILocation(line: 583, column: 15, scope: !2778)
!2780 = !DILocation(line: 583, column: 9, scope: !2740)
!2781 = !DILocation(line: 586, column: 23, scope: !2740)
!2782 = !DILocation(line: 587, column: 5, scope: !2740)
!2783 = !DILocation(line: 589, column: 1, scope: !2740)
!2784 = !DILocation(line: 590, column: 5, scope: !2740)
!2785 = !DILocation(line: 591, column: 21, scope: !2740)
!2786 = !DILocation(line: 592, column: 2, scope: !2740)
!2787 = !DILocation(line: 593, column: 1, scope: !2740)
!2788 = !DILocation(line: 594, column: 5, scope: !2740)
!2789 = distinct !DISubprogram(name: "handle_op_quotient", scope: !174, file: !174, line: 597, type: !2057, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2790)
!2790 = !{!2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798}
!2791 = !DILocalVariable(name: "args", arg: 1, scope: !2789, file: !174, line: 597, type: !2059)
!2792 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2789, file: !174, line: 597, type: !81)
!2793 = !DILocalVariable(name: "result", scope: !2789, file: !174, line: 602, type: !23)
!2794 = !DILocalVariable(name: "operand1", scope: !2789, file: !174, line: 602, type: !23)
!2795 = !DILocalVariable(name: "operand2", scope: !2789, file: !174, line: 602, type: !23)
!2796 = !DILocalVariable(name: "front", scope: !2789, file: !174, line: 603, type: !21)
!2797 = !DILabel(scope: !2789, name: "error", file: !174, line: 632)
!2798 = !DILabel(scope: !2789, name: "done", file: !174, line: 636)
!2799 = !DILocation(line: 0, scope: !2789)
!2800 = !DILocation(line: 599, column: 9, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2789, file: !174, line: 599, column: 9)
!2802 = !DILocation(line: 599, column: 15, scope: !2801)
!2803 = !DILocation(line: 599, column: 9, scope: !2789)
!2804 = !DILocation(line: 606, column: 13, scope: !2789)
!2805 = !DILocation(line: 607, column: 15, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2789, file: !174, line: 607, column: 9)
!2807 = !DILocation(line: 607, column: 9, scope: !2789)
!2808 = !DILocation(line: 609, column: 28, scope: !2789)
!2809 = !DILocation(line: 609, column: 42, scope: !2789)
!2810 = !DILocation(line: 609, column: 16, scope: !2789)
!2811 = !DILocation(line: 610, column: 5, scope: !2789)
!2812 = !DILocation(line: 611, column: 8, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2789, file: !174, line: 611, column: 8)
!2814 = !DILocation(line: 611, column: 8, scope: !2789)
!2815 = !DILocation(line: 615, column: 13, scope: !2789)
!2816 = !DILocation(line: 616, column: 15, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2789, file: !174, line: 616, column: 9)
!2818 = !DILocation(line: 616, column: 9, scope: !2789)
!2819 = !DILocation(line: 618, column: 28, scope: !2789)
!2820 = !DILocation(line: 618, column: 42, scope: !2789)
!2821 = !DILocation(line: 618, column: 16, scope: !2789)
!2822 = !DILocation(line: 619, column: 5, scope: !2789)
!2823 = !DILocation(line: 620, column: 8, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2789, file: !174, line: 620, column: 8)
!2825 = !DILocation(line: 620, column: 8, scope: !2789)
!2826 = !DILocation(line: 623, column: 9, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2789, file: !174, line: 623, column: 9)
!2828 = !DILocation(line: 623, column: 15, scope: !2827)
!2829 = !DILocation(line: 626, column: 18, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2789, file: !174, line: 626, column: 9)
!2831 = !DILocation(line: 623, column: 9, scope: !2789)
!2832 = !DILocation(line: 629, column: 23, scope: !2789)
!2833 = !DILocation(line: 630, column: 5, scope: !2789)
!2834 = !DILocation(line: 632, column: 1, scope: !2789)
!2835 = !DILocation(line: 633, column: 5, scope: !2789)
!2836 = !DILocation(line: 634, column: 21, scope: !2789)
!2837 = !DILocation(line: 635, column: 2, scope: !2789)
!2838 = !DILocation(line: 636, column: 1, scope: !2789)
!2839 = !DILocation(line: 637, column: 5, scope: !2789)
!2840 = distinct !DISubprogram(name: "handle_op_sin", scope: !174, file: !174, line: 640, type: !2057, scopeLine: 641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2841)
!2841 = !{!2842, !2843, !2844, !2845, !2846, !2847, !2848}
!2842 = !DILocalVariable(name: "args", arg: 1, scope: !2840, file: !174, line: 640, type: !2059)
!2843 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2840, file: !174, line: 640, type: !81)
!2844 = !DILocalVariable(name: "result", scope: !2840, file: !174, line: 645, type: !23)
!2845 = !DILocalVariable(name: "operand1", scope: !2840, file: !174, line: 645, type: !23)
!2846 = !DILocalVariable(name: "front", scope: !2840, file: !174, line: 646, type: !21)
!2847 = !DILabel(scope: !2840, name: "error", file: !174, line: 663)
!2848 = !DILabel(scope: !2840, name: "done", file: !174, line: 667)
!2849 = !DILocation(line: 0, scope: !2840)
!2850 = !DILocation(line: 642, column: 9, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2840, file: !174, line: 642, column: 9)
!2852 = !DILocation(line: 642, column: 15, scope: !2851)
!2853 = !DILocation(line: 642, column: 9, scope: !2840)
!2854 = !DILocation(line: 649, column: 13, scope: !2840)
!2855 = !DILocation(line: 650, column: 15, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2840, file: !174, line: 650, column: 9)
!2857 = !DILocation(line: 650, column: 9, scope: !2840)
!2858 = !DILocation(line: 652, column: 28, scope: !2840)
!2859 = !DILocation(line: 652, column: 42, scope: !2840)
!2860 = !DILocation(line: 652, column: 16, scope: !2840)
!2861 = !DILocation(line: 653, column: 5, scope: !2840)
!2862 = !DILocation(line: 654, column: 8, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2840, file: !174, line: 654, column: 8)
!2864 = !DILocation(line: 654, column: 8, scope: !2840)
!2865 = !DILocation(line: 657, column: 9, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2840, file: !174, line: 657, column: 9)
!2867 = !DILocation(line: 657, column: 15, scope: !2866)
!2868 = !DILocation(line: 657, column: 9, scope: !2840)
!2869 = !DILocation(line: 660, column: 14, scope: !2840)
!2870 = !DILocation(line: 661, column: 5, scope: !2840)
!2871 = !DILocation(line: 663, column: 1, scope: !2840)
!2872 = !DILocation(line: 664, column: 5, scope: !2840)
!2873 = !DILocation(line: 665, column: 21, scope: !2840)
!2874 = !DILocation(line: 666, column: 2, scope: !2840)
!2875 = !DILocation(line: 667, column: 1, scope: !2840)
!2876 = !DILocation(line: 668, column: 5, scope: !2840)
!2877 = distinct !DISubprogram(name: "handle_op_sqrt", scope: !174, file: !174, line: 671, type: !2057, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2878)
!2878 = !{!2879, !2880, !2881, !2882, !2883, !2884, !2885}
!2879 = !DILocalVariable(name: "args", arg: 1, scope: !2877, file: !174, line: 671, type: !2059)
!2880 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2877, file: !174, line: 671, type: !81)
!2881 = !DILocalVariable(name: "result", scope: !2877, file: !174, line: 676, type: !23)
!2882 = !DILocalVariable(name: "operand1", scope: !2877, file: !174, line: 676, type: !23)
!2883 = !DILocalVariable(name: "front", scope: !2877, file: !174, line: 677, type: !21)
!2884 = !DILabel(scope: !2877, name: "error", file: !174, line: 697)
!2885 = !DILabel(scope: !2877, name: "done", file: !174, line: 701)
!2886 = !DILocation(line: 0, scope: !2877)
!2887 = !DILocation(line: 673, column: 9, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2877, file: !174, line: 673, column: 9)
!2889 = !DILocation(line: 673, column: 15, scope: !2888)
!2890 = !DILocation(line: 673, column: 9, scope: !2877)
!2891 = !DILocation(line: 680, column: 13, scope: !2877)
!2892 = !DILocation(line: 681, column: 15, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2877, file: !174, line: 681, column: 9)
!2894 = !DILocation(line: 681, column: 9, scope: !2877)
!2895 = !DILocation(line: 683, column: 28, scope: !2877)
!2896 = !DILocation(line: 683, column: 42, scope: !2877)
!2897 = !DILocation(line: 683, column: 16, scope: !2877)
!2898 = !DILocation(line: 684, column: 5, scope: !2877)
!2899 = !DILocation(line: 685, column: 8, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2877, file: !174, line: 685, column: 8)
!2901 = !DILocation(line: 685, column: 8, scope: !2877)
!2902 = !DILocation(line: 688, column: 9, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2877, file: !174, line: 688, column: 9)
!2904 = !DILocation(line: 688, column: 15, scope: !2903)
!2905 = !DILocation(line: 691, column: 18, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2877, file: !174, line: 691, column: 9)
!2907 = !DILocation(line: 688, column: 9, scope: !2877)
!2908 = !DILocation(line: 694, column: 14, scope: !2877)
!2909 = !DILocation(line: 695, column: 5, scope: !2877)
!2910 = !DILocation(line: 697, column: 1, scope: !2877)
!2911 = !DILocation(line: 698, column: 5, scope: !2877)
!2912 = !DILocation(line: 699, column: 21, scope: !2877)
!2913 = !DILocation(line: 700, column: 2, scope: !2877)
!2914 = !DILocation(line: 701, column: 1, scope: !2877)
!2915 = !DILocation(line: 702, column: 5, scope: !2877)
!2916 = distinct !DISubprogram(name: "handle_op_subtract", scope: !174, file: !174, line: 705, type: !2057, scopeLine: 706, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2917)
!2917 = !{!2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925}
!2918 = !DILocalVariable(name: "args", arg: 1, scope: !2916, file: !174, line: 705, type: !2059)
!2919 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2916, file: !174, line: 705, type: !81)
!2920 = !DILocalVariable(name: "result", scope: !2916, file: !174, line: 710, type: !23)
!2921 = !DILocalVariable(name: "operand1", scope: !2916, file: !174, line: 710, type: !23)
!2922 = !DILocalVariable(name: "operand2", scope: !2916, file: !174, line: 710, type: !23)
!2923 = !DILocalVariable(name: "front", scope: !2916, file: !174, line: 711, type: !21)
!2924 = !DILabel(scope: !2916, name: "error", file: !174, line: 737)
!2925 = !DILabel(scope: !2916, name: "done", file: !174, line: 741)
!2926 = !DILocation(line: 0, scope: !2916)
!2927 = !DILocation(line: 707, column: 9, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2916, file: !174, line: 707, column: 9)
!2929 = !DILocation(line: 707, column: 15, scope: !2928)
!2930 = !DILocation(line: 707, column: 9, scope: !2916)
!2931 = !DILocation(line: 714, column: 13, scope: !2916)
!2932 = !DILocation(line: 715, column: 15, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2916, file: !174, line: 715, column: 9)
!2934 = !DILocation(line: 715, column: 9, scope: !2916)
!2935 = !DILocation(line: 717, column: 28, scope: !2916)
!2936 = !DILocation(line: 717, column: 42, scope: !2916)
!2937 = !DILocation(line: 717, column: 16, scope: !2916)
!2938 = !DILocation(line: 718, column: 5, scope: !2916)
!2939 = !DILocation(line: 719, column: 8, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2916, file: !174, line: 719, column: 8)
!2941 = !DILocation(line: 719, column: 8, scope: !2916)
!2942 = !DILocation(line: 723, column: 13, scope: !2916)
!2943 = !DILocation(line: 724, column: 15, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2916, file: !174, line: 724, column: 9)
!2945 = !DILocation(line: 724, column: 9, scope: !2916)
!2946 = !DILocation(line: 726, column: 28, scope: !2916)
!2947 = !DILocation(line: 726, column: 42, scope: !2916)
!2948 = !DILocation(line: 726, column: 16, scope: !2916)
!2949 = !DILocation(line: 727, column: 5, scope: !2916)
!2950 = !DILocation(line: 728, column: 8, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2916, file: !174, line: 728, column: 8)
!2952 = !DILocation(line: 728, column: 8, scope: !2916)
!2953 = !DILocation(line: 731, column: 9, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2916, file: !174, line: 731, column: 9)
!2955 = !DILocation(line: 731, column: 15, scope: !2954)
!2956 = !DILocation(line: 731, column: 9, scope: !2916)
!2957 = !DILocation(line: 734, column: 23, scope: !2916)
!2958 = !DILocation(line: 735, column: 5, scope: !2916)
!2959 = !DILocation(line: 737, column: 1, scope: !2916)
!2960 = !DILocation(line: 738, column: 5, scope: !2916)
!2961 = !DILocation(line: 739, column: 21, scope: !2916)
!2962 = !DILocation(line: 740, column: 2, scope: !2916)
!2963 = !DILocation(line: 741, column: 1, scope: !2916)
!2964 = !DILocation(line: 742, column: 5, scope: !2916)
!2965 = distinct !DISubprogram(name: "handle_op_sum", scope: !174, file: !174, line: 745, type: !2057, scopeLine: 746, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !173, retainedNodes: !2966)
!2966 = !{!2967, !2968, !2969, !2970, !2971, !2972, !2973}
!2967 = !DILocalVariable(name: "args", arg: 1, scope: !2965, file: !174, line: 745, type: !2059)
!2968 = !DILocalVariable(name: "is_bad_formula", arg: 2, scope: !2965, file: !174, line: 745, type: !81)
!2969 = !DILocalVariable(name: "result", scope: !2965, file: !174, line: 750, type: !23)
!2970 = !DILocalVariable(name: "operand", scope: !2965, file: !174, line: 750, type: !23)
!2971 = !DILocalVariable(name: "front", scope: !2965, file: !174, line: 751, type: !21)
!2972 = !DILabel(scope: !2965, name: "error", file: !174, line: 764)
!2973 = !DILabel(scope: !2965, name: "done", file: !174, line: 767)
!2974 = !DILocation(line: 0, scope: !2965)
!2975 = !DILocation(line: 747, column: 9, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2965, file: !174, line: 747, column: 9)
!2977 = !DILocation(line: 747, column: 15, scope: !2976)
!2978 = !DILocation(line: 747, column: 9, scope: !2965)
!2979 = !DILocation(line: 751, column: 19, scope: !2965)
!2980 = !DILocation(line: 752, column: 17, scope: !2965)
!2981 = !DILocation(line: 752, column: 5, scope: !2965)
!2982 = !DILocation(line: 753, column: 31, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2965, file: !174, line: 752, column: 26)
!2984 = !DILocation(line: 753, column: 45, scope: !2983)
!2985 = !DILocation(line: 753, column: 19, scope: !2983)
!2986 = !DILocation(line: 754, column: 9, scope: !2983)
!2987 = !DILocation(line: 755, column: 12, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2983, file: !174, line: 755, column: 12)
!2989 = !DILocation(line: 755, column: 12, scope: !2983)
!2990 = !DILocation(line: 758, column: 16, scope: !2983)
!2991 = !DILocation(line: 759, column: 17, scope: !2983)
!2992 = distinct !{!2992, !2981, !2993}
!2993 = !DILocation(line: 760, column: 5, scope: !2965)
!2994 = !DILocation(line: 764, column: 1, scope: !2965)
!2995 = !DILocation(line: 765, column: 21, scope: !2965)
!2996 = !DILocation(line: 766, column: 2, scope: !2965)
!2997 = !DILocation(line: 767, column: 1, scope: !2965)
!2998 = !DILocation(line: 768, column: 5, scope: !2965)
