; ModuleID = './main.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._vars = type { [128 x i8], i8, [128 x i8], %struct._vars*, %struct._vars* }

@.str = private unnamed_addr constant [17 x i8] c"InitVARS failure\00", align 1
@pVARS = dso_local local_unnamed_addr global %struct._vars* null, align 8, !dbg !0
@.str.7 = private unnamed_addr constant [12 x i8] c"system.name\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"CGC CB\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #0 !dbg !99 {
  %1 = alloca [256 x i8], align 16
  %2 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 0, !dbg !105
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %2) #12, !dbg !105
  call void @llvm.dbg.declare(metadata [256 x i8]* %1, metadata !101, metadata !DIExpression()), !dbg !106
  %3 = call i32 @InitVARS() #12, !dbg !107
  %4 = icmp eq i32 %3, 0, !dbg !107
  br i1 %4, label %8, label %5, !dbg !109

5:                                                ; preds = %0
  %6 = call i32 @ReceivePacket(i8* nonnull %2) #12, !dbg !110
  %7 = icmp eq i32 %6, 0, !dbg !113
  br i1 %7, label %13, label %9, !dbg !114

8:                                                ; preds = %0
  call void @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)), !dbg !115
  call void @_terminate(i32 -1) #13, !dbg !117
  unreachable, !dbg !117

9:                                                ; preds = %5, %9
  %10 = call i32 @HandlePacket(i8* nonnull %2) #12, !dbg !118
  %11 = call i32 @ReceivePacket(i8* nonnull %2) #12, !dbg !110
  %12 = icmp eq i32 %11, 0, !dbg !113
  br i1 %12, label %13, label %9, !dbg !114, !llvm.loop !119

13:                                               ; preds = %9, %5
  %14 = call i32 @DestroyVARS() #12, !dbg !122
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %2) #12, !dbg !123
  ret i32 0, !dbg !124
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nounwind
declare !dbg !52 dso_local void @puts(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: noreturn
declare !dbg !32 dso_local void @_terminate(i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define dso_local i32 @ReceivePacket(i8* %0) local_unnamed_addr #0 !dbg !125 {
  %2 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %0, metadata !130, metadata !DIExpression()), !dbg !137
  %3 = bitcast i64* %2 to i8*, !dbg !138
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12, !dbg !138
  call void @llvm.dbg.value(metadata i32 0, metadata !131, metadata !DIExpression()), !dbg !137
  br label %6, !dbg !139

4:                                                ; preds = %14
  call void @llvm.dbg.value(metadata i32 %18, metadata !131, metadata !DIExpression()), !dbg !137
  %5 = icmp eq i32 %18, 2, !dbg !140
  br i1 %5, label %19, label %6, !dbg !139, !llvm.loop !141

6:                                                ; preds = %1, %4
  %7 = phi i32 [ 0, %1 ], [ %18, %4 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !131, metadata !DIExpression()), !dbg !137
  %8 = zext i32 %7 to i64, !dbg !143
  %9 = getelementptr inbounds i8, i8* %0, i64 %8, !dbg !143
  %10 = sub i32 2, %7, !dbg !146
  %11 = zext i32 %10 to i64, !dbg !147
  call void @llvm.dbg.value(metadata i64* %2, metadata !133, metadata !DIExpression(DW_OP_deref)), !dbg !137
  %12 = call i32 @receive(i32 0, i8* %9, i64 %11, i64* nonnull %2) #12, !dbg !148
  call void @llvm.dbg.value(metadata i32 %12, metadata !136, metadata !DIExpression()), !dbg !137
  %13 = icmp slt i32 %12, 0, !dbg !149
  br i1 %13, label %46, label %14, !dbg !150

14:                                               ; preds = %6
  %15 = load i64, i64* %2, align 8, !dbg !151, !tbaa !153
  call void @llvm.dbg.value(metadata i64 %15, metadata !133, metadata !DIExpression()), !dbg !137
  %16 = icmp eq i64 %15, 0, !dbg !157
  %17 = trunc i64 %15 to i32, !dbg !158
  %18 = add i32 %7, %17, !dbg !158
  call void @llvm.dbg.value(metadata i32 %18, metadata !131, metadata !DIExpression()), !dbg !137
  br i1 %16, label %46, label %4, !dbg !159

19:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 %18, metadata !131, metadata !DIExpression()), !dbg !137
  %20 = load i8, i8* %0, align 1, !dbg !160, !tbaa !162
  %21 = icmp eq i8 %20, 0, !dbg !163
  br i1 %21, label %22, label %46, !dbg !164

22:                                               ; preds = %19
  %23 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !165
  %24 = load i8, i8* %23, align 1, !dbg !165, !tbaa !162
  %25 = add i8 %24, 1, !dbg !167
  %26 = icmp ult i8 %25, 5, !dbg !167
  br i1 %26, label %46, label %27, !dbg !167

27:                                               ; preds = %22
  %28 = add i8 %24, 2, !dbg !168
  call void @llvm.dbg.value(metadata i8 %28, metadata !135, metadata !DIExpression()), !dbg !137
  call void @llvm.dbg.value(metadata i32 %18, metadata !131, metadata !DIExpression()), !dbg !137
  %29 = zext i8 %28 to i32, !dbg !169
  %30 = icmp eq i32 %18, %29, !dbg !170
  br i1 %30, label %46, label %33, !dbg !171

31:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %45, metadata !131, metadata !DIExpression()), !dbg !137
  %32 = icmp eq i32 %45, %29, !dbg !170
  br i1 %32, label %46, label %33, !dbg !171, !llvm.loop !172

33:                                               ; preds = %27, %31
  %34 = phi i32 [ %45, %31 ], [ %18, %27 ]
  call void @llvm.dbg.value(metadata i32 %34, metadata !131, metadata !DIExpression()), !dbg !137
  %35 = zext i32 %34 to i64, !dbg !174
  %36 = getelementptr inbounds i8, i8* %0, i64 %35, !dbg !174
  %37 = sub i32 %29, %34, !dbg !177
  %38 = zext i32 %37 to i64, !dbg !178
  call void @llvm.dbg.value(metadata i64* %2, metadata !133, metadata !DIExpression(DW_OP_deref)), !dbg !137
  %39 = call i32 @receive(i32 0, i8* nonnull %36, i64 %38, i64* nonnull %2) #12, !dbg !179
  %40 = icmp slt i32 %39, 0, !dbg !180
  br i1 %40, label %46, label %41, !dbg !181

41:                                               ; preds = %33
  %42 = load i64, i64* %2, align 8, !dbg !182, !tbaa !153
  call void @llvm.dbg.value(metadata i64 %42, metadata !133, metadata !DIExpression()), !dbg !137
  %43 = icmp eq i64 %42, 0, !dbg !184
  %44 = trunc i64 %42 to i32, !dbg !185
  %45 = add i32 %34, %44, !dbg !185
  call void @llvm.dbg.value(metadata i32 %45, metadata !131, metadata !DIExpression()), !dbg !137
  br i1 %43, label %46, label %31, !dbg !186

46:                                               ; preds = %14, %6, %33, %41, %31, %22, %27, %19
  %47 = phi i32 [ 0, %19 ], [ %18, %27 ], [ 0, %22 ], [ %45, %31 ], [ 0, %41 ], [ 0, %33 ], [ 0, %6 ], [ 0, %14 ], !dbg !137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12, !dbg !187
  ret i32 %47, !dbg !187
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

declare !dbg !65 dso_local i32 @receive(i32, i8*, i64, i64*) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @SendError(i8 zeroext %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !188 {
  %3 = alloca [256 x i8], align 16
  call void @llvm.dbg.value(metadata i8 %0, metadata !192, metadata !DIExpression()), !dbg !195
  call void @llvm.dbg.value(metadata i8 %1, metadata !193, metadata !DIExpression()), !dbg !195
  %4 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0, !dbg !196
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #12, !dbg !196
  call void @llvm.dbg.declare(metadata [256 x i8]* %3, metadata !194, metadata !DIExpression()), !dbg !197
  store i8 0, i8* %4, align 16, !dbg !198, !tbaa !162
  %5 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 1, !dbg !199
  store i8 3, i8* %5, align 1, !dbg !200, !tbaa !162
  %6 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 2, !dbg !201
  store i8 4, i8* %6, align 2, !dbg !202, !tbaa !162
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 3, !dbg !203
  store i8 %0, i8* %7, align 1, !dbg !204, !tbaa !162
  %8 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 4, !dbg !205
  store i8 %1, i8* %8, align 4, !dbg !206, !tbaa !162
  %9 = call i64 @write(i8* nonnull %4, i64 5) #12, !dbg !207
  %10 = icmp eq i64 %9, 5, !dbg !209
  %11 = zext i1 %10 to i32, !dbg !195
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #12, !dbg !210
  ret i32 %11, !dbg !210
}

declare !dbg !69 dso_local i64 @write(i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @SendResponse(i8 zeroext %0, %struct._vars* %1) local_unnamed_addr #0 !dbg !211 {
  %3 = alloca [256 x i8], align 16
  call void @llvm.dbg.value(metadata i8 %0, metadata !217, metadata !DIExpression()), !dbg !220
  call void @llvm.dbg.value(metadata %struct._vars* %1, metadata !218, metadata !DIExpression()), !dbg !220
  %4 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0, !dbg !221
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #12, !dbg !221
  call void @llvm.dbg.declare(metadata [256 x i8]* %3, metadata !219, metadata !DIExpression()), !dbg !222
  store i8 0, i8* %4, align 16, !dbg !223, !tbaa !162
  %5 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 2, !dbg !224
  store i8 3, i8* %5, align 2, !dbg !225, !tbaa !162
  %6 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 3, !dbg !226
  store i8 %0, i8* %6, align 1, !dbg !227, !tbaa !162
  %7 = getelementptr inbounds %struct._vars, %struct._vars* %1, i64 0, i32 1, !dbg !228
  %8 = load i8, i8* %7, align 8, !dbg !228, !tbaa !230
  switch i8 %8, label %25 [
    i8 1, label %9
    i8 2, label %21
  ], !dbg !233

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct._vars, %struct._vars* %1, i64 0, i32 2, i64 0, !dbg !234
  %11 = call i64 @strlen(i8* nonnull %10), !dbg !237
  %12 = icmp ugt i64 %11, 252, !dbg !238
  br i1 %12, label %13, label %15, !dbg !239

13:                                               ; preds = %9
  %14 = call i32 @SendError(i8 zeroext %0, i8 zeroext 1), !dbg !240
  br label %39, !dbg !242

15:                                               ; preds = %9
  %16 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 4, !dbg !243
  %17 = call i8* @strcpy(i8* nonnull %16, i8* nonnull %10), !dbg !244
  %18 = call i64 @strlen(i8* nonnull %10), !dbg !245
  %19 = trunc i64 %18 to i8, !dbg !246
  %20 = add i8 %19, 2, !dbg !246
  br label %27, !dbg !247

21:                                               ; preds = %2
  %22 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 4, !dbg !248
  %23 = getelementptr inbounds %struct._vars, %struct._vars* %1, i64 0, i32 2, i64 0, !dbg !251
  %24 = call i32 @memcpy(i8* nonnull %22, i8* nonnull %23, i64 4) #12, !dbg !252
  br label %27

25:                                               ; preds = %2
  %26 = call i32 @SendError(i8 zeroext %0, i8 zeroext 4), !dbg !253
  br label %39, !dbg !255

27:                                               ; preds = %21, %15
  %28 = phi i8 [ 6, %21 ], [ %20, %15 ]
  %29 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 1, !dbg !256
  store i8 %28, i8* %29, align 1, !dbg !256, !tbaa !162
  %30 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 1, !dbg !257
  %31 = zext i8 %28 to i64, !dbg !257
  %32 = add nuw nsw i64 %31, 2, !dbg !259
  %33 = call i64 @write(i8* nonnull %4, i64 %32) #12, !dbg !260
  %34 = load i8, i8* %30, align 1, !dbg !261, !tbaa !162
  %35 = zext i8 %34 to i64, !dbg !261
  %36 = add nuw nsw i64 %35, 2, !dbg !262
  %37 = icmp eq i64 %33, %36, !dbg !263
  %38 = zext i1 %37 to i32, !dbg !220
  br label %39, !dbg !220

39:                                               ; preds = %27, %25, %13
  %40 = phi i32 [ %14, %13 ], [ %26, %25 ], [ %38, %27 ], !dbg !220
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #12, !dbg !264
  ret i32 %40, !dbg !264
}

; Function Attrs: argmemonly nofree nounwind readonly
declare !dbg !75 dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare !dbg !78 dso_local i8* @strcpy(i8* noalias returned, i8* noalias nocapture readonly) local_unnamed_addr #3

declare !dbg !37 dso_local i32 @memcpy(i8*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @HandleReadRequest(i8* readonly %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !265 {
  %3 = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %0, metadata !269, metadata !DIExpression()), !dbg !275
  call void @llvm.dbg.value(metadata i8 %1, metadata !270, metadata !DIExpression()), !dbg !275
  %4 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 0, !dbg !276
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #12, !dbg !276
  call void @llvm.dbg.declare(metadata [128 x i8]* %3, metadata !271, metadata !DIExpression()), !dbg !277
  %5 = icmp eq i8* %0, null, !dbg !278
  br i1 %5, label %27, label %6, !dbg !280

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 3, !dbg !281
  %8 = load i8, i8* %7, align 1, !dbg !281, !tbaa !162
  call void @llvm.dbg.value(metadata i8 %8, metadata !274, metadata !DIExpression()), !dbg !275
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128) %4, i8 0, i64 128, i1 false), !dbg !282
  %9 = getelementptr inbounds i8, i8* %0, i64 4, !dbg !283
  %10 = load i8, i8* %9, align 1, !dbg !283, !tbaa !162
  call void @llvm.dbg.value(metadata i8 %10, metadata !272, metadata !DIExpression()), !dbg !275
  %11 = zext i8 %10 to i32, !dbg !284
  %12 = zext i8 %1 to i32, !dbg !286
  %13 = add nsw i32 %12, -5, !dbg !287
  %14 = icmp eq i32 %13, %11, !dbg !288
  br i1 %14, label %17, label %15, !dbg !289

15:                                               ; preds = %6
  %16 = call i32 @SendError(i8 zeroext %8, i8 zeroext 1), !dbg !290
  br label %27, !dbg !292

17:                                               ; preds = %6
  %18 = getelementptr inbounds i8, i8* %0, i64 5, !dbg !293
  %19 = zext i8 %10 to i64, !dbg !294
  %20 = call i8* @strncpy(i8* nonnull %4, i8* nonnull %18, i64 %19), !dbg !295
  %21 = call %struct._vars* @SearchVARS(i8* nonnull %4) #12, !dbg !296
  call void @llvm.dbg.value(metadata %struct._vars* %21, metadata !273, metadata !DIExpression()), !dbg !275
  %22 = icmp eq %struct._vars* %21, null, !dbg !298
  br i1 %22, label %23, label %25, !dbg !299

23:                                               ; preds = %17
  %24 = call i32 @SendError(i8 zeroext %8, i8 zeroext 4), !dbg !300
  br label %27, !dbg !302

25:                                               ; preds = %17
  %26 = call i32 @SendResponse(i8 zeroext %8, %struct._vars* nonnull %21), !dbg !303
  br label %27, !dbg !304

27:                                               ; preds = %2, %25, %23, %15
  %28 = phi i32 [ 0, %15 ], [ 0, %23 ], [ 1, %25 ], [ 0, %2 ], !dbg !275
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #12, !dbg !305
  ret i32 %28, !dbg !305
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: nofree nounwind
declare dso_local i8* @strncpy(i8* noalias returned, i8* noalias nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local i32 @HandleWriteRequest(i8* %0, i8 zeroext %1) local_unnamed_addr #0 !dbg !306 {
  %3 = alloca [128 x i8], align 16
  %4 = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %0, metadata !308, metadata !DIExpression()), !dbg !318
  call void @llvm.dbg.value(metadata i8 %1, metadata !309, metadata !DIExpression()), !dbg !318
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 0, !dbg !319
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #12, !dbg !319
  call void @llvm.dbg.declare(metadata [128 x i8]* %3, metadata !310, metadata !DIExpression()), !dbg !320
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0, !dbg !321
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #12, !dbg !321
  call void @llvm.dbg.declare(metadata [128 x i8]* %4, metadata !311, metadata !DIExpression()), !dbg !322
  %7 = icmp eq i8* %0, null, !dbg !323
  br i1 %7, label %57, label %8, !dbg !325

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %0, i64 3, !dbg !326
  %10 = load i8, i8* %9, align 1, !dbg !326, !tbaa !162
  call void @llvm.dbg.value(metadata i8 %10, metadata !313, metadata !DIExpression()), !dbg !318
  call void @llvm.dbg.value(metadata i8 4, metadata !316, metadata !DIExpression()), !dbg !318
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128) %5, i8 0, i64 128, i1 false), !dbg !327
  %11 = getelementptr inbounds i8, i8* %0, i64 4, !dbg !328
  %12 = load i8, i8* %11, align 1, !dbg !328, !tbaa !162
  call void @llvm.dbg.value(metadata i8 %12, metadata !314, metadata !DIExpression()), !dbg !318
  call void @llvm.dbg.value(metadata i8 5, metadata !316, metadata !DIExpression()), !dbg !318
  %13 = zext i8 %12 to i32, !dbg !329
  %14 = zext i8 %1 to i32, !dbg !331
  %15 = add nsw i32 %14, -8, !dbg !332
  %16 = icmp slt i32 %15, %13, !dbg !333
  br i1 %16, label %17, label %19, !dbg !334

17:                                               ; preds = %8
  %18 = call i32 @SendError(i8 zeroext %10, i8 zeroext 1), !dbg !335
  br label %57, !dbg !337

19:                                               ; preds = %8
  %20 = icmp slt i8 %12, 0, !dbg !338
  br i1 %20, label %21, label %23, !dbg !340

21:                                               ; preds = %19
  %22 = call i32 @SendError(i8 zeroext %10, i8 zeroext 1), !dbg !341
  br label %57, !dbg !343

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %0, i64 5, !dbg !344
  %25 = zext i8 %12 to i64, !dbg !345
  %26 = call i32 @memcpy(i8* nonnull %5, i8* nonnull %24, i64 %25) #12, !dbg !346
  %27 = add nuw nsw i32 %13, 5, !dbg !347
  call void @llvm.dbg.value(metadata i32 %27, metadata !316, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !318
  %28 = zext i32 %27 to i64, !dbg !348
  %29 = getelementptr inbounds i8, i8* %0, i64 %28, !dbg !348
  %30 = load i8, i8* %29, align 1, !dbg !348, !tbaa !162
  call void @llvm.dbg.value(metadata i8 %30, metadata !317, metadata !DIExpression()), !dbg !318
  call void @llvm.dbg.value(metadata i32 %27, metadata !316, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !318
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128) %6, i8 0, i64 128, i1 false), !dbg !349
  %31 = add nuw nsw i32 %13, 6, !dbg !350
  %32 = zext i32 %31 to i64, !dbg !351
  %33 = getelementptr inbounds i8, i8* %0, i64 %32, !dbg !351
  %34 = load i8, i8* %33, align 1, !dbg !351, !tbaa !162
  call void @llvm.dbg.value(metadata i8 %34, metadata !315, metadata !DIExpression()), !dbg !318
  %35 = add nuw nsw i32 %13, 7, !dbg !352
  call void @llvm.dbg.value(metadata i32 %27, metadata !316, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !318
  %36 = zext i8 %34 to i32, !dbg !353
  %37 = and i32 %35, 255, !dbg !355
  %38 = sub nsw i32 %14, %37, !dbg !356
  %39 = icmp slt i32 %38, %36, !dbg !357
  br i1 %39, label %40, label %42, !dbg !358

40:                                               ; preds = %23
  %41 = call i32 @SendError(i8 zeroext %10, i8 zeroext 1), !dbg !359
  br label %57, !dbg !361

42:                                               ; preds = %23
  %43 = icmp slt i8 %34, 0, !dbg !362
  br i1 %43, label %44, label %46, !dbg !364

44:                                               ; preds = %42
  %45 = call i32 @SendError(i8 zeroext %10, i8 zeroext 1), !dbg !365
  br label %57, !dbg !367

46:                                               ; preds = %42
  %47 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !368
  %48 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !369
  %49 = zext i8 %34 to i64, !dbg !370
  %50 = call i32 @memcpy(i8* nonnull %6, i8* nonnull %48, i64 %49) #12, !dbg !371
  %51 = call %struct._vars* @UpdateVARSObject(i8* nonnull %5, i8 zeroext %30, i8* nonnull %6) #12, !dbg !372
  call void @llvm.dbg.value(metadata %struct._vars* %51, metadata !312, metadata !DIExpression()), !dbg !318
  %52 = icmp eq %struct._vars* %51, null, !dbg !374
  br i1 %52, label %53, label %55, !dbg !375

53:                                               ; preds = %46
  %54 = call i32 @SendError(i8 zeroext %10, i8 zeroext 2), !dbg !376
  br label %57, !dbg !378

55:                                               ; preds = %46
  %56 = call i32 @SendResponse(i8 zeroext %10, %struct._vars* nonnull %51), !dbg !379
  br label %57

57:                                               ; preds = %40, %44, %55, %53, %2, %21, %17
  %58 = phi i32 [ 0, %17 ], [ 0, %21 ], [ 0, %2 ], [ 0, %40 ], [ 0, %44 ], [ 1, %55 ], [ 1, %53 ], !dbg !318
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #12, !dbg !381
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #12, !dbg !381
  ret i32 %58, !dbg !381
}

; Function Attrs: nounwind uwtable
define dso_local i32 @HandlePacket(i8* %0) local_unnamed_addr #0 !dbg !382 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !384, metadata !DIExpression()), !dbg !391
  %2 = icmp eq i8* %0, null, !dbg !392
  br i1 %2, label %19, label %3, !dbg !394

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !395
  %5 = load i8, i8* %4, align 1, !dbg !395, !tbaa !162
  %6 = add i8 %5, 2, !dbg !396
  call void @llvm.dbg.value(metadata i8 %6, metadata !385, metadata !DIExpression()), !dbg !391
  %7 = icmp ult i8 %6, 4, !dbg !397
  br i1 %7, label %19, label %8, !dbg !399

8:                                                ; preds = %3
  %9 = getelementptr inbounds i8, i8* %0, i64 2, !dbg !400
  %10 = load i8, i8* %9, align 1, !dbg !400, !tbaa !162
  call void @llvm.dbg.value(metadata i8 undef, metadata !386, metadata !DIExpression()), !dbg !391
  call void @llvm.dbg.value(metadata i8 undef, metadata !387, metadata !DIExpression()), !dbg !391
  switch i8 %10, label %15 [
    i8 1, label %11
    i8 2, label %13
  ], !dbg !401

11:                                               ; preds = %8
  %12 = call i32 @HandleReadRequest(i8* nonnull %0, i8 zeroext %6), !dbg !402
  br label %19, !dbg !404

13:                                               ; preds = %8
  %14 = call i32 @HandleWriteRequest(i8* nonnull %0, i8 zeroext %6), !dbg !405
  br label %19, !dbg !406

15:                                               ; preds = %8
  %16 = getelementptr inbounds i8, i8* %0, i64 3, !dbg !407
  %17 = load i8, i8* %16, align 1, !dbg !407, !tbaa !162
  call void @llvm.dbg.value(metadata i8 %17, metadata !387, metadata !DIExpression()), !dbg !391
  %18 = call i32 @SendError(i8 zeroext %17, i8 zeroext 3), !dbg !408
  br label %19, !dbg !409

19:                                               ; preds = %11, %13, %15, %3, %1
  %20 = phi i32 [ 0, %1 ], [ 0, %3 ], [ 1, %15 ], [ 1, %13 ], [ 1, %11 ], !dbg !391
  ret i32 %20, !dbg !410
}

; Function Attrs: nounwind uwtable
define dso_local i32 @InitVARS() local_unnamed_addr #0 !dbg !411 {
  %1 = call %struct._vars* @CreateVARSObject(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8 zeroext 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)), !dbg !414
  store %struct._vars* %1, %struct._vars** @pVARS, align 8, !dbg !416, !tbaa !417
  %2 = icmp ne %struct._vars* %1, null, !dbg !418
  %3 = zext i1 %2 to i32, !dbg !419
  ret i32 %3, !dbg !420
}

; Function Attrs: nounwind uwtable
define dso_local %struct._vars* @CreateVARSObject(i8* readonly %0, i8 zeroext %1, i8* %2) local_unnamed_addr #0 !dbg !421 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !425, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata i8 %1, metadata !426, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata i8* %2, metadata !427, metadata !DIExpression()), !dbg !430
  %4 = icmp ne i8* %0, null, !dbg !431
  %5 = icmp ne i8* %2, null, !dbg !433
  %6 = and i1 %4, %5, !dbg !434
  %7 = add i8 %1, -1, !dbg !435
  %8 = icmp ult i8 %7, 2, !dbg !435
  %9 = and i1 %8, %6, !dbg !434
  br i1 %9, label %10, label %24, !dbg !434

10:                                               ; preds = %3
  %11 = call dereferenceable_or_null(280) i8* @calloc(i64 1, i64 280), !dbg !436
  %12 = bitcast i8* %11 to %struct._vars*, !dbg !436
  call void @llvm.dbg.value(metadata %struct._vars* %12, metadata !428, metadata !DIExpression()), !dbg !430
  %13 = icmp eq i8* %11, null, !dbg !438
  br i1 %13, label %14, label %15, !dbg !439

14:                                               ; preds = %10
  call void @_terminate(i32 -1) #13, !dbg !440
  unreachable, !dbg !440

15:                                               ; preds = %10
  %16 = call i8* @strncpy(i8* nonnull %11, i8* nonnull %0, i64 127), !dbg !442
  %17 = getelementptr inbounds i8, i8* %11, i64 128, !dbg !443
  store i8 %1, i8* %17, align 8, !dbg !444, !tbaa !230
  switch i8 %1, label %24 [
    i8 1, label %18
    i8 2, label %21
  ], !dbg !445

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %11, i64 129, !dbg !446
  %20 = call i8* @strncpy(i8* nonnull %19, i8* nonnull %2, i64 127), !dbg !449
  br label %24, !dbg !450

21:                                               ; preds = %15
  %22 = getelementptr inbounds i8, i8* %11, i64 129, !dbg !451
  %23 = call i32 @memcpy(i8* nonnull %22, i8* nonnull %2, i64 4) #12, !dbg !454
  br label %24, !dbg !455

24:                                               ; preds = %15, %18, %21, %3
  %25 = phi %struct._vars* [ null, %3 ], [ %12, %21 ], [ %12, %18 ], [ %12, %15 ], !dbg !430
  ret %struct._vars* %25, !dbg !456
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @calloc(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local i32 @DestroyVARS() local_unnamed_addr #0 !dbg !457 {
  %1 = load %struct._vars*, %struct._vars** @pVARS, align 8, !dbg !461, !tbaa !417
  %2 = icmp eq %struct._vars* %1, null, !dbg !461
  br i1 %2, label %9, label %3, !dbg !463

3:                                                ; preds = %0, %3
  %4 = phi %struct._vars* [ %6, %3 ], [ %1, %0 ]
  call void @llvm.dbg.value(metadata %struct._vars* %4, metadata !459, metadata !DIExpression()), !dbg !464
  %5 = getelementptr inbounds %struct._vars, %struct._vars* %4, i64 0, i32 4, !dbg !465
  %6 = load %struct._vars*, %struct._vars** %5, align 8, !dbg !465, !tbaa !467
  call void @llvm.dbg.value(metadata %struct._vars* %6, metadata !460, metadata !DIExpression()), !dbg !464
  %7 = getelementptr %struct._vars, %struct._vars* %4, i64 0, i32 0, i64 0, !dbg !468
  call void @free(i8* %7), !dbg !469
  call void @llvm.dbg.value(metadata %struct._vars* %6, metadata !459, metadata !DIExpression()), !dbg !464
  %8 = icmp eq %struct._vars* %6, null, !dbg !470
  br i1 %8, label %9, label %3, !dbg !470, !llvm.loop !471

9:                                                ; preds = %3, %0
  %10 = phi i32 [ 0, %0 ], [ 1, %3 ], !dbg !464
  ret i32 %10, !dbg !473
}

; Function Attrs: nounwind
declare !dbg !28 dso_local void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind readonly uwtable
define dso_local %struct._vars* @SearchVARS(i8* readonly %0) local_unnamed_addr #9 !dbg !474 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !478, metadata !DIExpression()), !dbg !480
  %2 = load %struct._vars*, %struct._vars** @pVARS, align 8, !dbg !481, !tbaa !417
  %3 = icmp ne %struct._vars* %2, null, !dbg !481
  %4 = icmp ne i8* %0, null, !dbg !483
  %5 = and i1 %4, %3, !dbg !484
  br i1 %5, label %6, label %15, !dbg !484

6:                                                ; preds = %1, %11
  %7 = phi %struct._vars* [ %13, %11 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct._vars* %7, metadata !479, metadata !DIExpression()), !dbg !480
  %8 = getelementptr inbounds %struct._vars, %struct._vars* %7, i64 0, i32 0, i64 0, !dbg !485
  %9 = call i32 @strcmp(i8* nonnull %8, i8* nonnull %0), !dbg !488
  %10 = icmp eq i32 %9, 0, !dbg !489
  br i1 %10, label %15, label %11, !dbg !490

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct._vars, %struct._vars* %7, i64 0, i32 4, !dbg !491
  %13 = load %struct._vars*, %struct._vars** %12, align 8, !dbg !491, !tbaa !467
  call void @llvm.dbg.value(metadata %struct._vars* %13, metadata !479, metadata !DIExpression()), !dbg !480
  %14 = icmp eq %struct._vars* %13, null, !dbg !492
  br i1 %14, label %15, label %6, !dbg !492, !llvm.loop !493

15:                                               ; preds = %6, %11, %1
  %16 = phi %struct._vars* [ null, %1 ], [ null, %11 ], [ %7, %6 ], !dbg !480
  ret %struct._vars* %16, !dbg !495
}

; Function Attrs: nofree nounwind readonly
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #10

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local i32 @InsertVARSObject(%struct._vars* %0) local_unnamed_addr #11 !dbg !496 {
  call void @llvm.dbg.value(metadata %struct._vars* %0, metadata !500, metadata !DIExpression()), !dbg !501
  %2 = load %struct._vars*, %struct._vars** @pVARS, align 8, !dbg !502, !tbaa !417
  %3 = icmp ne %struct._vars* %2, null, !dbg !502
  %4 = icmp ne %struct._vars* %0, null, !dbg !504
  %5 = and i1 %4, %3, !dbg !505
  br i1 %5, label %6, label %13, !dbg !505

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct._vars, %struct._vars* %0, i64 0, i32 3, !dbg !506
  store %struct._vars* null, %struct._vars** %7, align 8, !dbg !507, !tbaa !508
  %8 = load i64, i64* bitcast (%struct._vars** @pVARS to i64*), align 8, !dbg !509, !tbaa !417
  %9 = getelementptr inbounds %struct._vars, %struct._vars* %0, i64 0, i32 4, !dbg !510
  %10 = bitcast %struct._vars** %9 to i64*, !dbg !511
  store i64 %8, i64* %10, align 8, !dbg !511, !tbaa !467
  %11 = inttoptr i64 %8 to %struct._vars*, !dbg !512
  %12 = getelementptr inbounds %struct._vars, %struct._vars* %11, i64 0, i32 3, !dbg !513
  store %struct._vars* %0, %struct._vars** %12, align 8, !dbg !514, !tbaa !508
  store %struct._vars* %0, %struct._vars** @pVARS, align 8, !dbg !515, !tbaa !417
  br label %13, !dbg !516

13:                                               ; preds = %1, %6
  %14 = phi i32 [ 1, %6 ], [ 0, %1 ], !dbg !501
  ret i32 %14, !dbg !517
}

; Function Attrs: nounwind uwtable
define dso_local i32 @DeleteVARSObject(%struct._vars* readonly %0) local_unnamed_addr #0 !dbg !518 {
  call void @llvm.dbg.value(metadata %struct._vars* %0, metadata !520, metadata !DIExpression()), !dbg !522
  %2 = load %struct._vars*, %struct._vars** @pVARS, align 8, !dbg !523, !tbaa !417
  %3 = icmp ne %struct._vars* %2, null, !dbg !523
  %4 = icmp ne %struct._vars* %0, null, !dbg !525
  %5 = and i1 %4, %3, !dbg !526
  br i1 %5, label %6, label %16, !dbg !526

6:                                                ; preds = %1
  %7 = getelementptr %struct._vars, %struct._vars* %2, i64 0, i32 0, i64 0, !dbg !527
  %8 = getelementptr inbounds %struct._vars, %struct._vars* %0, i64 0, i32 0, i64 0, !dbg !527
  %9 = call i32 @strcmp(i8* nonnull %7, i8* nonnull %8), !dbg !527
  %10 = icmp eq i32 %9, 0, !dbg !527
  br label %11, !dbg !530

11:                                               ; preds = %6, %11
  br i1 %10, label %12, label %11, !dbg !531, !llvm.loop !532

12:                                               ; preds = %11
  %13 = getelementptr inbounds %struct._vars, %struct._vars* %2, i64 0, i32 4, !dbg !534
  %14 = bitcast %struct._vars** %13 to i64*, !dbg !534
  %15 = load i64, i64* %14, align 8, !dbg !534, !tbaa !467
  store i64 %15, i64* bitcast (%struct._vars** @pVARS to i64*), align 8, !dbg !535, !tbaa !417
  call void @free(i8* %7), !dbg !538
  br label %16, !dbg !539

16:                                               ; preds = %1, %12
  %17 = phi i32 [ 1, %12 ], [ 0, %1 ], !dbg !522
  ret i32 %17, !dbg !540
}

; Function Attrs: nounwind uwtable
define dso_local %struct._vars* @UpdateVARSObject(i8* %0, i8 zeroext %1, i8* %2) local_unnamed_addr #0 !dbg !541 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !543, metadata !DIExpression()), !dbg !547
  call void @llvm.dbg.value(metadata i8 %1, metadata !544, metadata !DIExpression()), !dbg !547
  call void @llvm.dbg.value(metadata i8* %2, metadata !545, metadata !DIExpression()), !dbg !547
  %4 = icmp ne i8* %0, null, !dbg !548
  %5 = icmp ne i8* %2, null, !dbg !550
  %6 = and i1 %4, %5, !dbg !551
  %7 = add i8 %1, -1, !dbg !552
  %8 = icmp ult i8 %7, 2, !dbg !552
  %9 = and i1 %8, %6, !dbg !551
  br i1 %9, label %10, label %31, !dbg !551

10:                                               ; preds = %3
  %11 = call %struct._vars* @SearchVARS(i8* nonnull %0), !dbg !553
  call void @llvm.dbg.value(metadata %struct._vars* %11, metadata !546, metadata !DIExpression()), !dbg !547
  %12 = icmp eq %struct._vars* %11, null, !dbg !555
  br i1 %12, label %13, label %20, !dbg !556

13:                                               ; preds = %10
  %14 = call %struct._vars* @CreateVARSObject(i8* nonnull %0, i8 zeroext %1, i8* nonnull %2), !dbg !557
  call void @llvm.dbg.value(metadata %struct._vars* %14, metadata !546, metadata !DIExpression()), !dbg !547
  %15 = icmp eq %struct._vars* %14, null, !dbg !560
  br i1 %15, label %31, label %16, !dbg !561

16:                                               ; preds = %13
  %17 = call i32 @InsertVARSObject(%struct._vars* nonnull %14), !dbg !562
  %18 = icmp eq i32 %17, 0, !dbg !562
  %19 = select i1 %18, %struct._vars* null, %struct._vars* %14, !dbg !565
  br label %31, !dbg !565

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct._vars, %struct._vars* %11, i64 0, i32 1, !dbg !566
  %22 = load i8, i8* %21, align 8, !dbg !566, !tbaa !230
  %23 = icmp eq i8 %22, %1, !dbg !568
  br i1 %23, label %24, label %31, !dbg !569

24:                                               ; preds = %20
  switch i8 %1, label %31 [
    i8 1, label %25
    i8 2, label %28
  ], !dbg !570

25:                                               ; preds = %24
  %26 = getelementptr inbounds %struct._vars, %struct._vars* %11, i64 0, i32 2, i64 0, !dbg !571
  %27 = call i8* @strncpy(i8* nonnull %26, i8* nonnull %2, i64 127), !dbg !574
  br label %31, !dbg !575

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct._vars, %struct._vars* %11, i64 0, i32 2, i64 0, !dbg !576
  %30 = call i32 @memcpy(i8* nonnull %29, i8* nonnull %2, i64 4) #12, !dbg !579
  br label %31, !dbg !580

31:                                               ; preds = %24, %25, %28, %20, %16, %13, %3
  %32 = phi %struct._vars* [ null, %3 ], [ null, %13 ], [ %19, %16 ], [ null, %20 ], [ %11, %28 ], [ %11, %25 ], [ %11, %24 ], !dbg !547
  ret %struct._vars* %32, !dbg !581
}

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.dbg.cu = !{!46, !62, !2}
!llvm.ident = !{!95, !95, !95}
!llvm.module.flags = !{!96, !97, !98}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pVARS", scope: !2, file: !3, line: 31, type: !44, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !43, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "vars.c", directory: "/home/salman/DPP/data/DARPA/CROMU_00039/src")
!4 = !{}
!5 = !{!6, !28, !32, !26, !37}
!6 = !DISubprogram(name: "CreateVARSObject", scope: !7, file: !7, line: 44, type: !8, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!7 = !DIFile(filename: "./vars.h", directory: "/home/salman/DPP/data/DARPA/CROMU_00039/src")
!8 = !DISubroutineType(types: !9)
!9 = !{!10, !26, !21, !27}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_vars", file: !7, line: 30, size: 2240, elements: !12)
!12 = !{!13, !18, !22, !24, !25}
!13 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11, file: !7, line: 31, baseType: !14, size: 1024)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 1024, elements: !16)
!15 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!16 = !{!17}
!17 = !DISubrange(count: 128, lowerBound: 0)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11, file: !7, line: 32, baseType: !19, size: 8, offset: 1024)
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !20, line: 34, baseType: !21)
!20 = !DIFile(filename: "./stdint.h", directory: "/home/salman/DPP/data/DARPA/CROMU_00039/src")
!21 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !11, file: !7, line: 33, baseType: !23, size: 1024, offset: 1032)
!23 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 1024, elements: !16)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11, file: !7, line: 34, baseType: !10, size: 64, offset: 2112)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11, file: !7, line: 35, baseType: !10, size: 64, offset: 2176)
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!28 = !DISubprogram(name: "free", scope: !29, file: !29, line: 55, type: !30, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!29 = !DIFile(filename: "./malloc.h", directory: "/home/salman/DPP/data/DARPA/CROMU_00039/src")
!30 = !DISubroutineType(types: !31)
!31 = !{null, !27}
!32 = !DISubprogram(name: "_terminate", scope: !33, file: !33, line: 52, type: !34, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized, retainedNodes: !4)
!33 = !DIFile(filename: "./libcgc.h", directory: "/home/salman/DPP/data/DARPA/CROMU_00039/src")
!34 = !DISubroutineType(types: !35)
!35 = !{null, !36}
!36 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!37 = !DISubprogram(name: "memcpy", scope: !38, file: !38, line: 42, type: !39, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!38 = !DIFile(filename: "./stdlib.h", directory: "/home/salman/DPP/data/DARPA/CROMU_00039/src")
!39 = !DISubroutineType(types: !40)
!40 = !{!41, !27, !27, !42}
!41 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!42 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!43 = !{!0}
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "vars_t", file: !7, line: 36, baseType: !11)
!46 = distinct !DICompileUnit(language: DW_LANG_C99, file: !47, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !48, splitDebugInlining: false, nameTableKind: None)
!47 = !DIFile(filename: "service.c", directory: "/home/salman/DPP/data/DARPA/CROMU_00039/src")
!48 = !{!49, !52, !32, !55, !60, !61}
!49 = !DISubprogram(name: "InitVARS", scope: !7, file: !7, line: 41, type: !50, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!50 = !DISubroutineType(types: !51)
!51 = !{!41}
!52 = !DISubprogram(name: "puts", scope: !38, file: !38, line: 56, type: !53, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!53 = !DISubroutineType(types: !54)
!54 = !{null, !26}
!55 = !DISubprogram(name: "ReceivePacket", scope: !56, file: !56, line: 39, type: !57, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!56 = !DIFile(filename: "./packet.h", directory: "/home/salman/DPP/data/DARPA/CROMU_00039/src")
!57 = !DISubroutineType(types: !58)
!58 = !{!41, !59}
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!60 = !DISubprogram(name: "HandlePacket", scope: !56, file: !56, line: 40, type: !57, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!61 = !DISubprogram(name: "DestroyVARS", scope: !7, file: !7, line: 42, type: !50, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!62 = distinct !DICompileUnit(language: DW_LANG_C99, file: !63, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !64, splitDebugInlining: false, nameTableKind: None)
!63 = !DIFile(filename: "packet.c", directory: "/home/salman/DPP/data/DARPA/CROMU_00039/src")
!64 = !{!65, !69, !26, !75, !78, !37, !81, !92}
!65 = !DISubprogram(name: "receive", scope: !33, file: !33, line: 54, type: !66, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!66 = !DISubroutineType(types: !67)
!67 = !{!41, !41, !27, !42, !68}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!69 = !DISubprogram(name: "write", scope: !38, file: !38, line: 59, type: !70, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!70 = !DISubroutineType(types: !71)
!71 = !{!72, !73, !42}
!72 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!75 = !DISubprogram(name: "strlen", scope: !38, file: !38, line: 54, type: !76, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!76 = !DISubroutineType(types: !77)
!77 = !{!42, !26}
!78 = !DISubprogram(name: "strcpy", scope: !38, file: !38, line: 44, type: !79, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!79 = !DISubroutineType(types: !80)
!80 = !{!26, !26, !26}
!81 = !DISubprogram(name: "SearchVARS", scope: !7, file: !7, line: 43, type: !82, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!82 = !DISubroutineType(types: !83)
!83 = !{!84, !26}
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_vars", file: !7, line: 30, size: 2240, elements: !86)
!86 = !{!87, !88, !89, !90, !91}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !85, file: !7, line: 31, baseType: !14, size: 1024)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !85, file: !7, line: 32, baseType: !19, size: 8, offset: 1024)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !85, file: !7, line: 33, baseType: !23, size: 1024, offset: 1032)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !85, file: !7, line: 34, baseType: !84, size: 64, offset: 2112)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !85, file: !7, line: 35, baseType: !84, size: 64, offset: 2176)
!92 = !DISubprogram(name: "UpdateVARSObject", scope: !7, file: !7, line: 47, type: !93, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!93 = !DISubroutineType(types: !94)
!94 = !{!84, !26, !21, !27}
!95 = !{!"clang version 10.0.0-4ubuntu1 "}
!96 = !{i32 7, !"Dwarf Version", i32 4}
!97 = !{i32 2, !"Debug Info Version", i32 3}
!98 = !{i32 1, !"wchar_size", i32 4}
!99 = distinct !DISubprogram(name: "main", scope: !47, file: !47, line: 32, type: !50, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !46, retainedNodes: !100)
!100 = !{!101}
!101 = !DILocalVariable(name: "pkt", scope: !99, file: !47, line: 33, type: !102)
!102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 2048, elements: !103)
!103 = !{!104}
!104 = !DISubrange(count: 256, lowerBound: 0)
!105 = !DILocation(line: 33, column: 2, scope: !99)
!106 = !DILocation(line: 33, column: 16, scope: !99)
!107 = !DILocation(line: 36, column: 7, scope: !108)
!108 = distinct !DILexicalBlock(scope: !99, file: !47, line: 36, column: 6)
!109 = !DILocation(line: 36, column: 6, scope: !99)
!110 = !DILocation(line: 43, column: 7, scope: !111)
!111 = distinct !DILexicalBlock(scope: !112, file: !47, line: 43, column: 7)
!112 = distinct !DILexicalBlock(scope: !99, file: !47, line: 42, column: 12)
!113 = !DILocation(line: 43, column: 26, scope: !111)
!114 = !DILocation(line: 43, column: 7, scope: !112)
!115 = !DILocation(line: 37, column: 3, scope: !116)
!116 = distinct !DILexicalBlock(scope: !108, file: !47, line: 36, column: 19)
!117 = !DILocation(line: 38, column: 3, scope: !116)
!118 = !DILocation(line: 46, column: 3, scope: !112)
!119 = distinct !{!119, !120, !121}
!120 = !DILocation(line: 42, column: 2, scope: !99)
!121 = !DILocation(line: 47, column: 2, scope: !99)
!122 = !DILocation(line: 50, column: 2, scope: !99)
!123 = !DILocation(line: 53, column: 1, scope: !99)
!124 = !DILocation(line: 52, column: 2, scope: !99)
!125 = distinct !DISubprogram(name: "ReceivePacket", scope: !63, file: !63, line: 58, type: !126, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !62, retainedNodes: !129)
!126 = !DISubroutineType(types: !127)
!127 = !{!128, !59}
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !20, line: 31, baseType: !41)
!129 = !{!130, !131, !133, !135, !136}
!130 = !DILocalVariable(name: "pkt", arg: 1, scope: !125, file: !63, line: 58, type: !59)
!131 = !DILocalVariable(name: "total_bytes", scope: !125, file: !63, line: 59, type: !132)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !20, line: 36, baseType: !36)
!133 = !DILocalVariable(name: "rx_bytes", scope: !125, file: !63, line: 60, type: !134)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !33, line: 13, baseType: !42)
!135 = !DILocalVariable(name: "pkt_len", scope: !125, file: !63, line: 61, type: !19)
!136 = !DILocalVariable(name: "retval", scope: !125, file: !63, line: 62, type: !41)
!137 = !DILocation(line: 0, scope: !125)
!138 = !DILocation(line: 60, column: 2, scope: !125)
!139 = !DILocation(line: 66, column: 2, scope: !125)
!140 = !DILocation(line: 66, column: 21, scope: !125)
!141 = distinct !{!141, !139, !142}
!142 = !DILocation(line: 75, column: 2, scope: !125)
!143 = !DILocation(line: 67, column: 31, scope: !144)
!144 = distinct !DILexicalBlock(scope: !145, file: !63, line: 67, column: 7)
!145 = distinct !DILexicalBlock(scope: !125, file: !63, line: 66, column: 27)
!146 = !DILocation(line: 67, column: 46, scope: !144)
!147 = !DILocation(line: 67, column: 45, scope: !144)
!148 = !DILocation(line: 67, column: 17, scope: !144)
!149 = !DILocation(line: 67, column: 72, scope: !144)
!150 = !DILocation(line: 67, column: 7, scope: !145)
!151 = !DILocation(line: 71, column: 7, scope: !152)
!152 = distinct !DILexicalBlock(scope: !145, file: !63, line: 71, column: 7)
!153 = !{!154, !154, i64 0}
!154 = !{!"long", !155, i64 0}
!155 = !{!"omnipotent char", !156, i64 0}
!156 = !{!"Simple C/C++ TBAA"}
!157 = !DILocation(line: 71, column: 16, scope: !152)
!158 = !DILocation(line: 74, column: 15, scope: !145)
!159 = !DILocation(line: 71, column: 7, scope: !145)
!160 = !DILocation(line: 78, column: 6, scope: !161)
!161 = distinct !DILexicalBlock(scope: !125, file: !63, line: 78, column: 6)
!162 = !{!155, !155, i64 0}
!163 = !DILocation(line: 78, column: 13, scope: !161)
!164 = !DILocation(line: 78, column: 6, scope: !125)
!165 = !DILocation(line: 83, column: 6, scope: !166)
!166 = distinct !DILexicalBlock(scope: !125, file: !63, line: 83, column: 6)
!167 = !DILocation(line: 83, column: 6, scope: !125)
!168 = !DILocation(line: 89, column: 18, scope: !125)
!169 = !DILocation(line: 92, column: 24, scope: !125)
!170 = !DILocation(line: 92, column: 21, scope: !125)
!171 = !DILocation(line: 92, column: 2, scope: !125)
!172 = distinct !{!172, !171, !173}
!173 = !DILocation(line: 101, column: 2, scope: !125)
!174 = !DILocation(line: 93, column: 21, scope: !175)
!175 = distinct !DILexicalBlock(scope: !176, file: !63, line: 93, column: 7)
!176 = distinct !DILexicalBlock(scope: !125, file: !63, line: 92, column: 33)
!177 = !DILocation(line: 93, column: 42, scope: !175)
!178 = !DILocation(line: 93, column: 35, scope: !175)
!179 = !DILocation(line: 93, column: 7, scope: !175)
!180 = !DILocation(line: 93, column: 67, scope: !175)
!181 = !DILocation(line: 93, column: 7, scope: !176)
!182 = !DILocation(line: 97, column: 7, scope: !183)
!183 = distinct !DILexicalBlock(scope: !176, file: !63, line: 97, column: 7)
!184 = !DILocation(line: 97, column: 16, scope: !183)
!185 = !DILocation(line: 100, column: 15, scope: !176)
!186 = !DILocation(line: 97, column: 7, scope: !176)
!187 = !DILocation(line: 104, column: 1, scope: !125)
!188 = distinct !DISubprogram(name: "SendError", scope: !63, file: !63, line: 106, type: !189, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !62, retainedNodes: !191)
!189 = !DISubroutineType(types: !190)
!190 = !{!41, !19, !19}
!191 = !{!192, !193, !194}
!192 = !DILocalVariable(name: "request_id", arg: 1, scope: !188, file: !63, line: 106, type: !19)
!193 = !DILocalVariable(name: "error", arg: 2, scope: !188, file: !63, line: 106, type: !19)
!194 = !DILocalVariable(name: "pkt", scope: !188, file: !63, line: 107, type: !102)
!195 = !DILocation(line: 0, scope: !188)
!196 = !DILocation(line: 107, column: 2, scope: !188)
!197 = !DILocation(line: 107, column: 16, scope: !188)
!198 = !DILocation(line: 110, column: 9, scope: !188)
!199 = !DILocation(line: 111, column: 2, scope: !188)
!200 = !DILocation(line: 111, column: 9, scope: !188)
!201 = !DILocation(line: 112, column: 2, scope: !188)
!202 = !DILocation(line: 112, column: 9, scope: !188)
!203 = !DILocation(line: 113, column: 2, scope: !188)
!204 = !DILocation(line: 113, column: 9, scope: !188)
!205 = !DILocation(line: 115, column: 2, scope: !188)
!206 = !DILocation(line: 115, column: 9, scope: !188)
!207 = !DILocation(line: 117, column: 6, scope: !208)
!208 = distinct !DILexicalBlock(scope: !188, file: !63, line: 117, column: 6)
!209 = !DILocation(line: 117, column: 20, scope: !208)
!210 = !DILocation(line: 122, column: 1, scope: !188)
!211 = distinct !DISubprogram(name: "SendResponse", scope: !63, file: !63, line: 124, type: !212, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !62, retainedNodes: !216)
!212 = !DISubroutineType(types: !213)
!213 = !{!41, !19, !214}
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "vars_t", file: !7, line: 36, baseType: !85)
!216 = !{!217, !218, !219}
!217 = !DILocalVariable(name: "request_id", arg: 1, scope: !211, file: !63, line: 124, type: !19)
!218 = !DILocalVariable(name: "pm", arg: 2, scope: !211, file: !63, line: 124, type: !214)
!219 = !DILocalVariable(name: "pkt", scope: !211, file: !63, line: 125, type: !102)
!220 = !DILocation(line: 0, scope: !211)
!221 = !DILocation(line: 125, column: 2, scope: !211)
!222 = !DILocation(line: 125, column: 16, scope: !211)
!223 = !DILocation(line: 128, column: 9, scope: !211)
!224 = !DILocation(line: 129, column: 2, scope: !211)
!225 = !DILocation(line: 129, column: 9, scope: !211)
!226 = !DILocation(line: 130, column: 2, scope: !211)
!227 = !DILocation(line: 130, column: 9, scope: !211)
!228 = !DILocation(line: 132, column: 10, scope: !229)
!229 = distinct !DILexicalBlock(scope: !211, file: !63, line: 132, column: 6)
!230 = !{!231, !155, i64 128}
!231 = !{!"_vars", !155, i64 0, !155, i64 128, !155, i64 129, !232, i64 264, !232, i64 272}
!232 = !{!"any pointer", !155, i64 0}
!233 = !DILocation(line: 132, column: 6, scope: !211)
!234 = !DILocation(line: 133, column: 22, scope: !235)
!235 = distinct !DILexicalBlock(scope: !236, file: !63, line: 133, column: 7)
!236 = distinct !DILexicalBlock(scope: !229, file: !63, line: 132, column: 26)
!237 = !DILocation(line: 133, column: 7, scope: !235)
!238 = !DILocation(line: 133, column: 33, scope: !235)
!239 = !DILocation(line: 133, column: 7, scope: !236)
!240 = !DILocation(line: 134, column: 11, scope: !241)
!241 = distinct !DILexicalBlock(scope: !235, file: !63, line: 133, column: 40)
!242 = !DILocation(line: 134, column: 4, scope: !241)
!243 = !DILocation(line: 136, column: 21, scope: !236)
!244 = !DILocation(line: 136, column: 3, scope: !236)
!245 = !DILocation(line: 138, column: 14, scope: !236)
!246 = !DILocation(line: 138, column: 12, scope: !236)
!247 = !DILocation(line: 139, column: 2, scope: !236)
!248 = !DILocation(line: 140, column: 13, scope: !249)
!249 = distinct !DILexicalBlock(scope: !250, file: !63, line: 139, column: 32)
!250 = distinct !DILexicalBlock(scope: !229, file: !63, line: 139, column: 13)
!251 = !DILocation(line: 140, column: 17, scope: !249)
!252 = !DILocation(line: 140, column: 3, scope: !249)
!253 = !DILocation(line: 144, column: 10, scope: !254)
!254 = distinct !DILexicalBlock(scope: !250, file: !63, line: 143, column: 9)
!255 = !DILocation(line: 144, column: 3, scope: !254)
!256 = !DILocation(line: 0, scope: !229)
!257 = !DILocation(line: 147, column: 17, scope: !258)
!258 = distinct !DILexicalBlock(scope: !211, file: !63, line: 147, column: 6)
!259 = !DILocation(line: 147, column: 23, scope: !258)
!260 = !DILocation(line: 147, column: 6, scope: !258)
!261 = !DILocation(line: 147, column: 30, scope: !258)
!262 = !DILocation(line: 147, column: 36, scope: !258)
!263 = !DILocation(line: 147, column: 27, scope: !258)
!264 = !DILocation(line: 152, column: 1, scope: !211)
!265 = distinct !DISubprogram(name: "HandleReadRequest", scope: !63, file: !63, line: 154, type: !266, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !62, retainedNodes: !268)
!266 = !DISubroutineType(types: !267)
!267 = !{!41, !59, !19}
!268 = !{!269, !270, !271, !272, !273, !274}
!269 = !DILocalVariable(name: "pkt", arg: 1, scope: !265, file: !63, line: 154, type: !59)
!270 = !DILocalVariable(name: "pkt_len", arg: 2, scope: !265, file: !63, line: 154, type: !19)
!271 = !DILocalVariable(name: "name", scope: !265, file: !63, line: 155, type: !14)
!272 = !DILocalVariable(name: "name_len", scope: !265, file: !63, line: 156, type: !19)
!273 = !DILocalVariable(name: "pm", scope: !265, file: !63, line: 157, type: !214)
!274 = !DILocalVariable(name: "request_id", scope: !265, file: !63, line: 158, type: !19)
!275 = !DILocation(line: 0, scope: !265)
!276 = !DILocation(line: 155, column: 2, scope: !265)
!277 = !DILocation(line: 155, column: 7, scope: !265)
!278 = !DILocation(line: 160, column: 7, scope: !279)
!279 = distinct !DILexicalBlock(scope: !265, file: !63, line: 160, column: 6)
!280 = !DILocation(line: 160, column: 6, scope: !265)
!281 = !DILocation(line: 164, column: 15, scope: !265)
!282 = !DILocation(line: 167, column: 2, scope: !265)
!283 = !DILocation(line: 168, column: 13, scope: !265)
!284 = !DILocation(line: 171, column: 6, scope: !285)
!285 = distinct !DILexicalBlock(scope: !265, file: !63, line: 171, column: 6)
!286 = !DILocation(line: 171, column: 18, scope: !285)
!287 = !DILocation(line: 171, column: 40, scope: !285)
!288 = !DILocation(line: 171, column: 15, scope: !285)
!289 = !DILocation(line: 171, column: 6, scope: !265)
!290 = !DILocation(line: 172, column: 3, scope: !291)
!291 = distinct !DILexicalBlock(scope: !285, file: !63, line: 171, column: 44)
!292 = !DILocation(line: 173, column: 3, scope: !291)
!293 = !DILocation(line: 181, column: 27, scope: !265)
!294 = !DILocation(line: 181, column: 31, scope: !265)
!295 = !DILocation(line: 181, column: 2, scope: !265)
!296 = !DILocation(line: 184, column: 12, scope: !297)
!297 = distinct !DILexicalBlock(scope: !265, file: !63, line: 184, column: 6)
!298 = !DILocation(line: 184, column: 30, scope: !297)
!299 = !DILocation(line: 184, column: 6, scope: !265)
!300 = !DILocation(line: 185, column: 3, scope: !301)
!301 = distinct !DILexicalBlock(scope: !297, file: !63, line: 184, column: 39)
!302 = !DILocation(line: 186, column: 3, scope: !301)
!303 = !DILocation(line: 189, column: 2, scope: !265)
!304 = !DILocation(line: 191, column: 2, scope: !265)
!305 = !DILocation(line: 192, column: 1, scope: !265)
!306 = distinct !DISubprogram(name: "HandleWriteRequest", scope: !63, file: !63, line: 194, type: !266, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !62, retainedNodes: !307)
!307 = !{!308, !309, !310, !311, !312, !313, !314, !315, !316, !317}
!308 = !DILocalVariable(name: "pkt", arg: 1, scope: !306, file: !63, line: 194, type: !59)
!309 = !DILocalVariable(name: "pkt_len", arg: 2, scope: !306, file: !63, line: 194, type: !19)
!310 = !DILocalVariable(name: "name", scope: !306, file: !63, line: 195, type: !14)
!311 = !DILocalVariable(name: "value", scope: !306, file: !63, line: 196, type: !14)
!312 = !DILocalVariable(name: "pm", scope: !306, file: !63, line: 197, type: !214)
!313 = !DILocalVariable(name: "request_id", scope: !306, file: !63, line: 198, type: !19)
!314 = !DILocalVariable(name: "name_len", scope: !306, file: !63, line: 199, type: !19)
!315 = !DILocalVariable(name: "value_len", scope: !306, file: !63, line: 200, type: !19)
!316 = !DILocalVariable(name: "curr_len", scope: !306, file: !63, line: 201, type: !19)
!317 = !DILocalVariable(name: "type", scope: !306, file: !63, line: 228, type: !19)
!318 = !DILocation(line: 0, scope: !306)
!319 = !DILocation(line: 195, column: 2, scope: !306)
!320 = !DILocation(line: 195, column: 7, scope: !306)
!321 = !DILocation(line: 196, column: 2, scope: !306)
!322 = !DILocation(line: 196, column: 7, scope: !306)
!323 = !DILocation(line: 203, column: 7, scope: !324)
!324 = distinct !DILexicalBlock(scope: !306, file: !63, line: 203, column: 6)
!325 = !DILocation(line: 203, column: 6, scope: !306)
!326 = !DILocation(line: 207, column: 15, scope: !306)
!327 = !DILocation(line: 211, column: 2, scope: !306)
!328 = !DILocation(line: 212, column: 13, scope: !306)
!329 = !DILocation(line: 216, column: 6, scope: !330)
!330 = distinct !DILexicalBlock(scope: !306, file: !63, line: 216, column: 6)
!331 = !DILocation(line: 216, column: 17, scope: !330)
!332 = !DILocation(line: 216, column: 41, scope: !330)
!333 = !DILocation(line: 216, column: 15, scope: !330)
!334 = !DILocation(line: 216, column: 6, scope: !306)
!335 = !DILocation(line: 217, column: 3, scope: !336)
!336 = distinct !DILexicalBlock(scope: !330, file: !63, line: 216, column: 45)
!337 = !DILocation(line: 218, column: 3, scope: !336)
!338 = !DILocation(line: 220, column: 15, scope: !339)
!339 = distinct !DILexicalBlock(scope: !306, file: !63, line: 220, column: 6)
!340 = !DILocation(line: 220, column: 6, scope: !306)
!341 = !DILocation(line: 221, column: 3, scope: !342)
!342 = distinct !DILexicalBlock(scope: !339, file: !63, line: 220, column: 33)
!343 = !DILocation(line: 222, column: 3, scope: !342)
!344 = !DILocation(line: 224, column: 18, scope: !306)
!345 = !DILocation(line: 224, column: 22, scope: !306)
!346 = !DILocation(line: 224, column: 2, scope: !306)
!347 = !DILocation(line: 225, column: 11, scope: !306)
!348 = !DILocation(line: 229, column: 9, scope: !306)
!349 = !DILocation(line: 233, column: 2, scope: !306)
!350 = !DILocation(line: 234, column: 43, scope: !306)
!351 = !DILocation(line: 234, column: 14, scope: !306)
!352 = !DILocation(line: 235, column: 10, scope: !306)
!353 = !DILocation(line: 238, column: 6, scope: !354)
!354 = distinct !DILexicalBlock(scope: !306, file: !63, line: 238, column: 6)
!355 = !DILocation(line: 238, column: 26, scope: !354)
!356 = !DILocation(line: 238, column: 25, scope: !354)
!357 = !DILocation(line: 238, column: 16, scope: !354)
!358 = !DILocation(line: 238, column: 6, scope: !306)
!359 = !DILocation(line: 239, column: 3, scope: !360)
!360 = distinct !DILexicalBlock(scope: !354, file: !63, line: 238, column: 36)
!361 = !DILocation(line: 240, column: 3, scope: !360)
!362 = !DILocation(line: 242, column: 16, scope: !363)
!363 = distinct !DILexicalBlock(scope: !306, file: !63, line: 242, column: 6)
!364 = !DILocation(line: 242, column: 6, scope: !306)
!365 = !DILocation(line: 243, column: 3, scope: !366)
!366 = distinct !DILexicalBlock(scope: !363, file: !63, line: 242, column: 34)
!367 = !DILocation(line: 244, column: 3, scope: !366)
!368 = !DILocation(line: 246, column: 21, scope: !306)
!369 = !DILocation(line: 246, column: 30, scope: !306)
!370 = !DILocation(line: 246, column: 34, scope: !306)
!371 = !DILocation(line: 246, column: 2, scope: !306)
!372 = !DILocation(line: 248, column: 12, scope: !373)
!373 = distinct !DILexicalBlock(scope: !306, file: !63, line: 248, column: 6)
!374 = !DILocation(line: 248, column: 49, scope: !373)
!375 = !DILocation(line: 248, column: 6, scope: !306)
!376 = !DILocation(line: 249, column: 3, scope: !377)
!377 = distinct !DILexicalBlock(scope: !373, file: !63, line: 248, column: 58)
!378 = !DILocation(line: 250, column: 2, scope: !377)
!379 = !DILocation(line: 251, column: 3, scope: !380)
!380 = distinct !DILexicalBlock(scope: !373, file: !63, line: 250, column: 9)
!381 = !DILocation(line: 255, column: 1, scope: !306)
!382 = distinct !DISubprogram(name: "HandlePacket", scope: !63, file: !63, line: 257, type: !57, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !62, retainedNodes: !383)
!383 = !{!384, !385, !386, !387, !388, !389, !390}
!384 = !DILocalVariable(name: "pkt", arg: 1, scope: !382, file: !63, line: 257, type: !59)
!385 = !DILocalVariable(name: "pkt_len", scope: !382, file: !63, line: 258, type: !19)
!386 = !DILocalVariable(name: "pkt_type", scope: !382, file: !63, line: 259, type: !19)
!387 = !DILocalVariable(name: "request_id", scope: !382, file: !63, line: 260, type: !19)
!388 = !DILocalVariable(name: "name", scope: !382, file: !63, line: 261, type: !14)
!389 = !DILocalVariable(name: "name_len", scope: !382, file: !63, line: 262, type: !19)
!390 = !DILocalVariable(name: "value", scope: !382, file: !63, line: 263, type: !14)
!391 = !DILocation(line: 0, scope: !382)
!392 = !DILocation(line: 265, column: 7, scope: !393)
!393 = distinct !DILexicalBlock(scope: !382, file: !63, line: 265, column: 6)
!394 = !DILocation(line: 265, column: 6, scope: !382)
!395 = !DILocation(line: 270, column: 15, scope: !382)
!396 = !DILocation(line: 270, column: 21, scope: !382)
!397 = !DILocation(line: 271, column: 14, scope: !398)
!398 = distinct !DILexicalBlock(scope: !382, file: !63, line: 271, column: 6)
!399 = !DILocation(line: 271, column: 6, scope: !382)
!400 = !DILocation(line: 274, column: 15, scope: !382)
!401 = !DILocation(line: 277, column: 2, scope: !382)
!402 = !DILocation(line: 280, column: 4, scope: !403)
!403 = distinct !DILexicalBlock(scope: !382, file: !63, line: 277, column: 19)
!404 = !DILocation(line: 282, column: 4, scope: !403)
!405 = !DILocation(line: 286, column: 4, scope: !403)
!406 = !DILocation(line: 288, column: 4, scope: !403)
!407 = !DILocation(line: 275, column: 15, scope: !382)
!408 = !DILocation(line: 292, column: 4, scope: !403)
!409 = !DILocation(line: 294, column: 4, scope: !403)
!410 = !DILocation(line: 298, column: 1, scope: !382)
!411 = distinct !DISubprogram(name: "InitVARS", scope: !3, file: !3, line: 34, type: !412, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4)
!412 = !DISubroutineType(types: !413)
!413 = !{!128}
!414 = !DILocation(line: 36, column: 15, scope: !415)
!415 = distinct !DILexicalBlock(scope: !411, file: !3, line: 36, column: 6)
!416 = !DILocation(line: 36, column: 13, scope: !415)
!417 = !{!232, !232, i64 0}
!418 = !DILocation(line: 36, column: 66, scope: !415)
!419 = !DILocation(line: 0, scope: !411)
!420 = !DILocation(line: 41, column: 1, scope: !411)
!421 = distinct !DISubprogram(name: "CreateVARSObject", scope: !3, file: !3, line: 88, type: !422, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !424)
!422 = !DISubroutineType(types: !423)
!423 = !{!44, !26, !19, !27}
!424 = !{!425, !426, !427, !428, !429}
!425 = !DILocalVariable(name: "name", arg: 1, scope: !421, file: !3, line: 88, type: !26)
!426 = !DILocalVariable(name: "type", arg: 2, scope: !421, file: !3, line: 88, type: !19)
!427 = !DILocalVariable(name: "value", arg: 3, scope: !421, file: !3, line: 88, type: !27)
!428 = !DILocalVariable(name: "pm", scope: !421, file: !3, line: 89, type: !44)
!429 = !DILocalVariable(name: "c", scope: !421, file: !3, line: 90, type: !26)
!430 = !DILocation(line: 0, scope: !421)
!431 = !DILocation(line: 93, column: 7, scope: !432)
!432 = distinct !DILexicalBlock(scope: !421, file: !3, line: 93, column: 6)
!433 = !DILocation(line: 93, column: 16, scope: !432)
!434 = !DILocation(line: 93, column: 12, scope: !432)
!435 = !DILocation(line: 93, column: 42, scope: !432)
!436 = !DILocation(line: 98, column: 12, scope: !437)
!437 = distinct !DILexicalBlock(scope: !421, file: !3, line: 98, column: 6)
!438 = !DILocation(line: 98, column: 39, scope: !437)
!439 = !DILocation(line: 98, column: 6, scope: !421)
!440 = !DILocation(line: 99, column: 3, scope: !441)
!441 = distinct !DILexicalBlock(scope: !437, file: !3, line: 98, column: 48)
!442 = !DILocation(line: 103, column: 2, scope: !421)
!443 = !DILocation(line: 105, column: 6, scope: !421)
!444 = !DILocation(line: 105, column: 11, scope: !421)
!445 = !DILocation(line: 106, column: 6, scope: !421)
!446 = !DILocation(line: 107, column: 23, scope: !447)
!447 = distinct !DILexicalBlock(scope: !448, file: !3, line: 106, column: 22)
!448 = distinct !DILexicalBlock(scope: !421, file: !3, line: 106, column: 6)
!449 = !DILocation(line: 107, column: 3, scope: !447)
!450 = !DILocation(line: 108, column: 2, scope: !447)
!451 = !DILocation(line: 109, column: 14, scope: !452)
!452 = distinct !DILexicalBlock(scope: !453, file: !3, line: 108, column: 28)
!453 = distinct !DILexicalBlock(scope: !448, file: !3, line: 108, column: 13)
!454 = !DILocation(line: 109, column: 3, scope: !452)
!455 = !DILocation(line: 110, column: 2, scope: !452)
!456 = !DILocation(line: 114, column: 1, scope: !421)
!457 = distinct !DISubprogram(name: "DestroyVARS", scope: !3, file: !3, line: 44, type: !412, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !458)
!458 = !{!459, !460}
!459 = !DILocalVariable(name: "pm", scope: !457, file: !3, line: 45, type: !44)
!460 = !DILocalVariable(name: "pm_next", scope: !457, file: !3, line: 46, type: !44)
!461 = !DILocation(line: 49, column: 7, scope: !462)
!462 = distinct !DILexicalBlock(scope: !457, file: !3, line: 49, column: 6)
!463 = !DILocation(line: 49, column: 6, scope: !457)
!464 = !DILocation(line: 0, scope: !457)
!465 = !DILocation(line: 56, column: 17, scope: !466)
!466 = distinct !DILexicalBlock(scope: !457, file: !3, line: 55, column: 13)
!467 = !{!231, !232, i64 272}
!468 = !DILocation(line: 57, column: 8, scope: !466)
!469 = !DILocation(line: 57, column: 3, scope: !466)
!470 = !DILocation(line: 55, column: 2, scope: !457)
!471 = distinct !{!471, !470, !472}
!472 = !DILocation(line: 59, column: 2, scope: !457)
!473 = !DILocation(line: 63, column: 1, scope: !457)
!474 = distinct !DISubprogram(name: "SearchVARS", scope: !3, file: !3, line: 66, type: !475, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !477)
!475 = !DISubroutineType(types: !476)
!476 = !{!44, !26}
!477 = !{!478, !479}
!478 = !DILocalVariable(name: "target_name", arg: 1, scope: !474, file: !3, line: 66, type: !26)
!479 = !DILocalVariable(name: "pm", scope: !474, file: !3, line: 67, type: !44)
!480 = !DILocation(line: 0, scope: !474)
!481 = !DILocation(line: 70, column: 7, scope: !482)
!482 = distinct !DILexicalBlock(scope: !474, file: !3, line: 70, column: 6)
!483 = !DILocation(line: 70, column: 17, scope: !482)
!484 = !DILocation(line: 70, column: 13, scope: !482)
!485 = !DILocation(line: 76, column: 14, scope: !486)
!486 = distinct !DILexicalBlock(scope: !487, file: !3, line: 76, column: 7)
!487 = distinct !DILexicalBlock(scope: !474, file: !3, line: 75, column: 13)
!488 = !DILocation(line: 76, column: 7, scope: !486)
!489 = !DILocation(line: 76, column: 37, scope: !486)
!490 = !DILocation(line: 76, column: 7, scope: !487)
!491 = !DILocation(line: 80, column: 12, scope: !487)
!492 = !DILocation(line: 75, column: 2, scope: !474)
!493 = distinct !{!493, !492, !494}
!494 = !DILocation(line: 81, column: 2, scope: !474)
!495 = !DILocation(line: 85, column: 1, scope: !474)
!496 = distinct !DISubprogram(name: "InsertVARSObject", scope: !3, file: !3, line: 117, type: !497, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !499)
!497 = !DISubroutineType(types: !498)
!498 = !{!128, !44}
!499 = !{!500}
!500 = !DILocalVariable(name: "pm", arg: 1, scope: !496, file: !3, line: 117, type: !44)
!501 = !DILocation(line: 0, scope: !496)
!502 = !DILocation(line: 119, column: 7, scope: !503)
!503 = distinct !DILexicalBlock(scope: !496, file: !3, line: 119, column: 6)
!504 = !DILocation(line: 119, column: 17, scope: !503)
!505 = !DILocation(line: 119, column: 13, scope: !503)
!506 = !DILocation(line: 123, column: 6, scope: !496)
!507 = !DILocation(line: 123, column: 11, scope: !496)
!508 = !{!231, !232, i64 264}
!509 = !DILocation(line: 124, column: 13, scope: !496)
!510 = !DILocation(line: 124, column: 6, scope: !496)
!511 = !DILocation(line: 124, column: 11, scope: !496)
!512 = !DILocation(line: 125, column: 2, scope: !496)
!513 = !DILocation(line: 125, column: 9, scope: !496)
!514 = !DILocation(line: 125, column: 14, scope: !496)
!515 = !DILocation(line: 126, column: 8, scope: !496)
!516 = !DILocation(line: 128, column: 2, scope: !496)
!517 = !DILocation(line: 129, column: 1, scope: !496)
!518 = distinct !DISubprogram(name: "DeleteVARSObject", scope: !3, file: !3, line: 132, type: !497, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !519)
!519 = !{!520, !521}
!520 = !DILocalVariable(name: "target", arg: 1, scope: !518, file: !3, line: 132, type: !44)
!521 = !DILocalVariable(name: "pm", scope: !518, file: !3, line: 133, type: !44)
!522 = !DILocation(line: 0, scope: !518)
!523 = !DILocation(line: 135, column: 7, scope: !524)
!524 = distinct !DILexicalBlock(scope: !518, file: !3, line: 135, column: 6)
!525 = !DILocation(line: 135, column: 17, scope: !524)
!526 = !DILocation(line: 135, column: 13, scope: !524)
!527 = !DILocation(line: 0, scope: !528)
!528 = distinct !DILexicalBlock(scope: !529, file: !3, line: 141, column: 7)
!529 = distinct !DILexicalBlock(scope: !518, file: !3, line: 140, column: 13)
!530 = !DILocation(line: 140, column: 2, scope: !518)
!531 = !DILocation(line: 141, column: 7, scope: !529)
!532 = distinct !{!532, !530, !533}
!533 = !DILocation(line: 160, column: 2, scope: !518)
!534 = !DILocation(line: 0, scope: !529)
!535 = !DILocation(line: 147, column: 10, scope: !536)
!536 = distinct !DILexicalBlock(scope: !537, file: !3, line: 146, column: 20)
!537 = distinct !DILexicalBlock(scope: !529, file: !3, line: 146, column: 7)
!538 = !DILocation(line: 148, column: 4, scope: !536)
!539 = !DILocation(line: 149, column: 4, scope: !536)
!540 = !DILocation(line: 164, column: 1, scope: !518)
!541 = distinct !DISubprogram(name: "UpdateVARSObject", scope: !3, file: !3, line: 167, type: !422, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !542)
!542 = !{!543, !544, !545, !546}
!543 = !DILocalVariable(name: "name", arg: 1, scope: !541, file: !3, line: 167, type: !26)
!544 = !DILocalVariable(name: "type", arg: 2, scope: !541, file: !3, line: 167, type: !19)
!545 = !DILocalVariable(name: "value", arg: 3, scope: !541, file: !3, line: 167, type: !27)
!546 = !DILocalVariable(name: "pm", scope: !541, file: !3, line: 168, type: !44)
!547 = !DILocation(line: 0, scope: !541)
!548 = !DILocation(line: 170, column: 7, scope: !549)
!549 = distinct !DILexicalBlock(scope: !541, file: !3, line: 170, column: 6)
!550 = !DILocation(line: 170, column: 16, scope: !549)
!551 = !DILocation(line: 170, column: 12, scope: !549)
!552 = !DILocation(line: 170, column: 42, scope: !549)
!553 = !DILocation(line: 175, column: 12, scope: !554)
!554 = distinct !DILexicalBlock(scope: !541, file: !3, line: 175, column: 6)
!555 = !DILocation(line: 175, column: 30, scope: !554)
!556 = !DILocation(line: 175, column: 6, scope: !541)
!557 = !DILocation(line: 177, column: 13, scope: !558)
!558 = distinct !DILexicalBlock(scope: !559, file: !3, line: 177, column: 7)
!559 = distinct !DILexicalBlock(scope: !554, file: !3, line: 175, column: 39)
!560 = !DILocation(line: 177, column: 50, scope: !558)
!561 = !DILocation(line: 177, column: 7, scope: !559)
!562 = !DILocation(line: 180, column: 9, scope: !563)
!563 = distinct !DILexicalBlock(scope: !564, file: !3, line: 180, column: 8)
!564 = distinct !DILexicalBlock(scope: !558, file: !3, line: 179, column: 10)
!565 = !DILocation(line: 0, scope: !559)
!566 = !DILocation(line: 188, column: 10, scope: !567)
!567 = distinct !DILexicalBlock(scope: !541, file: !3, line: 188, column: 6)
!568 = !DILocation(line: 188, column: 15, scope: !567)
!569 = !DILocation(line: 188, column: 6, scope: !541)
!570 = !DILocation(line: 192, column: 6, scope: !541)
!571 = !DILocation(line: 193, column: 19, scope: !572)
!572 = distinct !DILexicalBlock(scope: !573, file: !3, line: 192, column: 22)
!573 = distinct !DILexicalBlock(scope: !541, file: !3, line: 192, column: 6)
!574 = !DILocation(line: 193, column: 3, scope: !572)
!575 = !DILocation(line: 195, column: 2, scope: !572)
!576 = !DILocation(line: 196, column: 10, scope: !577)
!577 = distinct !DILexicalBlock(scope: !578, file: !3, line: 195, column: 28)
!578 = distinct !DILexicalBlock(scope: !573, file: !3, line: 195, column: 13)
!579 = !DILocation(line: 196, column: 3, scope: !577)
!580 = !DILocation(line: 197, column: 2, scope: !577)
!581 = !DILocation(line: 200, column: 1, scope: !541)
