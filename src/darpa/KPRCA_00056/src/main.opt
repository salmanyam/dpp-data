; ModuleID = './main.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.FILE = type opaque
%struct.timeval = type { i32, i32 }
%struct.fd_set = type { [16 x i64] }

@txcnt = internal unnamed_addr global i32 0, align 4, !dbg !0
@txbuf = internal global [64 x i8] zeroinitializer, align 16, !dbg !41
@rxcnt = internal unnamed_addr global i32 0, align 4, !dbg !49
@rxidx = internal unnamed_addr global i32 0, align 4, !dbg !51
@rxbuf = internal global [64 x i8] zeroinitializer, align 16, !dbg !47
@stderr = external dso_local local_unnamed_addr constant %struct.FILE*, align 8
@.str = private unnamed_addr constant [17 x i8] c"Read failed: %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [84 x i8] c"Welcome to the headscratch interpreter.\0AEnter your program to have it executed!\0A%u\0A\00", align 1

; Function Attrs: nounwind uwtable
define dso_local void @send_flush() local_unnamed_addr #0 !dbg !57 {
  %1 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i64 0, metadata !61, metadata !DIExpression()), !dbg !65
  %2 = bitcast i64* %1 to i8*, !dbg !66
  br label %3, !dbg !67

3:                                                ; preds = %8, %0
  %4 = phi i64 [ 0, %0 ], [ %15, %8 ], !dbg !68
  call void @llvm.dbg.value(metadata i64 %4, metadata !61, metadata !DIExpression()), !dbg !65
  %5 = load i32, i32* @txcnt, align 4, !dbg !69, !tbaa !70
  %6 = sext i32 %5 to i64, !dbg !69
  %7 = icmp eq i64 %4, %6, !dbg !74
  br i1 %7, label %16, label %8, !dbg !67

8:                                                ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !66
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* @txbuf, i64 0, i64 %4, !dbg !75
  %10 = sub i64 %6, %4, !dbg !77
  call void @llvm.dbg.value(metadata i64* %1, metadata !63, metadata !DIExpression(DW_OP_deref)), !dbg !78
  %11 = call i32 @transmit(i32 1, i8* nonnull %9, i64 %10, i64* nonnull %1) #7, !dbg !79
  %12 = icmp eq i32 %11, 0, !dbg !80
  %13 = load i64, i64* %1, align 8, !dbg !81
  %14 = select i1 %12, i64 %13, i64 0, !dbg !81
  %15 = add i64 %14, %4, !dbg !81
  call void @llvm.dbg.value(metadata i64 %15, metadata !61, metadata !DIExpression()), !dbg !65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !82
  br i1 %12, label %3, label %16, !llvm.loop !83

16:                                               ; preds = %3, %8
  store i32 0, i32* @txcnt, align 4, !dbg !84, !tbaa !70
  ret void, !dbg !85
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare !dbg !6 dso_local i32 @transmit(i32, i8*, i64, i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define dso_local i32 @get_byte() local_unnamed_addr #0 !dbg !86 {
  %1 = alloca i64, align 8
  %2 = load i32, i32* @rxcnt, align 4, !dbg !93, !tbaa !70
  %3 = load i32, i32* @rxidx, align 4, !dbg !94, !tbaa !70
  %4 = icmp eq i32 %2, %3, !dbg !95
  br i1 %4, label %5, label %15, !dbg !96

5:                                                ; preds = %0
  %6 = bitcast i64* %1 to i8*, !dbg !97
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7, !dbg !97
  call void @llvm.dbg.value(metadata i64* %1, metadata !90, metadata !DIExpression(DW_OP_deref)), !dbg !98
  %7 = call i32 @receive(i32 0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @rxbuf, i64 0, i64 0), i64 64, i64* nonnull %1) #7, !dbg !99
  %8 = icmp ne i32 %7, 0, !dbg !101
  %9 = load i64, i64* %1, align 8, !dbg !102
  call void @llvm.dbg.value(metadata i64 %9, metadata !90, metadata !DIExpression()), !dbg !98
  %10 = icmp eq i64 %9, 0, !dbg !103
  %11 = or i1 %8, %10, !dbg !104
  br i1 %11, label %14, label %12, !dbg !104

12:                                               ; preds = %5
  %13 = trunc i64 %9 to i32, !dbg !105
  store i32 %13, i32* @rxcnt, align 4, !dbg !106, !tbaa !70
  store i32 0, i32* @rxidx, align 4, !dbg !107, !tbaa !70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !108
  br label %15

14:                                               ; preds = %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7, !dbg !108
  br label %22

15:                                               ; preds = %12, %0
  %16 = load i32, i32* @rxidx, align 4, !dbg !109, !tbaa !70
  %17 = add nsw i32 %16, 1, !dbg !109
  store i32 %17, i32* @rxidx, align 4, !dbg !109, !tbaa !70
  %18 = sext i32 %16 to i64, !dbg !110
  %19 = getelementptr inbounds [64 x i8], [64 x i8]* @rxbuf, i64 0, i64 %18, !dbg !110
  %20 = load i8, i8* %19, align 1, !dbg !110, !tbaa !111
  %21 = zext i8 %20 to i32, !dbg !112
  br label %22, !dbg !113

22:                                               ; preds = %14, %15
  %23 = phi i32 [ %21, %15 ], [ -1, %14 ], !dbg !114
  ret i32 %23, !dbg !115
}

declare !dbg !15 dso_local i32 @receive(i32, i8*, i64, i64*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local i32 @send_n_bytes(i32 %0, i8* %1, i64 %2) local_unnamed_addr #0 !dbg !116 {
  %4 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !122, metadata !DIExpression()), !dbg !127
  call void @llvm.dbg.value(metadata i8* %1, metadata !123, metadata !DIExpression()), !dbg !127
  call void @llvm.dbg.value(metadata i64 %2, metadata !124, metadata !DIExpression()), !dbg !127
  call void @llvm.dbg.value(metadata i64 0, metadata !125, metadata !DIExpression()), !dbg !127
  %5 = bitcast i64* %4 to i8*, !dbg !128
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7, !dbg !128
  call void @llvm.dbg.value(metadata i64 0, metadata !126, metadata !DIExpression()), !dbg !127
  store i64 0, i64* %4, align 8, !dbg !129, !tbaa !130
  call void @llvm.dbg.value(metadata i64 %2, metadata !124, metadata !DIExpression()), !dbg !127
  %6 = icmp eq i64 %2, 0, !dbg !132
  br i1 %6, label %17, label %7, !dbg !133

7:                                                ; preds = %3, %13
  %8 = phi i64 [ %15, %13 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %8, metadata !124, metadata !DIExpression()), !dbg !127
  %9 = icmp ult i64 %8, 64, !dbg !134
  %10 = select i1 %9, i64 %8, i64 64, !dbg !137
  call void @llvm.dbg.value(metadata i64* %4, metadata !126, metadata !DIExpression(DW_OP_deref)), !dbg !127
  %11 = call i32 @transmit(i32 %0, i8* %1, i64 %10, i64* nonnull %4) #7, !dbg !138
  %12 = icmp eq i32 %11, 0, !dbg !139
  br i1 %12, label %13, label %17, !dbg !140

13:                                               ; preds = %7
  %14 = load i64, i64* %4, align 8, !dbg !141, !tbaa !130
  call void @llvm.dbg.value(metadata i64 %14, metadata !126, metadata !DIExpression()), !dbg !127
  %15 = sub i64 %8, %14, !dbg !142
  call void @llvm.dbg.value(metadata i64 %15, metadata !124, metadata !DIExpression()), !dbg !127
  %16 = icmp eq i64 %15, 0, !dbg !132
  br i1 %16, label %17, label %7, !dbg !133, !llvm.loop !143

17:                                               ; preds = %7, %13, %3
  %18 = phi i32 [ 0, %3 ], [ -1, %7 ], [ 0, %13 ], !dbg !127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7, !dbg !145
  ret i32 %18, !dbg !145
}

; Function Attrs: nounwind uwtable
define dso_local i64 @read_until_or_timeout(i32 %0, i8* %1, i64 %2, i8 signext %3, i64 %4, i32* nocapture %5) local_unnamed_addr #0 !dbg !146 {
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %struct.timeval*
  %9 = alloca i32, align 4
  %10 = alloca %struct.fd_set, align 8
  store i64 %4, i64* %7, align 8
  call void @llvm.dbg.value(metadata i32 undef, metadata !150, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata i8* %1, metadata !151, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata i64 %2, metadata !152, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata i8 %3, metadata !153, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.declare(metadata %struct.timeval* %8, metadata !154, metadata !DIExpression()), !dbg !168
  call void @llvm.dbg.value(metadata i32* %5, metadata !155, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata i64 0, metadata !156, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata i64 0, metadata !157, metadata !DIExpression()), !dbg !167
  store i32 0, i32* %5, align 4, !dbg !169, !tbaa !70
  %11 = bitcast i32* %9 to i8*, !dbg !170
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #7, !dbg !170
  %12 = bitcast %struct.fd_set* %10 to i8*, !dbg !171
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %12) #7, !dbg !171
  call void @llvm.dbg.declare(metadata %struct.fd_set* %10, metadata !159, metadata !DIExpression()), !dbg !172
  call void @llvm.dbg.value(metadata i64 0, metadata !156, metadata !DIExpression()), !dbg !167
  %13 = icmp eq i64 %2, 0, !dbg !173
  br i1 %13, label %61, label %14, !dbg !174

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %10, i64 0, i32 0, i64 0, !dbg !175
  %16 = sext i8 %3 to i32, !dbg !176
  %17 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !177
  br label %20, !dbg !174

18:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i64 %53, metadata !156, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata i64 %53, metadata !156, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata i64 %53, metadata !156, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.value(metadata i64 %53, metadata !156, metadata !DIExpression()), !dbg !167
  %19 = icmp ult i64 %53, %2, !dbg !173
  br i1 %19, label %20, label %61, !dbg !174

20:                                               ; preds = %14, %18
  %21 = phi i64 [ undef, %14 ], [ %54, %18 ]
  %22 = phi i64 [ 0, %14 ], [ %53, %18 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !156, metadata !DIExpression()), !dbg !167
  %23 = load i64, i64* %15, align 8, !dbg !178, !tbaa !130
  %24 = or i64 %23, 1, !dbg !178
  store i64 %24, i64* %15, align 8, !dbg !178, !tbaa !130
  call void @llvm.dbg.value(metadata i32* %9, metadata !158, metadata !DIExpression(DW_OP_deref)), !dbg !167
  %25 = call i32 @fdwait(i32 1, %struct.fd_set* nonnull %10, %struct.fd_set* null, %struct.timeval* nonnull %8, i32* nonnull %9) #7, !dbg !179
  %26 = icmp eq i32 %25, 0, !dbg !181
  br i1 %26, label %28, label %27, !dbg !182

27:                                               ; preds = %20
  store i32 1, i32* %5, align 4, !dbg !183, !tbaa !70
  br label %61, !dbg !185

28:                                               ; preds = %20
  %29 = load i32, i32* %9, align 4, !dbg !186, !tbaa !70
  call void @llvm.dbg.value(metadata i32 %29, metadata !158, metadata !DIExpression()), !dbg !167
  %30 = icmp eq i32 %29, 1, !dbg !188
  br i1 %30, label %31, label %61, !dbg !189

31:                                               ; preds = %28, %55
  %32 = phi i64 [ %53, %55 ], [ %22, %28 ], !dbg !190
  %33 = phi i64 [ %54, %55 ], [ %21, %28 ]
  call void @llvm.dbg.value(metadata i64 %32, metadata !156, metadata !DIExpression()), !dbg !167
  %34 = call i32 @get_byte(), !dbg !191
  call void @llvm.dbg.value(metadata i32 %34, metadata !161, metadata !DIExpression()), !dbg !192
  %35 = icmp eq i32 %34, -1, !dbg !193
  br i1 %35, label %51, label %36, !dbg !195

36:                                               ; preds = %31
  %37 = trunc i32 %34 to i8, !dbg !196
  %38 = getelementptr inbounds i8, i8* %1, i64 %32, !dbg !197
  store i8 %37, i8* %38, align 1, !dbg !198, !tbaa !111
  %39 = add i64 %32, 1, !dbg !199
  %40 = getelementptr inbounds i8, i8* %1, i64 %39, !dbg !200
  store i8 0, i8* %40, align 1, !dbg !201, !tbaa !111
  call void @llvm.dbg.value(metadata i64 1, metadata !157, metadata !DIExpression()), !dbg !167
  %41 = call i8* @strchr(i8* nonnull %38, i32 %16), !dbg !202
  %42 = icmp eq i8* %41, null, !dbg !203
  br i1 %42, label %51, label %43, !dbg !204

43:                                               ; preds = %36
  %44 = ptrtoint i8* %41 to i64, !dbg !205
  %45 = ptrtoint i8* %38 to i64, !dbg !205
  %46 = sub i64 %44, %45, !dbg !205
  call void @llvm.dbg.value(metadata i64 %46, metadata !164, metadata !DIExpression()), !dbg !177
  %47 = add i64 %46, %32, !dbg !206
  call void @llvm.dbg.value(metadata i64 %47, metadata !156, metadata !DIExpression()), !dbg !167
  %48 = getelementptr inbounds i8, i8* %17, i64 %47, !dbg !207
  %49 = sub i64 0, %46, !dbg !208
  %50 = call i32 @send_n_bytes(i32 1, i8* nonnull %48, i64 %49), !dbg !209
  br label %51

51:                                               ; preds = %36, %31, %43
  %52 = phi i1 [ false, %43 ], [ false, %31 ], [ true, %36 ]
  %53 = phi i64 [ %47, %43 ], [ %32, %31 ], [ %39, %36 ], !dbg !167
  %54 = phi i64 [ %47, %43 ], [ 0, %31 ], [ %33, %36 ]
  call void @llvm.dbg.value(metadata i64 %53, metadata !156, metadata !DIExpression()), !dbg !167
  br i1 %52, label %55, label %61

55:                                               ; preds = %51
  %56 = load i32, i32* @rxcnt, align 4, !dbg !210, !tbaa !70
  %57 = load i32, i32* @rxidx, align 4, !dbg !211, !tbaa !70
  %58 = icmp ne i32 %56, %57, !dbg !212
  %59 = icmp ult i64 %53, %2, !dbg !213
  %60 = and i1 %59, %58, !dbg !213
  br i1 %60, label %31, label %18, !dbg !214, !llvm.loop !215

61:                                               ; preds = %28, %18, %51, %6, %27
  %62 = phi i64 [ 0, %27 ], [ 0, %6 ], [ %54, %51 ], [ %53, %18 ], [ %22, %28 ], !dbg !167
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %12) #7, !dbg !217
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7, !dbg !217
  ret i64 %62, !dbg !217
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare !dbg !19 dso_local i32 @fdwait(i32, %struct.fd_set*, %struct.fd_set*, %struct.timeval*, i32*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define dso_local i64 @strip_program(i8* %0, i64 %1) local_unnamed_addr #0 !dbg !218 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !222, metadata !DIExpression()), !dbg !227
  call void @llvm.dbg.value(metadata i64 %1, metadata !223, metadata !DIExpression()), !dbg !227
  %3 = call i8* @calloc(i64 1, i64 %1), !dbg !228
  call void @llvm.dbg.value(metadata i8* %3, metadata !224, metadata !DIExpression()), !dbg !227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %0, i64 %1, i1 false), !dbg !229
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %1, i1 false), !dbg !230
  call void @llvm.dbg.value(metadata i8* %0, metadata !225, metadata !DIExpression()), !dbg !227
  call void @llvm.dbg.value(metadata i64 0, metadata !226, metadata !DIExpression()), !dbg !227
  %4 = icmp eq i64 %1, 0, !dbg !231
  br i1 %4, label %16, label %5, !dbg !234

5:                                                ; preds = %2, %12
  %6 = phi i64 [ %14, %12 ], [ 0, %2 ]
  %7 = phi i8* [ %13, %12 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i64 %6, metadata !226, metadata !DIExpression()), !dbg !227
  call void @llvm.dbg.value(metadata i8* %7, metadata !225, metadata !DIExpression()), !dbg !227
  %8 = getelementptr inbounds i8, i8* %3, i64 %6, !dbg !235
  %9 = load i8, i8* %8, align 1, !dbg !235, !tbaa !111
  switch i8 %9, label %12 [
    i8 60, label %10
    i8 62, label %10
    i8 43, label %10
    i8 45, label %10
    i8 46, label %10
    i8 44, label %10
    i8 91, label %10
    i8 93, label %10
  ], !dbg !237

10:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5
  %11 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !238
  call void @llvm.dbg.value(metadata i8* %11, metadata !225, metadata !DIExpression()), !dbg !227
  store i8 %9, i8* %7, align 1, !dbg !239, !tbaa !111
  br label %12, !dbg !240

12:                                               ; preds = %5, %10
  %13 = phi i8* [ %11, %10 ], [ %7, %5 ], !dbg !227
  call void @llvm.dbg.value(metadata i8* %13, metadata !225, metadata !DIExpression()), !dbg !227
  %14 = add nuw i64 %6, 1, !dbg !241
  call void @llvm.dbg.value(metadata i64 %14, metadata !226, metadata !DIExpression()), !dbg !227
  %15 = icmp eq i64 %14, %1, !dbg !231
  br i1 %15, label %16, label %5, !dbg !234, !llvm.loop !242

16:                                               ; preds = %12, %2
  %17 = phi i8* [ %0, %2 ], [ %13, %12 ], !dbg !227
  call void @llvm.dbg.value(metadata i8* %17, metadata !225, metadata !DIExpression()), !dbg !227
  %18 = ptrtoint i8* %17 to i64, !dbg !244
  %19 = ptrtoint i8* %0 to i64, !dbg !244
  %20 = sub i64 %18, %19, !dbg !244
  ret i64 %20, !dbg !245
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @calloc(i64, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind uwtable
define dso_local i32 @execute_program(i8* readonly %0, i64 %1) local_unnamed_addr #0 !dbg !246 {
  %3 = alloca [32768 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %0, metadata !250, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i64 %1, metadata !251, metadata !DIExpression()), !dbg !270
  %4 = getelementptr inbounds [32768 x i8], [32768 x i8]* %3, i64 0, i64 0, !dbg !271
  call void @llvm.lifetime.start.p0i8(i64 32768, i8* nonnull %4) #7, !dbg !271
  call void @llvm.dbg.declare(metadata [32768 x i8]* %3, metadata !252, metadata !DIExpression()), !dbg !272
  call void @llvm.dbg.value(metadata i8* %0, metadata !256, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i8* %4, metadata !257, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i32 0, metadata !258, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i32 1, metadata !259, metadata !DIExpression()), !dbg !270
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(32768) %4, i8 0, i64 32768, i1 false), !dbg !273
  call void @llvm.dbg.value(metadata i32 1, metadata !259, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i32 0, metadata !258, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata [32768 x i8]* %3, metadata !257, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i8* %0, metadata !256, metadata !DIExpression()), !dbg !270
  %5 = getelementptr inbounds i8, i8* %0, i64 %1, !dbg !274
  %6 = icmp sgt i64 %1, 0, !dbg !274
  br i1 %6, label %7, label %87, !dbg !275

7:                                                ; preds = %2
  %8 = getelementptr inbounds [32768 x i8], [32768 x i8]* %3, i64 0, i64 0, !dbg !270
  call void @llvm.dbg.value(metadata i8* %8, metadata !257, metadata !DIExpression()), !dbg !270
  %9 = load %struct.FILE*, %struct.FILE** @stderr, align 8, !dbg !276
  br label %10, !dbg !275

10:                                               ; preds = %7, %76
  %11 = phi i8* [ %8, %7 ], [ %82, %76 ]
  %12 = phi i32 [ 1, %7 ], [ %79, %76 ]
  %13 = phi i32 [ 0, %7 ], [ %78, %76 ]
  %14 = phi i64 [ 0, %7 ], [ %77, %76 ]
  %15 = phi i8* [ %0, %7 ], [ %81, %76 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !259, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i32 %13, metadata !258, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i8* %15, metadata !256, metadata !DIExpression()), !dbg !270
  %16 = icmp sgt i32 %13, 0, !dbg !279
  %17 = load i8, i8* %15, align 1, !dbg !280, !tbaa !111
  br i1 %16, label %18, label %29, !dbg !281

18:                                               ; preds = %10
  switch i8 %17, label %23 [
    i8 93, label %19
    i8 91, label %21
  ], !dbg !282

19:                                               ; preds = %18
  %20 = sub nsw i32 %13, %12, !dbg !284
  call void @llvm.dbg.value(metadata i32 %20, metadata !258, metadata !DIExpression()), !dbg !270
  br label %23, !dbg !286

21:                                               ; preds = %18
  %22 = add nsw i32 %12, %13, !dbg !287
  call void @llvm.dbg.value(metadata i32 %22, metadata !258, metadata !DIExpression()), !dbg !270
  br label %23, !dbg !289

23:                                               ; preds = %18, %21, %19
  %24 = phi i32 [ %20, %19 ], [ %22, %21 ], [ %13, %18 ], !dbg !270
  call void @llvm.dbg.value(metadata i32 %24, metadata !258, metadata !DIExpression()), !dbg !270
  %25 = icmp slt i32 %24, 0, !dbg !290
  br i1 %25, label %87, label %26, !dbg !292

26:                                               ; preds = %23
  %27 = icmp eq i32 %24, 0, !dbg !293
  %28 = select i1 %27, i32 1, i32 %12, !dbg !295
  br label %76, !dbg !295

29:                                               ; preds = %10
  switch i8 %17, label %87 [
    i8 62, label %30
    i8 60, label %34
    i8 43, label %38
    i8 45, label %41
    i8 46, label %44
    i8 44, label %52
    i8 91, label %63
    i8 93, label %69
  ], !dbg !296

30:                                               ; preds = %29
  %31 = icmp slt i64 %14, 0, !dbg !297
  br i1 %31, label %87, label %32, !dbg !300

32:                                               ; preds = %30
  %33 = add nsw i64 %14, 1, !dbg !301
  call void @llvm.dbg.value(metadata i8* undef, metadata !257, metadata !DIExpression()), !dbg !270
  br label %76, !dbg !302

34:                                               ; preds = %29
  %35 = icmp ugt i64 %14, 32766, !dbg !303
  br i1 %35, label %87, label %36, !dbg !303

36:                                               ; preds = %34
  %37 = add nsw i64 %14, -1, !dbg !306
  call void @llvm.dbg.value(metadata i8* undef, metadata !257, metadata !DIExpression()), !dbg !270
  br label %76, !dbg !307

38:                                               ; preds = %29
  %39 = load i8, i8* %11, align 1, !dbg !308, !tbaa !111
  %40 = add i8 %39, 1, !dbg !308
  store i8 %40, i8* %11, align 1, !dbg !308, !tbaa !111
  br label %76, !dbg !310

41:                                               ; preds = %29
  %42 = load i8, i8* %11, align 1, !dbg !311, !tbaa !111
  %43 = add i8 %42, -1, !dbg !311
  store i8 %43, i8* %11, align 1, !dbg !311, !tbaa !111
  br label %76, !dbg !313

44:                                               ; preds = %29
  %45 = load i8, i8* %11, align 1, !dbg !314, !tbaa !111
  %46 = load i32, i32* @txcnt, align 4, !dbg !316, !tbaa !70
  %47 = add nsw i32 %46, 1, !dbg !316
  store i32 %47, i32* @txcnt, align 4, !dbg !316, !tbaa !70
  %48 = sext i32 %46 to i64, !dbg !317
  %49 = getelementptr inbounds [64 x i8], [64 x i8]* @txbuf, i64 0, i64 %48, !dbg !317
  store i8 %45, i8* %49, align 1, !dbg !318, !tbaa !111
  %50 = icmp eq i32 %47, 64, !dbg !319
  br i1 %50, label %51, label %76, !dbg !321

51:                                               ; preds = %44
  call void @send_flush(), !dbg !322
  br label %76, !dbg !324

52:                                               ; preds = %29
  call void @send_flush(), !dbg !325
  %53 = call i32 @get_byte(), !dbg !326
  call void @llvm.dbg.value(metadata i32 %53, metadata !260, metadata !DIExpression()), !dbg !327
  %54 = icmp eq i32 %53, -1, !dbg !328
  br i1 %54, label %55, label %57, !dbg !329

55:                                               ; preds = %52
  %56 = call i32 (%struct.FILE*, i8*, ...) @fprintf(%struct.FILE* %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 %14) #8, !dbg !330
  br label %61, !dbg !331

57:                                               ; preds = %52
  %58 = trunc i32 %53 to i8, !dbg !332
  store i8 %58, i8* %11, align 1, !dbg !333, !tbaa !111
  %59 = icmp eq i8 %58, 0, !dbg !334
  %60 = select i1 %59, i32 3, i32 0, !dbg !336
  br label %61, !dbg !336

61:                                               ; preds = %57, %55
  %62 = phi i32 [ 1, %55 ], [ %60, %57 ]
  switch i32 %62, label %87 [
    i32 0, label %76
    i32 3, label %86
  ]

63:                                               ; preds = %29
  %64 = load i8, i8* %11, align 1, !dbg !337, !tbaa !111
  %65 = icmp eq i8 %64, 0, !dbg !341
  %66 = zext i1 %65 to i32, !dbg !342
  %67 = add nsw i32 %13, %66, !dbg !342
  %68 = select i1 %65, i32 1, i32 %12, !dbg !342
  br label %76, !dbg !342

69:                                               ; preds = %29
  %70 = load i8, i8* %11, align 1, !dbg !343, !tbaa !111
  %71 = icmp eq i8 %70, 0, !dbg !347
  %72 = xor i1 %71, true, !dbg !348
  %73 = zext i1 %72 to i32, !dbg !348
  %74 = add nsw i32 %13, %73, !dbg !348
  %75 = select i1 %71, i32 %12, i32 -1, !dbg !348
  br label %76, !dbg !348

76:                                               ; preds = %69, %63, %26, %32, %38, %51, %44, %61, %41, %36
  %77 = phi i64 [ %33, %32 ], [ %37, %36 ], [ %14, %38 ], [ %14, %41 ], [ %14, %51 ], [ %14, %44 ], [ %14, %61 ], [ %14, %26 ], [ %14, %63 ], [ %14, %69 ]
  %78 = phi i32 [ %13, %32 ], [ %13, %36 ], [ %13, %38 ], [ %13, %41 ], [ %13, %51 ], [ %13, %44 ], [ %13, %61 ], [ %24, %26 ], [ %67, %63 ], [ %74, %69 ], !dbg !270
  %79 = phi i32 [ %12, %32 ], [ %12, %36 ], [ %12, %38 ], [ %12, %41 ], [ %12, %51 ], [ %12, %44 ], [ %12, %61 ], [ %28, %26 ], [ %68, %63 ], [ %75, %69 ], !dbg !270
  call void @llvm.dbg.value(metadata i32 %79, metadata !259, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i32 %78, metadata !258, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i8* undef, metadata !257, metadata !DIExpression()), !dbg !270
  %80 = sext i32 %79 to i64, !dbg !349
  %81 = getelementptr inbounds i8, i8* %15, i64 %80, !dbg !349
  call void @llvm.dbg.value(metadata i8* %81, metadata !256, metadata !DIExpression()), !dbg !270
  %82 = getelementptr inbounds [32768 x i8], [32768 x i8]* %3, i64 0, i64 %77, !dbg !270
  call void @llvm.dbg.value(metadata i8* %82, metadata !257, metadata !DIExpression()), !dbg !270
  %83 = icmp uge i8* %81, %0, !dbg !350
  %84 = icmp ult i8* %81, %5, !dbg !274
  %85 = and i1 %84, %83, !dbg !274
  br i1 %85, label %10, label %86, !dbg !275, !llvm.loop !351

86:                                               ; preds = %76, %61
  br label %87, !dbg !353

87:                                               ; preds = %29, %34, %30, %23, %61, %86, %2
  %88 = phi i32 [ 0, %2 ], [ 0, %86 ], [ -1, %61 ], [ -1, %23 ], [ -1, %30 ], [ -1, %34 ], [ -1, %29 ], !dbg !270
  call void @llvm.lifetime.end.p0i8(i64 32768, i8* nonnull %4) #7, !dbg !353
  ret i32 %88, !dbg !353
}

; Function Attrs: nofree nounwind
declare dso_local i32 @fprintf(%struct.FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #0 !dbg !354 {
  %1 = alloca [8192 x i8], align 16
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32* inttoptr (i64 1128775684 to i32*), metadata !356, metadata !DIExpression()), !dbg !363
  %3 = getelementptr inbounds [8192 x i8], [8192 x i8]* %1, i64 0, i64 0, !dbg !364
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %3) #7, !dbg !364
  call void @llvm.dbg.declare(metadata [8192 x i8]* %1, metadata !357, metadata !DIExpression()), !dbg !365
  %4 = bitcast i32* %2 to i8*, !dbg !366
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #7, !dbg !366
  %5 = load i32, i32* inttoptr (i64 1128775684 to i32*), align 4, !dbg !367, !tbaa !70
  %6 = load i32, i32* inttoptr (i64 1128775688 to i32*), align 8, !dbg !368, !tbaa !70
  %7 = xor i32 %6, %5, !dbg !369
  %8 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1, i64 0, i64 0), i32 %7), !dbg !370
  call void @llvm.dbg.value(metadata i32* %2, metadata !361, metadata !DIExpression(DW_OP_deref)), !dbg !363
  %9 = call i64 @read_until_or_timeout(i32 undef, i8* nonnull %3, i64 8192, i8 signext 10, i64 3, i32* nonnull %2), !dbg !371
  %10 = load i32, i32* %2, align 4, !dbg !372, !tbaa !70
  call void @llvm.dbg.value(metadata i32 %10, metadata !361, metadata !DIExpression()), !dbg !363
  %11 = icmp eq i32 %10, 0, !dbg !372
  br i1 %11, label %12, label %32, !dbg !374

12:                                               ; preds = %0
  %13 = call i64 @strip_program(i8* nonnull %3, i64 8192), !dbg !375
  call void @llvm.dbg.value(metadata i64 %13, metadata !362, metadata !DIExpression()), !dbg !363
  %14 = icmp eq i64 %13, 0, !dbg !376
  br i1 %14, label %32, label %15, !dbg !378

15:                                               ; preds = %12
  %16 = call i32 @execute_program(i8* nonnull %3, i64 %13), !dbg !379
  %17 = icmp slt i32 %16, 0, !dbg !381
  br i1 %17, label %32, label %18, !dbg !382

18:                                               ; preds = %15
  call void @send_flush(), !dbg !383
  %19 = load i32, i32* @txcnt, align 4, !dbg !384, !tbaa !70
  %20 = add nsw i32 %19, 1, !dbg !384
  store i32 %20, i32* @txcnt, align 4, !dbg !384, !tbaa !70
  %21 = sext i32 %19 to i64, !dbg !385
  %22 = getelementptr inbounds [64 x i8], [64 x i8]* @txbuf, i64 0, i64 %21, !dbg !385
  store i8 67, i8* %22, align 1, !dbg !386, !tbaa !111
  %23 = add nsw i32 %19, 2, !dbg !387
  store i32 %23, i32* @txcnt, align 4, !dbg !387, !tbaa !70
  %24 = sext i32 %20 to i64, !dbg !388
  %25 = getelementptr inbounds [64 x i8], [64 x i8]* @txbuf, i64 0, i64 %24, !dbg !388
  store i8 71, i8* %25, align 1, !dbg !389, !tbaa !111
  %26 = add nsw i32 %19, 3, !dbg !390
  store i32 %26, i32* @txcnt, align 4, !dbg !390, !tbaa !70
  %27 = sext i32 %23 to i64, !dbg !391
  %28 = getelementptr inbounds [64 x i8], [64 x i8]* @txbuf, i64 0, i64 %27, !dbg !391
  store i8 -64, i8* %28, align 1, !dbg !392, !tbaa !111
  %29 = add nsw i32 %19, 4, !dbg !393
  store i32 %29, i32* @txcnt, align 4, !dbg !393, !tbaa !70
  %30 = sext i32 %26 to i64, !dbg !394
  %31 = getelementptr inbounds [64 x i8], [64 x i8]* @txbuf, i64 0, i64 %30, !dbg !394
  store i8 0, i8* %31, align 1, !dbg !395, !tbaa !111
  call void @send_flush(), !dbg !396
  br label %32, !dbg !397

32:                                               ; preds = %18, %12, %15, %0
  %33 = phi i32 [ -1, %0 ], [ 0, %18 ], [ -1, %12 ], [ -1, %15 ], !dbg !363
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #7, !dbg !398
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %3) #7, !dbg !398
  ret i32 %33, !dbg !398
}

; Function Attrs: nofree nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #5

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #7 = { nounwind }
attributes #8 = { cold }

!llvm.dbg.cu = !{!2}
!llvm.ident = !{!53}
!llvm.module.flags = !{!54, !55, !56}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "txcnt", scope: !2, file: !3, line: 39, type: !10, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !40, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "service.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00056/src")
!4 = !{}
!5 = !{!6, !15, !10, !19, !18, !38}
!6 = !DISubprogram(name: "transmit", scope: !7, file: !7, line: 51, type: !8, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!7 = !DIFile(filename: "./libcgc.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00056/src")
!8 = !DISubroutineType(types: !9)
!9 = !{!10, !10, !11, !13, !14}
!10 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!13 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!15 = !DISubprogram(name: "receive", scope: !7, file: !7, line: 52, type: !16, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!16 = !DISubroutineType(types: !17)
!17 = !{!10, !10, !18, !13, !14}
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!19 = !DISubprogram(name: "fdwait", scope: !7, file: !7, line: 53, type: !20, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!20 = !DISubroutineType(types: !21)
!21 = !{!10, !10, !22, !22, !31, !37}
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 21, size: 1024, elements: !24)
!24 = !{!25}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "_fd_bits", scope: !23, file: !7, line: 22, baseType: !26, size: 1024)
!26 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 1024, elements: !29)
!27 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fd_mask", file: !7, line: 17, baseType: !28)
!28 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!29 = !{!30}
!30 = !DISubrange(count: 16, lowerBound: 0)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!32 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !33)
!33 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !7, line: 38, size: 64, elements: !34)
!34 = !{!35, !36}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !33, file: !7, line: 39, baseType: !10, size: 32)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !33, file: !7, line: 40, baseType: !10, size: 32, offset: 32)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!39 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!40 = !{!41, !0, !47, !49, !51}
!41 = !DIGlobalVariableExpression(var: !42, expr: !DIExpression())
!42 = distinct !DIGlobalVariable(name: "txbuf", scope: !2, file: !3, line: 38, type: !43, isLocal: true, isDefinition: true)
!43 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 512, elements: !45)
!44 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!45 = !{!46}
!46 = !DISubrange(count: 64, lowerBound: 0)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(name: "rxbuf", scope: !2, file: !3, line: 40, type: !43, isLocal: true, isDefinition: true)
!49 = !DIGlobalVariableExpression(var: !50, expr: !DIExpression())
!50 = distinct !DIGlobalVariable(name: "rxcnt", scope: !2, file: !3, line: 41, type: !10, isLocal: true, isDefinition: true)
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression())
!52 = distinct !DIGlobalVariable(name: "rxidx", scope: !2, file: !3, line: 42, type: !10, isLocal: true, isDefinition: true)
!53 = !{!"clang version 10.0.0-4ubuntu1 "}
!54 = !{i32 7, !"Dwarf Version", i32 4}
!55 = !{i32 2, !"Debug Info Version", i32 3}
!56 = !{i32 1, !"wchar_size", i32 4}
!57 = distinct !DISubprogram(name: "send_flush", scope: !3, file: !3, line: 44, type: !58, scopeLine: 44, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !60)
!58 = !DISubroutineType(types: !59)
!59 = !{null}
!60 = !{!61, !63}
!61 = !DILocalVariable(name: "sent", scope: !57, file: !3, line: 45, type: !62)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !7, line: 10, baseType: !13)
!63 = !DILocalVariable(name: "tx", scope: !64, file: !3, line: 48, type: !62)
!64 = distinct !DILexicalBlock(scope: !57, file: !3, line: 47, column: 3)
!65 = !DILocation(line: 0, scope: !57)
!66 = !DILocation(line: 48, column: 7, scope: !64)
!67 = !DILocation(line: 46, column: 3, scope: !57)
!68 = !DILocation(line: 45, column: 10, scope: !57)
!69 = !DILocation(line: 46, column: 10, scope: !57)
!70 = !{!71, !71, i64 0}
!71 = !{!"int", !72, i64 0}
!72 = !{!"omnipotent char", !73, i64 0}
!73 = !{!"Simple C/C++ TBAA"}
!74 = !DILocation(line: 46, column: 16, scope: !57)
!75 = !DILocation(line: 49, column: 34, scope: !76)
!76 = distinct !DILexicalBlock(scope: !64, file: !3, line: 49, column: 11)
!77 = !DILocation(line: 49, column: 48, scope: !76)
!78 = !DILocation(line: 0, scope: !64)
!79 = !DILocation(line: 49, column: 11, scope: !76)
!80 = !DILocation(line: 49, column: 61, scope: !76)
!81 = !DILocation(line: 49, column: 11, scope: !64)
!82 = !DILocation(line: 52, column: 3, scope: !57)
!83 = distinct !{!83, !67, !82}
!84 = !DILocation(line: 53, column: 9, scope: !57)
!85 = !DILocation(line: 54, column: 1, scope: !57)
!86 = distinct !DISubprogram(name: "get_byte", scope: !3, file: !3, line: 56, type: !87, scopeLine: 56, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !89)
!87 = !DISubroutineType(types: !88)
!88 = !{!10}
!89 = !{!90}
!90 = !DILocalVariable(name: "rxd", scope: !91, file: !3, line: 59, type: !62)
!91 = distinct !DILexicalBlock(scope: !92, file: !3, line: 58, column: 3)
!92 = distinct !DILexicalBlock(scope: !86, file: !3, line: 57, column: 7)
!93 = !DILocation(line: 57, column: 7, scope: !92)
!94 = !DILocation(line: 57, column: 16, scope: !92)
!95 = !DILocation(line: 57, column: 13, scope: !92)
!96 = !DILocation(line: 57, column: 7, scope: !86)
!97 = !DILocation(line: 59, column: 7, scope: !91)
!98 = !DILocation(line: 0, scope: !91)
!99 = !DILocation(line: 60, column: 11, scope: !100)
!100 = distinct !DILexicalBlock(scope: !91, file: !3, line: 60, column: 11)
!101 = !DILocation(line: 60, column: 51, scope: !100)
!102 = !DILocation(line: 60, column: 59, scope: !100)
!103 = !DILocation(line: 60, column: 63, scope: !100)
!104 = !DILocation(line: 60, column: 56, scope: !100)
!105 = !DILocation(line: 62, column: 15, scope: !91)
!106 = !DILocation(line: 62, column: 13, scope: !91)
!107 = !DILocation(line: 63, column: 13, scope: !91)
!108 = !DILocation(line: 64, column: 3, scope: !92)
!109 = !DILocation(line: 65, column: 26, scope: !86)
!110 = !DILocation(line: 65, column: 15, scope: !86)
!111 = !{!72, !72, i64 0}
!112 = !DILocation(line: 65, column: 10, scope: !86)
!113 = !DILocation(line: 65, column: 3, scope: !86)
!114 = !DILocation(line: 0, scope: !86)
!115 = !DILocation(line: 66, column: 1, scope: !86)
!116 = distinct !DISubprogram(name: "send_n_bytes", scope: !3, file: !3, line: 68, type: !117, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !121)
!117 = !DISubroutineType(types: !118)
!118 = !{!10, !10, !119, !62}
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!121 = !{!122, !123, !124, !125, !126}
!122 = !DILocalVariable(name: "fd", arg: 1, scope: !116, file: !3, line: 68, type: !10)
!123 = !DILocalVariable(name: "buf", arg: 2, scope: !116, file: !3, line: 68, type: !119)
!124 = !DILocalVariable(name: "n", arg: 3, scope: !116, file: !3, line: 68, type: !62)
!125 = !DILocalVariable(name: "nsent", scope: !116, file: !3, line: 69, type: !62)
!126 = !DILocalVariable(name: "tx_amt", scope: !116, file: !3, line: 70, type: !62)
!127 = !DILocation(line: 0, scope: !116)
!128 = !DILocation(line: 70, column: 3, scope: !116)
!129 = !DILocation(line: 70, column: 10, scope: !116)
!130 = !{!131, !131, i64 0}
!131 = !{!"long", !72, i64 0}
!132 = !DILocation(line: 71, column: 12, scope: !116)
!133 = !DILocation(line: 71, column: 3, scope: !116)
!134 = !DILocation(line: 73, column: 45, scope: !135)
!135 = distinct !DILexicalBlock(scope: !136, file: !3, line: 73, column: 9)
!136 = distinct !DILexicalBlock(scope: !116, file: !3, line: 72, column: 3)
!137 = !DILocation(line: 73, column: 35, scope: !135)
!138 = !DILocation(line: 73, column: 9, scope: !135)
!139 = !DILocation(line: 73, column: 93, scope: !135)
!140 = !DILocation(line: 73, column: 9, scope: !136)
!141 = !DILocation(line: 76, column: 10, scope: !136)
!142 = !DILocation(line: 76, column: 7, scope: !136)
!143 = distinct !{!143, !133, !144}
!144 = !DILocation(line: 77, column: 3, scope: !116)
!145 = !DILocation(line: 80, column: 1, scope: !116)
!146 = distinct !DISubprogram(name: "read_until_or_timeout", scope: !3, file: !3, line: 82, type: !147, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !149)
!147 = !DISubroutineType(types: !148)
!148 = !{!62, !10, !119, !62, !120, !33, !37}
!149 = !{!150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !161, !164}
!150 = !DILocalVariable(name: "fd", arg: 1, scope: !146, file: !3, line: 82, type: !10)
!151 = !DILocalVariable(name: "buf", arg: 2, scope: !146, file: !3, line: 82, type: !119)
!152 = !DILocalVariable(name: "max", arg: 3, scope: !146, file: !3, line: 82, type: !62)
!153 = !DILocalVariable(name: "term", arg: 4, scope: !146, file: !3, line: 82, type: !120)
!154 = !DILocalVariable(name: "t", arg: 5, scope: !146, file: !3, line: 82, type: !33)
!155 = !DILocalVariable(name: "err", arg: 6, scope: !146, file: !3, line: 82, type: !37)
!156 = !DILocalVariable(name: "nread", scope: !146, file: !3, line: 83, type: !62)
!157 = !DILocalVariable(name: "rx_amt", scope: !146, file: !3, line: 84, type: !62)
!158 = !DILocalVariable(name: "rdy", scope: !146, file: !3, line: 87, type: !10)
!159 = !DILocalVariable(name: "fs", scope: !146, file: !3, line: 88, type: !160)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !7, line: 23, baseType: !23)
!161 = !DILocalVariable(name: "chr", scope: !162, file: !3, line: 104, type: !10)
!162 = distinct !DILexicalBlock(scope: !163, file: !3, line: 103, column: 5)
!163 = distinct !DILexicalBlock(scope: !146, file: !3, line: 91, column: 3)
!164 = !DILocalVariable(name: "until_term", scope: !165, file: !3, line: 113, type: !62)
!165 = distinct !DILexicalBlock(scope: !166, file: !3, line: 112, column: 9)
!166 = distinct !DILexicalBlock(scope: !162, file: !3, line: 111, column: 13)
!167 = !DILocation(line: 0, scope: !146)
!168 = !DILocation(line: 82, column: 87, scope: !146)
!169 = !DILocation(line: 85, column: 8, scope: !146)
!170 = !DILocation(line: 87, column: 3, scope: !146)
!171 = !DILocation(line: 88, column: 3, scope: !146)
!172 = !DILocation(line: 88, column: 10, scope: !146)
!173 = !DILocation(line: 90, column: 16, scope: !146)
!174 = !DILocation(line: 90, column: 3, scope: !146)
!175 = !DILocation(line: 0, scope: !163)
!176 = !DILocation(line: 0, scope: !166)
!177 = !DILocation(line: 0, scope: !165)
!178 = !DILocation(line: 92, column: 5, scope: !163)
!179 = !DILocation(line: 93, column: 9, scope: !180)
!180 = distinct !DILexicalBlock(scope: !163, file: !3, line: 93, column: 9)
!181 = !DILocation(line: 93, column: 48, scope: !180)
!182 = !DILocation(line: 93, column: 9, scope: !163)
!183 = !DILocation(line: 95, column: 12, scope: !184)
!184 = distinct !DILexicalBlock(scope: !180, file: !3, line: 94, column: 5)
!185 = !DILocation(line: 96, column: 7, scope: !184)
!186 = !DILocation(line: 99, column: 9, scope: !187)
!187 = distinct !DILexicalBlock(scope: !163, file: !3, line: 99, column: 9)
!188 = !DILocation(line: 99, column: 13, scope: !187)
!189 = !DILocation(line: 99, column: 9, scope: !163)
!190 = !DILocation(line: 83, column: 10, scope: !146)
!191 = !DILocation(line: 104, column: 19, scope: !162)
!192 = !DILocation(line: 0, scope: !162)
!193 = !DILocation(line: 105, column: 17, scope: !194)
!194 = distinct !DILexicalBlock(scope: !162, file: !3, line: 105, column: 13)
!195 = !DILocation(line: 105, column: 13, scope: !162)
!196 = !DILocation(line: 107, column: 22, scope: !162)
!197 = !DILocation(line: 107, column: 9, scope: !162)
!198 = !DILocation(line: 107, column: 20, scope: !162)
!199 = !DILocation(line: 108, column: 18, scope: !162)
!200 = !DILocation(line: 108, column: 9, scope: !162)
!201 = !DILocation(line: 108, column: 22, scope: !162)
!202 = !DILocation(line: 111, column: 13, scope: !166)
!203 = !DILocation(line: 111, column: 39, scope: !166)
!204 = !DILocation(line: 111, column: 13, scope: !162)
!205 = !DILocation(line: 113, column: 57, scope: !165)
!206 = !DILocation(line: 114, column: 17, scope: !165)
!207 = !DILocation(line: 115, column: 44, scope: !165)
!208 = !DILocation(line: 115, column: 69, scope: !165)
!209 = !DILocation(line: 115, column: 11, scope: !165)
!210 = !DILocation(line: 122, column: 14, scope: !163)
!211 = !DILocation(line: 122, column: 23, scope: !163)
!212 = !DILocation(line: 122, column: 20, scope: !163)
!213 = !DILocation(line: 122, column: 29, scope: !163)
!214 = !DILocation(line: 122, column: 5, scope: !162)
!215 = distinct !{!215, !174, !216}
!216 = !DILocation(line: 124, column: 3, scope: !146)
!217 = !DILocation(line: 127, column: 1, scope: !146)
!218 = distinct !DISubprogram(name: "strip_program", scope: !3, file: !3, line: 129, type: !219, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !221)
!219 = !DISubroutineType(types: !220)
!220 = !{!62, !119, !62}
!221 = !{!222, !223, !224, !225, !226}
!222 = !DILocalVariable(name: "buf", arg: 1, scope: !218, file: !3, line: 129, type: !119)
!223 = !DILocalVariable(name: "max", arg: 2, scope: !218, file: !3, line: 129, type: !62)
!224 = !DILocalVariable(name: "cpy", scope: !218, file: !3, line: 131, type: !119)
!225 = !DILocalVariable(name: "p", scope: !218, file: !3, line: 135, type: !119)
!226 = !DILocalVariable(name: "i", scope: !218, file: !3, line: 136, type: !62)
!227 = !DILocation(line: 0, scope: !218)
!228 = !DILocation(line: 131, column: 15, scope: !218)
!229 = !DILocation(line: 132, column: 3, scope: !218)
!230 = !DILocation(line: 133, column: 3, scope: !218)
!231 = !DILocation(line: 138, column: 17, scope: !232)
!232 = distinct !DILexicalBlock(scope: !233, file: !3, line: 138, column: 3)
!233 = distinct !DILexicalBlock(scope: !218, file: !3, line: 138, column: 3)
!234 = !DILocation(line: 138, column: 3, scope: !233)
!235 = !DILocation(line: 140, column: 9, scope: !236)
!236 = distinct !DILexicalBlock(scope: !232, file: !3, line: 140, column: 9)
!237 = !DILocation(line: 140, column: 23, scope: !236)
!238 = !DILocation(line: 149, column: 9, scope: !236)
!239 = !DILocation(line: 149, column: 12, scope: !236)
!240 = !DILocation(line: 149, column: 7, scope: !236)
!241 = !DILocation(line: 138, column: 25, scope: !232)
!242 = distinct !{!242, !234, !243}
!243 = !DILocation(line: 149, column: 19, scope: !233)
!244 = !DILocation(line: 151, column: 12, scope: !218)
!245 = !DILocation(line: 151, column: 3, scope: !218)
!246 = distinct !DISubprogram(name: "execute_program", scope: !3, file: !3, line: 154, type: !247, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !249)
!247 = !DISubroutineType(types: !248)
!248 = !{!10, !119, !62}
!249 = !{!250, !251, !252, !256, !257, !258, !259, !260}
!250 = !DILocalVariable(name: "program", arg: 1, scope: !246, file: !3, line: 154, type: !119)
!251 = !DILocalVariable(name: "max", arg: 2, scope: !246, file: !3, line: 154, type: !62)
!252 = !DILocalVariable(name: "data", scope: !246, file: !3, line: 155, type: !253)
!253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 262144, elements: !254)
!254 = !{!255}
!255 = !DISubrange(count: 32768, lowerBound: 0)
!256 = !DILocalVariable(name: "ip", scope: !246, file: !3, line: 156, type: !119)
!257 = !DILocalVariable(name: "dp", scope: !246, file: !3, line: 157, type: !119)
!258 = !DILocalVariable(name: "depth", scope: !246, file: !3, line: 158, type: !10)
!259 = !DILocalVariable(name: "direction", scope: !246, file: !3, line: 159, type: !10)
!260 = !DILocalVariable(name: "ch", scope: !261, file: !3, line: 235, type: !10)
!261 = distinct !DILexicalBlock(scope: !262, file: !3, line: 232, column: 5)
!262 = distinct !DILexicalBlock(scope: !263, file: !3, line: 231, column: 14)
!263 = distinct !DILexicalBlock(scope: !264, file: !3, line: 221, column: 14)
!264 = distinct !DILexicalBlock(scope: !265, file: !3, line: 215, column: 14)
!265 = distinct !DILexicalBlock(scope: !266, file: !3, line: 209, column: 14)
!266 = distinct !DILexicalBlock(scope: !267, file: !3, line: 197, column: 14)
!267 = distinct !DILexicalBlock(scope: !268, file: !3, line: 181, column: 14)
!268 = distinct !DILexicalBlock(scope: !269, file: !3, line: 165, column: 9)
!269 = distinct !DILexicalBlock(scope: !246, file: !3, line: 164, column: 3)
!270 = !DILocation(line: 0, scope: !246)
!271 = !DILocation(line: 155, column: 3, scope: !246)
!272 = !DILocation(line: 155, column: 8, scope: !246)
!273 = !DILocation(line: 161, column: 3, scope: !246)
!274 = !DILocation(line: 163, column: 24, scope: !246)
!275 = !DILocation(line: 163, column: 3, scope: !246)
!276 = !DILocation(line: 0, scope: !277)
!277 = distinct !DILexicalBlock(scope: !278, file: !3, line: 237, column: 7)
!278 = distinct !DILexicalBlock(scope: !261, file: !3, line: 236, column: 11)
!279 = !DILocation(line: 165, column: 15, scope: !268)
!280 = !DILocation(line: 0, scope: !268)
!281 = !DILocation(line: 165, column: 9, scope: !269)
!282 = !DILocation(line: 167, column: 11, scope: !283)
!283 = distinct !DILexicalBlock(scope: !268, file: !3, line: 166, column: 5)
!284 = !DILocation(line: 168, column: 15, scope: !285)
!285 = distinct !DILexicalBlock(scope: !283, file: !3, line: 167, column: 11)
!286 = !DILocation(line: 168, column: 9, scope: !285)
!287 = !DILocation(line: 170, column: 15, scope: !288)
!288 = distinct !DILexicalBlock(scope: !285, file: !3, line: 169, column: 16)
!289 = !DILocation(line: 170, column: 9, scope: !288)
!290 = !DILocation(line: 172, column: 17, scope: !291)
!291 = distinct !DILexicalBlock(scope: !283, file: !3, line: 172, column: 11)
!292 = !DILocation(line: 172, column: 11, scope: !283)
!293 = !DILocation(line: 177, column: 22, scope: !294)
!294 = distinct !DILexicalBlock(scope: !291, file: !3, line: 177, column: 16)
!295 = !DILocation(line: 177, column: 16, scope: !291)
!296 = !DILocation(line: 181, column: 14, scope: !268)
!297 = !DILocation(line: 187, column: 14, scope: !298)
!298 = distinct !DILexicalBlock(scope: !299, file: !3, line: 187, column: 11)
!299 = distinct !DILexicalBlock(scope: !267, file: !3, line: 182, column: 5)
!300 = !DILocation(line: 187, column: 11, scope: !299)
!301 = !DILocation(line: 194, column: 11, scope: !298)
!302 = !DILocation(line: 195, column: 5, scope: !299)
!303 = !DILocation(line: 200, column: 42, scope: !304)
!304 = distinct !DILexicalBlock(scope: !305, file: !3, line: 200, column: 11)
!305 = distinct !DILexicalBlock(scope: !266, file: !3, line: 198, column: 5)
!306 = !DILocation(line: 206, column: 11, scope: !304)
!307 = !DILocation(line: 207, column: 5, scope: !305)
!308 = !DILocation(line: 212, column: 12, scope: !309)
!309 = distinct !DILexicalBlock(scope: !265, file: !3, line: 210, column: 5)
!310 = !DILocation(line: 213, column: 5, scope: !309)
!311 = !DILocation(line: 218, column: 12, scope: !312)
!312 = distinct !DILexicalBlock(scope: !264, file: !3, line: 216, column: 5)
!313 = !DILocation(line: 219, column: 5, scope: !312)
!314 = !DILocation(line: 224, column: 24, scope: !315)
!315 = distinct !DILexicalBlock(scope: !263, file: !3, line: 222, column: 5)
!316 = !DILocation(line: 224, column: 18, scope: !315)
!317 = !DILocation(line: 224, column: 7, scope: !315)
!318 = !DILocation(line: 224, column: 22, scope: !315)
!319 = !DILocation(line: 225, column: 17, scope: !320)
!320 = distinct !DILexicalBlock(scope: !315, file: !3, line: 225, column: 11)
!321 = !DILocation(line: 225, column: 11, scope: !315)
!322 = !DILocation(line: 227, column: 11, scope: !323)
!323 = distinct !DILexicalBlock(scope: !320, file: !3, line: 226, column: 7)
!324 = !DILocation(line: 228, column: 7, scope: !323)
!325 = !DILocation(line: 234, column: 7, scope: !261)
!326 = !DILocation(line: 235, column: 16, scope: !261)
!327 = !DILocation(line: 0, scope: !261)
!328 = !DILocation(line: 236, column: 14, scope: !278)
!329 = !DILocation(line: 236, column: 11, scope: !261)
!330 = !DILocation(line: 238, column: 11, scope: !277)
!331 = !DILocation(line: 239, column: 11, scope: !277)
!332 = !DILocation(line: 241, column: 13, scope: !261)
!333 = !DILocation(line: 241, column: 11, scope: !261)
!334 = !DILocation(line: 242, column: 12, scope: !335)
!335 = distinct !DILexicalBlock(scope: !261, file: !3, line: 242, column: 11)
!336 = !DILocation(line: 0, scope: !262)
!337 = !DILocation(line: 252, column: 11, scope: !338)
!338 = distinct !DILexicalBlock(scope: !339, file: !3, line: 252, column: 11)
!339 = distinct !DILexicalBlock(scope: !340, file: !3, line: 250, column: 5)
!340 = distinct !DILexicalBlock(scope: !262, file: !3, line: 249, column: 14)
!341 = !DILocation(line: 252, column: 15, scope: !338)
!342 = !DILocation(line: 252, column: 11, scope: !339)
!343 = !DILocation(line: 261, column: 11, scope: !344)
!344 = distinct !DILexicalBlock(scope: !345, file: !3, line: 261, column: 11)
!345 = distinct !DILexicalBlock(scope: !346, file: !3, line: 259, column: 5)
!346 = distinct !DILexicalBlock(scope: !340, file: !3, line: 258, column: 14)
!347 = !DILocation(line: 261, column: 15, scope: !344)
!348 = !DILocation(line: 261, column: 11, scope: !345)
!349 = !DILocation(line: 274, column: 8, scope: !269)
!350 = !DILocation(line: 163, column: 13, scope: !246)
!351 = distinct !{!351, !275, !352}
!352 = !DILocation(line: 275, column: 3, scope: !246)
!353 = !DILocation(line: 279, column: 1, scope: !246)
!354 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 281, type: !87, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !355)
!355 = !{!356, !357, !361, !362}
!356 = !DILocalVariable(name: "secrets", scope: !354, file: !3, line: 282, type: !38)
!357 = !DILocalVariable(name: "buf", scope: !354, file: !3, line: 283, type: !358)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 65536, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 8192, lowerBound: 0)
!361 = !DILocalVariable(name: "err", scope: !354, file: !3, line: 284, type: !10)
!362 = !DILocalVariable(name: "actual_size", scope: !354, file: !3, line: 295, type: !62)
!363 = !DILocation(line: 0, scope: !354)
!364 = !DILocation(line: 283, column: 3, scope: !354)
!365 = !DILocation(line: 283, column: 8, scope: !354)
!366 = !DILocation(line: 284, column: 3, scope: !354)
!367 = !DILocation(line: 289, column: 15, scope: !354)
!368 = !DILocation(line: 289, column: 28, scope: !354)
!369 = !DILocation(line: 289, column: 26, scope: !354)
!370 = !DILocation(line: 286, column: 3, scope: !354)
!371 = !DILocation(line: 291, column: 3, scope: !354)
!372 = !DILocation(line: 292, column: 7, scope: !373)
!373 = distinct !DILexicalBlock(scope: !354, file: !3, line: 292, column: 7)
!374 = !DILocation(line: 292, column: 7, scope: !354)
!375 = !DILocation(line: 295, column: 24, scope: !354)
!376 = !DILocation(line: 296, column: 19, scope: !377)
!377 = distinct !DILexicalBlock(scope: !354, file: !3, line: 296, column: 7)
!378 = !DILocation(line: 296, column: 7, scope: !354)
!379 = !DILocation(line: 299, column: 7, scope: !380)
!380 = distinct !DILexicalBlock(scope: !354, file: !3, line: 299, column: 7)
!381 = !DILocation(line: 299, column: 41, scope: !380)
!382 = !DILocation(line: 299, column: 7, scope: !354)
!383 = !DILocation(line: 302, column: 3, scope: !354)
!384 = !DILocation(line: 303, column: 14, scope: !354)
!385 = !DILocation(line: 303, column: 3, scope: !354)
!386 = !DILocation(line: 303, column: 18, scope: !354)
!387 = !DILocation(line: 304, column: 14, scope: !354)
!388 = !DILocation(line: 304, column: 3, scope: !354)
!389 = !DILocation(line: 304, column: 18, scope: !354)
!390 = !DILocation(line: 305, column: 14, scope: !354)
!391 = !DILocation(line: 305, column: 3, scope: !354)
!392 = !DILocation(line: 305, column: 18, scope: !354)
!393 = !DILocation(line: 306, column: 14, scope: !354)
!394 = !DILocation(line: 306, column: 3, scope: !354)
!395 = !DILocation(line: 306, column: 18, scope: !354)
!396 = !DILocation(line: 307, column: 3, scope: !354)
!397 = !DILocation(line: 308, column: 3, scope: !354)
!398 = !DILocation(line: 309, column: 1, scope: !354)
