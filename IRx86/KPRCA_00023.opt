; ModuleID = './main.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.form = type { i8*, i8*, i8*, void ()*, [5 x {}*], %struct.page*, %struct.page*, %struct.question* }
%struct.page = type { i8*, %struct.page*, %struct.page*, %struct.question*, i8 }
%struct.question = type { i8*, i8*, i8*, i8, %struct.question*, %struct.question*, i32 (i8*)* }
%struct.form.2 = type { i8*, i8*, i8*, void ()*, [5 x i32 (%struct.form.2*, i8*)*], %struct.page*, %struct.page*, %struct.question* }

@af86 = dso_local global { i8*, i8*, i8*, void ()*, [5 x i32 (%struct.form*, i8*)*], %struct.page*, %struct.page*, %struct.question* } { i8* getelementptr inbounds ([343 x i8], [343 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([277 x i8], [277 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([238 x i8], [238 x i8]* @.str.2, i32 0, i32 0), void ()* @init_af86, [5 x i32 (%struct.form*, i8*)*] [i32 (%struct.form*, i8*)* @handle_next, i32 (%struct.form*, i8*)* @handle_prev, i32 (%struct.form*, i8*)* @handle_update, i32 (%struct.form*, i8*)* @handle_help, i32 (%struct.form*, i8*)* @handle_exit], %struct.page* @candidate, %struct.page* @candidate, %struct.question* @last_name }, align 8, !dbg !0
@.str = private unnamed_addr constant [343 x i8] c"\0A\0AThanks for your interest in the Sea Eye Association.\0AIn order to be considered for the job complete the preliminary online background check\0ADue to the secure nature of the position you are applying for you may be asked to\0Asubmit additional paperwork after your preliminary background check has been approved.\0AThank you for your cooperation\0A\00", align 1
@.str.1 = private unnamed_addr constant [277 x i8] c"\0A\0AYou have completed your application with the Sea Eye Association.\0AYou may review the form. Navigate through the application with **prev and **next.\0AOnce your are satisfied type **exit to exit and submit the form\0AIf you wish to discard your application, please use Control-C\0A\00", align 1
@.str.2 = private unnamed_addr constant [238 x i8] c"All commands begin with '**' and may be entered at any time\0A**prev <Return to the previous page>\0A**next <Move to the next page>\0A**update [id] <Update field, ex: \22Update First Name\22>\0A**help <Print this dialogue>\0A**exit <Exit application>\0A\00", align 1
@candidate = internal global %struct.page { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.88, i32 0, i32 0), %struct.page* null, %struct.page* null, %struct.question* null, i8 0 }, align 8, !dbg !36
@last_name = internal global %struct.question { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_name }, align 8, !dbg !76
@.str.94 = private unnamed_addr constant [10 x i8] c"Last Name\00", align 1
@.str.88 = private unnamed_addr constant [15 x i8] c"Candidate Info\00", align 1
@contact = internal global %struct.page { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i32 0, i32 0), %struct.page* null, %struct.page* null, %struct.question* null, i8 0 }, align 8, !dbg !64
@address = internal global %struct.page { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.page* null, %struct.page* null, %struct.question* null, i8 0 }, align 8, !dbg !66
@education = internal global %struct.page { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.91, i32 0, i32 0), %struct.page* null, %struct.page* null, %struct.question* null, i8 0 }, align 8, !dbg !68
@employment = internal global %struct.page { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i32 0, i32 0), %struct.page* null, %struct.page* null, %struct.question* null, i8 0 }, align 8, !dbg !70
@final = internal global %struct.page { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.93, i32 0, i32 0), %struct.page* null, %struct.page* null, %struct.question* null, i8 0 }, align 8, !dbg !72
@fin = internal global %struct.page zeroinitializer, align 8, !dbg !74
@pemail = internal global %struct.question { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.95, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_email }, align 8, !dbg !78
@mim = internal global %struct.question { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_month }, align 8, !dbg !80
@highest_edu = internal global %struct.question { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.99, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_edu }, align 8, !dbg !82
@employeer = internal global %struct.question { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.100, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_name }, align 8, !dbg !84
@drugz = internal global %struct.question { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_yes_no }, align 8, !dbg !86
@first_name = internal global %struct.question { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_name }, align 8, !dbg !88
@middle_name = internal global %struct.question { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.105, i32 0, i32 0), i8* null, i8 1, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_name }, align 8, !dbg !90
@suffix = internal global %struct.question { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.107, i32 0, i32 0), i8* null, i8 1, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_suffix }, align 8, !dbg !92
@dob_month = internal global %struct.question { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_month }, align 8, !dbg !94
@dob_day = internal global %struct.question { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_day }, align 8, !dbg !96
@dob_year = internal global %struct.question { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_year }, align 8, !dbg !98
@height_feet = internal global %struct.question { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_height_feet }, align 8, !dbg !100
@height_inches = internal global %struct.question { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_height_inches }, align 8, !dbg !102
@weight = internal global %struct.question { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_weight }, align 8, !dbg !104
@sex = internal global %struct.question { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_sex }, align 8, !dbg !106
@hair_color = internal global %struct.question { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.119, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_hair_color }, align 8, !dbg !108
@eye_color = internal global %struct.question { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.120, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_eye_color }, align 8, !dbg !110
@wemail = internal global %struct.question { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.121, i32 0, i32 0), i8* null, i8* null, i8 1, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_email }, align 8, !dbg !112
@hphone = internal global %struct.question { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.123, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_phone }, align 8, !dbg !114
@wphone = internal global %struct.question { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.123, i32 0, i32 0), i8* null, i8 1, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_phone }, align 8, !dbg !116
@miy = internal global %struct.question { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_year }, align 8, !dbg !118
@street = internal global %struct.question { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.126, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_street }, align 8, !dbg !120
@city = internal global %struct.question { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_city }, align 8, !dbg !122
@state = internal global %struct.question { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_state }, align 8, !dbg !124
@zip = internal global %struct.question { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.129, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_zip }, align 8, !dbg !126
@owned = internal global %struct.question { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_yes_no }, align 8, !dbg !128
@esm = internal global %struct.question { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_month }, align 8, !dbg !130
@esy = internal global %struct.question { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_year }, align 8, !dbg !132
@eem = internal global %struct.question { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_month }, align 8, !dbg !134
@eey = internal global %struct.question { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_year }, align 8, !dbg !136
@school_name = internal global %struct.question { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.135, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_name }, align 8, !dbg !138
@estreet = internal global %struct.question { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.126, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_street }, align 8, !dbg !140
@ecity = internal global %struct.question { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_city }, align 8, !dbg !142
@estate = internal global %struct.question { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_state }, align 8, !dbg !144
@ezip = internal global %struct.question { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.129, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_zip }, align 8, !dbg !146
@gpa = internal global %struct.question { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_gpa }, align 8, !dbg !148
@major = internal global %struct.question { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.139, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_name }, align 8, !dbg !150
@wsm = internal global %struct.question { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_month }, align 8, !dbg !152
@wsy = internal global %struct.question { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_year }, align 8, !dbg !154
@wem = internal global %struct.question { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i32 0, i32 0), i8* null, i8 1, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_month }, align 8, !dbg !156
@wey = internal global %struct.question { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0), i8* null, i8 1, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_year }, align 8, !dbg !158
@wstreet = internal global %struct.question { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.126, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_street }, align 8, !dbg !160
@wcity = internal global %struct.question { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_city }, align 8, !dbg !162
@wstate = internal global %struct.question { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_state }, align 8, !dbg !164
@wzip = internal global %struct.question { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.129, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_zip }, align 8, !dbg !166
@sup_last_name = internal global %struct.question { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.140, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_name }, align 8, !dbg !168
@sup_first_name = internal global %struct.question { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.141, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_name }, align 8, !dbg !170
@sup_title = internal global %struct.question { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.142, i32 0, i32 0), i8* null, i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_name }, align 8, !dbg !172
@sphone = internal global %struct.question { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.123, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_phone }, align 8, !dbg !174
@semail = internal global %struct.question { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.144, i32 0, i32 0), i8* null, i8* null, i8 1, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_email }, align 8, !dbg !176
@background = internal global %struct.question { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i32 0, i32 0), i8* null, i8 0, %struct.question* null, %struct.question* null, i32 (i8*)* @validate_yes_no }, align 8, !dbg !178
@.str.145 = private unnamed_addr constant [25 x i8] c"Background Investigation\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c"? [Y/N]\00", align 1
@.str.144 = private unnamed_addr constant [18 x i8] c"Supervisor e-mail\00", align 1
@.str.143 = private unnamed_addr constant [28 x i8] c"Supervisor Telephone Number\00", align 1
@.str.123 = private unnamed_addr constant [16 x i8] c" [XXX-XXX-XXXX]\00", align 1
@.str.142 = private unnamed_addr constant [17 x i8] c"Supervisor Title\00", align 1
@.str.141 = private unnamed_addr constant [22 x i8] c"Supervisor First Name\00", align 1
@.str.140 = private unnamed_addr constant [21 x i8] c"Supervisor Last Name\00", align 1
@.str.129 = private unnamed_addr constant [9 x i8] c"Zip Code\00", align 1
@.str.128 = private unnamed_addr constant [6 x i8] c"State\00", align 1
@valid_states = internal global [52 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* null], align 16, !dbg !26
@.str.25 = private unnamed_addr constant [3 x i8] c"AL\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"AK\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"AZ\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"AR\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"CA\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"CO\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"CT\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"DE\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"DC\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"FL\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"GA\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"HI\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"ID\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"IL\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c"IN\00", align 1
@.str.40 = private unnamed_addr constant [3 x i8] c"IA\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"KS\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"KY\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"LA\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"ME\00", align 1
@.str.45 = private unnamed_addr constant [3 x i8] c"MD\00", align 1
@.str.46 = private unnamed_addr constant [3 x i8] c"MA\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"MI\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"MN\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"MS\00", align 1
@.str.50 = private unnamed_addr constant [3 x i8] c"MO\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"MT\00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"NE\00", align 1
@.str.53 = private unnamed_addr constant [3 x i8] c"NV\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"NH\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c"NJ\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"NM\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"NY\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"NC\00", align 1
@.str.59 = private unnamed_addr constant [3 x i8] c"ND\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"OH\00", align 1
@.str.61 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"OR\00", align 1
@.str.63 = private unnamed_addr constant [3 x i8] c"PA\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"RI\00", align 1
@.str.65 = private unnamed_addr constant [3 x i8] c"SC\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"SD\00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"TN\00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"TX\00", align 1
@.str.69 = private unnamed_addr constant [3 x i8] c"UT\00", align 1
@.str.70 = private unnamed_addr constant [3 x i8] c"VT\00", align 1
@.str.71 = private unnamed_addr constant [3 x i8] c"VA\00", align 1
@.str.72 = private unnamed_addr constant [3 x i8] c"WA\00", align 1
@.str.73 = private unnamed_addr constant [3 x i8] c"WV\00", align 1
@.str.74 = private unnamed_addr constant [3 x i8] c"WI\00", align 1
@.str.75 = private unnamed_addr constant [3 x i8] c"WY\00", align 1
@.str.127 = private unnamed_addr constant [5 x i8] c"City\00", align 1
@.str.126 = private unnamed_addr constant [7 x i8] c"Street\00", align 1
@.str.134 = private unnamed_addr constant [9 x i8] c"End Year\00", align 1
@.str.112 = private unnamed_addr constant [8 x i8] c" [YYYY]\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"End Month\00", align 1
@.str.97 = private unnamed_addr constant [6 x i8] c" [MM]\00", align 1
@.str.132 = private unnamed_addr constant [11 x i8] c"Start Year\00", align 1
@.str.131 = private unnamed_addr constant [12 x i8] c"Start Month\00", align 1
@.str.138 = private unnamed_addr constant [6 x i8] c"Major\00", align 1
@.str.139 = private unnamed_addr constant [13 x i8] c" [NA for HS]\00", align 1
@.str.136 = private unnamed_addr constant [4 x i8] c"GPA\00", align 1
@.str.137 = private unnamed_addr constant [8 x i8] c" [X.XX]\00", align 1
@.str.135 = private unnamed_addr constant [12 x i8] c"School Name\00", align 1
@.str.130 = private unnamed_addr constant [13 x i8] c"Owned by you\00", align 1
@.str.125 = private unnamed_addr constant [13 x i8] c"Move-In Year\00", align 1
@.str.124 = private unnamed_addr constant [22 x i8] c"Work telephone number\00", align 1
@.str.122 = private unnamed_addr constant [22 x i8] c"Home telephone number\00", align 1
@.str.121 = private unnamed_addr constant [12 x i8] c"Work e-mail\00", align 1
@.str.120 = private unnamed_addr constant [10 x i8] c"Eye Color\00", align 1
@valid_eye_colors = internal global [11 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0), i8* null], align 16, !dbg !16
@.str.6 = private unnamed_addr constant [6 x i8] c"Black\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"Blue\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"Brown\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"Gray\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"Green\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"Hazel\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"Maroon\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"Multicolored\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"Pink\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.119 = private unnamed_addr constant [11 x i8] c"Hair Color\00", align 1
@valid_hair_colors = internal global [15 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i32 0, i32 0), i8* null], align 16, !dbg !21
@.str.16 = private unnamed_addr constant [5 x i8] c"Bald\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"Blonde or Strawbery\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"Gray or Partially Gray\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"Red or Auburn\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"Sandy\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"White\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"Orange\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"Purple\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"Unspecified or Unknown\00", align 1
@.str.118 = private unnamed_addr constant [4 x i8] c"Sex\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"Weight\00", align 1
@.str.115 = private unnamed_addr constant [14 x i8] c"Height-Inches\00", align 1
@.str.116 = private unnamed_addr constant [8 x i8] c" [0-11]\00", align 1
@.str.113 = private unnamed_addr constant [12 x i8] c"Height-Feet\00", align 1
@.str.114 = private unnamed_addr constant [7 x i8] c" [1-9]\00", align 1
@.str.111 = private unnamed_addr constant [9 x i8] c"DOB Year\00", align 1
@.str.109 = private unnamed_addr constant [8 x i8] c"DOB Day\00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c" [DD]\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"DOB Month\00", align 1
@.str.106 = private unnamed_addr constant [7 x i8] c"Suffix\00", align 1
@.str.107 = private unnamed_addr constant [19 x i8] c" [Jr, Sr, II, etc]\00", align 1
@valid_suffixes = internal global [13 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i32 0, i32 0), i8* null], align 16, !dbg !31
@.str.76 = private unnamed_addr constant [3 x i8] c"Jr\00", align 1
@.str.77 = private unnamed_addr constant [3 x i8] c"Sr\00", align 1
@.str.78 = private unnamed_addr constant [3 x i8] c"II\00", align 1
@.str.79 = private unnamed_addr constant [4 x i8] c"III\00", align 1
@.str.80 = private unnamed_addr constant [3 x i8] c"IV\00", align 1
@.str.81 = private unnamed_addr constant [2 x i8] c"V\00", align 1
@.str.82 = private unnamed_addr constant [3 x i8] c"VI\00", align 1
@.str.83 = private unnamed_addr constant [4 x i8] c"VII\00", align 1
@.str.84 = private unnamed_addr constant [5 x i8] c"VIII\00", align 1
@.str.85 = private unnamed_addr constant [3 x i8] c"IX\00", align 1
@.str.86 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.87 = private unnamed_addr constant [6 x i8] c"Other\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"Middle Name\00", align 1
@.str.105 = private unnamed_addr constant [21 x i8] c" [MI or Middle Name]\00", align 1
@.str.103 = private unnamed_addr constant [11 x i8] c"First Name\00", align 1
@.str.101 = private unnamed_addr constant [10 x i8] c"Drug Test\00", align 1
@.str.100 = private unnamed_addr constant [21 x i8] c"Most Recent Employer\00", align 1
@.str.98 = private unnamed_addr constant [18 x i8] c"Highest Education\00", align 1
@.str.99 = private unnamed_addr constant [18 x i8] c" [HS/COLLEGE/ADV]\00", align 1
@valid_education_levels = internal global [4 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i8* null], align 16, !dbg !9
@.str.3 = private unnamed_addr constant [3 x i8] c"HS\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"COLLEGE\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"ADV\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"Move-In Month\00", align 1
@.str.95 = private unnamed_addr constant [16 x i8] c"Personal e-mail\00", align 1
@.str.93 = private unnamed_addr constant [16 x i8] c"Final Questions\00", align 1
@.str.92 = private unnamed_addr constant [11 x i8] c"Employment\00", align 1
@.str.91 = private unnamed_addr constant [10 x i8] c"Education\00", align 1
@.str.90 = private unnamed_addr constant [8 x i8] c"Address\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"Contact Info\00", align 1
@.str.146 = private unnamed_addr constant [68 x i8] c"You must complete the previous page before proceeding to this page\0A\00", align 1
@.str.2.147 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.7.148 = private unnamed_addr constant [4 x i8] c"Fin\00", align 1
@.str.8.149 = private unnamed_addr constant [18 x i8] c"\0AFinal Questions\0A\00", align 1
@.str.9.150 = private unnamed_addr constant [10 x i8] c"\0A%s Form\0A\00", align 1
@.str.1.153 = private unnamed_addr constant [12 x i8] c"Thank you!\0A\00", align 1
@.str.3.160 = private unnamed_addr constant [51 x i8] c"Cannot update field until all fields are inputted\0A\00", align 1
@.str.4.161 = private unnamed_addr constant [32 x i8] c"Could not find specified field\0A\00", align 1
@.str.5.162 = private unnamed_addr constant [21 x i8] c"Update Unsuccessful\0A\00", align 1
@.str.6.163 = private unnamed_addr constant [12 x i8] c"Bad input.\0A\00", align 1
@.str.10.164 = private unnamed_addr constant [7 x i8] c"%s%s: \00", align 1
@.str.11.165 = private unnamed_addr constant [5 x i8] c"%s: \00", align 1
@.str.20.168 = private unnamed_addr constant [26 x i8] c"\0AType **next to continue\0A\00", align 1
@.str.12.169 = private unnamed_addr constant [4 x i8] c"Edu\00", align 1
@.str.14.170 = private unnamed_addr constant [4 x i8] c"Emp\00", align 1
@.str.16.171 = private unnamed_addr constant [37 x i8] c"\0A*********Final Screening:*********\0A\00", align 1
@.str.17.172 = private unnamed_addr constant [24 x i8] c"\0A*********%s:*********\0A\00", align 1
@.str.13.173 = private unnamed_addr constant [32 x i8] c"\0A*********Highest %s:*********\0A\00", align 1
@.str.15.174 = private unnamed_addr constant [42 x i8] c"\0A*********Most Recent Employer:*********\0A\00", align 1
@.str.18.175 = private unnamed_addr constant [7 x i8] c"%s=%s\0A\00", align 1
@.str.19.176 = private unnamed_addr constant [5 x i8] c"%s=\0A\00", align 1
@.str.27.179 = private unnamed_addr constant [2 x i8] c" \00", align 1
@cmd_lbls = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22.180, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23.181, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24.182, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.183, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.184, i32 0, i32 0)], align 16, !dbg !202
@.str.22.180 = private unnamed_addr constant [5 x i8] c"NEXT\00", align 1
@.str.23.181 = private unnamed_addr constant [5 x i8] c"PREV\00", align 1
@.str.24.182 = private unnamed_addr constant [7 x i8] c"UPDATE\00", align 1
@.str.25.183 = private unnamed_addr constant [5 x i8] c"HELP\00", align 1
@.str.26.184 = private unnamed_addr constant [5 x i8] c"EXIT\00", align 1
@.str.21.185 = private unnamed_addr constant [3 x i8] c"**\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i32 @read_line(i8* %0) local_unnamed_addr #0 !dbg !288 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !290, metadata !DIExpression()), !dbg !292
  %2 = call fastcc i32 @splitat(i8* %0), !dbg !293
  call void @llvm.dbg.value(metadata i32 %2, metadata !291, metadata !DIExpression()), !dbg !292
  %3 = ashr i32 %2, 31, !dbg !295
  ret i32 %3, !dbg !297
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define internal fastcc i32 @splitat(i8* %0) unnamed_addr #0 !dbg !298 {
  %2 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 undef, metadata !303, metadata !DIExpression()), !dbg !310
  call void @llvm.dbg.value(metadata i8* %0, metadata !304, metadata !DIExpression()), !dbg !310
  call void @llvm.dbg.value(metadata i64 4096, metadata !305, metadata !DIExpression()), !dbg !310
  call void @llvm.dbg.value(metadata i8 10, metadata !306, metadata !DIExpression()), !dbg !310
  %3 = bitcast i64* %2 to i8*, !dbg !311
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #17, !dbg !311
  call void @llvm.dbg.value(metadata i64 0, metadata !309, metadata !DIExpression()), !dbg !310
  br label %4, !dbg !312

4:                                                ; preds = %15, %1
  %5 = phi i64 [ 0, %1 ], [ %16, %15 ]
  call void @llvm.dbg.value(metadata i64 %5, metadata !309, metadata !DIExpression()), !dbg !310
  %6 = getelementptr inbounds i8, i8* %0, i64 %5, !dbg !313
  call void @llvm.dbg.value(metadata i64* %2, metadata !308, metadata !DIExpression(DW_OP_deref)), !dbg !310
  %7 = call i32 @receive(i32 0, i8* %6, i64 1, i64* nonnull %2) #17, !dbg !315
  call void @llvm.dbg.value(metadata i32 %7, metadata !307, metadata !DIExpression()), !dbg !310
  %8 = icmp ne i32 %7, 0, !dbg !316
  %9 = load i64, i64* %2, align 8, !dbg !318
  call void @llvm.dbg.value(metadata i64 %9, metadata !308, metadata !DIExpression()), !dbg !310
  %10 = icmp eq i64 %9, 0, !dbg !319
  %11 = and i1 %8, %10, !dbg !320
  br i1 %11, label %22, label %12, !dbg !320

12:                                               ; preds = %4
  %13 = load i8, i8* %6, align 1, !dbg !321, !tbaa !323
  %14 = icmp eq i8 %13, 10, !dbg !326
  br i1 %14, label %18, label %15, !dbg !327

15:                                               ; preds = %12
  %16 = add nuw nsw i64 %5, 1, !dbg !328
  call void @llvm.dbg.value(metadata i64 %16, metadata !309, metadata !DIExpression()), !dbg !310
  %17 = icmp eq i64 %16, 4095, !dbg !329
  br i1 %17, label %18, label %4, !dbg !312, !llvm.loop !330

18:                                               ; preds = %15, %12
  %19 = phi i64 [ %5, %12 ], [ 4095, %15 ], !dbg !310
  call void @llvm.dbg.value(metadata i64 %19, metadata !309, metadata !DIExpression()), !dbg !310
  call void @llvm.dbg.value(metadata i64 %19, metadata !309, metadata !DIExpression()), !dbg !310
  %20 = getelementptr inbounds i8, i8* %0, i64 %19, !dbg !332
  store i8 0, i8* %20, align 1, !dbg !333, !tbaa !323
  %21 = trunc i64 %19 to i32, !dbg !334
  br label %22, !dbg !335

22:                                               ; preds = %4, %18
  %23 = phi i32 [ %21, %18 ], [ -1, %4 ], !dbg !310
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #17, !dbg !336
  ret i32 %23, !dbg !336
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare !dbg !232 dso_local i32 @receive(i32, i8*, i64, i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define dso_local void @init_af86() #4 !dbg !337 {
  store %struct.page* null, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @candidate, i64 0, i32 1), align 8, !dbg !338, !tbaa !340
  store %struct.page* @contact, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @candidate, i64 0, i32 2), align 8, !dbg !338, !tbaa !343
  store %struct.page* @candidate, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @contact, i64 0, i32 1), align 8, !dbg !344, !tbaa !340
  store %struct.page* @address, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @contact, i64 0, i32 2), align 8, !dbg !344, !tbaa !343
  store %struct.page* @contact, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @address, i64 0, i32 1), align 8, !dbg !346, !tbaa !340
  store %struct.page* @education, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @address, i64 0, i32 2), align 8, !dbg !346, !tbaa !343
  store %struct.page* @address, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @education, i64 0, i32 1), align 8, !dbg !348, !tbaa !340
  store %struct.page* @employment, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @education, i64 0, i32 2), align 8, !dbg !348, !tbaa !343
  store %struct.page* @education, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @employment, i64 0, i32 1), align 8, !dbg !350, !tbaa !340
  store %struct.page* @final, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @employment, i64 0, i32 2), align 8, !dbg !350, !tbaa !343
  store %struct.page* @employment, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @final, i64 0, i32 1), align 8, !dbg !352, !tbaa !340
  store %struct.page* @fin, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @final, i64 0, i32 2), align 8, !dbg !352, !tbaa !343
  store %struct.page* @final, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @fin, i64 0, i32 1), align 8, !dbg !354, !tbaa !340
  store %struct.page* null, %struct.page** getelementptr inbounds (%struct.page, %struct.page* @fin, i64 0, i32 2), align 8, !dbg !354, !tbaa !343
  store %struct.question* @last_name, %struct.question** getelementptr inbounds (%struct.page, %struct.page* @candidate, i64 0, i32 3), align 8, !dbg !356, !tbaa !357
  store %struct.question* @pemail, %struct.question** getelementptr inbounds (%struct.page, %struct.page* @contact, i64 0, i32 3), align 8, !dbg !358, !tbaa !357
  store %struct.question* @mim, %struct.question** getelementptr inbounds (%struct.page, %struct.page* @address, i64 0, i32 3), align 8, !dbg !359, !tbaa !357
  store %struct.question* @highest_edu, %struct.question** getelementptr inbounds (%struct.page, %struct.page* @education, i64 0, i32 3), align 8, !dbg !360, !tbaa !357
  store %struct.question* @employeer, %struct.question** getelementptr inbounds (%struct.page, %struct.page* @employment, i64 0, i32 3), align 8, !dbg !361, !tbaa !357
  store %struct.question* @drugz, %struct.question** getelementptr inbounds (%struct.page, %struct.page* @final, i64 0, i32 3), align 8, !dbg !362, !tbaa !357
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @last_name, i64 0, i32 4), align 8, !dbg !363, !tbaa !365
  store %struct.question* @first_name, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @last_name, i64 0, i32 5), align 8, !dbg !363, !tbaa !367
  store %struct.question* @last_name, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @first_name, i64 0, i32 4), align 8, !dbg !368, !tbaa !365
  store %struct.question* @middle_name, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @first_name, i64 0, i32 5), align 8, !dbg !368, !tbaa !367
  store %struct.question* @first_name, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @middle_name, i64 0, i32 4), align 8, !dbg !370, !tbaa !365
  store %struct.question* @suffix, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @middle_name, i64 0, i32 5), align 8, !dbg !370, !tbaa !367
  store %struct.question* @middle_name, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @suffix, i64 0, i32 4), align 8, !dbg !372, !tbaa !365
  store %struct.question* @dob_month, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @suffix, i64 0, i32 5), align 8, !dbg !372, !tbaa !367
  store %struct.question* @suffix, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @dob_month, i64 0, i32 4), align 8, !dbg !374, !tbaa !365
  store %struct.question* @dob_day, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @dob_month, i64 0, i32 5), align 8, !dbg !374, !tbaa !367
  store %struct.question* @dob_month, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @dob_day, i64 0, i32 4), align 8, !dbg !376, !tbaa !365
  store %struct.question* @dob_year, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @dob_day, i64 0, i32 5), align 8, !dbg !376, !tbaa !367
  store %struct.question* @dob_day, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @dob_year, i64 0, i32 4), align 8, !dbg !378, !tbaa !365
  store %struct.question* @height_feet, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @dob_year, i64 0, i32 5), align 8, !dbg !378, !tbaa !367
  store %struct.question* @dob_year, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @height_feet, i64 0, i32 4), align 8, !dbg !380, !tbaa !365
  store %struct.question* @height_inches, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @height_feet, i64 0, i32 5), align 8, !dbg !380, !tbaa !367
  store %struct.question* @height_feet, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @height_inches, i64 0, i32 4), align 8, !dbg !382, !tbaa !365
  store %struct.question* @weight, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @height_inches, i64 0, i32 5), align 8, !dbg !382, !tbaa !367
  store %struct.question* @height_inches, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @weight, i64 0, i32 4), align 8, !dbg !384, !tbaa !365
  store %struct.question* @sex, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @weight, i64 0, i32 5), align 8, !dbg !384, !tbaa !367
  store %struct.question* @weight, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @sex, i64 0, i32 4), align 8, !dbg !386, !tbaa !365
  store %struct.question* @hair_color, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @sex, i64 0, i32 5), align 8, !dbg !386, !tbaa !367
  store %struct.question* @sex, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @hair_color, i64 0, i32 4), align 8, !dbg !388, !tbaa !365
  store %struct.question* @eye_color, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @hair_color, i64 0, i32 5), align 8, !dbg !388, !tbaa !367
  store %struct.question* @hair_color, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @eye_color, i64 0, i32 4), align 8, !dbg !390, !tbaa !365
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @eye_color, i64 0, i32 5), align 8, !dbg !390, !tbaa !367
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @pemail, i64 0, i32 4), align 8, !dbg !392, !tbaa !365
  store %struct.question* @wemail, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @pemail, i64 0, i32 5), align 8, !dbg !392, !tbaa !367
  store %struct.question* @pemail, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wemail, i64 0, i32 4), align 8, !dbg !394, !tbaa !365
  store %struct.question* @hphone, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wemail, i64 0, i32 5), align 8, !dbg !394, !tbaa !367
  store %struct.question* @wemail, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @hphone, i64 0, i32 4), align 8, !dbg !396, !tbaa !365
  store %struct.question* @wphone, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @hphone, i64 0, i32 5), align 8, !dbg !396, !tbaa !367
  store %struct.question* @hphone, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wphone, i64 0, i32 4), align 8, !dbg !398, !tbaa !365
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wphone, i64 0, i32 5), align 8, !dbg !398, !tbaa !367
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @mim, i64 0, i32 4), align 8, !dbg !400, !tbaa !365
  store %struct.question* @miy, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @mim, i64 0, i32 5), align 8, !dbg !400, !tbaa !367
  store %struct.question* @mim, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @miy, i64 0, i32 4), align 8, !dbg !402, !tbaa !365
  store %struct.question* @street, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @miy, i64 0, i32 5), align 8, !dbg !402, !tbaa !367
  store %struct.question* @miy, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @street, i64 0, i32 4), align 8, !dbg !404, !tbaa !365
  store %struct.question* @city, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @street, i64 0, i32 5), align 8, !dbg !404, !tbaa !367
  store %struct.question* @street, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @city, i64 0, i32 4), align 8, !dbg !406, !tbaa !365
  store %struct.question* @state, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @city, i64 0, i32 5), align 8, !dbg !406, !tbaa !367
  store %struct.question* @city, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @state, i64 0, i32 4), align 8, !dbg !408, !tbaa !365
  store %struct.question* @zip, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @state, i64 0, i32 5), align 8, !dbg !408, !tbaa !367
  store %struct.question* @state, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @zip, i64 0, i32 4), align 8, !dbg !410, !tbaa !365
  store %struct.question* @owned, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @zip, i64 0, i32 5), align 8, !dbg !410, !tbaa !367
  store %struct.question* @zip, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @owned, i64 0, i32 4), align 8, !dbg !412, !tbaa !365
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @owned, i64 0, i32 5), align 8, !dbg !412, !tbaa !367
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @highest_edu, i64 0, i32 4), align 8, !dbg !414, !tbaa !365
  store %struct.question* @esm, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @highest_edu, i64 0, i32 5), align 8, !dbg !414, !tbaa !367
  store %struct.question* @highest_edu, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @esm, i64 0, i32 4), align 8, !dbg !416, !tbaa !365
  store %struct.question* @esy, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @esm, i64 0, i32 5), align 8, !dbg !416, !tbaa !367
  store %struct.question* @esm, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @esy, i64 0, i32 4), align 8, !dbg !418, !tbaa !365
  store %struct.question* @eem, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @esy, i64 0, i32 5), align 8, !dbg !418, !tbaa !367
  store %struct.question* @esy, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @eem, i64 0, i32 4), align 8, !dbg !420, !tbaa !365
  store %struct.question* @eey, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @eem, i64 0, i32 5), align 8, !dbg !420, !tbaa !367
  store %struct.question* @eem, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @eey, i64 0, i32 4), align 8, !dbg !422, !tbaa !365
  store %struct.question* @school_name, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @eey, i64 0, i32 5), align 8, !dbg !422, !tbaa !367
  store %struct.question* @eey, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @school_name, i64 0, i32 4), align 8, !dbg !424, !tbaa !365
  store %struct.question* @estreet, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @school_name, i64 0, i32 5), align 8, !dbg !424, !tbaa !367
  store %struct.question* @school_name, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @estreet, i64 0, i32 4), align 8, !dbg !426, !tbaa !365
  store %struct.question* @ecity, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @estreet, i64 0, i32 5), align 8, !dbg !426, !tbaa !367
  store %struct.question* @estreet, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @ecity, i64 0, i32 4), align 8, !dbg !428, !tbaa !365
  store %struct.question* @estate, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @ecity, i64 0, i32 5), align 8, !dbg !428, !tbaa !367
  store %struct.question* @ecity, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @estate, i64 0, i32 4), align 8, !dbg !430, !tbaa !365
  store %struct.question* @ezip, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @estate, i64 0, i32 5), align 8, !dbg !430, !tbaa !367
  store %struct.question* @estate, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @ezip, i64 0, i32 4), align 8, !dbg !432, !tbaa !365
  store %struct.question* @gpa, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @ezip, i64 0, i32 5), align 8, !dbg !432, !tbaa !367
  store %struct.question* @ezip, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @gpa, i64 0, i32 4), align 8, !dbg !434, !tbaa !365
  store %struct.question* @major, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @gpa, i64 0, i32 5), align 8, !dbg !434, !tbaa !367
  store %struct.question* @gpa, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @major, i64 0, i32 4), align 8, !dbg !436, !tbaa !365
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @major, i64 0, i32 5), align 8, !dbg !436, !tbaa !367
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @employeer, i64 0, i32 4), align 8, !dbg !438, !tbaa !365
  store %struct.question* @wsm, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @employeer, i64 0, i32 5), align 8, !dbg !438, !tbaa !367
  store %struct.question* @employeer, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wsm, i64 0, i32 4), align 8, !dbg !440, !tbaa !365
  store %struct.question* @wsy, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wsm, i64 0, i32 5), align 8, !dbg !440, !tbaa !367
  store %struct.question* @wsm, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wsy, i64 0, i32 4), align 8, !dbg !442, !tbaa !365
  store %struct.question* @wem, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wsy, i64 0, i32 5), align 8, !dbg !442, !tbaa !367
  store %struct.question* @wsy, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wem, i64 0, i32 4), align 8, !dbg !444, !tbaa !365
  store %struct.question* @wey, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wem, i64 0, i32 5), align 8, !dbg !444, !tbaa !367
  store %struct.question* @wem, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wey, i64 0, i32 4), align 8, !dbg !446, !tbaa !365
  store %struct.question* @wstreet, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wey, i64 0, i32 5), align 8, !dbg !446, !tbaa !367
  store %struct.question* @wey, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wstreet, i64 0, i32 4), align 8, !dbg !448, !tbaa !365
  store %struct.question* @wcity, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wstreet, i64 0, i32 5), align 8, !dbg !448, !tbaa !367
  store %struct.question* @wstreet, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wcity, i64 0, i32 4), align 8, !dbg !450, !tbaa !365
  store %struct.question* @wstate, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wcity, i64 0, i32 5), align 8, !dbg !450, !tbaa !367
  store %struct.question* @wcity, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wstate, i64 0, i32 4), align 8, !dbg !452, !tbaa !365
  store %struct.question* @wzip, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wstate, i64 0, i32 5), align 8, !dbg !452, !tbaa !367
  store %struct.question* @wstate, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wzip, i64 0, i32 4), align 8, !dbg !454, !tbaa !365
  store %struct.question* @sup_last_name, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @wzip, i64 0, i32 5), align 8, !dbg !454, !tbaa !367
  store %struct.question* @wzip, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @sup_last_name, i64 0, i32 4), align 8, !dbg !456, !tbaa !365
  store %struct.question* @sup_first_name, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @sup_last_name, i64 0, i32 5), align 8, !dbg !456, !tbaa !367
  store %struct.question* @sup_last_name, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @sup_first_name, i64 0, i32 4), align 8, !dbg !458, !tbaa !365
  store %struct.question* @sup_title, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @sup_first_name, i64 0, i32 5), align 8, !dbg !458, !tbaa !367
  store %struct.question* @sup_first_name, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @sup_title, i64 0, i32 4), align 8, !dbg !460, !tbaa !365
  store %struct.question* @sphone, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @sup_title, i64 0, i32 5), align 8, !dbg !460, !tbaa !367
  store %struct.question* @sup_title, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @sphone, i64 0, i32 4), align 8, !dbg !462, !tbaa !365
  store %struct.question* @semail, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @sphone, i64 0, i32 5), align 8, !dbg !462, !tbaa !367
  store %struct.question* @sphone, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @semail, i64 0, i32 4), align 8, !dbg !464, !tbaa !365
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @semail, i64 0, i32 5), align 8, !dbg !464, !tbaa !367
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @drugz, i64 0, i32 4), align 8, !dbg !466, !tbaa !365
  store %struct.question* @background, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @drugz, i64 0, i32 5), align 8, !dbg !466, !tbaa !367
  store %struct.question* @drugz, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @background, i64 0, i32 4), align 8, !dbg !468, !tbaa !365
  store %struct.question* null, %struct.question** getelementptr inbounds (%struct.question, %struct.question* @background, i64 0, i32 5), align 8, !dbg !468, !tbaa !367
  ret void, !dbg !470
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_name(i8* nocapture readonly %0) #5 !dbg !471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !473, metadata !DIExpression()), !dbg !476
  call void @llvm.dbg.value(metadata i64 0, metadata !474, metadata !DIExpression()), !dbg !477
  %2 = load i8, i8* %0, align 1, !dbg !478
  %3 = icmp eq i8 %2, 0, !dbg !480
  br i1 %3, label %17, label %7, !dbg !481

4:                                                ; preds = %7
  call void @llvm.dbg.value(metadata i64 %16, metadata !474, metadata !DIExpression()), !dbg !477
  %5 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !478
  %6 = icmp ult i64 %16, %5, !dbg !480
  br i1 %6, label %7, label %17, !dbg !481, !llvm.loop !482

7:                                                ; preds = %1, %4
  %8 = phi i64 [ %16, %4 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i64 %8, metadata !474, metadata !DIExpression()), !dbg !477
  %9 = getelementptr inbounds i8, i8* %0, i64 %8, !dbg !484
  %10 = load i8, i8* %9, align 1, !dbg !484, !tbaa !323
  %11 = sext i8 %10 to i32, !dbg !484
  %12 = call i32 @isprint(i32 %11) #18, !dbg !486
  %13 = icmp ne i32 %12, 0, !dbg !486
  %14 = icmp eq i8 %10, 39, !dbg !487
  %15 = or i1 %14, %13, !dbg !488
  %16 = add nuw i64 %8, 1, !dbg !489
  call void @llvm.dbg.value(metadata i64 %16, metadata !474, metadata !DIExpression()), !dbg !477
  br i1 %15, label %4, label %17, !dbg !488

17:                                               ; preds = %4, %7, %1
  %18 = phi i32 [ 1, %1 ], [ 1, %4 ], [ 0, %7 ]
  ret i32 %18, !dbg !490
}

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind readonly
declare dso_local i32 @isprint(i32) local_unnamed_addr #7

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_yes_no(i8* nocapture readonly %0) #5 !dbg !491 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !493, metadata !DIExpression()), !dbg !494
  %2 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !495
  %3 = icmp eq i64 %2, 1, !dbg !497
  br i1 %3, label %4, label %7, !dbg !498

4:                                                ; preds = %1
  %5 = load i8, i8* %0, align 1, !dbg !499, !tbaa !323
  switch i8 %5, label %7 [
    i8 89, label %6
    i8 78, label %6
  ], !dbg !501

6:                                                ; preds = %4, %4
  br label %7, !dbg !502

7:                                                ; preds = %4, %1, %6
  %8 = phi i32 [ 1, %6 ], [ 0, %1 ], [ 0, %4 ], !dbg !494
  ret i32 %8, !dbg !503
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_email(i8* nocapture readonly %0) #5 !dbg !504 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !506, metadata !DIExpression()), !dbg !511
  call void @llvm.dbg.value(metadata i32 0, metadata !507, metadata !DIExpression()), !dbg !511
  %2 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !512
  %3 = add i64 %2, -3, !dbg !514
  %4 = icmp ult i64 %3, 62, !dbg !514
  %5 = icmp ne i64 %2, 0, !dbg !515
  %6 = and i1 %4, %5, !dbg !514
  call void @llvm.dbg.value(metadata i64 0, metadata !509, metadata !DIExpression()), !dbg !517
  call void @llvm.dbg.value(metadata i32 0, metadata !507, metadata !DIExpression()), !dbg !511
  br i1 %6, label %7, label %24, !dbg !514

7:                                                ; preds = %1, %20
  %8 = phi i64 [ %22, %20 ], [ 0, %1 ]
  %9 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i64 %8, metadata !509, metadata !DIExpression()), !dbg !517
  call void @llvm.dbg.value(metadata i32 %9, metadata !507, metadata !DIExpression()), !dbg !511
  %10 = getelementptr inbounds i8, i8* %0, i64 %8, !dbg !518
  %11 = load i8, i8* %10, align 1, !dbg !518, !tbaa !323
  call void @llvm.dbg.value(metadata i8 %11, metadata !508, metadata !DIExpression()), !dbg !511
  %12 = icmp eq i8 %11, 64, !dbg !520
  br i1 %12, label %13, label %15, !dbg !522

13:                                               ; preds = %7
  %14 = icmp eq i32 %9, 0, !dbg !523
  br i1 %14, label %20, label %24, !dbg !526

15:                                               ; preds = %7
  %16 = sext i8 %11 to i32, !dbg !527
  %17 = call i32 @isalnum(i32 %16) #18, !dbg !528
  %18 = icmp eq i32 %17, 0, !dbg !528
  br i1 %18, label %19, label %20, !dbg !530

19:                                               ; preds = %15
  switch i8 %11, label %24 [
    i8 95, label %20
    i8 46, label %20
    i8 45, label %20
  ], !dbg !530

20:                                               ; preds = %15, %19, %19, %19, %13
  %21 = phi i32 [ %9, %19 ], [ 1, %13 ], [ %9, %15 ], [ %9, %19 ], [ %9, %19 ], !dbg !511
  call void @llvm.dbg.value(metadata i32 %21, metadata !507, metadata !DIExpression()), !dbg !511
  %22 = add nuw i64 %8, 1, !dbg !531
  call void @llvm.dbg.value(metadata i64 %22, metadata !509, metadata !DIExpression()), !dbg !517
  %23 = icmp eq i64 %22, %2, !dbg !515
  br i1 %23, label %24, label %7, !dbg !532, !llvm.loop !533

24:                                               ; preds = %13, %19, %20, %1
  %25 = phi i32 [ 0, %1 ], [ 0, %19 ], [ 0, %13 ], [ %21, %20 ]
  ret i32 %25
}

; Function Attrs: nounwind readonly
declare dso_local i32 @isalnum(i32) local_unnamed_addr #7

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_phone(i8* nocapture readonly %0) #5 !dbg !535 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !537, metadata !DIExpression()), !dbg !540
  %2 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !541
  %3 = icmp eq i64 %2, 12, !dbg !543
  br i1 %3, label %4, label %20, !dbg !544

4:                                                ; preds = %1, %17
  %5 = phi i64 [ %18, %17 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i64 %5, metadata !538, metadata !DIExpression()), !dbg !545
  %6 = trunc i64 %5 to i32, !dbg !546
  %7 = or i32 %6, 4, !dbg !546
  %8 = icmp eq i32 %7, 7, !dbg !546
  %9 = getelementptr inbounds i8, i8* %0, i64 %5, !dbg !549
  %10 = load i8, i8* %9, align 1, !dbg !549, !tbaa !323
  br i1 %8, label %11, label %13, !dbg !546

11:                                               ; preds = %4
  %12 = icmp eq i8 %10, 45, !dbg !550
  br i1 %12, label %17, label %20, !dbg !553

13:                                               ; preds = %4
  %14 = sext i8 %10 to i32, !dbg !549
  %15 = add nsw i32 %14, -48, !dbg !554
  %16 = icmp ult i32 %15, 10, !dbg !554
  br i1 %16, label %17, label %20, !dbg !557

17:                                               ; preds = %11, %13
  %18 = add nuw nsw i64 %5, 1, !dbg !558
  call void @llvm.dbg.value(metadata i64 %18, metadata !538, metadata !DIExpression()), !dbg !545
  %19 = icmp eq i64 %18, 12, !dbg !559
  br i1 %19, label %20, label %4, !dbg !560, !llvm.loop !561

20:                                               ; preds = %13, %11, %17, %1
  %21 = phi i32 [ 0, %1 ], [ 1, %17 ], [ 0, %11 ], [ 0, %13 ]
  ret i32 %21
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_zip(i8* nocapture readonly %0) #5 !dbg !563 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !565, metadata !DIExpression()), !dbg !568
  %2 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !569
  %3 = icmp eq i64 %2, 5, !dbg !571
  br i1 %3, label %7, label %14, !dbg !572

4:                                                ; preds = %7
  %5 = add nuw nsw i64 %8, 1, !dbg !573
  call void @llvm.dbg.value(metadata i64 %5, metadata !566, metadata !DIExpression()), !dbg !575
  call void @llvm.dbg.value(metadata i64 %5, metadata !566, metadata !DIExpression()), !dbg !575
  %6 = icmp eq i64 %5, 5, !dbg !576
  br i1 %6, label %14, label %7, !dbg !577, !llvm.loop !578

7:                                                ; preds = %1, %4
  %8 = phi i64 [ %5, %4 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i64 %8, metadata !566, metadata !DIExpression()), !dbg !575
  %9 = getelementptr inbounds i8, i8* %0, i64 %8, !dbg !580
  %10 = load i8, i8* %9, align 1, !dbg !580, !tbaa !323
  %11 = sext i8 %10 to i32, !dbg !580
  %12 = add nsw i32 %11, -48, !dbg !582
  %13 = icmp ult i32 %12, 10, !dbg !582
  call void @llvm.dbg.value(metadata i64 %8, metadata !566, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !575
  br i1 %13, label %4, label %14, !dbg !583

14:                                               ; preds = %7, %4, %1
  %15 = phi i32 [ 0, %1 ], [ 1, %4 ], [ 0, %7 ]
  ret i32 %15
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_state(i8* nocapture readonly %0) #5 !dbg !584 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !586, metadata !DIExpression()), !dbg !587
  %2 = call i32 @contains(i8** getelementptr inbounds ([52 x i8*], [52 x i8*]* @valid_states, i64 0, i64 0), i8* %0), !dbg !588
  ret i32 %2, !dbg !589
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @contains(i8** nocapture readonly %0, i8* nocapture readonly %1) local_unnamed_addr #5 !dbg !590 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !595, metadata !DIExpression()), !dbg !598
  call void @llvm.dbg.value(metadata i8* %1, metadata !596, metadata !DIExpression()), !dbg !598
  call void @llvm.dbg.value(metadata i8** %0, metadata !597, metadata !DIExpression()), !dbg !598
  %3 = load i8*, i8** %0, align 8, !dbg !599, !tbaa !600
  %4 = icmp eq i8* %3, null, !dbg !601
  br i1 %4, label %15, label %8, !dbg !602

5:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i8** %14, metadata !597, metadata !DIExpression()), !dbg !598
  %6 = load i8*, i8** %14, align 8, !dbg !599, !tbaa !600
  %7 = icmp eq i8* %6, null, !dbg !601
  br i1 %7, label %15, label %8, !dbg !602, !llvm.loop !603

8:                                                ; preds = %2, %5
  %9 = phi i8* [ %6, %5 ], [ %3, %2 ]
  %10 = phi i8** [ %14, %5 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8** %10, metadata !597, metadata !DIExpression()), !dbg !598
  %11 = call i64 @strlen(i8* nonnull %9), !dbg !605
  %12 = call i32 @strncmp(i8* nonnull %9, i8* %1, i64 %11), !dbg !608
  %13 = icmp eq i32 %12, 0, !dbg !609
  %14 = getelementptr inbounds i8*, i8** %10, i64 1, !dbg !610
  call void @llvm.dbg.value(metadata i8** %14, metadata !597, metadata !DIExpression()), !dbg !598
  br i1 %13, label %15, label %5, !dbg !612

15:                                               ; preds = %8, %5, %2
  %16 = phi i32 [ 0, %2 ], [ 1, %8 ], [ 0, %5 ], !dbg !598
  ret i32 %16, !dbg !613
}

; Function Attrs: nofree nounwind readonly
declare dso_local i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_city(i8* nocapture readonly %0) #5 !dbg !614 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !616, metadata !DIExpression()), !dbg !619
  %2 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !620
  %3 = add i64 %2, -4, !dbg !622
  %4 = icmp ugt i64 %3, 28, !dbg !622
  br i1 %4, label %23, label %5, !dbg !622

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 0, metadata !617, metadata !DIExpression()), !dbg !623
  %6 = icmp eq i64 %2, 0, !dbg !624
  br i1 %6, label %23, label %7, !dbg !626

7:                                                ; preds = %5, %20
  %8 = phi i64 [ %21, %20 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i64 %8, metadata !617, metadata !DIExpression()), !dbg !623
  %9 = getelementptr inbounds i8, i8* %0, i64 %8, !dbg !627
  %10 = load i8, i8* %9, align 1, !dbg !627, !tbaa !323
  %11 = sext i8 %10 to i32, !dbg !627
  %12 = call i32 @isalnum(i32 %11) #18, !dbg !629
  %13 = icmp eq i32 %12, 0, !dbg !629
  br i1 %13, label %14, label %20, !dbg !630

14:                                               ; preds = %7
  %15 = call i32 @isspace(i32 %11) #18, !dbg !631
  %16 = icmp eq i32 %15, 0, !dbg !631
  br i1 %16, label %17, label %20, !dbg !632

17:                                               ; preds = %14
  %18 = call i32 @ispunct(i32 %11) #18, !dbg !633
  %19 = icmp eq i32 %18, 0, !dbg !633
  br i1 %19, label %23, label %20, !dbg !634

20:                                               ; preds = %17, %14, %7
  %21 = add nuw i64 %8, 1, !dbg !635
  call void @llvm.dbg.value(metadata i64 %21, metadata !617, metadata !DIExpression()), !dbg !623
  %22 = icmp eq i64 %21, %2, !dbg !624
  br i1 %22, label %23, label %7, !dbg !626, !llvm.loop !636

23:                                               ; preds = %17, %20, %5, %1
  %24 = phi i32 [ 0, %1 ], [ 1, %5 ], [ 0, %17 ], [ 1, %20 ]
  ret i32 %24
}

; Function Attrs: nounwind readonly
declare dso_local i32 @isspace(i32) local_unnamed_addr #7

; Function Attrs: nounwind readonly
declare dso_local i32 @ispunct(i32) local_unnamed_addr #7

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_street(i8* nocapture readonly %0) #5 !dbg !638 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !640, metadata !DIExpression()), !dbg !643
  %2 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !644
  %3 = add i64 %2, -3, !dbg !646
  %4 = icmp ugt i64 %3, 29, !dbg !646
  br i1 %4, label %23, label %5, !dbg !646

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 0, metadata !641, metadata !DIExpression()), !dbg !647
  %6 = icmp eq i64 %2, 0, !dbg !648
  br i1 %6, label %23, label %7, !dbg !650

7:                                                ; preds = %5, %20
  %8 = phi i64 [ %21, %20 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i64 %8, metadata !641, metadata !DIExpression()), !dbg !647
  %9 = getelementptr inbounds i8, i8* %0, i64 %8, !dbg !651
  %10 = load i8, i8* %9, align 1, !dbg !651, !tbaa !323
  %11 = sext i8 %10 to i32, !dbg !651
  %12 = call i32 @isalnum(i32 %11) #18, !dbg !653
  %13 = icmp eq i32 %12, 0, !dbg !653
  br i1 %13, label %14, label %20, !dbg !654

14:                                               ; preds = %7
  %15 = call i32 @isspace(i32 %11) #18, !dbg !655
  %16 = icmp eq i32 %15, 0, !dbg !655
  br i1 %16, label %17, label %20, !dbg !656

17:                                               ; preds = %14
  %18 = call i32 @ispunct(i32 %11) #18, !dbg !657
  %19 = icmp eq i32 %18, 0, !dbg !657
  br i1 %19, label %23, label %20, !dbg !658

20:                                               ; preds = %17, %14, %7
  %21 = add nuw i64 %8, 1, !dbg !659
  call void @llvm.dbg.value(metadata i64 %21, metadata !641, metadata !DIExpression()), !dbg !647
  %22 = icmp eq i64 %21, %2, !dbg !648
  br i1 %22, label %23, label %7, !dbg !650, !llvm.loop !660

23:                                               ; preds = %17, %20, %5, %1
  %24 = phi i32 [ 0, %1 ], [ 1, %5 ], [ 0, %17 ], [ 1, %20 ]
  ret i32 %24
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @validate_year(i8* nocapture readonly %0) #9 !dbg !662 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !664, metadata !DIExpression()), !dbg !665
  %2 = call i32 @all_digits(i8* %0), !dbg !666
  %3 = icmp eq i32 %2, 0, !dbg !666
  br i1 %3, label %8, label %4, !dbg !668

4:                                                ; preds = %1
  %5 = call i64 @strtol(i8* nocapture %0, i8** null, i32 10), !dbg !669
  %6 = trunc i64 %5 to i32, !dbg !669
  %7 = call i32 @within(i32 1900, i32 2014, i32 %6), !dbg !670
  br label %8, !dbg !671

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ 0, %1 ], !dbg !665
  ret i32 %9, !dbg !672
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @all_digits(i8* nocapture readonly %0) local_unnamed_addr #5 !dbg !673 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !675, metadata !DIExpression()), !dbg !678
  call void @llvm.dbg.value(metadata i64 0, metadata !676, metadata !DIExpression()), !dbg !679
  %2 = load i8, i8* %0, align 1, !dbg !680
  %3 = icmp eq i8 %2, 0, !dbg !682
  br i1 %3, label %15, label %7, !dbg !683

4:                                                ; preds = %7
  call void @llvm.dbg.value(metadata i64 %14, metadata !676, metadata !DIExpression()), !dbg !679
  %5 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !680
  %6 = icmp ult i64 %14, %5, !dbg !682
  br i1 %6, label %7, label %15, !dbg !683, !llvm.loop !684

7:                                                ; preds = %1, %4
  %8 = phi i64 [ %14, %4 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i64 %8, metadata !676, metadata !DIExpression()), !dbg !679
  %9 = getelementptr inbounds i8, i8* %0, i64 %8, !dbg !686
  %10 = load i8, i8* %9, align 1, !dbg !686, !tbaa !323
  %11 = sext i8 %10 to i32, !dbg !686
  %12 = add nsw i32 %11, -48, !dbg !688
  %13 = icmp ult i32 %12, 10, !dbg !688
  %14 = add nuw i64 %8, 1, !dbg !689
  call void @llvm.dbg.value(metadata i64 %14, metadata !676, metadata !DIExpression()), !dbg !679
  br i1 %13, label %4, label %15, !dbg !690

15:                                               ; preds = %4, %7, %1
  %16 = phi i32 [ 1, %1 ], [ 1, %4 ], [ 0, %7 ]
  ret i32 %16, !dbg !691
}

; Function Attrs: nofree nounwind
declare dso_local i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #10

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @within(i32 %0, i32 %1, i32 %2) local_unnamed_addr #11 !dbg !692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !696, metadata !DIExpression()), !dbg !699
  call void @llvm.dbg.value(metadata i32 %1, metadata !697, metadata !DIExpression()), !dbg !699
  call void @llvm.dbg.value(metadata i32 %2, metadata !698, metadata !DIExpression()), !dbg !699
  %4 = icmp sge i32 %2, %0, !dbg !700
  %5 = icmp sle i32 %2, %1, !dbg !701
  %6 = and i1 %5, %4, !dbg !701
  %7 = zext i1 %6 to i32, !dbg !701
  ret i32 %7, !dbg !702
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @validate_month(i8* nocapture readonly %0) #9 !dbg !703 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !705, metadata !DIExpression()), !dbg !706
  %2 = call i32 @all_digits(i8* %0), !dbg !707
  %3 = icmp eq i32 %2, 0, !dbg !707
  br i1 %3, label %8, label %4, !dbg !709

4:                                                ; preds = %1
  %5 = call i64 @strtol(i8* nocapture %0, i8** null, i32 10), !dbg !710
  %6 = trunc i64 %5 to i32, !dbg !710
  %7 = call i32 @within(i32 1, i32 12, i32 %6), !dbg !711
  br label %8, !dbg !712

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ 0, %1 ], !dbg !706
  ret i32 %9, !dbg !713
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_gpa(i8* nocapture readonly %0) #5 !dbg !714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !716, metadata !DIExpression()), !dbg !719
  %2 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !720
  %3 = icmp eq i64 %2, 4, !dbg !722
  br i1 %3, label %4, label %18, !dbg !723

4:                                                ; preds = %1, %15
  %5 = phi i64 [ %16, %15 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i64 %5, metadata !717, metadata !DIExpression()), !dbg !724
  %6 = icmp eq i64 %5, 1, !dbg !725
  %7 = getelementptr inbounds i8, i8* %0, i64 %5, !dbg !729
  %8 = load i8, i8* %7, align 1, !dbg !729, !tbaa !323
  br i1 %6, label %9, label %11, !dbg !730

9:                                                ; preds = %4
  %10 = icmp eq i8 %8, 46, !dbg !731
  br i1 %10, label %15, label %18, !dbg !734

11:                                               ; preds = %4
  %12 = sext i8 %8 to i32, !dbg !729
  %13 = add nsw i32 %12, -48, !dbg !735
  %14 = icmp ult i32 %13, 10, !dbg !735
  br i1 %14, label %15, label %18, !dbg !737

15:                                               ; preds = %9, %11
  %16 = add nuw nsw i64 %5, 1, !dbg !738
  call void @llvm.dbg.value(metadata i64 %16, metadata !717, metadata !DIExpression()), !dbg !724
  %17 = icmp eq i64 %16, 4, !dbg !739
  br i1 %17, label %18, label %4, !dbg !740, !llvm.loop !741

18:                                               ; preds = %11, %9, %15, %1
  %19 = phi i32 [ 0, %1 ], [ 1, %15 ], [ 0, %9 ], [ 0, %11 ]
  ret i32 %19
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_eye_color(i8* nocapture readonly %0) #5 !dbg !743 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !745, metadata !DIExpression()), !dbg !746
  %2 = call i32 @contains(i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @valid_eye_colors, i64 0, i64 0), i8* %0), !dbg !747
  ret i32 %2, !dbg !748
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_hair_color(i8* nocapture readonly %0) #5 !dbg !749 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !751, metadata !DIExpression()), !dbg !752
  %2 = call i32 @contains(i8** getelementptr inbounds ([15 x i8*], [15 x i8*]* @valid_hair_colors, i64 0, i64 0), i8* %0), !dbg !753
  ret i32 %2, !dbg !754
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_sex(i8* nocapture readonly %0) #5 !dbg !755 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !757, metadata !DIExpression()), !dbg !758
  %2 = call i64 @strlen(i8* nonnull dereferenceable(1) %0), !dbg !759
  %3 = icmp eq i64 %2, 1, !dbg !761
  br i1 %3, label %4, label %7, !dbg !762

4:                                                ; preds = %1
  %5 = load i8, i8* %0, align 1, !dbg !763, !tbaa !323
  switch i8 %5, label %7 [
    i8 77, label %6
    i8 70, label %6
  ], !dbg !765

6:                                                ; preds = %4, %4
  br label %7, !dbg !766

7:                                                ; preds = %4, %1, %6
  %8 = phi i32 [ 1, %6 ], [ 0, %1 ], [ 0, %4 ], !dbg !758
  ret i32 %8, !dbg !767
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @validate_weight(i8* nocapture readonly %0) #9 !dbg !768 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !770, metadata !DIExpression()), !dbg !771
  %2 = call i32 @all_digits(i8* %0), !dbg !772
  %3 = icmp eq i32 %2, 0, !dbg !772
  br i1 %3, label %8, label %4, !dbg !774

4:                                                ; preds = %1
  %5 = call i64 @strtol(i8* nocapture %0, i8** null, i32 10), !dbg !775
  %6 = trunc i64 %5 to i32, !dbg !775
  %7 = call i32 @within(i32 50, i32 500, i32 %6), !dbg !776
  br label %8, !dbg !777

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ 0, %1 ], !dbg !771
  ret i32 %9, !dbg !778
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @validate_height_inches(i8* nocapture readonly %0) #9 !dbg !779 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !781, metadata !DIExpression()), !dbg !782
  %2 = call i32 @all_digits(i8* %0), !dbg !783
  %3 = icmp eq i32 %2, 0, !dbg !783
  br i1 %3, label %8, label %4, !dbg !785

4:                                                ; preds = %1
  %5 = call i64 @strtol(i8* nocapture %0, i8** null, i32 10), !dbg !786
  %6 = trunc i64 %5 to i32, !dbg !786
  %7 = call i32 @within(i32 0, i32 11, i32 %6), !dbg !787
  br label %8, !dbg !788

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ 0, %1 ], !dbg !782
  ret i32 %9, !dbg !789
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @validate_height_feet(i8* nocapture readonly %0) #9 !dbg !790 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !792, metadata !DIExpression()), !dbg !793
  %2 = call i32 @all_digits(i8* %0), !dbg !794
  %3 = icmp eq i32 %2, 0, !dbg !794
  br i1 %3, label %8, label %4, !dbg !796

4:                                                ; preds = %1
  %5 = call i64 @strtol(i8* nocapture %0, i8** null, i32 10), !dbg !797
  %6 = trunc i64 %5 to i32, !dbg !797
  %7 = call i32 @within(i32 1, i32 9, i32 %6), !dbg !798
  br label %8, !dbg !799

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ 0, %1 ], !dbg !793
  ret i32 %9, !dbg !800
}

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @validate_day(i8* nocapture readonly %0) #9 !dbg !801 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !803, metadata !DIExpression()), !dbg !804
  %2 = call i32 @all_digits(i8* %0), !dbg !805
  %3 = icmp eq i32 %2, 0, !dbg !805
  br i1 %3, label %8, label %4, !dbg !807

4:                                                ; preds = %1
  %5 = call i64 @strtol(i8* nocapture %0, i8** null, i32 10), !dbg !808
  %6 = trunc i64 %5 to i32, !dbg !808
  %7 = call i32 @within(i32 1, i32 31, i32 %6), !dbg !809
  br label %8, !dbg !810

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ 0, %1 ], !dbg !804
  ret i32 %9, !dbg !811
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_suffix(i8* nocapture readonly %0) #5 !dbg !812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !814, metadata !DIExpression()), !dbg !815
  %2 = call i32 @contains(i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @valid_suffixes, i64 0, i64 0), i8* %0), !dbg !816
  ret i32 %2, !dbg !817
}

; Function Attrs: nounwind readonly uwtable
define dso_local i32 @validate_edu(i8* nocapture readonly %0) #5 !dbg !818 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !820, metadata !DIExpression()), !dbg !821
  %2 = call i32 @contains(i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @valid_education_levels, i64 0, i64 0), i8* %0), !dbg !822
  ret i32 %2, !dbg !823
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #0 !dbg !824 {
  %1 = alloca [4096 x i8], align 16
  %2 = getelementptr inbounds [4096 x i8], [4096 x i8]* %1, i64 0, i64 0, !dbg !835
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %2) #17, !dbg !835
  call void @llvm.dbg.declare(metadata [4096 x i8]* %1, metadata !828, metadata !DIExpression()), !dbg !836
  call void @llvm.dbg.value(metadata i32 1, metadata !832, metadata !DIExpression()), !dbg !837
  call void @llvm.dbg.value(metadata i32 0, metadata !834, metadata !DIExpression()), !dbg !837
  %3 = load void ()*, void ()** getelementptr inbounds (%struct.form.2, %struct.form.2* bitcast ({ i8*, i8*, i8*, void ()*, [5 x i32 (%struct.form*, i8*)*], %struct.page*, %struct.page*, %struct.question* }* @af86 to %struct.form.2*), i64 0, i32 3), align 8, !dbg !838, !tbaa !839
  call void %3() #17, !dbg !841
  call void bitcast (void (%struct.form*)* @print_greeting to void (%struct.form.2*)*)(%struct.form.2* nonnull bitcast ({ i8*, i8*, i8*, void ()*, [5 x i32 (%struct.form*, i8*)*], %struct.page*, %struct.page*, %struct.question* }* @af86 to %struct.form.2*)) #17, !dbg !842
  call void @llvm.dbg.value(metadata i32 0, metadata !834, metadata !DIExpression()), !dbg !837
  call void @llvm.dbg.value(metadata i32 1, metadata !832, metadata !DIExpression()), !dbg !837
  call void bitcast (void (%struct.form*, i32, i32)* @print_prompt to void (%struct.form.2*, i32, i32)*)(%struct.form.2* nonnull bitcast ({ i8*, i8*, i8*, void ()*, [5 x i32 (%struct.form*, i8*)*], %struct.page*, %struct.page*, %struct.question* }* @af86 to %struct.form.2*), i32 1, i32 0) #17, !dbg !843
  call void @llvm.dbg.value(metadata i32 0, metadata !832, metadata !DIExpression()), !dbg !837
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(4096) %2, i8 0, i64 4096, i1 false), !dbg !845
  %4 = call i32 @read_line(i8* nonnull %2) #17, !dbg !846
  %5 = icmp slt i32 %4, 0, !dbg !848
  br i1 %5, label %19, label %6, !dbg !849

6:                                                ; preds = %0, %14
  %7 = phi i32 [ %16, %14 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !834, metadata !DIExpression()), !dbg !837
  %8 = call i32 bitcast (i32 (%struct.form*, i8*)* @handle_line to i32 (%struct.form.2*, i8*)*)(%struct.form.2* nonnull bitcast ({ i8*, i8*, i8*, void ()*, [5 x i32 (%struct.form*, i8*)*], %struct.page*, %struct.page*, %struct.question* }* @af86 to %struct.form.2*), i8* nonnull %2) #17, !dbg !850
  call void @llvm.dbg.value(metadata i32 %8, metadata !833, metadata !DIExpression()), !dbg !837
  %9 = icmp slt i32 %8, 0, !dbg !851
  br i1 %9, label %19, label %10, !dbg !853

10:                                               ; preds = %6
  switch i32 %8, label %13 [
    i32 1, label %14
    i32 2, label %11
    i32 3, label %12
  ], !dbg !854

11:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 1, metadata !834, metadata !DIExpression()), !dbg !837
  br label %14, !dbg !855

12:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 1, metadata !832, metadata !DIExpression()), !dbg !837
  call void @llvm.dbg.value(metadata i32 0, metadata !834, metadata !DIExpression()), !dbg !837
  br label %14, !dbg !858

13:                                               ; preds = %10
  br label %14, !dbg !861

14:                                               ; preds = %10, %13, %12, %11
  %15 = phi i32 [ 0, %11 ], [ 1, %12 ], [ %8, %10 ], [ 0, %13 ], !dbg !862
  %16 = phi i32 [ 1, %11 ], [ 0, %12 ], [ %7, %10 ], [ %7, %13 ], !dbg !837
  call void @llvm.dbg.value(metadata i32 %16, metadata !834, metadata !DIExpression()), !dbg !837
  call void @llvm.dbg.value(metadata i32 %15, metadata !832, metadata !DIExpression()), !dbg !837
  call void bitcast (void (%struct.form*, i32, i32)* @print_prompt to void (%struct.form.2*, i32, i32)*)(%struct.form.2* nonnull bitcast ({ i8*, i8*, i8*, void ()*, [5 x i32 (%struct.form*, i8*)*], %struct.page*, %struct.page*, %struct.question* }* @af86 to %struct.form.2*), i32 %15, i32 %16) #17, !dbg !843
  call void @llvm.dbg.value(metadata i32 0, metadata !832, metadata !DIExpression()), !dbg !837
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(4096) %2, i8 0, i64 4096, i1 false), !dbg !845
  %17 = call i32 @read_line(i8* nonnull %2) #17, !dbg !846
  %18 = icmp slt i32 %17, 0, !dbg !848
  br i1 %18, label %19, label %6, !dbg !849, !llvm.loop !863

19:                                               ; preds = %14, %6, %0
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %2) #17, !dbg !865
  ret i32 0, !dbg !866
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: nounwind uwtable
define dso_local i32 @handle_next(%struct.form* nocapture %0, i8* nocapture readnone %1) #0 !dbg !867 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !910, metadata !DIExpression()), !dbg !913
  call void @llvm.dbg.value(metadata i8* %1, metadata !911, metadata !DIExpression()), !dbg !913
  %3 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 6, !dbg !914
  %4 = load %struct.page*, %struct.page** %3, align 8, !dbg !914, !tbaa !916
  %5 = getelementptr inbounds %struct.page, %struct.page* %4, i64 0, i32 0, !dbg !917
  %6 = load i8*, i8** %5, align 8, !dbg !917, !tbaa !918
  %7 = icmp eq i8* %6, null, !dbg !919
  br i1 %7, label %37, label %8, !dbg !920

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.page, %struct.page* %4, i64 0, i32 4, !dbg !921
  %10 = load i8, i8* %9, align 8, !dbg !921, !tbaa !923
  %11 = icmp eq i8 %10, 0, !dbg !924
  br i1 %11, label %12, label %14, !dbg !925

12:                                               ; preds = %8
  call fastcc void @print_next_title(%struct.form* %0), !dbg !926
  %13 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.146, i64 0, i64 0)) #17, !dbg !928
  br label %37, !dbg !929

14:                                               ; preds = %8
  %15 = call fastcc i32 @next_page(%struct.form* %0), !dbg !930
  call void @llvm.dbg.value(metadata i32 %15, metadata !912, metadata !DIExpression()), !dbg !913
  %16 = icmp slt i32 %15, 0, !dbg !931
  br i1 %16, label %37, label %17, !dbg !933

17:                                               ; preds = %14
  %18 = icmp eq i32 %15, 0, !dbg !934
  br i1 %18, label %19, label %37, !dbg !936

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 7, !dbg !937
  %21 = load %struct.question*, %struct.question** %20, align 8, !dbg !937, !tbaa !938
  %22 = icmp eq %struct.question* %21, null, !dbg !939
  br i1 %22, label %37, label %23, !dbg !940

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.question, %struct.question* %21, i64 0, i32 5, !dbg !941
  %25 = load %struct.question*, %struct.question** %24, align 8, !dbg !941, !tbaa !367
  %26 = icmp eq %struct.question* %25, null, !dbg !942
  br i1 %26, label %37, label %27, !dbg !943

27:                                               ; preds = %23, %33
  %28 = phi %struct.question* [ %35, %33 ], [ %25, %23 ]
  %29 = phi %struct.question* [ %28, %33 ], [ %21, %23 ]
  %30 = getelementptr inbounds %struct.question, %struct.question* %29, i64 0, i32 2, !dbg !944
  %31 = load i8*, i8** %30, align 8, !dbg !944, !tbaa !945
  %32 = icmp eq i8* %31, null, !dbg !946
  br i1 %32, label %37, label %33, !dbg !947

33:                                               ; preds = %27
  store %struct.question* %28, %struct.question** %20, align 8, !dbg !948, !tbaa !938
  %34 = getelementptr inbounds %struct.question, %struct.question* %28, i64 0, i32 5, !dbg !941
  %35 = load %struct.question*, %struct.question** %34, align 8, !dbg !941, !tbaa !367
  %36 = icmp eq %struct.question* %35, null, !dbg !942
  br i1 %36, label %37, label %27, !dbg !943

37:                                               ; preds = %33, %27, %23, %19, %17, %14, %2, %12
  %38 = phi i32 [ 1, %12 ], [ 1, %2 ], [ -1, %14 ], [ 2, %17 ], [ 1, %19 ], [ 1, %23 ], [ 1, %27 ], [ 1, %33 ], !dbg !913
  ret i32 %38, !dbg !949
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_next_title(%struct.form* nocapture readonly %0) unnamed_addr #0 !dbg !950 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !954, metadata !DIExpression()), !dbg !955
  %2 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 6, !dbg !956
  %3 = load %struct.page*, %struct.page** %2, align 8, !dbg !956, !tbaa !916
  %4 = getelementptr inbounds %struct.page, %struct.page* %3, i64 0, i32 2, !dbg !958
  %5 = load %struct.page*, %struct.page** %4, align 8, !dbg !958, !tbaa !343
  %6 = getelementptr inbounds %struct.page, %struct.page* %5, i64 0, i32 0, !dbg !959
  %7 = load i8*, i8** %6, align 8, !dbg !959, !tbaa !918
  %8 = icmp eq i8* %7, null, !dbg !960
  br i1 %8, label %9, label %13, !dbg !961

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 1, !dbg !962
  %11 = load i8*, i8** %10, align 8, !dbg !962, !tbaa !963
  %12 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.147, i64 0, i64 0), i8* %11) #17, !dbg !962
  br label %20, !dbg !962

13:                                               ; preds = %1
  %14 = call i32 @strncmp(i8* nonnull %7, i8* nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.148, i64 0, i64 0), i64 3), !dbg !964
  %15 = icmp eq i32 %14, 0, !dbg !966
  br i1 %15, label %16, label %18, !dbg !967

16:                                               ; preds = %13
  %17 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.149, i64 0, i64 0)) #17, !dbg !968
  br label %20, !dbg !968

18:                                               ; preds = %13
  %19 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i64 0, i64 0), i8* nonnull %7) #17, !dbg !969
  br label %20

20:                                               ; preds = %16, %18, %9
  ret void, !dbg !970
}

declare !dbg !207 dso_local i32 @fdprintf(i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind uwtable
define internal fastcc i32 @next_page(%struct.form* nocapture %0) unnamed_addr #13 !dbg !971 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !975, metadata !DIExpression()), !dbg !976
  %2 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 6, !dbg !977
  %3 = load %struct.page*, %struct.page** %2, align 8, !dbg !977, !tbaa !916
  %4 = icmp eq %struct.page* %3, null, !dbg !979
  br i1 %4, label %15, label %5, !dbg !980

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.page, %struct.page* %3, i64 0, i32 2, !dbg !981
  %7 = load %struct.page*, %struct.page** %6, align 8, !dbg !981, !tbaa !343
  %8 = icmp eq %struct.page* %7, null, !dbg !983
  br i1 %8, label %15, label %9, !dbg !984

9:                                                ; preds = %5
  store %struct.page* %7, %struct.page** %2, align 8, !dbg !985, !tbaa !916
  %10 = getelementptr inbounds %struct.page, %struct.page* %7, i64 0, i32 3, !dbg !986
  %11 = bitcast %struct.question** %10 to i64*, !dbg !986
  %12 = load i64, i64* %11, align 8, !dbg !986, !tbaa !357
  %13 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 7, !dbg !987
  %14 = bitcast %struct.question** %13 to i64*, !dbg !988
  store i64 %12, i64* %14, align 8, !dbg !988, !tbaa !938
  br label %15, !dbg !989

15:                                               ; preds = %5, %1, %9
  %16 = phi i32 [ 0, %9 ], [ -1, %1 ], [ 1, %5 ], !dbg !976
  ret i32 %16, !dbg !990
}

; Function Attrs: noreturn nounwind uwtable
define dso_local i32 @handle_exit(%struct.form* nocapture readnone %0, i8* nocapture readnone %1) #14 !dbg !991 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !993, metadata !DIExpression()), !dbg !995
  call void @llvm.dbg.value(metadata i8* %1, metadata !994, metadata !DIExpression()), !dbg !995
  %3 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.153, i64 0, i64 0)) #17, !dbg !996
  call fastcc void @exit(), !dbg !997
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @exit() unnamed_addr #14 !dbg !998 {
  call void @llvm.dbg.value(metadata i32 0, metadata !1002, metadata !DIExpression()), !dbg !1003
  call void @_terminate(i32 0) #19, !dbg !1004
  unreachable, !dbg !1004
}

; Function Attrs: noreturn
declare !dbg !217 dso_local void @_terminate(i32) local_unnamed_addr #15

; Function Attrs: nounwind uwtable
define dso_local i32 @handle_help(%struct.form* nocapture readonly %0, i8* nocapture readnone %1) #0 !dbg !1005 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !1007, metadata !DIExpression()), !dbg !1009
  call void @llvm.dbg.value(metadata i8* %1, metadata !1008, metadata !DIExpression()), !dbg !1009
  %3 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 2, !dbg !1010
  %4 = load i8*, i8** %3, align 8, !dbg !1010, !tbaa !1011
  %5 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.147, i64 0, i64 0), i8* %4) #17, !dbg !1010
  ret i32 1, !dbg !1012
}

; Function Attrs: nounwind uwtable
define dso_local i32 @handle_prev(%struct.form* nocapture %0, i8* nocapture readnone %1) #0 !dbg !1013 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !1015, metadata !DIExpression()), !dbg !1017
  call void @llvm.dbg.value(metadata i8* %1, metadata !1016, metadata !DIExpression()), !dbg !1017
  %3 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 6, !dbg !1018
  %4 = load %struct.page*, %struct.page** %3, align 8, !dbg !1018, !tbaa !916
  %5 = icmp eq %struct.page* %4, null, !dbg !1020
  br i1 %5, label %17, label %6, !dbg !1021

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.page, %struct.page* %4, i64 0, i32 1, !dbg !1022
  %8 = load %struct.page*, %struct.page** %7, align 8, !dbg !1022, !tbaa !340
  %9 = icmp eq %struct.page* %8, null, !dbg !1024
  br i1 %9, label %10, label %11, !dbg !1025

10:                                               ; preds = %6
  call fastcc void @print_title(%struct.form* %0), !dbg !1026
  br label %17, !dbg !1028

11:                                               ; preds = %6
  store %struct.page* %8, %struct.page** %3, align 8, !dbg !1029, !tbaa !916
  %12 = getelementptr inbounds %struct.page, %struct.page* %8, i64 0, i32 3, !dbg !1030
  %13 = bitcast %struct.question** %12 to i64*, !dbg !1030
  %14 = load i64, i64* %13, align 8, !dbg !1030, !tbaa !357
  %15 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 7, !dbg !1031
  %16 = bitcast %struct.question** %15 to i64*, !dbg !1032
  store i64 %14, i64* %16, align 8, !dbg !1032, !tbaa !938
  br label %17, !dbg !1033

17:                                               ; preds = %2, %11, %10
  %18 = phi i32 [ 0, %10 ], [ 1, %11 ], [ -1, %2 ], !dbg !1017
  ret i32 %18, !dbg !1034
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_title(%struct.form* nocapture readonly %0) unnamed_addr #0 !dbg !1035 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !1037, metadata !DIExpression()), !dbg !1038
  %2 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 6, !dbg !1039
  %3 = load %struct.page*, %struct.page** %2, align 8, !dbg !1039, !tbaa !916
  %4 = getelementptr inbounds %struct.page, %struct.page* %3, i64 0, i32 0, !dbg !1041
  %5 = load i8*, i8** %4, align 8, !dbg !1041, !tbaa !918
  %6 = call i32 @strncmp(i8* nonnull dereferenceable(1) %5, i8* nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.148, i64 0, i64 0), i64 3), !dbg !1042
  %7 = icmp eq i32 %6, 0, !dbg !1043
  br i1 %7, label %8, label %10, !dbg !1044

8:                                                ; preds = %1
  %9 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.149, i64 0, i64 0)) #17, !dbg !1045
  br label %12, !dbg !1045

10:                                               ; preds = %1
  %11 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.150, i64 0, i64 0), i8* %5) #17, !dbg !1046
  br label %12

12:                                               ; preds = %10, %8
  ret void, !dbg !1047
}

; Function Attrs: nounwind uwtable
define dso_local i32 @handle_update(%struct.form* nocapture readonly %0, i8* readonly %1) #0 !dbg !1048 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !1050, metadata !DIExpression()), !dbg !1054
  call void @llvm.dbg.value(metadata i8* %1, metadata !1051, metadata !DIExpression()), !dbg !1054
  %3 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 6, !dbg !1055
  %4 = load %struct.page*, %struct.page** %3, align 8, !dbg !1055, !tbaa !916
  %5 = getelementptr inbounds %struct.page, %struct.page* %4, i64 0, i32 4, !dbg !1057
  %6 = load i8, i8* %5, align 8, !dbg !1057, !tbaa !923
  %7 = icmp eq i8 %6, 0, !dbg !1058
  br i1 %7, label %8, label %10, !dbg !1059

8:                                                ; preds = %2
  %9 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.160, i64 0, i64 0)) #17, !dbg !1060
  br label %69, !dbg !1062

10:                                               ; preds = %2
  %11 = icmp eq i8* %1, null, !dbg !1063
  br i1 %11, label %69, label %12, !dbg !1065

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.page, %struct.page* %4, i64 0, i32 3, !dbg !1066
  call void @llvm.dbg.value(metadata %struct.question* undef, metadata !1052, metadata !DIExpression()), !dbg !1054
  %14 = load %struct.question*, %struct.question** %13, align 8, !dbg !1054, !tbaa !600
  call void @llvm.dbg.value(metadata %struct.question* %14, metadata !1052, metadata !DIExpression()), !dbg !1054
  %15 = icmp eq %struct.question* %14, null, !dbg !1067
  br i1 %15, label %27, label %16, !dbg !1067

16:                                               ; preds = %12, %23
  %17 = phi %struct.question* [ %25, %23 ], [ %14, %12 ]
  %18 = getelementptr inbounds %struct.question, %struct.question* %17, i64 0, i32 0, !dbg !1069
  %19 = load i8*, i8** %18, align 8, !dbg !1069, !tbaa !1072
  %20 = call i64 @strlen(i8* nonnull dereferenceable(1) %19), !dbg !1073
  %21 = call i32 @strncmp(i8* %19, i8* nonnull %1, i64 %20), !dbg !1074
  %22 = icmp eq i32 %21, 0, !dbg !1075
  br i1 %22, label %30, label %23, !dbg !1076

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.question, %struct.question* %17, i64 0, i32 5, !dbg !1077
  call void @llvm.dbg.value(metadata %struct.question* undef, metadata !1052, metadata !DIExpression()), !dbg !1054
  %25 = load %struct.question*, %struct.question** %24, align 8, !dbg !1054, !tbaa !600
  call void @llvm.dbg.value(metadata %struct.question* %25, metadata !1052, metadata !DIExpression()), !dbg !1054
  %26 = icmp eq %struct.question* %25, null, !dbg !1067
  br i1 %26, label %27, label %16, !dbg !1067, !llvm.loop !1078

27:                                               ; preds = %23, %12
  %28 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4.161, i64 0, i64 0)) #17, !dbg !1080
  %29 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.162, i64 0, i64 0)) #17, !dbg !1083
  br label %69, !dbg !1084

30:                                               ; preds = %16
  %31 = call dereferenceable_or_null(4096) i8* @malloc(i64 4096), !dbg !1085
  call void @llvm.dbg.value(metadata i8* %31, metadata !1053, metadata !DIExpression()), !dbg !1054
  %32 = icmp eq i8* %31, null, !dbg !1086
  br i1 %32, label %69, label %33, !dbg !1088

33:                                               ; preds = %30
  call fastcc void @prompt_q(%struct.question* nonnull %17), !dbg !1089
  %34 = call i32 @read_line(i8* nonnull %31) #17, !dbg !1090
  %35 = icmp slt i32 %34, 0, !dbg !1092
  br i1 %35, label %69, label %36, !dbg !1093

36:                                               ; preds = %33
  %37 = load i8, i8* %31, align 1, !dbg !1094
  %38 = icmp eq i8 %37, 0, !dbg !1096
  br i1 %38, label %39, label %49, !dbg !1097

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.question, %struct.question* %17, i64 0, i32 3, !dbg !1098
  %41 = load i8, i8* %40, align 8, !dbg !1098, !tbaa !1099
  %42 = icmp eq i8 %41, 0, !dbg !1100
  br i1 %42, label %49, label %43, !dbg !1101

43:                                               ; preds = %39
  call void @free(i8* %31), !dbg !1102
  %44 = getelementptr inbounds %struct.question, %struct.question* %17, i64 0, i32 2, !dbg !1106
  %45 = load i8*, i8** %44, align 8, !dbg !1106, !tbaa !945
  %46 = icmp eq i8* %45, null, !dbg !1108
  br i1 %46, label %48, label %47, !dbg !1109

47:                                               ; preds = %43
  call void @free(i8* %45), !dbg !1110
  br label %48, !dbg !1112

48:                                               ; preds = %43, %47
  store i8* null, i8** %44, align 8, !dbg !1113, !tbaa !945
  br label %69, !dbg !1114

49:                                               ; preds = %39, %36
  %50 = getelementptr inbounds %struct.question, %struct.question* %17, i64 0, i32 6, !dbg !1115
  %51 = load i32 (i8*)*, i32 (i8*)** %50, align 8, !dbg !1115, !tbaa !1117
  %52 = call i32 %51(i8* nonnull %31) #17, !dbg !1118
  %53 = icmp eq i32 %52, 0, !dbg !1118
  br i1 %53, label %54, label %57, !dbg !1119

54:                                               ; preds = %49
  call void @free(i8* %31), !dbg !1120
  %55 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.163, i64 0, i64 0)) #17, !dbg !1124
  %56 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.162, i64 0, i64 0)) #17, !dbg !1125
  br label %69, !dbg !1126

57:                                               ; preds = %49
  %58 = getelementptr inbounds %struct.question, %struct.question* %17, i64 0, i32 2, !dbg !1127
  %59 = load i8*, i8** %58, align 8, !dbg !1127, !tbaa !945
  %60 = icmp eq i8* %59, null, !dbg !1129
  br i1 %60, label %61, label %62, !dbg !1130

61:                                               ; preds = %57
  store i8* %31, i8** %58, align 8, !dbg !1131, !tbaa !945
  br label %69, !dbg !1133

62:                                               ; preds = %57
  %63 = call i64 @strlen(i8* nonnull %59), !dbg !1134
  %64 = call i32 @strncmp(i8* nonnull %59, i8* nonnull %31, i64 %63), !dbg !1136
  %65 = icmp eq i32 %64, 0, !dbg !1137
  br i1 %65, label %66, label %68, !dbg !1138

66:                                               ; preds = %62
  %67 = call i8* @strcpy(i8* nonnull dereferenceable(1) %59, i8* nonnull %31), !dbg !1139
  call void @free(i8* %31), !dbg !1141
  br label %69, !dbg !1142

68:                                               ; preds = %62
  call void @free(i8* %59), !dbg !1143
  store i8* %31, i8** %58, align 8, !dbg !1145, !tbaa !945
  br label %69

69:                                               ; preds = %61, %68, %66, %33, %30, %10, %54, %48, %27, %8
  %70 = phi i32 [ 1, %27 ], [ 1, %48 ], [ 1, %54 ], [ 1, %8 ], [ 1, %10 ], [ -1, %30 ], [ -1, %33 ], [ 1, %66 ], [ 1, %68 ], [ 1, %61 ], !dbg !1054
  ret i32 %70, !dbg !1146
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define internal fastcc void @prompt_q(%struct.question* nocapture readonly %0) unnamed_addr #0 !dbg !1147 {
  call void @llvm.dbg.value(metadata %struct.question* %0, metadata !1151, metadata !DIExpression()), !dbg !1152
  %2 = getelementptr inbounds %struct.question, %struct.question* %0, i64 0, i32 1, !dbg !1153
  %3 = load i8*, i8** %2, align 8, !dbg !1153, !tbaa !1155
  %4 = icmp eq i8* %3, null, !dbg !1156
  %5 = getelementptr inbounds %struct.question, %struct.question* %0, i64 0, i32 0, !dbg !1157
  %6 = load i8*, i8** %5, align 8, !dbg !1157, !tbaa !1072
  br i1 %4, label %9, label %7, !dbg !1158

7:                                                ; preds = %1
  %8 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.164, i64 0, i64 0), i8* %6, i8* nonnull %3) #17, !dbg !1159
  br label %11, !dbg !1159

9:                                                ; preds = %1
  %10 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.165, i64 0, i64 0), i8* %6) #17, !dbg !1160
  br label %11

11:                                               ; preds = %9, %7
  ret void, !dbg !1161
}

; Function Attrs: nounwind
declare !dbg !213 dso_local void @free(i8* nocapture) local_unnamed_addr #16

; Function Attrs: nofree nounwind
declare dso_local i8* @strcpy(i8* noalias returned, i8* noalias nocapture readonly) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define dso_local void @print_prompt(%struct.form* nocapture readonly %0, i32 %1, i32 %2) local_unnamed_addr #0 !dbg !1162 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !1166, metadata !DIExpression()), !dbg !1169
  call void @llvm.dbg.value(metadata i32 %1, metadata !1167, metadata !DIExpression()), !dbg !1169
  call void @llvm.dbg.value(metadata i32 %2, metadata !1168, metadata !DIExpression()), !dbg !1169
  %4 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 6, !dbg !1170
  %5 = load %struct.page*, %struct.page** %4, align 8, !dbg !1170, !tbaa !916
  %6 = getelementptr inbounds %struct.page, %struct.page* %5, i64 0, i32 0, !dbg !1172
  %7 = load i8*, i8** %6, align 8, !dbg !1172, !tbaa !918
  %8 = icmp eq i8* %7, null, !dbg !1173
  br i1 %8, label %9, label %13, !dbg !1174

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 1, !dbg !1175
  %11 = load i8*, i8** %10, align 8, !dbg !1175, !tbaa !963
  %12 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.147, i64 0, i64 0), i8* %11) #17, !dbg !1175
  br label %25, !dbg !1177

13:                                               ; preds = %3
  %14 = icmp eq i32 %1, 0, !dbg !1178
  br i1 %14, label %16, label %15, !dbg !1180

15:                                               ; preds = %13
  call fastcc void @print_title(%struct.form* %0), !dbg !1181
  br label %16, !dbg !1181

16:                                               ; preds = %13, %15
  %17 = load %struct.page*, %struct.page** %4, align 8, !dbg !1182, !tbaa !916
  %18 = getelementptr inbounds %struct.page, %struct.page* %17, i64 0, i32 4, !dbg !1184
  %19 = load i8, i8* %18, align 8, !dbg !1184, !tbaa !923
  %20 = icmp eq i8 %19, 0, !dbg !1185
  br i1 %20, label %22, label %21, !dbg !1186

21:                                               ; preds = %16
  call fastcc void @print_page(%struct.form* %0), !dbg !1187
  call fastcc void @prompt_next(), !dbg !1189
  br label %25, !dbg !1190

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 7, !dbg !1191
  %24 = load %struct.question*, %struct.question** %23, align 8, !dbg !1191, !tbaa !938
  call fastcc void @prompt_q(%struct.question* %24), !dbg !1192
  br label %25, !dbg !1193

25:                                               ; preds = %22, %21, %9
  ret void, !dbg !1193
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_page(%struct.form* nocapture readonly %0) unnamed_addr #0 !dbg !1194 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !1196, metadata !DIExpression()), !dbg !1198
  %2 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 6, !dbg !1199
  %3 = load %struct.page*, %struct.page** %2, align 8, !dbg !1199, !tbaa !916
  %4 = getelementptr inbounds %struct.page, %struct.page* %3, i64 0, i32 3, !dbg !1200
  %5 = load %struct.question*, %struct.question** %4, align 8, !dbg !1200, !tbaa !357
  call void @llvm.dbg.value(metadata %struct.question* %5, metadata !1197, metadata !DIExpression()), !dbg !1198
  %6 = getelementptr inbounds %struct.page, %struct.page* %3, i64 0, i32 0, !dbg !1201
  %7 = load i8*, i8** %6, align 8, !dbg !1201, !tbaa !918
  %8 = call i32 @strncmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.169, i64 0, i64 0), i64 3), !dbg !1203
  %9 = icmp eq i32 %8, 0, !dbg !1204
  br i1 %9, label %17, label %10, !dbg !1205

10:                                               ; preds = %1
  %11 = call i32 @strncmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.170, i64 0, i64 0), i64 3), !dbg !1206
  %12 = icmp eq i32 %11, 0, !dbg !1208
  br i1 %12, label %17, label %13, !dbg !1209

13:                                               ; preds = %10
  %14 = call i32 @strncmp(i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.148, i64 0, i64 0), i64 3), !dbg !1210
  %15 = icmp eq i32 %14, 0, !dbg !1212
  %16 = select i1 %15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16.171, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17.172, i64 0, i64 0)
  br label %17

17:                                               ; preds = %13, %10, %1
  %18 = phi i8* [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13.173, i64 0, i64 0), %1 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15.174, i64 0, i64 0), %10 ], [ %16, %13 ]
  %19 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* %18, i8* %7) #17, !dbg !1213
  call void @llvm.dbg.value(metadata %struct.question* %5, metadata !1197, metadata !DIExpression()), !dbg !1198
  %20 = icmp eq %struct.question* %5, null, !dbg !1214
  br i1 %20, label %36, label %21, !dbg !1217

21:                                               ; preds = %17, %32
  %22 = phi %struct.question* [ %34, %32 ], [ %5, %17 ]
  call void @llvm.dbg.value(metadata %struct.question* %22, metadata !1197, metadata !DIExpression()), !dbg !1198
  %23 = getelementptr inbounds %struct.question, %struct.question* %22, i64 0, i32 2, !dbg !1218
  %24 = load i8*, i8** %23, align 8, !dbg !1218, !tbaa !945
  %25 = icmp eq i8* %24, null, !dbg !1220
  %26 = getelementptr inbounds %struct.question, %struct.question* %22, i64 0, i32 0, !dbg !1221
  %27 = load i8*, i8** %26, align 8, !dbg !1221, !tbaa !1072
  br i1 %25, label %30, label %28, !dbg !1222

28:                                               ; preds = %21
  %29 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.175, i64 0, i64 0), i8* %27, i8* nonnull %24) #17, !dbg !1223
  br label %32, !dbg !1223

30:                                               ; preds = %21
  %31 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.176, i64 0, i64 0), i8* %27) #17, !dbg !1224
  br label %32

32:                                               ; preds = %28, %30
  %33 = getelementptr inbounds %struct.question, %struct.question* %22, i64 0, i32 5, !dbg !1225
  %34 = load %struct.question*, %struct.question** %33, align 8, !dbg !1225, !tbaa !367
  call void @llvm.dbg.value(metadata %struct.question* %34, metadata !1197, metadata !DIExpression()), !dbg !1198
  %35 = icmp eq %struct.question* %34, null, !dbg !1214
  br i1 %35, label %36, label %21, !dbg !1217, !llvm.loop !1226

36:                                               ; preds = %32, %17
  ret void, !dbg !1228
}

; Function Attrs: nounwind uwtable
define internal fastcc void @prompt_next() unnamed_addr #0 !dbg !1229 {
  %1 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20.168, i64 0, i64 0)) #17, !dbg !1230
  ret void, !dbg !1231
}

; Function Attrs: nounwind uwtable
define dso_local i32 @handle_line(%struct.form* %0, i8* %1) local_unnamed_addr #0 !dbg !1232 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !1234, metadata !DIExpression()), !dbg !1237
  call void @llvm.dbg.value(metadata i8* %1, metadata !1235, metadata !DIExpression()), !dbg !1237
  %3 = call fastcc i32 @is_cmd(i8* %1), !dbg !1238
  %4 = icmp eq i32 %3, 0, !dbg !1238
  br i1 %4, label %7, label %5, !dbg !1240

5:                                                ; preds = %2
  %6 = call fastcc i32 @handle_cmd(%struct.form* %0, i8* %1), !dbg !1241
  br label %32, !dbg !1242

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 6, !dbg !1243
  %9 = load %struct.page*, %struct.page** %8, align 8, !dbg !1243, !tbaa !916
  %10 = getelementptr inbounds %struct.page, %struct.page* %9, i64 0, i32 4, !dbg !1245
  %11 = load i8, i8* %10, align 8, !dbg !1245, !tbaa !923
  %12 = icmp eq i8 %11, 0, !dbg !1246
  br i1 %12, label %13, label %32, !dbg !1247

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 7, !dbg !1248
  %15 = load %struct.question*, %struct.question** %14, align 8, !dbg !1248, !tbaa !938
  %16 = icmp eq %struct.question* %15, null, !dbg !1249
  br i1 %16, label %32, label %17, !dbg !1250

17:                                               ; preds = %13
  %18 = load i8, i8* %1, align 1, !dbg !1251
  %19 = icmp eq i8 %18, 0, !dbg !1253
  br i1 %19, label %20, label %24, !dbg !1254

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.question, %struct.question* %15, i64 0, i32 3, !dbg !1255
  %22 = load i8, i8* %21, align 8, !dbg !1255, !tbaa !1099
  %23 = icmp eq i8 %22, 0, !dbg !1258
  br i1 %23, label %32, label %29, !dbg !1259

24:                                               ; preds = %17
  %25 = call fastcc i32 @handle_answer(%struct.form* %0, i8* nonnull %1), !dbg !1260
  call void @llvm.dbg.value(metadata i32 %25, metadata !1236, metadata !DIExpression()), !dbg !1237
  %26 = icmp slt i32 %25, 0, !dbg !1262
  br i1 %26, label %32, label %27, !dbg !1264

27:                                               ; preds = %24
  %28 = icmp eq i32 %25, 0, !dbg !1265
  br i1 %28, label %29, label %32, !dbg !1267

29:                                               ; preds = %20, %27
  %30 = call fastcc i32 @next_question(%struct.form* %0), !dbg !1268
  call void @llvm.dbg.value(metadata i32 %30, metadata !1236, metadata !DIExpression()), !dbg !1237
  %31 = ashr i32 %30, 31, !dbg !1269
  br label %32, !dbg !1269

32:                                               ; preds = %29, %27, %24, %20, %13, %7, %5
  %33 = phi i32 [ %6, %5 ], [ 1, %7 ], [ 1, %13 ], [ 0, %20 ], [ -1, %24 ], [ 0, %27 ], [ %31, %29 ], !dbg !1237
  ret i32 %33, !dbg !1271
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @is_cmd(i8* %0) unnamed_addr #0 !dbg !1272 {
  call void @llvm.dbg.value(metadata %struct.form* undef, metadata !1274, metadata !DIExpression()), !dbg !1276
  call void @llvm.dbg.value(metadata i8* %0, metadata !1275, metadata !DIExpression()), !dbg !1276
  %2 = call i32 @strncmp(i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.185, i64 0, i64 0), i8* nonnull dereferenceable(1) %0, i64 2), !dbg !1277
  %3 = icmp eq i32 %2, 0, !dbg !1277
  br i1 %3, label %4, label %8, !dbg !1279

4:                                                ; preds = %1
  %5 = call fastcc i32 @handler_index(i8* %0), !dbg !1280
  %6 = lshr i32 %5, 31, !dbg !1281
  %7 = xor i32 %6, 1, !dbg !1281
  br label %8, !dbg !1282

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ 0, %1 ], !dbg !1276
  ret i32 %9, !dbg !1283
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @handle_cmd(%struct.form* %0, i8* nocapture readonly %1) unnamed_addr #0 !dbg !1284 {
  %3 = alloca i8*, align 8
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !1286, metadata !DIExpression()), !dbg !1293
  call void @llvm.dbg.value(metadata i8* %1, metadata !1287, metadata !DIExpression()), !dbg !1293
  %4 = bitcast i8** %3 to i8*, !dbg !1294
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17, !dbg !1294
  %5 = call i64 @strlen(i8* nonnull dereferenceable(1) %1), !dbg !1295
  %6 = add i64 %5, 1, !dbg !1296
  %7 = call i8* @malloc(i64 %6), !dbg !1297
  call void @llvm.dbg.value(metadata i8* %7, metadata !1288, metadata !DIExpression()), !dbg !1293
  store i8* %7, i8** %3, align 8, !dbg !1298, !tbaa !600
  %8 = icmp eq i8* %7, null, !dbg !1299
  br i1 %8, label %29, label %9, !dbg !1301

9:                                                ; preds = %2
  %10 = call i8* @strcpy(i8* nonnull %7, i8* nonnull dereferenceable(1) %1), !dbg !1302
  %11 = load i8*, i8** %3, align 8, !dbg !1303, !tbaa !600
  call void @llvm.dbg.value(metadata i8* %11, metadata !1288, metadata !DIExpression()), !dbg !1293
  %12 = call i64 @strlen(i8* nonnull dereferenceable(1) %1), !dbg !1304
  %13 = getelementptr inbounds i8, i8* %11, i64 %12, !dbg !1303
  store i8 0, i8* %13, align 1, !dbg !1305, !tbaa !323
  call void @llvm.dbg.value(metadata i8** %3, metadata !1288, metadata !DIExpression(DW_OP_deref)), !dbg !1293
  %14 = call i8* @strsep(i8** nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.179, i64 0, i64 0)) #17, !dbg !1306
  call void @llvm.dbg.value(metadata i8* %14, metadata !1290, metadata !DIExpression()), !dbg !1293
  %15 = call fastcc i32 @handler_index(i8* %14), !dbg !1307
  call void @llvm.dbg.value(metadata i32 %15, metadata !1291, metadata !DIExpression()), !dbg !1293
  %16 = icmp slt i32 %15, 0, !dbg !1308
  br i1 %16, label %25, label %17, !dbg !1310

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 4, !dbg !1311
  %19 = bitcast [5 x {}*]* %18 to [5 x i32 (%struct.form*, i8*)*]*, !dbg !1311
  %20 = sext i32 %15 to i64, !dbg !1312
  %21 = getelementptr inbounds [5 x i32 (%struct.form*, i8*)*], [5 x i32 (%struct.form*, i8*)*]* %19, i64 0, i64 %20, !dbg !1312
  %22 = load i32 (%struct.form*, i8*)*, i32 (%struct.form*, i8*)** %21, align 8, !dbg !1312, !tbaa !600
  %23 = load i8*, i8** %3, align 8, !dbg !1313, !tbaa !600
  call void @llvm.dbg.value(metadata i8* %23, metadata !1288, metadata !DIExpression()), !dbg !1293
  %24 = call i32 %22(%struct.form* %0, i8* %23) #17, !dbg !1312
  call void @llvm.dbg.value(metadata i32 %24, metadata !1289, metadata !DIExpression()), !dbg !1293
  br label %25, !dbg !1314

25:                                               ; preds = %9, %17
  %26 = phi i32 [ %24, %17 ], [ %15, %9 ], !dbg !1293
  call void @llvm.dbg.value(metadata i32 %26, metadata !1289, metadata !DIExpression()), !dbg !1293
  call void @llvm.dbg.label(metadata !1292), !dbg !1315
  %27 = icmp eq i8* %14, null, !dbg !1316
  br i1 %27, label %29, label %28, !dbg !1318

28:                                               ; preds = %25
  call void @free(i8* %14), !dbg !1319
  br label %29, !dbg !1321

29:                                               ; preds = %28, %25, %2
  %30 = phi i32 [ -1, %2 ], [ %26, %25 ], [ %26, %28 ], !dbg !1293
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17, !dbg !1322
  ret i32 %30, !dbg !1322
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @handle_answer(%struct.form* nocapture readonly %0, i8* %1) unnamed_addr #0 !dbg !1323 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !1325, metadata !DIExpression()), !dbg !1327
  call void @llvm.dbg.value(metadata i8* %1, metadata !1326, metadata !DIExpression()), !dbg !1327
  %3 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 7, !dbg !1328
  %4 = load %struct.question*, %struct.question** %3, align 8, !dbg !1328, !tbaa !938
  %5 = getelementptr inbounds %struct.question, %struct.question* %4, i64 0, i32 6, !dbg !1330
  %6 = load i32 (i8*)*, i32 (i8*)** %5, align 8, !dbg !1330, !tbaa !1117
  %7 = call i32 %6(i8* %1) #17, !dbg !1331
  %8 = icmp eq i32 %7, 0, !dbg !1331
  br i1 %8, label %24, label %9, !dbg !1332

9:                                                ; preds = %2
  %10 = load %struct.question*, %struct.question** %3, align 8, !dbg !1333, !tbaa !938
  %11 = getelementptr inbounds %struct.question, %struct.question* %10, i64 0, i32 2, !dbg !1335
  %12 = load i8*, i8** %11, align 8, !dbg !1335, !tbaa !945
  %13 = icmp eq i8* %12, null, !dbg !1336
  br i1 %13, label %15, label %14, !dbg !1337

14:                                               ; preds = %9
  call void @free(i8* %12), !dbg !1338
  br label %15, !dbg !1340

15:                                               ; preds = %9, %14
  %16 = call i64 @strlen(i8* nonnull dereferenceable(1) %1), !dbg !1341
  %17 = add i64 %16, 1, !dbg !1342
  %18 = call i8* @malloc(i64 %17), !dbg !1343
  %19 = load %struct.question*, %struct.question** %3, align 8, !dbg !1344, !tbaa !938
  %20 = getelementptr inbounds %struct.question, %struct.question* %19, i64 0, i32 2, !dbg !1345
  store i8* %18, i8** %20, align 8, !dbg !1346, !tbaa !945
  %21 = icmp eq i8* %18, null, !dbg !1347
  br i1 %21, label %24, label %22, !dbg !1349

22:                                               ; preds = %15
  %23 = call i8* @strcpy(i8* nonnull %18, i8* nonnull dereferenceable(1) %1), !dbg !1350
  br label %24, !dbg !1351

24:                                               ; preds = %15, %2, %22
  %25 = phi i32 [ 0, %22 ], [ 1, %2 ], [ -1, %15 ], !dbg !1327
  ret i32 %25, !dbg !1352
}

; Function Attrs: nofree norecurse nounwind uwtable
define internal fastcc i32 @next_question(%struct.form* nocapture %0) unnamed_addr #13 !dbg !1353 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !1355, metadata !DIExpression()), !dbg !1356
  %2 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 7, !dbg !1357
  %3 = load %struct.question*, %struct.question** %2, align 8, !dbg !1357, !tbaa !938
  %4 = icmp eq %struct.question* %3, null, !dbg !1359
  br i1 %4, label %14, label %5, !dbg !1360

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.question, %struct.question* %3, i64 0, i32 5, !dbg !1361
  %7 = load %struct.question*, %struct.question** %6, align 8, !dbg !1361, !tbaa !367
  %8 = icmp eq %struct.question* %7, null, !dbg !1363
  br i1 %8, label %9, label %13, !dbg !1364

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 6, !dbg !1365
  %11 = load %struct.page*, %struct.page** %10, align 8, !dbg !1365, !tbaa !916
  %12 = getelementptr inbounds %struct.page, %struct.page* %11, i64 0, i32 4, !dbg !1367
  store i8 1, i8* %12, align 8, !dbg !1368, !tbaa !923
  br label %14, !dbg !1369

13:                                               ; preds = %5
  store %struct.question* %7, %struct.question** %2, align 8, !dbg !1370, !tbaa !938
  br label %14

14:                                               ; preds = %9, %13, %1
  %15 = phi i32 [ -1, %1 ], [ 0, %13 ], [ 0, %9 ], !dbg !1356
  ret i32 %15, !dbg !1372
}

declare !dbg !222 dso_local i8* @strsep(i8**, i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @handler_index(i8* %0) unnamed_addr #0 !dbg !1373 {
  %2 = alloca [16 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.form* undef, metadata !1375, metadata !DIExpression()), !dbg !1383
  call void @llvm.dbg.value(metadata i8* %0, metadata !1376, metadata !DIExpression()), !dbg !1383
  call void @llvm.dbg.value(metadata i8* %0, metadata !1378, metadata !DIExpression()), !dbg !1383
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i64 0, i64 0, !dbg !1384
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #17, !dbg !1384
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !1379, metadata !DIExpression()), !dbg !1385
  %4 = ptrtoint i8* %0 to i64, !dbg !1383
  br label %5, !dbg !1386

5:                                                ; preds = %5, %1
  %6 = phi i8* [ %0, %1 ], [ %13, %5 ], !dbg !1383
  call void @llvm.dbg.value(metadata i8* %6, metadata !1378, metadata !DIExpression()), !dbg !1383
  %7 = load i8, i8* %6, align 1, !dbg !1387, !tbaa !323
  %8 = icmp eq i8 %7, 42, !dbg !1388
  %9 = ptrtoint i8* %6 to i64, !dbg !1389
  %10 = sub i64 %9, %4, !dbg !1389
  %11 = icmp slt i64 %10, 2, !dbg !1389
  %12 = and i1 %8, %11, !dbg !1389
  %13 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !1390
  call void @llvm.dbg.value(metadata i8* %13, metadata !1378, metadata !DIExpression()), !dbg !1383
  br i1 %12, label %5, label %14, !dbg !1386, !llvm.loop !1391

14:                                               ; preds = %5, %24
  %15 = phi i64 [ %25, %24 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !1377, metadata !DIExpression()), !dbg !1383
  %16 = getelementptr inbounds [5 x i8*], [5 x i8*]* @cmd_lbls, i64 0, i64 %15, !dbg !1392
  %17 = load i8*, i8** %16, align 8, !dbg !1392, !tbaa !600
  %18 = call i64 @strlen(i8* nonnull dereferenceable(1) %17), !dbg !1396
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %3, i8* nonnull align 1 %6, i64 %18, i1 false), !dbg !1397
  %19 = call i64 @strlen(i8* nonnull dereferenceable(1) %17), !dbg !1398
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i64 0, i64 %19, !dbg !1399
  store i8 0, i8* %20, align 1, !dbg !1400, !tbaa !323
  %21 = call i32 @strncasecmp(i8* nonnull %3, i8* %17, i64 %19), !dbg !1401
  %22 = icmp eq i32 %21, 0, !dbg !1403
  %23 = trunc i64 %15 to i32, !dbg !1404
  br i1 %22, label %27, label %24, !dbg !1404

24:                                               ; preds = %14
  %25 = add nuw nsw i64 %15, 1, !dbg !1405
  call void @llvm.dbg.value(metadata i64 %25, metadata !1377, metadata !DIExpression()), !dbg !1383
  %26 = icmp eq i64 %25, 5, !dbg !1406
  br i1 %26, label %27, label %14, !dbg !1407, !llvm.loop !1408

27:                                               ; preds = %24, %14
  %28 = phi i32 [ %23, %14 ], [ -1, %24 ], !dbg !1383
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #17, !dbg !1410
  ret i32 %28, !dbg !1410
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree nounwind readonly
declare dso_local i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind uwtable
define dso_local void @print_greeting(%struct.form* nocapture readonly %0) local_unnamed_addr #0 !dbg !1411 {
  call void @llvm.dbg.value(metadata %struct.form* %0, metadata !1413, metadata !DIExpression()), !dbg !1414
  %2 = getelementptr inbounds %struct.form, %struct.form* %0, i64 0, i32 0, !dbg !1415
  %3 = load i8*, i8** %2, align 8, !dbg !1415, !tbaa !1416
  %4 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.147, i64 0, i64 0), i8* %3) #17, !dbg !1415
  ret void, !dbg !1417
}

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #13 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { nounwind readonly }
attributes #19 = { noreturn nounwind }

!llvm.dbg.cu = !{!229, !2, !237, !204}
!llvm.ident = !{!284, !284, !284, !284}
!llvm.module.flags = !{!285, !286, !287}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "af86", scope: !2, file: !3, line: 428, type: !180, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !8, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "ab12.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00023/src")
!4 = !{}
!5 = !{!6}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !{!0, !9, !16, !21, !26, !31, !36, !64, !66, !68, !70, !72, !74, !76, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !110, !112, !114, !116, !118, !120, !122, !124, !126, !128, !130, !132, !134, !136, !138, !140, !142, !144, !146, !148, !150, !152, !154, !156, !158, !160, !162, !164, !166, !168, !170, !172, !174, !176, !178}
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(name: "valid_education_levels", scope: !2, file: !3, line: 32, type: !11, isLocal: true, isDefinition: true)
!11 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 256, elements: !14)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!14 = !{!15}
!15 = !DISubrange(count: 4, lowerBound: 0)
!16 = !DIGlobalVariableExpression(var: !17, expr: !DIExpression())
!17 = distinct !DIGlobalVariable(name: "valid_eye_colors", scope: !2, file: !3, line: 36, type: !18, isLocal: true, isDefinition: true)
!18 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 704, elements: !19)
!19 = !{!20}
!20 = !DISubrange(count: 11, lowerBound: 0)
!21 = !DIGlobalVariableExpression(var: !22, expr: !DIExpression())
!22 = distinct !DIGlobalVariable(name: "valid_hair_colors", scope: !2, file: !3, line: 41, type: !23, isLocal: true, isDefinition: true)
!23 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 960, elements: !24)
!24 = !{!25}
!25 = !DISubrange(count: 15, lowerBound: 0)
!26 = !DIGlobalVariableExpression(var: !27, expr: !DIExpression())
!27 = distinct !DIGlobalVariable(name: "valid_states", scope: !2, file: !3, line: 47, type: !28, isLocal: true, isDefinition: true)
!28 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 3328, elements: !29)
!29 = !{!30}
!30 = !DISubrange(count: 52, lowerBound: 0)
!31 = !DIGlobalVariableExpression(var: !32, expr: !DIExpression())
!32 = distinct !DIGlobalVariable(name: "valid_suffixes", scope: !2, file: !3, line: 54, type: !33, isLocal: true, isDefinition: true)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 832, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 13, lowerBound: 0)
!36 = !DIGlobalVariableExpression(var: !37, expr: !DIExpression())
!37 = distinct !DIGlobalVariable(name: "candidate", scope: !2, file: !3, line: 342, type: !38, isLocal: true, isDefinition: true)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "page_t", file: !39, line: 21, baseType: !40)
!39 = !DIFile(filename: "./form.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00023/src")
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !39, line: 16, size: 320, elements: !41)
!41 = !{!42, !43, !45, !46, !63}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !40, file: !39, line: 17, baseType: !12, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !40, file: !39, line: 18, baseType: !44, size: 64, offset: 64)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !40, file: !39, line: 18, baseType: !44, size: 64, offset: 128)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "questions", scope: !40, file: !39, line: 19, baseType: !47, size: 64, offset: 192)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "question_t", file: !39, line: 14, baseType: !49)
!49 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "question", file: !39, line: 7, size: 448, elements: !50)
!50 = !{!51, !52, !53, !54, !55, !57, !58}
!51 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !49, file: !39, line: 8, baseType: !12, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "hint", scope: !49, file: !39, line: 9, baseType: !12, size: 64, offset: 64)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "answer", scope: !49, file: !39, line: 10, baseType: !6, size: 64, offset: 128)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "optional", scope: !49, file: !39, line: 11, baseType: !7, size: 8, offset: 192)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !49, file: !39, line: 12, baseType: !56, size: 64, offset: 256)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !49, file: !39, line: 12, baseType: !56, size: 64, offset: 320)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !49, file: !39, line: 13, baseType: !59, size: 64, offset: 384)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!60 = !DISubroutineType(types: !61)
!61 = !{!62, !6}
!62 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "completed", scope: !40, file: !39, line: 20, baseType: !7, size: 8, offset: 256)
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(name: "contact", scope: !2, file: !3, line: 343, type: !38, isLocal: true, isDefinition: true)
!66 = !DIGlobalVariableExpression(var: !67, expr: !DIExpression())
!67 = distinct !DIGlobalVariable(name: "address", scope: !2, file: !3, line: 344, type: !38, isLocal: true, isDefinition: true)
!68 = !DIGlobalVariableExpression(var: !69, expr: !DIExpression())
!69 = distinct !DIGlobalVariable(name: "education", scope: !2, file: !3, line: 345, type: !38, isLocal: true, isDefinition: true)
!70 = !DIGlobalVariableExpression(var: !71, expr: !DIExpression())
!71 = distinct !DIGlobalVariable(name: "employment", scope: !2, file: !3, line: 346, type: !38, isLocal: true, isDefinition: true)
!72 = !DIGlobalVariableExpression(var: !73, expr: !DIExpression())
!73 = distinct !DIGlobalVariable(name: "final", scope: !2, file: !3, line: 347, type: !38, isLocal: true, isDefinition: true)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(name: "fin", scope: !2, file: !3, line: 348, type: !38, isLocal: true, isDefinition: true)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(name: "last_name", scope: !2, file: !3, line: 278, type: !48, isLocal: true, isDefinition: true)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "pemail", scope: !2, file: !3, line: 293, type: !48, isLocal: true, isDefinition: true)
!80 = !DIGlobalVariableExpression(var: !81, expr: !DIExpression())
!81 = distinct !DIGlobalVariable(name: "mim", scope: !2, file: !3, line: 299, type: !48, isLocal: true, isDefinition: true)
!82 = !DIGlobalVariableExpression(var: !83, expr: !DIExpression())
!83 = distinct !DIGlobalVariable(name: "highest_edu", scope: !2, file: !3, line: 308, type: !48, isLocal: true, isDefinition: true)
!84 = !DIGlobalVariableExpression(var: !85, expr: !DIExpression())
!85 = distinct !DIGlobalVariable(name: "employeer", scope: !2, file: !3, line: 322, type: !48, isLocal: true, isDefinition: true)
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(name: "drugz", scope: !2, file: !3, line: 338, type: !48, isLocal: true, isDefinition: true)
!88 = !DIGlobalVariableExpression(var: !89, expr: !DIExpression())
!89 = distinct !DIGlobalVariable(name: "first_name", scope: !2, file: !3, line: 279, type: !48, isLocal: true, isDefinition: true)
!90 = !DIGlobalVariableExpression(var: !91, expr: !DIExpression())
!91 = distinct !DIGlobalVariable(name: "middle_name", scope: !2, file: !3, line: 280, type: !48, isLocal: true, isDefinition: true)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "suffix", scope: !2, file: !3, line: 281, type: !48, isLocal: true, isDefinition: true)
!94 = !DIGlobalVariableExpression(var: !95, expr: !DIExpression())
!95 = distinct !DIGlobalVariable(name: "dob_month", scope: !2, file: !3, line: 282, type: !48, isLocal: true, isDefinition: true)
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(name: "dob_day", scope: !2, file: !3, line: 283, type: !48, isLocal: true, isDefinition: true)
!98 = !DIGlobalVariableExpression(var: !99, expr: !DIExpression())
!99 = distinct !DIGlobalVariable(name: "dob_year", scope: !2, file: !3, line: 284, type: !48, isLocal: true, isDefinition: true)
!100 = !DIGlobalVariableExpression(var: !101, expr: !DIExpression())
!101 = distinct !DIGlobalVariable(name: "height_feet", scope: !2, file: !3, line: 285, type: !48, isLocal: true, isDefinition: true)
!102 = !DIGlobalVariableExpression(var: !103, expr: !DIExpression())
!103 = distinct !DIGlobalVariable(name: "height_inches", scope: !2, file: !3, line: 286, type: !48, isLocal: true, isDefinition: true)
!104 = !DIGlobalVariableExpression(var: !105, expr: !DIExpression())
!105 = distinct !DIGlobalVariable(name: "weight", scope: !2, file: !3, line: 287, type: !48, isLocal: true, isDefinition: true)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "sex", scope: !2, file: !3, line: 288, type: !48, isLocal: true, isDefinition: true)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(name: "hair_color", scope: !2, file: !3, line: 289, type: !48, isLocal: true, isDefinition: true)
!110 = !DIGlobalVariableExpression(var: !111, expr: !DIExpression())
!111 = distinct !DIGlobalVariable(name: "eye_color", scope: !2, file: !3, line: 290, type: !48, isLocal: true, isDefinition: true)
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "wemail", scope: !2, file: !3, line: 294, type: !48, isLocal: true, isDefinition: true)
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "hphone", scope: !2, file: !3, line: 295, type: !48, isLocal: true, isDefinition: true)
!116 = !DIGlobalVariableExpression(var: !117, expr: !DIExpression())
!117 = distinct !DIGlobalVariable(name: "wphone", scope: !2, file: !3, line: 296, type: !48, isLocal: true, isDefinition: true)
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "miy", scope: !2, file: !3, line: 300, type: !48, isLocal: true, isDefinition: true)
!120 = !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!121 = distinct !DIGlobalVariable(name: "street", scope: !2, file: !3, line: 301, type: !48, isLocal: true, isDefinition: true)
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "city", scope: !2, file: !3, line: 302, type: !48, isLocal: true, isDefinition: true)
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(name: "state", scope: !2, file: !3, line: 303, type: !48, isLocal: true, isDefinition: true)
!126 = !DIGlobalVariableExpression(var: !127, expr: !DIExpression())
!127 = distinct !DIGlobalVariable(name: "zip", scope: !2, file: !3, line: 304, type: !48, isLocal: true, isDefinition: true)
!128 = !DIGlobalVariableExpression(var: !129, expr: !DIExpression())
!129 = distinct !DIGlobalVariable(name: "owned", scope: !2, file: !3, line: 305, type: !48, isLocal: true, isDefinition: true)
!130 = !DIGlobalVariableExpression(var: !131, expr: !DIExpression())
!131 = distinct !DIGlobalVariable(name: "esm", scope: !2, file: !3, line: 309, type: !48, isLocal: true, isDefinition: true)
!132 = !DIGlobalVariableExpression(var: !133, expr: !DIExpression())
!133 = distinct !DIGlobalVariable(name: "esy", scope: !2, file: !3, line: 310, type: !48, isLocal: true, isDefinition: true)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "eem", scope: !2, file: !3, line: 311, type: !48, isLocal: true, isDefinition: true)
!136 = !DIGlobalVariableExpression(var: !137, expr: !DIExpression())
!137 = distinct !DIGlobalVariable(name: "eey", scope: !2, file: !3, line: 312, type: !48, isLocal: true, isDefinition: true)
!138 = !DIGlobalVariableExpression(var: !139, expr: !DIExpression())
!139 = distinct !DIGlobalVariable(name: "school_name", scope: !2, file: !3, line: 313, type: !48, isLocal: true, isDefinition: true)
!140 = !DIGlobalVariableExpression(var: !141, expr: !DIExpression())
!141 = distinct !DIGlobalVariable(name: "estreet", scope: !2, file: !3, line: 314, type: !48, isLocal: true, isDefinition: true)
!142 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression())
!143 = distinct !DIGlobalVariable(name: "ecity", scope: !2, file: !3, line: 315, type: !48, isLocal: true, isDefinition: true)
!144 = !DIGlobalVariableExpression(var: !145, expr: !DIExpression())
!145 = distinct !DIGlobalVariable(name: "estate", scope: !2, file: !3, line: 316, type: !48, isLocal: true, isDefinition: true)
!146 = !DIGlobalVariableExpression(var: !147, expr: !DIExpression())
!147 = distinct !DIGlobalVariable(name: "ezip", scope: !2, file: !3, line: 317, type: !48, isLocal: true, isDefinition: true)
!148 = !DIGlobalVariableExpression(var: !149, expr: !DIExpression())
!149 = distinct !DIGlobalVariable(name: "gpa", scope: !2, file: !3, line: 318, type: !48, isLocal: true, isDefinition: true)
!150 = !DIGlobalVariableExpression(var: !151, expr: !DIExpression())
!151 = distinct !DIGlobalVariable(name: "major", scope: !2, file: !3, line: 319, type: !48, isLocal: true, isDefinition: true)
!152 = !DIGlobalVariableExpression(var: !153, expr: !DIExpression())
!153 = distinct !DIGlobalVariable(name: "wsm", scope: !2, file: !3, line: 323, type: !48, isLocal: true, isDefinition: true)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(name: "wsy", scope: !2, file: !3, line: 324, type: !48, isLocal: true, isDefinition: true)
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(name: "wem", scope: !2, file: !3, line: 325, type: !48, isLocal: true, isDefinition: true)
!158 = !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = distinct !DIGlobalVariable(name: "wey", scope: !2, file: !3, line: 326, type: !48, isLocal: true, isDefinition: true)
!160 = !DIGlobalVariableExpression(var: !161, expr: !DIExpression())
!161 = distinct !DIGlobalVariable(name: "wstreet", scope: !2, file: !3, line: 327, type: !48, isLocal: true, isDefinition: true)
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "wcity", scope: !2, file: !3, line: 328, type: !48, isLocal: true, isDefinition: true)
!164 = !DIGlobalVariableExpression(var: !165, expr: !DIExpression())
!165 = distinct !DIGlobalVariable(name: "wstate", scope: !2, file: !3, line: 329, type: !48, isLocal: true, isDefinition: true)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "wzip", scope: !2, file: !3, line: 330, type: !48, isLocal: true, isDefinition: true)
!168 = !DIGlobalVariableExpression(var: !169, expr: !DIExpression())
!169 = distinct !DIGlobalVariable(name: "sup_last_name", scope: !2, file: !3, line: 331, type: !48, isLocal: true, isDefinition: true)
!170 = !DIGlobalVariableExpression(var: !171, expr: !DIExpression())
!171 = distinct !DIGlobalVariable(name: "sup_first_name", scope: !2, file: !3, line: 332, type: !48, isLocal: true, isDefinition: true)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "sup_title", scope: !2, file: !3, line: 333, type: !48, isLocal: true, isDefinition: true)
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(name: "sphone", scope: !2, file: !3, line: 334, type: !48, isLocal: true, isDefinition: true)
!176 = !DIGlobalVariableExpression(var: !177, expr: !DIExpression())
!177 = distinct !DIGlobalVariable(name: "semail", scope: !2, file: !3, line: 335, type: !48, isLocal: true, isDefinition: true)
!178 = !DIGlobalVariableExpression(var: !179, expr: !DIExpression())
!179 = distinct !DIGlobalVariable(name: "background", scope: !2, file: !3, line: 339, type: !48, isLocal: true, isDefinition: true)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "form_t", file: !39, line: 32, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "form", file: !39, line: 23, size: 768, elements: !182)
!182 = !{!183, !184, !185, !186, !190, !198, !200, !201}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "greeting", scope: !181, file: !39, line: 24, baseType: !12, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "ending", scope: !181, file: !39, line: 25, baseType: !12, size: 64, offset: 64)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !181, file: !39, line: 26, baseType: !12, size: 64, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !181, file: !39, line: 27, baseType: !187, size: 64, offset: 192)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!188 = !DISubroutineType(types: !189)
!189 = !{null}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !181, file: !39, line: 28, baseType: !191, size: 320, offset: 256)
!191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 320, elements: !196)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!193 = !DISubroutineType(types: !194)
!194 = !{!62, !195, !6}
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!196 = !{!197}
!197 = !DISubrange(count: 5, lowerBound: 0)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !181, file: !39, line: 29, baseType: !199, size: 64, offset: 576)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "cur_page", scope: !181, file: !39, line: 30, baseType: !199, size: 64, offset: 640)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "cur_question", scope: !181, file: !39, line: 31, baseType: !47, size: 64, offset: 704)
!202 = !DIGlobalVariableExpression(var: !203, expr: !DIExpression())
!203 = distinct !DIGlobalVariable(name: "cmd_lbls", scope: !204, file: !205, line: 30, type: !228, isLocal: true, isDefinition: true)
!204 = distinct !DICompileUnit(language: DW_LANG_C99, file: !205, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !206, globals: !227, splitDebugInlining: false, nameTableKind: None)
!205 = !DIFile(filename: "form.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00023/src")
!206 = !{!207, !211, !213, !217, !222}
!207 = !DISubprogram(name: "fdprintf", scope: !208, file: !208, line: 11, type: !209, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!208 = !DIFile(filename: "./stdlib.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00023/src")
!209 = !DISubroutineType(types: !210)
!210 = !{!62, !62, !12, null}
!211 = !DISubprogram(name: "read_line", scope: !212, file: !212, line: 6, type: !60, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!212 = !DIFile(filename: "./input.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00023/src")
!213 = !DISubprogram(name: "free", scope: !208, file: !208, line: 21, type: !214, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!214 = !DISubroutineType(types: !215)
!215 = !{null, !216}
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!217 = !DISubprogram(name: "_terminate", scope: !218, file: !218, line: 52, type: !219, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized, retainedNodes: !4)
!218 = !DIFile(filename: "./libcgc.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00023/src")
!219 = !DISubroutineType(types: !220)
!220 = !{null, !221}
!221 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!222 = !DISubprogram(name: "strsep", scope: !223, file: !223, line: 16, type: !224, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!223 = !DIFile(filename: "./string.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00023/src")
!224 = !DISubroutineType(types: !225)
!225 = !{!6, !226, !12}
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!227 = !{!202}
!228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 320, elements: !196)
!229 = distinct !DICompileUnit(language: DW_LANG_C99, file: !230, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !231, splitDebugInlining: false, nameTableKind: None)
!230 = !DIFile(filename: "input.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00023/src")
!231 = !{!232}
!232 = !DISubprogram(name: "receive", scope: !218, file: !218, line: 54, type: !233, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!233 = !DISubroutineType(types: !234)
!234 = !{!62, !62, !216, !235, !236}
!235 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!237 = distinct !DICompileUnit(language: DW_LANG_C99, file: !238, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !239, splitDebugInlining: false, nameTableKind: None)
!238 = !DIFile(filename: "main.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00023/src")
!239 = !{!240, !280, !211, !283}
!240 = !DISubprogram(name: "print_greeting", scope: !39, file: !39, line: 41, type: !241, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!241 = !DISubroutineType(types: !242)
!242 = !{null, !243}
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "form", file: !39, line: 23, size: 768, elements: !245)
!245 = !{!246, !247, !248, !249, !250, !255, !278, !279}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "greeting", scope: !244, file: !39, line: 24, baseType: !12, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "ending", scope: !244, file: !39, line: 25, baseType: !12, size: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !244, file: !39, line: 26, baseType: !12, size: 64, offset: 128)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !244, file: !39, line: 27, baseType: !187, size: 64, offset: 192)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !244, file: !39, line: 28, baseType: !251, size: 320, offset: 256)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, size: 320, elements: !196)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = !DISubroutineType(types: !254)
!254 = !{!62, !243, !6}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !244, file: !39, line: 29, baseType: !256, size: 64, offset: 576)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "page_t", file: !39, line: 21, baseType: !258)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !39, line: 16, size: 320, elements: !259)
!259 = !{!260, !261, !263, !264, !277}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !258, file: !39, line: 17, baseType: !12, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !258, file: !39, line: 18, baseType: !262, size: 64, offset: 64)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !258, file: !39, line: 18, baseType: !262, size: 64, offset: 128)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "questions", scope: !258, file: !39, line: 19, baseType: !265, size: 64, offset: 192)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "question_t", file: !39, line: 14, baseType: !267)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "question", file: !39, line: 7, size: 448, elements: !268)
!268 = !{!269, !270, !271, !272, !273, !275, !276}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !267, file: !39, line: 8, baseType: !12, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "hint", scope: !267, file: !39, line: 9, baseType: !12, size: 64, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "answer", scope: !267, file: !39, line: 10, baseType: !6, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "optional", scope: !267, file: !39, line: 11, baseType: !7, size: 8, offset: 192)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !267, file: !39, line: 12, baseType: !274, size: 64, offset: 256)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !267, file: !39, line: 12, baseType: !274, size: 64, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !267, file: !39, line: 13, baseType: !59, size: 64, offset: 384)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "completed", scope: !258, file: !39, line: 20, baseType: !7, size: 8, offset: 256)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "cur_page", scope: !244, file: !39, line: 30, baseType: !256, size: 64, offset: 640)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "cur_question", scope: !244, file: !39, line: 31, baseType: !265, size: 64, offset: 704)
!280 = !DISubprogram(name: "print_prompt", scope: !39, file: !39, line: 40, type: !281, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!281 = !DISubroutineType(types: !282)
!282 = !{null, !243, !62, !62}
!283 = !DISubprogram(name: "handle_line", scope: !39, file: !39, line: 39, type: !253, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!284 = !{!"clang version 10.0.0-4ubuntu1 "}
!285 = !{i32 7, !"Dwarf Version", i32 4}
!286 = !{i32 2, !"Debug Info Version", i32 3}
!287 = !{i32 1, !"wchar_size", i32 4}
!288 = distinct !DISubprogram(name: "read_line", scope: !230, file: !230, line: 46, type: !60, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !229, retainedNodes: !289)
!289 = !{!290, !291}
!290 = !DILocalVariable(name: "buf", arg: 1, scope: !288, file: !230, line: 46, type: !6)
!291 = !DILocalVariable(name: "ret", scope: !288, file: !230, line: 48, type: !62)
!292 = !DILocation(line: 0, scope: !288)
!293 = !DILocation(line: 50, column: 11, scope: !294)
!294 = distinct !DILexicalBlock(scope: !288, file: !230, line: 49, column: 13)
!295 = !DILocation(line: 0, scope: !296)
!296 = distinct !DILexicalBlock(scope: !294, file: !230, line: 51, column: 9)
!297 = !DILocation(line: 56, column: 1, scope: !288)
!298 = distinct !DISubprogram(name: "splitat", scope: !230, file: !230, line: 27, type: !299, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !229, retainedNodes: !302)
!299 = !DISubroutineType(types: !300)
!300 = !{!62, !62, !6, !301, !7}
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !218, line: 13, baseType: !235)
!302 = !{!303, !304, !305, !306, !307, !308, !309}
!303 = !DILocalVariable(name: "fd", arg: 1, scope: !298, file: !230, line: 27, type: !62)
!304 = !DILocalVariable(name: "buf", arg: 2, scope: !298, file: !230, line: 27, type: !6)
!305 = !DILocalVariable(name: "max", arg: 3, scope: !298, file: !230, line: 27, type: !301)
!306 = !DILocalVariable(name: "delim", arg: 4, scope: !298, file: !230, line: 27, type: !7)
!307 = !DILocalVariable(name: "ret", scope: !298, file: !230, line: 29, type: !62)
!308 = !DILocalVariable(name: "rx", scope: !298, file: !230, line: 30, type: !301)
!309 = !DILocalVariable(name: "i", scope: !298, file: !230, line: 30, type: !301)
!310 = !DILocation(line: 0, scope: !298)
!311 = !DILocation(line: 30, column: 3, scope: !298)
!312 = !DILocation(line: 31, column: 3, scope: !298)
!313 = !DILocation(line: 32, column: 30, scope: !314)
!314 = distinct !DILexicalBlock(scope: !298, file: !230, line: 31, column: 23)
!315 = !DILocation(line: 32, column: 11, scope: !314)
!316 = !DILocation(line: 33, column: 13, scope: !317)
!317 = distinct !DILexicalBlock(scope: !314, file: !230, line: 33, column: 9)
!318 = !DILocation(line: 33, column: 21, scope: !317)
!319 = !DILocation(line: 33, column: 24, scope: !317)
!320 = !DILocation(line: 33, column: 18, scope: !317)
!321 = !DILocation(line: 36, column: 9, scope: !322)
!322 = distinct !DILexicalBlock(scope: !314, file: !230, line: 36, column: 9)
!323 = !{!324, !324, i64 0}
!324 = !{!"omnipotent char", !325, i64 0}
!325 = !{!"Simple C/C++ TBAA"}
!326 = !DILocation(line: 36, column: 20, scope: !322)
!327 = !DILocation(line: 36, column: 9, scope: !314)
!328 = !DILocation(line: 39, column: 6, scope: !314)
!329 = !DILocation(line: 31, column: 12, scope: !298)
!330 = distinct !{!330, !312, !331}
!331 = !DILocation(line: 40, column: 3, scope: !298)
!332 = !DILocation(line: 42, column: 9, scope: !298)
!333 = !DILocation(line: 42, column: 14, scope: !298)
!334 = !DILocation(line: 43, column: 10, scope: !298)
!335 = !DILocation(line: 43, column: 3, scope: !298)
!336 = !DILocation(line: 44, column: 1, scope: !298)
!337 = distinct !DISubprogram(name: "init_af86", scope: !3, file: !3, line: 350, type: !188, scopeLine: 351, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4)
!338 = !DILocation(line: 353, column: 3, scope: !339)
!339 = distinct !DILexicalBlock(scope: !337, file: !3, line: 353, column: 3)
!340 = !{!341, !342, i64 8}
!341 = !{!"page", !342, i64 0, !342, i64 8, !342, i64 16, !342, i64 24, !324, i64 32}
!342 = !{!"any pointer", !324, i64 0}
!343 = !{!341, !342, i64 16}
!344 = !DILocation(line: 354, column: 3, scope: !345)
!345 = distinct !DILexicalBlock(scope: !337, file: !3, line: 354, column: 3)
!346 = !DILocation(line: 355, column: 3, scope: !347)
!347 = distinct !DILexicalBlock(scope: !337, file: !3, line: 355, column: 3)
!348 = !DILocation(line: 356, column: 3, scope: !349)
!349 = distinct !DILexicalBlock(scope: !337, file: !3, line: 356, column: 3)
!350 = !DILocation(line: 357, column: 3, scope: !351)
!351 = distinct !DILexicalBlock(scope: !337, file: !3, line: 357, column: 3)
!352 = !DILocation(line: 358, column: 3, scope: !353)
!353 = distinct !DILexicalBlock(scope: !337, file: !3, line: 358, column: 3)
!354 = !DILocation(line: 359, column: 3, scope: !355)
!355 = distinct !DILexicalBlock(scope: !337, file: !3, line: 359, column: 3)
!356 = !DILocation(line: 361, column: 23, scope: !337)
!357 = !{!341, !342, i64 24}
!358 = !DILocation(line: 362, column: 21, scope: !337)
!359 = !DILocation(line: 363, column: 21, scope: !337)
!360 = !DILocation(line: 364, column: 23, scope: !337)
!361 = !DILocation(line: 365, column: 24, scope: !337)
!362 = !DILocation(line: 366, column: 19, scope: !337)
!363 = !DILocation(line: 369, column: 3, scope: !364)
!364 = distinct !DILexicalBlock(scope: !337, file: !3, line: 369, column: 3)
!365 = !{!366, !342, i64 32}
!366 = !{!"question", !342, i64 0, !342, i64 8, !342, i64 16, !324, i64 24, !342, i64 32, !342, i64 40, !342, i64 48}
!367 = !{!366, !342, i64 40}
!368 = !DILocation(line: 370, column: 3, scope: !369)
!369 = distinct !DILexicalBlock(scope: !337, file: !3, line: 370, column: 3)
!370 = !DILocation(line: 371, column: 3, scope: !371)
!371 = distinct !DILexicalBlock(scope: !337, file: !3, line: 371, column: 3)
!372 = !DILocation(line: 372, column: 3, scope: !373)
!373 = distinct !DILexicalBlock(scope: !337, file: !3, line: 372, column: 3)
!374 = !DILocation(line: 373, column: 3, scope: !375)
!375 = distinct !DILexicalBlock(scope: !337, file: !3, line: 373, column: 3)
!376 = !DILocation(line: 374, column: 3, scope: !377)
!377 = distinct !DILexicalBlock(scope: !337, file: !3, line: 374, column: 3)
!378 = !DILocation(line: 375, column: 3, scope: !379)
!379 = distinct !DILexicalBlock(scope: !337, file: !3, line: 375, column: 3)
!380 = !DILocation(line: 376, column: 3, scope: !381)
!381 = distinct !DILexicalBlock(scope: !337, file: !3, line: 376, column: 3)
!382 = !DILocation(line: 377, column: 3, scope: !383)
!383 = distinct !DILexicalBlock(scope: !337, file: !3, line: 377, column: 3)
!384 = !DILocation(line: 378, column: 3, scope: !385)
!385 = distinct !DILexicalBlock(scope: !337, file: !3, line: 378, column: 3)
!386 = !DILocation(line: 379, column: 3, scope: !387)
!387 = distinct !DILexicalBlock(scope: !337, file: !3, line: 379, column: 3)
!388 = !DILocation(line: 380, column: 3, scope: !389)
!389 = distinct !DILexicalBlock(scope: !337, file: !3, line: 380, column: 3)
!390 = !DILocation(line: 381, column: 3, scope: !391)
!391 = distinct !DILexicalBlock(scope: !337, file: !3, line: 381, column: 3)
!392 = !DILocation(line: 383, column: 3, scope: !393)
!393 = distinct !DILexicalBlock(scope: !337, file: !3, line: 383, column: 3)
!394 = !DILocation(line: 384, column: 3, scope: !395)
!395 = distinct !DILexicalBlock(scope: !337, file: !3, line: 384, column: 3)
!396 = !DILocation(line: 385, column: 3, scope: !397)
!397 = distinct !DILexicalBlock(scope: !337, file: !3, line: 385, column: 3)
!398 = !DILocation(line: 386, column: 3, scope: !399)
!399 = distinct !DILexicalBlock(scope: !337, file: !3, line: 386, column: 3)
!400 = !DILocation(line: 388, column: 3, scope: !401)
!401 = distinct !DILexicalBlock(scope: !337, file: !3, line: 388, column: 3)
!402 = !DILocation(line: 389, column: 3, scope: !403)
!403 = distinct !DILexicalBlock(scope: !337, file: !3, line: 389, column: 3)
!404 = !DILocation(line: 390, column: 3, scope: !405)
!405 = distinct !DILexicalBlock(scope: !337, file: !3, line: 390, column: 3)
!406 = !DILocation(line: 391, column: 3, scope: !407)
!407 = distinct !DILexicalBlock(scope: !337, file: !3, line: 391, column: 3)
!408 = !DILocation(line: 392, column: 3, scope: !409)
!409 = distinct !DILexicalBlock(scope: !337, file: !3, line: 392, column: 3)
!410 = !DILocation(line: 393, column: 3, scope: !411)
!411 = distinct !DILexicalBlock(scope: !337, file: !3, line: 393, column: 3)
!412 = !DILocation(line: 394, column: 3, scope: !413)
!413 = distinct !DILexicalBlock(scope: !337, file: !3, line: 394, column: 3)
!414 = !DILocation(line: 396, column: 3, scope: !415)
!415 = distinct !DILexicalBlock(scope: !337, file: !3, line: 396, column: 3)
!416 = !DILocation(line: 397, column: 3, scope: !417)
!417 = distinct !DILexicalBlock(scope: !337, file: !3, line: 397, column: 3)
!418 = !DILocation(line: 398, column: 3, scope: !419)
!419 = distinct !DILexicalBlock(scope: !337, file: !3, line: 398, column: 3)
!420 = !DILocation(line: 399, column: 3, scope: !421)
!421 = distinct !DILexicalBlock(scope: !337, file: !3, line: 399, column: 3)
!422 = !DILocation(line: 400, column: 3, scope: !423)
!423 = distinct !DILexicalBlock(scope: !337, file: !3, line: 400, column: 3)
!424 = !DILocation(line: 401, column: 3, scope: !425)
!425 = distinct !DILexicalBlock(scope: !337, file: !3, line: 401, column: 3)
!426 = !DILocation(line: 402, column: 3, scope: !427)
!427 = distinct !DILexicalBlock(scope: !337, file: !3, line: 402, column: 3)
!428 = !DILocation(line: 403, column: 3, scope: !429)
!429 = distinct !DILexicalBlock(scope: !337, file: !3, line: 403, column: 3)
!430 = !DILocation(line: 404, column: 3, scope: !431)
!431 = distinct !DILexicalBlock(scope: !337, file: !3, line: 404, column: 3)
!432 = !DILocation(line: 405, column: 3, scope: !433)
!433 = distinct !DILexicalBlock(scope: !337, file: !3, line: 405, column: 3)
!434 = !DILocation(line: 406, column: 3, scope: !435)
!435 = distinct !DILexicalBlock(scope: !337, file: !3, line: 406, column: 3)
!436 = !DILocation(line: 407, column: 3, scope: !437)
!437 = distinct !DILexicalBlock(scope: !337, file: !3, line: 407, column: 3)
!438 = !DILocation(line: 409, column: 3, scope: !439)
!439 = distinct !DILexicalBlock(scope: !337, file: !3, line: 409, column: 3)
!440 = !DILocation(line: 410, column: 3, scope: !441)
!441 = distinct !DILexicalBlock(scope: !337, file: !3, line: 410, column: 3)
!442 = !DILocation(line: 411, column: 3, scope: !443)
!443 = distinct !DILexicalBlock(scope: !337, file: !3, line: 411, column: 3)
!444 = !DILocation(line: 412, column: 3, scope: !445)
!445 = distinct !DILexicalBlock(scope: !337, file: !3, line: 412, column: 3)
!446 = !DILocation(line: 413, column: 3, scope: !447)
!447 = distinct !DILexicalBlock(scope: !337, file: !3, line: 413, column: 3)
!448 = !DILocation(line: 414, column: 3, scope: !449)
!449 = distinct !DILexicalBlock(scope: !337, file: !3, line: 414, column: 3)
!450 = !DILocation(line: 415, column: 3, scope: !451)
!451 = distinct !DILexicalBlock(scope: !337, file: !3, line: 415, column: 3)
!452 = !DILocation(line: 416, column: 3, scope: !453)
!453 = distinct !DILexicalBlock(scope: !337, file: !3, line: 416, column: 3)
!454 = !DILocation(line: 417, column: 3, scope: !455)
!455 = distinct !DILexicalBlock(scope: !337, file: !3, line: 417, column: 3)
!456 = !DILocation(line: 418, column: 3, scope: !457)
!457 = distinct !DILexicalBlock(scope: !337, file: !3, line: 418, column: 3)
!458 = !DILocation(line: 419, column: 3, scope: !459)
!459 = distinct !DILexicalBlock(scope: !337, file: !3, line: 419, column: 3)
!460 = !DILocation(line: 420, column: 3, scope: !461)
!461 = distinct !DILexicalBlock(scope: !337, file: !3, line: 420, column: 3)
!462 = !DILocation(line: 421, column: 3, scope: !463)
!463 = distinct !DILexicalBlock(scope: !337, file: !3, line: 421, column: 3)
!464 = !DILocation(line: 422, column: 3, scope: !465)
!465 = distinct !DILexicalBlock(scope: !337, file: !3, line: 422, column: 3)
!466 = !DILocation(line: 424, column: 3, scope: !467)
!467 = distinct !DILexicalBlock(scope: !337, file: !3, line: 424, column: 3)
!468 = !DILocation(line: 425, column: 3, scope: !469)
!469 = distinct !DILexicalBlock(scope: !337, file: !3, line: 425, column: 3)
!470 = !DILocation(line: 426, column: 1, scope: !337)
!471 = distinct !DISubprogram(name: "validate_name", scope: !3, file: !3, line: 149, type: !60, scopeLine: 150, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !472)
!472 = !{!473, !474}
!473 = !DILocalVariable(name: "input", arg: 1, scope: !471, file: !3, line: 149, type: !6)
!474 = !DILocalVariable(name: "i", scope: !475, file: !3, line: 151, type: !301)
!475 = distinct !DILexicalBlock(scope: !471, file: !3, line: 151, column: 3)
!476 = !DILocation(line: 0, scope: !471)
!477 = !DILocation(line: 0, scope: !475)
!478 = !DILocation(line: 151, column: 26, scope: !479)
!479 = distinct !DILexicalBlock(scope: !475, file: !3, line: 151, column: 3)
!480 = !DILocation(line: 151, column: 24, scope: !479)
!481 = !DILocation(line: 151, column: 3, scope: !475)
!482 = distinct !{!482, !481, !483}
!483 = !DILocation(line: 153, column: 14, scope: !475)
!484 = !DILocation(line: 152, column: 18, scope: !485)
!485 = distinct !DILexicalBlock(scope: !479, file: !3, line: 152, column: 9)
!486 = !DILocation(line: 152, column: 10, scope: !485)
!487 = !DILocation(line: 152, column: 40, scope: !485)
!488 = !DILocation(line: 152, column: 28, scope: !485)
!489 = !DILocation(line: 151, column: 42, scope: !479)
!490 = !DILocation(line: 156, column: 1, scope: !471)
!491 = distinct !DISubprogram(name: "validate_yes_no", scope: !3, file: !3, line: 249, type: !60, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !492)
!492 = !{!493}
!493 = !DILocalVariable(name: "input", arg: 1, scope: !491, file: !3, line: 249, type: !6)
!494 = !DILocation(line: 0, scope: !491)
!495 = !DILocation(line: 251, column: 7, scope: !496)
!496 = distinct !DILexicalBlock(scope: !491, file: !3, line: 251, column: 7)
!497 = !DILocation(line: 251, column: 21, scope: !496)
!498 = !DILocation(line: 251, column: 7, scope: !491)
!499 = !DILocation(line: 254, column: 7, scope: !500)
!500 = distinct !DILexicalBlock(scope: !491, file: !3, line: 254, column: 7)
!501 = !DILocation(line: 254, column: 23, scope: !500)
!502 = !DILocation(line: 257, column: 3, scope: !491)
!503 = !DILocation(line: 258, column: 1, scope: !491)
!504 = distinct !DISubprogram(name: "validate_email", scope: !3, file: !3, line: 158, type: !60, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !505)
!505 = !{!506, !507, !508, !509}
!506 = !DILocalVariable(name: "input", arg: 1, scope: !504, file: !3, line: 158, type: !6)
!507 = !DILocalVariable(name: "has_at", scope: !504, file: !3, line: 160, type: !62)
!508 = !DILocalVariable(name: "c", scope: !504, file: !3, line: 161, type: !7)
!509 = !DILocalVariable(name: "i", scope: !510, file: !3, line: 166, type: !301)
!510 = distinct !DILexicalBlock(scope: !504, file: !3, line: 166, column: 3)
!511 = !DILocation(line: 0, scope: !504)
!512 = !DILocation(line: 163, column: 7, scope: !513)
!513 = distinct !DILexicalBlock(scope: !504, file: !3, line: 163, column: 7)
!514 = !DILocation(line: 163, column: 25, scope: !513)
!515 = !DILocation(line: 166, column: 24, scope: !516)
!516 = distinct !DILexicalBlock(scope: !510, file: !3, line: 166, column: 3)
!517 = !DILocation(line: 0, scope: !510)
!518 = !DILocation(line: 167, column: 9, scope: !519)
!519 = distinct !DILexicalBlock(scope: !516, file: !3, line: 166, column: 46)
!520 = !DILocation(line: 169, column: 11, scope: !521)
!521 = distinct !DILexicalBlock(scope: !519, file: !3, line: 169, column: 9)
!522 = !DILocation(line: 169, column: 9, scope: !519)
!523 = !DILocation(line: 170, column: 11, scope: !524)
!524 = distinct !DILexicalBlock(scope: !525, file: !3, line: 170, column: 11)
!525 = distinct !DILexicalBlock(scope: !521, file: !3, line: 169, column: 19)
!526 = !DILocation(line: 170, column: 11, scope: !525)
!527 = !DILocation(line: 169, column: 9, scope: !521)
!528 = !DILocation(line: 178, column: 11, scope: !529)
!529 = distinct !DILexicalBlock(scope: !519, file: !3, line: 178, column: 9)
!530 = !DILocation(line: 178, column: 22, scope: !529)
!531 = !DILocation(line: 166, column: 42, scope: !516)
!532 = !DILocation(line: 166, column: 3, scope: !510)
!533 = distinct !{!533, !532, !534}
!534 = !DILocation(line: 180, column: 3, scope: !510)
!535 = distinct !DISubprogram(name: "validate_phone", scope: !3, file: !3, line: 221, type: !60, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !536)
!536 = !{!537, !538}
!537 = !DILocalVariable(name: "input", arg: 1, scope: !535, file: !3, line: 221, type: !6)
!538 = !DILocalVariable(name: "i", scope: !539, file: !3, line: 226, type: !62)
!539 = distinct !DILexicalBlock(scope: !535, file: !3, line: 226, column: 3)
!540 = !DILocation(line: 0, scope: !535)
!541 = !DILocation(line: 223, column: 7, scope: !542)
!542 = distinct !DILexicalBlock(scope: !535, file: !3, line: 223, column: 7)
!543 = !DILocation(line: 223, column: 21, scope: !542)
!544 = !DILocation(line: 223, column: 7, scope: !535)
!545 = !DILocation(line: 0, scope: !539)
!546 = !DILocation(line: 227, column: 17, scope: !547)
!547 = distinct !DILexicalBlock(scope: !548, file: !3, line: 227, column: 9)
!548 = distinct !DILexicalBlock(scope: !539, file: !3, line: 226, column: 3)
!549 = !DILocation(line: 0, scope: !547)
!550 = !DILocation(line: 228, column: 20, scope: !551)
!551 = distinct !DILexicalBlock(scope: !552, file: !3, line: 228, column: 11)
!552 = distinct !DILexicalBlock(scope: !547, file: !3, line: 227, column: 29)
!553 = !DILocation(line: 228, column: 11, scope: !552)
!554 = !DILocation(line: 231, column: 12, scope: !555)
!555 = distinct !DILexicalBlock(scope: !556, file: !3, line: 231, column: 11)
!556 = distinct !DILexicalBlock(scope: !547, file: !3, line: 230, column: 12)
!557 = !DILocation(line: 231, column: 11, scope: !556)
!558 = !DILocation(line: 226, column: 28, scope: !548)
!559 = !DILocation(line: 226, column: 21, scope: !548)
!560 = !DILocation(line: 226, column: 3, scope: !539)
!561 = distinct !{!561, !560, !562}
!562 = !DILocation(line: 233, column: 5, scope: !539)
!563 = distinct !DISubprogram(name: "validate_zip", scope: !3, file: !3, line: 209, type: !60, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !564)
!564 = !{!565, !566}
!565 = !DILocalVariable(name: "input", arg: 1, scope: !563, file: !3, line: 209, type: !6)
!566 = !DILocalVariable(name: "i", scope: !567, file: !3, line: 214, type: !62)
!567 = distinct !DILexicalBlock(scope: !563, file: !3, line: 214, column: 3)
!568 = !DILocation(line: 0, scope: !563)
!569 = !DILocation(line: 211, column: 7, scope: !570)
!570 = distinct !DILexicalBlock(scope: !563, file: !3, line: 211, column: 7)
!571 = !DILocation(line: 211, column: 21, scope: !570)
!572 = !DILocation(line: 211, column: 7, scope: !563)
!573 = !DILocation(line: 214, column: 27, scope: !574)
!574 = distinct !DILexicalBlock(scope: !567, file: !3, line: 214, column: 3)
!575 = !DILocation(line: 0, scope: !567)
!576 = !DILocation(line: 214, column: 21, scope: !574)
!577 = !DILocation(line: 214, column: 3, scope: !567)
!578 = distinct !{!578, !577, !579}
!579 = !DILocation(line: 216, column: 14, scope: !567)
!580 = !DILocation(line: 215, column: 18, scope: !581)
!581 = distinct !DILexicalBlock(scope: !574, file: !3, line: 215, column: 9)
!582 = !DILocation(line: 215, column: 10, scope: !581)
!583 = !DILocation(line: 215, column: 9, scope: !574)
!584 = distinct !DISubprogram(name: "validate_state", scope: !3, file: !3, line: 87, type: !60, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !585)
!585 = !{!586}
!586 = !DILocalVariable(name: "input", arg: 1, scope: !584, file: !3, line: 87, type: !6)
!587 = !DILocation(line: 0, scope: !584)
!588 = !DILocation(line: 89, column: 10, scope: !584)
!589 = !DILocation(line: 89, column: 3, scope: !584)
!590 = distinct !DISubprogram(name: "contains", scope: !3, file: !3, line: 58, type: !591, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !594)
!591 = !DISubroutineType(types: !592)
!592 = !{!62, !593, !6}
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!594 = !{!595, !596, !597}
!595 = !DILocalVariable(name: "arr", arg: 1, scope: !590, file: !3, line: 58, type: !593)
!596 = !DILocalVariable(name: "e", arg: 2, scope: !590, file: !3, line: 58, type: !6)
!597 = !DILocalVariable(name: "cur", scope: !590, file: !3, line: 60, type: !593)
!598 = !DILocation(line: 0, scope: !590)
!599 = !DILocation(line: 61, column: 10, scope: !590)
!600 = !{!342, !342, i64 0}
!601 = !DILocation(line: 61, column: 15, scope: !590)
!602 = !DILocation(line: 61, column: 3, scope: !590)
!603 = distinct !{!603, !602, !604}
!604 = !DILocation(line: 67, column: 3, scope: !590)
!605 = !DILocation(line: 62, column: 34, scope: !606)
!606 = distinct !DILexicalBlock(scope: !607, file: !3, line: 62, column: 9)
!607 = distinct !DILexicalBlock(scope: !590, file: !3, line: 61, column: 24)
!608 = !DILocation(line: 62, column: 9, scope: !606)
!609 = !DILocation(line: 62, column: 48, scope: !606)
!610 = !DILocation(line: 65, column: 10, scope: !611)
!611 = distinct !DILexicalBlock(scope: !606, file: !3, line: 64, column: 12)
!612 = !DILocation(line: 62, column: 9, scope: !607)
!613 = !DILocation(line: 70, column: 1, scope: !590)
!614 = distinct !DISubprogram(name: "validate_city", scope: !3, file: !3, line: 197, type: !60, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !615)
!615 = !{!616, !617}
!616 = !DILocalVariable(name: "input", arg: 1, scope: !614, file: !3, line: 197, type: !6)
!617 = !DILocalVariable(name: "i", scope: !618, file: !3, line: 202, type: !301)
!618 = distinct !DILexicalBlock(scope: !614, file: !3, line: 202, column: 3)
!619 = !DILocation(line: 0, scope: !614)
!620 = !DILocation(line: 199, column: 7, scope: !621)
!621 = distinct !DILexicalBlock(scope: !614, file: !3, line: 199, column: 7)
!622 = !DILocation(line: 199, column: 26, scope: !621)
!623 = !DILocation(line: 0, scope: !618)
!624 = !DILocation(line: 202, column: 24, scope: !625)
!625 = distinct !DILexicalBlock(scope: !618, file: !3, line: 202, column: 3)
!626 = !DILocation(line: 202, column: 3, scope: !618)
!627 = !DILocation(line: 203, column: 19, scope: !628)
!628 = distinct !DILexicalBlock(scope: !625, file: !3, line: 203, column: 9)
!629 = !DILocation(line: 203, column: 11, scope: !628)
!630 = !DILocation(line: 203, column: 29, scope: !628)
!631 = !DILocation(line: 203, column: 32, scope: !628)
!632 = !DILocation(line: 203, column: 50, scope: !628)
!633 = !DILocation(line: 203, column: 53, scope: !628)
!634 = !DILocation(line: 203, column: 9, scope: !625)
!635 = !DILocation(line: 202, column: 42, scope: !625)
!636 = distinct !{!636, !626, !637}
!637 = !DILocation(line: 204, column: 14, scope: !618)
!638 = distinct !DISubprogram(name: "validate_street", scope: !3, file: !3, line: 185, type: !60, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !639)
!639 = !{!640, !641}
!640 = !DILocalVariable(name: "input", arg: 1, scope: !638, file: !3, line: 185, type: !6)
!641 = !DILocalVariable(name: "i", scope: !642, file: !3, line: 190, type: !301)
!642 = distinct !DILexicalBlock(scope: !638, file: !3, line: 190, column: 3)
!643 = !DILocation(line: 0, scope: !638)
!644 = !DILocation(line: 187, column: 7, scope: !645)
!645 = distinct !DILexicalBlock(scope: !638, file: !3, line: 187, column: 7)
!646 = !DILocation(line: 187, column: 26, scope: !645)
!647 = !DILocation(line: 0, scope: !642)
!648 = !DILocation(line: 190, column: 24, scope: !649)
!649 = distinct !DILexicalBlock(scope: !642, file: !3, line: 190, column: 3)
!650 = !DILocation(line: 190, column: 3, scope: !642)
!651 = !DILocation(line: 191, column: 19, scope: !652)
!652 = distinct !DILexicalBlock(scope: !649, file: !3, line: 191, column: 9)
!653 = !DILocation(line: 191, column: 11, scope: !652)
!654 = !DILocation(line: 191, column: 29, scope: !652)
!655 = !DILocation(line: 191, column: 32, scope: !652)
!656 = !DILocation(line: 191, column: 50, scope: !652)
!657 = !DILocation(line: 191, column: 53, scope: !652)
!658 = !DILocation(line: 191, column: 9, scope: !649)
!659 = !DILocation(line: 190, column: 42, scope: !649)
!660 = distinct !{!660, !650, !661}
!661 = !DILocation(line: 192, column: 14, scope: !642)
!662 = distinct !DISubprogram(name: "validate_year", scope: !3, file: !3, line: 125, type: !60, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !663)
!663 = !{!664}
!664 = !DILocalVariable(name: "input", arg: 1, scope: !662, file: !3, line: 125, type: !6)
!665 = !DILocation(line: 0, scope: !662)
!666 = !DILocation(line: 127, column: 8, scope: !667)
!667 = distinct !DILexicalBlock(scope: !662, file: !3, line: 127, column: 7)
!668 = !DILocation(line: 127, column: 7, scope: !662)
!669 = !DILocation(line: 128, column: 29, scope: !662)
!670 = !DILocation(line: 128, column: 10, scope: !662)
!671 = !DILocation(line: 128, column: 3, scope: !662)
!672 = !DILocation(line: 129, column: 1, scope: !662)
!673 = distinct !DISubprogram(name: "all_digits", scope: !3, file: !3, line: 103, type: !60, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !674)
!674 = !{!675, !676}
!675 = !DILocalVariable(name: "input", arg: 1, scope: !673, file: !3, line: 103, type: !6)
!676 = !DILocalVariable(name: "i", scope: !677, file: !3, line: 105, type: !301)
!677 = distinct !DILexicalBlock(scope: !673, file: !3, line: 105, column: 3)
!678 = !DILocation(line: 0, scope: !673)
!679 = !DILocation(line: 0, scope: !677)
!680 = !DILocation(line: 105, column: 26, scope: !681)
!681 = distinct !DILexicalBlock(scope: !677, file: !3, line: 105, column: 3)
!682 = !DILocation(line: 105, column: 24, scope: !681)
!683 = !DILocation(line: 105, column: 3, scope: !677)
!684 = distinct !{!684, !683, !685}
!685 = !DILocation(line: 108, column: 5, scope: !677)
!686 = !DILocation(line: 106, column: 18, scope: !687)
!687 = distinct !DILexicalBlock(scope: !681, file: !3, line: 106, column: 9)
!688 = !DILocation(line: 106, column: 10, scope: !687)
!689 = !DILocation(line: 105, column: 42, scope: !681)
!690 = !DILocation(line: 106, column: 9, scope: !681)
!691 = !DILocation(line: 111, column: 1, scope: !673)
!692 = distinct !DISubprogram(name: "within", scope: !3, file: !3, line: 98, type: !693, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !695)
!693 = !DISubroutineType(types: !694)
!694 = !{!62, !62, !62, !62}
!695 = !{!696, !697, !698}
!696 = !DILocalVariable(name: "min", arg: 1, scope: !692, file: !3, line: 98, type: !62)
!697 = !DILocalVariable(name: "max", arg: 2, scope: !692, file: !3, line: 98, type: !62)
!698 = !DILocalVariable(name: "x", arg: 3, scope: !692, file: !3, line: 98, type: !62)
!699 = !DILocation(line: 0, scope: !692)
!700 = !DILocation(line: 100, column: 12, scope: !692)
!701 = !DILocation(line: 100, column: 19, scope: !692)
!702 = !DILocation(line: 100, column: 3, scope: !692)
!703 = distinct !DISubprogram(name: "validate_month", scope: !3, file: !3, line: 119, type: !60, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !704)
!704 = !{!705}
!705 = !DILocalVariable(name: "input", arg: 1, scope: !703, file: !3, line: 119, type: !6)
!706 = !DILocation(line: 0, scope: !703)
!707 = !DILocation(line: 121, column: 8, scope: !708)
!708 = distinct !DILexicalBlock(scope: !703, file: !3, line: 121, column: 7)
!709 = !DILocation(line: 121, column: 7, scope: !703)
!710 = !DILocation(line: 122, column: 24, scope: !703)
!711 = !DILocation(line: 122, column: 10, scope: !703)
!712 = !DILocation(line: 122, column: 3, scope: !703)
!713 = !DILocation(line: 123, column: 1, scope: !703)
!714 = distinct !DISubprogram(name: "validate_gpa", scope: !3, file: !3, line: 260, type: !60, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !715)
!715 = !{!716, !717}
!716 = !DILocalVariable(name: "input", arg: 1, scope: !714, file: !3, line: 260, type: !6)
!717 = !DILocalVariable(name: "i", scope: !718, file: !3, line: 265, type: !62)
!718 = distinct !DILexicalBlock(scope: !714, file: !3, line: 265, column: 3)
!719 = !DILocation(line: 0, scope: !714)
!720 = !DILocation(line: 262, column: 7, scope: !721)
!721 = distinct !DILexicalBlock(scope: !714, file: !3, line: 262, column: 7)
!722 = !DILocation(line: 262, column: 21, scope: !721)
!723 = !DILocation(line: 262, column: 7, scope: !714)
!724 = !DILocation(line: 0, scope: !718)
!725 = !DILocation(line: 266, column: 11, scope: !726)
!726 = distinct !DILexicalBlock(scope: !727, file: !3, line: 266, column: 9)
!727 = distinct !DILexicalBlock(scope: !728, file: !3, line: 265, column: 31)
!728 = distinct !DILexicalBlock(scope: !718, file: !3, line: 265, column: 3)
!729 = !DILocation(line: 0, scope: !726)
!730 = !DILocation(line: 266, column: 9, scope: !727)
!731 = !DILocation(line: 267, column: 20, scope: !732)
!732 = distinct !DILexicalBlock(scope: !733, file: !3, line: 267, column: 11)
!733 = distinct !DILexicalBlock(scope: !726, file: !3, line: 266, column: 17)
!734 = !DILocation(line: 267, column: 11, scope: !733)
!735 = !DILocation(line: 269, column: 17, scope: !736)
!736 = distinct !DILexicalBlock(scope: !726, file: !3, line: 269, column: 16)
!737 = !DILocation(line: 269, column: 16, scope: !726)
!738 = !DILocation(line: 265, column: 27, scope: !728)
!739 = !DILocation(line: 265, column: 21, scope: !728)
!740 = !DILocation(line: 265, column: 3, scope: !718)
!741 = distinct !{!741, !740, !742}
!742 = !DILocation(line: 271, column: 3, scope: !718)
!743 = distinct !DISubprogram(name: "validate_eye_color", scope: !3, file: !3, line: 77, type: !60, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !744)
!744 = !{!745}
!745 = !DILocalVariable(name: "input", arg: 1, scope: !743, file: !3, line: 77, type: !6)
!746 = !DILocation(line: 0, scope: !743)
!747 = !DILocation(line: 79, column: 10, scope: !743)
!748 = !DILocation(line: 79, column: 3, scope: !743)
!749 = distinct !DISubprogram(name: "validate_hair_color", scope: !3, file: !3, line: 82, type: !60, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !750)
!750 = !{!751}
!751 = !DILocalVariable(name: "input", arg: 1, scope: !749, file: !3, line: 82, type: !6)
!752 = !DILocation(line: 0, scope: !749)
!753 = !DILocation(line: 84, column: 10, scope: !749)
!754 = !DILocation(line: 84, column: 3, scope: !749)
!755 = distinct !DISubprogram(name: "validate_sex", scope: !3, file: !3, line: 238, type: !60, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !756)
!756 = !{!757}
!757 = !DILocalVariable(name: "input", arg: 1, scope: !755, file: !3, line: 238, type: !6)
!758 = !DILocation(line: 0, scope: !755)
!759 = !DILocation(line: 240, column: 7, scope: !760)
!760 = distinct !DILexicalBlock(scope: !755, file: !3, line: 240, column: 7)
!761 = !DILocation(line: 240, column: 21, scope: !760)
!762 = !DILocation(line: 240, column: 7, scope: !755)
!763 = !DILocation(line: 243, column: 7, scope: !764)
!764 = distinct !DILexicalBlock(scope: !755, file: !3, line: 243, column: 7)
!765 = !DILocation(line: 243, column: 23, scope: !764)
!766 = !DILocation(line: 246, column: 3, scope: !755)
!767 = !DILocation(line: 247, column: 1, scope: !755)
!768 = distinct !DISubprogram(name: "validate_weight", scope: !3, file: !3, line: 143, type: !60, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !769)
!769 = !{!770}
!770 = !DILocalVariable(name: "input", arg: 1, scope: !768, file: !3, line: 143, type: !6)
!771 = !DILocation(line: 0, scope: !768)
!772 = !DILocation(line: 145, column: 8, scope: !773)
!773 = distinct !DILexicalBlock(scope: !768, file: !3, line: 145, column: 7)
!774 = !DILocation(line: 145, column: 7, scope: !768)
!775 = !DILocation(line: 146, column: 26, scope: !768)
!776 = !DILocation(line: 146, column: 10, scope: !768)
!777 = !DILocation(line: 146, column: 3, scope: !768)
!778 = !DILocation(line: 147, column: 1, scope: !768)
!779 = distinct !DISubprogram(name: "validate_height_inches", scope: !3, file: !3, line: 131, type: !60, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !780)
!780 = !{!781}
!781 = !DILocalVariable(name: "input", arg: 1, scope: !779, file: !3, line: 131, type: !6)
!782 = !DILocation(line: 0, scope: !779)
!783 = !DILocation(line: 133, column: 8, scope: !784)
!784 = distinct !DILexicalBlock(scope: !779, file: !3, line: 133, column: 7)
!785 = !DILocation(line: 133, column: 7, scope: !779)
!786 = !DILocation(line: 134, column: 24, scope: !779)
!787 = !DILocation(line: 134, column: 10, scope: !779)
!788 = !DILocation(line: 134, column: 3, scope: !779)
!789 = !DILocation(line: 135, column: 1, scope: !779)
!790 = distinct !DISubprogram(name: "validate_height_feet", scope: !3, file: !3, line: 137, type: !60, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !791)
!791 = !{!792}
!792 = !DILocalVariable(name: "input", arg: 1, scope: !790, file: !3, line: 137, type: !6)
!793 = !DILocation(line: 0, scope: !790)
!794 = !DILocation(line: 139, column: 8, scope: !795)
!795 = distinct !DILexicalBlock(scope: !790, file: !3, line: 139, column: 7)
!796 = !DILocation(line: 139, column: 7, scope: !790)
!797 = !DILocation(line: 140, column: 23, scope: !790)
!798 = !DILocation(line: 140, column: 10, scope: !790)
!799 = !DILocation(line: 140, column: 3, scope: !790)
!800 = !DILocation(line: 141, column: 1, scope: !790)
!801 = distinct !DISubprogram(name: "validate_day", scope: !3, file: !3, line: 113, type: !60, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !802)
!802 = !{!803}
!803 = !DILocalVariable(name: "input", arg: 1, scope: !801, file: !3, line: 113, type: !6)
!804 = !DILocation(line: 0, scope: !801)
!805 = !DILocation(line: 115, column: 8, scope: !806)
!806 = distinct !DILexicalBlock(scope: !801, file: !3, line: 115, column: 7)
!807 = !DILocation(line: 115, column: 7, scope: !801)
!808 = !DILocation(line: 116, column: 24, scope: !801)
!809 = !DILocation(line: 116, column: 10, scope: !801)
!810 = !DILocation(line: 116, column: 3, scope: !801)
!811 = !DILocation(line: 117, column: 1, scope: !801)
!812 = distinct !DISubprogram(name: "validate_suffix", scope: !3, file: !3, line: 92, type: !60, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !813)
!813 = !{!814}
!814 = !DILocalVariable(name: "input", arg: 1, scope: !812, file: !3, line: 92, type: !6)
!815 = !DILocation(line: 0, scope: !812)
!816 = !DILocation(line: 94, column: 10, scope: !812)
!817 = !DILocation(line: 94, column: 3, scope: !812)
!818 = distinct !DISubprogram(name: "validate_edu", scope: !3, file: !3, line: 72, type: !60, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !819)
!819 = !{!820}
!820 = !DILocalVariable(name: "input", arg: 1, scope: !818, file: !3, line: 72, type: !6)
!821 = !DILocation(line: 0, scope: !818)
!822 = !DILocation(line: 74, column: 10, scope: !818)
!823 = !DILocation(line: 74, column: 3, scope: !818)
!824 = distinct !DISubprogram(name: "main", scope: !238, file: !238, line: 35, type: !825, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !827)
!825 = !DISubroutineType(types: !826)
!826 = !{!62}
!827 = !{!828, !832, !833, !834}
!828 = !DILocalVariable(name: "line_buf", scope: !824, file: !238, line: 37, type: !829)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32768, elements: !830)
!830 = !{!831}
!831 = !DISubrange(count: 4096, lowerBound: 0)
!832 = !DILocalVariable(name: "with_title", scope: !824, file: !238, line: 38, type: !62)
!833 = !DILocalVariable(name: "ret", scope: !824, file: !238, line: 39, type: !62)
!834 = !DILocalVariable(name: "done", scope: !824, file: !238, line: 40, type: !62)
!835 = !DILocation(line: 37, column: 3, scope: !824)
!836 = !DILocation(line: 37, column: 8, scope: !824)
!837 = !DILocation(line: 0, scope: !824)
!838 = !DILocation(line: 42, column: 8, scope: !824)
!839 = !{!840, !342, i64 24}
!840 = !{!"form", !342, i64 0, !342, i64 8, !342, i64 16, !342, i64 24, !324, i64 32, !342, i64 72, !342, i64 80, !342, i64 88}
!841 = !DILocation(line: 42, column: 3, scope: !824)
!842 = !DILocation(line: 43, column: 3, scope: !824)
!843 = !DILocation(line: 45, column: 5, scope: !844)
!844 = distinct !DILexicalBlock(scope: !824, file: !238, line: 44, column: 13)
!845 = !DILocation(line: 47, column: 5, scope: !844)
!846 = !DILocation(line: 48, column: 9, scope: !847)
!847 = distinct !DILexicalBlock(scope: !844, file: !238, line: 48, column: 9)
!848 = !DILocation(line: 48, column: 29, scope: !847)
!849 = !DILocation(line: 48, column: 9, scope: !844)
!850 = !DILocation(line: 51, column: 11, scope: !844)
!851 = !DILocation(line: 52, column: 13, scope: !852)
!852 = distinct !DILexicalBlock(scope: !844, file: !238, line: 52, column: 9)
!853 = !DILocation(line: 52, column: 9, scope: !844)
!854 = !DILocation(line: 54, column: 14, scope: !852)
!855 = !DILocation(line: 57, column: 7, scope: !856)
!856 = distinct !DILexicalBlock(scope: !857, file: !238, line: 56, column: 14)
!857 = distinct !DILexicalBlock(scope: !852, file: !238, line: 54, column: 14)
!858 = !DILocation(line: 61, column: 5, scope: !859)
!859 = distinct !DILexicalBlock(scope: !860, file: !238, line: 58, column: 24)
!860 = distinct !DILexicalBlock(scope: !856, file: !238, line: 58, column: 14)
!861 = !DILocation(line: 44, column: 3, scope: !824)
!862 = !DILocation(line: 0, scope: !844)
!863 = distinct !{!863, !861, !864}
!864 = !DILocation(line: 62, column: 3, scope: !824)
!865 = !DILocation(line: 64, column: 1, scope: !824)
!866 = !DILocation(line: 63, column: 3, scope: !824)
!867 = distinct !DISubprogram(name: "handle_next", scope: !205, file: !205, line: 199, type: !868, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !909)
!868 = !DISubroutineType(types: !869)
!869 = !{!62, !870, !6}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "form_t", file: !39, line: 32, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "form", file: !39, line: 23, size: 768, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !884, !907, !908}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "greeting", scope: !872, file: !39, line: 24, baseType: !12, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "ending", scope: !872, file: !39, line: 25, baseType: !12, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !872, file: !39, line: 26, baseType: !12, size: 64, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !872, file: !39, line: 27, baseType: !187, size: 64, offset: 192)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !872, file: !39, line: 28, baseType: !879, size: 320, offset: 256)
!879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !880, size: 320, elements: !196)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{!62, !883, !6}
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !872, file: !39, line: 29, baseType: !885, size: 64, offset: 576)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "page_t", file: !39, line: 21, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !39, line: 16, size: 320, elements: !888)
!888 = !{!889, !890, !892, !893, !906}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !887, file: !39, line: 17, baseType: !12, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !887, file: !39, line: 18, baseType: !891, size: 64, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !887, file: !39, line: 18, baseType: !891, size: 64, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "questions", scope: !887, file: !39, line: 19, baseType: !894, size: 64, offset: 192)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "question_t", file: !39, line: 14, baseType: !896)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "question", file: !39, line: 7, size: 448, elements: !897)
!897 = !{!898, !899, !900, !901, !902, !904, !905}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !896, file: !39, line: 8, baseType: !12, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "hint", scope: !896, file: !39, line: 9, baseType: !12, size: 64, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "answer", scope: !896, file: !39, line: 10, baseType: !6, size: 64, offset: 128)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "optional", scope: !896, file: !39, line: 11, baseType: !7, size: 8, offset: 192)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !896, file: !39, line: 12, baseType: !903, size: 64, offset: 256)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !896, file: !39, line: 12, baseType: !903, size: 64, offset: 320)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !896, file: !39, line: 13, baseType: !59, size: 64, offset: 384)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "completed", scope: !887, file: !39, line: 20, baseType: !7, size: 8, offset: 256)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "cur_page", scope: !872, file: !39, line: 30, baseType: !885, size: 64, offset: 640)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "cur_question", scope: !872, file: !39, line: 31, baseType: !894, size: 64, offset: 704)
!909 = !{!910, !911, !912}
!910 = !DILocalVariable(name: "form", arg: 1, scope: !867, file: !205, line: 199, type: !870)
!911 = !DILocalVariable(name: "arg", arg: 2, scope: !867, file: !205, line: 199, type: !6)
!912 = !DILocalVariable(name: "ret", scope: !867, file: !205, line: 201, type: !62)
!913 = !DILocation(line: 0, scope: !867)
!914 = !DILocation(line: 203, column: 13, scope: !915)
!915 = distinct !DILexicalBlock(scope: !867, file: !205, line: 203, column: 7)
!916 = !{!840, !342, i64 80}
!917 = !DILocation(line: 203, column: 23, scope: !915)
!918 = !{!341, !342, i64 0}
!919 = !DILocation(line: 203, column: 29, scope: !915)
!920 = !DILocation(line: 203, column: 7, scope: !867)
!921 = !DILocation(line: 207, column: 24, scope: !922)
!922 = distinct !DILexicalBlock(scope: !867, file: !205, line: 207, column: 7)
!923 = !{!341, !324, i64 32}
!924 = !DILocation(line: 207, column: 8, scope: !922)
!925 = !DILocation(line: 207, column: 7, scope: !867)
!926 = !DILocation(line: 208, column: 5, scope: !927)
!927 = distinct !DILexicalBlock(scope: !922, file: !205, line: 207, column: 35)
!928 = !DILocation(line: 209, column: 5, scope: !927)
!929 = !DILocation(line: 210, column: 5, scope: !927)
!930 = !DILocation(line: 213, column: 9, scope: !867)
!931 = !DILocation(line: 214, column: 11, scope: !932)
!932 = distinct !DILexicalBlock(scope: !867, file: !205, line: 214, column: 7)
!933 = !DILocation(line: 214, column: 7, scope: !867)
!934 = !DILocation(line: 217, column: 11, scope: !935)
!935 = distinct !DILexicalBlock(scope: !867, file: !205, line: 217, column: 7)
!936 = !DILocation(line: 217, column: 7, scope: !867)
!937 = !DILocation(line: 221, column: 15, scope: !867)
!938 = !{!840, !342, i64 88}
!939 = !DILocation(line: 221, column: 28, scope: !867)
!940 = !DILocation(line: 221, column: 36, scope: !867)
!941 = !DILocation(line: 221, column: 59, scope: !867)
!942 = !DILocation(line: 221, column: 64, scope: !867)
!943 = !DILocation(line: 221, column: 72, scope: !867)
!944 = !DILocation(line: 221, column: 95, scope: !867)
!945 = !{!366, !342, i64 16}
!946 = !DILocation(line: 221, column: 102, scope: !867)
!947 = !DILocation(line: 221, column: 3, scope: !867)
!948 = !DILocation(line: 222, column: 24, scope: !867)
!949 = !DILocation(line: 225, column: 1, scope: !867)
!950 = distinct !DISubprogram(name: "print_next_title", scope: !205, file: !205, line: 180, type: !951, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !953)
!951 = !DISubroutineType(types: !952)
!952 = !{null, !870}
!953 = !{!954}
!954 = !DILocalVariable(name: "form", arg: 1, scope: !950, file: !205, line: 180, type: !870)
!955 = !DILocation(line: 0, scope: !950)
!956 = !DILocation(line: 183, column: 13, scope: !957)
!957 = distinct !DILexicalBlock(scope: !950, file: !205, line: 183, column: 7)
!958 = !DILocation(line: 183, column: 23, scope: !957)
!959 = !DILocation(line: 183, column: 29, scope: !957)
!960 = !DILocation(line: 183, column: 35, scope: !957)
!961 = !DILocation(line: 183, column: 7, scope: !950)
!962 = !DILocation(line: 184, column: 5, scope: !957)
!963 = !{!840, !342, i64 8}
!964 = !DILocation(line: 185, column: 12, scope: !965)
!965 = distinct !DILexicalBlock(scope: !957, file: !205, line: 185, column: 12)
!966 = !DILocation(line: 185, column: 59, scope: !965)
!967 = !DILocation(line: 185, column: 12, scope: !957)
!968 = !DILocation(line: 186, column: 5, scope: !965)
!969 = !DILocation(line: 188, column: 5, scope: !965)
!970 = !DILocation(line: 189, column: 1, scope: !950)
!971 = distinct !DISubprogram(name: "next_page", scope: !205, file: !205, line: 167, type: !972, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !974)
!972 = !DISubroutineType(types: !973)
!973 = !{!62, !870}
!974 = !{!975}
!975 = !DILocalVariable(name: "form", arg: 1, scope: !971, file: !205, line: 167, type: !870)
!976 = !DILocation(line: 0, scope: !971)
!977 = !DILocation(line: 169, column: 13, scope: !978)
!978 = distinct !DILexicalBlock(scope: !971, file: !205, line: 169, column: 7)
!979 = !DILocation(line: 169, column: 22, scope: !978)
!980 = !DILocation(line: 169, column: 7, scope: !971)
!981 = !DILocation(line: 172, column: 23, scope: !982)
!982 = distinct !DILexicalBlock(scope: !971, file: !205, line: 172, column: 7)
!983 = !DILocation(line: 172, column: 28, scope: !982)
!984 = !DILocation(line: 172, column: 7, scope: !971)
!985 = !DILocation(line: 175, column: 18, scope: !971)
!986 = !DILocation(line: 176, column: 40, scope: !971)
!987 = !DILocation(line: 176, column: 9, scope: !971)
!988 = !DILocation(line: 176, column: 22, scope: !971)
!989 = !DILocation(line: 177, column: 3, scope: !971)
!990 = !DILocation(line: 178, column: 1, scope: !971)
!991 = distinct !DISubprogram(name: "handle_exit", scope: !205, file: !205, line: 227, type: !868, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !992)
!992 = !{!993, !994}
!993 = !DILocalVariable(name: "form", arg: 1, scope: !991, file: !205, line: 227, type: !870)
!994 = !DILocalVariable(name: "arg", arg: 2, scope: !991, file: !205, line: 227, type: !6)
!995 = !DILocation(line: 0, scope: !991)
!996 = !DILocation(line: 229, column: 3, scope: !991)
!997 = !DILocation(line: 230, column: 3, scope: !991)
!998 = distinct !DISubprogram(name: "exit", scope: !208, file: !208, line: 24, type: !999, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1001)
!999 = !DISubroutineType(types: !1000)
!1000 = !{null, !62}
!1001 = !{!1002}
!1002 = !DILocalVariable(name: "ret", arg: 1, scope: !998, file: !208, line: 24, type: !62)
!1003 = !DILocation(line: 0, scope: !998)
!1004 = !DILocation(line: 26, column: 5, scope: !998)
!1005 = distinct !DISubprogram(name: "handle_help", scope: !205, file: !205, line: 234, type: !868, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1006)
!1006 = !{!1007, !1008}
!1007 = !DILocalVariable(name: "form", arg: 1, scope: !1005, file: !205, line: 234, type: !870)
!1008 = !DILocalVariable(name: "arg", arg: 2, scope: !1005, file: !205, line: 234, type: !6)
!1009 = !DILocation(line: 0, scope: !1005)
!1010 = !DILocation(line: 236, column: 3, scope: !1005)
!1011 = !{!840, !342, i64 16}
!1012 = !DILocation(line: 237, column: 3, scope: !1005)
!1013 = distinct !DISubprogram(name: "handle_prev", scope: !205, file: !205, line: 240, type: !868, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1014)
!1014 = !{!1015, !1016}
!1015 = !DILocalVariable(name: "form", arg: 1, scope: !1013, file: !205, line: 240, type: !870)
!1016 = !DILocalVariable(name: "arg", arg: 2, scope: !1013, file: !205, line: 240, type: !6)
!1017 = !DILocation(line: 0, scope: !1013)
!1018 = !DILocation(line: 242, column: 13, scope: !1019)
!1019 = distinct !DILexicalBlock(scope: !1013, file: !205, line: 242, column: 7)
!1020 = !DILocation(line: 242, column: 22, scope: !1019)
!1021 = !DILocation(line: 242, column: 7, scope: !1013)
!1022 = !DILocation(line: 245, column: 23, scope: !1023)
!1023 = distinct !DILexicalBlock(scope: !1013, file: !205, line: 245, column: 7)
!1024 = !DILocation(line: 245, column: 28, scope: !1023)
!1025 = !DILocation(line: 245, column: 7, scope: !1013)
!1026 = !DILocation(line: 246, column: 5, scope: !1027)
!1027 = distinct !DILexicalBlock(scope: !1023, file: !205, line: 245, column: 37)
!1028 = !DILocation(line: 247, column: 5, scope: !1027)
!1029 = !DILocation(line: 250, column: 18, scope: !1013)
!1030 = !DILocation(line: 251, column: 40, scope: !1013)
!1031 = !DILocation(line: 251, column: 9, scope: !1013)
!1032 = !DILocation(line: 251, column: 22, scope: !1013)
!1033 = !DILocation(line: 253, column: 3, scope: !1013)
!1034 = !DILocation(line: 254, column: 1, scope: !1013)
!1035 = distinct !DISubprogram(name: "print_title", scope: !205, file: !205, line: 80, type: !951, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1036)
!1036 = !{!1037}
!1037 = !DILocalVariable(name: "form", arg: 1, scope: !1035, file: !205, line: 80, type: !870)
!1038 = !DILocation(line: 0, scope: !1035)
!1039 = !DILocation(line: 82, column: 21, scope: !1040)
!1040 = distinct !DILexicalBlock(scope: !1035, file: !205, line: 82, column: 7)
!1041 = !DILocation(line: 82, column: 31, scope: !1040)
!1042 = !DILocation(line: 82, column: 7, scope: !1040)
!1043 = !DILocation(line: 82, column: 48, scope: !1040)
!1044 = !DILocation(line: 82, column: 7, scope: !1035)
!1045 = !DILocation(line: 83, column: 5, scope: !1040)
!1046 = !DILocation(line: 85, column: 5, scope: !1040)
!1047 = !DILocation(line: 86, column: 1, scope: !1035)
!1048 = distinct !DISubprogram(name: "handle_update", scope: !205, file: !205, line: 256, type: !868, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1049)
!1049 = !{!1050, !1051, !1052, !1053}
!1050 = !DILocalVariable(name: "form", arg: 1, scope: !1048, file: !205, line: 256, type: !870)
!1051 = !DILocalVariable(name: "arg", arg: 2, scope: !1048, file: !205, line: 256, type: !6)
!1052 = !DILocalVariable(name: "cur", scope: !1048, file: !205, line: 258, type: !894)
!1053 = !DILocalVariable(name: "input_buf", scope: !1048, file: !205, line: 259, type: !6)
!1054 = !DILocation(line: 0, scope: !1048)
!1055 = !DILocation(line: 261, column: 14, scope: !1056)
!1056 = distinct !DILexicalBlock(scope: !1048, file: !205, line: 261, column: 7)
!1057 = !DILocation(line: 261, column: 24, scope: !1056)
!1058 = !DILocation(line: 261, column: 8, scope: !1056)
!1059 = !DILocation(line: 261, column: 7, scope: !1048)
!1060 = !DILocation(line: 262, column: 5, scope: !1061)
!1061 = distinct !DILexicalBlock(scope: !1056, file: !205, line: 261, column: 35)
!1062 = !DILocation(line: 263, column: 5, scope: !1061)
!1063 = !DILocation(line: 266, column: 11, scope: !1064)
!1064 = distinct !DILexicalBlock(scope: !1048, file: !205, line: 266, column: 7)
!1065 = !DILocation(line: 266, column: 7, scope: !1048)
!1066 = !DILocation(line: 269, column: 25, scope: !1048)
!1067 = !DILocation(line: 270, column: 3, scope: !1068)
!1068 = distinct !DILexicalBlock(scope: !1048, file: !205, line: 270, column: 3)
!1069 = !DILocation(line: 271, column: 22, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1071, file: !205, line: 271, column: 9)
!1071 = distinct !DILexicalBlock(scope: !1068, file: !205, line: 270, column: 3)
!1072 = !{!366, !342, i64 0}
!1073 = !DILocation(line: 271, column: 34, scope: !1070)
!1074 = !DILocation(line: 271, column: 9, scope: !1070)
!1075 = !DILocation(line: 271, column: 54, scope: !1070)
!1076 = !DILocation(line: 271, column: 9, scope: !1071)
!1077 = !DILocation(line: 270, column: 33, scope: !1071)
!1078 = distinct !{!1078, !1067, !1079}
!1079 = !DILocation(line: 272, column: 7, scope: !1068)
!1080 = !DILocation(line: 275, column: 5, scope: !1081)
!1081 = distinct !DILexicalBlock(scope: !1082, file: !205, line: 274, column: 20)
!1082 = distinct !DILexicalBlock(scope: !1048, file: !205, line: 274, column: 7)
!1083 = !DILocation(line: 276, column: 5, scope: !1081)
!1084 = !DILocation(line: 277, column: 5, scope: !1081)
!1085 = !DILocation(line: 280, column: 15, scope: !1048)
!1086 = !DILocation(line: 281, column: 17, scope: !1087)
!1087 = distinct !DILexicalBlock(scope: !1048, file: !205, line: 281, column: 7)
!1088 = !DILocation(line: 281, column: 7, scope: !1048)
!1089 = !DILocation(line: 284, column: 3, scope: !1048)
!1090 = !DILocation(line: 285, column: 7, scope: !1091)
!1091 = distinct !DILexicalBlock(scope: !1048, file: !205, line: 285, column: 7)
!1092 = !DILocation(line: 285, column: 28, scope: !1091)
!1093 = !DILocation(line: 285, column: 7, scope: !1048)
!1094 = !DILocation(line: 288, column: 8, scope: !1095)
!1095 = distinct !DILexicalBlock(scope: !1048, file: !205, line: 288, column: 7)
!1096 = !DILocation(line: 288, column: 26, scope: !1095)
!1097 = !DILocation(line: 288, column: 32, scope: !1095)
!1098 = !DILocation(line: 288, column: 40, scope: !1095)
!1099 = !{!366, !324, i64 24}
!1100 = !DILocation(line: 288, column: 35, scope: !1095)
!1101 = !DILocation(line: 288, column: 7, scope: !1048)
!1102 = !DILocation(line: 290, column: 7, scope: !1103)
!1103 = distinct !DILexicalBlock(scope: !1104, file: !205, line: 289, column: 28)
!1104 = distinct !DILexicalBlock(scope: !1105, file: !205, line: 289, column: 9)
!1105 = distinct !DILexicalBlock(scope: !1095, file: !205, line: 288, column: 50)
!1106 = !DILocation(line: 293, column: 14, scope: !1107)
!1107 = distinct !DILexicalBlock(scope: !1105, file: !205, line: 293, column: 9)
!1108 = !DILocation(line: 293, column: 21, scope: !1107)
!1109 = !DILocation(line: 293, column: 9, scope: !1105)
!1110 = !DILocation(line: 294, column: 7, scope: !1111)
!1111 = distinct !DILexicalBlock(scope: !1107, file: !205, line: 293, column: 30)
!1112 = !DILocation(line: 295, column: 5, scope: !1111)
!1113 = !DILocation(line: 297, column: 17, scope: !1105)
!1114 = !DILocation(line: 298, column: 5, scope: !1105)
!1115 = !DILocation(line: 301, column: 13, scope: !1116)
!1116 = distinct !DILexicalBlock(scope: !1048, file: !205, line: 301, column: 7)
!1117 = !{!366, !342, i64 48}
!1118 = !DILocation(line: 301, column: 8, scope: !1116)
!1119 = !DILocation(line: 301, column: 7, scope: !1048)
!1120 = !DILocation(line: 303, column: 7, scope: !1121)
!1121 = distinct !DILexicalBlock(scope: !1122, file: !205, line: 302, column: 28)
!1122 = distinct !DILexicalBlock(scope: !1123, file: !205, line: 302, column: 9)
!1123 = distinct !DILexicalBlock(scope: !1116, file: !205, line: 301, column: 35)
!1124 = !DILocation(line: 306, column: 5, scope: !1123)
!1125 = !DILocation(line: 307, column: 5, scope: !1123)
!1126 = !DILocation(line: 308, column: 5, scope: !1123)
!1127 = !DILocation(line: 311, column: 12, scope: !1128)
!1128 = distinct !DILexicalBlock(scope: !1048, file: !205, line: 311, column: 7)
!1129 = !DILocation(line: 311, column: 19, scope: !1128)
!1130 = !DILocation(line: 311, column: 7, scope: !1048)
!1131 = !DILocation(line: 312, column: 17, scope: !1132)
!1132 = distinct !DILexicalBlock(scope: !1128, file: !205, line: 311, column: 28)
!1133 = !DILocation(line: 316, column: 3, scope: !1132)
!1134 = !DILocation(line: 316, column: 46, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !1128, file: !205, line: 316, column: 14)
!1136 = !DILocation(line: 316, column: 14, scope: !1135)
!1137 = !DILocation(line: 316, column: 67, scope: !1135)
!1138 = !DILocation(line: 316, column: 14, scope: !1128)
!1139 = !DILocation(line: 318, column: 5, scope: !1140)
!1140 = distinct !DILexicalBlock(scope: !1135, file: !205, line: 316, column: 73)
!1141 = !DILocation(line: 319, column: 5, scope: !1140)
!1142 = !DILocation(line: 320, column: 3, scope: !1140)
!1143 = !DILocation(line: 321, column: 5, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1135, file: !205, line: 320, column: 10)
!1145 = !DILocation(line: 322, column: 17, scope: !1144)
!1146 = !DILocation(line: 326, column: 1, scope: !1048)
!1147 = distinct !DISubprogram(name: "prompt_q", scope: !205, file: !205, line: 191, type: !1148, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1150)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{null, !894}
!1150 = !{!1151}
!1151 = !DILocalVariable(name: "q", arg: 1, scope: !1147, file: !205, line: 191, type: !894)
!1152 = !DILocation(line: 0, scope: !1147)
!1153 = !DILocation(line: 193, column: 10, scope: !1154)
!1154 = distinct !DILexicalBlock(scope: !1147, file: !205, line: 193, column: 7)
!1155 = !{!366, !342, i64 8}
!1156 = !DILocation(line: 193, column: 15, scope: !1154)
!1157 = !DILocation(line: 0, scope: !1154)
!1158 = !DILocation(line: 193, column: 7, scope: !1147)
!1159 = !DILocation(line: 194, column: 5, scope: !1154)
!1160 = !DILocation(line: 196, column: 5, scope: !1154)
!1161 = !DILocation(line: 197, column: 1, scope: !1147)
!1162 = distinct !DISubprogram(name: "print_prompt", scope: !205, file: !205, line: 328, type: !1163, scopeLine: 329, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1165)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{null, !870, !62, !62}
!1165 = !{!1166, !1167, !1168}
!1166 = !DILocalVariable(name: "form", arg: 1, scope: !1162, file: !205, line: 328, type: !870)
!1167 = !DILocalVariable(name: "with_title", arg: 2, scope: !1162, file: !205, line: 328, type: !62)
!1168 = !DILocalVariable(name: "done", arg: 3, scope: !1162, file: !205, line: 328, type: !62)
!1169 = !DILocation(line: 0, scope: !1162)
!1170 = !DILocation(line: 331, column: 13, scope: !1171)
!1171 = distinct !DILexicalBlock(scope: !1162, file: !205, line: 331, column: 7)
!1172 = !DILocation(line: 331, column: 23, scope: !1171)
!1173 = !DILocation(line: 331, column: 29, scope: !1171)
!1174 = !DILocation(line: 331, column: 7, scope: !1162)
!1175 = !DILocation(line: 332, column: 5, scope: !1176)
!1176 = distinct !DILexicalBlock(scope: !1171, file: !205, line: 331, column: 38)
!1177 = !DILocation(line: 333, column: 5, scope: !1176)
!1178 = !DILocation(line: 336, column: 7, scope: !1179)
!1179 = distinct !DILexicalBlock(scope: !1162, file: !205, line: 336, column: 7)
!1180 = !DILocation(line: 336, column: 7, scope: !1162)
!1181 = !DILocation(line: 337, column: 5, scope: !1179)
!1182 = !DILocation(line: 339, column: 13, scope: !1183)
!1183 = distinct !DILexicalBlock(scope: !1162, file: !205, line: 339, column: 7)
!1184 = !DILocation(line: 339, column: 23, scope: !1183)
!1185 = !DILocation(line: 339, column: 7, scope: !1183)
!1186 = !DILocation(line: 339, column: 7, scope: !1162)
!1187 = !DILocation(line: 340, column: 5, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !1183, file: !205, line: 339, column: 34)
!1189 = !DILocation(line: 341, column: 5, scope: !1188)
!1190 = !DILocation(line: 342, column: 5, scope: !1188)
!1191 = !DILocation(line: 345, column: 18, scope: !1162)
!1192 = !DILocation(line: 345, column: 3, scope: !1162)
!1193 = !DILocation(line: 346, column: 1, scope: !1162)
!1194 = distinct !DISubprogram(name: "print_page", scope: !205, file: !205, line: 142, type: !951, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1195)
!1195 = !{!1196, !1197}
!1196 = !DILocalVariable(name: "form", arg: 1, scope: !1194, file: !205, line: 142, type: !870)
!1197 = !DILocalVariable(name: "cur", scope: !1194, file: !205, line: 144, type: !894)
!1198 = !DILocation(line: 0, scope: !1194)
!1199 = !DILocation(line: 144, column: 27, scope: !1194)
!1200 = !DILocation(line: 144, column: 37, scope: !1194)
!1201 = !DILocation(line: 145, column: 31, scope: !1202)
!1202 = distinct !DILexicalBlock(scope: !1194, file: !205, line: 145, column: 7)
!1203 = !DILocation(line: 145, column: 7, scope: !1202)
!1204 = !DILocation(line: 145, column: 48, scope: !1202)
!1205 = !DILocation(line: 145, column: 7, scope: !1194)
!1206 = !DILocation(line: 147, column: 12, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1202, file: !205, line: 147, column: 12)
!1208 = !DILocation(line: 147, column: 53, scope: !1207)
!1209 = !DILocation(line: 147, column: 12, scope: !1202)
!1210 = !DILocation(line: 149, column: 12, scope: !1211)
!1211 = distinct !DILexicalBlock(scope: !1207, file: !205, line: 149, column: 12)
!1212 = !DILocation(line: 149, column: 53, scope: !1211)
!1213 = !DILocation(line: 0, scope: !1202)
!1214 = !DILocation(line: 154, column: 14, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1216, file: !205, line: 154, column: 3)
!1216 = distinct !DILexicalBlock(scope: !1194, file: !205, line: 154, column: 3)
!1217 = !DILocation(line: 154, column: 3, scope: !1216)
!1218 = !DILocation(line: 155, column: 14, scope: !1219)
!1219 = distinct !DILexicalBlock(scope: !1215, file: !205, line: 155, column: 9)
!1220 = !DILocation(line: 155, column: 21, scope: !1219)
!1221 = !DILocation(line: 0, scope: !1219)
!1222 = !DILocation(line: 155, column: 9, scope: !1215)
!1223 = !DILocation(line: 156, column: 7, scope: !1219)
!1224 = !DILocation(line: 158, column: 7, scope: !1219)
!1225 = !DILocation(line: 154, column: 34, scope: !1215)
!1226 = distinct !{!1226, !1217, !1227}
!1227 = !DILocation(line: 158, column: 7, scope: !1216)
!1228 = !DILocation(line: 159, column: 1, scope: !1194)
!1229 = distinct !DISubprogram(name: "prompt_next", scope: !205, file: !205, line: 161, type: !188, scopeLine: 162, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !4)
!1230 = !DILocation(line: 163, column: 3, scope: !1229)
!1231 = !DILocation(line: 164, column: 1, scope: !1229)
!1232 = distinct !DISubprogram(name: "handle_line", scope: !205, file: !205, line: 348, type: !868, scopeLine: 349, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1233)
!1233 = !{!1234, !1235, !1236}
!1234 = !DILocalVariable(name: "form", arg: 1, scope: !1232, file: !205, line: 348, type: !870)
!1235 = !DILocalVariable(name: "buf", arg: 2, scope: !1232, file: !205, line: 348, type: !6)
!1236 = !DILocalVariable(name: "ret", scope: !1232, file: !205, line: 350, type: !62)
!1237 = !DILocation(line: 0, scope: !1232)
!1238 = !DILocation(line: 352, column: 7, scope: !1239)
!1239 = distinct !DILexicalBlock(scope: !1232, file: !205, line: 352, column: 7)
!1240 = !DILocation(line: 352, column: 7, scope: !1232)
!1241 = !DILocation(line: 353, column: 12, scope: !1239)
!1242 = !DILocation(line: 353, column: 5, scope: !1239)
!1243 = !DILocation(line: 355, column: 13, scope: !1244)
!1244 = distinct !DILexicalBlock(scope: !1232, file: !205, line: 355, column: 7)
!1245 = !DILocation(line: 355, column: 23, scope: !1244)
!1246 = !DILocation(line: 355, column: 7, scope: !1244)
!1247 = !DILocation(line: 355, column: 33, scope: !1244)
!1248 = !DILocation(line: 355, column: 42, scope: !1244)
!1249 = !DILocation(line: 355, column: 55, scope: !1244)
!1250 = !DILocation(line: 355, column: 7, scope: !1232)
!1251 = !DILocation(line: 359, column: 7, scope: !1252)
!1252 = distinct !DILexicalBlock(scope: !1232, file: !205, line: 359, column: 7)
!1253 = !DILocation(line: 359, column: 19, scope: !1252)
!1254 = !DILocation(line: 359, column: 7, scope: !1232)
!1255 = !DILocation(line: 360, column: 30, scope: !1256)
!1256 = distinct !DILexicalBlock(scope: !1257, file: !205, line: 360, column: 9)
!1257 = distinct !DILexicalBlock(scope: !1252, file: !205, line: 359, column: 25)
!1258 = !DILocation(line: 360, column: 10, scope: !1256)
!1259 = !DILocation(line: 360, column: 9, scope: !1257)
!1260 = !DILocation(line: 363, column: 11, scope: !1261)
!1261 = distinct !DILexicalBlock(scope: !1252, file: !205, line: 362, column: 10)
!1262 = !DILocation(line: 364, column: 13, scope: !1263)
!1263 = distinct !DILexicalBlock(scope: !1261, file: !205, line: 364, column: 9)
!1264 = !DILocation(line: 364, column: 9, scope: !1261)
!1265 = !DILocation(line: 366, column: 13, scope: !1266)
!1266 = distinct !DILexicalBlock(scope: !1261, file: !205, line: 366, column: 9)
!1267 = !DILocation(line: 366, column: 9, scope: !1261)
!1268 = !DILocation(line: 370, column: 9, scope: !1232)
!1269 = !DILocation(line: 0, scope: !1270)
!1270 = distinct !DILexicalBlock(scope: !1232, file: !205, line: 371, column: 7)
!1271 = !DILocation(line: 376, column: 1, scope: !1232)
!1272 = distinct !DISubprogram(name: "is_cmd", scope: !205, file: !205, line: 57, type: !868, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1273)
!1273 = !{!1274, !1275}
!1274 = !DILocalVariable(name: "form", arg: 1, scope: !1272, file: !205, line: 57, type: !870)
!1275 = !DILocalVariable(name: "buf", arg: 2, scope: !1272, file: !205, line: 57, type: !6)
!1276 = !DILocation(line: 0, scope: !1272)
!1277 = !DILocation(line: 59, column: 7, scope: !1278)
!1278 = distinct !DILexicalBlock(scope: !1272, file: !205, line: 59, column: 7)
!1279 = !DILocation(line: 59, column: 7, scope: !1272)
!1280 = !DILocation(line: 62, column: 10, scope: !1272)
!1281 = !DILocation(line: 62, column: 35, scope: !1272)
!1282 = !DILocation(line: 62, column: 3, scope: !1272)
!1283 = !DILocation(line: 63, column: 1, scope: !1272)
!1284 = distinct !DISubprogram(name: "handle_cmd", scope: !205, file: !205, line: 89, type: !868, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1285)
!1285 = !{!1286, !1287, !1288, !1289, !1290, !1291, !1292}
!1286 = !DILocalVariable(name: "form", arg: 1, scope: !1284, file: !205, line: 89, type: !870)
!1287 = !DILocalVariable(name: "buf", arg: 2, scope: !1284, file: !205, line: 89, type: !6)
!1288 = !DILocalVariable(name: "arg", scope: !1284, file: !205, line: 91, type: !6)
!1289 = !DILocalVariable(name: "ret", scope: !1284, file: !205, line: 92, type: !62)
!1290 = !DILocalVariable(name: "cmd", scope: !1284, file: !205, line: 97, type: !6)
!1291 = !DILocalVariable(name: "i", scope: !1284, file: !205, line: 98, type: !62)
!1292 = !DILabel(scope: !1284, name: "out", file: !205, line: 105)
!1293 = !DILocation(line: 0, scope: !1284)
!1294 = !DILocation(line: 91, column: 3, scope: !1284)
!1295 = !DILocation(line: 91, column: 22, scope: !1284)
!1296 = !DILocation(line: 91, column: 34, scope: !1284)
!1297 = !DILocation(line: 91, column: 15, scope: !1284)
!1298 = !DILocation(line: 91, column: 9, scope: !1284)
!1299 = !DILocation(line: 93, column: 11, scope: !1300)
!1300 = distinct !DILexicalBlock(scope: !1284, file: !205, line: 93, column: 7)
!1301 = !DILocation(line: 93, column: 7, scope: !1284)
!1302 = !DILocation(line: 95, column: 3, scope: !1284)
!1303 = !DILocation(line: 96, column: 3, scope: !1284)
!1304 = !DILocation(line: 96, column: 7, scope: !1284)
!1305 = !DILocation(line: 96, column: 20, scope: !1284)
!1306 = !DILocation(line: 97, column: 15, scope: !1284)
!1307 = !DILocation(line: 98, column: 11, scope: !1284)
!1308 = !DILocation(line: 99, column: 9, scope: !1309)
!1309 = distinct !DILexicalBlock(scope: !1284, file: !205, line: 99, column: 7)
!1310 = !DILocation(line: 99, column: 7, scope: !1284)
!1311 = !DILocation(line: 104, column: 15, scope: !1284)
!1312 = !DILocation(line: 104, column: 9, scope: !1284)
!1313 = !DILocation(line: 104, column: 33, scope: !1284)
!1314 = !DILocation(line: 104, column: 3, scope: !1284)
!1315 = !DILocation(line: 105, column: 1, scope: !1284)
!1316 = !DILocation(line: 106, column: 11, scope: !1317)
!1317 = distinct !DILexicalBlock(scope: !1284, file: !205, line: 106, column: 7)
!1318 = !DILocation(line: 106, column: 7, scope: !1284)
!1319 = !DILocation(line: 107, column: 5, scope: !1320)
!1320 = distinct !DILexicalBlock(scope: !1317, file: !205, line: 106, column: 20)
!1321 = !DILocation(line: 108, column: 3, scope: !1320)
!1322 = !DILocation(line: 110, column: 1, scope: !1284)
!1323 = distinct !DISubprogram(name: "handle_answer", scope: !205, file: !205, line: 112, type: !868, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1324)
!1324 = !{!1325, !1326}
!1325 = !DILocalVariable(name: "form", arg: 1, scope: !1323, file: !205, line: 112, type: !870)
!1326 = !DILocalVariable(name: "input", arg: 2, scope: !1323, file: !205, line: 112, type: !6)
!1327 = !DILocation(line: 0, scope: !1323)
!1328 = !DILocation(line: 114, column: 14, scope: !1329)
!1329 = distinct !DILexicalBlock(scope: !1323, file: !205, line: 114, column: 7)
!1330 = !DILocation(line: 114, column: 28, scope: !1329)
!1331 = !DILocation(line: 114, column: 8, scope: !1329)
!1332 = !DILocation(line: 114, column: 7, scope: !1323)
!1333 = !DILocation(line: 117, column: 13, scope: !1334)
!1334 = distinct !DILexicalBlock(scope: !1323, file: !205, line: 117, column: 7)
!1335 = !DILocation(line: 117, column: 27, scope: !1334)
!1336 = !DILocation(line: 117, column: 34, scope: !1334)
!1337 = !DILocation(line: 117, column: 7, scope: !1323)
!1338 = !DILocation(line: 118, column: 5, scope: !1339)
!1339 = distinct !DILexicalBlock(scope: !1334, file: !205, line: 117, column: 43)
!1340 = !DILocation(line: 119, column: 3, scope: !1339)
!1341 = !DILocation(line: 121, column: 39, scope: !1323)
!1342 = !DILocation(line: 121, column: 53, scope: !1323)
!1343 = !DILocation(line: 121, column: 32, scope: !1323)
!1344 = !DILocation(line: 121, column: 9, scope: !1323)
!1345 = !DILocation(line: 121, column: 23, scope: !1323)
!1346 = !DILocation(line: 121, column: 30, scope: !1323)
!1347 = !DILocation(line: 122, column: 34, scope: !1348)
!1348 = distinct !DILexicalBlock(scope: !1323, file: !205, line: 122, column: 7)
!1349 = !DILocation(line: 122, column: 7, scope: !1323)
!1350 = !DILocation(line: 125, column: 3, scope: !1323)
!1351 = !DILocation(line: 126, column: 3, scope: !1323)
!1352 = !DILocation(line: 127, column: 1, scope: !1323)
!1353 = distinct !DISubprogram(name: "next_question", scope: !205, file: !205, line: 129, type: !972, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1354)
!1354 = !{!1355}
!1355 = !DILocalVariable(name: "form", arg: 1, scope: !1353, file: !205, line: 129, type: !870)
!1356 = !DILocation(line: 0, scope: !1353)
!1357 = !DILocation(line: 131, column: 13, scope: !1358)
!1358 = distinct !DILexicalBlock(scope: !1353, file: !205, line: 131, column: 7)
!1359 = !DILocation(line: 131, column: 26, scope: !1358)
!1360 = !DILocation(line: 131, column: 7, scope: !1353)
!1361 = !DILocation(line: 134, column: 27, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1353, file: !205, line: 134, column: 7)
!1363 = !DILocation(line: 134, column: 32, scope: !1362)
!1364 = !DILocation(line: 134, column: 7, scope: !1353)
!1365 = !DILocation(line: 135, column: 11, scope: !1366)
!1366 = distinct !DILexicalBlock(scope: !1362, file: !205, line: 134, column: 41)
!1367 = !DILocation(line: 135, column: 21, scope: !1366)
!1368 = !DILocation(line: 135, column: 31, scope: !1366)
!1369 = !DILocation(line: 136, column: 3, scope: !1366)
!1370 = !DILocation(line: 137, column: 24, scope: !1371)
!1371 = distinct !DILexicalBlock(scope: !1362, file: !205, line: 136, column: 10)
!1372 = !DILocation(line: 140, column: 1, scope: !1353)
!1373 = distinct !DISubprogram(name: "handler_index", scope: !205, file: !205, line: 38, type: !868, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1374)
!1374 = !{!1375, !1376, !1377, !1378, !1379}
!1375 = !DILocalVariable(name: "form", arg: 1, scope: !1373, file: !205, line: 38, type: !870)
!1376 = !DILocalVariable(name: "buf", arg: 2, scope: !1373, file: !205, line: 38, type: !6)
!1377 = !DILocalVariable(name: "i", scope: !1373, file: !205, line: 40, type: !62)
!1378 = !DILocalVariable(name: "p", scope: !1373, file: !205, line: 41, type: !6)
!1379 = !DILocalVariable(name: "cmd_buf", scope: !1373, file: !205, line: 42, type: !1380)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1381)
!1381 = !{!1382}
!1382 = !DISubrange(count: 16, lowerBound: 0)
!1383 = !DILocation(line: 0, scope: !1373)
!1384 = !DILocation(line: 42, column: 3, scope: !1373)
!1385 = !DILocation(line: 42, column: 8, scope: !1373)
!1386 = !DILocation(line: 44, column: 3, scope: !1373)
!1387 = !DILocation(line: 44, column: 10, scope: !1373)
!1388 = !DILocation(line: 44, column: 13, scope: !1373)
!1389 = !DILocation(line: 44, column: 20, scope: !1373)
!1390 = !DILocation(line: 45, column: 6, scope: !1373)
!1391 = distinct !{!1391, !1386, !1390}
!1392 = !DILocation(line: 48, column: 31, scope: !1393)
!1393 = distinct !DILexicalBlock(scope: !1394, file: !205, line: 47, column: 34)
!1394 = distinct !DILexicalBlock(scope: !1395, file: !205, line: 47, column: 3)
!1395 = distinct !DILexicalBlock(scope: !1373, file: !205, line: 47, column: 3)
!1396 = !DILocation(line: 48, column: 24, scope: !1393)
!1397 = !DILocation(line: 48, column: 5, scope: !1393)
!1398 = !DILocation(line: 49, column: 13, scope: !1393)
!1399 = !DILocation(line: 49, column: 5, scope: !1393)
!1400 = !DILocation(line: 49, column: 34, scope: !1393)
!1401 = !DILocation(line: 50, column: 9, scope: !1402)
!1402 = distinct !DILexicalBlock(scope: !1393, file: !205, line: 50, column: 9)
!1403 = !DILocation(line: 50, column: 64, scope: !1402)
!1404 = !DILocation(line: 50, column: 9, scope: !1393)
!1405 = !DILocation(line: 47, column: 30, scope: !1394)
!1406 = !DILocation(line: 47, column: 17, scope: !1394)
!1407 = !DILocation(line: 47, column: 3, scope: !1395)
!1408 = distinct !{!1408, !1407, !1409}
!1409 = !DILocation(line: 52, column: 3, scope: !1395)
!1410 = !DILocation(line: 55, column: 1, scope: !1373)
!1411 = distinct !DISubprogram(name: "print_greeting", scope: !205, file: !205, line: 378, type: !951, scopeLine: 379, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !204, retainedNodes: !1412)
!1412 = !{!1413}
!1413 = !DILocalVariable(name: "form", arg: 1, scope: !1411, file: !205, line: 378, type: !870)
!1414 = !DILocation(line: 0, scope: !1411)
!1415 = !DILocation(line: 380, column: 3, scope: !1411)
!1416 = !{!840, !342, i64 0}
!1417 = !DILocation(line: 381, column: 1, scope: !1411)
