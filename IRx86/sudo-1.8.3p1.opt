; ModuleID = '/home/salman/DPP/data/sudo-1.8.3p1/src/sudo.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.signal_state = type { i32, %struct.sigaction }
%struct.sigaction = type { %union.anon, %struct.__sigset_t, i32, void ()* }
%union.anon = type { void (i32)* }
%struct.__sigset_t = type { [16 x i64] }
%struct.sigforward_list = type { %struct.sigforward*, %struct.sigforward* }
%struct.sigforward = type { %struct.sigforward*, %struct.sigforward*, i32 }
%struct.io_buffer = type { %struct.io_buffer*, i32, i32, i32, i32, i32 (i8*, i32)*, [16384 x i8] }
%struct.plugin_info_list = type { %struct.plugin_info*, %struct.plugin_info* }
%struct.plugin_info = type { %struct.plugin_info*, %struct.plugin_info*, i8*, i8* }
%struct.sudo_settings = type { i8*, i8* }
%struct.user_details = type { i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i32*, i32, i32, i32 }
%struct.plugin_container = type { %struct.plugin_container*, %struct.plugin_container*, i8*, i8*, %union.anon.9 }
%union.anon.9 = type { %struct.command_status* }
%struct.command_status = type { i32, i32 }
%struct.plugin_container_list = type { %struct.plugin_container*, %struct.plugin_container* }
%struct.timeval = type { i64, i64 }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%struct.sudo_conv_message = type { i32, i32, i8* }
%struct.sudo_conv_reply = type { i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.command_details = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8**, i8** }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.io_plugin = type { i32, i32, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**, i32, i8**, i8**)*, void (i32, i32)*, i32 (i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.ifaddrs = type { %struct.ifaddrs*, i8*, i32, %struct.sockaddr*, %struct.sockaddr*, %union.anon.16, i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%union.anon.16 = type { %struct.sockaddr* }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.0 }
%union.anon.0 = type { [4 x i32] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timeval, %struct.timeval, %struct.timeval, [3 x i64] }
%struct.policy_plugin = type { i32, i32, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**)*, void (i32, i32)*, i32 (i32)*, i32 (i32, i8**, i8**, i8***, i8***, i8***)*, i32 (i32, i8**, i32, i8*)*, i32 ()*, void (i32)*, i32 (%struct.passwd*)* }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.lbuf = type { i32 (i8*)*, i8*, i8*, i32, i32, i32, i32 }
%struct.io_plugin_1_0 = type { i32, i32, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i32, i8**, i8**)*, void (i32, i32)*, i32 (i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)* }
%struct.tempfile = type { i8*, i8*, %struct.timeval, i64 }
%struct.utmpx = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.__exit_status, i32, %struct.command_status, [4 x i32], [20 x i8] }
%struct.__exit_status = type { i16, i16 }
%struct.list_proto = type { %struct.list_proto*, %struct.list_proto* }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.__dirstream = type opaque

@stdout = external dso_local global %struct._IO_FILE*, align 8
@stderr = external dso_local global %struct._IO_FILE*, align 8
@__progname = external dso_local global i8*, align 8
@.str = private unnamed_addr constant [5 x i8] c"sudo\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c": \00", align 1
@signal_pipe = common dso_local global [2 x i32] zeroinitializer, align 4, !dbg !0
@.str.2 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@.str.1.3 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@saved_signals = internal global [14 x %struct.signal_state] [%struct.signal_state { i32 14, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 17, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 18, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 1, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 2, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 13, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 3, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 15, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 20, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 21, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 22, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 10, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 12, %struct.sigaction zeroinitializer }, %struct.signal_state { i32 -1, %struct.sigaction zeroinitializer }], align 16, !dbg !53
@.str.2.4 = private unnamed_addr constant [29 x i8] c"allocate pty for I/O logging\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"unable to create sockets\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"unable to create pipe\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@sigfwd_list = internal global %struct.sigforward_list zeroinitializer, align 8, !dbg !40
@.str.6 = private unnamed_addr constant [14 x i8] c"select failed\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"child stopped, suspending parent\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"error reading signal pipe %s\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"received signal %d\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"/dev/tty\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"kill(%d, %d)\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"sending signal %d to child over backchannel\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"unable to fork\00", align 1
@io_fds = internal global [6 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16, !dbg !172
@slavename = internal global [4096 x i8] zeroinitializer, align 16, !dbg !185
@.str.14 = private unnamed_addr constant [9 x i8] c"/dev/tty\00", align 1
@.str.1.15 = private unnamed_addr constant [23 x i8] c"unable to allocate pty\00", align 1
@ttymode = internal global i32 0, align 4, !dbg !227
@foreground = internal global i32 0, align 4, !dbg !191
@.str.2.18 = private unnamed_addr constant [15 x i8] c"kill parent %d\00", align 1
@ppgrp = internal global i32 0, align 4, !dbg !195
@.str.3.19 = private unnamed_addr constant [15 x i8] c"killpg(%d, %d)\00", align 1
@.str.5.20 = private unnamed_addr constant [11 x i8] c"foreground\00", align 1
@.str.6.21 = private unnamed_addr constant [11 x i8] c"background\00", align 1
@.str.4.22 = private unnamed_addr constant [34 x i8] c"parent is in %s, ttymode %d -> %d\00", align 1
@iobufs = internal global %struct.io_buffer* null, align 8, !dbg !207
@.str.14.23 = private unnamed_addr constant [14 x i8] c"select failed\00", align 1
@child = internal global i32 0, align 4, !dbg !197
@tty_initialized = internal global i32 0, align 4, !dbg !193
@ttyblock = internal global %struct.__sigset_t zeroinitializer, align 8, !dbg !199
@pipeline = internal global i32 0, align 4, !dbg !229
@.str.7.30 = private unnamed_addr constant [22 x i8] c"unable to create pipe\00", align 1
@.str.8.31 = private unnamed_addr constant [35 x i8] c"unable to set terminal to raw mode\00", align 1
@.str.9.32 = private unnamed_addr constant [15 x i8] c"unable to fork\00", align 1
@.str.12.33 = private unnamed_addr constant [7 x i8] c"setsid\00", align 1
@.str.13.34 = private unnamed_addr constant [30 x i8] c"unable to set controlling tty\00", align 1
@child_pgrp = internal global i32 0, align 4, !dbg !231
@.str.15 = private unnamed_addr constant [31 x i8] c"error reading from signal pipe\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"error reading from pipe\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"error reading from socketpair\00", align 1
@.str.18 = private unnamed_addr constant [41 x i8] c"unexpected reply type on backchannel: %d\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"unable to send status to parent: %s\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"sent status to parent\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"signal %d from parent\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"command stopped, signal %d\00", align 1
@.str.21 = private unnamed_addr constant [26 x i8] c"command killed, signal %d\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"command exited: %d\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"dup2\00", align 1
@.str.10.37 = private unnamed_addr constant [15 x i8] c" (core dumped)\00", align 1
@.str.11.38 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@.str.1.44 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.45 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"%s%s/\00", align 1
@.str.3.47 = private unnamed_addr constant [5 x i8] c"sudo\00", align 1
@.str.4.48 = private unnamed_addr constant [35 x i8] c"load_interfaces: overflow detected\00", align 1
@.str.5.49 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@noexec_path = dso_local global i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.50, i32 0, i32 0), align 8, !dbg !236
@.str.50 = private unnamed_addr constant [34 x i8] c"/usr/local/libexec/sudo_noexec.so\00", align 1
@.str.1.51 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.52 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.3.53 = private unnamed_addr constant [20 x i8] c"/usr/local/libexec/\00", align 1
@.str.4.54 = private unnamed_addr constant [9 x i8] c"%s%s: %s\00", align 1
@.str.5.55 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.6.56 = private unnamed_addr constant [27 x i8] c"%s must be owned by uid %d\00", align 1
@.str.7.57 = private unnamed_addr constant [37 x i8] c"%s must be only be writable by owner\00", align 1
@.str.8.58 = private unnamed_addr constant [24 x i8] c"unable to dlopen %s: %s\00", align 1
@.str.9.59 = private unnamed_addr constant [29 x i8] c"%s: unable to find symbol %s\00", align 1
@.str.10.60 = private unnamed_addr constant [27 x i8] c"%s: unknown policy type %d\00", align 1
@.str.11.61 = private unnamed_addr constant [54 x i8] c"%s: incompatible policy major version %d, expected %d\00", align 1
@.str.12.62 = private unnamed_addr constant [46 x i8] c"%s: only a single policy plugin may be loaded\00", align 1
@.str.13.63 = private unnamed_addr constant [49 x i8] c"%s: at least one policy plugin must be specified\00", align 1
@.str.14.64 = private unnamed_addr constant [56 x i8] c"policy plugin %s does not include a check_policy method\00", align 1
@.str.15.65 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.16.66 = private unnamed_addr constant [5 x i8] c"Path\00", align 1
@.str.17.67 = private unnamed_addr constant [3 x i8] c" \09\00", align 1
@.str.18.68 = private unnamed_addr constant [8 x i8] c"askpass\00", align 1
@.str.19.69 = private unnamed_addr constant [7 x i8] c"noexec\00", align 1
@.str.20.70 = private unnamed_addr constant [7 x i8] c"Plugin\00", align 1
@sudo_read_conf.pil = internal global %struct.plugin_info_list zeroinitializer, align 8, !dbg !242
@.str.21.71 = private unnamed_addr constant [15 x i8] c"sudoers_policy\00", align 1
@.str.22.72 = private unnamed_addr constant [11 x i8] c"sudoers.so\00", align 1
@.str.23.73 = private unnamed_addr constant [11 x i8] c"sudoers_io\00", align 1
@tgetpass_flags = common dso_local global i32 0, align 4, !dbg !261
@sudo_settings = internal global [21 x %struct.sudo_settings] [%struct.sudo_settings { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21.101, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22.102, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23.103, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24.104, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.105, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), i8* null }, %struct.sudo_settings { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0), i8* null }, %struct.sudo_settings zeroinitializer], align 16, !dbg !286
@.str.76 = private unnamed_addr constant [9 x i8] c"sudoedit\00", align 1
@.str.1.77 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.2.78 = private unnamed_addr constant [38 x i8] c"+Aa:bC:c:D:Eeg:HhiKklnPp:r:Sst:U:u:Vv\00", align 1
@optarg = external dso_local global i8*, align 8
@.str.3.79 = private unnamed_addr constant [63 x i8] c"the argument to -C must be a number greater than or equal to 3\00", align 1
@.str.4.80 = private unnamed_addr constant [53 x i8] c"the argument to -D must be between 1 and 9 inclusive\00", align 1
@.str.5.81 = private unnamed_addr constant [17 x i8] c"unknown user: %s\00", align 1
@optind = external dso_local global i32, align 4
@.str.6.82 = private unnamed_addr constant [51 x i8] c"you may not specify both the `-i' and `-s' options\00", align 1
@.str.7.83 = private unnamed_addr constant [51 x i8] c"you may not specify both the `-i' and `-E' options\00", align 1
@.str.8.84 = private unnamed_addr constant [42 x i8] c"the `-E' option is not valid in edit mode\00", align 1
@.str.9.85 = private unnamed_addr constant [55 x i8] c"you may not specify environment variables in edit mode\00", align 1
@.str.10.86 = private unnamed_addr constant [54 x i8] c"the `-U' option may only be used with the `-l' option\00", align 1
@.str.11.87 = private unnamed_addr constant [51 x i8] c"the `-A' and `-S' options may not be used together\00", align 1
@.str.12.88 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str.13.89 = private unnamed_addr constant [16 x i8] c"settings: %s=%s\00", align 1
@.str.14.90 = private unnamed_addr constant [26 x i8] c"unable to allocate memory\00", align 1
@.str.41 = private unnamed_addr constant [34 x i8] c"%s - edit files as another user\0A\0A\00", align 1
@.str.42 = private unnamed_addr constant [41 x i8] c"%s - execute a command as another user\0A\0A\00", align 1
@.str.43.91 = private unnamed_addr constant [11 x i8] c"\0AOptions:\0A\00", align 1
@.str.45 = private unnamed_addr constant [39 x i8] c"use specified BSD authentication type\0A\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"  -a type       %s\00", align 1
@.str.47 = private unnamed_addr constant [31 x i8] c"run command in the background\0A\00", align 1
@.str.46.92 = private unnamed_addr constant [19 x i8] c"  -b            %s\00", align 1
@.str.49 = private unnamed_addr constant [34 x i8] c"close all file descriptors >= fd\0A\00", align 1
@.str.48 = private unnamed_addr constant [19 x i8] c"  -C fd         %s\00", align 1
@.str.51 = private unnamed_addr constant [50 x i8] c"preserve user environment when executing command\0A\00", align 1
@.str.50.93 = private unnamed_addr constant [19 x i8] c"  -E            %s\00", align 1
@.str.53 = private unnamed_addr constant [41 x i8] c"edit files instead of running a command\0A\00", align 1
@.str.52 = private unnamed_addr constant [19 x i8] c"  -e            %s\00", align 1
@.str.55 = private unnamed_addr constant [40 x i8] c"execute command as the specified group\0A\00", align 1
@.str.54 = private unnamed_addr constant [19 x i8] c"  -g group      %s\00", align 1
@.str.57 = private unnamed_addr constant [46 x i8] c"set HOME variable to target user's home dir.\0A\00", align 1
@.str.56 = private unnamed_addr constant [19 x i8] c"  -H            %s\00", align 1
@.str.59 = private unnamed_addr constant [31 x i8] c"display help message and exit\0A\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"  -h            %s\00", align 1
@.str.61 = private unnamed_addr constant [34 x i8] c"run a login shell as target user\0A\00", align 1
@.str.60 = private unnamed_addr constant [19 x i8] c"  -i [command]  %s\00", align 1
@.str.63 = private unnamed_addr constant [34 x i8] c"remove timestamp file completely\0A\00", align 1
@.str.62 = private unnamed_addr constant [19 x i8] c"  -K            %s\00", align 1
@.str.65 = private unnamed_addr constant [27 x i8] c"invalidate timestamp file\0A\00", align 1
@.str.64 = private unnamed_addr constant [19 x i8] c"  -k            %s\00", align 1
@.str.67 = private unnamed_addr constant [32 x i8] c"list user's available commands\0A\00", align 1
@.str.66 = private unnamed_addr constant [19 x i8] c"  -l[l] command %s\00", align 1
@.str.69 = private unnamed_addr constant [44 x i8] c"non-interactive mode, will not prompt user\0A\00", align 1
@.str.68 = private unnamed_addr constant [19 x i8] c"  -n            %s\00", align 1
@.str.71 = private unnamed_addr constant [54 x i8] c"preserve group vector instead of setting to target's\0A\00", align 1
@.str.70 = private unnamed_addr constant [19 x i8] c"  -P            %s\00", align 1
@.str.73 = private unnamed_addr constant [31 x i8] c"use specified password prompt\0A\00", align 1
@.str.72 = private unnamed_addr constant [19 x i8] c"  -p prompt     %s\00", align 1
@.str.75 = private unnamed_addr constant [35 x i8] c"read password from standard input\0A\00", align 1
@.str.74 = private unnamed_addr constant [19 x i8] c"  -S            %s\00", align 1
@.str.77 = private unnamed_addr constant [28 x i8] c"run a shell as target user\0A\00", align 1
@.str.76.94 = private unnamed_addr constant [19 x i8] c"  -s [command]  %s\00", align 1
@.str.79 = private unnamed_addr constant [48 x i8] c"when listing, list specified user's privileges\0A\00", align 1
@.str.78 = private unnamed_addr constant [19 x i8] c"  -U user       %s\00", align 1
@.str.81 = private unnamed_addr constant [46 x i8] c"run command (or edit file) as specified user\0A\00", align 1
@.str.80 = private unnamed_addr constant [19 x i8] c"  -u user       %s\00", align 1
@.str.83 = private unnamed_addr constant [38 x i8] c"display version information and exit\0A\00", align 1
@.str.82 = private unnamed_addr constant [19 x i8] c"  -V            %s\00", align 1
@.str.85 = private unnamed_addr constant [51 x i8] c"update user's timestamp without running a command\0A\00", align 1
@.str.84 = private unnamed_addr constant [19 x i8] c"  -v            %s\00", align 1
@.str.87 = private unnamed_addr constant [40 x i8] c"stop processing command line arguments\0A\00", align 1
@.str.86 = private unnamed_addr constant [19 x i8] c"  --            %s\00", align 1
@.str.40 = private unnamed_addr constant [74 x i8] c"Only one of the -e, -h, -i, -K, -l, -s, -v or -V options may be specified\00", align 1
@.str.15.95 = private unnamed_addr constant [92 x i8] c" -e [-AknS] [-C fd] [-D level] [-g groupname|#gid] [-p prompt] [-u user name|#uid] file ...\00", align 1
@.str.16.96 = private unnamed_addr constant [30 x i8] c" [-D level] -h | -K | -k | -V\00", align 1
@.str.17.97 = private unnamed_addr constant [75 x i8] c" -v [-AknS] [-D level] [-g groupname|#gid] [-p prompt] [-u user name|#uid]\00", align 1
@.str.18.98 = private unnamed_addr constant [123 x i8] c" -l[l] [-AknS] [-D level] [-g groupname|#gid] [-p prompt] [-U user name] [-u user name|#uid] [-g groupname|#gid] [command]\00", align 1
@.str.19.99 = private unnamed_addr constant [136 x i8] c" [-AbEHknPS] [-C fd] [-D level] [-g groupname|#gid] [-p prompt] [-u user name|#uid] [-g groupname|#gid] [VAR=value] [-i|-s] [<command>]\00", align 1
@.str.20.100 = private unnamed_addr constant [12 x i8] c"usage: %s%s\00", align 1
@.str.21.101 = private unnamed_addr constant [13 x i8] c"bsdauth_type\00", align 1
@.str.22.102 = private unnamed_addr constant [12 x i8] c"login_class\00", align 1
@.str.23.103 = private unnamed_addr constant [12 x i8] c"debug_level\00", align 1
@.str.24.104 = private unnamed_addr constant [21 x i8] c"preserve_environment\00", align 1
@.str.25.105 = private unnamed_addr constant [12 x i8] c"runas_group\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"set_home\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"run_shell\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"login_shell\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"ignore_ticket\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"prompt\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"selinux_role\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"selinux_type\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"runas_user\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"progname\00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"implied_shell\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"preserve_groups\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"noninteractive\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"closefrom\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"network_addrs\00", align 1
@user_details = common dso_local global %struct.user_details zeroinitializer, align 8, !dbg !296
@policy_plugin = common dso_local global %struct.plugin_container zeroinitializer, align 8, !dbg !552
@io_plugins = common dso_local global %struct.plugin_container_list zeroinitializer, align 8, !dbg !675
@list_user = common dso_local global i8* null, align 8, !dbg !681
@debug_level = common dso_local global i32 0, align 4, !dbg !687
@runas_user = common dso_local global i8* null, align 8, !dbg !683
@runas_group = common dso_local global i8* null, align 8, !dbg !685
@.str.118 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.119 = private unnamed_addr constant [5 x i8] c"sudo\00", align 1
@.str.2.120 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.3.121 = private unnamed_addr constant [20 x i8] c"must be setuid root\00", align 1
@.str.4.122 = private unnamed_addr constant [4 x i8] c"%p\0A\00", align 1
@.str.5.123 = private unnamed_addr constant [13 x i8] c"sudo_mode %d\00", align 1
@.str.6.126 = private unnamed_addr constant [17 x i8] c"Sudo version %s\0A\00", align 1
@.str.7.127 = private unnamed_addr constant [8 x i8] c"1.8.3p1\00", align 1
@.str.8.128 = private unnamed_addr constant [23 x i8] c"Configure options: %s\0A\00", align 1
@.str.9.129 = private unnamed_addr constant [15 x i8] c"/etc/sudo.conf\00", align 1
@.str.10.130 = private unnamed_addr constant [36 x i8] c"fatal error, unable to load plugins\00", align 1
@.str.11.131 = private unnamed_addr constant [35 x i8] c"unable to initialize policy plugin\00", align 1
@.str.12.132 = private unnamed_addr constant [25 x i8] c"policy plugin returns %d\00", align 1
@.str.13.133 = private unnamed_addr constant [33 x i8] c"error initializing I/O plugin %s\00", align 1
@corelimit = internal global %struct.timeval zeroinitializer, align 8, !dbg !689
@.str.14.134 = private unnamed_addr constant [26 x i8] c"unexpected sudo mode 0x%x\00", align 1
@.str.23.135 = private unnamed_addr constant [32 x i8] c"calling policy close with errno\00", align 1
@.str.24.136 = private unnamed_addr constant [29 x i8] c"calling I/O close with errno\00", align 1
@.str.25.137 = private unnamed_addr constant [38 x i8] c"calling policy close with wait status\00", align 1
@.str.26.138 = private unnamed_addr constant [35 x i8] c"calling I/O close with wait status\00", align 1
@.str.27.139 = private unnamed_addr constant [43 x i8] c"unexpected child termination condition: %d\00", align 1
@.str.51.140 = private unnamed_addr constant [17 x i8] c"command info: %s\00", align 1
@.str.52.141 = private unnamed_addr constant [8 x i8] c"chroot=\00", align 1
@.str.53.142 = private unnamed_addr constant [9 x i8] c"command=\00", align 1
@.str.54.143 = private unnamed_addr constant [5 x i8] c"cwd=\00", align 1
@.str.55.144 = private unnamed_addr constant [11 x i8] c"closefrom=\00", align 1
@.str.56.145 = private unnamed_addr constant [13 x i8] c"login_class=\00", align 1
@.str.57.146 = private unnamed_addr constant [6 x i8] c"nice=\00", align 1
@.str.58.147 = private unnamed_addr constant [8 x i8] c"noexec=\00", align 1
@.str.59.148 = private unnamed_addr constant [13 x i8] c"noexec_file=\00", align 1
@.str.60.149 = private unnamed_addr constant [17 x i8] c"preserve_groups=\00", align 1
@.str.61.150 = private unnamed_addr constant [12 x i8] c"runas_egid=\00", align 1
@.str.62.151 = private unnamed_addr constant [12 x i8] c"runas_euid=\00", align 1
@.str.63.152 = private unnamed_addr constant [11 x i8] c"runas_gid=\00", align 1
@.str.64.153 = private unnamed_addr constant [14 x i8] c"runas_groups=\00", align 1
@.str.65.154 = private unnamed_addr constant [11 x i8] c"runas_uid=\00", align 1
@.str.66.155 = private unnamed_addr constant [14 x i8] c"selinux_role=\00", align 1
@.str.67.156 = private unnamed_addr constant [14 x i8] c"selinux_type=\00", align 1
@.str.68.157 = private unnamed_addr constant [10 x i8] c"set_utmp=\00", align 1
@.str.69.158 = private unnamed_addr constant [10 x i8] c"sudoedit=\00", align 1
@.str.70.159 = private unnamed_addr constant [9 x i8] c"timeout=\00", align 1
@.str.71.160 = private unnamed_addr constant [7 x i8] c"umask=\00", align 1
@.str.72.161 = private unnamed_addr constant [9 x i8] c"use_pty=\00", align 1
@.str.73.162 = private unnamed_addr constant [11 x i8] c"utmp_user=\00", align 1
@.str.76.163 = private unnamed_addr constant [53 x i8] c"policy plugin %s does not support listing privileges\00", align 1
@.str.78.164 = private unnamed_addr constant [52 x i8] c"policy plugin %s does not support the -k/-K options\00", align 1
@.str.77.165 = private unnamed_addr constant [48 x i8] c"policy plugin %s does not support the -v option\00", align 1
@.str.28.166 = private unnamed_addr constant [8 x i8] c"%s: %s\0A\00", align 1
@.str.32.167 = private unnamed_addr constant [29 x i8] c"unknown uid %u: who are you?\00", align 1
@.str.33.168 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.34.169 = private unnamed_addr constant [26 x i8] c"unable to allocate memory\00", align 1
@.str.35.170 = private unnamed_addr constant [6 x i8] c"SHELL\00", align 1
@.str.36.171 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str.37.172 = private unnamed_addr constant [7 x i8] c"uid=%u\00", align 1
@.str.38.173 = private unnamed_addr constant [8 x i8] c"euid=%u\00", align 1
@.str.39.174 = private unnamed_addr constant [7 x i8] c"gid=%u\00", align 1
@.str.40.175 = private unnamed_addr constant [8 x i8] c"egid=%u\00", align 1
@.str.41.176 = private unnamed_addr constant [4 x i8] c"cwd\00", align 1
@.str.42.177 = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@.str.43.178 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.44.179 = private unnamed_addr constant [5 x i8] c"host\00", align 1
@.str.45.180 = private unnamed_addr constant [9 x i8] c"lines=%d\00", align 1
@.str.46.181 = private unnamed_addr constant [8 x i8] c"cols=%d\00", align 1
@.str.47.182 = private unnamed_addr constant [27 x i8] c"unable to get group vector\00", align 1
@.str.48.183 = private unnamed_addr constant [8 x i8] c"groups=\00", align 1
@.str.50.184 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.49.185 = private unnamed_addr constant [5 x i8] c"%s%u\00", align 1
@.str.29.186 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.30.187 = private unnamed_addr constant [18 x i8] c"unable to open %s\00", align 1
@.str.31.188 = private unnamed_addr constant [5 x i8] c"dup2\00", align 1
@nproclimit = internal global %struct.timeval zeroinitializer, align 8, !dbg !696
@.str.15.191 = private unnamed_addr constant [44 x i8] c"unable to set effective gid to runas gid %u\00", align 1
@.str.16.192 = private unnamed_addr constant [34 x i8] c"unable to set gid to runas gid %u\00", align 1
@.str.17.193 = private unnamed_addr constant [38 x i8] c"unable to set supplementary group IDs\00", align 1
@.str.18.194 = private unnamed_addr constant [31 x i8] c"unable to set process priority\00", align 1
@.str.19.195 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.20.196 = private unnamed_addr constant [28 x i8] c"unable to change root to %s\00", align 1
@.str.21.197 = private unnamed_addr constant [39 x i8] c"unable to change to runas uid (%u, %u)\00", align 1
@.str.22.198 = private unnamed_addr constant [33 x i8] c"unable to change directory to %s\00", align 1
@.str.74.199 = private unnamed_addr constant [12 x i8] c"LD_PRELOAD=\00", align 1
@.str.75.200 = private unnamed_addr constant [11 x i8] c"LD_PRELOAD\00", align 1
@.str.203 = private unnamed_addr constant [34 x i8] c"unable to change uid to root (%u)\00", align 1
@.str.1.204 = private unnamed_addr constant [10 x i8] c"/var/tmp/\00", align 1
@.str.2.205 = private unnamed_addr constant [10 x i8] c"/usr/tmp/\00", align 1
@.str.3.206 = private unnamed_addr constant [6 x i8] c"/tmp/\00", align 1
@.str.4.207 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.5.208 = private unnamed_addr constant [45 x i8] c"plugin error: missing file list for sudoedit\00", align 1
@.str.6.209 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.7.210 = private unnamed_addr constant [23 x i8] c"%s: not a regular file\00", align 1
@.str.8.211 = private unnamed_addr constant [20 x i8] c"%.*s/%.*sXXXXXXXX%s\00", align 1
@.str.9.212 = private unnamed_addr constant [17 x i8] c"%.*s/%s.XXXXXXXX\00", align 1
@.str.10.213 = private unnamed_addr constant [12 x i8] c"seteuid(%d)\00", align 1
@.str.11.214 = private unnamed_addr constant [18 x i8] c"seteuid(ROOT_UID)\00", align 1
@.str.12.215 = private unnamed_addr constant [9 x i8] c"mkstemps\00", align 1
@.str.13.216 = private unnamed_addr constant [16 x i8] c"%s: short write\00", align 1
@.str.14.217 = private unnamed_addr constant [19 x i8] c"%s left unmodified\00", align 1
@.str.15.218 = private unnamed_addr constant [13 x i8] c"%s unchanged\00", align 1
@.str.16.219 = private unnamed_addr constant [22 x i8] c"unable to write to %s\00", align 1
@.str.17.220 = private unnamed_addr constant [36 x i8] c"contents of edit session left in %s\00", align 1
@.str.18.221 = private unnamed_addr constant [30 x i8] c"unable to read temporary file\00", align 1
@.str.19.222 = private unnamed_addr constant [12 x i8] c"setegid(%d)\00", align 1
@.str.20.223 = private unnamed_addr constant [10 x i8] c"setgroups\00", align 1
@askpass_path = common dso_local global i8* null, align 8, !dbg !715
@tgetpass.askpass = internal global i8* null, align 8, !dbg !721
@.str.228 = private unnamed_addr constant [13 x i8] c"SUDO_ASKPASS\00", align 1
@.str.1.229 = private unnamed_addr constant [8 x i8] c"DISPLAY\00", align 1
@.str.2.230 = private unnamed_addr constant [48 x i8] c"no tty present and no askpass program specified\00", align 1
@.str.3.231 = private unnamed_addr constant [55 x i8] c"no askpass program specified, try setting SUDO_ASKPASS\00", align 1
@signo = internal global [65 x i32] zeroinitializer, align 16, !dbg !732
@.str.4.232 = private unnamed_addr constant [9 x i8] c"/dev/tty\00", align 1
@tgetpass.buf = internal global [257 x i8] zeroinitializer, align 16, !dbg !727
@.str.5.234 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.12.235 = private unnamed_addr constant [4 x i8] c"\08 \08\00", align 1
@.str.13.236 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.6.237 = private unnamed_addr constant [22 x i8] c"unable to create pipe\00", align 1
@.str.7.238 = private unnamed_addr constant [15 x i8] c"unable to fork\00", align 1
@.str.8.239 = private unnamed_addr constant [5 x i8] c"dup2\00", align 1
@.str.9.240 = private unnamed_addr constant [24 x i8] c"unable to set gid to %u\00", align 1
@.str.10.241 = private unnamed_addr constant [24 x i8] c"unable to set uid to %u\00", align 1
@.str.11.242 = private unnamed_addr constant [17 x i8] c"unable to run %s\00", align 1
@sudo_askpass.buf = internal global [257 x i8] zeroinitializer, align 16, !dbg !741
@sudo_askpass.pass = internal global i8* null, align 8, !dbg !746
@.str.245 = private unnamed_addr constant [6 x i8] c"LINES\00", align 1
@.str.1.246 = private unnamed_addr constant [8 x i8] c"COLUMNS\00", align 1
@.str.249 = private unnamed_addr constant [6 x i8] c"/dev/\00", align 1
@.str.1.250 = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@.str.255 = private unnamed_addr constant [5 x i8] c"sudo\00", align 1
@.str.1.256 = private unnamed_addr constant [36 x i8] c"internal error, tried to emalloc(0)\00", align 1
@.str.2.257 = private unnamed_addr constant [26 x i8] c"unable to allocate memory\00", align 1
@.str.3.260 = private unnamed_addr constant [37 x i8] c"internal error, tried to emalloc2(0)\00", align 1
@.str.4.261 = private unnamed_addr constant [36 x i8] c"internal error, emalloc2() overflow\00", align 1
@.str.5.262 = private unnamed_addr constant [37 x i8] c"internal error, tried to erealloc(0)\00", align 1
@.str.6.265 = private unnamed_addr constant [38 x i8] c"internal error, tried to erealloc3(0)\00", align 1
@.str.7.266 = private unnamed_addr constant [37 x i8] c"internal error, erealloc3() overflow\00", align 1
@.str.275 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.1.276 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.2.277 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.3.278 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.279 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.5.280 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@sudo_parseln.buf = internal global [2048 x i8] zeroinitializer, align 16, !dbg !748
@.str.295 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1.296 = private unnamed_addr constant [2 x i8] c" \00", align 1
@term_erase = common global i32 0, align 4, !dbg !813
@term_kill = common global i32 0, align 4, !dbg !843
@changed = internal global i32 0, align 4, !dbg !841
@oterm = internal global %struct.termios zeroinitializer, align 4, !dbg !839
@term = internal global %struct.termios zeroinitializer, align 4, !dbg !818
@.str.323 = private unnamed_addr constant [14 x i8] c"/proc/self/fd\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sudo_conversation(i32 %0, %struct.sudo_conv_message* %1, %struct.sudo_conv_reply* %2) #0 !dbg !964 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.sudo_conv_message*, align 8
  %7 = alloca %struct.sudo_conv_reply*, align 8
  %8 = alloca %struct.sudo_conv_reply*, align 8
  %9 = alloca %struct.sudo_conv_message*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !979, metadata !DIExpression()), !dbg !980
  store %struct.sudo_conv_message* %1, %struct.sudo_conv_message** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.sudo_conv_message** %6, metadata !981, metadata !DIExpression()), !dbg !982
  store %struct.sudo_conv_reply* %2, %struct.sudo_conv_reply** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.sudo_conv_reply** %7, metadata !983, metadata !DIExpression()), !dbg !984
  call void @llvm.dbg.declare(metadata %struct.sudo_conv_reply** %8, metadata !985, metadata !DIExpression()), !dbg !986
  call void @llvm.dbg.declare(metadata %struct.sudo_conv_message** %9, metadata !987, metadata !DIExpression()), !dbg !988
  call void @llvm.dbg.declare(metadata i8** %10, metadata !989, metadata !DIExpression()), !dbg !990
  call void @llvm.dbg.declare(metadata i32* %11, metadata !991, metadata !DIExpression()), !dbg !992
  call void @llvm.dbg.declare(metadata i32* %12, metadata !993, metadata !DIExpression()), !dbg !994
  %13 = load i32, i32* @tgetpass_flags, align 4, !dbg !995
  store i32 %13, i32* %12, align 4, !dbg !994
  store i32 0, i32* %11, align 4, !dbg !996
  br label %14, !dbg !998

14:                                               ; preds = %98, %3
  %15 = load i32, i32* %11, align 4, !dbg !999
  %16 = load i32, i32* %5, align 4, !dbg !1001
  %17 = icmp slt i32 %15, %16, !dbg !1002
  br i1 %17, label %18, label %101, !dbg !1003

18:                                               ; preds = %14
  %19 = load %struct.sudo_conv_message*, %struct.sudo_conv_message** %6, align 8, !dbg !1004
  %20 = load i32, i32* %11, align 4, !dbg !1006
  %21 = sext i32 %20 to i64, !dbg !1004
  %22 = getelementptr inbounds %struct.sudo_conv_message, %struct.sudo_conv_message* %19, i64 %21, !dbg !1004
  store %struct.sudo_conv_message* %22, %struct.sudo_conv_message** %9, align 8, !dbg !1007
  %23 = load %struct.sudo_conv_reply*, %struct.sudo_conv_reply** %7, align 8, !dbg !1008
  %24 = load i32, i32* %11, align 4, !dbg !1009
  %25 = sext i32 %24 to i64, !dbg !1008
  %26 = getelementptr inbounds %struct.sudo_conv_reply, %struct.sudo_conv_reply* %23, i64 %25, !dbg !1008
  store %struct.sudo_conv_reply* %26, %struct.sudo_conv_reply** %8, align 8, !dbg !1010
  %27 = load %struct.sudo_conv_message*, %struct.sudo_conv_message** %9, align 8, !dbg !1011
  %28 = getelementptr inbounds %struct.sudo_conv_message, %struct.sudo_conv_message* %27, i32 0, i32 0, !dbg !1012
  %29 = load i32, i32* %28, align 8, !dbg !1012
  %30 = and i32 %29, 255, !dbg !1013
  switch i32 %30, label %96 [
    i32 2, label %31
    i32 5, label %31
    i32 1, label %43
    i32 4, label %72
    i32 3, label %84
  ], !dbg !1014

31:                                               ; preds = %18, %18
  %32 = load %struct.sudo_conv_message*, %struct.sudo_conv_message** %9, align 8, !dbg !1015
  %33 = getelementptr inbounds %struct.sudo_conv_message, %struct.sudo_conv_message* %32, i32 0, i32 0, !dbg !1018
  %34 = load i32, i32* %33, align 8, !dbg !1018
  %35 = icmp eq i32 %34, 2, !dbg !1019
  br i1 %35, label %36, label %39, !dbg !1020

36:                                               ; preds = %31
  %37 = load i32, i32* %12, align 4, !dbg !1021
  %38 = or i32 %37, 1, !dbg !1021
  store i32 %38, i32* %12, align 4, !dbg !1021
  br label %42, !dbg !1021

39:                                               ; preds = %31
  %40 = load i32, i32* %12, align 4, !dbg !1022
  %41 = or i32 %40, 8, !dbg !1022
  store i32 %41, i32* %12, align 4, !dbg !1022
  br label %42

42:                                               ; preds = %39, %36
  br label %43, !dbg !1023

43:                                               ; preds = %18, %42
  %44 = load %struct.sudo_conv_message*, %struct.sudo_conv_message** %9, align 8, !dbg !1024
  %45 = getelementptr inbounds %struct.sudo_conv_message, %struct.sudo_conv_message* %44, i32 0, i32 0, !dbg !1024
  %46 = load i32, i32* %45, align 8, !dbg !1024
  %47 = and i32 %46, 4096, !dbg !1024
  %48 = icmp ne i32 %47, 0, !dbg !1024
  br i1 %48, label %49, label %52, !dbg !1026

49:                                               ; preds = %43
  %50 = load i32, i32* %12, align 4, !dbg !1027
  %51 = or i32 %50, 16, !dbg !1027
  store i32 %51, i32* %12, align 4, !dbg !1027
  br label %52, !dbg !1027

52:                                               ; preds = %49, %43
  %53 = load %struct.sudo_conv_message*, %struct.sudo_conv_message** %9, align 8, !dbg !1028
  %54 = getelementptr inbounds %struct.sudo_conv_message, %struct.sudo_conv_message* %53, i32 0, i32 2, !dbg !1029
  %55 = load i8*, i8** %54, align 8, !dbg !1029
  %56 = load %struct.sudo_conv_message*, %struct.sudo_conv_message** %9, align 8, !dbg !1030
  %57 = getelementptr inbounds %struct.sudo_conv_message, %struct.sudo_conv_message* %56, i32 0, i32 1, !dbg !1031
  %58 = load i32, i32* %57, align 4, !dbg !1031
  %59 = load i32, i32* %12, align 4, !dbg !1032
  %60 = call i8* @tgetpass(i8* %55, i32 %58, i32 %59), !dbg !1033
  store i8* %60, i8** %10, align 8, !dbg !1034
  %61 = load i8*, i8** %10, align 8, !dbg !1035
  %62 = icmp eq i8* %61, null, !dbg !1037
  br i1 %62, label %63, label %64, !dbg !1038

63:                                               ; preds = %52
  br label %102, !dbg !1039

64:                                               ; preds = %52
  %65 = load i8*, i8** %10, align 8, !dbg !1040
  %66 = call i8* @estrdup(i8* %65), !dbg !1041
  %67 = load %struct.sudo_conv_reply*, %struct.sudo_conv_reply** %8, align 8, !dbg !1042
  %68 = getelementptr inbounds %struct.sudo_conv_reply, %struct.sudo_conv_reply* %67, i32 0, i32 0, !dbg !1043
  store i8* %66, i8** %68, align 8, !dbg !1044
  %69 = load i8*, i8** %10, align 8, !dbg !1045
  %70 = load i8*, i8** %10, align 8, !dbg !1046
  %71 = call i64 @strlen(i8* %70) #12, !dbg !1047
  call void @zero_bytes(i8* %69, i64 %71), !dbg !1048
  br label %97, !dbg !1049

72:                                               ; preds = %18
  %73 = load %struct.sudo_conv_message*, %struct.sudo_conv_message** %9, align 8, !dbg !1050
  %74 = getelementptr inbounds %struct.sudo_conv_message, %struct.sudo_conv_message* %73, i32 0, i32 2, !dbg !1052
  %75 = load i8*, i8** %74, align 8, !dbg !1052
  %76 = icmp ne i8* %75, null, !dbg !1050
  br i1 %76, label %77, label %83, !dbg !1053

77:                                               ; preds = %72
  %78 = load %struct.sudo_conv_message*, %struct.sudo_conv_message** %9, align 8, !dbg !1054
  %79 = getelementptr inbounds %struct.sudo_conv_message, %struct.sudo_conv_message* %78, i32 0, i32 2, !dbg !1055
  %80 = load i8*, i8** %79, align 8, !dbg !1055
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1056
  %82 = call i32 @fputs(i8* %80, %struct._IO_FILE* %81), !dbg !1057
  br label %83, !dbg !1058

83:                                               ; preds = %77, %72
  br label %97, !dbg !1059

84:                                               ; preds = %18
  %85 = load %struct.sudo_conv_message*, %struct.sudo_conv_message** %9, align 8, !dbg !1060
  %86 = getelementptr inbounds %struct.sudo_conv_message, %struct.sudo_conv_message* %85, i32 0, i32 2, !dbg !1062
  %87 = load i8*, i8** %86, align 8, !dbg !1062
  %88 = icmp ne i8* %87, null, !dbg !1060
  br i1 %88, label %89, label %95, !dbg !1063

89:                                               ; preds = %84
  %90 = load %struct.sudo_conv_message*, %struct.sudo_conv_message** %9, align 8, !dbg !1064
  %91 = getelementptr inbounds %struct.sudo_conv_message, %struct.sudo_conv_message* %90, i32 0, i32 2, !dbg !1065
  %92 = load i8*, i8** %91, align 8, !dbg !1065
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1066
  %94 = call i32 @fputs(i8* %92, %struct._IO_FILE* %93), !dbg !1067
  br label %95, !dbg !1068

95:                                               ; preds = %89, %84
  br label %97, !dbg !1069

96:                                               ; preds = %18
  br label %102, !dbg !1070

97:                                               ; preds = %95, %83, %64
  br label %98, !dbg !1071

98:                                               ; preds = %97
  %99 = load i32, i32* %11, align 4, !dbg !1072
  %100 = add nsw i32 %99, 1, !dbg !1072
  store i32 %100, i32* %11, align 4, !dbg !1072
  br label %14, !dbg !1073, !llvm.loop !1074

101:                                              ; preds = %14
  store i32 0, i32* %4, align 4, !dbg !1076
  br label %131, !dbg !1076

102:                                              ; preds = %96, %63
  call void @llvm.dbg.label(metadata !1077), !dbg !1078
  br label %103, !dbg !1079

103:                                              ; preds = %126, %102
  %104 = load %struct.sudo_conv_reply*, %struct.sudo_conv_reply** %7, align 8, !dbg !1080
  %105 = load i32, i32* %11, align 4, !dbg !1082
  %106 = sext i32 %105 to i64, !dbg !1080
  %107 = getelementptr inbounds %struct.sudo_conv_reply, %struct.sudo_conv_reply* %104, i64 %106, !dbg !1080
  store %struct.sudo_conv_reply* %107, %struct.sudo_conv_reply** %8, align 8, !dbg !1083
  %108 = load %struct.sudo_conv_reply*, %struct.sudo_conv_reply** %8, align 8, !dbg !1084
  %109 = getelementptr inbounds %struct.sudo_conv_reply, %struct.sudo_conv_reply* %108, i32 0, i32 0, !dbg !1086
  %110 = load i8*, i8** %109, align 8, !dbg !1086
  %111 = icmp ne i8* %110, null, !dbg !1087
  br i1 %111, label %112, label %125, !dbg !1088

112:                                              ; preds = %103
  %113 = load %struct.sudo_conv_reply*, %struct.sudo_conv_reply** %8, align 8, !dbg !1089
  %114 = getelementptr inbounds %struct.sudo_conv_reply, %struct.sudo_conv_reply* %113, i32 0, i32 0, !dbg !1091
  %115 = load i8*, i8** %114, align 8, !dbg !1091
  %116 = load %struct.sudo_conv_reply*, %struct.sudo_conv_reply** %8, align 8, !dbg !1092
  %117 = getelementptr inbounds %struct.sudo_conv_reply, %struct.sudo_conv_reply* %116, i32 0, i32 0, !dbg !1093
  %118 = load i8*, i8** %117, align 8, !dbg !1093
  %119 = call i64 @strlen(i8* %118) #12, !dbg !1094
  call void @zero_bytes(i8* %115, i64 %119), !dbg !1095
  %120 = load %struct.sudo_conv_reply*, %struct.sudo_conv_reply** %8, align 8, !dbg !1096
  %121 = getelementptr inbounds %struct.sudo_conv_reply, %struct.sudo_conv_reply* %120, i32 0, i32 0, !dbg !1097
  %122 = load i8*, i8** %121, align 8, !dbg !1097
  call void @free(i8* %122) #13, !dbg !1098
  %123 = load %struct.sudo_conv_reply*, %struct.sudo_conv_reply** %8, align 8, !dbg !1099
  %124 = getelementptr inbounds %struct.sudo_conv_reply, %struct.sudo_conv_reply* %123, i32 0, i32 0, !dbg !1100
  store i8* null, i8** %124, align 8, !dbg !1101
  br label %125, !dbg !1102

125:                                              ; preds = %112, %103
  br label %126, !dbg !1103

126:                                              ; preds = %125
  %127 = load i32, i32* %11, align 4, !dbg !1104
  %128 = add nsw i32 %127, -1, !dbg !1104
  store i32 %128, i32* %11, align 4, !dbg !1104
  %129 = icmp ne i32 %127, 0, !dbg !1103
  br i1 %129, label %103, label %130, !dbg !1103, !llvm.loop !1105

130:                                              ; preds = %126
  store i32 -1, i32* %4, align 4, !dbg !1107
  br label %131, !dbg !1107

131:                                              ; preds = %130, %101
  %132 = load i32, i32* %4, align 4, !dbg !1108
  ret i32 %132, !dbg !1108
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #2

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare dso_local void @free(i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_sudo_printf(i32 %0, i8* %1, ...) #0 !dbg !1109 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1110, metadata !DIExpression()), !dbg !1111
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1112, metadata !DIExpression()), !dbg !1113
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %6, metadata !1114, metadata !DIExpression()), !dbg !1127
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %7, metadata !1128, metadata !DIExpression()), !dbg !1163
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1164, metadata !DIExpression()), !dbg !1165
  %9 = load i32, i32* %4, align 4, !dbg !1166
  switch i32 %9, label %14 [
    i32 4, label %10
    i32 3, label %12
  ], !dbg !1167

10:                                               ; preds = %2
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1168
  store %struct._IO_FILE* %11, %struct._IO_FILE** %7, align 8, !dbg !1170
  br label %16, !dbg !1171

12:                                               ; preds = %2
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1172
  store %struct._IO_FILE* %13, %struct._IO_FILE** %7, align 8, !dbg !1173
  br label %16, !dbg !1174

14:                                               ; preds = %2
  %15 = call i32* @__errno_location() #14, !dbg !1175
  store i32 22, i32* %15, align 4, !dbg !1176
  store i32 -1, i32* %3, align 4, !dbg !1177
  br label %26, !dbg !1177

16:                                               ; preds = %12, %10
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !1178
  %18 = bitcast %struct.__va_list_tag* %17 to i8*, !dbg !1178
  call void @llvm.va_start(i8* %18), !dbg !1178
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8, !dbg !1179
  %20 = load i8*, i8** %5, align 8, !dbg !1180
  %21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !1181
  %22 = call i32 @vfprintf(%struct._IO_FILE* %19, i8* %20, %struct.__va_list_tag* %21), !dbg !1182
  store i32 %22, i32* %8, align 4, !dbg !1183
  %23 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !1184
  %24 = bitcast %struct.__va_list_tag* %23 to i8*, !dbg !1184
  call void @llvm.va_end(i8* %24), !dbg !1184
  %25 = load i32, i32* %8, align 4, !dbg !1185
  store i32 %25, i32* %3, align 4, !dbg !1186
  br label %26, !dbg !1186

26:                                               ; preds = %16, %14
  %27 = load i32, i32* %3, align 4, !dbg !1187
  ret i32 %27, !dbg !1187
}

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @error(i32 %0, i8* %1, ...) #7 !dbg !1188 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1192, metadata !DIExpression()), !dbg !1193
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1194, metadata !DIExpression()), !dbg !1195
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %5, metadata !1196, metadata !DIExpression()), !dbg !1207
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !1208
  %7 = bitcast %struct.__va_list_tag* %6 to i8*, !dbg !1208
  call void @llvm.va_start(i8* %7), !dbg !1208
  %8 = load i8*, i8** %4, align 8, !dbg !1209
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !1210
  call void @_warning(i32 1, i8* %8, %struct.__va_list_tag* %9), !dbg !1211
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !1212
  %11 = bitcast %struct.__va_list_tag* %10 to i8*, !dbg !1212
  call void @llvm.va_end(i8* %11), !dbg !1212
  call void @cleanup(i32 0), !dbg !1213
  %12 = load i32, i32* %3, align 4, !dbg !1214
  call void @exit(i32 %12) #15, !dbg !1215
  unreachable, !dbg !1215
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_warning(i32 %0, i8* %1, %struct.__va_list_tag* %2) #0 !dbg !1216 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %struct.__va_list_tag*, align 8
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1220, metadata !DIExpression()), !dbg !1221
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1222, metadata !DIExpression()), !dbg !1223
  store %struct.__va_list_tag* %2, %struct.__va_list_tag** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %6, metadata !1224, metadata !DIExpression()), !dbg !1225
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1226, metadata !DIExpression()), !dbg !1227
  %8 = call i32* @__errno_location() #14, !dbg !1228
  %9 = load i32, i32* %8, align 4, !dbg !1228
  store i32 %9, i32* %7, align 4, !dbg !1227
  %10 = load i8*, i8** @__progname, align 8, !dbg !1229
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1230
  %12 = call i32 @fputs(i8* %10, %struct._IO_FILE* %11), !dbg !1231
  %13 = load i8*, i8** %5, align 8, !dbg !1232
  %14 = icmp ne i8* %13, null, !dbg !1234
  br i1 %14, label %15, label %23, !dbg !1235

15:                                               ; preds = %3
  %16 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !1236
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1238
  %18 = call i32 @fputs(i8* %16, %struct._IO_FILE* %17), !dbg !1239
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1240
  %20 = load i8*, i8** %5, align 8, !dbg !1241
  %21 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8, !dbg !1242
  %22 = call i32 @vfprintf(%struct._IO_FILE* %19, i8* %20, %struct.__va_list_tag* %21), !dbg !1243
  br label %23, !dbg !1244

23:                                               ; preds = %15, %3
  %24 = load i32, i32* %4, align 4, !dbg !1245
  %25 = icmp ne i32 %24, 0, !dbg !1245
  br i1 %25, label %26, label %34, !dbg !1247

26:                                               ; preds = %23
  %27 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !1248
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1250
  %29 = call i32 @fputs(i8* %27, %struct._IO_FILE* %28), !dbg !1251
  %30 = load i32, i32* %7, align 4, !dbg !1252
  %31 = call i8* @strerror(i32 %30) #13, !dbg !1253
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1254
  %33 = call i32 @fputs(i8* %31, %struct._IO_FILE* %32), !dbg !1255
  br label %34, !dbg !1256

34:                                               ; preds = %26, %23
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1257
  %36 = call i32 @putc(i32 10, %struct._IO_FILE* %35), !dbg !1258
  ret void, !dbg !1259
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #8

; Function Attrs: nounwind
declare dso_local i8* @dgettext(i8*, i8*) #4

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #4

declare dso_local i32 @putc(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @errorx(i32 %0, i8* %1, ...) #7 !dbg !1260 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1261, metadata !DIExpression()), !dbg !1262
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1263, metadata !DIExpression()), !dbg !1264
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %5, metadata !1265, metadata !DIExpression()), !dbg !1266
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !1267
  %7 = bitcast %struct.__va_list_tag* %6 to i8*, !dbg !1267
  call void @llvm.va_start(i8* %7), !dbg !1267
  %8 = load i8*, i8** %4, align 8, !dbg !1268
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !1269
  call void @_warning(i32 0, i8* %8, %struct.__va_list_tag* %9), !dbg !1270
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !1271
  %11 = bitcast %struct.__va_list_tag* %10 to i8*, !dbg !1271
  call void @llvm.va_end(i8* %11), !dbg !1271
  call void @cleanup(i32 0), !dbg !1272
  %12 = load i32, i32* %3, align 4, !dbg !1273
  call void @exit(i32 %12) #15, !dbg !1274
  unreachable, !dbg !1274
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @warning(i8* %0, ...) #0 !dbg !1275 {
  %2 = alloca i8*, align 8
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1278, metadata !DIExpression()), !dbg !1279
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %3, metadata !1280, metadata !DIExpression()), !dbg !1281
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, !dbg !1282
  %5 = bitcast %struct.__va_list_tag* %4 to i8*, !dbg !1282
  call void @llvm.va_start(i8* %5), !dbg !1282
  %6 = load i8*, i8** %2, align 8, !dbg !1283
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, !dbg !1284
  call void @_warning(i32 1, i8* %6, %struct.__va_list_tag* %7), !dbg !1285
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, !dbg !1286
  %9 = bitcast %struct.__va_list_tag* %8 to i8*, !dbg !1286
  call void @llvm.va_end(i8* %9), !dbg !1286
  ret void, !dbg !1287
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @warningx(i8* %0, ...) #0 !dbg !1288 {
  %2 = alloca i8*, align 8
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !1289, metadata !DIExpression()), !dbg !1290
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %3, metadata !1291, metadata !DIExpression()), !dbg !1292
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, !dbg !1293
  %5 = bitcast %struct.__va_list_tag* %4 to i8*, !dbg !1293
  call void @llvm.va_start(i8* %5), !dbg !1293
  %6 = load i8*, i8** %2, align 8, !dbg !1294
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, !dbg !1295
  call void @_warning(i32 0, i8* %6, %struct.__va_list_tag* %7), !dbg !1296
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, !dbg !1297
  %9 = bitcast %struct.__va_list_tag* %8 to i8*, !dbg !1297
  call void @llvm.va_end(i8* %9), !dbg !1297
  ret void, !dbg !1298
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @my_execve(i8* %0, i8** %1, i8** %2) #0 !dbg !1299 {
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8**, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1302, metadata !DIExpression()), !dbg !1303
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1304, metadata !DIExpression()), !dbg !1305
  store i8** %2, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !1306, metadata !DIExpression()), !dbg !1307
  %9 = load i8*, i8** %4, align 8, !dbg !1308
  %10 = load i8**, i8*** %5, align 8, !dbg !1309
  %11 = load i8**, i8*** %6, align 8, !dbg !1310
  %12 = call i32 @execve(i8* %9, i8** %10, i8** %11) #13, !dbg !1311
  %13 = call i32* @__errno_location() #14, !dbg !1312
  %14 = load i32, i32* %13, align 4, !dbg !1312
  %15 = icmp eq i32 %14, 8, !dbg !1314
  br i1 %15, label %16, label %53, !dbg !1315

16:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1316, metadata !DIExpression()), !dbg !1318
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !1319, metadata !DIExpression()), !dbg !1320
  store i32 0, i32* %7, align 4, !dbg !1321
  br label %17, !dbg !1323

17:                                               ; preds = %25, %16
  %18 = load i8**, i8*** %5, align 8, !dbg !1324
  %19 = load i32, i32* %7, align 4, !dbg !1326
  %20 = sext i32 %19 to i64, !dbg !1324
  %21 = getelementptr inbounds i8*, i8** %18, i64 %20, !dbg !1324
  %22 = load i8*, i8** %21, align 8, !dbg !1324
  %23 = icmp ne i8* %22, null, !dbg !1327
  br i1 %23, label %24, label %28, !dbg !1328

24:                                               ; preds = %17
  br label %25, !dbg !1329

25:                                               ; preds = %24
  %26 = load i32, i32* %7, align 4, !dbg !1330
  %27 = add nsw i32 %26, 1, !dbg !1330
  store i32 %27, i32* %7, align 4, !dbg !1330
  br label %17, !dbg !1331, !llvm.loop !1332

28:                                               ; preds = %17
  %29 = load i32, i32* %7, align 4, !dbg !1334
  %30 = add nsw i32 %29, 2, !dbg !1335
  %31 = sext i32 %30 to i64, !dbg !1334
  %32 = call i8* @emalloc2(i64 %31, i64 8), !dbg !1336
  %33 = bitcast i8* %32 to i8**, !dbg !1336
  store i8** %33, i8*** %8, align 8, !dbg !1337
  %34 = load i8**, i8*** %8, align 8, !dbg !1338
  %35 = getelementptr inbounds i8*, i8** %34, i64 0, !dbg !1338
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8** %35, align 8, !dbg !1339
  %36 = load i8*, i8** %4, align 8, !dbg !1340
  %37 = load i8**, i8*** %8, align 8, !dbg !1341
  %38 = getelementptr inbounds i8*, i8** %37, i64 1, !dbg !1341
  store i8* %36, i8** %38, align 8, !dbg !1342
  %39 = load i8**, i8*** %8, align 8, !dbg !1343
  %40 = getelementptr inbounds i8*, i8** %39, i64 2, !dbg !1344
  %41 = bitcast i8** %40 to i8*, !dbg !1345
  %42 = load i8**, i8*** %5, align 8, !dbg !1346
  %43 = getelementptr inbounds i8*, i8** %42, i64 1, !dbg !1347
  %44 = bitcast i8** %43 to i8*, !dbg !1345
  %45 = load i32, i32* %7, align 4, !dbg !1348
  %46 = sext i32 %45 to i64, !dbg !1348
  %47 = mul i64 %46, 8, !dbg !1349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %44, i64 %47, i1 false), !dbg !1345
  %48 = load i8**, i8*** %8, align 8, !dbg !1350
  %49 = load i8**, i8*** %6, align 8, !dbg !1351
  %50 = call i32 @execve(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.3, i64 0, i64 0), i8** %48, i8** %49) #13, !dbg !1352
  %51 = load i8**, i8*** %8, align 8, !dbg !1353
  %52 = bitcast i8** %51 to i8*, !dbg !1353
  call void @efree(i8* %52), !dbg !1354
  br label %53, !dbg !1355

53:                                               ; preds = %28, %3
  ret i32 -1, !dbg !1356
}

; Function Attrs: nounwind
declare dso_local i32 @execve(i8*, i8**, i8**) #4

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #9

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @save_signals() #0 !dbg !1357 {
  %1 = alloca %struct.signal_state*, align 8
  call void @llvm.dbg.declare(metadata %struct.signal_state** %1, metadata !1358, metadata !DIExpression()), !dbg !1360
  store %struct.signal_state* getelementptr inbounds ([14 x %struct.signal_state], [14 x %struct.signal_state]* @saved_signals, i64 0, i64 0), %struct.signal_state** %1, align 8, !dbg !1361
  br label %2, !dbg !1363

2:                                                ; preds = %14, %0
  %3 = load %struct.signal_state*, %struct.signal_state** %1, align 8, !dbg !1364
  %4 = getelementptr inbounds %struct.signal_state, %struct.signal_state* %3, i32 0, i32 0, !dbg !1366
  %5 = load i32, i32* %4, align 8, !dbg !1366
  %6 = icmp ne i32 %5, -1, !dbg !1367
  br i1 %6, label %7, label %17, !dbg !1368

7:                                                ; preds = %2
  %8 = load %struct.signal_state*, %struct.signal_state** %1, align 8, !dbg !1369
  %9 = getelementptr inbounds %struct.signal_state, %struct.signal_state* %8, i32 0, i32 0, !dbg !1370
  %10 = load i32, i32* %9, align 8, !dbg !1370
  %11 = load %struct.signal_state*, %struct.signal_state** %1, align 8, !dbg !1371
  %12 = getelementptr inbounds %struct.signal_state, %struct.signal_state* %11, i32 0, i32 1, !dbg !1372
  %13 = call i32 @sigaction(i32 %10, %struct.sigaction* null, %struct.sigaction* %12) #13, !dbg !1373
  br label %14, !dbg !1373

14:                                               ; preds = %7
  %15 = load %struct.signal_state*, %struct.signal_state** %1, align 8, !dbg !1374
  %16 = getelementptr inbounds %struct.signal_state, %struct.signal_state* %15, i32 1, !dbg !1374
  store %struct.signal_state* %16, %struct.signal_state** %1, align 8, !dbg !1374
  br label %2, !dbg !1375, !llvm.loop !1376

17:                                               ; preds = %2
  ret void, !dbg !1378
}

; Function Attrs: nounwind
declare dso_local i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @restore_signals() #0 !dbg !1379 {
  %1 = alloca %struct.signal_state*, align 8
  call void @llvm.dbg.declare(metadata %struct.signal_state** %1, metadata !1380, metadata !DIExpression()), !dbg !1381
  store %struct.signal_state* getelementptr inbounds ([14 x %struct.signal_state], [14 x %struct.signal_state]* @saved_signals, i64 0, i64 0), %struct.signal_state** %1, align 8, !dbg !1382
  br label %2, !dbg !1384

2:                                                ; preds = %14, %0
  %3 = load %struct.signal_state*, %struct.signal_state** %1, align 8, !dbg !1385
  %4 = getelementptr inbounds %struct.signal_state, %struct.signal_state* %3, i32 0, i32 0, !dbg !1387
  %5 = load i32, i32* %4, align 8, !dbg !1387
  %6 = icmp ne i32 %5, -1, !dbg !1388
  br i1 %6, label %7, label %17, !dbg !1389

7:                                                ; preds = %2
  %8 = load %struct.signal_state*, %struct.signal_state** %1, align 8, !dbg !1390
  %9 = getelementptr inbounds %struct.signal_state, %struct.signal_state* %8, i32 0, i32 0, !dbg !1391
  %10 = load i32, i32* %9, align 8, !dbg !1391
  %11 = load %struct.signal_state*, %struct.signal_state** %1, align 8, !dbg !1392
  %12 = getelementptr inbounds %struct.signal_state, %struct.signal_state* %11, i32 0, i32 1, !dbg !1393
  %13 = call i32 @sigaction(i32 %10, %struct.sigaction* %12, %struct.sigaction* null) #13, !dbg !1394
  br label %14, !dbg !1394

14:                                               ; preds = %7
  %15 = load %struct.signal_state*, %struct.signal_state** %1, align 8, !dbg !1395
  %16 = getelementptr inbounds %struct.signal_state, %struct.signal_state* %15, i32 1, !dbg !1395
  store %struct.signal_state* %16, %struct.signal_state** %1, align 8, !dbg !1395
  br label %2, !dbg !1396, !llvm.loop !1397

17:                                               ; preds = %2
  ret void, !dbg !1399
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sudo_execve(%struct.command_details* %0, %struct.command_status* %1) #0 !dbg !1400 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.command_details*, align 8
  %5 = alloca %struct.command_status*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [2 x i32], align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca %struct.__sigset_t*, align 8
  %13 = alloca %struct.__sigset_t*, align 8
  %14 = alloca %struct.sigaction, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.sigforward*, align 8
  store %struct.command_details* %0, %struct.command_details** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %4, metadata !1433, metadata !DIExpression()), !dbg !1434
  store %struct.command_status* %1, %struct.command_status** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.command_status** %5, metadata !1435, metadata !DIExpression()), !dbg !1436
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1437, metadata !DIExpression()), !dbg !1438
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1439, metadata !DIExpression()), !dbg !1440
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1441, metadata !DIExpression()), !dbg !1442
  call void @llvm.dbg.declare(metadata [2 x i32]* %9, metadata !1443, metadata !DIExpression()), !dbg !1444
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1445, metadata !DIExpression()), !dbg !1446
  store i32 0, i32* %10, align 4, !dbg !1446
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1447, metadata !DIExpression()), !dbg !1448
  store i8* null, i8** %11, align 8, !dbg !1448
  call void @llvm.dbg.declare(metadata %struct.__sigset_t** %12, metadata !1449, metadata !DIExpression()), !dbg !1450
  call void @llvm.dbg.declare(metadata %struct.__sigset_t** %13, metadata !1451, metadata !DIExpression()), !dbg !1452
  call void @llvm.dbg.declare(metadata %struct.sigaction* %14, metadata !1453, metadata !DIExpression()), !dbg !1454
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1455, metadata !DIExpression()), !dbg !1456
  %17 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !1457
  %18 = getelementptr inbounds %struct.command_details, %struct.command_details* %17, i32 0, i32 9, !dbg !1457
  %19 = load i32, i32* %18, align 4, !dbg !1457
  %20 = and i32 %19, 1024, !dbg !1457
  %21 = icmp ne i32 %20, 0, !dbg !1457
  br i1 %21, label %22, label %35, !dbg !1459

22:                                               ; preds = %2
  %23 = call i32 @fork() #13, !dbg !1460
  switch i32 %23, label %33 [
    i32 -1, label %24
    i32 0, label %31
  ], !dbg !1462

24:                                               ; preds = %22
  %25 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1463
  %26 = getelementptr inbounds %struct.command_status, %struct.command_status* %25, i32 0, i32 0, !dbg !1465
  store i32 1, i32* %26, align 4, !dbg !1466
  %27 = call i32* @__errno_location() #14, !dbg !1467
  %28 = load i32, i32* %27, align 4, !dbg !1467
  %29 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1468
  %30 = getelementptr inbounds %struct.command_status, %struct.command_status* %29, i32 0, i32 1, !dbg !1469
  store i32 %28, i32* %30, align 4, !dbg !1470
  store i32 -1, i32* %3, align 4, !dbg !1471
  br label %386, !dbg !1471

31:                                               ; preds = %22
  %32 = call i32 @setpgid(i32 0, i32 0) #13, !dbg !1472
  br label %34, !dbg !1473

33:                                               ; preds = %22
  call void @_exit(i32 0) #16, !dbg !1474
  unreachable, !dbg !1474

34:                                               ; preds = %31
  br label %35, !dbg !1475

35:                                               ; preds = %34, %2
  %36 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !1476
  %37 = icmp eq %struct.plugin_container* %36, null, !dbg !1476
  br i1 %37, label %38, label %44, !dbg !1478

38:                                               ; preds = %35
  %39 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !1479
  %40 = getelementptr inbounds %struct.command_details, %struct.command_details* %39, i32 0, i32 9, !dbg !1479
  %41 = load i32, i32* %40, align 4, !dbg !1479
  %42 = and i32 %41, 4096, !dbg !1479
  %43 = icmp ne i32 %42, 0, !dbg !1479
  br i1 %43, label %44, label %69, !dbg !1480

44:                                               ; preds = %38, %35
  store i32 1, i32* %10, align 4, !dbg !1481
  %45 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !1483
  %46 = getelementptr inbounds %struct.command_details, %struct.command_details* %45, i32 0, i32 9, !dbg !1483
  %47 = load i32, i32* %46, align 4, !dbg !1483
  %48 = and i32 %47, 8192, !dbg !1483
  %49 = icmp ne i32 %48, 0, !dbg !1483
  br i1 %49, label %50, label %63, !dbg !1485

50:                                               ; preds = %44
  %51 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !1486
  %52 = getelementptr inbounds %struct.command_details, %struct.command_details* %51, i32 0, i32 17, !dbg !1487
  %53 = load i8*, i8** %52, align 8, !dbg !1487
  %54 = icmp ne i8* %53, null, !dbg !1486
  br i1 %54, label %55, label %59, !dbg !1486

55:                                               ; preds = %50
  %56 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !1488
  %57 = getelementptr inbounds %struct.command_details, %struct.command_details* %56, i32 0, i32 17, !dbg !1489
  %58 = load i8*, i8** %57, align 8, !dbg !1489
  br label %61, !dbg !1486

59:                                               ; preds = %50
  %60 = load i8*, i8** getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 4), align 8, !dbg !1490
  br label %61, !dbg !1486

61:                                               ; preds = %59, %55
  %62 = phi i8* [ %58, %55 ], [ %60, %59 ], !dbg !1486
  store i8* %62, i8** %11, align 8, !dbg !1491
  br label %63, !dbg !1492

63:                                               ; preds = %61, %44
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.4, i64 0, i64 0)), !dbg !1493
  %64 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !1494
  %65 = getelementptr inbounds %struct.command_details, %struct.command_details* %64, i32 0, i32 1, !dbg !1495
  %66 = load i32, i32* %65, align 4, !dbg !1495
  %67 = load i8*, i8** getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 6), align 8, !dbg !1496
  %68 = load i8*, i8** %11, align 8, !dbg !1497
  call void @pty_setup(i32 %66, i8* %67, i8* %68), !dbg !1498
  br label %69, !dbg !1499

69:                                               ; preds = %63, %38
  %70 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1500
  %71 = call i32 @socketpair(i32 1, i32 2, i32 0, i32* %70) #13, !dbg !1502
  %72 = icmp eq i32 %71, -1, !dbg !1503
  br i1 %72, label %73, label %75, !dbg !1504

73:                                               ; preds = %69
  %74 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !1505
  call void (i32, i8*, ...) @error(i32 1, i8* %74) #16, !dbg !1506
  unreachable, !dbg !1506

75:                                               ; preds = %69
  %76 = call i32 @pipe_nonblock(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0)), !dbg !1507
  %77 = icmp ne i32 %76, 0, !dbg !1509
  br i1 %77, label %78, label %80, !dbg !1510

78:                                               ; preds = %75
  %79 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)) #13, !dbg !1511
  call void (i32, i8*, ...) @error(i32 1, i8* %79) #16, !dbg !1512
  unreachable, !dbg !1512

80:                                               ; preds = %75
  %81 = bitcast %struct.sigaction* %14 to i8*, !dbg !1513
  call void @zero_bytes(i8* %81, i64 152), !dbg !1514
  %82 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %14, i32 0, i32 1, !dbg !1515
  %83 = call i32 @sigemptyset(%struct.__sigset_t* %82) #13, !dbg !1516
  %84 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %14, i32 0, i32 2, !dbg !1517
  store i32 536870912, i32* %84, align 8, !dbg !1518
  %85 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %14, i32 0, i32 0, !dbg !1519
  %86 = bitcast %union.anon* %85 to void (i32)**, !dbg !1519
  store void (i32)* @handler, void (i32)** %86, align 8, !dbg !1520
  %87 = call i32 @sigaction(i32 14, %struct.sigaction* %14, %struct.sigaction* null) #13, !dbg !1521
  %88 = call i32 @sigaction(i32 17, %struct.sigaction* %14, %struct.sigaction* null) #13, !dbg !1522
  %89 = call i32 @sigaction(i32 1, %struct.sigaction* %14, %struct.sigaction* null) #13, !dbg !1523
  %90 = call i32 @sigaction(i32 2, %struct.sigaction* %14, %struct.sigaction* null) #13, !dbg !1524
  %91 = call i32 @sigaction(i32 13, %struct.sigaction* %14, %struct.sigaction* null) #13, !dbg !1525
  %92 = call i32 @sigaction(i32 3, %struct.sigaction* %14, %struct.sigaction* null) #13, !dbg !1526
  %93 = call i32 @sigaction(i32 15, %struct.sigaction* %14, %struct.sigaction* null) #13, !dbg !1527
  %94 = call i32 @sigaction(i32 10, %struct.sigaction* %14, %struct.sigaction* null) #13, !dbg !1528
  %95 = call i32 @sigaction(i32 12, %struct.sigaction* %14, %struct.sigaction* null) #13, !dbg !1529
  %96 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1530
  %97 = load i32, i32* %96, align 4, !dbg !1530
  %98 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !1530
  %99 = icmp sgt i32 %97, %98, !dbg !1530
  br i1 %99, label %100, label %103, !dbg !1530

100:                                              ; preds = %80
  %101 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1530
  %102 = load i32, i32* %101, align 4, !dbg !1530
  br label %105, !dbg !1530

103:                                              ; preds = %80
  %104 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !1530
  br label %105, !dbg !1530

105:                                              ; preds = %103, %100
  %106 = phi i32 [ %102, %100 ], [ %104, %103 ], !dbg !1530
  store i32 %106, i32* %6, align 4, !dbg !1531
  %107 = load i32, i32* %10, align 4, !dbg !1532
  %108 = icmp ne i32 %107, 0, !dbg !1532
  br i1 %108, label %109, label %113, !dbg !1534

109:                                              ; preds = %105
  %110 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !1535
  %111 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1536
  %112 = call i32 @fork_pty(%struct.command_details* %110, i32* %111, i32* %6), !dbg !1537
  store i32 %112, i32* %15, align 4, !dbg !1538
  br label %117, !dbg !1539

113:                                              ; preds = %105
  %114 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !1540
  %115 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1541
  %116 = call i32 @fork_cmnd(%struct.command_details* %114, i32* %115), !dbg !1542
  store i32 %116, i32* %15, align 4, !dbg !1543
  br label %117

117:                                              ; preds = %113, %109
  %118 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1, !dbg !1544
  %119 = load i32, i32* %118, align 4, !dbg !1544
  %120 = call i32 @close(i32 %119), !dbg !1545
  %121 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !1546
  %122 = getelementptr inbounds %struct.command_details, %struct.command_details* %121, i32 0, i32 9, !dbg !1546
  %123 = load i32, i32* %122, align 4, !dbg !1546
  %124 = and i32 %123, 256, !dbg !1546
  %125 = icmp ne i32 %124, 0, !dbg !1546
  br i1 %125, label %126, label %131, !dbg !1548

126:                                              ; preds = %117
  %127 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !1549
  %128 = getelementptr inbounds %struct.command_details, %struct.command_details* %127, i32 0, i32 6, !dbg !1550
  %129 = load i32, i32* %128, align 8, !dbg !1550
  %130 = call i32 @alarm(i32 %129) #13, !dbg !1551
  br label %131, !dbg !1551

131:                                              ; preds = %126, %117
  %132 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !1552
  %133 = load i32, i32* %6, align 4, !dbg !1553
  %134 = add nsw i32 %133, 1, !dbg !1553
  %135 = add nsw i32 %134, 63, !dbg !1553
  %136 = sdiv i32 %135, 64, !dbg !1553
  %137 = sext i32 %136 to i64, !dbg !1553
  %138 = call i8* @emalloc2(i64 %137, i64 8), !dbg !1554
  %139 = bitcast i8* %138 to %struct.__sigset_t*, !dbg !1555
  store %struct.__sigset_t* %139, %struct.__sigset_t** %12, align 8, !dbg !1556
  %140 = load i32, i32* %6, align 4, !dbg !1557
  %141 = add nsw i32 %140, 1, !dbg !1557
  %142 = add nsw i32 %141, 63, !dbg !1557
  %143 = sdiv i32 %142, 64, !dbg !1557
  %144 = sext i32 %143 to i64, !dbg !1557
  %145 = call i8* @emalloc2(i64 %144, i64 8), !dbg !1558
  %146 = bitcast i8* %145 to %struct.__sigset_t*, !dbg !1559
  store %struct.__sigset_t* %146, %struct.__sigset_t** %13, align 8, !dbg !1560
  br label %147, !dbg !1561

147:                                              ; preds = %357, %331, %304, %274, %225, %131
  %148 = load %struct.__sigset_t*, %struct.__sigset_t** %13, align 8, !dbg !1562
  %149 = bitcast %struct.__sigset_t* %148 to i8*, !dbg !1562
  %150 = load i32, i32* %6, align 4, !dbg !1566
  %151 = add nsw i32 %150, 1, !dbg !1566
  %152 = add nsw i32 %151, 63, !dbg !1566
  %153 = sdiv i32 %152, 64, !dbg !1566
  %154 = sext i32 %153 to i64, !dbg !1566
  %155 = mul i64 %154, 8, !dbg !1567
  call void @zero_bytes(i8* %149, i64 %155), !dbg !1568
  %156 = load %struct.__sigset_t*, %struct.__sigset_t** %12, align 8, !dbg !1569
  %157 = bitcast %struct.__sigset_t* %156 to i8*, !dbg !1569
  %158 = load i32, i32* %6, align 4, !dbg !1570
  %159 = add nsw i32 %158, 1, !dbg !1570
  %160 = add nsw i32 %159, 63, !dbg !1570
  %161 = sdiv i32 %160, 64, !dbg !1570
  %162 = sext i32 %161 to i64, !dbg !1570
  %163 = mul i64 %162, 8, !dbg !1571
  call void @zero_bytes(i8* %157, i64 %163), !dbg !1572
  %164 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !1573
  %165 = srem i32 %164, 64, !dbg !1573
  %166 = zext i32 %165 to i64, !dbg !1573
  %167 = shl i64 1, %166, !dbg !1573
  %168 = load %struct.__sigset_t*, %struct.__sigset_t** %12, align 8, !dbg !1573
  %169 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %168, i32 0, i32 0, !dbg !1573
  %170 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !1573
  %171 = sdiv i32 %170, 64, !dbg !1573
  %172 = sext i32 %171 to i64, !dbg !1573
  %173 = getelementptr inbounds [16 x i64], [16 x i64]* %169, i64 0, i64 %172, !dbg !1573
  %174 = load i64, i64* %173, align 8, !dbg !1573
  %175 = or i64 %174, %167, !dbg !1573
  store i64 %175, i64* %173, align 8, !dbg !1573
  %176 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1574
  %177 = load i32, i32* %176, align 4, !dbg !1574
  %178 = srem i32 %177, 64, !dbg !1574
  %179 = zext i32 %178 to i64, !dbg !1574
  %180 = shl i64 1, %179, !dbg !1574
  %181 = load %struct.__sigset_t*, %struct.__sigset_t** %12, align 8, !dbg !1574
  %182 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %181, i32 0, i32 0, !dbg !1574
  %183 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1574
  %184 = load i32, i32* %183, align 4, !dbg !1574
  %185 = sdiv i32 %184, 64, !dbg !1574
  %186 = sext i32 %185 to i64, !dbg !1574
  %187 = getelementptr inbounds [16 x i64], [16 x i64]* %182, i64 0, i64 %186, !dbg !1574
  %188 = load i64, i64* %187, align 8, !dbg !1574
  %189 = or i64 %188, %180, !dbg !1574
  store i64 %189, i64* %187, align 8, !dbg !1574
  %190 = load %struct.sigforward*, %struct.sigforward** getelementptr inbounds (%struct.sigforward_list, %struct.sigforward_list* @sigfwd_list, i32 0, i32 0), align 8, !dbg !1575
  %191 = icmp eq %struct.sigforward* %190, null, !dbg !1575
  br i1 %191, label %207, label %192, !dbg !1577

192:                                              ; preds = %147
  %193 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1578
  %194 = load i32, i32* %193, align 4, !dbg !1578
  %195 = srem i32 %194, 64, !dbg !1578
  %196 = zext i32 %195 to i64, !dbg !1578
  %197 = shl i64 1, %196, !dbg !1578
  %198 = load %struct.__sigset_t*, %struct.__sigset_t** %13, align 8, !dbg !1578
  %199 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %198, i32 0, i32 0, !dbg !1578
  %200 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1578
  %201 = load i32, i32* %200, align 4, !dbg !1578
  %202 = sdiv i32 %201, 64, !dbg !1578
  %203 = sext i32 %202 to i64, !dbg !1578
  %204 = getelementptr inbounds [16 x i64], [16 x i64]* %199, i64 0, i64 %203, !dbg !1578
  %205 = load i64, i64* %204, align 8, !dbg !1578
  %206 = or i64 %205, %197, !dbg !1578
  store i64 %206, i64* %204, align 8, !dbg !1578
  br label %207, !dbg !1578

207:                                              ; preds = %192, %147
  %208 = load i32, i32* %10, align 4, !dbg !1579
  %209 = icmp ne i32 %208, 0, !dbg !1579
  br i1 %209, label %210, label %213, !dbg !1581

210:                                              ; preds = %207
  %211 = load %struct.__sigset_t*, %struct.__sigset_t** %12, align 8, !dbg !1582
  %212 = load %struct.__sigset_t*, %struct.__sigset_t** %13, align 8, !dbg !1583
  call void @fd_set_iobs(%struct.__sigset_t* %211, %struct.__sigset_t* %212), !dbg !1584
  br label %213, !dbg !1584

213:                                              ; preds = %210, %207
  %214 = load i32, i32* %6, align 4, !dbg !1585
  %215 = add nsw i32 %214, 1, !dbg !1586
  %216 = load %struct.__sigset_t*, %struct.__sigset_t** %12, align 8, !dbg !1587
  %217 = load %struct.__sigset_t*, %struct.__sigset_t** %13, align 8, !dbg !1588
  %218 = call i32 @select(i32 %215, %struct.__sigset_t* %216, %struct.__sigset_t* %217, %struct.__sigset_t* null, %struct.timeval* null), !dbg !1589
  store i32 %218, i32* %8, align 4, !dbg !1590
  %219 = load i32, i32* %8, align 4, !dbg !1591
  %220 = icmp eq i32 %219, -1, !dbg !1593
  br i1 %220, label %221, label %228, !dbg !1594

221:                                              ; preds = %213
  %222 = call i32* @__errno_location() #14, !dbg !1595
  %223 = load i32, i32* %222, align 4, !dbg !1595
  %224 = icmp eq i32 %223, 4, !dbg !1598
  br i1 %224, label %225, label %226, !dbg !1599

225:                                              ; preds = %221
  br label %147, !dbg !1600, !llvm.loop !1601

226:                                              ; preds = %221
  %227 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #13, !dbg !1604
  call void (i32, i8*, ...) @error(i32 1, i8* %227) #16, !dbg !1605
  unreachable, !dbg !1605

228:                                              ; preds = %213
  %229 = load %struct.__sigset_t*, %struct.__sigset_t** %13, align 8, !dbg !1606
  %230 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %229, i32 0, i32 0, !dbg !1606
  %231 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1606
  %232 = load i32, i32* %231, align 4, !dbg !1606
  %233 = sdiv i32 %232, 64, !dbg !1606
  %234 = sext i32 %233 to i64, !dbg !1606
  %235 = getelementptr inbounds [16 x i64], [16 x i64]* %230, i64 0, i64 %234, !dbg !1606
  %236 = load i64, i64* %235, align 8, !dbg !1606
  %237 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1606
  %238 = load i32, i32* %237, align 4, !dbg !1606
  %239 = srem i32 %238, 64, !dbg !1606
  %240 = zext i32 %239 to i64, !dbg !1606
  %241 = shl i64 1, %240, !dbg !1606
  %242 = and i64 %236, %241, !dbg !1606
  %243 = icmp ne i64 %242, 0, !dbg !1606
  br i1 %243, label %244, label %247, !dbg !1608

244:                                              ; preds = %228
  %245 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1609
  %246 = load i32, i32* %245, align 4, !dbg !1609
  call void @forward_signals(i32 %246), !dbg !1611
  br label %247, !dbg !1612

247:                                              ; preds = %244, %228
  %248 = load %struct.__sigset_t*, %struct.__sigset_t** %12, align 8, !dbg !1613
  %249 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %248, i32 0, i32 0, !dbg !1613
  %250 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !1613
  %251 = sdiv i32 %250, 64, !dbg !1613
  %252 = sext i32 %251 to i64, !dbg !1613
  %253 = getelementptr inbounds [16 x i64], [16 x i64]* %249, i64 0, i64 %252, !dbg !1613
  %254 = load i64, i64* %253, align 8, !dbg !1613
  %255 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !1613
  %256 = srem i32 %255, 64, !dbg !1613
  %257 = zext i32 %256 to i64, !dbg !1613
  %258 = shl i64 1, %257, !dbg !1613
  %259 = and i64 %254, %258, !dbg !1613
  %260 = icmp ne i64 %259, 0, !dbg !1613
  br i1 %260, label %261, label %275, !dbg !1615

261:                                              ; preds = %247
  %262 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !1616
  %263 = load i32, i32* %15, align 4, !dbg !1618
  %264 = load i32, i32* %10, align 4, !dbg !1619
  %265 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1620
  %266 = call i32 @handle_signals(i32 %262, i32 %263, i32 %264, %struct.command_status* %265), !dbg !1621
  store i32 %266, i32* %7, align 4, !dbg !1622
  %267 = load i32, i32* %7, align 4, !dbg !1623
  %268 = icmp eq i32 %267, 0, !dbg !1625
  br i1 %268, label %269, label %270, !dbg !1626

269:                                              ; preds = %261
  br label %364, !dbg !1627

270:                                              ; preds = %261
  %271 = load i32, i32* %7, align 4, !dbg !1629
  %272 = icmp eq i32 %271, -1, !dbg !1631
  br i1 %272, label %273, label %274, !dbg !1632

273:                                              ; preds = %270
  br label %358, !dbg !1633

274:                                              ; preds = %270
  br label %147, !dbg !1635, !llvm.loop !1601

275:                                              ; preds = %247
  %276 = load %struct.__sigset_t*, %struct.__sigset_t** %12, align 8, !dbg !1636
  %277 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %276, i32 0, i32 0, !dbg !1636
  %278 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1636
  %279 = load i32, i32* %278, align 4, !dbg !1636
  %280 = sdiv i32 %279, 64, !dbg !1636
  %281 = sext i32 %280 to i64, !dbg !1636
  %282 = getelementptr inbounds [16 x i64], [16 x i64]* %277, i64 0, i64 %281, !dbg !1636
  %283 = load i64, i64* %282, align 8, !dbg !1636
  %284 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1636
  %285 = load i32, i32* %284, align 4, !dbg !1636
  %286 = srem i32 %285, 64, !dbg !1636
  %287 = zext i32 %286 to i64, !dbg !1636
  %288 = shl i64 1, %287, !dbg !1636
  %289 = and i64 %283, %288, !dbg !1636
  %290 = icmp ne i64 %289, 0, !dbg !1636
  br i1 %290, label %291, label %348, !dbg !1638

291:                                              ; preds = %275
  %292 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1639
  %293 = load i32, i32* %292, align 4, !dbg !1639
  %294 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1641
  %295 = bitcast %struct.command_status* %294 to i8*, !dbg !1641
  %296 = call i64 @recv(i32 %293, i8* %295, i64 8, i32 0), !dbg !1642
  %297 = trunc i64 %296 to i32, !dbg !1642
  store i32 %297, i32* %7, align 4, !dbg !1643
  %298 = load i32, i32* %7, align 4, !dbg !1644
  %299 = icmp eq i32 %298, -1, !dbg !1646
  br i1 %299, label %300, label %320, !dbg !1647

300:                                              ; preds = %291
  %301 = call i32* @__errno_location() #14, !dbg !1648
  %302 = load i32, i32* %301, align 4, !dbg !1648
  %303 = icmp eq i32 %302, 4, !dbg !1651
  br i1 %303, label %304, label %305, !dbg !1652

304:                                              ; preds = %300
  br label %147, !dbg !1653, !llvm.loop !1601

305:                                              ; preds = %300
  %306 = load i32, i32* %10, align 4, !dbg !1654
  %307 = icmp ne i32 %306, 0, !dbg !1654
  br i1 %307, label %308, label %319, !dbg !1656

308:                                              ; preds = %305
  %309 = call i32* @__errno_location() #14, !dbg !1657
  %310 = load i32, i32* %309, align 4, !dbg !1657
  %311 = icmp ne i32 %310, 11, !dbg !1658
  br i1 %311, label %312, label %319, !dbg !1659

312:                                              ; preds = %308
  %313 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1660
  %314 = getelementptr inbounds %struct.command_status, %struct.command_status* %313, i32 0, i32 0, !dbg !1662
  store i32 1, i32* %314, align 4, !dbg !1663
  %315 = call i32* @__errno_location() #14, !dbg !1664
  %316 = load i32, i32* %315, align 4, !dbg !1664
  %317 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1665
  %318 = getelementptr inbounds %struct.command_status, %struct.command_status* %317, i32 0, i32 1, !dbg !1666
  store i32 %316, i32* %318, align 4, !dbg !1667
  br label %358, !dbg !1668

319:                                              ; preds = %308, %305
  br label %320, !dbg !1669

320:                                              ; preds = %319, %291
  %321 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1670
  %322 = getelementptr inbounds %struct.command_status, %struct.command_status* %321, i32 0, i32 0, !dbg !1672
  %323 = load i32, i32* %322, align 4, !dbg !1672
  %324 = icmp eq i32 %323, 2, !dbg !1673
  br i1 %324, label %325, label %340, !dbg !1674

325:                                              ; preds = %320
  %326 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1675
  %327 = getelementptr inbounds %struct.command_status, %struct.command_status* %326, i32 0, i32 1, !dbg !1675
  %328 = load i32, i32* %327, align 4, !dbg !1675
  %329 = and i32 %328, 255, !dbg !1675
  %330 = icmp eq i32 %329, 127, !dbg !1675
  br i1 %330, label %331, label %339, !dbg !1678

331:                                              ; preds = %325
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)), !dbg !1679
  %332 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1681
  %333 = getelementptr inbounds %struct.command_status, %struct.command_status* %332, i32 0, i32 1, !dbg !1681
  %334 = load i32, i32* %333, align 4, !dbg !1681
  %335 = and i32 %334, 65280, !dbg !1681
  %336 = ashr i32 %335, 8, !dbg !1681
  %337 = call i32 @suspend_parent(i32 %336), !dbg !1682
  store i32 %337, i32* %7, align 4, !dbg !1683
  %338 = load i32, i32* %7, align 4, !dbg !1684
  call void @schedule_signal(i32 %338), !dbg !1685
  br label %147, !dbg !1686, !llvm.loop !1601

339:                                              ; preds = %325
  br label %358, !dbg !1687

340:                                              ; preds = %320
  %341 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1689
  %342 = getelementptr inbounds %struct.command_status, %struct.command_status* %341, i32 0, i32 0, !dbg !1691
  %343 = load i32, i32* %342, align 4, !dbg !1691
  %344 = icmp eq i32 %343, 1, !dbg !1692
  br i1 %344, label %345, label %346, !dbg !1693

345:                                              ; preds = %340
  br label %358, !dbg !1694

346:                                              ; preds = %340
  br label %347

347:                                              ; preds = %346
  br label %348, !dbg !1696

348:                                              ; preds = %347, %275
  %349 = load %struct.__sigset_t*, %struct.__sigset_t** %12, align 8, !dbg !1697
  %350 = load %struct.__sigset_t*, %struct.__sigset_t** %13, align 8, !dbg !1699
  %351 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1700
  %352 = call i32 @perform_io(%struct.__sigset_t* %349, %struct.__sigset_t* %350, %struct.command_status* %351), !dbg !1701
  %353 = icmp ne i32 %352, 0, !dbg !1702
  br i1 %353, label %354, label %357, !dbg !1703

354:                                              ; preds = %348
  call void @schedule_signal(i32 9), !dbg !1704
  %355 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !1706
  %356 = load i32, i32* %355, align 4, !dbg !1706
  call void @forward_signals(i32 %356), !dbg !1707
  br label %358, !dbg !1708

357:                                              ; preds = %348
  br label %147, !dbg !1709, !llvm.loop !1601

358:                                              ; preds = %354, %345, %339, %312, %273
  %359 = load i32, i32* %10, align 4, !dbg !1710
  %360 = icmp ne i32 %359, 0, !dbg !1710
  br i1 %360, label %361, label %363, !dbg !1712

361:                                              ; preds = %358
  %362 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1713
  call void @pty_close(%struct.command_status* %362), !dbg !1715
  br label %363, !dbg !1716

363:                                              ; preds = %361, %358
  br label %364, !dbg !1710

364:                                              ; preds = %363, %269
  call void @llvm.dbg.label(metadata !1717), !dbg !1718
  %365 = load %struct.__sigset_t*, %struct.__sigset_t** %12, align 8, !dbg !1719
  %366 = bitcast %struct.__sigset_t* %365 to i8*, !dbg !1719
  call void @efree(i8* %366), !dbg !1720
  %367 = load %struct.__sigset_t*, %struct.__sigset_t** %13, align 8, !dbg !1721
  %368 = bitcast %struct.__sigset_t* %367 to i8*, !dbg !1721
  call void @efree(i8* %368), !dbg !1722
  br label %369, !dbg !1723

369:                                              ; preds = %373, %364
  %370 = load %struct.sigforward*, %struct.sigforward** getelementptr inbounds (%struct.sigforward_list, %struct.sigforward_list* @sigfwd_list, i32 0, i32 0), align 8, !dbg !1724
  %371 = icmp eq %struct.sigforward* %370, null, !dbg !1724
  %372 = xor i1 %371, true, !dbg !1725
  br i1 %372, label %373, label %379, !dbg !1723

373:                                              ; preds = %369
  call void @llvm.dbg.declare(metadata %struct.sigforward** %16, metadata !1726, metadata !DIExpression()), !dbg !1728
  %374 = load %struct.sigforward*, %struct.sigforward** getelementptr inbounds (%struct.sigforward_list, %struct.sigforward_list* @sigfwd_list, i32 0, i32 0), align 8, !dbg !1729
  store %struct.sigforward* %374, %struct.sigforward** %16, align 8, !dbg !1728
  %375 = load %struct.sigforward*, %struct.sigforward** %16, align 8, !dbg !1730
  %376 = bitcast %struct.sigforward* %375 to i8*, !dbg !1730
  call void @tq_remove(i8* bitcast (%struct.sigforward_list* @sigfwd_list to i8*), i8* %376), !dbg !1731
  %377 = load %struct.sigforward*, %struct.sigforward** %16, align 8, !dbg !1732
  %378 = bitcast %struct.sigforward* %377 to i8*, !dbg !1732
  call void @efree(i8* %378), !dbg !1733
  br label %369, !dbg !1723, !llvm.loop !1734

379:                                              ; preds = %369
  %380 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !1736
  %381 = getelementptr inbounds %struct.command_status, %struct.command_status* %380, i32 0, i32 0, !dbg !1737
  %382 = load i32, i32* %381, align 4, !dbg !1737
  %383 = icmp eq i32 %382, 1, !dbg !1738
  %384 = zext i1 %383 to i64, !dbg !1736
  %385 = select i1 %383, i32 -1, i32 0, !dbg !1736
  store i32 %385, i32* %3, align 4, !dbg !1739
  br label %386, !dbg !1739

386:                                              ; preds = %379, %24
  %387 = load i32, i32* %3, align 4, !dbg !1740
  ret i32 %387, !dbg !1740
}

; Function Attrs: nounwind
declare dso_local i32 @fork() #4

; Function Attrs: nounwind
declare dso_local i32 @setpgid(i32, i32) #4

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #10

; Function Attrs: nounwind
declare dso_local i32 @socketpair(i32, i32, i32, i32*) #4

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @pipe_nonblock(i32* %0) #0 !dbg !1741 {
  %2 = alloca i32*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  call void @llvm.dbg.declare(metadata i32** %2, metadata !1745, metadata !DIExpression()), !dbg !1746
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1747, metadata !DIExpression()), !dbg !1748
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1749, metadata !DIExpression()), !dbg !1750
  %5 = load i32*, i32** %2, align 8, !dbg !1751
  %6 = call i32 @pipe(i32* %5) #13, !dbg !1752
  store i32 %6, i32* %4, align 4, !dbg !1753
  %7 = load i32, i32* %4, align 4, !dbg !1754
  %8 = icmp ne i32 %7, -1, !dbg !1756
  br i1 %8, label %9, label %62, !dbg !1757

9:                                                ; preds = %1
  %10 = load i32*, i32** %2, align 8, !dbg !1758
  %11 = getelementptr inbounds i32, i32* %10, i64 0, !dbg !1758
  %12 = load i32, i32* %11, align 4, !dbg !1758
  %13 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 3, i32 0), !dbg !1760
  store i32 %13, i32* %3, align 4, !dbg !1761
  %14 = load i32, i32* %3, align 4, !dbg !1762
  %15 = icmp ne i32 %14, -1, !dbg !1764
  br i1 %15, label %16, label %27, !dbg !1765

16:                                               ; preds = %9
  %17 = load i32, i32* %3, align 4, !dbg !1766
  %18 = and i32 %17, 2048, !dbg !1766
  %19 = icmp ne i32 %18, 0, !dbg !1766
  br i1 %19, label %27, label %20, !dbg !1767

20:                                               ; preds = %16
  %21 = load i32*, i32** %2, align 8, !dbg !1768
  %22 = getelementptr inbounds i32, i32* %21, i64 0, !dbg !1768
  %23 = load i32, i32* %22, align 4, !dbg !1768
  %24 = load i32, i32* %3, align 4, !dbg !1769
  %25 = or i32 %24, 2048, !dbg !1770
  %26 = call i32 (i32, i32, ...) @fcntl(i32 %23, i32 4, i32 %25), !dbg !1771
  store i32 %26, i32* %4, align 4, !dbg !1772
  br label %27, !dbg !1773

27:                                               ; preds = %20, %16, %9
  %28 = load i32, i32* %4, align 4, !dbg !1774
  %29 = icmp ne i32 %28, -1, !dbg !1776
  br i1 %29, label %30, label %49, !dbg !1777

30:                                               ; preds = %27
  %31 = load i32*, i32** %2, align 8, !dbg !1778
  %32 = getelementptr inbounds i32, i32* %31, i64 1, !dbg !1778
  %33 = load i32, i32* %32, align 4, !dbg !1778
  %34 = call i32 (i32, i32, ...) @fcntl(i32 %33, i32 3, i32 0), !dbg !1780
  store i32 %34, i32* %3, align 4, !dbg !1781
  %35 = load i32, i32* %3, align 4, !dbg !1782
  %36 = icmp ne i32 %35, -1, !dbg !1784
  br i1 %36, label %37, label %48, !dbg !1785

37:                                               ; preds = %30
  %38 = load i32, i32* %3, align 4, !dbg !1786
  %39 = and i32 %38, 2048, !dbg !1786
  %40 = icmp ne i32 %39, 0, !dbg !1786
  br i1 %40, label %48, label %41, !dbg !1787

41:                                               ; preds = %37
  %42 = load i32*, i32** %2, align 8, !dbg !1788
  %43 = getelementptr inbounds i32, i32* %42, i64 1, !dbg !1788
  %44 = load i32, i32* %43, align 4, !dbg !1788
  %45 = load i32, i32* %3, align 4, !dbg !1789
  %46 = or i32 %45, 2048, !dbg !1790
  %47 = call i32 (i32, i32, ...) @fcntl(i32 %44, i32 4, i32 %46), !dbg !1791
  store i32 %47, i32* %4, align 4, !dbg !1792
  br label %48, !dbg !1793

48:                                               ; preds = %41, %37, %30
  br label %49, !dbg !1794

49:                                               ; preds = %48, %27
  %50 = load i32, i32* %4, align 4, !dbg !1795
  %51 = icmp eq i32 %50, -1, !dbg !1797
  br i1 %51, label %52, label %61, !dbg !1798

52:                                               ; preds = %49
  %53 = load i32*, i32** %2, align 8, !dbg !1799
  %54 = getelementptr inbounds i32, i32* %53, i64 0, !dbg !1799
  %55 = load i32, i32* %54, align 4, !dbg !1799
  %56 = call i32 @close(i32 %55), !dbg !1801
  %57 = load i32*, i32** %2, align 8, !dbg !1802
  %58 = getelementptr inbounds i32, i32* %57, i64 1, !dbg !1802
  %59 = load i32, i32* %58, align 4, !dbg !1802
  %60 = call i32 @close(i32 %59), !dbg !1803
  br label %61, !dbg !1804

61:                                               ; preds = %52, %49
  br label %62, !dbg !1805

62:                                               ; preds = %61, %1
  %63 = load i32, i32* %4, align 4, !dbg !1806
  ret i32 %63, !dbg !1807
}

; Function Attrs: nounwind
declare dso_local i32 @sigemptyset(%struct.__sigset_t*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @handler(i32 %0) #0 !dbg !1808 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !1809, metadata !DIExpression()), !dbg !1810
  call void @llvm.dbg.declare(metadata i8* %3, metadata !1811, metadata !DIExpression()), !dbg !1812
  %4 = load i32, i32* %2, align 4, !dbg !1813
  %5 = trunc i32 %4 to i8, !dbg !1814
  store i8 %5, i8* %3, align 1, !dbg !1812
  %6 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 1), align 4, !dbg !1815
  %7 = call i64 @write(i32 %6, i8* %3, i64 1), !dbg !1817
  %8 = icmp eq i64 %7, -1, !dbg !1818
  br i1 %8, label %9, label %10, !dbg !1819

9:                                                ; preds = %1
  br label %10, !dbg !1819

10:                                               ; preds = %9, %1
  ret void, !dbg !1820
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fork_cmnd(%struct.command_details* %0, i32* %1) #0 !dbg !1821 {
  %3 = alloca %struct.command_details*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca %struct.command_status, align 4
  %6 = alloca %struct.sigaction, align 8
  %7 = alloca i32, align 4
  store %struct.command_details* %0, %struct.command_details** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %3, metadata !1824, metadata !DIExpression()), !dbg !1825
  store i32* %1, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !1826, metadata !DIExpression()), !dbg !1827
  call void @llvm.dbg.declare(metadata %struct.command_status* %5, metadata !1828, metadata !DIExpression()), !dbg !1829
  call void @llvm.dbg.declare(metadata %struct.sigaction* %6, metadata !1830, metadata !DIExpression()), !dbg !1831
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1832, metadata !DIExpression()), !dbg !1833
  %8 = bitcast %struct.sigaction* %6 to i8*, !dbg !1834
  call void @zero_bytes(i8* %8, i64 152), !dbg !1835
  %9 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %6, i32 0, i32 1, !dbg !1836
  %10 = call i32 @sigemptyset(%struct.__sigset_t* %9) #13, !dbg !1837
  %11 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %6, i32 0, i32 2, !dbg !1838
  store i32 536870912, i32* %11, align 8, !dbg !1839
  %12 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %6, i32 0, i32 0, !dbg !1840
  %13 = bitcast %union.anon* %12 to void (i32)**, !dbg !1840
  store void (i32)* @handler, void (i32)** %13, align 8, !dbg !1841
  %14 = call i32 @sigaction(i32 18, %struct.sigaction* %6, %struct.sigaction* null) #13, !dbg !1842
  %15 = call i32 @fork() #13, !dbg !1843
  store i32 %15, i32* %7, align 4, !dbg !1844
  %16 = load i32, i32* %7, align 4, !dbg !1845
  switch i32 %16, label %65 [
    i32 -1, label %17
    i32 0, label %19
  ], !dbg !1846

17:                                               ; preds = %2
  %18 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #13, !dbg !1847
  call void (i32, i8*, ...) @error(i32 1, i8* %18) #16, !dbg !1849
  unreachable, !dbg !1849

19:                                               ; preds = %2
  %20 = load i32*, i32** %4, align 8, !dbg !1850
  %21 = getelementptr inbounds i32, i32* %20, i64 0, !dbg !1850
  %22 = load i32, i32* %21, align 4, !dbg !1850
  %23 = call i32 @close(i32 %22), !dbg !1851
  %24 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !1852
  %25 = call i32 @close(i32 %24), !dbg !1853
  %26 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 1), align 4, !dbg !1854
  %27 = call i32 @close(i32 %26), !dbg !1855
  %28 = load i32*, i32** %4, align 8, !dbg !1856
  %29 = getelementptr inbounds i32, i32* %28, i64 1, !dbg !1856
  %30 = load i32, i32* %29, align 4, !dbg !1856
  %31 = call i32 (i32, i32, ...) @fcntl(i32 %30, i32 2, i32 1), !dbg !1857
  call void @restore_signals(), !dbg !1858
  %32 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !1859
  %33 = call i32 @exec_setup(%struct.command_details* %32, i8* null, i32 -1), !dbg !1861
  %34 = icmp eq i32 %33, 1, !dbg !1862
  br i1 %34, label %35, label %55, !dbg !1863

35:                                               ; preds = %19
  %36 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !1864
  %37 = getelementptr inbounds %struct.command_details, %struct.command_details* %36, i32 0, i32 8, !dbg !1867
  %38 = load i32, i32* %37, align 8, !dbg !1867
  %39 = icmp sge i32 %38, 0, !dbg !1868
  br i1 %39, label %40, label %44, !dbg !1869

40:                                               ; preds = %35
  %41 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !1870
  %42 = getelementptr inbounds %struct.command_details, %struct.command_details* %41, i32 0, i32 8, !dbg !1871
  %43 = load i32, i32* %42, align 8, !dbg !1871
  call void @closefrom(i32 %43), !dbg !1872
  br label %44, !dbg !1872

44:                                               ; preds = %40, %35
  %45 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !1873
  %46 = getelementptr inbounds %struct.command_details, %struct.command_details* %45, i32 0, i32 11, !dbg !1874
  %47 = load i8*, i8** %46, align 8, !dbg !1874
  %48 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !1875
  %49 = getelementptr inbounds %struct.command_details, %struct.command_details* %48, i32 0, i32 18, !dbg !1876
  %50 = load i8**, i8*** %49, align 8, !dbg !1876
  %51 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !1877
  %52 = getelementptr inbounds %struct.command_details, %struct.command_details* %51, i32 0, i32 19, !dbg !1878
  %53 = load i8**, i8*** %52, align 8, !dbg !1878
  %54 = call i32 @my_execve(i8* %47, i8** %50, i8** %53), !dbg !1879
  br label %55, !dbg !1880

55:                                               ; preds = %44, %19
  %56 = getelementptr inbounds %struct.command_status, %struct.command_status* %5, i32 0, i32 0, !dbg !1881
  store i32 1, i32* %56, align 4, !dbg !1882
  %57 = call i32* @__errno_location() #14, !dbg !1883
  %58 = load i32, i32* %57, align 4, !dbg !1883
  %59 = getelementptr inbounds %struct.command_status, %struct.command_status* %5, i32 0, i32 1, !dbg !1884
  store i32 %58, i32* %59, align 4, !dbg !1885
  %60 = load i32*, i32** %4, align 8, !dbg !1886
  %61 = getelementptr inbounds i32, i32* %60, i64 1, !dbg !1886
  %62 = load i32, i32* %61, align 4, !dbg !1886
  %63 = bitcast %struct.command_status* %5 to i8*, !dbg !1887
  %64 = call i64 @send(i32 %62, i8* %63, i64 8, i32 0), !dbg !1888
  call void @_exit(i32 1) #16, !dbg !1889
  unreachable, !dbg !1889

65:                                               ; preds = %2
  %66 = load i32, i32* %7, align 4, !dbg !1890
  ret i32 %66, !dbg !1891
}

declare dso_local i32 @close(i32) #3

; Function Attrs: nounwind
declare dso_local i32 @alarm(i32) #4

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #4

declare dso_local i32 @select(i32, %struct.__sigset_t*, %struct.__sigset_t*, %struct.__sigset_t*, %struct.timeval*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @forward_signals(i32 %0) #0 !dbg !1892 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.sigforward*, align 8
  %4 = alloca %struct.command_status, align 4
  %5 = alloca i64, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !1893, metadata !DIExpression()), !dbg !1894
  call void @llvm.dbg.declare(metadata %struct.sigforward** %3, metadata !1895, metadata !DIExpression()), !dbg !1896
  call void @llvm.dbg.declare(metadata %struct.command_status* %4, metadata !1897, metadata !DIExpression()), !dbg !1898
  call void @llvm.dbg.declare(metadata i64* %5, metadata !1899, metadata !DIExpression()), !dbg !1902
  br label %6, !dbg !1903

6:                                                ; preds = %57, %1
  %7 = load %struct.sigforward*, %struct.sigforward** getelementptr inbounds (%struct.sigforward_list, %struct.sigforward_list* @sigfwd_list, i32 0, i32 0), align 8, !dbg !1904
  %8 = icmp eq %struct.sigforward* %7, null, !dbg !1904
  %9 = xor i1 %8, true, !dbg !1905
  br i1 %9, label %10, label %58, !dbg !1903

10:                                               ; preds = %6
  %11 = load %struct.sigforward*, %struct.sigforward** getelementptr inbounds (%struct.sigforward_list, %struct.sigforward_list* @sigfwd_list, i32 0, i32 0), align 8, !dbg !1906
  store %struct.sigforward* %11, %struct.sigforward** %3, align 8, !dbg !1908
  %12 = load %struct.sigforward*, %struct.sigforward** %3, align 8, !dbg !1909
  %13 = getelementptr inbounds %struct.sigforward, %struct.sigforward* %12, i32 0, i32 2, !dbg !1910
  %14 = load i32, i32* %13, align 8, !dbg !1910
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i32 %14), !dbg !1911
  %15 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 0, !dbg !1912
  store i32 3, i32* %15, align 4, !dbg !1913
  %16 = load %struct.sigforward*, %struct.sigforward** %3, align 8, !dbg !1914
  %17 = getelementptr inbounds %struct.sigforward, %struct.sigforward* %16, i32 0, i32 2, !dbg !1915
  %18 = load i32, i32* %17, align 8, !dbg !1915
  %19 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 1, !dbg !1916
  store i32 %18, i32* %19, align 4, !dbg !1917
  br label %20, !dbg !1918

20:                                               ; preds = %31, %10
  %21 = load i32, i32* %2, align 4, !dbg !1919
  %22 = bitcast %struct.command_status* %4 to i8*, !dbg !1921
  %23 = call i64 @send(i32 %21, i8* %22, i64 8, i32 0), !dbg !1922
  store i64 %23, i64* %5, align 8, !dbg !1923
  br label %24, !dbg !1924

24:                                               ; preds = %20
  %25 = load i64, i64* %5, align 8, !dbg !1925
  %26 = icmp eq i64 %25, -1, !dbg !1926
  br i1 %26, label %27, label %31, !dbg !1927

27:                                               ; preds = %24
  %28 = call i32* @__errno_location() #14, !dbg !1928
  %29 = load i32, i32* %28, align 4, !dbg !1928
  %30 = icmp eq i32 %29, 4, !dbg !1929
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i1 [ false, %24 ], [ %30, %27 ], !dbg !1930
  br i1 %32, label %20, label %33, !dbg !1924, !llvm.loop !1931

33:                                               ; preds = %31
  %34 = load %struct.sigforward*, %struct.sigforward** %3, align 8, !dbg !1933
  %35 = bitcast %struct.sigforward* %34 to i8*, !dbg !1933
  call void @tq_remove(i8* bitcast (%struct.sigforward_list* @sigfwd_list to i8*), i8* %35), !dbg !1934
  %36 = load %struct.sigforward*, %struct.sigforward** %3, align 8, !dbg !1935
  %37 = bitcast %struct.sigforward* %36 to i8*, !dbg !1935
  call void @efree(i8* %37), !dbg !1936
  %38 = load i64, i64* %5, align 8, !dbg !1937
  %39 = icmp ne i64 %38, 8, !dbg !1939
  br i1 %39, label %40, label %57, !dbg !1940

40:                                               ; preds = %33
  %41 = call i32* @__errno_location() #14, !dbg !1941
  %42 = load i32, i32* %41, align 4, !dbg !1941
  %43 = icmp eq i32 %42, 32, !dbg !1944
  br i1 %43, label %44, label %56, !dbg !1945

44:                                               ; preds = %40
  br label %45, !dbg !1946

45:                                               ; preds = %49, %44
  %46 = load %struct.sigforward*, %struct.sigforward** getelementptr inbounds (%struct.sigforward_list, %struct.sigforward_list* @sigfwd_list, i32 0, i32 0), align 8, !dbg !1948
  %47 = icmp eq %struct.sigforward* %46, null, !dbg !1948
  %48 = xor i1 %47, true, !dbg !1949
  br i1 %48, label %49, label %55, !dbg !1946

49:                                               ; preds = %45
  %50 = load %struct.sigforward*, %struct.sigforward** getelementptr inbounds (%struct.sigforward_list, %struct.sigforward_list* @sigfwd_list, i32 0, i32 0), align 8, !dbg !1950
  store %struct.sigforward* %50, %struct.sigforward** %3, align 8, !dbg !1952
  %51 = load %struct.sigforward*, %struct.sigforward** %3, align 8, !dbg !1953
  %52 = bitcast %struct.sigforward* %51 to i8*, !dbg !1953
  call void @tq_remove(i8* bitcast (%struct.sigforward_list* @sigfwd_list to i8*), i8* %52), !dbg !1954
  %53 = load %struct.sigforward*, %struct.sigforward** %3, align 8, !dbg !1955
  %54 = bitcast %struct.sigforward* %53 to i8*, !dbg !1955
  call void @efree(i8* %54), !dbg !1956
  br label %45, !dbg !1946, !llvm.loop !1957

55:                                               ; preds = %45
  br label %56, !dbg !1959

56:                                               ; preds = %55, %40
  br label %58, !dbg !1960

57:                                               ; preds = %33
  br label %6, !dbg !1903, !llvm.loop !1961

58:                                               ; preds = %56, %6
  ret void, !dbg !1963
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @handle_signals(i32 %0, i32 %1, i32 %2, %struct.command_status* %3) #0 !dbg !1964 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.command_status*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1967, metadata !DIExpression()), !dbg !1968
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1969, metadata !DIExpression()), !dbg !1970
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1971, metadata !DIExpression()), !dbg !1972
  store %struct.command_status* %3, %struct.command_status** %9, align 8
  call void @llvm.dbg.declare(metadata %struct.command_status** %9, metadata !1973, metadata !DIExpression()), !dbg !1974
  call void @llvm.dbg.declare(metadata i8* %10, metadata !1975, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.declare(metadata i64* %11, metadata !1977, metadata !DIExpression()), !dbg !1978
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1979, metadata !DIExpression()), !dbg !1980
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1981, metadata !DIExpression()), !dbg !1982
  br label %16, !dbg !1983

16:                                               ; preds = %143, %30, %4
  %17 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !1984
  %18 = call i64 @read(i32 %17, i8* %10, i64 1), !dbg !1988
  store i64 %18, i64* %11, align 8, !dbg !1989
  %19 = load i64, i64* %11, align 8, !dbg !1990
  %20 = icmp sle i64 %19, 0, !dbg !1992
  br i1 %20, label %21, label %46, !dbg !1993

21:                                               ; preds = %16
  %22 = load i64, i64* %11, align 8, !dbg !1994
  %23 = icmp eq i64 %22, 0, !dbg !1997
  br i1 %23, label %24, label %26, !dbg !1998

24:                                               ; preds = %21
  %25 = call i32* @__errno_location() #14, !dbg !1999
  store i32 104, i32* %25, align 4, !dbg !2000
  br label %26, !dbg !1999

26:                                               ; preds = %24, %21
  %27 = call i32* @__errno_location() #14, !dbg !2001
  %28 = load i32, i32* %27, align 4, !dbg !2001
  %29 = icmp eq i32 %28, 4, !dbg !2003
  br i1 %29, label %30, label %31, !dbg !2004

30:                                               ; preds = %26
  br label %16, !dbg !2005, !llvm.loop !2006

31:                                               ; preds = %26
  %32 = call i32* @__errno_location() #14, !dbg !2009
  %33 = load i32, i32* %32, align 4, !dbg !2009
  %34 = icmp eq i32 %33, 11, !dbg !2011
  br i1 %34, label %35, label %36, !dbg !2012

35:                                               ; preds = %31
  br label %144, !dbg !2013

36:                                               ; preds = %31
  %37 = call i32* @__errno_location() #14, !dbg !2014
  %38 = load i32, i32* %37, align 4, !dbg !2014
  %39 = call i8* @strerror(i32 %38) #13, !dbg !2015
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), i8* %39), !dbg !2016
  %40 = load %struct.command_status*, %struct.command_status** %9, align 8, !dbg !2017
  %41 = getelementptr inbounds %struct.command_status, %struct.command_status* %40, i32 0, i32 0, !dbg !2018
  store i32 1, i32* %41, align 4, !dbg !2019
  %42 = call i32* @__errno_location() #14, !dbg !2020
  %43 = load i32, i32* %42, align 4, !dbg !2020
  %44 = load %struct.command_status*, %struct.command_status** %9, align 8, !dbg !2021
  %45 = getelementptr inbounds %struct.command_status, %struct.command_status* %44, i32 0, i32 1, !dbg !2022
  store i32 %43, i32* %45, align 4, !dbg !2023
  store i32 -1, i32* %5, align 4, !dbg !2024
  br label %145, !dbg !2024

46:                                               ; preds = %16
  %47 = load i8, i8* %10, align 1, !dbg !2025
  %48 = zext i8 %47 to i32, !dbg !2025
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i32 %48), !dbg !2026
  %49 = load i8, i8* %10, align 1, !dbg !2027
  %50 = zext i8 %49 to i32, !dbg !2027
  %51 = icmp eq i32 %50, 17, !dbg !2029
  br i1 %51, label %52, label %118, !dbg !2030

52:                                               ; preds = %46
  br label %53, !dbg !2031

53:                                               ; preds = %63, %52
  %54 = load i32, i32* %7, align 4, !dbg !2033
  %55 = call i32 @waitpid(i32 %54, i32* %12, i32 3), !dbg !2035
  store i32 %55, i32* %13, align 4, !dbg !2036
  br label %56, !dbg !2037

56:                                               ; preds = %53
  %57 = load i32, i32* %13, align 4, !dbg !2038
  %58 = icmp eq i32 %57, -1, !dbg !2039
  br i1 %58, label %59, label %63, !dbg !2040

59:                                               ; preds = %56
  %60 = call i32* @__errno_location() #14, !dbg !2041
  %61 = load i32, i32* %60, align 4, !dbg !2041
  %62 = icmp eq i32 %61, 4, !dbg !2042
  br label %63

63:                                               ; preds = %59, %56
  %64 = phi i1 [ false, %56 ], [ %62, %59 ], !dbg !2043
  br i1 %64, label %53, label %65, !dbg !2037, !llvm.loop !2044

65:                                               ; preds = %63
  %66 = load i32, i32* %13, align 4, !dbg !2046
  %67 = load i32, i32* %7, align 4, !dbg !2048
  %68 = icmp eq i32 %66, %67, !dbg !2049
  br i1 %68, label %69, label %117, !dbg !2050

69:                                               ; preds = %65
  %70 = load i32, i32* %8, align 4, !dbg !2051
  %71 = icmp ne i32 %70, 0, !dbg !2051
  br i1 %71, label %116, label %72, !dbg !2054

72:                                               ; preds = %69
  %73 = load i32, i32* %12, align 4, !dbg !2055
  %74 = and i32 %73, 255, !dbg !2055
  %75 = icmp eq i32 %74, 127, !dbg !2055
  br i1 %75, label %76, label %109, !dbg !2058

76:                                               ; preds = %72
  call void @llvm.dbg.declare(metadata i32* %14, metadata !2059, metadata !DIExpression()), !dbg !2061
  store i32 -1, i32* %14, align 4, !dbg !2061
  call void @llvm.dbg.declare(metadata i32* %15, metadata !2062, metadata !DIExpression()), !dbg !2063
  %77 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i32 258, i32 0), !dbg !2064
  store i32 %77, i32* %15, align 4, !dbg !2063
  %78 = load i32, i32* %15, align 4, !dbg !2065
  %79 = icmp ne i32 %78, -1, !dbg !2067
  br i1 %79, label %80, label %83, !dbg !2068

80:                                               ; preds = %76
  %81 = load i32, i32* %15, align 4, !dbg !2069
  %82 = call i32 @tcgetpgrp(i32 %81) #13, !dbg !2070
  store i32 %82, i32* %14, align 4, !dbg !2071
  br label %83, !dbg !2072

83:                                               ; preds = %80, %76
  %84 = call i32 @getpid() #13, !dbg !2073
  %85 = load i32, i32* %12, align 4, !dbg !2075
  %86 = and i32 %85, 65280, !dbg !2075
  %87 = ashr i32 %86, 8, !dbg !2075
  %88 = call i32 @kill(i32 %84, i32 %87) #13, !dbg !2076
  %89 = icmp ne i32 %88, 0, !dbg !2077
  br i1 %89, label %90, label %95, !dbg !2078

90:                                               ; preds = %83
  %91 = call i32 @getpid() #13, !dbg !2079
  %92 = load i32, i32* %12, align 4, !dbg !2081
  %93 = and i32 %92, 65280, !dbg !2081
  %94 = ashr i32 %93, 8, !dbg !2081
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i32 %91, i32 %94), !dbg !2082
  br label %95, !dbg !2083

95:                                               ; preds = %90, %83
  %96 = load i32, i32* %15, align 4, !dbg !2084
  %97 = icmp ne i32 %96, -1, !dbg !2086
  br i1 %97, label %98, label %108, !dbg !2087

98:                                               ; preds = %95
  %99 = load i32, i32* %14, align 4, !dbg !2088
  %100 = icmp ne i32 %99, -1, !dbg !2091
  br i1 %100, label %101, label %105, !dbg !2092

101:                                              ; preds = %98
  %102 = load i32, i32* %15, align 4, !dbg !2093
  %103 = load i32, i32* %14, align 4, !dbg !2094
  %104 = call i32 @tcsetpgrp(i32 %102, i32 %103) #13, !dbg !2095
  br label %105, !dbg !2096

105:                                              ; preds = %101, %98
  %106 = load i32, i32* %15, align 4, !dbg !2097
  %107 = call i32 @close(i32 %106), !dbg !2098
  br label %108, !dbg !2099

108:                                              ; preds = %105, %95
  br label %115, !dbg !2100

109:                                              ; preds = %72
  %110 = load %struct.command_status*, %struct.command_status** %9, align 8, !dbg !2101
  %111 = getelementptr inbounds %struct.command_status, %struct.command_status* %110, i32 0, i32 0, !dbg !2103
  store i32 2, i32* %111, align 4, !dbg !2104
  %112 = load i32, i32* %12, align 4, !dbg !2105
  %113 = load %struct.command_status*, %struct.command_status** %9, align 8, !dbg !2106
  %114 = getelementptr inbounds %struct.command_status, %struct.command_status* %113, i32 0, i32 1, !dbg !2107
  store i32 %112, i32* %114, align 4, !dbg !2108
  store i32 0, i32* %5, align 4, !dbg !2109
  br label %145, !dbg !2109

115:                                              ; preds = %108
  br label %116, !dbg !2110

116:                                              ; preds = %115, %69
  br label %117, !dbg !2111

117:                                              ; preds = %116, %65
  br label %143, !dbg !2112

118:                                              ; preds = %46
  %119 = load i32, i32* %8, align 4, !dbg !2113
  %120 = icmp ne i32 %119, 0, !dbg !2113
  br i1 %120, label %121, label %124, !dbg !2116

121:                                              ; preds = %118
  %122 = load i8, i8* %10, align 1, !dbg !2117
  %123 = zext i8 %122 to i32, !dbg !2117
  call void @schedule_signal(i32 %123), !dbg !2119
  br label %142, !dbg !2120

124:                                              ; preds = %118
  %125 = load i8, i8* %10, align 1, !dbg !2121
  %126 = zext i8 %125 to i32, !dbg !2121
  %127 = icmp eq i32 %126, 14, !dbg !2124
  br i1 %127, label %128, label %130, !dbg !2125

128:                                              ; preds = %124
  %129 = load i32, i32* %7, align 4, !dbg !2126
  call void @terminate_child(i32 %129, i32 0), !dbg !2127
  br label %141, !dbg !2127

130:                                              ; preds = %124
  %131 = load i32, i32* %7, align 4, !dbg !2128
  %132 = load i8, i8* %10, align 1, !dbg !2130
  %133 = zext i8 %132 to i32, !dbg !2130
  %134 = call i32 @kill(i32 %131, i32 %133) #13, !dbg !2131
  %135 = icmp ne i32 %134, 0, !dbg !2132
  br i1 %135, label %136, label %140, !dbg !2133

136:                                              ; preds = %130
  %137 = load i32, i32* %7, align 4, !dbg !2134
  %138 = load i8, i8* %10, align 1, !dbg !2135
  %139 = zext i8 %138 to i32, !dbg !2135
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i32 %137, i32 %139), !dbg !2136
  br label %140, !dbg !2136

140:                                              ; preds = %136, %130
  br label %141

141:                                              ; preds = %140, %128
  br label %142

142:                                              ; preds = %141, %121
  br label %143

143:                                              ; preds = %142, %117
  br label %16, !dbg !2137, !llvm.loop !2006

144:                                              ; preds = %35
  store i32 1, i32* %5, align 4, !dbg !2138
  br label %145, !dbg !2138

145:                                              ; preds = %144, %109, %36
  %146 = load i32, i32* %5, align 4, !dbg !2139
  ret i32 %146, !dbg !2139
}

declare dso_local i64 @recv(i32, i8*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @schedule_signal(i32 %0) #0 !dbg !2140 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.sigforward*, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2141, metadata !DIExpression()), !dbg !2142
  call void @llvm.dbg.declare(metadata %struct.sigforward** %3, metadata !2143, metadata !DIExpression()), !dbg !2144
  %4 = call i8* @emalloc(i64 24), !dbg !2145
  %5 = bitcast i8* %4 to %struct.sigforward*, !dbg !2145
  store %struct.sigforward* %5, %struct.sigforward** %3, align 8, !dbg !2146
  %6 = load %struct.sigforward*, %struct.sigforward** %3, align 8, !dbg !2147
  %7 = load %struct.sigforward*, %struct.sigforward** %3, align 8, !dbg !2148
  %8 = getelementptr inbounds %struct.sigforward, %struct.sigforward* %7, i32 0, i32 0, !dbg !2149
  store %struct.sigforward* %6, %struct.sigforward** %8, align 8, !dbg !2150
  %9 = load %struct.sigforward*, %struct.sigforward** %3, align 8, !dbg !2151
  %10 = getelementptr inbounds %struct.sigforward, %struct.sigforward* %9, i32 0, i32 1, !dbg !2152
  store %struct.sigforward* null, %struct.sigforward** %10, align 8, !dbg !2153
  %11 = load i32, i32* %2, align 4, !dbg !2154
  %12 = load %struct.sigforward*, %struct.sigforward** %3, align 8, !dbg !2155
  %13 = getelementptr inbounds %struct.sigforward, %struct.sigforward* %12, i32 0, i32 2, !dbg !2156
  store i32 %11, i32* %13, align 8, !dbg !2157
  %14 = load %struct.sigforward*, %struct.sigforward** %3, align 8, !dbg !2158
  %15 = bitcast %struct.sigforward* %14 to i8*, !dbg !2158
  call void @tq_append(i8* bitcast (%struct.sigforward_list* @sigfwd_list to i8*), i8* %15), !dbg !2159
  ret void, !dbg !2160
}

declare dso_local i64 @read(i32, i8*, i64) #3

declare dso_local i32 @waitpid(i32, i32*, i32) #3

declare dso_local i32 @open(i8*, i32, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @tcgetpgrp(i32) #4

; Function Attrs: nounwind
declare dso_local i32 @getpid() #4

; Function Attrs: nounwind
declare dso_local i32 @kill(i32, i32) #4

; Function Attrs: nounwind
declare dso_local i32 @tcsetpgrp(i32, i32) #4

declare dso_local i64 @send(i32, i8*, i64, i32) #3

declare dso_local i32 @fcntl(i32, i32, ...) #3

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: nounwind
declare dso_local i32 @pipe(i32*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cleanup(i32 %0) #0 !dbg !2161 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2162, metadata !DIExpression()), !dbg !2163
  %3 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !2164
  %4 = icmp eq %struct.plugin_container* %3, null, !dbg !2164
  br i1 %4, label %8, label %5, !dbg !2166

5:                                                ; preds = %1
  %6 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2167
  %7 = call i32 @term_restore(i32 %6, i32 0), !dbg !2168
  br label %8, !dbg !2168

8:                                                ; preds = %5, %1
  %9 = call i32 @utmp_logout(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @slavename, i64 0, i64 0), i32 0), !dbg !2169
  ret void, !dbg !2170
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @pty_setup(i32 %0, i8* %1, i8* %2) #0 !dbg !2171 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2174, metadata !DIExpression()), !dbg !2175
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2176, metadata !DIExpression()), !dbg !2177
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2178, metadata !DIExpression()), !dbg !2179
  %7 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i32 258, i32 0), !dbg !2180
  store i32 %7, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2181
  %8 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2182
  %9 = icmp ne i32 %8, -1, !dbg !2184
  br i1 %9, label %10, label %25, !dbg !2185

10:                                               ; preds = %3
  %11 = load i32, i32* %4, align 4, !dbg !2186
  %12 = call i32 @get_pty(i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 3), i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @slavename, i64 0, i64 0), i64 4096, i32 %11), !dbg !2189
  %13 = icmp ne i32 %12, 0, !dbg !2189
  br i1 %13, label %16, label %14, !dbg !2190

14:                                               ; preds = %10
  %15 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.15, i64 0, i64 0)) #13, !dbg !2191
  call void (i32, i8*, ...) @error(i32 1, i8* %15) #16, !dbg !2192
  unreachable, !dbg !2192

16:                                               ; preds = %10
  %17 = load i8*, i8** %6, align 8, !dbg !2193
  %18 = icmp ne i8* %17, null, !dbg !2195
  br i1 %18, label %19, label %24, !dbg !2196

19:                                               ; preds = %16
  %20 = load i8*, i8** %5, align 8, !dbg !2197
  %21 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !2198
  %22 = load i8*, i8** %6, align 8, !dbg !2199
  %23 = call i32 @utmp_login(i8* %20, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @slavename, i64 0, i64 0), i32 %21, i8* %22), !dbg !2200
  br label %24, !dbg !2200

24:                                               ; preds = %19, %16
  br label %25, !dbg !2201

25:                                               ; preds = %24, %3
  ret void, !dbg !2202
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @suspend_parent(i32 %0) #0 !dbg !2203 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.sigaction, align 8
  %4 = alloca %struct.sigaction, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2204, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.declare(metadata %struct.sigaction* %3, metadata !2206, metadata !DIExpression()), !dbg !2288
  call void @llvm.dbg.declare(metadata %struct.sigaction* %4, metadata !2289, metadata !DIExpression()), !dbg !2290
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2291, metadata !DIExpression()), !dbg !2292
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2293, metadata !DIExpression()), !dbg !2294
  %8 = load i32, i32* @ttymode, align 4, !dbg !2295
  store i32 %8, i32* %6, align 4, !dbg !2294
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2296, metadata !DIExpression()), !dbg !2297
  store i32 0, i32* %7, align 4, !dbg !2297
  %9 = load i32, i32* %2, align 4, !dbg !2298
  switch i32 %9, label %101 [
    i32 22, label %10
    i32 21, label %10
    i32 19, label %36
    i32 20, label %36
  ], !dbg !2299

10:                                               ; preds = %1, %1
  %11 = load i32, i32* @foreground, align 4, !dbg !2300
  %12 = icmp ne i32 %11, 0, !dbg !2300
  br i1 %12, label %14, label %13, !dbg !2303

13:                                               ; preds = %10
  call void @check_foreground(), !dbg !2304
  br label %14, !dbg !2304

14:                                               ; preds = %13, %10
  %15 = load i32, i32* @foreground, align 4, !dbg !2305
  %16 = icmp ne i32 %15, 0, !dbg !2305
  br i1 %16, label %17, label %35, !dbg !2307

17:                                               ; preds = %14
  %18 = load i32, i32* @ttymode, align 4, !dbg !2308
  %19 = icmp ne i32 %18, 1, !dbg !2311
  br i1 %19, label %20, label %34, !dbg !2312

20:                                               ; preds = %17
  br label %21, !dbg !2313

21:                                               ; preds = %31, %20
  %22 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2315
  %23 = call i32 @term_raw(i32 %22, i32 0), !dbg !2317
  store i32 %23, i32* %5, align 4, !dbg !2318
  br label %24, !dbg !2319

24:                                               ; preds = %21
  %25 = load i32, i32* %5, align 4, !dbg !2320
  %26 = icmp ne i32 %25, 0, !dbg !2320
  br i1 %26, label %31, label %27, !dbg !2321

27:                                               ; preds = %24
  %28 = call i32* @__errno_location() #14, !dbg !2322
  %29 = load i32, i32* %28, align 4, !dbg !2322
  %30 = icmp eq i32 %29, 4, !dbg !2323
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i1 [ false, %24 ], [ %30, %27 ], !dbg !2324
  br i1 %32, label %21, label %33, !dbg !2319, !llvm.loop !2325

33:                                               ; preds = %31
  store i32 1, i32* @ttymode, align 4, !dbg !2327
  br label %34, !dbg !2328

34:                                               ; preds = %33, %17
  store i32 -2, i32* %7, align 4, !dbg !2329
  br label %101, !dbg !2330

35:                                               ; preds = %14
  store i32 1, i32* @ttymode, align 4, !dbg !2331
  br label %36, !dbg !2332

36:                                               ; preds = %1, %1, %35
  call void @flush_output(), !dbg !2333
  %37 = load i32, i32* %6, align 4, !dbg !2334
  %38 = icmp ne i32 %37, 0, !dbg !2336
  br i1 %38, label %39, label %53, !dbg !2337

39:                                               ; preds = %36
  br label %40, !dbg !2338

40:                                               ; preds = %50, %39
  %41 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2340
  %42 = call i32 @term_restore(i32 %41, i32 0), !dbg !2342
  store i32 %42, i32* %5, align 4, !dbg !2343
  br label %43, !dbg !2344

43:                                               ; preds = %40
  %44 = load i32, i32* %5, align 4, !dbg !2345
  %45 = icmp ne i32 %44, 0, !dbg !2345
  br i1 %45, label %50, label %46, !dbg !2346

46:                                               ; preds = %43
  %47 = call i32* @__errno_location() #14, !dbg !2347
  %48 = load i32, i32* %47, align 4, !dbg !2347
  %49 = icmp eq i32 %48, 4, !dbg !2348
  br label %50

50:                                               ; preds = %46, %43
  %51 = phi i1 [ false, %43 ], [ %49, %46 ], !dbg !2349
  br i1 %51, label %40, label %52, !dbg !2344, !llvm.loop !2350

52:                                               ; preds = %50
  br label %53, !dbg !2352

53:                                               ; preds = %52, %36
  %54 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %3, i32 0, i32 0, !dbg !2353
  %55 = bitcast %union.anon* %54 to void (i32)**, !dbg !2353
  store void (i32)* null, void (i32)** %55, align 8, !dbg !2354
  %56 = load i32, i32* %2, align 4, !dbg !2355
  %57 = call i32 @sigaction(i32 %56, %struct.sigaction* %3, %struct.sigaction* %4) #13, !dbg !2356
  %58 = load i32, i32* %2, align 4, !dbg !2357
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.18, i64 0, i64 0), i32 %58), !dbg !2358
  %59 = load i32, i32* @ppgrp, align 4, !dbg !2359
  %60 = load i32, i32* %2, align 4, !dbg !2361
  %61 = call i32 @killpg(i32 %59, i32 %60) #13, !dbg !2362
  %62 = icmp ne i32 %61, 0, !dbg !2363
  br i1 %62, label %63, label %66, !dbg !2364

63:                                               ; preds = %53
  %64 = load i32, i32* @ppgrp, align 4, !dbg !2365
  %65 = load i32, i32* %2, align 4, !dbg !2366
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.19, i64 0, i64 0), i32 %64, i32 %65), !dbg !2367
  br label %66, !dbg !2367

66:                                               ; preds = %63, %53
  call void @check_foreground(), !dbg !2368
  %67 = load i32, i32* @foreground, align 4, !dbg !2369
  %68 = icmp ne i32 %67, 0, !dbg !2369
  %69 = zext i1 %68 to i64, !dbg !2369
  %70 = select i1 %68, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.20, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.21, i64 0, i64 0), !dbg !2369
  %71 = load i32, i32* %6, align 4, !dbg !2370
  %72 = load i32, i32* @ttymode, align 4, !dbg !2371
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.22, i64 0, i64 0), i8* %70, i32 %71, i32 %72), !dbg !2372
  %73 = load i32, i32* @ttymode, align 4, !dbg !2373
  %74 = icmp ne i32 %73, 0, !dbg !2375
  br i1 %74, label %75, label %94, !dbg !2376

75:                                               ; preds = %66
  %76 = load i32, i32* @foreground, align 4, !dbg !2377
  %77 = icmp ne i32 %76, 0, !dbg !2377
  br i1 %77, label %78, label %92, !dbg !2380

78:                                               ; preds = %75
  br label %79, !dbg !2381

79:                                               ; preds = %89, %78
  %80 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2383
  %81 = call i32 @term_raw(i32 %80, i32 0), !dbg !2385
  store i32 %81, i32* %5, align 4, !dbg !2386
  br label %82, !dbg !2387

82:                                               ; preds = %79
  %83 = load i32, i32* %5, align 4, !dbg !2388
  %84 = icmp ne i32 %83, 0, !dbg !2388
  br i1 %84, label %89, label %85, !dbg !2389

85:                                               ; preds = %82
  %86 = call i32* @__errno_location() #14, !dbg !2390
  %87 = load i32, i32* %86, align 4, !dbg !2390
  %88 = icmp eq i32 %87, 4, !dbg !2391
  br label %89

89:                                               ; preds = %85, %82
  %90 = phi i1 [ false, %82 ], [ %88, %85 ], !dbg !2392
  br i1 %90, label %79, label %91, !dbg !2387, !llvm.loop !2393

91:                                               ; preds = %89
  br label %93, !dbg !2395

92:                                               ; preds = %75
  store i32 0, i32* @ttymode, align 4, !dbg !2396
  br label %93

93:                                               ; preds = %92, %91
  br label %94, !dbg !2398

94:                                               ; preds = %93, %66
  %95 = load i32, i32* %2, align 4, !dbg !2399
  %96 = call i32 @sigaction(i32 %95, %struct.sigaction* %4, %struct.sigaction* null) #13, !dbg !2400
  %97 = load i32, i32* @ttymode, align 4, !dbg !2401
  %98 = icmp eq i32 %97, 1, !dbg !2402
  %99 = zext i1 %98 to i64, !dbg !2401
  %100 = select i1 %98, i32 -2, i32 -3, !dbg !2401
  store i32 %100, i32* %7, align 4, !dbg !2403
  br label %101, !dbg !2404

101:                                              ; preds = %1, %94, %34
  %102 = load i32, i32* %7, align 4, !dbg !2405
  ret i32 %102, !dbg !2406
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_foreground() #0 !dbg !2407 {
  %1 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2408
  %2 = icmp ne i32 %1, -1, !dbg !2410
  br i1 %2, label %3, label %24, !dbg !2411

3:                                                ; preds = %0
  %4 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2412
  %5 = call i32 @tcgetpgrp(i32 %4) #13, !dbg !2414
  %6 = load i32, i32* @ppgrp, align 4, !dbg !2415
  %7 = icmp eq i32 %5, %6, !dbg !2416
  %8 = zext i1 %7 to i32, !dbg !2416
  store i32 %8, i32* @foreground, align 4, !dbg !2417
  %9 = load i32, i32* @foreground, align 4, !dbg !2418
  %10 = icmp ne i32 %9, 0, !dbg !2418
  br i1 %10, label %11, label %23, !dbg !2420

11:                                               ; preds = %3
  %12 = load i32, i32* @tty_initialized, align 4, !dbg !2421
  %13 = icmp ne i32 %12, 0, !dbg !2421
  br i1 %13, label %23, label %14, !dbg !2422

14:                                               ; preds = %11
  %15 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2423
  %16 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !2426
  %17 = call i32 @term_copy(i32 %15, i32 %16), !dbg !2427
  %18 = icmp ne i32 %17, 0, !dbg !2427
  br i1 %18, label %19, label %22, !dbg !2428

19:                                               ; preds = %14
  store i32 1, i32* @tty_initialized, align 4, !dbg !2429
  %20 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2431
  %21 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !2432
  call void @sync_ttysize(i32 %20, i32 %21), !dbg !2433
  br label %22, !dbg !2434

22:                                               ; preds = %19, %14
  br label %23, !dbg !2435

23:                                               ; preds = %22, %11, %3
  br label %24, !dbg !2436

24:                                               ; preds = %23, %0
  ret void, !dbg !2437
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @flush_output() #0 !dbg !2438 {
  %1 = alloca %struct.io_buffer*, align 8
  %2 = alloca %struct.timeval, align 8
  %3 = alloca %struct.__sigset_t*, align 8
  %4 = alloca %struct.__sigset_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.io_buffer** %1, metadata !2439, metadata !DIExpression()), !dbg !2440
  call void @llvm.dbg.declare(metadata %struct.timeval* %2, metadata !2441, metadata !DIExpression()), !dbg !2449
  call void @llvm.dbg.declare(metadata %struct.__sigset_t** %3, metadata !2450, metadata !DIExpression()), !dbg !2451
  call void @llvm.dbg.declare(metadata %struct.__sigset_t** %4, metadata !2452, metadata !DIExpression()), !dbg !2453
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2454, metadata !DIExpression()), !dbg !2455
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2456, metadata !DIExpression()), !dbg !2457
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2458, metadata !DIExpression()), !dbg !2459
  store i32 -1, i32* %7, align 4, !dbg !2459
  %8 = load %struct.io_buffer*, %struct.io_buffer** @iobufs, align 8, !dbg !2460
  store %struct.io_buffer* %8, %struct.io_buffer** %1, align 8, !dbg !2462
  br label %9, !dbg !2463

9:                                                ; preds = %33, %0
  %10 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2464
  %11 = icmp ne %struct.io_buffer* %10, null, !dbg !2466
  br i1 %11, label %12, label %37, !dbg !2466

12:                                               ; preds = %9
  %13 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2467
  %14 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %13, i32 0, i32 3, !dbg !2470
  %15 = load i32, i32* %14, align 8, !dbg !2470
  %16 = load i32, i32* %7, align 4, !dbg !2471
  %17 = icmp sgt i32 %15, %16, !dbg !2472
  br i1 %17, label %18, label %22, !dbg !2473

18:                                               ; preds = %12
  %19 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2474
  %20 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %19, i32 0, i32 3, !dbg !2475
  %21 = load i32, i32* %20, align 8, !dbg !2475
  store i32 %21, i32* %7, align 4, !dbg !2476
  br label %22, !dbg !2477

22:                                               ; preds = %18, %12
  %23 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2478
  %24 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %23, i32 0, i32 4, !dbg !2480
  %25 = load i32, i32* %24, align 4, !dbg !2480
  %26 = load i32, i32* %7, align 4, !dbg !2481
  %27 = icmp sgt i32 %25, %26, !dbg !2482
  br i1 %27, label %28, label %32, !dbg !2483

28:                                               ; preds = %22
  %29 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2484
  %30 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %29, i32 0, i32 4, !dbg !2485
  %31 = load i32, i32* %30, align 4, !dbg !2485
  store i32 %31, i32* %7, align 4, !dbg !2486
  br label %32, !dbg !2487

32:                                               ; preds = %28, %22
  br label %33, !dbg !2488

33:                                               ; preds = %32
  %34 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2489
  %35 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %34, i32 0, i32 0, !dbg !2490
  %36 = load %struct.io_buffer*, %struct.io_buffer** %35, align 8, !dbg !2490
  store %struct.io_buffer* %36, %struct.io_buffer** %1, align 8, !dbg !2491
  br label %9, !dbg !2492, !llvm.loop !2493

37:                                               ; preds = %9
  %38 = load i32, i32* %7, align 4, !dbg !2495
  %39 = icmp eq i32 %38, -1, !dbg !2497
  br i1 %39, label %40, label %41, !dbg !2498

40:                                               ; preds = %37
  br label %229, !dbg !2499

41:                                               ; preds = %37
  %42 = load i32, i32* %7, align 4, !dbg !2500
  %43 = add nsw i32 %42, 1, !dbg !2500
  %44 = add nsw i32 %43, 63, !dbg !2500
  %45 = sdiv i32 %44, 64, !dbg !2500
  %46 = sext i32 %45 to i64, !dbg !2500
  %47 = call i8* @emalloc2(i64 %46, i64 8), !dbg !2501
  %48 = bitcast i8* %47 to %struct.__sigset_t*, !dbg !2502
  store %struct.__sigset_t* %48, %struct.__sigset_t** %3, align 8, !dbg !2503
  %49 = load i32, i32* %7, align 4, !dbg !2504
  %50 = add nsw i32 %49, 1, !dbg !2504
  %51 = add nsw i32 %50, 63, !dbg !2504
  %52 = sdiv i32 %51, 64, !dbg !2504
  %53 = sext i32 %52 to i64, !dbg !2504
  %54 = call i8* @emalloc2(i64 %53, i64 8), !dbg !2505
  %55 = bitcast i8* %54 to %struct.__sigset_t*, !dbg !2506
  store %struct.__sigset_t* %55, %struct.__sigset_t** %4, align 8, !dbg !2507
  br label %56, !dbg !2508

56:                                               ; preds = %223, %214, %41
  %57 = load %struct.__sigset_t*, %struct.__sigset_t** %4, align 8, !dbg !2509
  %58 = bitcast %struct.__sigset_t* %57 to i8*, !dbg !2509
  %59 = load i32, i32* %7, align 4, !dbg !2513
  %60 = add nsw i32 %59, 1, !dbg !2513
  %61 = add nsw i32 %60, 63, !dbg !2513
  %62 = sdiv i32 %61, 64, !dbg !2513
  %63 = sext i32 %62 to i64, !dbg !2513
  %64 = mul i64 %63, 8, !dbg !2514
  call void @zero_bytes(i8* %58, i64 %64), !dbg !2515
  %65 = load %struct.__sigset_t*, %struct.__sigset_t** %3, align 8, !dbg !2516
  %66 = bitcast %struct.__sigset_t* %65 to i8*, !dbg !2516
  %67 = load i32, i32* %7, align 4, !dbg !2517
  %68 = add nsw i32 %67, 1, !dbg !2517
  %69 = add nsw i32 %68, 63, !dbg !2517
  %70 = sdiv i32 %69, 64, !dbg !2517
  %71 = sext i32 %70 to i64, !dbg !2517
  %72 = mul i64 %71, 8, !dbg !2518
  call void @zero_bytes(i8* %66, i64 %72), !dbg !2519
  store i32 0, i32* %6, align 4, !dbg !2520
  %73 = load %struct.io_buffer*, %struct.io_buffer** @iobufs, align 8, !dbg !2521
  store %struct.io_buffer* %73, %struct.io_buffer** %1, align 8, !dbg !2523
  br label %74, !dbg !2524

74:                                               ; preds = %186, %56
  %75 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2525
  %76 = icmp ne %struct.io_buffer* %75, null, !dbg !2527
  br i1 %76, label %77, label %190, !dbg !2527

77:                                               ; preds = %74
  %78 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2528
  %79 = icmp ne i32 %78, -1, !dbg !2531
  br i1 %79, label %80, label %87, !dbg !2532

80:                                               ; preds = %77
  %81 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2533
  %82 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %81, i32 0, i32 3, !dbg !2534
  %83 = load i32, i32* %82, align 8, !dbg !2534
  %84 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2535
  %85 = icmp eq i32 %83, %84, !dbg !2536
  br i1 %85, label %86, label %87, !dbg !2537

86:                                               ; preds = %80
  br label %186, !dbg !2538

87:                                               ; preds = %80, %77
  %88 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2539
  %89 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %88, i32 0, i32 3, !dbg !2541
  %90 = load i32, i32* %89, align 8, !dbg !2541
  %91 = icmp eq i32 %90, -1, !dbg !2542
  br i1 %91, label %92, label %98, !dbg !2543

92:                                               ; preds = %87
  %93 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2544
  %94 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %93, i32 0, i32 4, !dbg !2545
  %95 = load i32, i32* %94, align 4, !dbg !2545
  %96 = icmp eq i32 %95, -1, !dbg !2546
  br i1 %96, label %97, label %98, !dbg !2547

97:                                               ; preds = %92
  br label %186, !dbg !2548

98:                                               ; preds = %92, %87
  %99 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2549
  %100 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %99, i32 0, i32 2, !dbg !2551
  %101 = load i32, i32* %100, align 4, !dbg !2551
  %102 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2552
  %103 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %102, i32 0, i32 1, !dbg !2553
  %104 = load i32, i32* %103, align 8, !dbg !2553
  %105 = icmp eq i32 %101, %104, !dbg !2554
  br i1 %105, label %106, label %123, !dbg !2555

106:                                              ; preds = %98
  %107 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2556
  %108 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %107, i32 0, i32 1, !dbg !2558
  store i32 0, i32* %108, align 8, !dbg !2559
  %109 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2560
  %110 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %109, i32 0, i32 2, !dbg !2561
  store i32 0, i32* %110, align 4, !dbg !2562
  %111 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2563
  %112 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %111, i32 0, i32 3, !dbg !2565
  %113 = load i32, i32* %112, align 8, !dbg !2565
  %114 = icmp eq i32 %113, -1, !dbg !2566
  br i1 %114, label %115, label %122, !dbg !2567

115:                                              ; preds = %106
  %116 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2568
  %117 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %116, i32 0, i32 4, !dbg !2570
  %118 = load i32, i32* %117, align 4, !dbg !2570
  %119 = call i32 @safe_close(i32 %118), !dbg !2571
  %120 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2572
  %121 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %120, i32 0, i32 4, !dbg !2573
  store i32 -1, i32* %121, align 4, !dbg !2574
  br label %122, !dbg !2575

122:                                              ; preds = %115, %106
  br label %123, !dbg !2576

123:                                              ; preds = %122, %98
  %124 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2577
  %125 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %124, i32 0, i32 3, !dbg !2579
  %126 = load i32, i32* %125, align 8, !dbg !2579
  %127 = icmp ne i32 %126, -1, !dbg !2580
  br i1 %127, label %128, label %152, !dbg !2581

128:                                              ; preds = %123
  %129 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2582
  %130 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %129, i32 0, i32 1, !dbg !2585
  %131 = load i32, i32* %130, align 8, !dbg !2585
  %132 = sext i32 %131 to i64, !dbg !2582
  %133 = icmp ne i64 %132, 16384, !dbg !2586
  br i1 %133, label %134, label %151, !dbg !2587

134:                                              ; preds = %128
  %135 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2588
  %136 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %135, i32 0, i32 3, !dbg !2588
  %137 = load i32, i32* %136, align 8, !dbg !2588
  %138 = srem i32 %137, 64, !dbg !2588
  %139 = zext i32 %138 to i64, !dbg !2588
  %140 = shl i64 1, %139, !dbg !2588
  %141 = load %struct.__sigset_t*, %struct.__sigset_t** %3, align 8, !dbg !2588
  %142 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %141, i32 0, i32 0, !dbg !2588
  %143 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2588
  %144 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %143, i32 0, i32 3, !dbg !2588
  %145 = load i32, i32* %144, align 8, !dbg !2588
  %146 = sdiv i32 %145, 64, !dbg !2588
  %147 = sext i32 %146 to i64, !dbg !2588
  %148 = getelementptr inbounds [16 x i64], [16 x i64]* %142, i64 0, i64 %147, !dbg !2588
  %149 = load i64, i64* %148, align 8, !dbg !2588
  %150 = or i64 %149, %140, !dbg !2588
  store i64 %150, i64* %148, align 8, !dbg !2588
  br label %151, !dbg !2588

151:                                              ; preds = %134, %128
  br label %152, !dbg !2589

152:                                              ; preds = %151, %123
  %153 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2590
  %154 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %153, i32 0, i32 4, !dbg !2592
  %155 = load i32, i32* %154, align 4, !dbg !2592
  %156 = icmp ne i32 %155, -1, !dbg !2593
  br i1 %156, label %157, label %185, !dbg !2594

157:                                              ; preds = %152
  %158 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2595
  %159 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %158, i32 0, i32 1, !dbg !2598
  %160 = load i32, i32* %159, align 8, !dbg !2598
  %161 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2599
  %162 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %161, i32 0, i32 2, !dbg !2600
  %163 = load i32, i32* %162, align 4, !dbg !2600
  %164 = icmp sgt i32 %160, %163, !dbg !2601
  br i1 %164, label %165, label %184, !dbg !2602

165:                                              ; preds = %157
  %166 = load i32, i32* %6, align 4, !dbg !2603
  %167 = add nsw i32 %166, 1, !dbg !2603
  store i32 %167, i32* %6, align 4, !dbg !2603
  %168 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2605
  %169 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %168, i32 0, i32 4, !dbg !2605
  %170 = load i32, i32* %169, align 4, !dbg !2605
  %171 = srem i32 %170, 64, !dbg !2605
  %172 = zext i32 %171 to i64, !dbg !2605
  %173 = shl i64 1, %172, !dbg !2605
  %174 = load %struct.__sigset_t*, %struct.__sigset_t** %4, align 8, !dbg !2605
  %175 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %174, i32 0, i32 0, !dbg !2605
  %176 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2605
  %177 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %176, i32 0, i32 4, !dbg !2605
  %178 = load i32, i32* %177, align 4, !dbg !2605
  %179 = sdiv i32 %178, 64, !dbg !2605
  %180 = sext i32 %179 to i64, !dbg !2605
  %181 = getelementptr inbounds [16 x i64], [16 x i64]* %175, i64 0, i64 %180, !dbg !2605
  %182 = load i64, i64* %181, align 8, !dbg !2605
  %183 = or i64 %182, %173, !dbg !2605
  store i64 %183, i64* %181, align 8, !dbg !2605
  br label %184, !dbg !2606

184:                                              ; preds = %165, %157
  br label %185, !dbg !2607

185:                                              ; preds = %184, %152
  br label %186, !dbg !2608

186:                                              ; preds = %185, %97, %86
  %187 = load %struct.io_buffer*, %struct.io_buffer** %1, align 8, !dbg !2609
  %188 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %187, i32 0, i32 0, !dbg !2610
  %189 = load %struct.io_buffer*, %struct.io_buffer** %188, align 8, !dbg !2610
  store %struct.io_buffer* %189, %struct.io_buffer** %1, align 8, !dbg !2611
  br label %74, !dbg !2612, !llvm.loop !2613

190:                                              ; preds = %74
  %191 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i32 0, i32 0, !dbg !2615
  store i64 0, i64* %191, align 8, !dbg !2616
  %192 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i32 0, i32 1, !dbg !2617
  store i64 0, i64* %192, align 8, !dbg !2618
  %193 = load i32, i32* %7, align 4, !dbg !2619
  %194 = add nsw i32 %193, 1, !dbg !2620
  %195 = load %struct.__sigset_t*, %struct.__sigset_t** %3, align 8, !dbg !2621
  %196 = load %struct.__sigset_t*, %struct.__sigset_t** %4, align 8, !dbg !2622
  %197 = load i32, i32* %6, align 4, !dbg !2623
  %198 = icmp ne i32 %197, 0, !dbg !2623
  br i1 %198, label %199, label %200, !dbg !2623

199:                                              ; preds = %190
  br label %201, !dbg !2623

200:                                              ; preds = %190
  br label %201, !dbg !2623

201:                                              ; preds = %200, %199
  %202 = phi %struct.timeval* [ null, %199 ], [ %2, %200 ], !dbg !2623
  %203 = call i32 @select(i32 %194, %struct.__sigset_t* %195, %struct.__sigset_t* %196, %struct.__sigset_t* null, %struct.timeval* %202), !dbg !2624
  store i32 %203, i32* %5, align 4, !dbg !2625
  %204 = load i32, i32* %5, align 4, !dbg !2626
  %205 = icmp sle i32 %204, 0, !dbg !2628
  br i1 %205, label %206, label %217, !dbg !2629

206:                                              ; preds = %201
  %207 = load i32, i32* %5, align 4, !dbg !2630
  %208 = icmp eq i32 %207, 0, !dbg !2633
  br i1 %208, label %209, label %210, !dbg !2634

209:                                              ; preds = %206
  br label %224, !dbg !2635

210:                                              ; preds = %206
  %211 = call i32* @__errno_location() #14, !dbg !2636
  %212 = load i32, i32* %211, align 4, !dbg !2636
  %213 = icmp eq i32 %212, 4, !dbg !2638
  br i1 %213, label %214, label %215, !dbg !2639

214:                                              ; preds = %210
  br label %56, !dbg !2640, !llvm.loop !2641

215:                                              ; preds = %210
  %216 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14.23, i64 0, i64 0)) #13, !dbg !2644
  call void (i32, i8*, ...) @error(i32 1, i8* %216) #16, !dbg !2645
  unreachable, !dbg !2645

217:                                              ; preds = %201
  %218 = load %struct.__sigset_t*, %struct.__sigset_t** %3, align 8, !dbg !2646
  %219 = load %struct.__sigset_t*, %struct.__sigset_t** %4, align 8, !dbg !2648
  %220 = call i32 @perform_io(%struct.__sigset_t* %218, %struct.__sigset_t* %219, %struct.command_status* null), !dbg !2649
  %221 = icmp ne i32 %220, 0, !dbg !2650
  br i1 %221, label %222, label %223, !dbg !2651

222:                                              ; preds = %217
  br label %224, !dbg !2652

223:                                              ; preds = %217
  br label %56, !dbg !2653, !llvm.loop !2641

224:                                              ; preds = %222, %209
  %225 = load %struct.__sigset_t*, %struct.__sigset_t** %3, align 8, !dbg !2654
  %226 = bitcast %struct.__sigset_t* %225 to i8*, !dbg !2654
  call void @efree(i8* %226), !dbg !2655
  %227 = load %struct.__sigset_t*, %struct.__sigset_t** %4, align 8, !dbg !2656
  %228 = bitcast %struct.__sigset_t* %227 to i8*, !dbg !2656
  call void @efree(i8* %228), !dbg !2657
  br label %229, !dbg !2658

229:                                              ; preds = %224, %40
  ret void, !dbg !2658
}

; Function Attrs: nounwind
declare dso_local i32 @killpg(i32, i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @safe_close(i32 %0) #0 !dbg !2659 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2660, metadata !DIExpression()), !dbg !2661
  %4 = load i32, i32* %3, align 4, !dbg !2662
  %5 = icmp slt i32 %4, 3, !dbg !2664
  br i1 %5, label %10, label %6, !dbg !2665

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4, !dbg !2666
  %8 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !2667
  %9 = icmp eq i32 %7, %8, !dbg !2668
  br i1 %9, label %10, label %12, !dbg !2669

10:                                               ; preds = %6, %1
  %11 = call i32* @__errno_location() #14, !dbg !2670
  store i32 22, i32* %11, align 4, !dbg !2672
  store i32 -1, i32* %2, align 4, !dbg !2673
  br label %15, !dbg !2673

12:                                               ; preds = %6
  %13 = load i32, i32* %3, align 4, !dbg !2674
  %14 = call i32 @close(i32 %13), !dbg !2675
  store i32 %14, i32* %2, align 4, !dbg !2676
  br label %15, !dbg !2676

15:                                               ; preds = %12, %10
  %16 = load i32, i32* %2, align 4, !dbg !2677
  ret i32 %16, !dbg !2677
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @perform_io(%struct.__sigset_t* %0, %struct.__sigset_t* %1, %struct.command_status* %2) #0 !dbg !2678 {
  %4 = alloca %struct.__sigset_t*, align 8
  %5 = alloca %struct.__sigset_t*, align 8
  %6 = alloca %struct.command_status*, align 8
  %7 = alloca %struct.io_buffer*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.__sigset_t* %0, %struct.__sigset_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.__sigset_t** %4, metadata !2686, metadata !DIExpression()), !dbg !2687
  store %struct.__sigset_t* %1, %struct.__sigset_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.__sigset_t** %5, metadata !2688, metadata !DIExpression()), !dbg !2689
  store %struct.command_status* %2, %struct.command_status** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.command_status** %6, metadata !2690, metadata !DIExpression()), !dbg !2691
  call void @llvm.dbg.declare(metadata %struct.io_buffer** %7, metadata !2692, metadata !DIExpression()), !dbg !2693
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2694, metadata !DIExpression()), !dbg !2695
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2696, metadata !DIExpression()), !dbg !2697
  store i32 0, i32* %9, align 4, !dbg !2697
  %10 = load %struct.io_buffer*, %struct.io_buffer** @iobufs, align 8, !dbg !2698
  store %struct.io_buffer* %10, %struct.io_buffer** %7, align 8, !dbg !2700
  br label %11, !dbg !2701

11:                                               ; preds = %221, %3
  %12 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2702
  %13 = icmp ne %struct.io_buffer* %12, null, !dbg !2704
  br i1 %13, label %14, label %225, !dbg !2704

14:                                               ; preds = %11
  %15 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2705
  %16 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %15, i32 0, i32 3, !dbg !2708
  %17 = load i32, i32* %16, align 8, !dbg !2708
  %18 = icmp ne i32 %17, -1, !dbg !2709
  br i1 %18, label %19, label %116, !dbg !2710

19:                                               ; preds = %14
  %20 = load %struct.__sigset_t*, %struct.__sigset_t** %4, align 8, !dbg !2711
  %21 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %20, i32 0, i32 0, !dbg !2711
  %22 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2711
  %23 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %22, i32 0, i32 3, !dbg !2711
  %24 = load i32, i32* %23, align 8, !dbg !2711
  %25 = sdiv i32 %24, 64, !dbg !2711
  %26 = sext i32 %25 to i64, !dbg !2711
  %27 = getelementptr inbounds [16 x i64], [16 x i64]* %21, i64 0, i64 %26, !dbg !2711
  %28 = load i64, i64* %27, align 8, !dbg !2711
  %29 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2711
  %30 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %29, i32 0, i32 3, !dbg !2711
  %31 = load i32, i32* %30, align 8, !dbg !2711
  %32 = srem i32 %31, 64, !dbg !2711
  %33 = zext i32 %32 to i64, !dbg !2711
  %34 = shl i64 1, %33, !dbg !2711
  %35 = and i64 %28, %34, !dbg !2711
  %36 = icmp ne i64 %35, 0, !dbg !2711
  br i1 %36, label %37, label %116, !dbg !2712

37:                                               ; preds = %19
  br label %38, !dbg !2713

38:                                               ; preds = %64, %37
  %39 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2715
  %40 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %39, i32 0, i32 3, !dbg !2717
  %41 = load i32, i32* %40, align 8, !dbg !2717
  %42 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2718
  %43 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %42, i32 0, i32 6, !dbg !2719
  %44 = getelementptr inbounds [16384 x i8], [16384 x i8]* %43, i64 0, i64 0, !dbg !2718
  %45 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2720
  %46 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %45, i32 0, i32 1, !dbg !2721
  %47 = load i32, i32* %46, align 8, !dbg !2721
  %48 = sext i32 %47 to i64, !dbg !2722
  %49 = getelementptr inbounds i8, i8* %44, i64 %48, !dbg !2722
  %50 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2723
  %51 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %50, i32 0, i32 1, !dbg !2724
  %52 = load i32, i32* %51, align 8, !dbg !2724
  %53 = sext i32 %52 to i64, !dbg !2723
  %54 = sub i64 16384, %53, !dbg !2725
  %55 = call i64 @read(i32 %41, i8* %49, i64 %54), !dbg !2726
  %56 = trunc i64 %55 to i32, !dbg !2726
  store i32 %56, i32* %8, align 4, !dbg !2727
  br label %57, !dbg !2728

57:                                               ; preds = %38
  %58 = load i32, i32* %8, align 4, !dbg !2729
  %59 = icmp eq i32 %58, -1, !dbg !2730
  br i1 %59, label %60, label %64, !dbg !2731

60:                                               ; preds = %57
  %61 = call i32* @__errno_location() #14, !dbg !2732
  %62 = load i32, i32* %61, align 4, !dbg !2732
  %63 = icmp eq i32 %62, 4, !dbg !2733
  br label %64

64:                                               ; preds = %60, %57
  %65 = phi i1 [ false, %57 ], [ %63, %60 ], !dbg !2734
  br i1 %65, label %38, label %66, !dbg !2728, !llvm.loop !2735

66:                                               ; preds = %64
  %67 = load i32, i32* %8, align 4, !dbg !2737
  switch i32 %67, label %92 [
    i32 -1, label %68
    i32 0, label %85
  ], !dbg !2738

68:                                               ; preds = %66
  %69 = call i32* @__errno_location() #14, !dbg !2739
  %70 = load i32, i32* %69, align 4, !dbg !2739
  %71 = icmp eq i32 %70, 11, !dbg !2742
  br i1 %71, label %72, label %73, !dbg !2743

72:                                               ; preds = %68
  br label %115, !dbg !2744

73:                                               ; preds = %68
  %74 = call i32* @__errno_location() #14, !dbg !2745
  %75 = load i32, i32* %74, align 4, !dbg !2745
  %76 = icmp ne i32 %75, 6, !dbg !2747
  br i1 %76, label %77, label %84, !dbg !2748

77:                                               ; preds = %73
  %78 = call i32* @__errno_location() #14, !dbg !2749
  %79 = load i32, i32* %78, align 4, !dbg !2749
  %80 = icmp ne i32 %79, 9, !dbg !2750
  br i1 %80, label %81, label %84, !dbg !2751

81:                                               ; preds = %77
  %82 = load i32, i32* %9, align 4, !dbg !2752
  %83 = add nsw i32 %82, 1, !dbg !2752
  store i32 %83, i32* %9, align 4, !dbg !2752
  br label %115, !dbg !2754

84:                                               ; preds = %77, %73
  br label %85, !dbg !2755

85:                                               ; preds = %66, %84
  %86 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2756
  %87 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %86, i32 0, i32 3, !dbg !2757
  %88 = load i32, i32* %87, align 8, !dbg !2757
  %89 = call i32 @safe_close(i32 %88), !dbg !2758
  %90 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2759
  %91 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %90, i32 0, i32 3, !dbg !2760
  store i32 -1, i32* %91, align 8, !dbg !2761
  br label %115, !dbg !2762

92:                                               ; preds = %66
  %93 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2763
  %94 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %93, i32 0, i32 5, !dbg !2765
  %95 = load i32 (i8*, i32)*, i32 (i8*, i32)** %94, align 8, !dbg !2765
  %96 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2766
  %97 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %96, i32 0, i32 6, !dbg !2767
  %98 = getelementptr inbounds [16384 x i8], [16384 x i8]* %97, i64 0, i64 0, !dbg !2766
  %99 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2768
  %100 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %99, i32 0, i32 1, !dbg !2769
  %101 = load i32, i32* %100, align 8, !dbg !2769
  %102 = sext i32 %101 to i64, !dbg !2770
  %103 = getelementptr inbounds i8, i8* %98, i64 %102, !dbg !2770
  %104 = load i32, i32* %8, align 4, !dbg !2771
  %105 = call i32 %95(i8* %103, i32 %104), !dbg !2763
  %106 = icmp ne i32 %105, 0, !dbg !2763
  br i1 %106, label %109, label %107, !dbg !2772

107:                                              ; preds = %92
  %108 = load i32, i32* @child, align 4, !dbg !2773
  call void @terminate_child(i32 %108, i32 1), !dbg !2774
  br label %109, !dbg !2774

109:                                              ; preds = %107, %92
  %110 = load i32, i32* %8, align 4, !dbg !2775
  %111 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2776
  %112 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %111, i32 0, i32 1, !dbg !2777
  %113 = load i32, i32* %112, align 8, !dbg !2778
  %114 = add nsw i32 %113, %110, !dbg !2778
  store i32 %114, i32* %112, align 8, !dbg !2778
  br label %115, !dbg !2779

115:                                              ; preds = %109, %85, %81, %72
  br label %116, !dbg !2780

116:                                              ; preds = %115, %19, %14
  %117 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2781
  %118 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %117, i32 0, i32 4, !dbg !2783
  %119 = load i32, i32* %118, align 4, !dbg !2783
  %120 = icmp ne i32 %119, -1, !dbg !2784
  br i1 %120, label %121, label %220, !dbg !2785

121:                                              ; preds = %116
  %122 = load %struct.__sigset_t*, %struct.__sigset_t** %5, align 8, !dbg !2786
  %123 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %122, i32 0, i32 0, !dbg !2786
  %124 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2786
  %125 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %124, i32 0, i32 4, !dbg !2786
  %126 = load i32, i32* %125, align 4, !dbg !2786
  %127 = sdiv i32 %126, 64, !dbg !2786
  %128 = sext i32 %127 to i64, !dbg !2786
  %129 = getelementptr inbounds [16 x i64], [16 x i64]* %123, i64 0, i64 %128, !dbg !2786
  %130 = load i64, i64* %129, align 8, !dbg !2786
  %131 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2786
  %132 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %131, i32 0, i32 4, !dbg !2786
  %133 = load i32, i32* %132, align 4, !dbg !2786
  %134 = srem i32 %133, 64, !dbg !2786
  %135 = zext i32 %134 to i64, !dbg !2786
  %136 = shl i64 1, %135, !dbg !2786
  %137 = and i64 %130, %136, !dbg !2786
  %138 = icmp ne i64 %137, 0, !dbg !2786
  br i1 %138, label %139, label %220, !dbg !2787

139:                                              ; preds = %121
  br label %140, !dbg !2788

140:                                              ; preds = %169, %139
  %141 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2790
  %142 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %141, i32 0, i32 4, !dbg !2792
  %143 = load i32, i32* %142, align 4, !dbg !2792
  %144 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2793
  %145 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %144, i32 0, i32 6, !dbg !2794
  %146 = getelementptr inbounds [16384 x i8], [16384 x i8]* %145, i64 0, i64 0, !dbg !2793
  %147 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2795
  %148 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %147, i32 0, i32 2, !dbg !2796
  %149 = load i32, i32* %148, align 4, !dbg !2796
  %150 = sext i32 %149 to i64, !dbg !2797
  %151 = getelementptr inbounds i8, i8* %146, i64 %150, !dbg !2797
  %152 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2798
  %153 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %152, i32 0, i32 1, !dbg !2799
  %154 = load i32, i32* %153, align 8, !dbg !2799
  %155 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2800
  %156 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %155, i32 0, i32 2, !dbg !2801
  %157 = load i32, i32* %156, align 4, !dbg !2801
  %158 = sub nsw i32 %154, %157, !dbg !2802
  %159 = sext i32 %158 to i64, !dbg !2798
  %160 = call i64 @write(i32 %143, i8* %151, i64 %159), !dbg !2803
  %161 = trunc i64 %160 to i32, !dbg !2803
  store i32 %161, i32* %8, align 4, !dbg !2804
  br label %162, !dbg !2805

162:                                              ; preds = %140
  %163 = load i32, i32* %8, align 4, !dbg !2806
  %164 = icmp eq i32 %163, -1, !dbg !2807
  br i1 %164, label %165, label %169, !dbg !2808

165:                                              ; preds = %162
  %166 = call i32* @__errno_location() #14, !dbg !2809
  %167 = load i32, i32* %166, align 4, !dbg !2809
  %168 = icmp eq i32 %167, 4, !dbg !2810
  br label %169

169:                                              ; preds = %165, %162
  %170 = phi i1 [ false, %162 ], [ %168, %165 ], !dbg !2811
  br i1 %170, label %140, label %171, !dbg !2805, !llvm.loop !2812

171:                                              ; preds = %169
  %172 = load i32, i32* %8, align 4, !dbg !2814
  %173 = icmp eq i32 %172, -1, !dbg !2816
  br i1 %173, label %174, label %213, !dbg !2817

174:                                              ; preds = %171
  %175 = call i32* @__errno_location() #14, !dbg !2818
  %176 = load i32, i32* %175, align 4, !dbg !2818
  %177 = icmp eq i32 %176, 32, !dbg !2821
  br i1 %177, label %186, label %178, !dbg !2822

178:                                              ; preds = %174
  %179 = call i32* @__errno_location() #14, !dbg !2823
  %180 = load i32, i32* %179, align 4, !dbg !2823
  %181 = icmp eq i32 %180, 6, !dbg !2824
  br i1 %181, label %186, label %182, !dbg !2825

182:                                              ; preds = %178
  %183 = call i32* @__errno_location() #14, !dbg !2826
  %184 = load i32, i32* %183, align 4, !dbg !2826
  %185 = icmp eq i32 %184, 9, !dbg !2827
  br i1 %185, label %186, label %205, !dbg !2828

186:                                              ; preds = %182, %178, %174
  %187 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2829
  %188 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %187, i32 0, i32 3, !dbg !2832
  %189 = load i32, i32* %188, align 8, !dbg !2832
  %190 = icmp ne i32 %189, -1, !dbg !2833
  br i1 %190, label %191, label %198, !dbg !2834

191:                                              ; preds = %186
  %192 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2835
  %193 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %192, i32 0, i32 3, !dbg !2837
  %194 = load i32, i32* %193, align 8, !dbg !2837
  %195 = call i32 @safe_close(i32 %194), !dbg !2838
  %196 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2839
  %197 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %196, i32 0, i32 3, !dbg !2840
  store i32 -1, i32* %197, align 8, !dbg !2841
  br label %198, !dbg !2842

198:                                              ; preds = %191, %186
  %199 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2843
  %200 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %199, i32 0, i32 4, !dbg !2844
  %201 = load i32, i32* %200, align 4, !dbg !2844
  %202 = call i32 @safe_close(i32 %201), !dbg !2845
  %203 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2846
  %204 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %203, i32 0, i32 4, !dbg !2847
  store i32 -1, i32* %204, align 4, !dbg !2848
  br label %221, !dbg !2849

205:                                              ; preds = %182
  %206 = call i32* @__errno_location() #14, !dbg !2850
  %207 = load i32, i32* %206, align 4, !dbg !2850
  %208 = icmp ne i32 %207, 11, !dbg !2852
  br i1 %208, label %209, label %212, !dbg !2853

209:                                              ; preds = %205
  %210 = load i32, i32* %9, align 4, !dbg !2854
  %211 = add nsw i32 %210, 1, !dbg !2854
  store i32 %211, i32* %9, align 4, !dbg !2854
  br label %212, !dbg !2855

212:                                              ; preds = %209, %205
  br label %219, !dbg !2856

213:                                              ; preds = %171
  %214 = load i32, i32* %8, align 4, !dbg !2857
  %215 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2859
  %216 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %215, i32 0, i32 2, !dbg !2860
  %217 = load i32, i32* %216, align 4, !dbg !2861
  %218 = add nsw i32 %217, %214, !dbg !2861
  store i32 %218, i32* %216, align 4, !dbg !2861
  br label %219

219:                                              ; preds = %213, %212
  br label %220, !dbg !2862

220:                                              ; preds = %219, %121, %116
  br label %221, !dbg !2863

221:                                              ; preds = %220, %198
  %222 = load %struct.io_buffer*, %struct.io_buffer** %7, align 8, !dbg !2864
  %223 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %222, i32 0, i32 0, !dbg !2865
  %224 = load %struct.io_buffer*, %struct.io_buffer** %223, align 8, !dbg !2865
  store %struct.io_buffer* %224, %struct.io_buffer** %7, align 8, !dbg !2866
  br label %11, !dbg !2867, !llvm.loop !2868

225:                                              ; preds = %11
  %226 = load i32, i32* %9, align 4, !dbg !2870
  %227 = icmp ne i32 %226, 0, !dbg !2870
  br i1 %227, label %228, label %238, !dbg !2872

228:                                              ; preds = %225
  %229 = load %struct.command_status*, %struct.command_status** %6, align 8, !dbg !2873
  %230 = icmp ne %struct.command_status* %229, null, !dbg !2874
  br i1 %230, label %231, label %238, !dbg !2875

231:                                              ; preds = %228
  %232 = load %struct.command_status*, %struct.command_status** %6, align 8, !dbg !2876
  %233 = getelementptr inbounds %struct.command_status, %struct.command_status* %232, i32 0, i32 0, !dbg !2878
  store i32 1, i32* %233, align 4, !dbg !2879
  %234 = call i32* @__errno_location() #14, !dbg !2880
  %235 = load i32, i32* %234, align 4, !dbg !2880
  %236 = load %struct.command_status*, %struct.command_status** %6, align 8, !dbg !2881
  %237 = getelementptr inbounds %struct.command_status, %struct.command_status* %236, i32 0, i32 1, !dbg !2882
  store i32 %235, i32* %237, align 4, !dbg !2883
  br label %238, !dbg !2884

238:                                              ; preds = %231, %228, %225
  %239 = load i32, i32* %9, align 4, !dbg !2885
  ret i32 %239, !dbg !2886
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @terminate_child(i32 %0, i32 %1) #0 !dbg !2887 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2890, metadata !DIExpression()), !dbg !2891
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2892, metadata !DIExpression()), !dbg !2893
  %5 = load i32, i32* %4, align 4, !dbg !2894
  %6 = icmp ne i32 %5, 0, !dbg !2894
  br i1 %6, label %7, label %15, !dbg !2896

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !2897
  %9 = call i32 @killpg(i32 %8, i32 1) #13, !dbg !2899
  %10 = load i32, i32* %3, align 4, !dbg !2900
  %11 = call i32 @killpg(i32 %10, i32 15) #13, !dbg !2901
  %12 = call i32 @sleep(i32 2), !dbg !2902
  %13 = load i32, i32* %3, align 4, !dbg !2903
  %14 = call i32 @killpg(i32 %13, i32 9) #13, !dbg !2904
  br label %23, !dbg !2905

15:                                               ; preds = %2
  %16 = load i32, i32* %3, align 4, !dbg !2906
  %17 = call i32 @kill(i32 %16, i32 1) #13, !dbg !2908
  %18 = load i32, i32* %3, align 4, !dbg !2909
  %19 = call i32 @kill(i32 %18, i32 15) #13, !dbg !2910
  %20 = call i32 @sleep(i32 2), !dbg !2911
  %21 = load i32, i32* %3, align 4, !dbg !2912
  %22 = call i32 @kill(i32 %21, i32 9) #13, !dbg !2913
  br label %23

23:                                               ; preds = %15, %7
  ret void, !dbg !2914
}

declare dso_local i32 @sleep(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sync_ttysize(i32 %0, i32 %1) #0 !dbg !2915 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.winsize, align 2
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2916, metadata !DIExpression()), !dbg !2917
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2918, metadata !DIExpression()), !dbg !2919
  call void @llvm.dbg.declare(metadata %struct.winsize* %5, metadata !2920, metadata !DIExpression()), !dbg !2928
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2929, metadata !DIExpression()), !dbg !2930
  %7 = load i32, i32* %3, align 4, !dbg !2931
  %8 = call i32 (i32, i64, ...) @ioctl(i32 %7, i64 21523, %struct.winsize* %5) #13, !dbg !2933
  %9 = icmp eq i32 %8, 0, !dbg !2934
  br i1 %9, label %10, label %20, !dbg !2935

10:                                               ; preds = %2
  %11 = load i32, i32* %4, align 4, !dbg !2936
  %12 = call i32 (i32, i64, ...) @ioctl(i32 %11, i64 21524, %struct.winsize* %5) #13, !dbg !2938
  %13 = load i32, i32* %4, align 4, !dbg !2939
  %14 = call i32 @tcgetpgrp(i32 %13) #13, !dbg !2941
  store i32 %14, i32* %6, align 4, !dbg !2942
  %15 = icmp ne i32 %14, -1, !dbg !2943
  br i1 %15, label %16, label %19, !dbg !2944

16:                                               ; preds = %10
  %17 = load i32, i32* %6, align 4, !dbg !2945
  %18 = call i32 @killpg(i32 %17, i32 28) #13, !dbg !2946
  br label %19, !dbg !2946

19:                                               ; preds = %16, %10
  br label %20, !dbg !2947

20:                                               ; preds = %19, %2
  ret void, !dbg !2948
}

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fork_pty(%struct.command_details* %0, i32* %1, i32* %2) #0 !dbg !2949 {
  %4 = alloca %struct.command_details*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.command_status, align 4
  %8 = alloca %struct.io_buffer*, align 8
  %9 = alloca [3 x [2 x i32]], align 16
  %10 = alloca i32, align 4
  %11 = alloca %struct.sigaction, align 8
  store %struct.command_details* %0, %struct.command_details** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %4, metadata !2975, metadata !DIExpression()), !dbg !2976
  store i32* %1, i32** %5, align 8
  call void @llvm.dbg.declare(metadata i32** %5, metadata !2977, metadata !DIExpression()), !dbg !2978
  store i32* %2, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !2979, metadata !DIExpression()), !dbg !2980
  call void @llvm.dbg.declare(metadata %struct.command_status* %7, metadata !2981, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.declare(metadata %struct.io_buffer** %8, metadata !2983, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.declare(metadata [3 x [2 x i32]]* %9, metadata !2985, metadata !DIExpression()), !dbg !2989
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2990, metadata !DIExpression()), !dbg !2991
  call void @llvm.dbg.declare(metadata %struct.sigaction* %11, metadata !2992, metadata !DIExpression()), !dbg !2993
  %12 = call i32 @getpgrp() #13, !dbg !2994
  store i32 %12, i32* @ppgrp, align 4, !dbg !2995
  %13 = bitcast %struct.sigaction* %11 to i8*, !dbg !2996
  call void @zero_bytes(i8* %13, i64 152), !dbg !2997
  %14 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %11, i32 0, i32 1, !dbg !2998
  %15 = call i32 @sigemptyset(%struct.__sigset_t* %14) #13, !dbg !2999
  %16 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !3000
  %17 = icmp ne i32 %16, -1, !dbg !3002
  br i1 %17, label %18, label %23, !dbg !3003

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %11, i32 0, i32 2, !dbg !3004
  store i32 268435456, i32* %19, align 8, !dbg !3006
  %20 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %11, i32 0, i32 0, !dbg !3007
  %21 = bitcast %union.anon* %20 to void (i32)**, !dbg !3007
  store void (i32)* @sigwinch, void (i32)** %21, align 8, !dbg !3008
  %22 = call i32 @sigaction(i32 28, %struct.sigaction* %11, %struct.sigaction* null) #13, !dbg !3009
  br label %23, !dbg !3010

23:                                               ; preds = %18, %3
  %24 = call i32 @sigemptyset(%struct.__sigset_t* @ttyblock) #13, !dbg !3011
  %25 = call i32 @sigaddset(%struct.__sigset_t* @ttyblock, i32 2) #13, !dbg !3012
  %26 = call i32 @sigaddset(%struct.__sigset_t* @ttyblock, i32 3) #13, !dbg !3013
  %27 = call i32 @sigaddset(%struct.__sigset_t* @ttyblock, i32 20) #13, !dbg !3014
  %28 = call i32 @sigaddset(%struct.__sigset_t* @ttyblock, i32 21) #13, !dbg !3015
  %29 = call i32 @sigaddset(%struct.__sigset_t* @ttyblock, i32 22) #13, !dbg !3016
  %30 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !3017
  %31 = getelementptr inbounds %struct.command_details, %struct.command_details* %30, i32 0, i32 9, !dbg !3017
  %32 = load i32, i32* %31, align 4, !dbg !3017
  %33 = and i32 %32, 1024, !dbg !3017
  %34 = icmp ne i32 %33, 0, !dbg !3017
  br i1 %34, label %37, label %35, !dbg !3019

35:                                               ; preds = %23
  %36 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3020
  store i32 %36, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 0), align 16, !dbg !3021
  br label %37, !dbg !3022

37:                                               ; preds = %35, %23
  %38 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3023
  store i32 %38, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 1), align 4, !dbg !3024
  %39 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3025
  store i32 %39, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 2), align 8, !dbg !3026
  %40 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !3027
  %41 = icmp ne i32 %40, -1, !dbg !3029
  br i1 %41, label %42, label %63, !dbg !3030

42:                                               ; preds = %37
  %43 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !3031
  %44 = getelementptr inbounds %struct.command_details, %struct.command_details* %43, i32 0, i32 9, !dbg !3031
  %45 = load i32, i32* %44, align 4, !dbg !3031
  %46 = and i32 %45, 1024, !dbg !3031
  %47 = icmp ne i32 %46, 0, !dbg !3031
  br i1 %47, label %53, label %48, !dbg !3034

48:                                               ; preds = %42
  %49 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !3035
  %50 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 3), align 4, !dbg !3037
  %51 = load %struct.io_buffer*, %struct.io_buffer** @iobufs, align 8, !dbg !3038
  %52 = call %struct.io_buffer* @io_buf_new(i32 %49, i32 %50, i32 (i8*, i32)* @log_ttyin, %struct.io_buffer* %51), !dbg !3039
  store %struct.io_buffer* %52, %struct.io_buffer** @iobufs, align 8, !dbg !3040
  br label %53, !dbg !3041

53:                                               ; preds = %48, %42
  %54 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 3), align 4, !dbg !3042
  %55 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !3043
  %56 = load %struct.io_buffer*, %struct.io_buffer** @iobufs, align 8, !dbg !3044
  %57 = call %struct.io_buffer* @io_buf_new(i32 %54, i32 %55, i32 (i8*, i32)* @log_ttyout, %struct.io_buffer* %56), !dbg !3045
  store %struct.io_buffer* %57, %struct.io_buffer** @iobufs, align 8, !dbg !3046
  %58 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !3047
  %59 = call i32 @tcgetpgrp(i32 %58) #13, !dbg !3048
  %60 = load i32, i32* @ppgrp, align 4, !dbg !3049
  %61 = icmp eq i32 %59, %60, !dbg !3050
  %62 = zext i1 %61 to i32, !dbg !3050
  store i32 %62, i32* @foreground, align 4, !dbg !3051
  br label %63, !dbg !3052

63:                                               ; preds = %53, %37
  %64 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 0, !dbg !3053
  %65 = bitcast [2 x i32]* %64 to i8*, !dbg !3053
  call void @llvm.memset.p0i8.i64(i8* align 16 %65, i8 0, i64 24, i1 false), !dbg !3053
  %66 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 0), align 16, !dbg !3054
  %67 = icmp eq i32 %66, -1, !dbg !3056
  br i1 %67, label %71, label %68, !dbg !3057

68:                                               ; preds = %63
  %69 = call i32 @isatty(i32 0) #13, !dbg !3058
  %70 = icmp ne i32 %69, 0, !dbg !3058
  br i1 %70, label %87, label %71, !dbg !3059

71:                                               ; preds = %68, %63
  store i32 1, i32* @pipeline, align 4, !dbg !3060
  %72 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 0, !dbg !3062
  %73 = getelementptr inbounds [2 x i32], [2 x i32]* %72, i64 0, i64 0, !dbg !3062
  %74 = call i32 @pipe(i32* %73) #13, !dbg !3064
  %75 = icmp ne i32 %74, 0, !dbg !3065
  br i1 %75, label %76, label %78, !dbg !3066

76:                                               ; preds = %71
  %77 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.30, i64 0, i64 0)) #13, !dbg !3067
  call void (i32, i8*, ...) @error(i32 1, i8* %77) #16, !dbg !3068
  unreachable, !dbg !3068

78:                                               ; preds = %71
  %79 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 0, !dbg !3069
  %80 = getelementptr inbounds [2 x i32], [2 x i32]* %79, i64 0, i64 1, !dbg !3069
  %81 = load i32, i32* %80, align 4, !dbg !3069
  %82 = load %struct.io_buffer*, %struct.io_buffer** @iobufs, align 8, !dbg !3070
  %83 = call %struct.io_buffer* @io_buf_new(i32 0, i32 %81, i32 (i8*, i32)* @log_stdin, %struct.io_buffer* %82), !dbg !3071
  store %struct.io_buffer* %83, %struct.io_buffer** @iobufs, align 8, !dbg !3072
  %84 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 0, !dbg !3073
  %85 = getelementptr inbounds [2 x i32], [2 x i32]* %84, i64 0, i64 0, !dbg !3073
  %86 = load i32, i32* %85, align 16, !dbg !3073
  store i32 %86, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 0), align 16, !dbg !3074
  br label %87, !dbg !3075

87:                                               ; preds = %78, %68
  %88 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 1), align 4, !dbg !3076
  %89 = icmp eq i32 %88, -1, !dbg !3078
  br i1 %89, label %93, label %90, !dbg !3079

90:                                               ; preds = %87
  %91 = call i32 @isatty(i32 1) #13, !dbg !3080
  %92 = icmp ne i32 %91, 0, !dbg !3080
  br i1 %92, label %109, label %93, !dbg !3081

93:                                               ; preds = %90, %87
  store i32 1, i32* @pipeline, align 4, !dbg !3082
  %94 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 1, !dbg !3084
  %95 = getelementptr inbounds [2 x i32], [2 x i32]* %94, i64 0, i64 0, !dbg !3084
  %96 = call i32 @pipe(i32* %95) #13, !dbg !3086
  %97 = icmp ne i32 %96, 0, !dbg !3087
  br i1 %97, label %98, label %100, !dbg !3088

98:                                               ; preds = %93
  %99 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.30, i64 0, i64 0)) #13, !dbg !3089
  call void (i32, i8*, ...) @error(i32 1, i8* %99) #16, !dbg !3090
  unreachable, !dbg !3090

100:                                              ; preds = %93
  %101 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 1, !dbg !3091
  %102 = getelementptr inbounds [2 x i32], [2 x i32]* %101, i64 0, i64 0, !dbg !3091
  %103 = load i32, i32* %102, align 8, !dbg !3091
  %104 = load %struct.io_buffer*, %struct.io_buffer** @iobufs, align 8, !dbg !3092
  %105 = call %struct.io_buffer* @io_buf_new(i32 %103, i32 1, i32 (i8*, i32)* @log_stdout, %struct.io_buffer* %104), !dbg !3093
  store %struct.io_buffer* %105, %struct.io_buffer** @iobufs, align 8, !dbg !3094
  %106 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 1, !dbg !3095
  %107 = getelementptr inbounds [2 x i32], [2 x i32]* %106, i64 0, i64 1, !dbg !3095
  %108 = load i32, i32* %107, align 4, !dbg !3095
  store i32 %108, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 1), align 4, !dbg !3096
  br label %109, !dbg !3097

109:                                              ; preds = %100, %90
  %110 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 2), align 8, !dbg !3098
  %111 = icmp eq i32 %110, -1, !dbg !3100
  br i1 %111, label %115, label %112, !dbg !3101

112:                                              ; preds = %109
  %113 = call i32 @isatty(i32 2) #13, !dbg !3102
  %114 = icmp ne i32 %113, 0, !dbg !3102
  br i1 %114, label %131, label %115, !dbg !3103

115:                                              ; preds = %112, %109
  %116 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 2, !dbg !3104
  %117 = getelementptr inbounds [2 x i32], [2 x i32]* %116, i64 0, i64 0, !dbg !3104
  %118 = call i32 @pipe(i32* %117) #13, !dbg !3107
  %119 = icmp ne i32 %118, 0, !dbg !3108
  br i1 %119, label %120, label %122, !dbg !3109

120:                                              ; preds = %115
  %121 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.30, i64 0, i64 0)) #13, !dbg !3110
  call void (i32, i8*, ...) @error(i32 1, i8* %121) #16, !dbg !3111
  unreachable, !dbg !3111

122:                                              ; preds = %115
  %123 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 2, !dbg !3112
  %124 = getelementptr inbounds [2 x i32], [2 x i32]* %123, i64 0, i64 0, !dbg !3112
  %125 = load i32, i32* %124, align 16, !dbg !3112
  %126 = load %struct.io_buffer*, %struct.io_buffer** @iobufs, align 8, !dbg !3113
  %127 = call %struct.io_buffer* @io_buf_new(i32 %125, i32 2, i32 (i8*, i32)* @log_stderr, %struct.io_buffer* %126), !dbg !3114
  store %struct.io_buffer* %127, %struct.io_buffer** @iobufs, align 8, !dbg !3115
  %128 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 2, !dbg !3116
  %129 = getelementptr inbounds [2 x i32], [2 x i32]* %128, i64 0, i64 1, !dbg !3116
  %130 = load i32, i32* %129, align 4, !dbg !3116
  store i32 %130, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 2), align 8, !dbg !3117
  br label %131, !dbg !3118

131:                                              ; preds = %122, %112
  %132 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %11, i32 0, i32 2, !dbg !3119
  store i32 536870912, i32* %132, align 8, !dbg !3120
  %133 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %11, i32 0, i32 0, !dbg !3121
  %134 = bitcast %union.anon* %133 to void (i32)**, !dbg !3121
  store void (i32)* @handler, void (i32)** %134, align 8, !dbg !3122
  %135 = call i32 @sigaction(i32 20, %struct.sigaction* %11, %struct.sigaction* null) #13, !dbg !3123
  %136 = load i32, i32* @foreground, align 4, !dbg !3124
  %137 = icmp ne i32 %136, 0, !dbg !3124
  br i1 %137, label %138, label %169, !dbg !3126

138:                                              ; preds = %131
  %139 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !3127
  %140 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3130
  %141 = call i32 @term_copy(i32 %139, i32 %140), !dbg !3131
  %142 = icmp ne i32 %141, 0, !dbg !3131
  br i1 %142, label %143, label %146, !dbg !3132

143:                                              ; preds = %138
  store i32 1, i32* @tty_initialized, align 4, !dbg !3133
  %144 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !3135
  %145 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3136
  call void @sync_ttysize(i32 %144, i32 %145), !dbg !3137
  br label %146, !dbg !3138

146:                                              ; preds = %143, %138
  %147 = load i32, i32* @pipeline, align 4, !dbg !3139
  %148 = icmp ne i32 %147, 0, !dbg !3139
  br i1 %148, label %168, label %149, !dbg !3141

149:                                              ; preds = %146
  store i32 1, i32* @ttymode, align 4, !dbg !3142
  br label %150, !dbg !3144

150:                                              ; preds = %160, %149
  %151 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !3145
  %152 = call i32 @term_raw(i32 %151, i32 0), !dbg !3147
  store i32 %152, i32* %10, align 4, !dbg !3148
  br label %153, !dbg !3149

153:                                              ; preds = %150
  %154 = load i32, i32* %10, align 4, !dbg !3150
  %155 = icmp ne i32 %154, 0, !dbg !3150
  br i1 %155, label %160, label %156, !dbg !3151

156:                                              ; preds = %153
  %157 = call i32* @__errno_location() #14, !dbg !3152
  %158 = load i32, i32* %157, align 4, !dbg !3152
  %159 = icmp eq i32 %158, 4, !dbg !3153
  br label %160

160:                                              ; preds = %156, %153
  %161 = phi i1 [ false, %153 ], [ %159, %156 ], !dbg !3154
  br i1 %161, label %150, label %162, !dbg !3149, !llvm.loop !3155

162:                                              ; preds = %160
  %163 = load i32, i32* %10, align 4, !dbg !3157
  %164 = icmp ne i32 %163, 0, !dbg !3157
  br i1 %164, label %167, label %165, !dbg !3159

165:                                              ; preds = %162
  %166 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.31, i64 0, i64 0)) #13, !dbg !3160
  call void (i32, i8*, ...) @error(i32 1, i8* %166) #16, !dbg !3161
  unreachable, !dbg !3161

167:                                              ; preds = %162
  br label %168, !dbg !3162

168:                                              ; preds = %167, %146
  br label %169, !dbg !3163

169:                                              ; preds = %168, %131
  %170 = call i32 @fork() #13, !dbg !3164
  store i32 %170, i32* @child, align 4, !dbg !3165
  %171 = load i32, i32* @child, align 4, !dbg !3166
  switch i32 %171, label %237 [
    i32 -1, label %172
    i32 0, label %174
  ], !dbg !3167

172:                                              ; preds = %169
  %173 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9.32, i64 0, i64 0)) #13, !dbg !3168
  call void (i32, i8*, ...) @error(i32 1, i8* %173) #16, !dbg !3170
  unreachable, !dbg !3170

174:                                              ; preds = %169
  %175 = load i32*, i32** %5, align 8, !dbg !3171
  %176 = getelementptr inbounds i32, i32* %175, i64 0, !dbg !3171
  %177 = load i32, i32* %176, align 4, !dbg !3171
  %178 = call i32 @close(i32 %177), !dbg !3172
  %179 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3173
  %180 = call i32 @close(i32 %179), !dbg !3174
  %181 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 1), align 4, !dbg !3175
  %182 = call i32 @close(i32 %181), !dbg !3176
  %183 = load i32*, i32** %5, align 8, !dbg !3177
  %184 = getelementptr inbounds i32, i32* %183, i64 1, !dbg !3177
  %185 = load i32, i32* %184, align 4, !dbg !3177
  %186 = call i32 (i32, i32, ...) @fcntl(i32 %185, i32 2, i32 1), !dbg !3178
  %187 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !3179
  %188 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3181
  %189 = call i32 @exec_setup(%struct.command_details* %187, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @slavename, i64 0, i64 0), i32 %188), !dbg !3182
  %190 = icmp eq i32 %189, 1, !dbg !3183
  br i1 %190, label %191, label %227, !dbg !3184

191:                                              ; preds = %174
  %192 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 0, !dbg !3185
  %193 = getelementptr inbounds [2 x i32], [2 x i32]* %192, i64 0, i64 1, !dbg !3185
  %194 = load i32, i32* %193, align 4, !dbg !3185
  %195 = icmp ne i32 %194, 0, !dbg !3185
  br i1 %195, label %196, label %201, !dbg !3188

196:                                              ; preds = %191
  %197 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 0, !dbg !3189
  %198 = getelementptr inbounds [2 x i32], [2 x i32]* %197, i64 0, i64 1, !dbg !3189
  %199 = load i32, i32* %198, align 4, !dbg !3189
  %200 = call i32 @close(i32 %199), !dbg !3190
  br label %201, !dbg !3190

201:                                              ; preds = %196, %191
  %202 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 1, !dbg !3191
  %203 = getelementptr inbounds [2 x i32], [2 x i32]* %202, i64 0, i64 0, !dbg !3191
  %204 = load i32, i32* %203, align 8, !dbg !3191
  %205 = icmp ne i32 %204, 0, !dbg !3191
  br i1 %205, label %206, label %211, !dbg !3193

206:                                              ; preds = %201
  %207 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 1, !dbg !3194
  %208 = getelementptr inbounds [2 x i32], [2 x i32]* %207, i64 0, i64 0, !dbg !3194
  %209 = load i32, i32* %208, align 8, !dbg !3194
  %210 = call i32 @close(i32 %209), !dbg !3195
  br label %211, !dbg !3195

211:                                              ; preds = %206, %201
  %212 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 2, !dbg !3196
  %213 = getelementptr inbounds [2 x i32], [2 x i32]* %212, i64 0, i64 0, !dbg !3196
  %214 = load i32, i32* %213, align 16, !dbg !3196
  %215 = icmp ne i32 %214, 0, !dbg !3196
  br i1 %215, label %216, label %221, !dbg !3198

216:                                              ; preds = %211
  %217 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 2, !dbg !3199
  %218 = getelementptr inbounds [2 x i32], [2 x i32]* %217, i64 0, i64 0, !dbg !3199
  %219 = load i32, i32* %218, align 16, !dbg !3199
  %220 = call i32 @close(i32 %219), !dbg !3200
  br label %221, !dbg !3200

221:                                              ; preds = %216, %211
  %222 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !3201
  %223 = load i32*, i32** %5, align 8, !dbg !3202
  %224 = getelementptr inbounds i32, i32* %223, i64 1, !dbg !3202
  %225 = load i32, i32* %224, align 4, !dbg !3202
  %226 = call i32 @exec_monitor(%struct.command_details* %222, i32 %225), !dbg !3203
  br label %227, !dbg !3204

227:                                              ; preds = %221, %174
  %228 = getelementptr inbounds %struct.command_status, %struct.command_status* %7, i32 0, i32 0, !dbg !3205
  store i32 1, i32* %228, align 4, !dbg !3206
  %229 = call i32* @__errno_location() #14, !dbg !3207
  %230 = load i32, i32* %229, align 4, !dbg !3207
  %231 = getelementptr inbounds %struct.command_status, %struct.command_status* %7, i32 0, i32 1, !dbg !3208
  store i32 %230, i32* %231, align 4, !dbg !3209
  %232 = load i32*, i32** %5, align 8, !dbg !3210
  %233 = getelementptr inbounds i32, i32* %232, i64 1, !dbg !3210
  %234 = load i32, i32* %233, align 4, !dbg !3210
  %235 = bitcast %struct.command_status* %7 to i8*, !dbg !3211
  %236 = call i64 @send(i32 %234, i8* %235, i64 8, i32 0), !dbg !3212
  call void @_exit(i32 1) #16, !dbg !3213
  unreachable, !dbg !3213

237:                                              ; preds = %169
  %238 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 0, !dbg !3214
  %239 = getelementptr inbounds [2 x i32], [2 x i32]* %238, i64 0, i64 0, !dbg !3214
  %240 = load i32, i32* %239, align 16, !dbg !3214
  %241 = icmp ne i32 %240, 0, !dbg !3214
  br i1 %241, label %242, label %247, !dbg !3216

242:                                              ; preds = %237
  %243 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 0, !dbg !3217
  %244 = getelementptr inbounds [2 x i32], [2 x i32]* %243, i64 0, i64 0, !dbg !3217
  %245 = load i32, i32* %244, align 16, !dbg !3217
  %246 = call i32 @close(i32 %245), !dbg !3218
  br label %247, !dbg !3218

247:                                              ; preds = %242, %237
  %248 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 1, !dbg !3219
  %249 = getelementptr inbounds [2 x i32], [2 x i32]* %248, i64 0, i64 1, !dbg !3219
  %250 = load i32, i32* %249, align 4, !dbg !3219
  %251 = icmp ne i32 %250, 0, !dbg !3219
  br i1 %251, label %252, label %257, !dbg !3221

252:                                              ; preds = %247
  %253 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 1, !dbg !3222
  %254 = getelementptr inbounds [2 x i32], [2 x i32]* %253, i64 0, i64 1, !dbg !3222
  %255 = load i32, i32* %254, align 4, !dbg !3222
  %256 = call i32 @close(i32 %255), !dbg !3223
  br label %257, !dbg !3223

257:                                              ; preds = %252, %247
  %258 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 2, !dbg !3224
  %259 = getelementptr inbounds [2 x i32], [2 x i32]* %258, i64 0, i64 1, !dbg !3224
  %260 = load i32, i32* %259, align 4, !dbg !3224
  %261 = icmp ne i32 %260, 0, !dbg !3224
  br i1 %261, label %262, label %267, !dbg !3226

262:                                              ; preds = %257
  %263 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %9, i64 0, i64 2, !dbg !3227
  %264 = getelementptr inbounds [2 x i32], [2 x i32]* %263, i64 0, i64 1, !dbg !3227
  %265 = load i32, i32* %264, align 4, !dbg !3227
  %266 = call i32 @close(i32 %265), !dbg !3228
  br label %267, !dbg !3228

267:                                              ; preds = %262, %257
  %268 = load %struct.io_buffer*, %struct.io_buffer** @iobufs, align 8, !dbg !3229
  store %struct.io_buffer* %268, %struct.io_buffer** %8, align 8, !dbg !3231
  br label %269, !dbg !3232

269:                                              ; preds = %333, %267
  %270 = load %struct.io_buffer*, %struct.io_buffer** %8, align 8, !dbg !3233
  %271 = icmp ne %struct.io_buffer* %270, null, !dbg !3235
  br i1 %271, label %272, label %337, !dbg !3235

272:                                              ; preds = %269
  %273 = load %struct.io_buffer*, %struct.io_buffer** %8, align 8, !dbg !3236
  %274 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %273, i32 0, i32 3, !dbg !3239
  %275 = load i32, i32* %274, align 8, !dbg !3239
  %276 = load i32*, i32** %6, align 8, !dbg !3240
  %277 = load i32, i32* %276, align 4, !dbg !3241
  %278 = icmp sgt i32 %275, %277, !dbg !3242
  br i1 %278, label %279, label %284, !dbg !3243

279:                                              ; preds = %272
  %280 = load %struct.io_buffer*, %struct.io_buffer** %8, align 8, !dbg !3244
  %281 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %280, i32 0, i32 3, !dbg !3245
  %282 = load i32, i32* %281, align 8, !dbg !3245
  %283 = load i32*, i32** %6, align 8, !dbg !3246
  store i32 %282, i32* %283, align 4, !dbg !3247
  br label %284, !dbg !3248

284:                                              ; preds = %279, %272
  %285 = load %struct.io_buffer*, %struct.io_buffer** %8, align 8, !dbg !3249
  %286 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %285, i32 0, i32 4, !dbg !3251
  %287 = load i32, i32* %286, align 4, !dbg !3251
  %288 = load i32*, i32** %6, align 8, !dbg !3252
  %289 = load i32, i32* %288, align 4, !dbg !3253
  %290 = icmp sgt i32 %287, %289, !dbg !3254
  br i1 %290, label %291, label %296, !dbg !3255

291:                                              ; preds = %284
  %292 = load %struct.io_buffer*, %struct.io_buffer** %8, align 8, !dbg !3256
  %293 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %292, i32 0, i32 4, !dbg !3257
  %294 = load i32, i32* %293, align 4, !dbg !3257
  %295 = load i32*, i32** %6, align 8, !dbg !3258
  store i32 %294, i32* %295, align 4, !dbg !3259
  br label %296, !dbg !3260

296:                                              ; preds = %291, %284
  %297 = load %struct.io_buffer*, %struct.io_buffer** %8, align 8, !dbg !3261
  %298 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %297, i32 0, i32 3, !dbg !3262
  %299 = load i32, i32* %298, align 8, !dbg !3262
  %300 = call i32 (i32, i32, ...) @fcntl(i32 %299, i32 3, i32 0), !dbg !3263
  store i32 %300, i32* %10, align 4, !dbg !3264
  %301 = load i32, i32* %10, align 4, !dbg !3265
  %302 = icmp ne i32 %301, -1, !dbg !3267
  br i1 %302, label %303, label %314, !dbg !3268

303:                                              ; preds = %296
  %304 = load i32, i32* %10, align 4, !dbg !3269
  %305 = and i32 %304, 2048, !dbg !3269
  %306 = icmp ne i32 %305, 0, !dbg !3269
  br i1 %306, label %314, label %307, !dbg !3270

307:                                              ; preds = %303
  %308 = load %struct.io_buffer*, %struct.io_buffer** %8, align 8, !dbg !3271
  %309 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %308, i32 0, i32 3, !dbg !3272
  %310 = load i32, i32* %309, align 8, !dbg !3272
  %311 = load i32, i32* %10, align 4, !dbg !3273
  %312 = or i32 %311, 2048, !dbg !3274
  %313 = call i32 (i32, i32, ...) @fcntl(i32 %310, i32 4, i32 %312), !dbg !3275
  br label %314, !dbg !3276

314:                                              ; preds = %307, %303, %296
  %315 = load %struct.io_buffer*, %struct.io_buffer** %8, align 8, !dbg !3277
  %316 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %315, i32 0, i32 4, !dbg !3278
  %317 = load i32, i32* %316, align 4, !dbg !3278
  %318 = call i32 (i32, i32, ...) @fcntl(i32 %317, i32 3, i32 0), !dbg !3279
  store i32 %318, i32* %10, align 4, !dbg !3280
  %319 = load i32, i32* %10, align 4, !dbg !3281
  %320 = icmp ne i32 %319, -1, !dbg !3283
  br i1 %320, label %321, label %332, !dbg !3284

321:                                              ; preds = %314
  %322 = load i32, i32* %10, align 4, !dbg !3285
  %323 = and i32 %322, 2048, !dbg !3285
  %324 = icmp ne i32 %323, 0, !dbg !3285
  br i1 %324, label %332, label %325, !dbg !3286

325:                                              ; preds = %321
  %326 = load %struct.io_buffer*, %struct.io_buffer** %8, align 8, !dbg !3287
  %327 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %326, i32 0, i32 4, !dbg !3288
  %328 = load i32, i32* %327, align 4, !dbg !3288
  %329 = load i32, i32* %10, align 4, !dbg !3289
  %330 = or i32 %329, 2048, !dbg !3290
  %331 = call i32 (i32, i32, ...) @fcntl(i32 %328, i32 4, i32 %330), !dbg !3291
  br label %332, !dbg !3292

332:                                              ; preds = %325, %321, %314
  br label %333, !dbg !3293

333:                                              ; preds = %332
  %334 = load %struct.io_buffer*, %struct.io_buffer** %8, align 8, !dbg !3294
  %335 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %334, i32 0, i32 0, !dbg !3295
  %336 = load %struct.io_buffer*, %struct.io_buffer** %335, align 8, !dbg !3295
  store %struct.io_buffer* %336, %struct.io_buffer** %8, align 8, !dbg !3296
  br label %269, !dbg !3297, !llvm.loop !3298

337:                                              ; preds = %269
  %338 = load i32, i32* @child, align 4, !dbg !3300
  ret i32 %338, !dbg !3301
}

; Function Attrs: nounwind
declare dso_local i32 @getpgrp() #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sigwinch(i32 %0) #0 !dbg !3302 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3303, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3305, metadata !DIExpression()), !dbg !3306
  %4 = call i32* @__errno_location() #14, !dbg !3307
  %5 = load i32, i32* %4, align 4, !dbg !3307
  store i32 %5, i32* %3, align 4, !dbg !3306
  %6 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !3308
  %7 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3309
  call void @sync_ttysize(i32 %6, i32 %7), !dbg !3310
  %8 = load i32, i32* %3, align 4, !dbg !3311
  %9 = call i32* @__errno_location() #14, !dbg !3312
  store i32 %8, i32* %9, align 4, !dbg !3313
  ret void, !dbg !3314
}

; Function Attrs: nounwind
declare dso_local i32 @sigaddset(%struct.__sigset_t*, i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @log_ttyin(i8* %0, i32 %1) #0 !dbg !3315 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.plugin_container*, align 8
  %6 = alloca %struct.__sigset_t, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3316, metadata !DIExpression()), !dbg !3317
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3318, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %5, metadata !3320, metadata !DIExpression()), !dbg !3408
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %6, metadata !3409, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3411, metadata !DIExpression()), !dbg !3412
  store i32 1, i32* %7, align 4, !dbg !3412
  %8 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @ttyblock, %struct.__sigset_t* %6) #13, !dbg !3413
  %9 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !3414
  store %struct.plugin_container* %9, %struct.plugin_container** %5, align 8, !dbg !3414
  br label %10, !dbg !3414

10:                                               ; preds = %35, %2
  %11 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3416
  %12 = icmp ne %struct.plugin_container* %11, null, !dbg !3416
  br i1 %12, label %13, label %39, !dbg !3414

13:                                               ; preds = %10
  %14 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3418
  %15 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %14, i32 0, i32 4, !dbg !3421
  %16 = bitcast %union.anon.9* %15 to %struct.io_plugin**, !dbg !3422
  %17 = load %struct.io_plugin*, %struct.io_plugin** %16, align 8, !dbg !3422
  %18 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %17, i32 0, i32 5, !dbg !3423
  %19 = load i32 (i8*, i32)*, i32 (i8*, i32)** %18, align 8, !dbg !3423
  %20 = icmp ne i32 (i8*, i32)* %19, null, !dbg !3418
  br i1 %20, label %21, label %34, !dbg !3424

21:                                               ; preds = %13
  %22 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3425
  %23 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %22, i32 0, i32 4, !dbg !3428
  %24 = bitcast %union.anon.9* %23 to %struct.io_plugin**, !dbg !3429
  %25 = load %struct.io_plugin*, %struct.io_plugin** %24, align 8, !dbg !3429
  %26 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %25, i32 0, i32 5, !dbg !3430
  %27 = load i32 (i8*, i32)*, i32 (i8*, i32)** %26, align 8, !dbg !3430
  %28 = load i8*, i8** %3, align 8, !dbg !3431
  %29 = load i32, i32* %4, align 4, !dbg !3432
  %30 = call i32 %27(i8* %28, i32 %29), !dbg !3425
  %31 = icmp ne i32 %30, 0, !dbg !3425
  br i1 %31, label %33, label %32, !dbg !3433

32:                                               ; preds = %21
  store i32 0, i32* %7, align 4, !dbg !3434
  br label %39, !dbg !3436

33:                                               ; preds = %21
  br label %34, !dbg !3437

34:                                               ; preds = %33, %13
  br label %35, !dbg !3438

35:                                               ; preds = %34
  %36 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3416
  %37 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %36, i32 0, i32 1, !dbg !3416
  %38 = load %struct.plugin_container*, %struct.plugin_container** %37, align 8, !dbg !3416
  store %struct.plugin_container* %38, %struct.plugin_container** %5, align 8, !dbg !3416
  br label %10, !dbg !3416, !llvm.loop !3439

39:                                               ; preds = %32, %10
  %40 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %6, %struct.__sigset_t* null) #13, !dbg !3441
  %41 = load i32, i32* %7, align 4, !dbg !3442
  ret i32 %41, !dbg !3443
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.io_buffer* @io_buf_new(i32 %0, i32 %1, i32 (i8*, i32)* %2, %struct.io_buffer* %3) #0 !dbg !3444 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32 (i8*, i32)*, align 8
  %8 = alloca %struct.io_buffer*, align 8
  %9 = alloca %struct.io_buffer*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3447, metadata !DIExpression()), !dbg !3448
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !3449, metadata !DIExpression()), !dbg !3450
  store i32 (i8*, i32)* %2, i32 (i8*, i32)** %7, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %7, metadata !3451, metadata !DIExpression()), !dbg !3452
  store %struct.io_buffer* %3, %struct.io_buffer** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.io_buffer** %8, metadata !3453, metadata !DIExpression()), !dbg !3454
  call void @llvm.dbg.declare(metadata %struct.io_buffer** %9, metadata !3455, metadata !DIExpression()), !dbg !3456
  %10 = call i8* @emalloc(i64 16416), !dbg !3457
  %11 = bitcast i8* %10 to %struct.io_buffer*, !dbg !3457
  store %struct.io_buffer* %11, %struct.io_buffer** %9, align 8, !dbg !3458
  %12 = load %struct.io_buffer*, %struct.io_buffer** %9, align 8, !dbg !3459
  %13 = bitcast %struct.io_buffer* %12 to i8*, !dbg !3459
  call void @zero_bytes(i8* %13, i64 16416), !dbg !3460
  %14 = load i32, i32* %5, align 4, !dbg !3461
  %15 = load %struct.io_buffer*, %struct.io_buffer** %9, align 8, !dbg !3462
  %16 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %15, i32 0, i32 3, !dbg !3463
  store i32 %14, i32* %16, align 8, !dbg !3464
  %17 = load i32, i32* %6, align 4, !dbg !3465
  %18 = load %struct.io_buffer*, %struct.io_buffer** %9, align 8, !dbg !3466
  %19 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %18, i32 0, i32 4, !dbg !3467
  store i32 %17, i32* %19, align 4, !dbg !3468
  %20 = load i32 (i8*, i32)*, i32 (i8*, i32)** %7, align 8, !dbg !3469
  %21 = load %struct.io_buffer*, %struct.io_buffer** %9, align 8, !dbg !3470
  %22 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %21, i32 0, i32 5, !dbg !3471
  store i32 (i8*, i32)* %20, i32 (i8*, i32)** %22, align 8, !dbg !3472
  %23 = load %struct.io_buffer*, %struct.io_buffer** %8, align 8, !dbg !3473
  %24 = load %struct.io_buffer*, %struct.io_buffer** %9, align 8, !dbg !3474
  %25 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %24, i32 0, i32 0, !dbg !3475
  store %struct.io_buffer* %23, %struct.io_buffer** %25, align 8, !dbg !3476
  %26 = load %struct.io_buffer*, %struct.io_buffer** %9, align 8, !dbg !3477
  ret %struct.io_buffer* %26, !dbg !3478
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @log_ttyout(i8* %0, i32 %1) #0 !dbg !3479 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.plugin_container*, align 8
  %6 = alloca %struct.__sigset_t, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3480, metadata !DIExpression()), !dbg !3481
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3482, metadata !DIExpression()), !dbg !3483
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %5, metadata !3484, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %6, metadata !3486, metadata !DIExpression()), !dbg !3487
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3488, metadata !DIExpression()), !dbg !3489
  store i32 1, i32* %7, align 4, !dbg !3489
  %8 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @ttyblock, %struct.__sigset_t* %6) #13, !dbg !3490
  %9 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !3491
  store %struct.plugin_container* %9, %struct.plugin_container** %5, align 8, !dbg !3491
  br label %10, !dbg !3491

10:                                               ; preds = %35, %2
  %11 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3493
  %12 = icmp ne %struct.plugin_container* %11, null, !dbg !3493
  br i1 %12, label %13, label %39, !dbg !3491

13:                                               ; preds = %10
  %14 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3495
  %15 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %14, i32 0, i32 4, !dbg !3498
  %16 = bitcast %union.anon.9* %15 to %struct.io_plugin**, !dbg !3499
  %17 = load %struct.io_plugin*, %struct.io_plugin** %16, align 8, !dbg !3499
  %18 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %17, i32 0, i32 6, !dbg !3500
  %19 = load i32 (i8*, i32)*, i32 (i8*, i32)** %18, align 8, !dbg !3500
  %20 = icmp ne i32 (i8*, i32)* %19, null, !dbg !3495
  br i1 %20, label %21, label %34, !dbg !3501

21:                                               ; preds = %13
  %22 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3502
  %23 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %22, i32 0, i32 4, !dbg !3505
  %24 = bitcast %union.anon.9* %23 to %struct.io_plugin**, !dbg !3506
  %25 = load %struct.io_plugin*, %struct.io_plugin** %24, align 8, !dbg !3506
  %26 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %25, i32 0, i32 6, !dbg !3507
  %27 = load i32 (i8*, i32)*, i32 (i8*, i32)** %26, align 8, !dbg !3507
  %28 = load i8*, i8** %3, align 8, !dbg !3508
  %29 = load i32, i32* %4, align 4, !dbg !3509
  %30 = call i32 %27(i8* %28, i32 %29), !dbg !3502
  %31 = icmp ne i32 %30, 0, !dbg !3502
  br i1 %31, label %33, label %32, !dbg !3510

32:                                               ; preds = %21
  store i32 0, i32* %7, align 4, !dbg !3511
  br label %39, !dbg !3513

33:                                               ; preds = %21
  br label %34, !dbg !3514

34:                                               ; preds = %33, %13
  br label %35, !dbg !3515

35:                                               ; preds = %34
  %36 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3493
  %37 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %36, i32 0, i32 1, !dbg !3493
  %38 = load %struct.plugin_container*, %struct.plugin_container** %37, align 8, !dbg !3493
  store %struct.plugin_container* %38, %struct.plugin_container** %5, align 8, !dbg !3493
  br label %10, !dbg !3493, !llvm.loop !3516

39:                                               ; preds = %32, %10
  %40 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %6, %struct.__sigset_t* null) #13, !dbg !3518
  %41 = load i32, i32* %7, align 4, !dbg !3519
  ret i32 %41, !dbg !3520
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @log_stdin(i8* %0, i32 %1) #0 !dbg !3521 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.plugin_container*, align 8
  %6 = alloca %struct.__sigset_t, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3522, metadata !DIExpression()), !dbg !3523
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3524, metadata !DIExpression()), !dbg !3525
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %5, metadata !3526, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %6, metadata !3528, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3530, metadata !DIExpression()), !dbg !3531
  store i32 1, i32* %7, align 4, !dbg !3531
  %8 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @ttyblock, %struct.__sigset_t* %6) #13, !dbg !3532
  %9 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !3533
  store %struct.plugin_container* %9, %struct.plugin_container** %5, align 8, !dbg !3533
  br label %10, !dbg !3533

10:                                               ; preds = %35, %2
  %11 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3535
  %12 = icmp ne %struct.plugin_container* %11, null, !dbg !3535
  br i1 %12, label %13, label %39, !dbg !3533

13:                                               ; preds = %10
  %14 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3537
  %15 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %14, i32 0, i32 4, !dbg !3540
  %16 = bitcast %union.anon.9* %15 to %struct.io_plugin**, !dbg !3541
  %17 = load %struct.io_plugin*, %struct.io_plugin** %16, align 8, !dbg !3541
  %18 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %17, i32 0, i32 7, !dbg !3542
  %19 = load i32 (i8*, i32)*, i32 (i8*, i32)** %18, align 8, !dbg !3542
  %20 = icmp ne i32 (i8*, i32)* %19, null, !dbg !3537
  br i1 %20, label %21, label %34, !dbg !3543

21:                                               ; preds = %13
  %22 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3544
  %23 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %22, i32 0, i32 4, !dbg !3547
  %24 = bitcast %union.anon.9* %23 to %struct.io_plugin**, !dbg !3548
  %25 = load %struct.io_plugin*, %struct.io_plugin** %24, align 8, !dbg !3548
  %26 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %25, i32 0, i32 7, !dbg !3549
  %27 = load i32 (i8*, i32)*, i32 (i8*, i32)** %26, align 8, !dbg !3549
  %28 = load i8*, i8** %3, align 8, !dbg !3550
  %29 = load i32, i32* %4, align 4, !dbg !3551
  %30 = call i32 %27(i8* %28, i32 %29), !dbg !3544
  %31 = icmp ne i32 %30, 0, !dbg !3544
  br i1 %31, label %33, label %32, !dbg !3552

32:                                               ; preds = %21
  store i32 0, i32* %7, align 4, !dbg !3553
  br label %39, !dbg !3555

33:                                               ; preds = %21
  br label %34, !dbg !3556

34:                                               ; preds = %33, %13
  br label %35, !dbg !3557

35:                                               ; preds = %34
  %36 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3535
  %37 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %36, i32 0, i32 1, !dbg !3535
  %38 = load %struct.plugin_container*, %struct.plugin_container** %37, align 8, !dbg !3535
  store %struct.plugin_container* %38, %struct.plugin_container** %5, align 8, !dbg !3535
  br label %10, !dbg !3535, !llvm.loop !3558

39:                                               ; preds = %32, %10
  %40 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %6, %struct.__sigset_t* null) #13, !dbg !3560
  %41 = load i32, i32* %7, align 4, !dbg !3561
  ret i32 %41, !dbg !3562
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @log_stdout(i8* %0, i32 %1) #0 !dbg !3563 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.plugin_container*, align 8
  %6 = alloca %struct.__sigset_t, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3564, metadata !DIExpression()), !dbg !3565
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3566, metadata !DIExpression()), !dbg !3567
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %5, metadata !3568, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %6, metadata !3570, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3572, metadata !DIExpression()), !dbg !3573
  store i32 1, i32* %7, align 4, !dbg !3573
  %8 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @ttyblock, %struct.__sigset_t* %6) #13, !dbg !3574
  %9 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !3575
  store %struct.plugin_container* %9, %struct.plugin_container** %5, align 8, !dbg !3575
  br label %10, !dbg !3575

10:                                               ; preds = %35, %2
  %11 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3577
  %12 = icmp ne %struct.plugin_container* %11, null, !dbg !3577
  br i1 %12, label %13, label %39, !dbg !3575

13:                                               ; preds = %10
  %14 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3579
  %15 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %14, i32 0, i32 4, !dbg !3582
  %16 = bitcast %union.anon.9* %15 to %struct.io_plugin**, !dbg !3583
  %17 = load %struct.io_plugin*, %struct.io_plugin** %16, align 8, !dbg !3583
  %18 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %17, i32 0, i32 8, !dbg !3584
  %19 = load i32 (i8*, i32)*, i32 (i8*, i32)** %18, align 8, !dbg !3584
  %20 = icmp ne i32 (i8*, i32)* %19, null, !dbg !3579
  br i1 %20, label %21, label %34, !dbg !3585

21:                                               ; preds = %13
  %22 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3586
  %23 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %22, i32 0, i32 4, !dbg !3589
  %24 = bitcast %union.anon.9* %23 to %struct.io_plugin**, !dbg !3590
  %25 = load %struct.io_plugin*, %struct.io_plugin** %24, align 8, !dbg !3590
  %26 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %25, i32 0, i32 8, !dbg !3591
  %27 = load i32 (i8*, i32)*, i32 (i8*, i32)** %26, align 8, !dbg !3591
  %28 = load i8*, i8** %3, align 8, !dbg !3592
  %29 = load i32, i32* %4, align 4, !dbg !3593
  %30 = call i32 %27(i8* %28, i32 %29), !dbg !3586
  %31 = icmp ne i32 %30, 0, !dbg !3586
  br i1 %31, label %33, label %32, !dbg !3594

32:                                               ; preds = %21
  store i32 0, i32* %7, align 4, !dbg !3595
  br label %39, !dbg !3597

33:                                               ; preds = %21
  br label %34, !dbg !3598

34:                                               ; preds = %33, %13
  br label %35, !dbg !3599

35:                                               ; preds = %34
  %36 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3577
  %37 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %36, i32 0, i32 1, !dbg !3577
  %38 = load %struct.plugin_container*, %struct.plugin_container** %37, align 8, !dbg !3577
  store %struct.plugin_container* %38, %struct.plugin_container** %5, align 8, !dbg !3577
  br label %10, !dbg !3577, !llvm.loop !3600

39:                                               ; preds = %32, %10
  %40 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %6, %struct.__sigset_t* null) #13, !dbg !3602
  %41 = load i32, i32* %7, align 4, !dbg !3603
  ret i32 %41, !dbg !3604
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @log_stderr(i8* %0, i32 %1) #0 !dbg !3605 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.plugin_container*, align 8
  %6 = alloca %struct.__sigset_t, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3606, metadata !DIExpression()), !dbg !3607
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3608, metadata !DIExpression()), !dbg !3609
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %5, metadata !3610, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %6, metadata !3612, metadata !DIExpression()), !dbg !3613
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3614, metadata !DIExpression()), !dbg !3615
  store i32 1, i32* %7, align 4, !dbg !3615
  %8 = call i32 @sigprocmask(i32 0, %struct.__sigset_t* @ttyblock, %struct.__sigset_t* %6) #13, !dbg !3616
  %9 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !3617
  store %struct.plugin_container* %9, %struct.plugin_container** %5, align 8, !dbg !3617
  br label %10, !dbg !3617

10:                                               ; preds = %35, %2
  %11 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3619
  %12 = icmp ne %struct.plugin_container* %11, null, !dbg !3619
  br i1 %12, label %13, label %39, !dbg !3617

13:                                               ; preds = %10
  %14 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3621
  %15 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %14, i32 0, i32 4, !dbg !3624
  %16 = bitcast %union.anon.9* %15 to %struct.io_plugin**, !dbg !3625
  %17 = load %struct.io_plugin*, %struct.io_plugin** %16, align 8, !dbg !3625
  %18 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %17, i32 0, i32 9, !dbg !3626
  %19 = load i32 (i8*, i32)*, i32 (i8*, i32)** %18, align 8, !dbg !3626
  %20 = icmp ne i32 (i8*, i32)* %19, null, !dbg !3621
  br i1 %20, label %21, label %34, !dbg !3627

21:                                               ; preds = %13
  %22 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3628
  %23 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %22, i32 0, i32 4, !dbg !3631
  %24 = bitcast %union.anon.9* %23 to %struct.io_plugin**, !dbg !3632
  %25 = load %struct.io_plugin*, %struct.io_plugin** %24, align 8, !dbg !3632
  %26 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %25, i32 0, i32 9, !dbg !3633
  %27 = load i32 (i8*, i32)*, i32 (i8*, i32)** %26, align 8, !dbg !3633
  %28 = load i8*, i8** %3, align 8, !dbg !3634
  %29 = load i32, i32* %4, align 4, !dbg !3635
  %30 = call i32 %27(i8* %28, i32 %29), !dbg !3628
  %31 = icmp ne i32 %30, 0, !dbg !3628
  br i1 %31, label %33, label %32, !dbg !3636

32:                                               ; preds = %21
  store i32 0, i32* %7, align 4, !dbg !3637
  br label %39, !dbg !3639

33:                                               ; preds = %21
  br label %34, !dbg !3640

34:                                               ; preds = %33, %13
  br label %35, !dbg !3641

35:                                               ; preds = %34
  %36 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !3619
  %37 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %36, i32 0, i32 1, !dbg !3619
  %38 = load %struct.plugin_container*, %struct.plugin_container** %37, align 8, !dbg !3619
  store %struct.plugin_container* %38, %struct.plugin_container** %5, align 8, !dbg !3619
  br label %10, !dbg !3619, !llvm.loop !3642

39:                                               ; preds = %32, %10
  %40 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %6, %struct.__sigset_t* null) #13, !dbg !3644
  %41 = load i32, i32* %7, align 4, !dbg !3645
  ret i32 %41, !dbg !3646
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @exec_monitor(%struct.command_details* %0, i32 %1) #0 !dbg !3647 {
  %3 = alloca %struct.command_details*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.command_status, align 4
  %6 = alloca %struct.timeval, align 8
  %7 = alloca %struct.__sigset_t*, align 8
  %8 = alloca %struct.sigaction, align 8
  %9 = alloca [2 x i32], align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca %struct.command_status, align 4
  store %struct.command_details* %0, %struct.command_details** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %3, metadata !3650, metadata !DIExpression()), !dbg !3651
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3652, metadata !DIExpression()), !dbg !3653
  call void @llvm.dbg.declare(metadata %struct.command_status* %5, metadata !3654, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.declare(metadata %struct.timeval* %6, metadata !3656, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.declare(metadata %struct.__sigset_t** %7, metadata !3658, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.declare(metadata %struct.sigaction* %8, metadata !3660, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.declare(metadata [2 x i32]* %9, metadata !3662, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3664, metadata !DIExpression()), !dbg !3665
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3666, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.declare(metadata i32* %12, metadata !3668, metadata !DIExpression()), !dbg !3669
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3670, metadata !DIExpression()), !dbg !3671
  store i32 1, i32* %13, align 4, !dbg !3671
  call void @llvm.dbg.declare(metadata i8* %14, metadata !3672, metadata !DIExpression()), !dbg !3673
  %16 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 3), align 4, !dbg !3674
  %17 = icmp ne i32 %16, -1, !dbg !3676
  br i1 %17, label %18, label %21, !dbg !3677

18:                                               ; preds = %2
  %19 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 3), align 4, !dbg !3678
  %20 = call i32 @close(i32 %19), !dbg !3679
  br label %21, !dbg !3679

21:                                               ; preds = %18, %2
  %22 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !3680
  %23 = icmp ne i32 %22, -1, !dbg !3682
  br i1 %23, label %24, label %27, !dbg !3683

24:                                               ; preds = %21
  %25 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !3684
  %26 = call i32 @close(i32 %25), !dbg !3685
  br label %27, !dbg !3685

27:                                               ; preds = %24, %21
  %28 = call i32 @pipe_nonblock(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0)), !dbg !3686
  %29 = icmp ne i32 %28, 0, !dbg !3688
  br i1 %29, label %30, label %32, !dbg !3689

30:                                               ; preds = %27
  %31 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.30, i64 0, i64 0)) #13, !dbg !3690
  call void (i32, i8*, ...) @error(i32 1, i8* %31) #16, !dbg !3691
  unreachable, !dbg !3691

32:                                               ; preds = %27
  %33 = bitcast %struct.sigaction* %8 to i8*, !dbg !3692
  call void @zero_bytes(i8* %33, i64 152), !dbg !3693
  %34 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %8, i32 0, i32 1, !dbg !3694
  %35 = call i32 @sigemptyset(%struct.__sigset_t* %34) #13, !dbg !3695
  %36 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %8, i32 0, i32 2, !dbg !3696
  store i32 268435456, i32* %36, align 8, !dbg !3697
  %37 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %8, i32 0, i32 0, !dbg !3698
  %38 = bitcast %union.anon* %37 to void (i32)**, !dbg !3698
  store void (i32)* null, void (i32)** %38, align 8, !dbg !3699
  %39 = call i32 @sigaction(i32 28, %struct.sigaction* %8, %struct.sigaction* null) #13, !dbg !3700
  %40 = call i32 @sigaction(i32 14, %struct.sigaction* %8, %struct.sigaction* null) #13, !dbg !3701
  %41 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %8, i32 0, i32 0, !dbg !3702
  %42 = bitcast %union.anon* %41 to void (i32)**, !dbg !3702
  store void (i32)* inttoptr (i64 1 to void (i32)*), void (i32)** %42, align 8, !dbg !3703
  %43 = call i32 @sigaction(i32 21, %struct.sigaction* %8, %struct.sigaction* null) #13, !dbg !3704
  %44 = call i32 @sigaction(i32 22, %struct.sigaction* %8, %struct.sigaction* null) #13, !dbg !3705
  %45 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %8, i32 0, i32 2, !dbg !3706
  store i32 536870912, i32* %45, align 8, !dbg !3707
  %46 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %8, i32 0, i32 0, !dbg !3708
  %47 = bitcast %union.anon* %46 to void (i32)**, !dbg !3708
  store void (i32)* @handler, void (i32)** %47, align 8, !dbg !3709
  %48 = call i32 @sigaction(i32 17, %struct.sigaction* %8, %struct.sigaction* null) #13, !dbg !3710
  %49 = call i32 @setsid() #13, !dbg !3711
  %50 = icmp eq i32 %49, -1, !dbg !3713
  br i1 %50, label %51, label %52, !dbg !3714

51:                                               ; preds = %32
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12.33, i64 0, i64 0)), !dbg !3715
  br label %445, !dbg !3717

52:                                               ; preds = %32
  %53 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3718
  %54 = icmp ne i32 %53, -1, !dbg !3720
  br i1 %54, label %55, label %62, !dbg !3721

55:                                               ; preds = %52
  %56 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3722
  %57 = call i32 (i32, i64, ...) @ioctl(i32 %56, i64 21518, i8* null) #13, !dbg !3725
  %58 = icmp ne i32 %57, 0, !dbg !3726
  br i1 %58, label %59, label %61, !dbg !3727

59:                                               ; preds = %55
  %60 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13.34, i64 0, i64 0)) #13, !dbg !3728
  call void (i32, i8*, ...) @error(i32 1, i8* %60) #16, !dbg !3729
  unreachable, !dbg !3729

61:                                               ; preds = %55
  br label %62, !dbg !3730

62:                                               ; preds = %61, %52
  %63 = load i32, i32* @pipeline, align 4, !dbg !3731
  %64 = icmp ne i32 %63, 0, !dbg !3731
  br i1 %64, label %65, label %66, !dbg !3733

65:                                               ; preds = %62
  store i32 0, i32* @foreground, align 4, !dbg !3734
  br label %66, !dbg !3735

66:                                               ; preds = %65, %62
  %67 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3736
  %68 = call i32 @pipe(i32* %67) #13, !dbg !3738
  %69 = icmp eq i32 %68, -1, !dbg !3739
  br i1 %69, label %70, label %72, !dbg !3740

70:                                               ; preds = %66
  %71 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.30, i64 0, i64 0)) #13, !dbg !3741
  call void (i32, i8*, ...) @error(i32 1, i8* %71) #16, !dbg !3742
  unreachable, !dbg !3742

72:                                               ; preds = %66
  %73 = call i32 @fork() #13, !dbg !3743
  store i32 %73, i32* @child, align 4, !dbg !3744
  %74 = load i32, i32* @child, align 4, !dbg !3745
  %75 = icmp eq i32 %74, -1, !dbg !3747
  br i1 %75, label %76, label %78, !dbg !3748

76:                                               ; preds = %72
  %77 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9.32, i64 0, i64 0)) #13, !dbg !3749
  call void (i8*, ...) @warning(i8* %77), !dbg !3751
  br label %445, !dbg !3752

78:                                               ; preds = %72
  %79 = load i32, i32* @child, align 4, !dbg !3753
  %80 = icmp eq i32 %79, 0, !dbg !3755
  br i1 %80, label %81, label %106, !dbg !3756

81:                                               ; preds = %78
  %82 = load i32, i32* %4, align 4, !dbg !3757
  %83 = call i32 @close(i32 %82), !dbg !3759
  %84 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3760
  %85 = call i32 @close(i32 %84), !dbg !3761
  %86 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 1), align 4, !dbg !3762
  %87 = call i32 @close(i32 %86), !dbg !3763
  %88 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3764
  %89 = load i32, i32* %88, align 4, !dbg !3764
  %90 = call i32 @close(i32 %89), !dbg !3765
  %91 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1, !dbg !3766
  %92 = load i32, i32* %91, align 4, !dbg !3766
  %93 = call i32 (i32, i32, ...) @fcntl(i32 %92, i32 2, i32 1), !dbg !3767
  call void @restore_signals(), !dbg !3768
  %94 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !3769
  call void @exec_pty(%struct.command_details* %94), !dbg !3770
  %95 = getelementptr inbounds %struct.command_status, %struct.command_status* %5, i32 0, i32 0, !dbg !3771
  store i32 1, i32* %95, align 4, !dbg !3772
  %96 = call i32* @__errno_location() #14, !dbg !3773
  %97 = load i32, i32* %96, align 4, !dbg !3773
  %98 = getelementptr inbounds %struct.command_status, %struct.command_status* %5, i32 0, i32 1, !dbg !3774
  store i32 %97, i32* %98, align 4, !dbg !3775
  %99 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1, !dbg !3776
  %100 = load i32, i32* %99, align 4, !dbg !3776
  %101 = bitcast %struct.command_status* %5 to i8*, !dbg !3778
  %102 = call i64 @write(i32 %100, i8* %101, i64 8), !dbg !3779
  %103 = icmp eq i64 %102, -1, !dbg !3780
  br i1 %103, label %104, label %105, !dbg !3781

104:                                              ; preds = %81
  br label %105, !dbg !3781

105:                                              ; preds = %104, %81
  call void @_exit(i32 1) #16, !dbg !3782
  unreachable, !dbg !3782

106:                                              ; preds = %78
  %107 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 1, !dbg !3783
  %108 = load i32, i32* %107, align 4, !dbg !3783
  %109 = call i32 @close(i32 %108), !dbg !3784
  %110 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 0), align 16, !dbg !3785
  %111 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3787
  %112 = icmp ne i32 %110, %111, !dbg !3788
  br i1 %112, label %113, label %116, !dbg !3789

113:                                              ; preds = %106
  %114 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 0), align 16, !dbg !3790
  %115 = call i32 @close(i32 %114), !dbg !3791
  br label %116, !dbg !3791

116:                                              ; preds = %113, %106
  %117 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 1), align 4, !dbg !3792
  %118 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3794
  %119 = icmp ne i32 %117, %118, !dbg !3795
  br i1 %119, label %120, label %123, !dbg !3796

120:                                              ; preds = %116
  %121 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 1), align 4, !dbg !3797
  %122 = call i32 @close(i32 %121), !dbg !3798
  br label %123, !dbg !3798

123:                                              ; preds = %120, %116
  %124 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 2), align 8, !dbg !3799
  %125 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3801
  %126 = icmp ne i32 %124, %125, !dbg !3802
  br i1 %126, label %127, label %130, !dbg !3803

127:                                              ; preds = %123
  %128 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 2), align 8, !dbg !3804
  %129 = call i32 @close(i32 %128), !dbg !3805
  br label %130, !dbg !3805

130:                                              ; preds = %127, %123
  %131 = load i32, i32* @child, align 4, !dbg !3806
  store i32 %131, i32* @child_pgrp, align 4, !dbg !3807
  %132 = load i32, i32* @child, align 4, !dbg !3808
  %133 = load i32, i32* @child_pgrp, align 4, !dbg !3809
  %134 = call i32 @setpgid(i32 %132, i32 %133) #13, !dbg !3810
  %135 = load i32, i32* @foreground, align 4, !dbg !3811
  %136 = icmp ne i32 %135, 0, !dbg !3811
  br i1 %136, label %137, label %152, !dbg !3813

137:                                              ; preds = %130
  br label %138, !dbg !3814

138:                                              ; preds = %149, %137
  %139 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !3816
  %140 = load i32, i32* @child_pgrp, align 4, !dbg !3818
  %141 = call i32 @tcsetpgrp(i32 %139, i32 %140) #13, !dbg !3819
  store i32 %141, i32* %12, align 4, !dbg !3820
  br label %142, !dbg !3821

142:                                              ; preds = %138
  %143 = load i32, i32* %12, align 4, !dbg !3822
  %144 = icmp eq i32 %143, -1, !dbg !3823
  br i1 %144, label %145, label %149, !dbg !3824

145:                                              ; preds = %142
  %146 = call i32* @__errno_location() #14, !dbg !3825
  %147 = load i32, i32* %146, align 4, !dbg !3825
  %148 = icmp eq i32 %147, 4, !dbg !3826
  br label %149

149:                                              ; preds = %145, %142
  %150 = phi i1 [ false, %142 ], [ %148, %145 ], !dbg !3827
  br i1 %150, label %138, label %151, !dbg !3821, !llvm.loop !3828

151:                                              ; preds = %149
  br label %152, !dbg !3830

152:                                              ; preds = %151, %130
  %153 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3831
  %154 = load i32, i32* %153, align 4, !dbg !3831
  %155 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3831
  %156 = icmp sgt i32 %154, %155, !dbg !3831
  br i1 %156, label %157, label %160, !dbg !3831

157:                                              ; preds = %152
  %158 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3831
  %159 = load i32, i32* %158, align 4, !dbg !3831
  br label %162, !dbg !3831

160:                                              ; preds = %152
  %161 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3831
  br label %162, !dbg !3831

162:                                              ; preds = %160, %157
  %163 = phi i32 [ %159, %157 ], [ %161, %160 ], !dbg !3831
  %164 = load i32, i32* %4, align 4, !dbg !3831
  %165 = icmp sgt i32 %163, %164, !dbg !3831
  br i1 %165, label %166, label %178, !dbg !3831

166:                                              ; preds = %162
  %167 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3831
  %168 = load i32, i32* %167, align 4, !dbg !3831
  %169 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3831
  %170 = icmp sgt i32 %168, %169, !dbg !3831
  br i1 %170, label %171, label %174, !dbg !3831

171:                                              ; preds = %166
  %172 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3831
  %173 = load i32, i32* %172, align 4, !dbg !3831
  br label %176, !dbg !3831

174:                                              ; preds = %166
  %175 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3831
  br label %176, !dbg !3831

176:                                              ; preds = %174, %171
  %177 = phi i32 [ %173, %171 ], [ %175, %174 ], !dbg !3831
  br label %180, !dbg !3831

178:                                              ; preds = %162
  %179 = load i32, i32* %4, align 4, !dbg !3831
  br label %180, !dbg !3831

180:                                              ; preds = %178, %176
  %181 = phi i32 [ %177, %176 ], [ %179, %178 ], !dbg !3831
  store i32 %181, i32* %10, align 4, !dbg !3832
  %182 = load i32, i32* %10, align 4, !dbg !3833
  %183 = add nsw i32 %182, 1, !dbg !3833
  %184 = add nsw i32 %183, 63, !dbg !3833
  %185 = sdiv i32 %184, 64, !dbg !3833
  %186 = sext i32 %185 to i64, !dbg !3833
  %187 = call i8* @emalloc2(i64 %186, i64 8), !dbg !3834
  %188 = bitcast i8* %187 to %struct.__sigset_t*, !dbg !3835
  store %struct.__sigset_t* %188, %struct.__sigset_t** %7, align 8, !dbg !3836
  %189 = load %struct.__sigset_t*, %struct.__sigset_t** %7, align 8, !dbg !3837
  %190 = bitcast %struct.__sigset_t* %189 to i8*, !dbg !3837
  %191 = load i32, i32* %10, align 4, !dbg !3838
  %192 = add nsw i32 %191, 1, !dbg !3838
  %193 = add nsw i32 %192, 63, !dbg !3838
  %194 = sdiv i32 %193, 64, !dbg !3838
  %195 = sext i32 %194 to i64, !dbg !3838
  %196 = mul i64 %195, 8, !dbg !3839
  call void @zero_bytes(i8* %190, i64 %196), !dbg !3840
  %197 = bitcast %struct.command_status* %5 to i8*, !dbg !3841
  call void @zero_bytes(i8* %197, i64 8), !dbg !3842
  %198 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i32 0, i32 0, !dbg !3843
  store i64 0, i64* %198, align 8, !dbg !3844
  %199 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i32 0, i32 1, !dbg !3845
  store i64 0, i64* %199, align 8, !dbg !3846
  br label %200, !dbg !3847

200:                                              ; preds = %434, %426, %419, %371, %338, %324, %293, %180
  %201 = load i32, i32* %4, align 4, !dbg !3848
  %202 = srem i32 %201, 64, !dbg !3848
  %203 = zext i32 %202 to i64, !dbg !3848
  %204 = shl i64 1, %203, !dbg !3848
  %205 = load %struct.__sigset_t*, %struct.__sigset_t** %7, align 8, !dbg !3848
  %206 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %205, i32 0, i32 0, !dbg !3848
  %207 = load i32, i32* %4, align 4, !dbg !3848
  %208 = sdiv i32 %207, 64, !dbg !3848
  %209 = sext i32 %208 to i64, !dbg !3848
  %210 = getelementptr inbounds [16 x i64], [16 x i64]* %206, i64 0, i64 %209, !dbg !3848
  %211 = load i64, i64* %210, align 8, !dbg !3848
  %212 = or i64 %211, %204, !dbg !3848
  store i64 %212, i64* %210, align 8, !dbg !3848
  %213 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3852
  %214 = srem i32 %213, 64, !dbg !3852
  %215 = zext i32 %214 to i64, !dbg !3852
  %216 = shl i64 1, %215, !dbg !3852
  %217 = load %struct.__sigset_t*, %struct.__sigset_t** %7, align 8, !dbg !3852
  %218 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %217, i32 0, i32 0, !dbg !3852
  %219 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3852
  %220 = sdiv i32 %219, 64, !dbg !3852
  %221 = sext i32 %220 to i64, !dbg !3852
  %222 = getelementptr inbounds [16 x i64], [16 x i64]* %218, i64 0, i64 %221, !dbg !3852
  %223 = load i64, i64* %222, align 8, !dbg !3852
  %224 = or i64 %223, %216, !dbg !3852
  store i64 %224, i64* %222, align 8, !dbg !3852
  %225 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3853
  %226 = load i32, i32* %225, align 4, !dbg !3853
  %227 = icmp ne i32 %226, -1, !dbg !3855
  br i1 %227, label %228, label %243, !dbg !3856

228:                                              ; preds = %200
  %229 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3857
  %230 = load i32, i32* %229, align 4, !dbg !3857
  %231 = srem i32 %230, 64, !dbg !3857
  %232 = zext i32 %231 to i64, !dbg !3857
  %233 = shl i64 1, %232, !dbg !3857
  %234 = load %struct.__sigset_t*, %struct.__sigset_t** %7, align 8, !dbg !3857
  %235 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %234, i32 0, i32 0, !dbg !3857
  %236 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3857
  %237 = load i32, i32* %236, align 4, !dbg !3857
  %238 = sdiv i32 %237, 64, !dbg !3857
  %239 = sext i32 %238 to i64, !dbg !3857
  %240 = getelementptr inbounds [16 x i64], [16 x i64]* %235, i64 0, i64 %239, !dbg !3857
  %241 = load i64, i64* %240, align 8, !dbg !3857
  %242 = or i64 %241, %233, !dbg !3857
  store i64 %242, i64* %240, align 8, !dbg !3857
  br label %243, !dbg !3857

243:                                              ; preds = %228, %200
  %244 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3858
  %245 = load i32, i32* %244, align 4, !dbg !3858
  %246 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3858
  %247 = icmp sgt i32 %245, %246, !dbg !3858
  br i1 %247, label %248, label %251, !dbg !3858

248:                                              ; preds = %243
  %249 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3858
  %250 = load i32, i32* %249, align 4, !dbg !3858
  br label %253, !dbg !3858

251:                                              ; preds = %243
  %252 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3858
  br label %253, !dbg !3858

253:                                              ; preds = %251, %248
  %254 = phi i32 [ %250, %248 ], [ %252, %251 ], !dbg !3858
  %255 = load i32, i32* %4, align 4, !dbg !3858
  %256 = icmp sgt i32 %254, %255, !dbg !3858
  br i1 %256, label %257, label %269, !dbg !3858

257:                                              ; preds = %253
  %258 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3858
  %259 = load i32, i32* %258, align 4, !dbg !3858
  %260 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3858
  %261 = icmp sgt i32 %259, %260, !dbg !3858
  br i1 %261, label %262, label %265, !dbg !3858

262:                                              ; preds = %257
  %263 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3858
  %264 = load i32, i32* %263, align 4, !dbg !3858
  br label %267, !dbg !3858

265:                                              ; preds = %257
  %266 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3858
  br label %267, !dbg !3858

267:                                              ; preds = %265, %262
  %268 = phi i32 [ %264, %262 ], [ %266, %265 ], !dbg !3858
  br label %271, !dbg !3858

269:                                              ; preds = %253
  %270 = load i32, i32* %4, align 4, !dbg !3858
  br label %271, !dbg !3858

271:                                              ; preds = %269, %267
  %272 = phi i32 [ %268, %267 ], [ %270, %269 ], !dbg !3858
  store i32 %272, i32* %10, align 4, !dbg !3859
  %273 = load i32, i32* %10, align 4, !dbg !3860
  %274 = add nsw i32 %273, 1, !dbg !3861
  %275 = load %struct.__sigset_t*, %struct.__sigset_t** %7, align 8, !dbg !3862
  %276 = load i32, i32* %13, align 4, !dbg !3863
  %277 = icmp ne i32 %276, 0, !dbg !3863
  br i1 %277, label %278, label %279, !dbg !3863

278:                                              ; preds = %271
  br label %280, !dbg !3863

279:                                              ; preds = %271
  br label %280, !dbg !3863

280:                                              ; preds = %279, %278
  %281 = phi %struct.timeval* [ null, %278 ], [ %6, %279 ], !dbg !3863
  %282 = call i32 @select(i32 %274, %struct.__sigset_t* %275, %struct.__sigset_t* null, %struct.__sigset_t* null, %struct.timeval* %281), !dbg !3864
  store i32 %282, i32* %11, align 4, !dbg !3865
  %283 = load i32, i32* %11, align 4, !dbg !3866
  %284 = icmp sle i32 %283, 0, !dbg !3868
  br i1 %284, label %285, label %296, !dbg !3869

285:                                              ; preds = %280
  %286 = load i32, i32* %11, align 4, !dbg !3870
  %287 = icmp eq i32 %286, 0, !dbg !3873
  br i1 %287, label %288, label %289, !dbg !3874

288:                                              ; preds = %285
  br label %435, !dbg !3875

289:                                              ; preds = %285
  %290 = call i32* @__errno_location() #14, !dbg !3876
  %291 = load i32, i32* %290, align 4, !dbg !3876
  %292 = icmp eq i32 %291, 4, !dbg !3878
  br i1 %292, label %293, label %294, !dbg !3879

293:                                              ; preds = %289
  br label %200, !dbg !3880, !llvm.loop !3881

294:                                              ; preds = %289
  %295 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14.23, i64 0, i64 0)) #13, !dbg !3884
  call void (i32, i8*, ...) @error(i32 1, i8* %295) #16, !dbg !3885
  unreachable, !dbg !3885

296:                                              ; preds = %280
  %297 = load %struct.__sigset_t*, %struct.__sigset_t** %7, align 8, !dbg !3886
  %298 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %297, i32 0, i32 0, !dbg !3886
  %299 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3886
  %300 = sdiv i32 %299, 64, !dbg !3886
  %301 = sext i32 %300 to i64, !dbg !3886
  %302 = getelementptr inbounds [16 x i64], [16 x i64]* %298, i64 0, i64 %301, !dbg !3886
  %303 = load i64, i64* %302, align 8, !dbg !3886
  %304 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3886
  %305 = srem i32 %304, 64, !dbg !3886
  %306 = zext i32 %305 to i64, !dbg !3886
  %307 = shl i64 1, %306, !dbg !3886
  %308 = and i64 %303, %307, !dbg !3886
  %309 = icmp ne i64 %308, 0, !dbg !3886
  br i1 %309, label %310, label %339, !dbg !3888

310:                                              ; preds = %296
  %311 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @signal_pipe, i64 0, i64 0), align 4, !dbg !3889
  %312 = call i64 @read(i32 %311, i8* %14, i64 1), !dbg !3891
  %313 = trunc i64 %312 to i32, !dbg !3891
  store i32 %313, i32* %11, align 4, !dbg !3892
  %314 = load i32, i32* %11, align 4, !dbg !3893
  %315 = icmp eq i32 %314, -1, !dbg !3895
  br i1 %315, label %316, label %327, !dbg !3896

316:                                              ; preds = %310
  %317 = call i32* @__errno_location() #14, !dbg !3897
  %318 = load i32, i32* %317, align 4, !dbg !3897
  %319 = icmp eq i32 %318, 4, !dbg !3900
  br i1 %319, label %324, label %320, !dbg !3901

320:                                              ; preds = %316
  %321 = call i32* @__errno_location() #14, !dbg !3902
  %322 = load i32, i32* %321, align 4, !dbg !3902
  %323 = icmp eq i32 %322, 11, !dbg !3903
  br i1 %323, label %324, label %325, !dbg !3904

324:                                              ; preds = %320, %316
  br label %200, !dbg !3905, !llvm.loop !3881

325:                                              ; preds = %320
  %326 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !3906
  call void (i8*, ...) @warning(i8* %326), !dbg !3907
  br label %435, !dbg !3908

327:                                              ; preds = %310
  %328 = load i8, i8* %14, align 1, !dbg !3909
  %329 = zext i8 %328 to i32, !dbg !3909
  %330 = icmp eq i32 %329, 17, !dbg !3911
  br i1 %330, label %331, label %334, !dbg !3912

331:                                              ; preds = %327
  %332 = load i32, i32* %4, align 4, !dbg !3913
  %333 = call i32 @handle_sigchld(i32 %332, %struct.command_status* %5), !dbg !3914
  store i32 %333, i32* %13, align 4, !dbg !3915
  br label %338, !dbg !3916

334:                                              ; preds = %327
  %335 = load i32, i32* @child, align 4, !dbg !3917
  %336 = load i8, i8* %14, align 1, !dbg !3918
  %337 = zext i8 %336 to i32, !dbg !3918
  call void @deliver_signal(i32 %335, i32 %337), !dbg !3919
  br label %338

338:                                              ; preds = %334, %331
  br label %200, !dbg !3920, !llvm.loop !3881

339:                                              ; preds = %296
  %340 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3921
  %341 = load i32, i32* %340, align 4, !dbg !3921
  %342 = icmp ne i32 %341, -1, !dbg !3923
  br i1 %342, label %343, label %394, !dbg !3924

343:                                              ; preds = %339
  %344 = load %struct.__sigset_t*, %struct.__sigset_t** %7, align 8, !dbg !3925
  %345 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %344, i32 0, i32 0, !dbg !3925
  %346 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3925
  %347 = load i32, i32* %346, align 4, !dbg !3925
  %348 = sdiv i32 %347, 64, !dbg !3925
  %349 = sext i32 %348 to i64, !dbg !3925
  %350 = getelementptr inbounds [16 x i64], [16 x i64]* %345, i64 0, i64 %349, !dbg !3925
  %351 = load i64, i64* %350, align 8, !dbg !3925
  %352 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3925
  %353 = load i32, i32* %352, align 4, !dbg !3925
  %354 = srem i32 %353, 64, !dbg !3925
  %355 = zext i32 %354 to i64, !dbg !3925
  %356 = shl i64 1, %355, !dbg !3925
  %357 = and i64 %351, %356, !dbg !3925
  %358 = icmp ne i64 %357, 0, !dbg !3925
  br i1 %358, label %359, label %394, !dbg !3926

359:                                              ; preds = %343
  %360 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3927
  %361 = load i32, i32* %360, align 4, !dbg !3927
  %362 = bitcast %struct.command_status* %5 to i8*, !dbg !3929
  %363 = call i64 @read(i32 %361, i8* %362, i64 8), !dbg !3930
  %364 = trunc i64 %363 to i32, !dbg !3930
  store i32 %364, i32* %11, align 4, !dbg !3931
  %365 = load i32, i32* %11, align 4, !dbg !3932
  %366 = icmp eq i32 %365, -1, !dbg !3934
  br i1 %366, label %367, label %374, !dbg !3935

367:                                              ; preds = %359
  %368 = call i32* @__errno_location() #14, !dbg !3936
  %369 = load i32, i32* %368, align 4, !dbg !3936
  %370 = icmp eq i32 %369, 4, !dbg !3939
  br i1 %370, label %371, label %372, !dbg !3940

371:                                              ; preds = %367
  br label %200, !dbg !3941, !llvm.loop !3881

372:                                              ; preds = %367
  %373 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)) #13, !dbg !3942
  call void (i8*, ...) @warning(i8* %373), !dbg !3943
  br label %435, !dbg !3944

374:                                              ; preds = %359
  %375 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3945
  %376 = load i32, i32* %375, align 4, !dbg !3945
  %377 = srem i32 %376, 64, !dbg !3945
  %378 = zext i32 %377 to i64, !dbg !3945
  %379 = shl i64 1, %378, !dbg !3945
  %380 = xor i64 %379, -1, !dbg !3945
  %381 = load %struct.__sigset_t*, %struct.__sigset_t** %7, align 8, !dbg !3945
  %382 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %381, i32 0, i32 0, !dbg !3945
  %383 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3945
  %384 = load i32, i32* %383, align 4, !dbg !3945
  %385 = sdiv i32 %384, 64, !dbg !3945
  %386 = sext i32 %385 to i64, !dbg !3945
  %387 = getelementptr inbounds [16 x i64], [16 x i64]* %382, i64 0, i64 %386, !dbg !3945
  %388 = load i64, i64* %387, align 8, !dbg !3945
  %389 = and i64 %388, %380, !dbg !3945
  store i64 %389, i64* %387, align 8, !dbg !3945
  %390 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3946
  %391 = load i32, i32* %390, align 4, !dbg !3946
  %392 = call i32 @close(i32 %391), !dbg !3947
  %393 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 0, !dbg !3948
  store i32 -1, i32* %393, align 4, !dbg !3949
  br label %394, !dbg !3950

394:                                              ; preds = %374, %343, %339
  %395 = load %struct.__sigset_t*, %struct.__sigset_t** %7, align 8, !dbg !3951
  %396 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %395, i32 0, i32 0, !dbg !3951
  %397 = load i32, i32* %4, align 4, !dbg !3951
  %398 = sdiv i32 %397, 64, !dbg !3951
  %399 = sext i32 %398 to i64, !dbg !3951
  %400 = getelementptr inbounds [16 x i64], [16 x i64]* %396, i64 0, i64 %399, !dbg !3951
  %401 = load i64, i64* %400, align 8, !dbg !3951
  %402 = load i32, i32* %4, align 4, !dbg !3951
  %403 = srem i32 %402, 64, !dbg !3951
  %404 = zext i32 %403 to i64, !dbg !3951
  %405 = shl i64 1, %404, !dbg !3951
  %406 = and i64 %401, %405, !dbg !3951
  %407 = icmp ne i64 %406, 0, !dbg !3951
  br i1 %407, label %408, label %434, !dbg !3953

408:                                              ; preds = %394
  call void @llvm.dbg.declare(metadata %struct.command_status* %15, metadata !3954, metadata !DIExpression()), !dbg !3956
  %409 = load i32, i32* %4, align 4, !dbg !3957
  %410 = bitcast %struct.command_status* %15 to i8*, !dbg !3958
  %411 = call i64 @recv(i32 %409, i8* %410, i64 8, i32 0), !dbg !3959
  %412 = trunc i64 %411 to i32, !dbg !3959
  store i32 %412, i32* %11, align 4, !dbg !3960
  %413 = load i32, i32* %11, align 4, !dbg !3961
  %414 = icmp eq i32 %413, -1, !dbg !3963
  br i1 %414, label %415, label %422, !dbg !3964

415:                                              ; preds = %408
  %416 = call i32* @__errno_location() #14, !dbg !3965
  %417 = load i32, i32* %416, align 4, !dbg !3965
  %418 = icmp eq i32 %417, 4, !dbg !3968
  br i1 %418, label %419, label %420, !dbg !3969

419:                                              ; preds = %415
  br label %200, !dbg !3970, !llvm.loop !3881

420:                                              ; preds = %415
  %421 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0)) #13, !dbg !3971
  call void (i8*, ...) @warning(i8* %421), !dbg !3972
  br label %435, !dbg !3973

422:                                              ; preds = %408
  %423 = getelementptr inbounds %struct.command_status, %struct.command_status* %15, i32 0, i32 0, !dbg !3974
  %424 = load i32, i32* %423, align 4, !dbg !3974
  %425 = icmp ne i32 %424, 3, !dbg !3976
  br i1 %425, label %426, label %430, !dbg !3977

426:                                              ; preds = %422
  %427 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.18, i64 0, i64 0)) #13, !dbg !3978
  %428 = getelementptr inbounds %struct.command_status, %struct.command_status* %15, i32 0, i32 0, !dbg !3980
  %429 = load i32, i32* %428, align 4, !dbg !3980
  call void (i8*, ...) @warningx(i8* %427, i32 %429), !dbg !3981
  br label %200, !dbg !3982, !llvm.loop !3881

430:                                              ; preds = %422
  %431 = load i32, i32* @child, align 4, !dbg !3983
  %432 = getelementptr inbounds %struct.command_status, %struct.command_status* %15, i32 0, i32 1, !dbg !3984
  %433 = load i32, i32* %432, align 4, !dbg !3984
  call void @deliver_signal(i32 %431, i32 %433), !dbg !3985
  br label %434, !dbg !3986

434:                                              ; preds = %430, %394
  br label %200, !dbg !3987, !llvm.loop !3881

435:                                              ; preds = %420, %372, %325, %288
  call void @llvm.dbg.label(metadata !3988), !dbg !3989
  %436 = load i32, i32* %13, align 4, !dbg !3990
  %437 = icmp ne i32 %436, 0, !dbg !3990
  br i1 %437, label %438, label %441, !dbg !3992

438:                                              ; preds = %435
  %439 = load i32, i32* @child, align 4, !dbg !3993
  %440 = call i32 @kill(i32 %439, i32 9) #13, !dbg !3995
  br label %444, !dbg !3996

441:                                              ; preds = %435
  %442 = load i32, i32* %4, align 4, !dbg !3997
  %443 = call i32 @send_status(i32 %442, %struct.command_status* %5), !dbg !3999
  br label %444

444:                                              ; preds = %441, %438
  call void @_exit(i32 1) #16, !dbg !4000
  unreachable, !dbg !4000

445:                                              ; preds = %76, %51
  call void @llvm.dbg.label(metadata !4001), !dbg !4002
  %446 = call i32* @__errno_location() #14, !dbg !4003
  %447 = load i32, i32* %446, align 4, !dbg !4003
  ret i32 %447, !dbg !4004
}

; Function Attrs: nounwind
declare dso_local i32 @setsid() #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @exec_pty(%struct.command_details* %0) #0 !dbg !4005 {
  %2 = alloca %struct.command_details*, align 8
  %3 = alloca i32, align 4
  store %struct.command_details* %0, %struct.command_details** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %2, metadata !4008, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4010, metadata !DIExpression()), !dbg !4011
  %4 = call i32 @getpid() #13, !dbg !4012
  store i32 %4, i32* %3, align 4, !dbg !4011
  %5 = load i32, i32* %3, align 4, !dbg !4013
  %6 = call i32 @setpgid(i32 0, i32 %5) #13, !dbg !4014
  %7 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 0), align 16, !dbg !4015
  %8 = call i32 @dup2(i32 %7, i32 0) #13, !dbg !4017
  %9 = icmp eq i32 %8, -1, !dbg !4018
  br i1 %9, label %18, label %10, !dbg !4019

10:                                               ; preds = %1
  %11 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 1), align 4, !dbg !4020
  %12 = call i32 @dup2(i32 %11, i32 1) #13, !dbg !4021
  %13 = icmp eq i32 %12, -1, !dbg !4022
  br i1 %13, label %18, label %14, !dbg !4023

14:                                               ; preds = %10
  %15 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 2), align 8, !dbg !4024
  %16 = call i32 @dup2(i32 %15, i32 2) #13, !dbg !4025
  %17 = icmp eq i32 %16, -1, !dbg !4026
  br i1 %17, label %18, label %19, !dbg !4027

18:                                               ; preds = %14, %10, %1
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)) #16, !dbg !4028
  unreachable, !dbg !4028

19:                                               ; preds = %14
  %20 = load i32, i32* @foreground, align 4, !dbg !4029
  %21 = icmp ne i32 %20, 0, !dbg !4029
  br i1 %21, label %22, label %30, !dbg !4031

22:                                               ; preds = %19
  br label %23, !dbg !4032

23:                                               ; preds = %28, %22
  %24 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !4034
  %25 = call i32 @tcgetpgrp(i32 %24) #13, !dbg !4035
  %26 = load i32, i32* %3, align 4, !dbg !4036
  %27 = icmp ne i32 %25, %26, !dbg !4037
  br i1 %27, label %28, label %29, !dbg !4032

28:                                               ; preds = %23
  br label %23, !dbg !4032, !llvm.loop !4038

29:                                               ; preds = %23
  br label %30, !dbg !4040

30:                                               ; preds = %29, %19
  %31 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !4041
  %32 = icmp ne i32 %31, -1, !dbg !4043
  br i1 %32, label %33, label %36, !dbg !4044

33:                                               ; preds = %30
  %34 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !4045
  %35 = call i32 @close(i32 %34), !dbg !4046
  br label %36, !dbg !4046

36:                                               ; preds = %33, %30
  %37 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 0), align 16, !dbg !4047
  %38 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !4049
  %39 = icmp ne i32 %37, %38, !dbg !4050
  br i1 %39, label %40, label %43, !dbg !4051

40:                                               ; preds = %36
  %41 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 0), align 16, !dbg !4052
  %42 = call i32 @close(i32 %41), !dbg !4053
  br label %43, !dbg !4053

43:                                               ; preds = %40, %36
  %44 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 1), align 4, !dbg !4054
  %45 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !4056
  %46 = icmp ne i32 %44, %45, !dbg !4057
  br i1 %46, label %47, label %50, !dbg !4058

47:                                               ; preds = %43
  %48 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 1), align 4, !dbg !4059
  %49 = call i32 @close(i32 %48), !dbg !4060
  br label %50, !dbg !4060

50:                                               ; preds = %47, %43
  %51 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 2), align 8, !dbg !4061
  %52 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !4063
  %53 = icmp ne i32 %51, %52, !dbg !4064
  br i1 %53, label %54, label %57, !dbg !4065

54:                                               ; preds = %50
  %55 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 2), align 8, !dbg !4066
  %56 = call i32 @close(i32 %55), !dbg !4067
  br label %57, !dbg !4067

57:                                               ; preds = %54, %50
  %58 = load %struct.command_details*, %struct.command_details** %2, align 8, !dbg !4068
  %59 = getelementptr inbounds %struct.command_details, %struct.command_details* %58, i32 0, i32 8, !dbg !4070
  %60 = load i32, i32* %59, align 8, !dbg !4070
  %61 = icmp sge i32 %60, 0, !dbg !4071
  br i1 %61, label %62, label %66, !dbg !4072

62:                                               ; preds = %57
  %63 = load %struct.command_details*, %struct.command_details** %2, align 8, !dbg !4073
  %64 = getelementptr inbounds %struct.command_details, %struct.command_details* %63, i32 0, i32 8, !dbg !4074
  %65 = load i32, i32* %64, align 8, !dbg !4074
  call void @closefrom(i32 %65), !dbg !4075
  br label %66, !dbg !4075

66:                                               ; preds = %62, %57
  %67 = load %struct.command_details*, %struct.command_details** %2, align 8, !dbg !4076
  %68 = getelementptr inbounds %struct.command_details, %struct.command_details* %67, i32 0, i32 11, !dbg !4077
  %69 = load i8*, i8** %68, align 8, !dbg !4077
  %70 = load %struct.command_details*, %struct.command_details** %2, align 8, !dbg !4078
  %71 = getelementptr inbounds %struct.command_details, %struct.command_details* %70, i32 0, i32 18, !dbg !4079
  %72 = load i8**, i8*** %71, align 8, !dbg !4079
  %73 = load %struct.command_details*, %struct.command_details** %2, align 8, !dbg !4080
  %74 = getelementptr inbounds %struct.command_details, %struct.command_details* %73, i32 0, i32 19, !dbg !4081
  %75 = load i8**, i8*** %74, align 8, !dbg !4081
  %76 = call i32 @my_execve(i8* %69, i8** %72, i8** %75), !dbg !4082
  ret void, !dbg !4083
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @handle_sigchld(i32 %0, %struct.command_status* %1) #0 !dbg !4084 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.command_status*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4087, metadata !DIExpression()), !dbg !4088
  store %struct.command_status* %1, %struct.command_status** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.command_status** %5, metadata !4089, metadata !DIExpression()), !dbg !4090
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4091, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4093, metadata !DIExpression()), !dbg !4094
  store i32 1, i32* %7, align 4, !dbg !4094
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4095, metadata !DIExpression()), !dbg !4096
  br label %9, !dbg !4097

9:                                                ; preds = %19, %2
  %10 = load i32, i32* @child, align 4, !dbg !4098
  %11 = call i32 @waitpid(i32 %10, i32* %6, i32 3), !dbg !4100
  store i32 %11, i32* %8, align 4, !dbg !4101
  br label %12, !dbg !4102

12:                                               ; preds = %9
  %13 = load i32, i32* %8, align 4, !dbg !4103
  %14 = icmp eq i32 %13, -1, !dbg !4104
  br i1 %14, label %15, label %19, !dbg !4105

15:                                               ; preds = %12
  %16 = call i32* @__errno_location() #14, !dbg !4106
  %17 = load i32, i32* %16, align 4, !dbg !4106
  %18 = icmp eq i32 %17, 4, !dbg !4107
  br label %19

19:                                               ; preds = %15, %12
  %20 = phi i1 [ false, %12 ], [ %18, %15 ], !dbg !4108
  br i1 %20, label %9, label %21, !dbg !4102, !llvm.loop !4109

21:                                               ; preds = %19
  %22 = load i32, i32* %8, align 4, !dbg !4111
  %23 = load i32, i32* @child, align 4, !dbg !4113
  %24 = icmp eq i32 %22, %23, !dbg !4114
  br i1 %24, label %25, label %86, !dbg !4115

25:                                               ; preds = %21
  %26 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !4116
  %27 = getelementptr inbounds %struct.command_status, %struct.command_status* %26, i32 0, i32 0, !dbg !4119
  %28 = load i32, i32* %27, align 4, !dbg !4119
  %29 = icmp ne i32 %28, 1, !dbg !4120
  br i1 %29, label %30, label %80, !dbg !4121

30:                                               ; preds = %25
  %31 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !4122
  %32 = getelementptr inbounds %struct.command_status, %struct.command_status* %31, i32 0, i32 0, !dbg !4124
  store i32 2, i32* %32, align 4, !dbg !4125
  %33 = load i32, i32* %6, align 4, !dbg !4126
  %34 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !4127
  %35 = getelementptr inbounds %struct.command_status, %struct.command_status* %34, i32 0, i32 1, !dbg !4128
  store i32 %33, i32* %35, align 4, !dbg !4129
  %36 = load i32, i32* %6, align 4, !dbg !4130
  %37 = and i32 %36, 255, !dbg !4130
  %38 = icmp eq i32 %37, 127, !dbg !4130
  br i1 %38, label %39, label %63, !dbg !4132

39:                                               ; preds = %30
  %40 = load i32, i32* %6, align 4, !dbg !4133
  %41 = and i32 %40, 65280, !dbg !4133
  %42 = ashr i32 %41, 8, !dbg !4133
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i32 %42), !dbg !4135
  br label %43, !dbg !4136

43:                                               ; preds = %53, %39
  %44 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !4137
  %45 = call i32 @tcgetpgrp(i32 %44) #13, !dbg !4139
  store i32 %45, i32* @child_pgrp, align 4, !dbg !4140
  br label %46, !dbg !4141

46:                                               ; preds = %43
  %47 = load i32, i32* @child_pgrp, align 4, !dbg !4142
  %48 = icmp eq i32 %47, -1, !dbg !4143
  br i1 %48, label %49, label %53, !dbg !4144

49:                                               ; preds = %46
  %50 = call i32* @__errno_location() #14, !dbg !4145
  %51 = load i32, i32* %50, align 4, !dbg !4145
  %52 = icmp eq i32 %51, 4, !dbg !4146
  br label %53

53:                                               ; preds = %49, %46
  %54 = phi i1 [ false, %46 ], [ %52, %49 ], !dbg !4147
  br i1 %54, label %43, label %55, !dbg !4141, !llvm.loop !4148

55:                                               ; preds = %53
  %56 = load i32, i32* %4, align 4, !dbg !4150
  %57 = load %struct.command_status*, %struct.command_status** %5, align 8, !dbg !4152
  %58 = call i32 @send_status(i32 %56, %struct.command_status* %57), !dbg !4153
  %59 = icmp eq i32 %58, -1, !dbg !4154
  br i1 %59, label %60, label %62, !dbg !4155

60:                                               ; preds = %55
  %61 = load i32, i32* %7, align 4, !dbg !4156
  store i32 %61, i32* %3, align 4, !dbg !4157
  br label %88, !dbg !4157

62:                                               ; preds = %55
  br label %79, !dbg !4158

63:                                               ; preds = %30
  %64 = load i32, i32* %6, align 4, !dbg !4159
  %65 = and i32 %64, 127, !dbg !4159
  %66 = add nsw i32 %65, 1, !dbg !4159
  %67 = trunc i32 %66 to i8, !dbg !4159
  %68 = sext i8 %67 to i32, !dbg !4159
  %69 = ashr i32 %68, 1, !dbg !4159
  %70 = icmp sgt i32 %69, 0, !dbg !4159
  br i1 %70, label %71, label %74, !dbg !4161

71:                                               ; preds = %63
  %72 = load i32, i32* %6, align 4, !dbg !4162
  %73 = and i32 %72, 127, !dbg !4162
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0), i32 %73), !dbg !4164
  br label %78, !dbg !4165

74:                                               ; preds = %63
  %75 = load i32, i32* %6, align 4, !dbg !4166
  %76 = and i32 %75, 65280, !dbg !4166
  %77 = ashr i32 %76, 8, !dbg !4166
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0), i32 %77), !dbg !4168
  br label %78

78:                                               ; preds = %74, %71
  br label %79

79:                                               ; preds = %78, %62
  br label %80, !dbg !4169

80:                                               ; preds = %79, %25
  %81 = load i32, i32* %6, align 4, !dbg !4170
  %82 = and i32 %81, 255, !dbg !4170
  %83 = icmp eq i32 %82, 127, !dbg !4170
  br i1 %83, label %85, label %84, !dbg !4172

84:                                               ; preds = %80
  store i32 0, i32* %7, align 4, !dbg !4173
  br label %85, !dbg !4174

85:                                               ; preds = %84, %80
  br label %86, !dbg !4175

86:                                               ; preds = %85, %21
  %87 = load i32, i32* %7, align 4, !dbg !4176
  store i32 %87, i32* %3, align 4, !dbg !4177
  br label %88, !dbg !4177

88:                                               ; preds = %86, %60
  %89 = load i32, i32* %3, align 4, !dbg !4178
  ret i32 %89, !dbg !4178
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @deliver_signal(i32 %0, i32 %1) #0 !dbg !4179 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4180, metadata !DIExpression()), !dbg !4181
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4182, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4184, metadata !DIExpression()), !dbg !4185
  %6 = load i32, i32* %4, align 4, !dbg !4186
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i64 0, i64 0), i32 %6), !dbg !4187
  %7 = load i32, i32* %4, align 4, !dbg !4188
  switch i32 %7, label %45 [
    i32 14, label %8
    i32 -2, label %10
    i32 -3, label %27
    i32 9, label %44
  ], !dbg !4189

8:                                                ; preds = %2
  %9 = load i32, i32* %3, align 4, !dbg !4190
  call void @terminate_child(i32 %9, i32 1), !dbg !4192
  br label %49, !dbg !4193

10:                                               ; preds = %2
  br label %11, !dbg !4194

11:                                               ; preds = %22, %10
  %12 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !4195
  %13 = load i32, i32* @child_pgrp, align 4, !dbg !4197
  %14 = call i32 @tcsetpgrp(i32 %12, i32 %13) #13, !dbg !4198
  store i32 %14, i32* %5, align 4, !dbg !4199
  br label %15, !dbg !4200

15:                                               ; preds = %11
  %16 = load i32, i32* %5, align 4, !dbg !4201
  %17 = icmp eq i32 %16, -1, !dbg !4202
  br i1 %17, label %18, label %22, !dbg !4203

18:                                               ; preds = %15
  %19 = call i32* @__errno_location() #14, !dbg !4204
  %20 = load i32, i32* %19, align 4, !dbg !4204
  %21 = icmp eq i32 %20, 4, !dbg !4205
  br label %22

22:                                               ; preds = %18, %15
  %23 = phi i1 [ false, %15 ], [ %21, %18 ], !dbg !4206
  br i1 %23, label %11, label %24, !dbg !4200, !llvm.loop !4207

24:                                               ; preds = %22
  %25 = load i32, i32* %3, align 4, !dbg !4209
  %26 = call i32 @killpg(i32 %25, i32 18) #13, !dbg !4210
  br label %49, !dbg !4211

27:                                               ; preds = %2
  br label %28, !dbg !4212

28:                                               ; preds = %39, %27
  %29 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 4), align 16, !dbg !4213
  %30 = call i32 @getpid() #13, !dbg !4215
  %31 = call i32 @tcsetpgrp(i32 %29, i32 %30) #13, !dbg !4216
  store i32 %31, i32* %5, align 4, !dbg !4217
  br label %32, !dbg !4218

32:                                               ; preds = %28
  %33 = load i32, i32* %5, align 4, !dbg !4219
  %34 = icmp eq i32 %33, -1, !dbg !4220
  br i1 %34, label %35, label %39, !dbg !4221

35:                                               ; preds = %32
  %36 = call i32* @__errno_location() #14, !dbg !4222
  %37 = load i32, i32* %36, align 4, !dbg !4222
  %38 = icmp eq i32 %37, 4, !dbg !4223
  br label %39

39:                                               ; preds = %35, %32
  %40 = phi i1 [ false, %32 ], [ %38, %35 ], !dbg !4206
  br i1 %40, label %28, label %41, !dbg !4218, !llvm.loop !4224

41:                                               ; preds = %39
  %42 = load i32, i32* %3, align 4, !dbg !4226
  %43 = call i32 @killpg(i32 %42, i32 18) #13, !dbg !4227
  br label %49, !dbg !4228

44:                                               ; preds = %2
  call void @_exit(i32 1) #16, !dbg !4229
  unreachable, !dbg !4229

45:                                               ; preds = %2
  %46 = load i32, i32* %3, align 4, !dbg !4230
  %47 = load i32, i32* %4, align 4, !dbg !4231
  %48 = call i32 @killpg(i32 %46, i32 %47) #13, !dbg !4232
  br label %49, !dbg !4233

49:                                               ; preds = %45, %41, %24, %8
  ret void, !dbg !4234
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @send_status(i32 %0, %struct.command_status* %1) #0 !dbg !4235 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.command_status*, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4236, metadata !DIExpression()), !dbg !4237
  store %struct.command_status* %1, %struct.command_status** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.command_status** %4, metadata !4238, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4240, metadata !DIExpression()), !dbg !4241
  store i32 -1, i32* %5, align 4, !dbg !4241
  %6 = load %struct.command_status*, %struct.command_status** %4, align 8, !dbg !4242
  %7 = getelementptr inbounds %struct.command_status, %struct.command_status* %6, i32 0, i32 0, !dbg !4244
  %8 = load i32, i32* %7, align 4, !dbg !4244
  %9 = icmp ne i32 %8, 0, !dbg !4245
  br i1 %9, label %10, label %38, !dbg !4246

10:                                               ; preds = %2
  br label %11, !dbg !4247

11:                                               ; preds = %24, %10
  %12 = load i32, i32* %3, align 4, !dbg !4249
  %13 = load %struct.command_status*, %struct.command_status** %4, align 8, !dbg !4251
  %14 = bitcast %struct.command_status* %13 to i8*, !dbg !4251
  %15 = call i64 @send(i32 %12, i8* %14, i64 8, i32 0), !dbg !4252
  %16 = trunc i64 %15 to i32, !dbg !4252
  store i32 %16, i32* %5, align 4, !dbg !4253
  br label %17, !dbg !4254

17:                                               ; preds = %11
  %18 = load i32, i32* %5, align 4, !dbg !4255
  %19 = icmp eq i32 %18, -1, !dbg !4256
  br i1 %19, label %20, label %24, !dbg !4257

20:                                               ; preds = %17
  %21 = call i32* @__errno_location() #14, !dbg !4258
  %22 = load i32, i32* %21, align 4, !dbg !4258
  %23 = icmp eq i32 %22, 4, !dbg !4259
  br label %24

24:                                               ; preds = %20, %17
  %25 = phi i1 [ false, %17 ], [ %23, %20 ], !dbg !4260
  br i1 %25, label %11, label %26, !dbg !4254, !llvm.loop !4261

26:                                               ; preds = %24
  %27 = load i32, i32* %5, align 4, !dbg !4263
  %28 = sext i32 %27 to i64, !dbg !4263
  %29 = icmp ne i64 %28, 8, !dbg !4265
  br i1 %29, label %30, label %34, !dbg !4266

30:                                               ; preds = %26
  %31 = call i32* @__errno_location() #14, !dbg !4267
  %32 = load i32, i32* %31, align 4, !dbg !4267
  %33 = call i8* @strerror(i32 %32) #13, !dbg !4269
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i64 0, i64 0), i8* %33), !dbg !4270
  br label %35, !dbg !4271

34:                                               ; preds = %26
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0)), !dbg !4272
  br label %35

35:                                               ; preds = %34, %30
  %36 = load %struct.command_status*, %struct.command_status** %4, align 8, !dbg !4274
  %37 = getelementptr inbounds %struct.command_status, %struct.command_status* %36, i32 0, i32 0, !dbg !4275
  store i32 0, i32* %37, align 4, !dbg !4276
  br label %38, !dbg !4277

38:                                               ; preds = %35, %2
  %39 = load i32, i32* %5, align 4, !dbg !4278
  ret i32 %39, !dbg !4279
}

; Function Attrs: nounwind
declare dso_local i32 @dup2(i32, i32) #4

; Function Attrs: nounwind
declare dso_local i32 @sigprocmask(i32, %struct.__sigset_t*, %struct.__sigset_t*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @pty_close(%struct.command_status* %0) #0 !dbg !4280 {
  %2 = alloca %struct.command_status*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  store %struct.command_status* %0, %struct.command_status** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.command_status** %2, metadata !4283, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4285, metadata !DIExpression()), !dbg !4286
  %6 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !4287
  %7 = icmp ne i32 %6, -1, !dbg !4289
  br i1 %7, label %8, label %24, !dbg !4290

8:                                                ; preds = %1
  %9 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !4291
  %10 = call i32 (i32, i32, ...) @fcntl(i32 %9, i32 3, i32 0), !dbg !4293
  store i32 %10, i32* %3, align 4, !dbg !4294
  %11 = load i32, i32* %3, align 4, !dbg !4295
  %12 = icmp ne i32 %11, -1, !dbg !4297
  br i1 %12, label %13, label %23, !dbg !4298

13:                                               ; preds = %8
  %14 = load i32, i32* %3, align 4, !dbg !4299
  %15 = and i32 %14, 2048, !dbg !4299
  %16 = icmp ne i32 %15, 0, !dbg !4299
  br i1 %16, label %17, label %23, !dbg !4300

17:                                               ; preds = %13
  %18 = load i32, i32* %3, align 4, !dbg !4301
  %19 = and i32 %18, -2049, !dbg !4301
  store i32 %19, i32* %3, align 4, !dbg !4301
  %20 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !4303
  %21 = load i32, i32* %3, align 4, !dbg !4304
  %22 = call i32 (i32, i32, ...) @fcntl(i32 %20, i32 4, i32 %21), !dbg !4305
  br label %23, !dbg !4306

23:                                               ; preds = %17, %13, %8
  br label %24, !dbg !4307

24:                                               ; preds = %23, %1
  call void @flush_output(), !dbg !4308
  %25 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !4309
  %26 = icmp ne i32 %25, -1, !dbg !4311
  br i1 %26, label %27, label %41, !dbg !4312

27:                                               ; preds = %24
  br label %28, !dbg !4313

28:                                               ; preds = %38, %27
  %29 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !4315
  %30 = call i32 @term_restore(i32 %29, i32 0), !dbg !4317
  store i32 %30, i32* %3, align 4, !dbg !4318
  br label %31, !dbg !4319

31:                                               ; preds = %28
  %32 = load i32, i32* %3, align 4, !dbg !4320
  %33 = icmp ne i32 %32, 0, !dbg !4320
  br i1 %33, label %38, label %34, !dbg !4321

34:                                               ; preds = %31
  %35 = call i32* @__errno_location() #14, !dbg !4322
  %36 = load i32, i32* %35, align 4, !dbg !4322
  %37 = icmp eq i32 %36, 4, !dbg !4323
  br label %38

38:                                               ; preds = %34, %31
  %39 = phi i1 [ false, %31 ], [ %37, %34 ], !dbg !4324
  br i1 %39, label %28, label %40, !dbg !4319, !llvm.loop !4325

40:                                               ; preds = %38
  br label %41, !dbg !4327

41:                                               ; preds = %40, %24
  %42 = load %struct.command_status*, %struct.command_status** %2, align 8, !dbg !4328
  %43 = getelementptr inbounds %struct.command_status, %struct.command_status* %42, i32 0, i32 0, !dbg !4330
  %44 = load i32, i32* %43, align 4, !dbg !4330
  %45 = icmp eq i32 %44, 2, !dbg !4331
  br i1 %45, label %46, label %105, !dbg !4332

46:                                               ; preds = %41
  %47 = load %struct.command_status*, %struct.command_status** %2, align 8, !dbg !4333
  %48 = getelementptr inbounds %struct.command_status, %struct.command_status* %47, i32 0, i32 1, !dbg !4333
  %49 = load i32, i32* %48, align 4, !dbg !4333
  %50 = and i32 %49, 127, !dbg !4333
  %51 = add nsw i32 %50, 1, !dbg !4333
  %52 = trunc i32 %51 to i8, !dbg !4333
  %53 = sext i8 %52 to i32, !dbg !4333
  %54 = ashr i32 %53, 1, !dbg !4333
  %55 = icmp sgt i32 %54, 0, !dbg !4333
  br i1 %55, label %56, label %105, !dbg !4334

56:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4335, metadata !DIExpression()), !dbg !4337
  %57 = load %struct.command_status*, %struct.command_status** %2, align 8, !dbg !4338
  %58 = getelementptr inbounds %struct.command_status, %struct.command_status* %57, i32 0, i32 1, !dbg !4338
  %59 = load i32, i32* %58, align 4, !dbg !4338
  %60 = and i32 %59, 127, !dbg !4338
  store i32 %60, i32* %4, align 4, !dbg !4337
  %61 = load i32, i32* %4, align 4, !dbg !4339
  %62 = icmp ne i32 %61, 0, !dbg !4339
  br i1 %62, label %63, label %104, !dbg !4341

63:                                               ; preds = %56
  %64 = load i32, i32* %4, align 4, !dbg !4342
  %65 = icmp ne i32 %64, 2, !dbg !4343
  br i1 %65, label %66, label %104, !dbg !4344

66:                                               ; preds = %63
  %67 = load i32, i32* %4, align 4, !dbg !4345
  %68 = icmp ne i32 %67, 13, !dbg !4346
  br i1 %68, label %69, label %104, !dbg !4347

69:                                               ; preds = %66
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4348, metadata !DIExpression()), !dbg !4350
  %70 = load i32, i32* %4, align 4, !dbg !4351
  %71 = call i8* @strsignal(i32 %70) #13, !dbg !4352
  store i8* %71, i8** %5, align 8, !dbg !4350
  %72 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !4353
  %73 = icmp ne i32 %72, -1, !dbg !4354
  br i1 %73, label %74, label %76, !dbg !4353

74:                                               ; preds = %69
  %75 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !4355
  br label %77, !dbg !4353

76:                                               ; preds = %69
  br label %77, !dbg !4353

77:                                               ; preds = %76, %74
  %78 = phi i32 [ %75, %74 ], [ 1, %76 ], !dbg !4353
  store i32 %78, i32* %3, align 4, !dbg !4356
  %79 = load i32, i32* %3, align 4, !dbg !4357
  %80 = load i8*, i8** %5, align 8, !dbg !4359
  %81 = load i8*, i8** %5, align 8, !dbg !4360
  %82 = call i64 @strlen(i8* %81) #12, !dbg !4361
  %83 = call i64 @write(i32 %79, i8* %80, i64 %82), !dbg !4362
  %84 = icmp ne i64 %83, -1, !dbg !4363
  br i1 %84, label %85, label %103, !dbg !4364

85:                                               ; preds = %77
  %86 = load %struct.command_status*, %struct.command_status** %2, align 8, !dbg !4365
  %87 = getelementptr inbounds %struct.command_status, %struct.command_status* %86, i32 0, i32 1, !dbg !4365
  %88 = load i32, i32* %87, align 4, !dbg !4365
  %89 = and i32 %88, 128, !dbg !4365
  %90 = icmp ne i32 %89, 0, !dbg !4365
  br i1 %90, label %91, label %97, !dbg !4368

91:                                               ; preds = %85
  %92 = load i32, i32* %3, align 4, !dbg !4369
  %93 = call i64 @write(i32 %92, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.37, i64 0, i64 0), i64 14), !dbg !4372
  %94 = icmp eq i64 %93, -1, !dbg !4373
  br i1 %94, label %95, label %96, !dbg !4374

95:                                               ; preds = %91
  br label %96, !dbg !4374

96:                                               ; preds = %95, %91
  br label %97, !dbg !4375

97:                                               ; preds = %96, %85
  %98 = load i32, i32* %3, align 4, !dbg !4376
  %99 = call i64 @write(i32 %98, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.38, i64 0, i64 0), i64 1), !dbg !4378
  %100 = icmp eq i64 %99, -1, !dbg !4379
  br i1 %100, label %101, label %102, !dbg !4380

101:                                              ; preds = %97
  br label %102, !dbg !4380

102:                                              ; preds = %101, %97
  br label %103, !dbg !4381

103:                                              ; preds = %102, %77
  br label %104, !dbg !4382

104:                                              ; preds = %103, %66, %63, %56
  br label %105, !dbg !4383

105:                                              ; preds = %104, %46, %41
  %106 = load %struct.command_status*, %struct.command_status** %2, align 8, !dbg !4384
  %107 = getelementptr inbounds %struct.command_status, %struct.command_status* %106, i32 0, i32 0, !dbg !4385
  %108 = load i32, i32* %107, align 4, !dbg !4385
  %109 = icmp eq i32 %108, 2, !dbg !4386
  br i1 %109, label %110, label %114, !dbg !4384

110:                                              ; preds = %105
  %111 = load %struct.command_status*, %struct.command_status** %2, align 8, !dbg !4387
  %112 = getelementptr inbounds %struct.command_status, %struct.command_status* %111, i32 0, i32 1, !dbg !4388
  %113 = load i32, i32* %112, align 4, !dbg !4388
  br label %115, !dbg !4384

114:                                              ; preds = %105
  br label %115, !dbg !4384

115:                                              ; preds = %114, %110
  %116 = phi i32 [ %113, %110 ], [ 0, %114 ], !dbg !4384
  %117 = call i32 @utmp_logout(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @slavename, i64 0, i64 0), i32 %116), !dbg !4389
  ret void, !dbg !4390
}

; Function Attrs: nounwind
declare dso_local i8* @strsignal(i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fd_set_iobs(%struct.__sigset_t* %0, %struct.__sigset_t* %1) #0 !dbg !4391 {
  %3 = alloca %struct.__sigset_t*, align 8
  %4 = alloca %struct.__sigset_t*, align 8
  %5 = alloca %struct.io_buffer*, align 8
  store %struct.__sigset_t* %0, %struct.__sigset_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.__sigset_t** %3, metadata !4394, metadata !DIExpression()), !dbg !4395
  store %struct.__sigset_t* %1, %struct.__sigset_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.__sigset_t** %4, metadata !4396, metadata !DIExpression()), !dbg !4397
  call void @llvm.dbg.declare(metadata %struct.io_buffer** %5, metadata !4398, metadata !DIExpression()), !dbg !4399
  %6 = load %struct.io_buffer*, %struct.io_buffer** @iobufs, align 8, !dbg !4400
  store %struct.io_buffer* %6, %struct.io_buffer** %5, align 8, !dbg !4402
  br label %7, !dbg !4403

7:                                                ; preds = %125, %2
  %8 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4404
  %9 = icmp ne %struct.io_buffer* %8, null, !dbg !4406
  br i1 %9, label %10, label %129, !dbg !4406

10:                                               ; preds = %7
  %11 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4407
  %12 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %11, i32 0, i32 3, !dbg !4410
  %13 = load i32, i32* %12, align 8, !dbg !4410
  %14 = icmp eq i32 %13, -1, !dbg !4411
  br i1 %14, label %15, label %21, !dbg !4412

15:                                               ; preds = %10
  %16 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4413
  %17 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %16, i32 0, i32 4, !dbg !4414
  %18 = load i32, i32* %17, align 4, !dbg !4414
  %19 = icmp eq i32 %18, -1, !dbg !4415
  br i1 %19, label %20, label %21, !dbg !4416

20:                                               ; preds = %15
  br label %125, !dbg !4417

21:                                               ; preds = %15, %10
  %22 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4418
  %23 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %22, i32 0, i32 2, !dbg !4420
  %24 = load i32, i32* %23, align 4, !dbg !4420
  %25 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4421
  %26 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %25, i32 0, i32 1, !dbg !4422
  %27 = load i32, i32* %26, align 8, !dbg !4422
  %28 = icmp eq i32 %24, %27, !dbg !4423
  br i1 %28, label %29, label %46, !dbg !4424

29:                                               ; preds = %21
  %30 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4425
  %31 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %30, i32 0, i32 1, !dbg !4427
  store i32 0, i32* %31, align 8, !dbg !4428
  %32 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4429
  %33 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %32, i32 0, i32 2, !dbg !4430
  store i32 0, i32* %33, align 4, !dbg !4431
  %34 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4432
  %35 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %34, i32 0, i32 3, !dbg !4434
  %36 = load i32, i32* %35, align 8, !dbg !4434
  %37 = icmp eq i32 %36, -1, !dbg !4435
  br i1 %37, label %38, label %45, !dbg !4436

38:                                               ; preds = %29
  %39 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4437
  %40 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %39, i32 0, i32 4, !dbg !4439
  %41 = load i32, i32* %40, align 4, !dbg !4439
  %42 = call i32 @safe_close(i32 %41), !dbg !4440
  %43 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4441
  %44 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %43, i32 0, i32 4, !dbg !4442
  store i32 -1, i32* %44, align 4, !dbg !4443
  br label %45, !dbg !4444

45:                                               ; preds = %38, %29
  br label %46, !dbg !4445

46:                                               ; preds = %45, %21
  %47 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4446
  %48 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %47, i32 0, i32 3, !dbg !4448
  %49 = load i32, i32* %48, align 8, !dbg !4448
  %50 = icmp ne i32 %49, -1, !dbg !4449
  br i1 %50, label %51, label %84, !dbg !4450

51:                                               ; preds = %46
  %52 = load i32, i32* @ttymode, align 4, !dbg !4451
  %53 = icmp eq i32 %52, 1, !dbg !4452
  br i1 %53, label %60, label %54, !dbg !4453

54:                                               ; preds = %51
  %55 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4454
  %56 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %55, i32 0, i32 3, !dbg !4455
  %57 = load i32, i32* %56, align 8, !dbg !4455
  %58 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !4456
  %59 = icmp ne i32 %57, %58, !dbg !4457
  br i1 %59, label %60, label %84, !dbg !4458

60:                                               ; preds = %54, %51
  %61 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4459
  %62 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %61, i32 0, i32 1, !dbg !4462
  %63 = load i32, i32* %62, align 8, !dbg !4462
  %64 = sext i32 %63 to i64, !dbg !4459
  %65 = icmp ne i64 %64, 16384, !dbg !4463
  br i1 %65, label %66, label %83, !dbg !4464

66:                                               ; preds = %60
  %67 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4465
  %68 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %67, i32 0, i32 3, !dbg !4465
  %69 = load i32, i32* %68, align 8, !dbg !4465
  %70 = srem i32 %69, 64, !dbg !4465
  %71 = zext i32 %70 to i64, !dbg !4465
  %72 = shl i64 1, %71, !dbg !4465
  %73 = load %struct.__sigset_t*, %struct.__sigset_t** %3, align 8, !dbg !4465
  %74 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %73, i32 0, i32 0, !dbg !4465
  %75 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4465
  %76 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %75, i32 0, i32 3, !dbg !4465
  %77 = load i32, i32* %76, align 8, !dbg !4465
  %78 = sdiv i32 %77, 64, !dbg !4465
  %79 = sext i32 %78 to i64, !dbg !4465
  %80 = getelementptr inbounds [16 x i64], [16 x i64]* %74, i64 0, i64 %79, !dbg !4465
  %81 = load i64, i64* %80, align 8, !dbg !4465
  %82 = or i64 %81, %72, !dbg !4465
  store i64 %82, i64* %80, align 8, !dbg !4465
  br label %83, !dbg !4465

83:                                               ; preds = %66, %60
  br label %84, !dbg !4466

84:                                               ; preds = %83, %54, %46
  %85 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4467
  %86 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %85, i32 0, i32 4, !dbg !4469
  %87 = load i32, i32* %86, align 4, !dbg !4469
  %88 = icmp ne i32 %87, -1, !dbg !4470
  br i1 %88, label %89, label %124, !dbg !4471

89:                                               ; preds = %84
  %90 = load i32, i32* @foreground, align 4, !dbg !4472
  %91 = icmp ne i32 %90, 0, !dbg !4472
  br i1 %91, label %98, label %92, !dbg !4473

92:                                               ; preds = %89
  %93 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4474
  %94 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %93, i32 0, i32 4, !dbg !4475
  %95 = load i32, i32* %94, align 4, !dbg !4475
  %96 = load i32, i32* getelementptr inbounds ([6 x i32], [6 x i32]* @io_fds, i64 0, i64 5), align 4, !dbg !4476
  %97 = icmp ne i32 %95, %96, !dbg !4477
  br i1 %97, label %98, label %124, !dbg !4478

98:                                               ; preds = %92, %89
  %99 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4479
  %100 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %99, i32 0, i32 1, !dbg !4482
  %101 = load i32, i32* %100, align 8, !dbg !4482
  %102 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4483
  %103 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %102, i32 0, i32 2, !dbg !4484
  %104 = load i32, i32* %103, align 4, !dbg !4484
  %105 = icmp sgt i32 %101, %104, !dbg !4485
  br i1 %105, label %106, label %123, !dbg !4486

106:                                              ; preds = %98
  %107 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4487
  %108 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %107, i32 0, i32 4, !dbg !4487
  %109 = load i32, i32* %108, align 4, !dbg !4487
  %110 = srem i32 %109, 64, !dbg !4487
  %111 = zext i32 %110 to i64, !dbg !4487
  %112 = shl i64 1, %111, !dbg !4487
  %113 = load %struct.__sigset_t*, %struct.__sigset_t** %4, align 8, !dbg !4487
  %114 = getelementptr inbounds %struct.__sigset_t, %struct.__sigset_t* %113, i32 0, i32 0, !dbg !4487
  %115 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4487
  %116 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %115, i32 0, i32 4, !dbg !4487
  %117 = load i32, i32* %116, align 4, !dbg !4487
  %118 = sdiv i32 %117, 64, !dbg !4487
  %119 = sext i32 %118 to i64, !dbg !4487
  %120 = getelementptr inbounds [16 x i64], [16 x i64]* %114, i64 0, i64 %119, !dbg !4487
  %121 = load i64, i64* %120, align 8, !dbg !4487
  %122 = or i64 %121, %112, !dbg !4487
  store i64 %122, i64* %120, align 8, !dbg !4487
  br label %123, !dbg !4487

123:                                              ; preds = %106, %98
  br label %124, !dbg !4488

124:                                              ; preds = %123, %92, %84
  br label %125, !dbg !4489

125:                                              ; preds = %124, %20
  %126 = load %struct.io_buffer*, %struct.io_buffer** %5, align 8, !dbg !4490
  %127 = getelementptr inbounds %struct.io_buffer, %struct.io_buffer* %126, i32 0, i32 0, !dbg !4491
  %128 = load %struct.io_buffer*, %struct.io_buffer** %127, align 8, !dbg !4491
  store %struct.io_buffer* %128, %struct.io_buffer** %5, align 8, !dbg !4492
  br label %7, !dbg !4493, !llvm.loop !4494

129:                                              ; preds = %7
  ret void, !dbg !4496
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_pty(i32* %0, i32* %1, i8* %2, i64 %3, i32 %4) #0 !dbg !4497 {
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.group*, align 8
  %13 = alloca i32, align 4
  store i32* %0, i32** %7, align 8
  call void @llvm.dbg.declare(metadata i32** %7, metadata !4501, metadata !DIExpression()), !dbg !4502
  store i32* %1, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !4503, metadata !DIExpression()), !dbg !4504
  store i8* %2, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4505, metadata !DIExpression()), !dbg !4506
  store i64 %3, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !4507, metadata !DIExpression()), !dbg !4508
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4509, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.declare(metadata %struct.group** %12, metadata !4511, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4521, metadata !DIExpression()), !dbg !4522
  store i32 -1, i32* %13, align 4, !dbg !4522
  %14 = call %struct.group* @getgrnam(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0)), !dbg !4523
  store %struct.group* %14, %struct.group** %12, align 8, !dbg !4525
  %15 = icmp ne %struct.group* %14, null, !dbg !4526
  br i1 %15, label %16, label %20, !dbg !4527

16:                                               ; preds = %5
  %17 = load %struct.group*, %struct.group** %12, align 8, !dbg !4528
  %18 = getelementptr inbounds %struct.group, %struct.group* %17, i32 0, i32 2, !dbg !4529
  %19 = load i32, i32* %18, align 8, !dbg !4529
  store i32 %19, i32* %13, align 4, !dbg !4530
  br label %20, !dbg !4531

20:                                               ; preds = %16, %5
  %21 = load i32*, i32** %7, align 8, !dbg !4532
  %22 = load i32*, i32** %8, align 8, !dbg !4534
  %23 = load i8*, i8** %9, align 8, !dbg !4535
  %24 = call i32 @openpty(i32* %21, i32* %22, i8* %23, %struct.termios* null, %struct.winsize* null) #13, !dbg !4536
  %25 = icmp ne i32 %24, 0, !dbg !4537
  br i1 %25, label %26, label %27, !dbg !4538

26:                                               ; preds = %20
  store i32 0, i32* %6, align 4, !dbg !4539
  br label %35, !dbg !4539

27:                                               ; preds = %20
  %28 = load i8*, i8** %9, align 8, !dbg !4540
  %29 = load i32, i32* %11, align 4, !dbg !4542
  %30 = load i32, i32* %13, align 4, !dbg !4543
  %31 = call i32 @chown(i8* %28, i32 %29, i32 %30) #13, !dbg !4544
  %32 = icmp ne i32 %31, 0, !dbg !4545
  br i1 %32, label %33, label %34, !dbg !4546

33:                                               ; preds = %27
  store i32 0, i32* %6, align 4, !dbg !4547
  br label %35, !dbg !4547

34:                                               ; preds = %27
  store i32 1, i32* %6, align 4, !dbg !4548
  br label %35, !dbg !4548

35:                                               ; preds = %34, %33, %26
  %36 = load i32, i32* %6, align 4, !dbg !4549
  ret i32 %36, !dbg !4549
}

declare dso_local %struct.group* @getgrnam(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @openpty(i32*, i32*, i8*, %struct.termios*, %struct.winsize*) #4

; Function Attrs: nounwind
declare dso_local i32 @chown(i8*, i32, i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_net_ifs(i8** %0) #0 !dbg !4550 {
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %4 = alloca %struct.ifaddrs*, align 8
  %5 = alloca %struct.ifaddrs*, align 8
  %6 = alloca %struct.sockaddr_in*, align 8
  %7 = alloca %struct.sockaddr_in6*, align 8
  %8 = alloca [46 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  store i8** %0, i8*** %3, align 8
  call void @llvm.dbg.declare(metadata i8*** %3, metadata !4554, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.declare(metadata %struct.ifaddrs** %4, metadata !4556, metadata !DIExpression()), !dbg !4579
  call void @llvm.dbg.declare(metadata %struct.ifaddrs** %5, metadata !4580, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %6, metadata !4582, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %7, metadata !4584, metadata !DIExpression()), !dbg !4585
  call void @llvm.dbg.declare(metadata [46 x i8]* %8, metadata !4586, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4591, metadata !DIExpression()), !dbg !4592
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4593, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4595, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4597, metadata !DIExpression()), !dbg !4598
  store i32 0, i32* %12, align 4, !dbg !4598
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4599, metadata !DIExpression()), !dbg !4600
  %14 = call i32 @getifaddrs(%struct.ifaddrs** %5) #13, !dbg !4601
  %15 = icmp ne i32 %14, 0, !dbg !4601
  br i1 %15, label %16, label %17, !dbg !4603

16:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !4604
  br label %299, !dbg !4604

17:                                               ; preds = %1
  %18 = load %struct.ifaddrs*, %struct.ifaddrs** %5, align 8, !dbg !4605
  store %struct.ifaddrs* %18, %struct.ifaddrs** %4, align 8, !dbg !4607
  br label %19, !dbg !4608

19:                                               ; preds = %56, %17
  %20 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4609
  %21 = icmp ne %struct.ifaddrs* %20, null, !dbg !4611
  br i1 %21, label %22, label %60, !dbg !4612

22:                                               ; preds = %19
  %23 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4613
  %24 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %23, i32 0, i32 3, !dbg !4616
  %25 = load %struct.sockaddr*, %struct.sockaddr** %24, align 8, !dbg !4616
  %26 = icmp eq %struct.sockaddr* %25, null, !dbg !4617
  br i1 %26, label %44, label %27, !dbg !4618

27:                                               ; preds = %22
  %28 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4619
  %29 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %28, i32 0, i32 4, !dbg !4620
  %30 = load %struct.sockaddr*, %struct.sockaddr** %29, align 8, !dbg !4620
  %31 = icmp eq %struct.sockaddr* %30, null, !dbg !4621
  br i1 %31, label %44, label %32, !dbg !4622

32:                                               ; preds = %27
  %33 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4623
  %34 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %33, i32 0, i32 2, !dbg !4623
  %35 = load i32, i32* %34, align 8, !dbg !4623
  %36 = and i32 %35, 1, !dbg !4623
  %37 = icmp ne i32 %36, 0, !dbg !4623
  br i1 %37, label %38, label %44, !dbg !4624

38:                                               ; preds = %32
  %39 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4625
  %40 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %39, i32 0, i32 2, !dbg !4625
  %41 = load i32, i32* %40, align 8, !dbg !4625
  %42 = and i32 %41, 8, !dbg !4625
  %43 = icmp ne i32 %42, 0, !dbg !4625
  br i1 %43, label %44, label %45, !dbg !4626

44:                                               ; preds = %38, %32, %27, %22
  br label %56, !dbg !4627

45:                                               ; preds = %38
  %46 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4628
  %47 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %46, i32 0, i32 3, !dbg !4629
  %48 = load %struct.sockaddr*, %struct.sockaddr** %47, align 8, !dbg !4629
  %49 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %48, i32 0, i32 0, !dbg !4630
  %50 = load i16, i16* %49, align 2, !dbg !4630
  %51 = zext i16 %50 to i32, !dbg !4628
  switch i32 %51, label %55 [
    i32 2, label %52
    i32 10, label %52
  ], !dbg !4631

52:                                               ; preds = %45, %45
  %53 = load i32, i32* %12, align 4, !dbg !4632
  %54 = add nsw i32 %53, 1, !dbg !4632
  store i32 %54, i32* %12, align 4, !dbg !4632
  br label %55, !dbg !4634

55:                                               ; preds = %45, %52
  br label %56, !dbg !4635

56:                                               ; preds = %55, %44
  %57 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4636
  %58 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %57, i32 0, i32 0, !dbg !4637
  %59 = load %struct.ifaddrs*, %struct.ifaddrs** %58, align 8, !dbg !4637
  store %struct.ifaddrs* %59, %struct.ifaddrs** %4, align 8, !dbg !4638
  br label %19, !dbg !4639, !llvm.loop !4640

60:                                               ; preds = %19
  %61 = load i32, i32* %12, align 4, !dbg !4642
  %62 = icmp eq i32 %61, 0, !dbg !4644
  br i1 %62, label %63, label %64, !dbg !4645

63:                                               ; preds = %60
  store i32 0, i32* %2, align 4, !dbg !4646
  br label %299, !dbg !4646

64:                                               ; preds = %60
  %65 = load i32, i32* %12, align 4, !dbg !4647
  %66 = mul nsw i32 %65, 2, !dbg !4648
  %67 = mul nsw i32 %66, 46, !dbg !4649
  store i32 %67, i32* %9, align 4, !dbg !4650
  %68 = load i32, i32* %9, align 4, !dbg !4651
  %69 = sext i32 %68 to i64, !dbg !4651
  %70 = call i8* @emalloc(i64 %69), !dbg !4652
  store i8* %70, i8** %13, align 8, !dbg !4653
  %71 = load i8**, i8*** %3, align 8, !dbg !4654
  store i8* %70, i8** %71, align 8, !dbg !4655
  %72 = load %struct.ifaddrs*, %struct.ifaddrs** %5, align 8, !dbg !4656
  store %struct.ifaddrs* %72, %struct.ifaddrs** %4, align 8, !dbg !4658
  store i32 0, i32* %10, align 4, !dbg !4659
  br label %73, !dbg !4660

73:                                               ; preds = %291, %64
  %74 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4661
  %75 = icmp ne %struct.ifaddrs* %74, null, !dbg !4663
  br i1 %75, label %76, label %295, !dbg !4664

76:                                               ; preds = %73
  %77 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4665
  %78 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %77, i32 0, i32 3, !dbg !4668
  %79 = load %struct.sockaddr*, %struct.sockaddr** %78, align 8, !dbg !4668
  %80 = icmp eq %struct.sockaddr* %79, null, !dbg !4669
  br i1 %80, label %98, label %81, !dbg !4670

81:                                               ; preds = %76
  %82 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4671
  %83 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %82, i32 0, i32 4, !dbg !4672
  %84 = load %struct.sockaddr*, %struct.sockaddr** %83, align 8, !dbg !4672
  %85 = icmp eq %struct.sockaddr* %84, null, !dbg !4673
  br i1 %85, label %98, label %86, !dbg !4674

86:                                               ; preds = %81
  %87 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4675
  %88 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %87, i32 0, i32 2, !dbg !4675
  %89 = load i32, i32* %88, align 8, !dbg !4675
  %90 = and i32 %89, 1, !dbg !4675
  %91 = icmp ne i32 %90, 0, !dbg !4675
  br i1 %91, label %92, label %98, !dbg !4676

92:                                               ; preds = %86
  %93 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4677
  %94 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %93, i32 0, i32 2, !dbg !4677
  %95 = load i32, i32* %94, align 8, !dbg !4677
  %96 = and i32 %95, 8, !dbg !4677
  %97 = icmp ne i32 %96, 0, !dbg !4677
  br i1 %97, label %98, label %99, !dbg !4678

98:                                               ; preds = %92, %86, %81, %76
  br label %291, !dbg !4679

99:                                               ; preds = %92
  %100 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4680
  %101 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %100, i32 0, i32 3, !dbg !4681
  %102 = load %struct.sockaddr*, %struct.sockaddr** %101, align 8, !dbg !4681
  %103 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %102, i32 0, i32 0, !dbg !4682
  %104 = load i16, i16* %103, align 2, !dbg !4682
  %105 = zext i16 %104 to i32, !dbg !4680
  switch i32 %105, label %290 [
    i32 2, label %106
    i32 10, label %197
  ], !dbg !4683

106:                                              ; preds = %99
  %107 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4684
  %108 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %107, i32 0, i32 3, !dbg !4686
  %109 = load %struct.sockaddr*, %struct.sockaddr** %108, align 8, !dbg !4686
  %110 = bitcast %struct.sockaddr* %109 to %struct.sockaddr_in*, !dbg !4687
  store %struct.sockaddr_in* %110, %struct.sockaddr_in** %6, align 8, !dbg !4688
  %111 = load i8*, i8** %13, align 8, !dbg !4689
  %112 = load i32, i32* %9, align 4, !dbg !4690
  %113 = sext i32 %112 to i64, !dbg !4690
  %114 = load i8**, i8*** %3, align 8, !dbg !4691
  %115 = load i8*, i8** %114, align 8, !dbg !4692
  %116 = load i8*, i8** %13, align 8, !dbg !4693
  %117 = ptrtoint i8* %115 to i64, !dbg !4694
  %118 = ptrtoint i8* %116 to i64, !dbg !4694
  %119 = sub i64 %117, %118, !dbg !4694
  %120 = sub nsw i64 %113, %119, !dbg !4695
  %121 = load i8*, i8** %13, align 8, !dbg !4696
  %122 = load i8**, i8*** %3, align 8, !dbg !4697
  %123 = load i8*, i8** %122, align 8, !dbg !4698
  %124 = icmp eq i8* %121, %123, !dbg !4699
  %125 = zext i1 %124 to i64, !dbg !4696
  %126 = select i1 %124, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.44, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.45, i64 0, i64 0), !dbg !4696
  %127 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8, !dbg !4700
  %128 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %127, i32 0, i32 2, !dbg !4701
  %129 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %128, i32 0, i32 0, !dbg !4702
  %130 = load i32, i32* %129, align 4, !dbg !4702
  %131 = call i8* @inet_ntoa(i32 %130) #13, !dbg !4702
  %132 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %111, i64 %120, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i8* %126, i8* %131) #13, !dbg !4703
  store i32 %132, i32* %11, align 4, !dbg !4704
  %133 = load i32, i32* %11, align 4, !dbg !4705
  %134 = icmp sle i32 %133, 0, !dbg !4707
  br i1 %134, label %148, label %135, !dbg !4708

135:                                              ; preds = %106
  %136 = load i32, i32* %11, align 4, !dbg !4709
  %137 = sext i32 %136 to i64, !dbg !4709
  %138 = load i32, i32* %9, align 4, !dbg !4710
  %139 = sext i32 %138 to i64, !dbg !4710
  %140 = load i8**, i8*** %3, align 8, !dbg !4711
  %141 = load i8*, i8** %140, align 8, !dbg !4712
  %142 = load i8*, i8** %13, align 8, !dbg !4713
  %143 = ptrtoint i8* %141 to i64, !dbg !4714
  %144 = ptrtoint i8* %142 to i64, !dbg !4714
  %145 = sub i64 %143, %144, !dbg !4714
  %146 = sub nsw i64 %139, %145, !dbg !4715
  %147 = icmp sge i64 %137, %146, !dbg !4716
  br i1 %147, label %148, label %150, !dbg !4717

148:                                              ; preds = %135, %106
  %149 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.47, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.48, i64 0, i64 0)) #13, !dbg !4718
  call void (i8*, ...) @warningx(i8* %149), !dbg !4720
  br label %296, !dbg !4721

150:                                              ; preds = %135
  %151 = load i32, i32* %11, align 4, !dbg !4722
  %152 = load i8*, i8** %13, align 8, !dbg !4723
  %153 = sext i32 %151 to i64, !dbg !4723
  %154 = getelementptr inbounds i8, i8* %152, i64 %153, !dbg !4723
  store i8* %154, i8** %13, align 8, !dbg !4723
  %155 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4724
  %156 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %155, i32 0, i32 4, !dbg !4725
  %157 = load %struct.sockaddr*, %struct.sockaddr** %156, align 8, !dbg !4725
  %158 = bitcast %struct.sockaddr* %157 to %struct.sockaddr_in*, !dbg !4726
  store %struct.sockaddr_in* %158, %struct.sockaddr_in** %6, align 8, !dbg !4727
  %159 = load i8*, i8** %13, align 8, !dbg !4728
  %160 = load i32, i32* %9, align 4, !dbg !4729
  %161 = sext i32 %160 to i64, !dbg !4729
  %162 = load i8**, i8*** %3, align 8, !dbg !4730
  %163 = load i8*, i8** %162, align 8, !dbg !4731
  %164 = load i8*, i8** %13, align 8, !dbg !4732
  %165 = ptrtoint i8* %163 to i64, !dbg !4733
  %166 = ptrtoint i8* %164 to i64, !dbg !4733
  %167 = sub i64 %165, %166, !dbg !4733
  %168 = sub nsw i64 %161, %167, !dbg !4734
  %169 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8, !dbg !4735
  %170 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %169, i32 0, i32 2, !dbg !4736
  %171 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %170, i32 0, i32 0, !dbg !4737
  %172 = load i32, i32* %171, align 4, !dbg !4737
  %173 = call i8* @inet_ntoa(i32 %172) #13, !dbg !4737
  %174 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %159, i64 %168, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.49, i64 0, i64 0), i8* %173) #13, !dbg !4738
  store i32 %174, i32* %11, align 4, !dbg !4739
  %175 = load i32, i32* %11, align 4, !dbg !4740
  %176 = icmp sle i32 %175, 0, !dbg !4742
  br i1 %176, label %190, label %177, !dbg !4743

177:                                              ; preds = %150
  %178 = load i32, i32* %11, align 4, !dbg !4744
  %179 = sext i32 %178 to i64, !dbg !4744
  %180 = load i32, i32* %9, align 4, !dbg !4745
  %181 = sext i32 %180 to i64, !dbg !4745
  %182 = load i8**, i8*** %3, align 8, !dbg !4746
  %183 = load i8*, i8** %182, align 8, !dbg !4747
  %184 = load i8*, i8** %13, align 8, !dbg !4748
  %185 = ptrtoint i8* %183 to i64, !dbg !4749
  %186 = ptrtoint i8* %184 to i64, !dbg !4749
  %187 = sub i64 %185, %186, !dbg !4749
  %188 = sub nsw i64 %181, %187, !dbg !4750
  %189 = icmp sge i64 %179, %188, !dbg !4751
  br i1 %189, label %190, label %192, !dbg !4752

190:                                              ; preds = %177, %150
  %191 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.47, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.48, i64 0, i64 0)) #13, !dbg !4753
  call void (i8*, ...) @warningx(i8* %191), !dbg !4755
  br label %296, !dbg !4756

192:                                              ; preds = %177
  %193 = load i32, i32* %11, align 4, !dbg !4757
  %194 = load i8*, i8** %13, align 8, !dbg !4758
  %195 = sext i32 %193 to i64, !dbg !4758
  %196 = getelementptr inbounds i8, i8* %194, i64 %195, !dbg !4758
  store i8* %196, i8** %13, align 8, !dbg !4758
  br label %290, !dbg !4759

197:                                              ; preds = %99
  %198 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4760
  %199 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %198, i32 0, i32 3, !dbg !4761
  %200 = load %struct.sockaddr*, %struct.sockaddr** %199, align 8, !dbg !4761
  %201 = bitcast %struct.sockaddr* %200 to %struct.sockaddr_in6*, !dbg !4762
  store %struct.sockaddr_in6* %201, %struct.sockaddr_in6** %7, align 8, !dbg !4763
  %202 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %7, align 8, !dbg !4764
  %203 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %202, i32 0, i32 3, !dbg !4765
  %204 = bitcast %struct.in6_addr* %203 to i8*, !dbg !4766
  %205 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i64 0, i64 0, !dbg !4767
  %206 = call i8* @inet_ntop(i32 10, i8* %204, i8* %205, i32 46) #13, !dbg !4768
  %207 = load i8*, i8** %13, align 8, !dbg !4769
  %208 = load i32, i32* %9, align 4, !dbg !4770
  %209 = sext i32 %208 to i64, !dbg !4770
  %210 = load i8**, i8*** %3, align 8, !dbg !4771
  %211 = load i8*, i8** %210, align 8, !dbg !4772
  %212 = load i8*, i8** %13, align 8, !dbg !4773
  %213 = ptrtoint i8* %211 to i64, !dbg !4774
  %214 = ptrtoint i8* %212 to i64, !dbg !4774
  %215 = sub i64 %213, %214, !dbg !4774
  %216 = sub nsw i64 %209, %215, !dbg !4775
  %217 = load i8*, i8** %13, align 8, !dbg !4776
  %218 = load i8**, i8*** %3, align 8, !dbg !4777
  %219 = load i8*, i8** %218, align 8, !dbg !4778
  %220 = icmp eq i8* %217, %219, !dbg !4779
  %221 = zext i1 %220 to i64, !dbg !4776
  %222 = select i1 %220, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.44, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.45, i64 0, i64 0), !dbg !4776
  %223 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i64 0, i64 0, !dbg !4780
  %224 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %207, i64 %216, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i8* %222, i8* %223) #13, !dbg !4781
  store i32 %224, i32* %11, align 4, !dbg !4782
  %225 = load i32, i32* %11, align 4, !dbg !4783
  %226 = icmp sle i32 %225, 0, !dbg !4785
  br i1 %226, label %240, label %227, !dbg !4786

227:                                              ; preds = %197
  %228 = load i32, i32* %11, align 4, !dbg !4787
  %229 = sext i32 %228 to i64, !dbg !4787
  %230 = load i32, i32* %9, align 4, !dbg !4788
  %231 = sext i32 %230 to i64, !dbg !4788
  %232 = load i8**, i8*** %3, align 8, !dbg !4789
  %233 = load i8*, i8** %232, align 8, !dbg !4790
  %234 = load i8*, i8** %13, align 8, !dbg !4791
  %235 = ptrtoint i8* %233 to i64, !dbg !4792
  %236 = ptrtoint i8* %234 to i64, !dbg !4792
  %237 = sub i64 %235, %236, !dbg !4792
  %238 = sub nsw i64 %231, %237, !dbg !4793
  %239 = icmp sge i64 %229, %238, !dbg !4794
  br i1 %239, label %240, label %242, !dbg !4795

240:                                              ; preds = %227, %197
  %241 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.47, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.48, i64 0, i64 0)) #13, !dbg !4796
  call void (i8*, ...) @warningx(i8* %241), !dbg !4798
  br label %296, !dbg !4799

242:                                              ; preds = %227
  %243 = load i32, i32* %11, align 4, !dbg !4800
  %244 = load i8*, i8** %13, align 8, !dbg !4801
  %245 = sext i32 %243 to i64, !dbg !4801
  %246 = getelementptr inbounds i8, i8* %244, i64 %245, !dbg !4801
  store i8* %246, i8** %13, align 8, !dbg !4801
  %247 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4802
  %248 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %247, i32 0, i32 4, !dbg !4803
  %249 = load %struct.sockaddr*, %struct.sockaddr** %248, align 8, !dbg !4803
  %250 = bitcast %struct.sockaddr* %249 to %struct.sockaddr_in6*, !dbg !4804
  store %struct.sockaddr_in6* %250, %struct.sockaddr_in6** %7, align 8, !dbg !4805
  %251 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %7, align 8, !dbg !4806
  %252 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %251, i32 0, i32 3, !dbg !4807
  %253 = bitcast %struct.in6_addr* %252 to i8*, !dbg !4808
  %254 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i64 0, i64 0, !dbg !4809
  %255 = call i8* @inet_ntop(i32 10, i8* %253, i8* %254, i32 46) #13, !dbg !4810
  %256 = load i8*, i8** %13, align 8, !dbg !4811
  %257 = load i32, i32* %9, align 4, !dbg !4812
  %258 = sext i32 %257 to i64, !dbg !4812
  %259 = load i8**, i8*** %3, align 8, !dbg !4813
  %260 = load i8*, i8** %259, align 8, !dbg !4814
  %261 = load i8*, i8** %13, align 8, !dbg !4815
  %262 = ptrtoint i8* %260 to i64, !dbg !4816
  %263 = ptrtoint i8* %261 to i64, !dbg !4816
  %264 = sub i64 %262, %263, !dbg !4816
  %265 = sub nsw i64 %258, %264, !dbg !4817
  %266 = getelementptr inbounds [46 x i8], [46 x i8]* %8, i64 0, i64 0, !dbg !4818
  %267 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %256, i64 %265, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.49, i64 0, i64 0), i8* %266) #13, !dbg !4819
  store i32 %267, i32* %11, align 4, !dbg !4820
  %268 = load i32, i32* %11, align 4, !dbg !4821
  %269 = icmp sle i32 %268, 0, !dbg !4823
  br i1 %269, label %283, label %270, !dbg !4824

270:                                              ; preds = %242
  %271 = load i32, i32* %11, align 4, !dbg !4825
  %272 = sext i32 %271 to i64, !dbg !4825
  %273 = load i32, i32* %9, align 4, !dbg !4826
  %274 = sext i32 %273 to i64, !dbg !4826
  %275 = load i8**, i8*** %3, align 8, !dbg !4827
  %276 = load i8*, i8** %275, align 8, !dbg !4828
  %277 = load i8*, i8** %13, align 8, !dbg !4829
  %278 = ptrtoint i8* %276 to i64, !dbg !4830
  %279 = ptrtoint i8* %277 to i64, !dbg !4830
  %280 = sub i64 %278, %279, !dbg !4830
  %281 = sub nsw i64 %274, %280, !dbg !4831
  %282 = icmp sge i64 %272, %281, !dbg !4832
  br i1 %282, label %283, label %285, !dbg !4833

283:                                              ; preds = %270, %242
  %284 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.47, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.48, i64 0, i64 0)) #13, !dbg !4834
  call void (i8*, ...) @warningx(i8* %284), !dbg !4836
  br label %296, !dbg !4837

285:                                              ; preds = %270
  %286 = load i32, i32* %11, align 4, !dbg !4838
  %287 = load i8*, i8** %13, align 8, !dbg !4839
  %288 = sext i32 %286 to i64, !dbg !4839
  %289 = getelementptr inbounds i8, i8* %287, i64 %288, !dbg !4839
  store i8* %289, i8** %13, align 8, !dbg !4839
  br label %290, !dbg !4840

290:                                              ; preds = %99, %285, %192
  br label %291, !dbg !4841

291:                                              ; preds = %290, %98
  %292 = load %struct.ifaddrs*, %struct.ifaddrs** %4, align 8, !dbg !4842
  %293 = getelementptr inbounds %struct.ifaddrs, %struct.ifaddrs* %292, i32 0, i32 0, !dbg !4843
  %294 = load %struct.ifaddrs*, %struct.ifaddrs** %293, align 8, !dbg !4843
  store %struct.ifaddrs* %294, %struct.ifaddrs** %4, align 8, !dbg !4844
  br label %73, !dbg !4845, !llvm.loop !4846

295:                                              ; preds = %73
  br label %296, !dbg !4847

296:                                              ; preds = %295, %283, %240, %190, %148
  call void @llvm.dbg.label(metadata !4848), !dbg !4849
  %297 = load %struct.ifaddrs*, %struct.ifaddrs** %5, align 8, !dbg !4850
  call void @freeifaddrs(%struct.ifaddrs* %297) #13, !dbg !4851
  %298 = load i32, i32* %12, align 4, !dbg !4852
  store i32 %298, i32* %2, align 4, !dbg !4853
  br label %299, !dbg !4853

299:                                              ; preds = %296, %63, %16
  %300 = load i32, i32* %2, align 4, !dbg !4854
  ret i32 %300, !dbg !4854
}

; Function Attrs: nounwind
declare dso_local i32 @getifaddrs(%struct.ifaddrs**) #4

; Function Attrs: nounwind
declare dso_local i8* @inet_ntoa(i32) #4

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #4

; Function Attrs: nounwind
declare dso_local i8* @inet_ntop(i32, i8*, i8*, i32) #4

; Function Attrs: nounwind
declare dso_local void @freeifaddrs(%struct.ifaddrs*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sudo_load_plugins(i8* %0, %struct.plugin_container* %1, %struct.plugin_container_list* %2) #0 !dbg !4855 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.plugin_container*, align 8
  %6 = alloca %struct.plugin_container_list*, align 8
  %7 = alloca %struct.command_status*, align 8
  %8 = alloca %struct.plugin_container*, align 8
  %9 = alloca %struct.plugin_info*, align 8
  %10 = alloca %struct.plugin_info_list*, align 8
  %11 = alloca %struct.stat, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [4096 x i8], align 16
  %14 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4945, metadata !DIExpression()), !dbg !4946
  store %struct.plugin_container* %1, %struct.plugin_container** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %5, metadata !4947, metadata !DIExpression()), !dbg !4948
  store %struct.plugin_container_list* %2, %struct.plugin_container_list** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container_list** %6, metadata !4949, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.declare(metadata %struct.command_status** %7, metadata !4951, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %8, metadata !4953, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.declare(metadata %struct.plugin_info** %9, metadata !4955, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.declare(metadata %struct.plugin_info_list** %10, metadata !4957, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.declare(metadata %struct.stat* %11, metadata !4959, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.declare(metadata i8** %12, metadata !4992, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.declare(metadata [4096 x i8]* %13, metadata !4994, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4996, metadata !DIExpression()), !dbg !4997
  store i32 0, i32* %14, align 4, !dbg !4997
  %15 = load i8*, i8** %4, align 8, !dbg !4998
  %16 = call %struct.plugin_info_list* @sudo_read_conf(i8* %15), !dbg !4999
  store %struct.plugin_info_list* %16, %struct.plugin_info_list** %10, align 8, !dbg !5000
  %17 = load %struct.plugin_info_list*, %struct.plugin_info_list** %10, align 8, !dbg !5001
  %18 = getelementptr inbounds %struct.plugin_info_list, %struct.plugin_info_list* %17, i32 0, i32 0, !dbg !5001
  %19 = load %struct.plugin_info*, %struct.plugin_info** %18, align 8, !dbg !5001
  store %struct.plugin_info* %19, %struct.plugin_info** %9, align 8, !dbg !5001
  br label %20, !dbg !5001

20:                                               ; preds = %191, %3
  %21 = load %struct.plugin_info*, %struct.plugin_info** %9, align 8, !dbg !5003
  %22 = icmp ne %struct.plugin_info* %21, null, !dbg !5003
  br i1 %22, label %23, label %195, !dbg !5001

23:                                               ; preds = %20
  %24 = load %struct.plugin_info*, %struct.plugin_info** %9, align 8, !dbg !5005
  %25 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %24, i32 0, i32 2, !dbg !5008
  %26 = load i8*, i8** %25, align 8, !dbg !5008
  %27 = getelementptr inbounds i8, i8* %26, i64 0, !dbg !5005
  %28 = load i8, i8* %27, align 1, !dbg !5005
  %29 = sext i8 %28 to i32, !dbg !5005
  %30 = icmp eq i32 %29, 47, !dbg !5009
  br i1 %30, label %31, label %45, !dbg !5010

31:                                               ; preds = %23
  %32 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0, !dbg !5011
  %33 = load %struct.plugin_info*, %struct.plugin_info** %9, align 8, !dbg !5014
  %34 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %33, i32 0, i32 2, !dbg !5015
  %35 = load i8*, i8** %34, align 8, !dbg !5015
  %36 = call i64 @strlcpy(i8* %32, i8* %35, i64 4096), !dbg !5016
  %37 = icmp uge i64 %36, 4096, !dbg !5017
  br i1 %37, label %38, label %44, !dbg !5018

38:                                               ; preds = %31
  %39 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.51, i64 0, i64 0)) #13, !dbg !5019
  %40 = load %struct.plugin_info*, %struct.plugin_info** %9, align 8, !dbg !5021
  %41 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %40, i32 0, i32 2, !dbg !5022
  %42 = load i8*, i8** %41, align 8, !dbg !5022
  %43 = call i8* @strerror(i32 36) #13, !dbg !5023
  call void (i8*, ...) @warningx(i8* %39, i8* %42, i8* %43), !dbg !5024
  br label %217, !dbg !5025

44:                                               ; preds = %31
  br label %60, !dbg !5026

45:                                               ; preds = %23
  %46 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0, !dbg !5027
  %47 = load %struct.plugin_info*, %struct.plugin_info** %9, align 8, !dbg !5030
  %48 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %47, i32 0, i32 2, !dbg !5031
  %49 = load i8*, i8** %48, align 8, !dbg !5031
  %50 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %46, i64 4096, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.52, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.53, i64 0, i64 0), i8* %49) #13, !dbg !5032
  %51 = sext i32 %50 to i64, !dbg !5032
  %52 = icmp uge i64 %51, 4096, !dbg !5033
  br i1 %52, label %53, label %59, !dbg !5034

53:                                               ; preds = %45
  %54 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.54, i64 0, i64 0)) #13, !dbg !5035
  %55 = load %struct.plugin_info*, %struct.plugin_info** %9, align 8, !dbg !5037
  %56 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %55, i32 0, i32 2, !dbg !5038
  %57 = load i8*, i8** %56, align 8, !dbg !5038
  %58 = call i8* @strerror(i32 36) #13, !dbg !5039
  call void (i8*, ...) @warningx(i8* %54, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.53, i64 0, i64 0), i8* %57, i8* %58), !dbg !5040
  br label %217, !dbg !5041

59:                                               ; preds = %45
  br label %60

60:                                               ; preds = %59, %44
  %61 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0, !dbg !5042
  %62 = call i32 @stat(i8* %61, %struct.stat* %11) #13, !dbg !5044
  %63 = icmp ne i32 %62, 0, !dbg !5045
  br i1 %63, label %64, label %66, !dbg !5046

64:                                               ; preds = %60
  %65 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0, !dbg !5047
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.55, i64 0, i64 0), i8* %65), !dbg !5049
  br label %217, !dbg !5050

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 4, !dbg !5051
  %68 = load i32, i32* %67, align 4, !dbg !5051
  %69 = icmp ne i32 %68, 0, !dbg !5053
  br i1 %69, label %70, label %73, !dbg !5054

70:                                               ; preds = %66
  %71 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.56, i64 0, i64 0)) #13, !dbg !5055
  %72 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0, !dbg !5057
  call void (i8*, ...) @warningx(i8* %71, i8* %72, i32 0), !dbg !5058
  br label %217, !dbg !5059

73:                                               ; preds = %66
  %74 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !5060
  %75 = load i32, i32* %74, align 8, !dbg !5060
  %76 = and i32 %75, 18, !dbg !5062
  %77 = icmp ne i32 %76, 0, !dbg !5063
  br i1 %77, label %78, label %81, !dbg !5064

78:                                               ; preds = %73
  %79 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.57, i64 0, i64 0)) #13, !dbg !5065
  %80 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0, !dbg !5067
  call void (i8*, ...) @warningx(i8* %79, i8* %80), !dbg !5068
  br label %217, !dbg !5069

81:                                               ; preds = %73
  %82 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0, !dbg !5070
  %83 = call i8* @dlopen(i8* %82, i32 257) #13, !dbg !5071
  store i8* %83, i8** %12, align 8, !dbg !5072
  %84 = load i8*, i8** %12, align 8, !dbg !5073
  %85 = icmp ne i8* %84, null, !dbg !5073
  br i1 %85, label %90, label %86, !dbg !5075

86:                                               ; preds = %81
  %87 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.58, i64 0, i64 0)) #13, !dbg !5076
  %88 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0, !dbg !5078
  %89 = call i8* @dlerror() #13, !dbg !5079
  call void (i8*, ...) @warningx(i8* %87, i8* %88, i8* %89), !dbg !5080
  br label %217, !dbg !5081

90:                                               ; preds = %81
  %91 = load i8*, i8** %12, align 8, !dbg !5082
  %92 = load %struct.plugin_info*, %struct.plugin_info** %9, align 8, !dbg !5083
  %93 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %92, i32 0, i32 3, !dbg !5084
  %94 = load i8*, i8** %93, align 8, !dbg !5084
  %95 = call i8* @dlsym(i8* %91, i8* %94) #13, !dbg !5085
  %96 = bitcast i8* %95 to %struct.command_status*, !dbg !5085
  store %struct.command_status* %96, %struct.command_status** %7, align 8, !dbg !5086
  %97 = load %struct.command_status*, %struct.command_status** %7, align 8, !dbg !5087
  %98 = icmp ne %struct.command_status* %97, null, !dbg !5087
  br i1 %98, label %105, label %99, !dbg !5089

99:                                               ; preds = %90
  %100 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.59, i64 0, i64 0)) #13, !dbg !5090
  %101 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0, !dbg !5092
  %102 = load %struct.plugin_info*, %struct.plugin_info** %9, align 8, !dbg !5093
  %103 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %102, i32 0, i32 3, !dbg !5094
  %104 = load i8*, i8** %103, align 8, !dbg !5094
  call void (i8*, ...) @warningx(i8* %100, i8* %101, i8* %104), !dbg !5095
  br label %217, !dbg !5096

105:                                              ; preds = %90
  %106 = load %struct.command_status*, %struct.command_status** %7, align 8, !dbg !5097
  %107 = getelementptr inbounds %struct.command_status, %struct.command_status* %106, i32 0, i32 0, !dbg !5099
  %108 = load i32, i32* %107, align 4, !dbg !5099
  %109 = icmp ne i32 %108, 1, !dbg !5100
  br i1 %109, label %110, label %121, !dbg !5101

110:                                              ; preds = %105
  %111 = load %struct.command_status*, %struct.command_status** %7, align 8, !dbg !5102
  %112 = getelementptr inbounds %struct.command_status, %struct.command_status* %111, i32 0, i32 0, !dbg !5103
  %113 = load i32, i32* %112, align 4, !dbg !5103
  %114 = icmp ne i32 %113, 2, !dbg !5104
  br i1 %114, label %115, label %121, !dbg !5105

115:                                              ; preds = %110
  %116 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.60, i64 0, i64 0)) #13, !dbg !5106
  %117 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0, !dbg !5108
  %118 = load %struct.command_status*, %struct.command_status** %7, align 8, !dbg !5109
  %119 = getelementptr inbounds %struct.command_status, %struct.command_status* %118, i32 0, i32 0, !dbg !5110
  %120 = load i32, i32* %119, align 4, !dbg !5110
  call void (i8*, ...) @warningx(i8* %116, i8* %117, i32 %120), !dbg !5111
  br label %217, !dbg !5112

121:                                              ; preds = %110, %105
  %122 = load %struct.command_status*, %struct.command_status** %7, align 8, !dbg !5113
  %123 = getelementptr inbounds %struct.command_status, %struct.command_status* %122, i32 0, i32 1, !dbg !5113
  %124 = load i32, i32* %123, align 4, !dbg !5113
  %125 = lshr i32 %124, 16, !dbg !5113
  %126 = icmp ne i32 %125, 1, !dbg !5115
  br i1 %126, label %127, label %134, !dbg !5116

127:                                              ; preds = %121
  %128 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.11.61, i64 0, i64 0)) #13, !dbg !5117
  %129 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0, !dbg !5119
  %130 = load %struct.command_status*, %struct.command_status** %7, align 8, !dbg !5120
  %131 = getelementptr inbounds %struct.command_status, %struct.command_status* %130, i32 0, i32 1, !dbg !5120
  %132 = load i32, i32* %131, align 4, !dbg !5120
  %133 = lshr i32 %132, 16, !dbg !5120
  call void (i8*, ...) @warningx(i8* %128, i8* %129, i32 %133, i32 1), !dbg !5121
  br label %217, !dbg !5122

134:                                              ; preds = %121
  %135 = load %struct.command_status*, %struct.command_status** %7, align 8, !dbg !5123
  %136 = getelementptr inbounds %struct.command_status, %struct.command_status* %135, i32 0, i32 0, !dbg !5125
  %137 = load i32, i32* %136, align 4, !dbg !5125
  %138 = icmp eq i32 %137, 1, !dbg !5126
  br i1 %138, label %139, label %160, !dbg !5127

139:                                              ; preds = %134
  %140 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !5128
  %141 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %140, i32 0, i32 3, !dbg !5131
  %142 = load i8*, i8** %141, align 8, !dbg !5131
  %143 = icmp ne i8* %142, null, !dbg !5128
  br i1 %143, label %144, label %147, !dbg !5132

144:                                              ; preds = %139
  %145 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12.62, i64 0, i64 0)) #13, !dbg !5133
  %146 = load i8*, i8** %4, align 8, !dbg !5135
  call void (i8*, ...) @warningx(i8* %145, i8* %146), !dbg !5136
  br label %217, !dbg !5137

147:                                              ; preds = %139
  %148 = load i8*, i8** %12, align 8, !dbg !5138
  %149 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !5139
  %150 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %149, i32 0, i32 3, !dbg !5140
  store i8* %148, i8** %150, align 8, !dbg !5141
  %151 = load %struct.plugin_info*, %struct.plugin_info** %9, align 8, !dbg !5142
  %152 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %151, i32 0, i32 3, !dbg !5143
  %153 = load i8*, i8** %152, align 8, !dbg !5143
  %154 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !5144
  %155 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %154, i32 0, i32 2, !dbg !5145
  store i8* %153, i8** %155, align 8, !dbg !5146
  %156 = load %struct.command_status*, %struct.command_status** %7, align 8, !dbg !5147
  %157 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !5148
  %158 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %157, i32 0, i32 4, !dbg !5149
  %159 = bitcast %union.anon.9* %158 to %struct.command_status**, !dbg !5150
  store %struct.command_status* %156, %struct.command_status** %159, align 8, !dbg !5151
  br label %190, !dbg !5152

160:                                              ; preds = %134
  %161 = load %struct.command_status*, %struct.command_status** %7, align 8, !dbg !5153
  %162 = getelementptr inbounds %struct.command_status, %struct.command_status* %161, i32 0, i32 0, !dbg !5155
  %163 = load i32, i32* %162, align 4, !dbg !5155
  %164 = icmp eq i32 %163, 2, !dbg !5156
  br i1 %164, label %165, label %189, !dbg !5157

165:                                              ; preds = %160
  %166 = call i8* @emalloc(i64 40), !dbg !5158
  %167 = bitcast i8* %166 to %struct.plugin_container*, !dbg !5158
  store %struct.plugin_container* %167, %struct.plugin_container** %8, align 8, !dbg !5160
  %168 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !5161
  %169 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !5162
  %170 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %169, i32 0, i32 0, !dbg !5163
  store %struct.plugin_container* %168, %struct.plugin_container** %170, align 8, !dbg !5164
  %171 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !5165
  %172 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %171, i32 0, i32 1, !dbg !5166
  store %struct.plugin_container* null, %struct.plugin_container** %172, align 8, !dbg !5167
  %173 = load i8*, i8** %12, align 8, !dbg !5168
  %174 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !5169
  %175 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %174, i32 0, i32 3, !dbg !5170
  store i8* %173, i8** %175, align 8, !dbg !5171
  %176 = load %struct.plugin_info*, %struct.plugin_info** %9, align 8, !dbg !5172
  %177 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %176, i32 0, i32 3, !dbg !5173
  %178 = load i8*, i8** %177, align 8, !dbg !5173
  %179 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !5174
  %180 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %179, i32 0, i32 2, !dbg !5175
  store i8* %178, i8** %180, align 8, !dbg !5176
  %181 = load %struct.command_status*, %struct.command_status** %7, align 8, !dbg !5177
  %182 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !5178
  %183 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %182, i32 0, i32 4, !dbg !5179
  %184 = bitcast %union.anon.9* %183 to %struct.command_status**, !dbg !5180
  store %struct.command_status* %181, %struct.command_status** %184, align 8, !dbg !5181
  %185 = load %struct.plugin_container_list*, %struct.plugin_container_list** %6, align 8, !dbg !5182
  %186 = bitcast %struct.plugin_container_list* %185 to i8*, !dbg !5182
  %187 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !5183
  %188 = bitcast %struct.plugin_container* %187 to i8*, !dbg !5183
  call void @tq_append(i8* %186, i8* %188), !dbg !5184
  br label %189, !dbg !5185

189:                                              ; preds = %165, %160
  br label %190

190:                                              ; preds = %189, %147
  br label %191, !dbg !5186

191:                                              ; preds = %190
  %192 = load %struct.plugin_info*, %struct.plugin_info** %9, align 8, !dbg !5003
  %193 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %192, i32 0, i32 1, !dbg !5003
  %194 = load %struct.plugin_info*, %struct.plugin_info** %193, align 8, !dbg !5003
  store %struct.plugin_info* %194, %struct.plugin_info** %9, align 8, !dbg !5003
  br label %20, !dbg !5003, !llvm.loop !5187

195:                                              ; preds = %20
  %196 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !5189
  %197 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %196, i32 0, i32 3, !dbg !5191
  %198 = load i8*, i8** %197, align 8, !dbg !5191
  %199 = icmp eq i8* %198, null, !dbg !5192
  br i1 %199, label %200, label %203, !dbg !5193

200:                                              ; preds = %195
  %201 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.13.63, i64 0, i64 0)) #13, !dbg !5194
  %202 = load i8*, i8** %4, align 8, !dbg !5196
  call void (i8*, ...) @warningx(i8* %201, i8* %202), !dbg !5197
  br label %217, !dbg !5198

203:                                              ; preds = %195
  %204 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !5199
  %205 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %204, i32 0, i32 4, !dbg !5201
  %206 = bitcast %union.anon.9* %205 to %struct.policy_plugin**, !dbg !5202
  %207 = load %struct.policy_plugin*, %struct.policy_plugin** %206, align 8, !dbg !5202
  %208 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %207, i32 0, i32 5, !dbg !5203
  %209 = load i32 (i32, i8**, i8**, i8***, i8***, i8***)*, i32 (i32, i8**, i8**, i8***, i8***, i8***)** %208, align 8, !dbg !5203
  %210 = icmp eq i32 (i32, i8**, i8**, i8***, i8***, i8***)* %209, null, !dbg !5204
  br i1 %210, label %211, label %216, !dbg !5205

211:                                              ; preds = %203
  %212 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.64, i64 0, i64 0)) #13, !dbg !5206
  %213 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !5208
  %214 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %213, i32 0, i32 2, !dbg !5209
  %215 = load i8*, i8** %214, align 8, !dbg !5209
  call void (i8*, ...) @warningx(i8* %212, i8* %215), !dbg !5210
  br label %217, !dbg !5211

216:                                              ; preds = %203
  store i32 1, i32* %14, align 4, !dbg !5212
  br label %217, !dbg !5213

217:                                              ; preds = %216, %211, %200, %144, %127, %115, %99, %86, %78, %70, %64, %53, %38
  call void @llvm.dbg.label(metadata !5214), !dbg !5215
  %218 = load i32, i32* %14, align 4, !dbg !5216
  ret i32 %218, !dbg !5217
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.plugin_info_list* @sudo_read_conf(i8* %0) #0 !dbg !244 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.plugin_info*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !5218, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %3, metadata !5220, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5258, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5260, metadata !DIExpression()), !dbg !5261
  call void @llvm.dbg.declare(metadata %struct.plugin_info** %7, metadata !5262, metadata !DIExpression()), !dbg !5263
  %8 = load i8*, i8** %2, align 8, !dbg !5264
  %9 = call %struct._IO_FILE* @fopen(i8* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15.65, i64 0, i64 0)), !dbg !5266
  store %struct._IO_FILE* %9, %struct._IO_FILE** %3, align 8, !dbg !5267
  %10 = icmp eq %struct._IO_FILE* %9, null, !dbg !5268
  br i1 %10, label %11, label %12, !dbg !5269

11:                                               ; preds = %1
  br label %87, !dbg !5270

12:                                               ; preds = %1
  br label %13, !dbg !5271

13:                                               ; preds = %83, %65, %64, %51, %35, %22, %12
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5272
  %15 = call i8* @sudo_parseln(%struct._IO_FILE* %14), !dbg !5273
  store i8* %15, i8** %4, align 8, !dbg !5274
  %16 = icmp ne i8* %15, null, !dbg !5275
  br i1 %16, label %17, label %84, !dbg !5271

17:                                               ; preds = %13
  %18 = load i8*, i8** %4, align 8, !dbg !5276
  %19 = load i8, i8* %18, align 1, !dbg !5279
  %20 = sext i8 %19 to i32, !dbg !5279
  %21 = icmp eq i32 %20, 0, !dbg !5280
  br i1 %21, label %22, label %23, !dbg !5281

22:                                               ; preds = %17
  br label %13, !dbg !5282, !llvm.loop !5283

23:                                               ; preds = %17
  %24 = load i8*, i8** %4, align 8, !dbg !5285
  %25 = call i32 @strncasecmp(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.66, i64 0, i64 0), i64 4) #12, !dbg !5287
  %26 = icmp eq i32 %25, 0, !dbg !5288
  br i1 %26, label %27, label %52, !dbg !5289

27:                                               ; preds = %23
  %28 = load i8*, i8** %4, align 8, !dbg !5290
  %29 = getelementptr inbounds i8, i8* %28, i64 4, !dbg !5293
  %30 = call i8* @strtok(i8* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.67, i64 0, i64 0)) #13, !dbg !5294
  store i8* %30, i8** %5, align 8, !dbg !5295
  %31 = icmp eq i8* %30, null, !dbg !5296
  br i1 %31, label %35, label %32, !dbg !5297

32:                                               ; preds = %27
  %33 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.67, i64 0, i64 0)) #13, !dbg !5298
  store i8* %33, i8** %6, align 8, !dbg !5299
  %34 = icmp eq i8* %33, null, !dbg !5300
  br i1 %34, label %35, label %36, !dbg !5301

35:                                               ; preds = %32, %27
  br label %13, !dbg !5302, !llvm.loop !5283

36:                                               ; preds = %32
  %37 = load i8*, i8** %5, align 8, !dbg !5304
  %38 = call i32 @strcasecmp(i8* %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.68, i64 0, i64 0)) #12, !dbg !5306
  %39 = icmp eq i32 %38, 0, !dbg !5307
  br i1 %39, label %40, label %43, !dbg !5308

40:                                               ; preds = %36
  %41 = load i8*, i8** %6, align 8, !dbg !5309
  %42 = call i8* @estrdup(i8* %41), !dbg !5310
  store i8* %42, i8** @askpass_path, align 8, !dbg !5311
  br label %51, !dbg !5312

43:                                               ; preds = %36
  %44 = load i8*, i8** %5, align 8, !dbg !5313
  %45 = call i32 @strcasecmp(i8* %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19.69, i64 0, i64 0)) #12, !dbg !5315
  %46 = icmp eq i32 %45, 0, !dbg !5316
  br i1 %46, label %47, label %50, !dbg !5317

47:                                               ; preds = %43
  %48 = load i8*, i8** %6, align 8, !dbg !5318
  %49 = call i8* @estrdup(i8* %48), !dbg !5319
  store i8* %49, i8** @noexec_path, align 8, !dbg !5320
  br label %50, !dbg !5321

50:                                               ; preds = %47, %43
  br label %51

51:                                               ; preds = %50, %40
  br label %13, !dbg !5322, !llvm.loop !5283

52:                                               ; preds = %23
  %53 = load i8*, i8** %4, align 8, !dbg !5323
  %54 = call i32 @strncasecmp(i8* %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.70, i64 0, i64 0), i64 6) #12, !dbg !5325
  %55 = icmp eq i32 %54, 0, !dbg !5326
  br i1 %55, label %56, label %83, !dbg !5327

56:                                               ; preds = %52
  %57 = load i8*, i8** %4, align 8, !dbg !5328
  %58 = getelementptr inbounds i8, i8* %57, i64 6, !dbg !5331
  %59 = call i8* @strtok(i8* %58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.67, i64 0, i64 0)) #13, !dbg !5332
  store i8* %59, i8** %5, align 8, !dbg !5333
  %60 = icmp eq i8* %59, null, !dbg !5334
  br i1 %60, label %64, label %61, !dbg !5335

61:                                               ; preds = %56
  %62 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.67, i64 0, i64 0)) #13, !dbg !5336
  store i8* %62, i8** %6, align 8, !dbg !5337
  %63 = icmp eq i8* %62, null, !dbg !5338
  br i1 %63, label %64, label %65, !dbg !5339

64:                                               ; preds = %61, %56
  br label %13, !dbg !5340, !llvm.loop !5283

65:                                               ; preds = %61
  %66 = call i8* @emalloc(i64 32), !dbg !5342
  %67 = bitcast i8* %66 to %struct.plugin_info*, !dbg !5342
  store %struct.plugin_info* %67, %struct.plugin_info** %7, align 8, !dbg !5343
  %68 = load i8*, i8** %5, align 8, !dbg !5344
  %69 = call i8* @estrdup(i8* %68), !dbg !5345
  %70 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5346
  %71 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %70, i32 0, i32 3, !dbg !5347
  store i8* %69, i8** %71, align 8, !dbg !5348
  %72 = load i8*, i8** %6, align 8, !dbg !5349
  %73 = call i8* @estrdup(i8* %72), !dbg !5350
  %74 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5351
  %75 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %74, i32 0, i32 2, !dbg !5352
  store i8* %73, i8** %75, align 8, !dbg !5353
  %76 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5354
  %77 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5355
  %78 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %77, i32 0, i32 0, !dbg !5356
  store %struct.plugin_info* %76, %struct.plugin_info** %78, align 8, !dbg !5357
  %79 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5358
  %80 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %79, i32 0, i32 1, !dbg !5359
  store %struct.plugin_info* null, %struct.plugin_info** %80, align 8, !dbg !5360
  %81 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5361
  %82 = bitcast %struct.plugin_info* %81 to i8*, !dbg !5361
  call void @tq_append(i8* bitcast (%struct.plugin_info_list* @sudo_read_conf.pil to i8*), i8* %82), !dbg !5362
  br label %13, !dbg !5363, !llvm.loop !5283

83:                                               ; preds = %52
  br label %13, !dbg !5271, !llvm.loop !5283

84:                                               ; preds = %13
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8, !dbg !5364
  %86 = call i32 @fclose(%struct._IO_FILE* %85), !dbg !5365
  br label %87, !dbg !5365

87:                                               ; preds = %84, %11
  call void @llvm.dbg.label(metadata !5366), !dbg !5367
  %88 = load %struct.plugin_info*, %struct.plugin_info** getelementptr inbounds (%struct.plugin_info_list, %struct.plugin_info_list* @sudo_read_conf.pil, i32 0, i32 0), align 8, !dbg !5368
  %89 = icmp eq %struct.plugin_info* %88, null, !dbg !5368
  br i1 %89, label %90, label %117, !dbg !5370

90:                                               ; preds = %87
  %91 = call i8* @emalloc(i64 32), !dbg !5371
  %92 = bitcast i8* %91 to %struct.plugin_info*, !dbg !5371
  store %struct.plugin_info* %92, %struct.plugin_info** %7, align 8, !dbg !5373
  %93 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5374
  %94 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %93, i32 0, i32 3, !dbg !5375
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21.71, i64 0, i64 0), i8** %94, align 8, !dbg !5376
  %95 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5377
  %96 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %95, i32 0, i32 2, !dbg !5378
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22.72, i64 0, i64 0), i8** %96, align 8, !dbg !5379
  %97 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5380
  %98 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5381
  %99 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %98, i32 0, i32 0, !dbg !5382
  store %struct.plugin_info* %97, %struct.plugin_info** %99, align 8, !dbg !5383
  %100 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5384
  %101 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %100, i32 0, i32 1, !dbg !5385
  store %struct.plugin_info* null, %struct.plugin_info** %101, align 8, !dbg !5386
  %102 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5387
  %103 = bitcast %struct.plugin_info* %102 to i8*, !dbg !5387
  call void @tq_append(i8* bitcast (%struct.plugin_info_list* @sudo_read_conf.pil to i8*), i8* %103), !dbg !5388
  %104 = call i8* @emalloc(i64 32), !dbg !5389
  %105 = bitcast i8* %104 to %struct.plugin_info*, !dbg !5389
  store %struct.plugin_info* %105, %struct.plugin_info** %7, align 8, !dbg !5390
  %106 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5391
  %107 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %106, i32 0, i32 3, !dbg !5392
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23.73, i64 0, i64 0), i8** %107, align 8, !dbg !5393
  %108 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5394
  %109 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %108, i32 0, i32 2, !dbg !5395
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22.72, i64 0, i64 0), i8** %109, align 8, !dbg !5396
  %110 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5397
  %111 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5398
  %112 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %111, i32 0, i32 0, !dbg !5399
  store %struct.plugin_info* %110, %struct.plugin_info** %112, align 8, !dbg !5400
  %113 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5401
  %114 = getelementptr inbounds %struct.plugin_info, %struct.plugin_info* %113, i32 0, i32 1, !dbg !5402
  store %struct.plugin_info* null, %struct.plugin_info** %114, align 8, !dbg !5403
  %115 = load %struct.plugin_info*, %struct.plugin_info** %7, align 8, !dbg !5404
  %116 = bitcast %struct.plugin_info* %115 to i8*, !dbg !5404
  call void @tq_append(i8* bitcast (%struct.plugin_info_list* @sudo_read_conf.pil to i8*), i8* %116), !dbg !5405
  br label %117, !dbg !5406

117:                                              ; preds = %90, %87
  ret %struct.plugin_info_list* @sudo_read_conf.pil, !dbg !5407
}

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #4

; Function Attrs: nounwind
declare dso_local i8* @dlopen(i8*, i32) #4

; Function Attrs: nounwind
declare dso_local i8* @dlerror() #4

; Function Attrs: nounwind
declare dso_local i8* @dlsym(i8*, i8*) #4

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @strncasecmp(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strtok(i8*, i8*) #4

; Function Attrs: nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) #2

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @parse_args(i32 %0, i8** %1, i32* %2, i8*** %3, i8*** %4, i8*** %5) #0 !dbg !5408 {
  %7 = alloca i32, align 4
  %8 = alloca i8**, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i8***, align 8
  %11 = alloca i8***, align 8
  %12 = alloca i8***, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8**, align 8
  %21 = alloca i8**, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8**, align 8
  %25 = alloca i32, align 4
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5411, metadata !DIExpression()), !dbg !5412
  store i8** %1, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !5413, metadata !DIExpression()), !dbg !5414
  store i32* %2, i32** %9, align 8
  call void @llvm.dbg.declare(metadata i32** %9, metadata !5415, metadata !DIExpression()), !dbg !5416
  store i8*** %3, i8**** %10, align 8
  call void @llvm.dbg.declare(metadata i8**** %10, metadata !5417, metadata !DIExpression()), !dbg !5418
  store i8*** %4, i8**** %11, align 8
  call void @llvm.dbg.declare(metadata i8**** %11, metadata !5419, metadata !DIExpression()), !dbg !5420
  store i8*** %5, i8**** %12, align 8
  call void @llvm.dbg.declare(metadata i8**** %12, metadata !5421, metadata !DIExpression()), !dbg !5422
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5423, metadata !DIExpression()), !dbg !5424
  store i32 0, i32* %13, align 4, !dbg !5424
  call void @llvm.dbg.declare(metadata i32* %14, metadata !5425, metadata !DIExpression()), !dbg !5426
  store i32 0, i32* %14, align 4, !dbg !5426
  call void @llvm.dbg.declare(metadata i32* %15, metadata !5427, metadata !DIExpression()), !dbg !5428
  call void @llvm.dbg.declare(metadata i32* %16, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.declare(metadata i32* %17, metadata !5431, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.declare(metadata i32* %18, metadata !5433, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.declare(metadata i8** %19, metadata !5435, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.declare(metadata i8*** %20, metadata !5437, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.declare(metadata i8*** %21, metadata !5439, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.declare(metadata i32* %22, metadata !5441, metadata !DIExpression()), !dbg !5442
  store i32 0, i32* %22, align 4, !dbg !5442
  call void @llvm.dbg.declare(metadata i32* %23, metadata !5443, metadata !DIExpression()), !dbg !5444
  store i32 32, i32* %23, align 4, !dbg !5444
  %30 = load i32, i32* %23, align 4, !dbg !5445
  %31 = sext i32 %30 to i64, !dbg !5445
  %32 = call i8* @emalloc2(i64 %31, i64 8), !dbg !5446
  %33 = bitcast i8* %32 to i8**, !dbg !5446
  store i8** %33, i8*** %20, align 8, !dbg !5447
  %34 = load i8*, i8** @__progname, align 8, !dbg !5448
  store i8* %34, i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 13, i32 1), align 8, !dbg !5449
  %35 = load i8*, i8** @__progname, align 8, !dbg !5450
  %36 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0)) #12, !dbg !5452
  %37 = icmp eq i32 %36, 0, !dbg !5453
  br i1 %37, label %38, label %39, !dbg !5454

38:                                               ; preds = %6
  store i32 2, i32* %13, align 4, !dbg !5455
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.77, i64 0, i64 0), i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 17, i32 1), align 8, !dbg !5457
  br label %39, !dbg !5458

39:                                               ; preds = %38, %6
  %40 = call i32 @get_net_ifs(i8** %19), !dbg !5459
  %41 = icmp sgt i32 %40, 0, !dbg !5461
  br i1 %41, label %42, label %44, !dbg !5462

42:                                               ; preds = %39
  %43 = load i8*, i8** %19, align 8, !dbg !5463
  store i8* %43, i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 19, i32 1), align 8, !dbg !5464
  br label %44, !dbg !5465

44:                                               ; preds = %42, %39
  store i32 14090240, i32* %15, align 4, !dbg !5466
  br label %45, !dbg !5467

45:                                               ; preds = %256, %44
  %46 = load i32, i32* %7, align 4, !dbg !5468
  %47 = load i8**, i8*** %8, align 8, !dbg !5473
  %48 = call i32 @getopt(i32 %46, i8** %47, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.78, i64 0, i64 0)) #13, !dbg !5474
  store i32 %48, i32* %16, align 4, !dbg !5475
  %49 = icmp ne i32 %48, -1, !dbg !5476
  br i1 %49, label %50, label %169, !dbg !5477

50:                                               ; preds = %45
  %51 = load i32, i32* %16, align 4, !dbg !5478
  switch i32 %51, label %167 [
    i32 65, label %52
    i32 98, label %55
    i32 67, label %58
    i32 68, label %66
    i32 69, label %77
    i32 101, label %78
    i32 103, label %86
    i32 72, label %89
    i32 104, label %90
    i32 105, label %103
    i32 107, label %106
    i32 75, label %107
    i32 108, label %115
    i32 110, label %127
    i32 80, label %130
    i32 112, label %131
    i32 83, label %133
    i32 115, label %136
    i32 85, label %139
    i32 117, label %148
    i32 118, label %151
    i32 86, label %159
  ], !dbg !5480

52:                                               ; preds = %50
  %53 = load i32, i32* @tgetpass_flags, align 4, !dbg !5481
  %54 = or i32 %53, 4, !dbg !5481
  store i32 %54, i32* @tgetpass_flags, align 4, !dbg !5481
  br label %168, !dbg !5483

55:                                               ; preds = %50
  %56 = load i32, i32* %14, align 4, !dbg !5484
  %57 = or i32 %56, 65536, !dbg !5484
  store i32 %57, i32* %14, align 4, !dbg !5484
  br label %168, !dbg !5485

58:                                               ; preds = %50
  %59 = load i8*, i8** @optarg, align 8, !dbg !5486
  %60 = call i32 @atoi(i8* %59) #12, !dbg !5488
  %61 = icmp slt i32 %60, 3, !dbg !5489
  br i1 %61, label %62, label %64, !dbg !5490

62:                                               ; preds = %58
  %63 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3.79, i64 0, i64 0)) #13, !dbg !5491
  call void (i8*, ...) @warningx(i8* %63), !dbg !5493
  call void @usage(i32 1), !dbg !5494
  br label %64, !dbg !5495

64:                                               ; preds = %62, %58
  %65 = load i8*, i8** @optarg, align 8, !dbg !5496
  store i8* %65, i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 18, i32 1), align 8, !dbg !5497
  br label %168, !dbg !5498

66:                                               ; preds = %50
  %67 = load i8*, i8** @optarg, align 8, !dbg !5499
  %68 = call i32 @atoi(i8* %67) #12, !dbg !5501
  store i32 %68, i32* @debug_level, align 4, !dbg !5502
  %69 = icmp slt i32 %68, 1, !dbg !5503
  br i1 %69, label %73, label %70, !dbg !5504

70:                                               ; preds = %66
  %71 = load i32, i32* @debug_level, align 4, !dbg !5505
  %72 = icmp sgt i32 %71, 9, !dbg !5506
  br i1 %72, label %73, label %75, !dbg !5507

73:                                               ; preds = %70, %66
  %74 = call i8* @gettext(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4.80, i64 0, i64 0)) #13, !dbg !5508
  call void (i8*, ...) @warningx(i8* %74), !dbg !5510
  call void @usage(i32 1), !dbg !5511
  br label %75, !dbg !5512

75:                                               ; preds = %73, %70
  %76 = load i8*, i8** @optarg, align 8, !dbg !5513
  store i8* %76, i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 2, i32 1), align 8, !dbg !5514
  br label %168, !dbg !5515

77:                                               ; preds = %50
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.77, i64 0, i64 0), i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 3, i32 1), align 8, !dbg !5516
  br label %168, !dbg !5517

78:                                               ; preds = %50
  %79 = load i32, i32* %13, align 4, !dbg !5518
  %80 = icmp ne i32 %79, 0, !dbg !5518
  br i1 %80, label %81, label %85, !dbg !5520

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !5521
  %83 = icmp ne i32 %82, 2, !dbg !5522
  br i1 %83, label %84, label %85, !dbg !5523

84:                                               ; preds = %81
  call void @usage_excl(i32 1), !dbg !5524
  br label %85, !dbg !5524

85:                                               ; preds = %84, %81, %78
  store i32 2, i32* %13, align 4, !dbg !5525
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.77, i64 0, i64 0), i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 17, i32 1), align 8, !dbg !5526
  store i32 8388608, i32* %15, align 4, !dbg !5527
  br label %168, !dbg !5528

86:                                               ; preds = %50
  %87 = load i8*, i8** @optarg, align 8, !dbg !5529
  store i8* %87, i8** @runas_group, align 8, !dbg !5530
  %88 = load i8*, i8** @optarg, align 8, !dbg !5531
  store i8* %88, i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 4, i32 1), align 8, !dbg !5532
  br label %168, !dbg !5533

89:                                               ; preds = %50
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.77, i64 0, i64 0), i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 5, i32 1), align 8, !dbg !5534
  br label %168, !dbg !5535

90:                                               ; preds = %50
  %91 = load i32, i32* %13, align 4, !dbg !5536
  %92 = icmp ne i32 %91, 0, !dbg !5536
  br i1 %92, label %93, label %102, !dbg !5538

93:                                               ; preds = %90
  %94 = load i32, i32* %13, align 4, !dbg !5539
  %95 = icmp ne i32 %94, 64, !dbg !5540
  br i1 %95, label %96, label %102, !dbg !5541

96:                                               ; preds = %93
  %97 = load i8*, i8** @__progname, align 8, !dbg !5542
  %98 = call i32 @strcmp(i8* %97, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0)) #12, !dbg !5545
  %99 = icmp ne i32 %98, 0, !dbg !5546
  br i1 %99, label %100, label %101, !dbg !5547

100:                                              ; preds = %96
  call void @usage_excl(i32 1), !dbg !5548
  br label %101, !dbg !5548

101:                                              ; preds = %100, %96
  br label %102, !dbg !5549

102:                                              ; preds = %101, %93, %90
  store i32 64, i32* %13, align 4, !dbg !5550
  store i32 0, i32* %15, align 4, !dbg !5551
  br label %168, !dbg !5552

103:                                              ; preds = %50
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.77, i64 0, i64 0), i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 7, i32 1), align 8, !dbg !5553
  %104 = load i32, i32* %14, align 4, !dbg !5554
  %105 = or i32 %104, 262144, !dbg !5554
  store i32 %105, i32* %14, align 4, !dbg !5554
  br label %168, !dbg !5555

106:                                              ; preds = %50
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.77, i64 0, i64 0), i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 8, i32 1), align 8, !dbg !5556
  br label %168, !dbg !5557

107:                                              ; preds = %50
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.77, i64 0, i64 0), i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 8, i32 1), align 8, !dbg !5558
  %108 = load i32, i32* %13, align 4, !dbg !5559
  %109 = icmp ne i32 %108, 0, !dbg !5559
  br i1 %109, label %110, label %114, !dbg !5561

110:                                              ; preds = %107
  %111 = load i32, i32* %13, align 4, !dbg !5562
  %112 = icmp ne i32 %111, 16, !dbg !5563
  br i1 %112, label %113, label %114, !dbg !5564

113:                                              ; preds = %110
  call void @usage_excl(i32 1), !dbg !5565
  br label %114, !dbg !5565

114:                                              ; preds = %113, %110, %107
  store i32 16, i32* %13, align 4, !dbg !5566
  store i32 0, i32* %15, align 4, !dbg !5567
  br label %168, !dbg !5568

115:                                              ; preds = %50
  %116 = load i32, i32* %13, align 4, !dbg !5569
  %117 = icmp ne i32 %116, 0, !dbg !5569
  br i1 %117, label %118, label %126, !dbg !5571

118:                                              ; preds = %115
  %119 = load i32, i32* %13, align 4, !dbg !5572
  %120 = icmp eq i32 %119, 128, !dbg !5575
  br i1 %120, label %121, label %124, !dbg !5576

121:                                              ; preds = %118
  %122 = load i32, i32* %14, align 4, !dbg !5577
  %123 = or i32 %122, 16777216, !dbg !5577
  store i32 %123, i32* %14, align 4, !dbg !5577
  br label %125, !dbg !5577

124:                                              ; preds = %118
  call void @usage_excl(i32 1), !dbg !5578
  br label %125

125:                                              ; preds = %124, %121
  br label %126, !dbg !5579

126:                                              ; preds = %125, %115
  store i32 128, i32* %13, align 4, !dbg !5580
  store i32 25165824, i32* %15, align 4, !dbg !5581
  br label %168, !dbg !5582

127:                                              ; preds = %50
  %128 = load i32, i32* %14, align 4, !dbg !5583
  %129 = or i32 %128, 8388608, !dbg !5583
  store i32 %129, i32* %14, align 4, !dbg !5583
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.77, i64 0, i64 0), i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 16, i32 1), align 8, !dbg !5584
  br label %168, !dbg !5585

130:                                              ; preds = %50
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.77, i64 0, i64 0), i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 15, i32 1), align 8, !dbg !5586
  br label %168, !dbg !5587

131:                                              ; preds = %50
  %132 = load i8*, i8** @optarg, align 8, !dbg !5588
  store i8* %132, i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 9, i32 1), align 8, !dbg !5589
  br label %168, !dbg !5590

133:                                              ; preds = %50
  %134 = load i32, i32* @tgetpass_flags, align 4, !dbg !5591
  %135 = or i32 %134, 2, !dbg !5591
  store i32 %135, i32* @tgetpass_flags, align 4, !dbg !5591
  br label %168, !dbg !5592

136:                                              ; preds = %50
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.77, i64 0, i64 0), i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 6, i32 1), align 8, !dbg !5593
  %137 = load i32, i32* %14, align 4, !dbg !5594
  %138 = or i32 %137, 131072, !dbg !5594
  store i32 %138, i32* %14, align 4, !dbg !5594
  br label %168, !dbg !5595

139:                                              ; preds = %50
  %140 = load i8*, i8** @optarg, align 8, !dbg !5596
  %141 = call %struct.passwd* @getpwnam(i8* %140), !dbg !5598
  %142 = icmp eq %struct.passwd* %141, null, !dbg !5599
  br i1 %142, label %143, label %146, !dbg !5600

143:                                              ; preds = %139
  %144 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5.81, i64 0, i64 0)) #13, !dbg !5601
  %145 = load i8*, i8** @optarg, align 8, !dbg !5602
  call void (i32, i8*, ...) @errorx(i32 1, i8* %144, i8* %145) #16, !dbg !5603
  unreachable, !dbg !5603

146:                                              ; preds = %139
  %147 = load i8*, i8** @optarg, align 8, !dbg !5604
  store i8* %147, i8** @list_user, align 8, !dbg !5605
  br label %168, !dbg !5606

148:                                              ; preds = %50
  %149 = load i8*, i8** @optarg, align 8, !dbg !5607
  store i8* %149, i8** @runas_user, align 8, !dbg !5608
  %150 = load i8*, i8** @optarg, align 8, !dbg !5609
  store i8* %150, i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 12, i32 1), align 8, !dbg !5610
  br label %168, !dbg !5611

151:                                              ; preds = %50
  %152 = load i32, i32* %13, align 4, !dbg !5612
  %153 = icmp ne i32 %152, 0, !dbg !5612
  br i1 %153, label %154, label %158, !dbg !5614

154:                                              ; preds = %151
  %155 = load i32, i32* %13, align 4, !dbg !5615
  %156 = icmp ne i32 %155, 4, !dbg !5616
  br i1 %156, label %157, label %158, !dbg !5617

157:                                              ; preds = %154
  call void @usage_excl(i32 1), !dbg !5618
  br label %158, !dbg !5618

158:                                              ; preds = %157, %154, %151
  store i32 4, i32* %13, align 4, !dbg !5619
  store i32 8388608, i32* %15, align 4, !dbg !5620
  br label %168, !dbg !5621

159:                                              ; preds = %50
  %160 = load i32, i32* %13, align 4, !dbg !5622
  %161 = icmp ne i32 %160, 0, !dbg !5622
  br i1 %161, label %162, label %166, !dbg !5624

162:                                              ; preds = %159
  %163 = load i32, i32* %13, align 4, !dbg !5625
  %164 = icmp ne i32 %163, 32, !dbg !5626
  br i1 %164, label %165, label %166, !dbg !5627

165:                                              ; preds = %162
  call void @usage_excl(i32 1), !dbg !5628
  br label %166, !dbg !5628

166:                                              ; preds = %165, %162, %159
  store i32 32, i32* %13, align 4, !dbg !5629
  store i32 0, i32* %15, align 4, !dbg !5630
  br label %168, !dbg !5631

167:                                              ; preds = %50
  call void @usage(i32 1), !dbg !5632
  br label %168, !dbg !5633

168:                                              ; preds = %167, %166, %158, %148, %146, %136, %133, %131, %130, %127, %126, %114, %106, %103, %102, %89, %86, %85, %77, %75, %64, %55, %52
  br label %256, !dbg !5634

169:                                              ; preds = %45
  %170 = load i32, i32* @optind, align 4, !dbg !5635
  %171 = icmp sgt i32 %170, 1, !dbg !5635
  br i1 %171, label %172, label %205, !dbg !5635

172:                                              ; preds = %169
  %173 = load i8**, i8*** %8, align 8, !dbg !5635
  %174 = load i32, i32* @optind, align 4, !dbg !5635
  %175 = sub nsw i32 %174, 1, !dbg !5635
  %176 = sext i32 %175 to i64, !dbg !5635
  %177 = getelementptr inbounds i8*, i8** %173, i64 %176, !dbg !5635
  %178 = load i8*, i8** %177, align 8, !dbg !5635
  %179 = getelementptr inbounds i8, i8* %178, i64 0, !dbg !5635
  %180 = load i8, i8* %179, align 1, !dbg !5635
  %181 = sext i8 %180 to i32, !dbg !5635
  %182 = icmp eq i32 %181, 45, !dbg !5635
  br i1 %182, label %183, label %205, !dbg !5635

183:                                              ; preds = %172
  %184 = load i8**, i8*** %8, align 8, !dbg !5635
  %185 = load i32, i32* @optind, align 4, !dbg !5635
  %186 = sub nsw i32 %185, 1, !dbg !5635
  %187 = sext i32 %186 to i64, !dbg !5635
  %188 = getelementptr inbounds i8*, i8** %184, i64 %187, !dbg !5635
  %189 = load i8*, i8** %188, align 8, !dbg !5635
  %190 = getelementptr inbounds i8, i8* %189, i64 1, !dbg !5635
  %191 = load i8, i8* %190, align 1, !dbg !5635
  %192 = sext i8 %191 to i32, !dbg !5635
  %193 = icmp eq i32 %192, 45, !dbg !5635
  br i1 %193, label %194, label %205, !dbg !5635

194:                                              ; preds = %183
  %195 = load i8**, i8*** %8, align 8, !dbg !5635
  %196 = load i32, i32* @optind, align 4, !dbg !5635
  %197 = sub nsw i32 %196, 1, !dbg !5635
  %198 = sext i32 %197 to i64, !dbg !5635
  %199 = getelementptr inbounds i8*, i8** %195, i64 %198, !dbg !5635
  %200 = load i8*, i8** %199, align 8, !dbg !5635
  %201 = getelementptr inbounds i8, i8* %200, i64 2, !dbg !5635
  %202 = load i8, i8* %201, align 1, !dbg !5635
  %203 = sext i8 %202 to i32, !dbg !5635
  %204 = icmp eq i32 %203, 0, !dbg !5635
  br i1 %204, label %254, label %205, !dbg !5637

205:                                              ; preds = %194, %183, %172, %169
  %206 = load i32, i32* @optind, align 4, !dbg !5638
  %207 = load i32, i32* %7, align 4, !dbg !5638
  %208 = icmp slt i32 %206, %207, !dbg !5638
  br i1 %208, label %209, label %254, !dbg !5638

209:                                              ; preds = %205
  %210 = load i8**, i8*** %8, align 8, !dbg !5638
  %211 = load i32, i32* @optind, align 4, !dbg !5638
  %212 = sext i32 %211 to i64, !dbg !5638
  %213 = getelementptr inbounds i8*, i8** %210, i64 %212, !dbg !5638
  %214 = load i8*, i8** %213, align 8, !dbg !5638
  %215 = getelementptr inbounds i8, i8* %214, i64 0, !dbg !5638
  %216 = load i8, i8* %215, align 1, !dbg !5638
  %217 = sext i8 %216 to i32, !dbg !5638
  %218 = icmp ne i32 %217, 47, !dbg !5638
  br i1 %218, label %219, label %254, !dbg !5638

219:                                              ; preds = %209
  %220 = load i8**, i8*** %8, align 8, !dbg !5638
  %221 = load i32, i32* @optind, align 4, !dbg !5638
  %222 = sext i32 %221 to i64, !dbg !5638
  %223 = getelementptr inbounds i8*, i8** %220, i64 %222, !dbg !5638
  %224 = load i8*, i8** %223, align 8, !dbg !5638
  %225 = call i8* @strchr(i8* %224, i32 61) #12, !dbg !5638
  %226 = icmp ne i8* %225, null, !dbg !5638
  br i1 %226, label %227, label %254, !dbg !5639

227:                                              ; preds = %219
  %228 = load i32, i32* %22, align 4, !dbg !5640
  %229 = load i32, i32* %23, align 4, !dbg !5643
  %230 = sub nsw i32 %229, 2, !dbg !5644
  %231 = icmp eq i32 %228, %230, !dbg !5645
  br i1 %231, label %232, label %241, !dbg !5646

232:                                              ; preds = %227
  %233 = load i32, i32* %23, align 4, !dbg !5647
  %234 = mul nsw i32 %233, 2, !dbg !5647
  store i32 %234, i32* %23, align 4, !dbg !5647
  %235 = load i8**, i8*** %20, align 8, !dbg !5649
  %236 = bitcast i8** %235 to i8*, !dbg !5649
  %237 = load i32, i32* %23, align 4, !dbg !5650
  %238 = sext i32 %237 to i64, !dbg !5650
  %239 = call i8* @erealloc3(i8* %236, i64 %238, i64 8), !dbg !5651
  %240 = bitcast i8* %239 to i8**, !dbg !5651
  store i8** %240, i8*** %20, align 8, !dbg !5652
  br label %241, !dbg !5653

241:                                              ; preds = %232, %227
  %242 = load i8**, i8*** %8, align 8, !dbg !5654
  %243 = load i32, i32* @optind, align 4, !dbg !5655
  %244 = sext i32 %243 to i64, !dbg !5654
  %245 = getelementptr inbounds i8*, i8** %242, i64 %244, !dbg !5654
  %246 = load i8*, i8** %245, align 8, !dbg !5654
  %247 = load i8**, i8*** %20, align 8, !dbg !5656
  %248 = load i32, i32* %22, align 4, !dbg !5657
  %249 = add nsw i32 %248, 1, !dbg !5657
  store i32 %249, i32* %22, align 4, !dbg !5657
  %250 = sext i32 %248 to i64, !dbg !5656
  %251 = getelementptr inbounds i8*, i8** %247, i64 %250, !dbg !5656
  store i8* %246, i8** %251, align 8, !dbg !5658
  %252 = load i32, i32* @optind, align 4, !dbg !5659
  %253 = add nsw i32 %252, 1, !dbg !5659
  store i32 %253, i32* @optind, align 4, !dbg !5659
  br label %255, !dbg !5660

254:                                              ; preds = %219, %209, %205, %194
  br label %257, !dbg !5661

255:                                              ; preds = %241
  br label %256

256:                                              ; preds = %255, %168
  br label %45, !dbg !5663, !llvm.loop !5664

257:                                              ; preds = %254
  %258 = load i8**, i8*** %20, align 8, !dbg !5667
  %259 = load i32, i32* %22, align 4, !dbg !5668
  %260 = sext i32 %259 to i64, !dbg !5667
  %261 = getelementptr inbounds i8*, i8** %258, i64 %260, !dbg !5667
  store i8* null, i8** %261, align 8, !dbg !5669
  %262 = load i32, i32* @optind, align 4, !dbg !5670
  %263 = load i32, i32* %7, align 4, !dbg !5671
  %264 = sub nsw i32 %263, %262, !dbg !5671
  store i32 %264, i32* %7, align 4, !dbg !5671
  %265 = load i32, i32* @optind, align 4, !dbg !5672
  %266 = load i8**, i8*** %8, align 8, !dbg !5673
  %267 = sext i32 %265 to i64, !dbg !5673
  %268 = getelementptr inbounds i8*, i8** %266, i64 %267, !dbg !5673
  store i8** %268, i8*** %8, align 8, !dbg !5673
  %269 = load i32, i32* %13, align 4, !dbg !5674
  %270 = icmp ne i32 %269, 0, !dbg !5674
  br i1 %270, label %284, label %271, !dbg !5676

271:                                              ; preds = %257
  %272 = load i8*, i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 8, i32 1), align 8, !dbg !5677
  %273 = icmp ne i8* %272, null, !dbg !5680
  br i1 %273, label %274, label %279, !dbg !5681

274:                                              ; preds = %271
  %275 = load i32, i32* %7, align 4, !dbg !5682
  %276 = icmp eq i32 %275, 0, !dbg !5685
  br i1 %276, label %277, label %278, !dbg !5686

277:                                              ; preds = %274
  store i32 8, i32* %13, align 4, !dbg !5687
  store i8* null, i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 8, i32 1), align 8, !dbg !5689
  store i32 0, i32* %15, align 4, !dbg !5690
  br label %278, !dbg !5691

278:                                              ; preds = %277, %274
  br label %279, !dbg !5692

279:                                              ; preds = %278, %271
  %280 = load i32, i32* %13, align 4, !dbg !5693
  %281 = icmp ne i32 %280, 0, !dbg !5693
  br i1 %281, label %283, label %282, !dbg !5695

282:                                              ; preds = %279
  store i32 1, i32* %13, align 4, !dbg !5696
  br label %283, !dbg !5697

283:                                              ; preds = %282, %279
  br label %284, !dbg !5698

284:                                              ; preds = %283, %257
  %285 = load i32, i32* %7, align 4, !dbg !5699
  %286 = icmp sgt i32 %285, 0, !dbg !5701
  br i1 %286, label %287, label %291, !dbg !5702

287:                                              ; preds = %284
  %288 = load i32, i32* %13, align 4, !dbg !5703
  %289 = icmp eq i32 %288, 128, !dbg !5704
  br i1 %289, label %290, label %291, !dbg !5705

290:                                              ; preds = %287
  store i32 256, i32* %13, align 4, !dbg !5706
  br label %291, !dbg !5707

291:                                              ; preds = %290, %287, %284
  %292 = load i32, i32* %14, align 4, !dbg !5708
  %293 = and i32 %292, 262144, !dbg !5708
  %294 = icmp ne i32 %293, 0, !dbg !5708
  br i1 %294, label %295, label %310, !dbg !5710

295:                                              ; preds = %291
  %296 = load i32, i32* %14, align 4, !dbg !5711
  %297 = and i32 %296, 131072, !dbg !5711
  %298 = icmp ne i32 %297, 0, !dbg !5711
  br i1 %298, label %299, label %301, !dbg !5714

299:                                              ; preds = %295
  %300 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.82, i64 0, i64 0)) #13, !dbg !5715
  call void (i8*, ...) @warningx(i8* %300), !dbg !5717
  call void @usage(i32 1), !dbg !5718
  br label %301, !dbg !5719

301:                                              ; preds = %299, %295
  %302 = load i32, i32* %14, align 4, !dbg !5720
  %303 = and i32 %302, 4194304, !dbg !5720
  %304 = icmp ne i32 %303, 0, !dbg !5720
  br i1 %304, label %305, label %307, !dbg !5722

305:                                              ; preds = %301
  %306 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7.83, i64 0, i64 0)) #13, !dbg !5723
  call void (i8*, ...) @warningx(i8* %306), !dbg !5725
  call void @usage(i32 1), !dbg !5726
  br label %307, !dbg !5727

307:                                              ; preds = %305, %301
  %308 = load i32, i32* %14, align 4, !dbg !5728
  %309 = or i32 %308, 131072, !dbg !5728
  store i32 %309, i32* %14, align 4, !dbg !5728
  br label %310, !dbg !5729

310:                                              ; preds = %307, %291
  %311 = load i32, i32* %14, align 4, !dbg !5730
  %312 = load i32, i32* %15, align 4, !dbg !5732
  %313 = and i32 %311, %312, !dbg !5733
  %314 = load i32, i32* %14, align 4, !dbg !5734
  %315 = icmp ne i32 %313, %314, !dbg !5735
  br i1 %315, label %316, label %317, !dbg !5736

316:                                              ; preds = %310
  call void @usage(i32 1), !dbg !5737
  br label %317, !dbg !5737

317:                                              ; preds = %316, %310
  %318 = load i32, i32* %13, align 4, !dbg !5738
  %319 = icmp eq i32 %318, 2, !dbg !5740
  br i1 %319, label %320, label %343, !dbg !5741

320:                                              ; preds = %317
  %321 = load i32, i32* %14, align 4, !dbg !5742
  %322 = and i32 %321, 4194304, !dbg !5742
  %323 = icmp ne i32 %322, 0, !dbg !5742
  br i1 %323, label %329, label %324, !dbg !5743

324:                                              ; preds = %320
  %325 = load i8**, i8*** %20, align 8, !dbg !5744
  %326 = getelementptr inbounds i8*, i8** %325, i64 0, !dbg !5744
  %327 = load i8*, i8** %326, align 8, !dbg !5744
  %328 = icmp ne i8* %327, null, !dbg !5745
  br i1 %328, label %329, label %343, !dbg !5746

329:                                              ; preds = %324, %320
  %330 = load i32, i32* %13, align 4, !dbg !5747
  %331 = and i32 %330, 4194304, !dbg !5747
  %332 = icmp ne i32 %331, 0, !dbg !5747
  br i1 %332, label %333, label %335, !dbg !5750

333:                                              ; preds = %329
  %334 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8.84, i64 0, i64 0)) #13, !dbg !5751
  call void (i8*, ...) @warningx(i8* %334), !dbg !5752
  br label %335, !dbg !5752

335:                                              ; preds = %333, %329
  %336 = load i8**, i8*** %20, align 8, !dbg !5753
  %337 = getelementptr inbounds i8*, i8** %336, i64 0, !dbg !5753
  %338 = load i8*, i8** %337, align 8, !dbg !5753
  %339 = icmp ne i8* %338, null, !dbg !5755
  br i1 %339, label %340, label %342, !dbg !5756

340:                                              ; preds = %335
  %341 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.85, i64 0, i64 0)) #13, !dbg !5757
  call void (i8*, ...) @warningx(i8* %341), !dbg !5758
  br label %342, !dbg !5758

342:                                              ; preds = %340, %335
  call void @usage(i32 1), !dbg !5759
  br label %343, !dbg !5760

343:                                              ; preds = %342, %324, %317
  %344 = load i8*, i8** @runas_user, align 8, !dbg !5761
  %345 = icmp ne i8* %344, null, !dbg !5763
  br i1 %345, label %349, label %346, !dbg !5764

346:                                              ; preds = %343
  %347 = load i8*, i8** @runas_group, align 8, !dbg !5765
  %348 = icmp ne i8* %347, null, !dbg !5766
  br i1 %348, label %349, label %354, !dbg !5767

349:                                              ; preds = %346, %343
  %350 = load i32, i32* %13, align 4, !dbg !5768
  %351 = and i32 %350, 263, !dbg !5768
  %352 = icmp ne i32 %351, 0, !dbg !5768
  br i1 %352, label %354, label %353, !dbg !5769

353:                                              ; preds = %349
  call void @usage(i32 1), !dbg !5770
  br label %354, !dbg !5772

354:                                              ; preds = %353, %349, %346
  %355 = load i8*, i8** @list_user, align 8, !dbg !5773
  %356 = icmp ne i8* %355, null, !dbg !5775
  br i1 %356, label %357, label %365, !dbg !5776

357:                                              ; preds = %354
  %358 = load i32, i32* %13, align 4, !dbg !5777
  %359 = icmp ne i32 %358, 128, !dbg !5778
  br i1 %359, label %360, label %365, !dbg !5779

360:                                              ; preds = %357
  %361 = load i32, i32* %13, align 4, !dbg !5780
  %362 = icmp ne i32 %361, 256, !dbg !5781
  br i1 %362, label %363, label %365, !dbg !5782

363:                                              ; preds = %360
  %364 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10.86, i64 0, i64 0)) #13, !dbg !5783
  call void (i8*, ...) @warningx(i8* %364), !dbg !5785
  call void @usage(i32 1), !dbg !5786
  br label %365, !dbg !5787

365:                                              ; preds = %363, %360, %357, %354
  %366 = load i32, i32* @tgetpass_flags, align 4, !dbg !5788
  %367 = and i32 %366, 2, !dbg !5788
  %368 = icmp ne i32 %367, 0, !dbg !5788
  br i1 %368, label %369, label %375, !dbg !5790

369:                                              ; preds = %365
  %370 = load i32, i32* @tgetpass_flags, align 4, !dbg !5791
  %371 = and i32 %370, 4, !dbg !5791
  %372 = icmp ne i32 %371, 0, !dbg !5791
  br i1 %372, label %373, label %375, !dbg !5792

373:                                              ; preds = %369
  %374 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.11.87, i64 0, i64 0)) #13, !dbg !5793
  call void (i8*, ...) @warningx(i8* %374), !dbg !5795
  call void @usage(i32 1), !dbg !5796
  br label %375, !dbg !5797

375:                                              ; preds = %373, %369, %365
  %376 = load i32, i32* %7, align 4, !dbg !5798
  %377 = icmp eq i32 %376, 0, !dbg !5800
  br i1 %377, label %378, label %381, !dbg !5801

378:                                              ; preds = %375
  %379 = load i32, i32* %13, align 4, !dbg !5802
  %380 = icmp eq i32 %379, 2, !dbg !5803
  br i1 %380, label %388, label %381, !dbg !5804

381:                                              ; preds = %378, %375
  %382 = load i32, i32* %7, align 4, !dbg !5805
  %383 = icmp sgt i32 %382, 0, !dbg !5806
  br i1 %383, label %384, label %389, !dbg !5807

384:                                              ; preds = %381
  %385 = load i32, i32* %13, align 4, !dbg !5808
  %386 = and i32 %385, 259, !dbg !5808
  %387 = icmp ne i32 %386, 0, !dbg !5808
  br i1 %387, label %389, label %388, !dbg !5809

388:                                              ; preds = %384, %378
  call void @usage(i32 1), !dbg !5810
  br label %389, !dbg !5810

389:                                              ; preds = %388, %384, %381
  %390 = load i32, i32* %7, align 4, !dbg !5811
  %391 = icmp eq i32 %390, 0, !dbg !5813
  br i1 %391, label %392, label %402, !dbg !5814

392:                                              ; preds = %389
  %393 = load i32, i32* %13, align 4, !dbg !5815
  %394 = icmp eq i32 %393, 1, !dbg !5816
  br i1 %394, label %395, label %402, !dbg !5817

395:                                              ; preds = %392
  %396 = load i32, i32* %14, align 4, !dbg !5818
  %397 = and i32 %396, 131072, !dbg !5818
  %398 = icmp ne i32 %397, 0, !dbg !5818
  br i1 %398, label %402, label %399, !dbg !5819

399:                                              ; preds = %395
  %400 = load i32, i32* %14, align 4, !dbg !5820
  %401 = or i32 %400, 655360, !dbg !5820
  store i32 %401, i32* %14, align 4, !dbg !5820
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.77, i64 0, i64 0), i8** getelementptr inbounds ([21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 14, i32 1), align 8, !dbg !5822
  br label %402, !dbg !5823

402:                                              ; preds = %399, %395, %392, %389
  %403 = load i32, i32* %13, align 4, !dbg !5824
  %404 = icmp eq i32 %403, 64, !dbg !5826
  br i1 %404, label %405, label %406, !dbg !5827

405:                                              ; preds = %402
  call void @help() #16, !dbg !5828
  unreachable, !dbg !5828

406:                                              ; preds = %402
  %407 = load i32, i32* %13, align 4, !dbg !5829
  %408 = and i32 %407, 1, !dbg !5829
  %409 = icmp ne i32 %408, 0, !dbg !5829
  br i1 %409, label %410, label %538, !dbg !5831

410:                                              ; preds = %406
  %411 = load i32, i32* %14, align 4, !dbg !5832
  %412 = and i32 %411, 131072, !dbg !5832
  %413 = icmp ne i32 %412, 0, !dbg !5832
  br i1 %413, label %414, label %538, !dbg !5833

414:                                              ; preds = %410
  call void @llvm.dbg.declare(metadata i8*** %24, metadata !5834, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.declare(metadata i32* %25, metadata !5837, metadata !DIExpression()), !dbg !5838
  %415 = load i32, i32* %7, align 4, !dbg !5839
  %416 = icmp eq i32 %415, 0, !dbg !5841
  br i1 %416, label %417, label %433, !dbg !5842

417:                                              ; preds = %414
  %418 = load i32, i32* %7, align 4, !dbg !5843
  %419 = add nsw i32 %418, 1, !dbg !5845
  store i32 %419, i32* %25, align 4, !dbg !5846
  %420 = load i32, i32* %25, align 4, !dbg !5847
  %421 = add nsw i32 %420, 1, !dbg !5848
  %422 = sext i32 %421 to i64, !dbg !5847
  %423 = call i8* @emalloc2(i64 %422, i64 8), !dbg !5849
  %424 = bitcast i8* %423 to i8**, !dbg !5849
  store i8** %424, i8*** %24, align 8, !dbg !5850
  %425 = load i8**, i8*** %24, align 8, !dbg !5851
  %426 = getelementptr inbounds i8*, i8** %425, i64 1, !dbg !5852
  %427 = bitcast i8** %426 to i8*, !dbg !5853
  %428 = load i8**, i8*** %8, align 8, !dbg !5854
  %429 = bitcast i8** %428 to i8*, !dbg !5853
  %430 = load i32, i32* %7, align 4, !dbg !5855
  %431 = sext i32 %430 to i64, !dbg !5855
  %432 = mul i64 %431, 8, !dbg !5856
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %427, i8* align 8 %429, i64 %432, i1 false), !dbg !5853
  br label %528, !dbg !5857

433:                                              ; preds = %414
  call void @llvm.dbg.declare(metadata i8** %26, metadata !5858, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.declare(metadata i8** %27, metadata !5861, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.declare(metadata i8** %28, metadata !5863, metadata !DIExpression()), !dbg !5864
  call void @llvm.dbg.declare(metadata i64* %29, metadata !5865, metadata !DIExpression()), !dbg !5866
  %434 = load i8**, i8*** %8, align 8, !dbg !5867
  %435 = load i32, i32* %7, align 4, !dbg !5868
  %436 = sub nsw i32 %435, 1, !dbg !5869
  %437 = sext i32 %436 to i64, !dbg !5867
  %438 = getelementptr inbounds i8*, i8** %434, i64 %437, !dbg !5867
  %439 = load i8*, i8** %438, align 8, !dbg !5867
  %440 = load i8**, i8*** %8, align 8, !dbg !5870
  %441 = getelementptr inbounds i8*, i8** %440, i64 0, !dbg !5870
  %442 = load i8*, i8** %441, align 8, !dbg !5870
  %443 = ptrtoint i8* %439 to i64, !dbg !5871
  %444 = ptrtoint i8* %442 to i64, !dbg !5871
  %445 = sub i64 %443, %444, !dbg !5871
  %446 = load i8**, i8*** %8, align 8, !dbg !5872
  %447 = load i32, i32* %7, align 4, !dbg !5873
  %448 = sub nsw i32 %447, 1, !dbg !5874
  %449 = sext i32 %448 to i64, !dbg !5872
  %450 = getelementptr inbounds i8*, i8** %446, i64 %449, !dbg !5872
  %451 = load i8*, i8** %450, align 8, !dbg !5872
  %452 = call i64 @strlen(i8* %451) #12, !dbg !5875
  %453 = add i64 %445, %452, !dbg !5876
  %454 = add i64 %453, 1, !dbg !5877
  store i64 %454, i64* %29, align 8, !dbg !5866
  %455 = load i64, i64* %29, align 8, !dbg !5878
  %456 = call i8* @emalloc2(i64 %455, i64 2), !dbg !5879
  store i8* %456, i8** %28, align 8, !dbg !5880
  store i8* %456, i8** %26, align 8, !dbg !5881
  %457 = load i8**, i8*** %8, align 8, !dbg !5882
  store i8** %457, i8*** %24, align 8, !dbg !5884
  br label %458, !dbg !5885

458:                                              ; preds = %506, %433
  %459 = load i8**, i8*** %24, align 8, !dbg !5886
  %460 = load i8*, i8** %459, align 8, !dbg !5888
  %461 = icmp ne i8* %460, null, !dbg !5889
  br i1 %461, label %462, label %509, !dbg !5890

462:                                              ; preds = %458
  %463 = load i8**, i8*** %24, align 8, !dbg !5891
  %464 = load i8*, i8** %463, align 8, !dbg !5894
  store i8* %464, i8** %27, align 8, !dbg !5895
  br label %465, !dbg !5896

465:                                              ; preds = %500, %462
  %466 = load i8*, i8** %27, align 8, !dbg !5897
  %467 = load i8, i8* %466, align 1, !dbg !5899
  %468 = sext i8 %467 to i32, !dbg !5899
  %469 = icmp ne i32 %468, 0, !dbg !5900
  br i1 %469, label %470, label %503, !dbg !5901

470:                                              ; preds = %465
  %471 = call i16** @__ctype_b_loc() #14, !dbg !5902
  %472 = load i16*, i16** %471, align 8, !dbg !5902
  %473 = load i8*, i8** %27, align 8, !dbg !5902
  %474 = load i8, i8* %473, align 1, !dbg !5902
  %475 = zext i8 %474 to i32, !dbg !5902
  %476 = sext i32 %475 to i64, !dbg !5902
  %477 = getelementptr inbounds i16, i16* %472, i64 %476, !dbg !5902
  %478 = load i16, i16* %477, align 2, !dbg !5902
  %479 = zext i16 %478 to i32, !dbg !5902
  %480 = and i32 %479, 8, !dbg !5902
  %481 = icmp ne i32 %480, 0, !dbg !5902
  br i1 %481, label %495, label %482, !dbg !5905

482:                                              ; preds = %470
  %483 = load i8*, i8** %27, align 8, !dbg !5906
  %484 = load i8, i8* %483, align 1, !dbg !5907
  %485 = sext i8 %484 to i32, !dbg !5907
  %486 = icmp ne i32 %485, 95, !dbg !5908
  br i1 %486, label %487, label %495, !dbg !5909

487:                                              ; preds = %482
  %488 = load i8*, i8** %27, align 8, !dbg !5910
  %489 = load i8, i8* %488, align 1, !dbg !5911
  %490 = sext i8 %489 to i32, !dbg !5911
  %491 = icmp ne i32 %490, 45, !dbg !5912
  br i1 %491, label %492, label %495, !dbg !5913

492:                                              ; preds = %487
  %493 = load i8*, i8** %28, align 8, !dbg !5914
  %494 = getelementptr inbounds i8, i8* %493, i32 1, !dbg !5914
  store i8* %494, i8** %28, align 8, !dbg !5914
  store i8 92, i8* %493, align 1, !dbg !5915
  br label %495, !dbg !5916

495:                                              ; preds = %492, %487, %482, %470
  %496 = load i8*, i8** %27, align 8, !dbg !5917
  %497 = load i8, i8* %496, align 1, !dbg !5918
  %498 = load i8*, i8** %28, align 8, !dbg !5919
  %499 = getelementptr inbounds i8, i8* %498, i32 1, !dbg !5919
  store i8* %499, i8** %28, align 8, !dbg !5919
  store i8 %497, i8* %498, align 1, !dbg !5920
  br label %500, !dbg !5921

500:                                              ; preds = %495
  %501 = load i8*, i8** %27, align 8, !dbg !5922
  %502 = getelementptr inbounds i8, i8* %501, i32 1, !dbg !5922
  store i8* %502, i8** %27, align 8, !dbg !5922
  br label %465, !dbg !5923, !llvm.loop !5924

503:                                              ; preds = %465
  %504 = load i8*, i8** %28, align 8, !dbg !5926
  %505 = getelementptr inbounds i8, i8* %504, i32 1, !dbg !5926
  store i8* %505, i8** %28, align 8, !dbg !5926
  store i8 32, i8* %504, align 1, !dbg !5927
  br label %506, !dbg !5928

506:                                              ; preds = %503
  %507 = load i8**, i8*** %24, align 8, !dbg !5929
  %508 = getelementptr inbounds i8*, i8** %507, i32 1, !dbg !5929
  store i8** %508, i8*** %24, align 8, !dbg !5929
  br label %458, !dbg !5930, !llvm.loop !5931

509:                                              ; preds = %458
  %510 = load i8*, i8** %26, align 8, !dbg !5933
  %511 = load i8*, i8** %28, align 8, !dbg !5935
  %512 = icmp ne i8* %510, %511, !dbg !5936
  br i1 %512, label %513, label %516, !dbg !5937

513:                                              ; preds = %509
  %514 = load i8*, i8** %28, align 8, !dbg !5938
  %515 = getelementptr inbounds i8, i8* %514, i32 -1, !dbg !5938
  store i8* %515, i8** %28, align 8, !dbg !5938
  br label %516, !dbg !5939

516:                                              ; preds = %513, %509
  %517 = load i8*, i8** %28, align 8, !dbg !5940
  store i8 0, i8* %517, align 1, !dbg !5941
  store i32 3, i32* %25, align 4, !dbg !5942
  %518 = load i32, i32* %25, align 4, !dbg !5943
  %519 = add nsw i32 %518, 1, !dbg !5944
  %520 = sext i32 %519 to i64, !dbg !5943
  %521 = call i8* @emalloc2(i64 %520, i64 8), !dbg !5945
  %522 = bitcast i8* %521 to i8**, !dbg !5945
  store i8** %522, i8*** %24, align 8, !dbg !5946
  %523 = load i8**, i8*** %24, align 8, !dbg !5947
  %524 = getelementptr inbounds i8*, i8** %523, i64 1, !dbg !5947
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.88, i64 0, i64 0), i8** %524, align 8, !dbg !5948
  %525 = load i8*, i8** %26, align 8, !dbg !5949
  %526 = load i8**, i8*** %24, align 8, !dbg !5950
  %527 = getelementptr inbounds i8*, i8** %526, i64 2, !dbg !5950
  store i8* %525, i8** %527, align 8, !dbg !5951
  br label %528

528:                                              ; preds = %516, %417
  %529 = load i8*, i8** getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 8), align 8, !dbg !5952
  %530 = load i8**, i8*** %24, align 8, !dbg !5953
  %531 = getelementptr inbounds i8*, i8** %530, i64 0, !dbg !5953
  store i8* %529, i8** %531, align 8, !dbg !5954
  %532 = load i8**, i8*** %24, align 8, !dbg !5955
  %533 = load i32, i32* %25, align 4, !dbg !5956
  %534 = sext i32 %533 to i64, !dbg !5955
  %535 = getelementptr inbounds i8*, i8** %532, i64 %534, !dbg !5955
  store i8* null, i8** %535, align 8, !dbg !5957
  %536 = load i8**, i8*** %24, align 8, !dbg !5958
  store i8** %536, i8*** %8, align 8, !dbg !5959
  %537 = load i32, i32* %25, align 4, !dbg !5960
  store i32 %537, i32* %7, align 4, !dbg !5961
  br label %538, !dbg !5962

538:                                              ; preds = %528, %410, %406
  %539 = call i8* @emalloc2(i64 21, i64 8), !dbg !5963
  %540 = bitcast i8* %539 to i8**, !dbg !5963
  store i8** %540, i8*** %21, align 8, !dbg !5964
  store i32 0, i32* %17, align 4, !dbg !5965
  store i32 0, i32* %18, align 4, !dbg !5967
  br label %541, !dbg !5968

541:                                              ; preds = %589, %538
  %542 = load i32, i32* %17, align 4, !dbg !5969
  %543 = icmp slt i32 %542, 20, !dbg !5971
  br i1 %543, label %544, label %592, !dbg !5972

544:                                              ; preds = %541
  %545 = load i32, i32* %17, align 4, !dbg !5973
  %546 = sext i32 %545 to i64, !dbg !5976
  %547 = getelementptr inbounds [21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 %546, !dbg !5976
  %548 = getelementptr inbounds %struct.sudo_settings, %struct.sudo_settings* %547, i32 0, i32 1, !dbg !5977
  %549 = load i8*, i8** %548, align 8, !dbg !5977
  %550 = icmp ne i8* %549, null, !dbg !5976
  br i1 %550, label %551, label %588, !dbg !5978

551:                                              ; preds = %544
  %552 = load i32, i32* %17, align 4, !dbg !5979
  %553 = sext i32 %552 to i64, !dbg !5981
  %554 = getelementptr inbounds [21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 %553, !dbg !5981
  %555 = getelementptr inbounds %struct.sudo_settings, %struct.sudo_settings* %554, i32 0, i32 0, !dbg !5982
  %556 = load i8*, i8** %555, align 16, !dbg !5982
  %557 = load i32, i32* %17, align 4, !dbg !5983
  %558 = sext i32 %557 to i64, !dbg !5984
  %559 = getelementptr inbounds [21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 %558, !dbg !5984
  %560 = getelementptr inbounds %struct.sudo_settings, %struct.sudo_settings* %559, i32 0, i32 1, !dbg !5985
  %561 = load i8*, i8** %560, align 8, !dbg !5985
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13.89, i64 0, i64 0), i8* %556, i8* %561), !dbg !5986
  %562 = load i32, i32* %17, align 4, !dbg !5987
  %563 = sext i32 %562 to i64, !dbg !5988
  %564 = getelementptr inbounds [21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 %563, !dbg !5988
  %565 = getelementptr inbounds %struct.sudo_settings, %struct.sudo_settings* %564, i32 0, i32 0, !dbg !5989
  %566 = load i8*, i8** %565, align 16, !dbg !5989
  %567 = load i32, i32* %17, align 4, !dbg !5990
  %568 = sext i32 %567 to i64, !dbg !5991
  %569 = getelementptr inbounds [21 x %struct.sudo_settings], [21 x %struct.sudo_settings]* @sudo_settings, i64 0, i64 %568, !dbg !5991
  %570 = getelementptr inbounds %struct.sudo_settings, %struct.sudo_settings* %569, i32 0, i32 1, !dbg !5992
  %571 = load i8*, i8** %570, align 8, !dbg !5992
  %572 = call i8* @fmt_string(i8* %566, i8* %571), !dbg !5993
  %573 = load i8**, i8*** %21, align 8, !dbg !5994
  %574 = load i32, i32* %18, align 4, !dbg !5995
  %575 = sext i32 %574 to i64, !dbg !5994
  %576 = getelementptr inbounds i8*, i8** %573, i64 %575, !dbg !5994
  store i8* %572, i8** %576, align 8, !dbg !5996
  %577 = load i8**, i8*** %21, align 8, !dbg !5997
  %578 = load i32, i32* %18, align 4, !dbg !5999
  %579 = sext i32 %578 to i64, !dbg !5997
  %580 = getelementptr inbounds i8*, i8** %577, i64 %579, !dbg !5997
  %581 = load i8*, i8** %580, align 8, !dbg !5997
  %582 = icmp eq i8* %581, null, !dbg !6000
  br i1 %582, label %583, label %585, !dbg !6001

583:                                              ; preds = %551
  %584 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14.90, i64 0, i64 0)) #13, !dbg !6002
  call void (i32, i8*, ...) @errorx(i32 1, i8* %584) #16, !dbg !6003
  unreachable, !dbg !6003

585:                                              ; preds = %551
  %586 = load i32, i32* %18, align 4, !dbg !6004
  %587 = add nsw i32 %586, 1, !dbg !6004
  store i32 %587, i32* %18, align 4, !dbg !6004
  br label %588, !dbg !6005

588:                                              ; preds = %585, %544
  br label %589, !dbg !6006

589:                                              ; preds = %588
  %590 = load i32, i32* %17, align 4, !dbg !6007
  %591 = add nsw i32 %590, 1, !dbg !6007
  store i32 %591, i32* %17, align 4, !dbg !6007
  br label %541, !dbg !6008, !llvm.loop !6009

592:                                              ; preds = %541
  %593 = load i8**, i8*** %21, align 8, !dbg !6011
  %594 = load i32, i32* %18, align 4, !dbg !6012
  %595 = sext i32 %594 to i64, !dbg !6011
  %596 = getelementptr inbounds i8*, i8** %593, i64 %595, !dbg !6011
  store i8* null, i8** %596, align 8, !dbg !6013
  %597 = load i32, i32* %13, align 4, !dbg !6014
  %598 = icmp eq i32 %597, 2, !dbg !6016
  br i1 %598, label %599, label %606, !dbg !6017

599:                                              ; preds = %592
  %600 = load i32, i32* %7, align 4, !dbg !6018
  %601 = add nsw i32 %600, 1, !dbg !6018
  store i32 %601, i32* %7, align 4, !dbg !6018
  %602 = load i8**, i8*** %8, align 8, !dbg !6020
  %603 = getelementptr inbounds i8*, i8** %602, i32 -1, !dbg !6020
  store i8** %603, i8*** %8, align 8, !dbg !6020
  %604 = load i8**, i8*** %8, align 8, !dbg !6021
  %605 = getelementptr inbounds i8*, i8** %604, i64 0, !dbg !6021
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0), i8** %605, align 8, !dbg !6022
  br label %606, !dbg !6023

606:                                              ; preds = %599, %592
  %607 = load i8**, i8*** %21, align 8, !dbg !6024
  %608 = load i8***, i8**** %11, align 8, !dbg !6025
  store i8** %607, i8*** %608, align 8, !dbg !6026
  %609 = load i8**, i8*** %20, align 8, !dbg !6027
  %610 = load i8***, i8**** %12, align 8, !dbg !6028
  store i8** %609, i8*** %610, align 8, !dbg !6029
  %611 = load i32, i32* %7, align 4, !dbg !6030
  %612 = load i32*, i32** %9, align 8, !dbg !6031
  store i32 %611, i32* %612, align 4, !dbg !6032
  %613 = load i8**, i8*** %8, align 8, !dbg !6033
  %614 = load i8***, i8**** %10, align 8, !dbg !6034
  store i8** %613, i8*** %614, align 8, !dbg !6035
  %615 = load i32, i32* %13, align 4, !dbg !6036
  %616 = load i32, i32* %14, align 4, !dbg !6037
  %617 = or i32 %615, %616, !dbg !6038
  ret i32 %617, !dbg !6039
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt(i32, i8**, i8*) #4

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @usage(i32 %0) #0 !dbg !6040 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.lbuf, align 8
  %4 = alloca [6 x i8*], align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6041, metadata !DIExpression()), !dbg !6042
  call void @llvm.dbg.declare(metadata %struct.lbuf* %3, metadata !6043, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.declare(metadata [6 x i8*]* %4, metadata !6058, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6061, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6063, metadata !DIExpression()), !dbg !6064
  %7 = load i8*, i8** @__progname, align 8, !dbg !6065
  %8 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0)) #12, !dbg !6067
  %9 = icmp eq i32 %8, 0, !dbg !6068
  br i1 %9, label %10, label %13, !dbg !6069

10:                                               ; preds = %1
  %11 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 0, !dbg !6070
  store i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.15.95, i64 0, i64 3), i8** %11, align 16, !dbg !6072
  %12 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 1, !dbg !6073
  store i8* null, i8** %12, align 8, !dbg !6074
  br label %20, !dbg !6075

13:                                               ; preds = %1
  %14 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 0, !dbg !6076
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16.96, i64 0, i64 0), i8** %14, align 16, !dbg !6078
  %15 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 1, !dbg !6079
  store i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.17.97, i64 0, i64 0), i8** %15, align 8, !dbg !6080
  %16 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 2, !dbg !6081
  store i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.18.98, i64 0, i64 0), i8** %16, align 16, !dbg !6082
  %17 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 3, !dbg !6083
  store i8* getelementptr inbounds ([136 x i8], [136 x i8]* @.str.19.99, i64 0, i64 0), i8** %17, align 8, !dbg !6084
  %18 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 4, !dbg !6085
  store i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.15.95, i64 0, i64 0), i8** %18, align 16, !dbg !6086
  %19 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 5, !dbg !6087
  store i8* null, i8** %19, align 8, !dbg !6088
  br label %20

20:                                               ; preds = %13, %10
  %21 = load i8*, i8** @__progname, align 8, !dbg !6089
  %22 = call i64 @strlen(i8* %21) #12, !dbg !6090
  %23 = trunc i64 %22 to i32, !dbg !6091
  %24 = add nsw i32 %23, 8, !dbg !6092
  store i32 %24, i32* %6, align 4, !dbg !6093
  %25 = load i32, i32* %2, align 4, !dbg !6094
  %26 = icmp ne i32 %25, 0, !dbg !6094
  %27 = zext i1 %26 to i64, !dbg !6094
  %28 = select i1 %26, i32 (i8*)* @usage_err, i32 (i8*)* @usage_out, !dbg !6094
  %29 = load i32, i32* %6, align 4, !dbg !6095
  %30 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 11), align 4, !dbg !6096
  call void @lbuf_init(%struct.lbuf* %3, i32 (i8*)* %28, i32 %29, i8* null, i32 %30), !dbg !6097
  store i32 0, i32* %5, align 4, !dbg !6098
  br label %31, !dbg !6100

31:                                               ; preds = %43, %20
  %32 = load i32, i32* %5, align 4, !dbg !6101
  %33 = sext i32 %32 to i64, !dbg !6103
  %34 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 %33, !dbg !6103
  %35 = load i8*, i8** %34, align 8, !dbg !6103
  %36 = icmp ne i8* %35, null, !dbg !6104
  br i1 %36, label %37, label %46, !dbg !6105

37:                                               ; preds = %31
  %38 = load i8*, i8** @__progname, align 8, !dbg !6106
  %39 = load i32, i32* %5, align 4, !dbg !6108
  %40 = sext i32 %39 to i64, !dbg !6109
  %41 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 %40, !dbg !6109
  %42 = load i8*, i8** %41, align 8, !dbg !6109
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.100, i64 0, i64 0), i8* %38, i8* %42), !dbg !6110
  call void @lbuf_print(%struct.lbuf* %3), !dbg !6111
  br label %43, !dbg !6112

43:                                               ; preds = %37
  %44 = load i32, i32* %5, align 4, !dbg !6113
  %45 = add nsw i32 %44, 1, !dbg !6113
  store i32 %45, i32* %5, align 4, !dbg !6113
  br label %31, !dbg !6114, !llvm.loop !6115

46:                                               ; preds = %31
  call void @lbuf_destroy(%struct.lbuf* %3), !dbg !6117
  %47 = load i32, i32* %2, align 4, !dbg !6118
  %48 = icmp ne i32 %47, 0, !dbg !6118
  br i1 %48, label %49, label %50, !dbg !6120

49:                                               ; preds = %46
  call void @exit(i32 1) #15, !dbg !6121
  unreachable, !dbg !6121

50:                                               ; preds = %46
  ret void, !dbg !6122
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @usage_excl(i32 %0) #0 !dbg !6123 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6124, metadata !DIExpression()), !dbg !6125
  %3 = call i8* @gettext(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.40, i64 0, i64 0)) #13, !dbg !6126
  call void (i8*, ...) @warningx(i8* %3), !dbg !6127
  %4 = load i32, i32* %2, align 4, !dbg !6128
  call void @usage(i32 %4), !dbg !6129
  ret void, !dbg !6130
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @help() #7 !dbg !6131 {
  %1 = alloca %struct.lbuf, align 8
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata %struct.lbuf* %1, metadata !6132, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6134, metadata !DIExpression()), !dbg !6135
  store i32 16, i32* %2, align 4, !dbg !6135
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6136, metadata !DIExpression()), !dbg !6137
  %4 = load i8*, i8** @__progname, align 8, !dbg !6138
  store i8* %4, i8** %3, align 8, !dbg !6137
  %5 = load i32, i32* %2, align 4, !dbg !6139
  %6 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 11), align 4, !dbg !6140
  call void @lbuf_init(%struct.lbuf* %1, i32 (i8*)* @usage_out, i32 %5, i8* null, i32 %6), !dbg !6141
  %7 = load i8*, i8** %3, align 8, !dbg !6142
  %8 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0)) #12, !dbg !6144
  %9 = icmp eq i32 %8, 0, !dbg !6145
  br i1 %9, label %10, label %13, !dbg !6146

10:                                               ; preds = %0
  %11 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0)) #13, !dbg !6147
  %12 = load i8*, i8** %3, align 8, !dbg !6148
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* %11, i8* %12), !dbg !6149
  br label %16, !dbg !6149

13:                                               ; preds = %0
  %14 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.42, i64 0, i64 0)) #13, !dbg !6150
  %15 = load i8*, i8** %3, align 8, !dbg !6151
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* %14, i8* %15), !dbg !6152
  br label %16

16:                                               ; preds = %13, %10
  call void @lbuf_print(%struct.lbuf* %1), !dbg !6153
  call void @usage(i32 0), !dbg !6154
  %17 = call i8* @gettext(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43.91, i64 0, i64 0)) #13, !dbg !6155
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* %17), !dbg !6156
  %18 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.45, i64 0, i64 0)) #13, !dbg !6157
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i64 0, i64 0), i8* %18), !dbg !6158
  %19 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.47, i64 0, i64 0)) #13, !dbg !6159
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46.92, i64 0, i64 0), i8* %19), !dbg !6160
  %20 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.49, i64 0, i64 0)) #13, !dbg !6161
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i64 0, i64 0), i8* %20), !dbg !6162
  %21 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.51, i64 0, i64 0)) #13, !dbg !6163
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50.93, i64 0, i64 0), i8* %21), !dbg !6164
  %22 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.53, i64 0, i64 0)) #13, !dbg !6165
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.52, i64 0, i64 0), i8* %22), !dbg !6166
  %23 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.55, i64 0, i64 0)) #13, !dbg !6167
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.54, i64 0, i64 0), i8* %23), !dbg !6168
  %24 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0)) #13, !dbg !6169
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56, i64 0, i64 0), i8* %24), !dbg !6170
  %25 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.59, i64 0, i64 0)) #13, !dbg !6171
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i64 0, i64 0), i8* %25), !dbg !6172
  %26 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.61, i64 0, i64 0)) #13, !dbg !6173
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.60, i64 0, i64 0), i8* %26), !dbg !6174
  %27 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.63, i64 0, i64 0)) #13, !dbg !6175
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0), i8* %27), !dbg !6176
  %28 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0)) #13, !dbg !6177
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i64 0, i64 0), i8* %28), !dbg !6178
  %29 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.67, i64 0, i64 0)) #13, !dbg !6179
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.66, i64 0, i64 0), i8* %29), !dbg !6180
  %30 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.69, i64 0, i64 0)) #13, !dbg !6181
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.68, i64 0, i64 0), i8* %30), !dbg !6182
  %31 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.71, i64 0, i64 0)) #13, !dbg !6183
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.70, i64 0, i64 0), i8* %31), !dbg !6184
  %32 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.73, i64 0, i64 0)) #13, !dbg !6185
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i64 0, i64 0), i8* %32), !dbg !6186
  %33 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.75, i64 0, i64 0)) #13, !dbg !6187
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.74, i64 0, i64 0), i8* %33), !dbg !6188
  %34 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77, i64 0, i64 0)) #13, !dbg !6189
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76.94, i64 0, i64 0), i8* %34), !dbg !6190
  %35 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.79, i64 0, i64 0)) #13, !dbg !6191
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i64 0, i64 0), i8* %35), !dbg !6192
  %36 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.81, i64 0, i64 0)) #13, !dbg !6193
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.80, i64 0, i64 0), i8* %36), !dbg !6194
  %37 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.83, i64 0, i64 0)) #13, !dbg !6195
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.82, i64 0, i64 0), i8* %37), !dbg !6196
  %38 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.85, i64 0, i64 0)) #13, !dbg !6197
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.84, i64 0, i64 0), i8* %38), !dbg !6198
  %39 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.87, i64 0, i64 0)) #13, !dbg !6199
  call void (%struct.lbuf*, i8*, ...) @lbuf_append(%struct.lbuf* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.86, i64 0, i64 0), i8* %39), !dbg !6200
  call void @lbuf_print(%struct.lbuf* %1), !dbg !6201
  call void @lbuf_destroy(%struct.lbuf* %1), !dbg !6202
  call void @exit(i32 0) #15, !dbg !6203
  unreachable, !dbg !6203
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @usage_out(i8* %0) #0 !dbg !6204 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6205, metadata !DIExpression()), !dbg !6206
  %3 = load i8*, i8** %2, align 8, !dbg !6207
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !6208
  %5 = call i32 @fputs(i8* %3, %struct._IO_FILE* %4), !dbg !6209
  ret i32 %5, !dbg !6210
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @usage_err(i8* %0) #0 !dbg !6211 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6212, metadata !DIExpression()), !dbg !6213
  %3 = load i8*, i8** %2, align 8, !dbg !6214
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6215
  %5 = call i32 @fputs(i8* %3, %struct._IO_FILE* %4), !dbg !6216
  ret i32 %5, !dbg !6217
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1, i8** %2) #0 !dbg !6218 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i8**, align 8
  %14 = alloca i8**, align 8
  %15 = alloca i8**, align 8
  %16 = alloca i8**, align 8
  %17 = alloca i8**, align 8
  %18 = alloca %struct.plugin_container*, align 8
  %19 = alloca %struct.plugin_container*, align 8
  %20 = alloca %struct.command_details, align 8
  %21 = alloca %struct.__sigset_t, align 8
  %22 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6221, metadata !DIExpression()), !dbg !6222
  store i8** %1, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !6223, metadata !DIExpression()), !dbg !6224
  store i8** %2, i8*** %7, align 8
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !6225, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6227, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6229, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6231, metadata !DIExpression()), !dbg !6232
  store i32 0, i32* %10, align 4, !dbg !6232
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !6233, metadata !DIExpression()), !dbg !6234
  call void @llvm.dbg.declare(metadata i8*** %12, metadata !6235, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !6237, metadata !DIExpression()), !dbg !6238
  call void @llvm.dbg.declare(metadata i8*** %14, metadata !6239, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.declare(metadata i8*** %15, metadata !6241, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.declare(metadata i8*** %16, metadata !6243, metadata !DIExpression()), !dbg !6244
  call void @llvm.dbg.declare(metadata i8*** %17, metadata !6245, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %18, metadata !6247, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %19, metadata !6249, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.declare(metadata %struct.command_details* %20, metadata !6251, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.declare(metadata %struct.__sigset_t* %21, metadata !6275, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.declare(metadata i32* %22, metadata !6282, metadata !DIExpression()), !dbg !6283
  %23 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.118, i64 0, i64 0)) #13, !dbg !6284
  %24 = call i8* @bindtextdomain(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.119, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.120, i64 0, i64 0)) #13, !dbg !6285
  %25 = call i8* @textdomain(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.119, i64 0, i64 0)) #13, !dbg !6286
  %26 = call i32 @geteuid() #13, !dbg !6287
  %27 = icmp ne i32 %26, 0, !dbg !6289
  br i1 %27, label %28, label %30, !dbg !6290

28:                                               ; preds = %3
  %29 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3.121, i64 0, i64 0)) #13, !dbg !6291
  call void (i32, i8*, ...) @errorx(i32 1, i8* %29) #16, !dbg !6292
  unreachable, !dbg !6292

30:                                               ; preds = %3
  %31 = call i32 @sigemptyset(%struct.__sigset_t* %21) #13, !dbg !6293
  %32 = call i32 @sigprocmask(i32 2, %struct.__sigset_t* %21, %struct.__sigset_t* null) #13, !dbg !6294
  call void @disable_coredumps(), !dbg !6295
  call void @fix_fds(), !dbg !6296
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.user_details* @user_details to i8*), i8 0, i64 80, i1 false), !dbg !6297
  %33 = call i8** @get_user_info(%struct.user_details* @user_details), !dbg !6298
  store i8** %33, i8*** %14, align 8, !dbg !6299
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.122, i64 0, i64 0), i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0)), !dbg !6300
  %35 = load i32, i32* %5, align 4, !dbg !6301
  %36 = load i8**, i8*** %6, align 8, !dbg !6302
  %37 = call i32 @parse_args(i32 %35, i8** %36, i32* %8, i8*** %11, i8*** %12, i8*** %13), !dbg !6303
  store i32 %37, i32* %9, align 4, !dbg !6304
  %38 = load i32, i32* %9, align 4, !dbg !6305
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.123, i64 0, i64 0), i32 %38), !dbg !6306
  %39 = load i32, i32* %9, align 4, !dbg !6307
  %40 = and i32 %39, 32, !dbg !6307
  %41 = icmp ne i32 %40, 0, !dbg !6307
  br i1 %41, label %42, label %51, !dbg !6309

42:                                               ; preds = %30
  %43 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6.126, i64 0, i64 0)) #13, !dbg !6310
  %44 = call i32 (i8*, ...) @printf(i8* %43, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.127, i64 0, i64 0)), !dbg !6312
  %45 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !6313
  %46 = icmp eq i32 %45, 0, !dbg !6315
  br i1 %46, label %47, label %50, !dbg !6316

47:                                               ; preds = %42
  %48 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.128, i64 0, i64 0)) #13, !dbg !6317
  %49 = call i32 (i8*, ...) @printf(i8* %48, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.118, i64 0, i64 0)), !dbg !6318
  br label %50, !dbg !6319

50:                                               ; preds = %47, %42
  br label %51, !dbg !6320

51:                                               ; preds = %50, %30
  %52 = call i32 @sudo_load_plugins(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9.129, i64 0, i64 0), %struct.plugin_container* @policy_plugin, %struct.plugin_container_list* @io_plugins), !dbg !6321
  %53 = icmp ne i32 %52, 0, !dbg !6321
  br i1 %53, label %56, label %54, !dbg !6323

54:                                               ; preds = %51
  %55 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.130, i64 0, i64 0)) #13, !dbg !6324
  call void (i32, i8*, ...) @errorx(i32 1, i8* %55) #16, !dbg !6325
  unreachable, !dbg !6325

56:                                               ; preds = %51
  %57 = load i8**, i8*** %12, align 8, !dbg !6326
  %58 = load i8**, i8*** %14, align 8, !dbg !6327
  %59 = load i8**, i8*** %7, align 8, !dbg !6328
  %60 = call i32 @policy_open(%struct.plugin_container* @policy_plugin, i8** %57, i8** %58, i8** %59), !dbg !6329
  store i32 %60, i32* %22, align 4, !dbg !6330
  %61 = load i32, i32* %22, align 4, !dbg !6331
  %62 = icmp ne i32 %61, 1, !dbg !6333
  br i1 %62, label %63, label %70, !dbg !6334

63:                                               ; preds = %56
  %64 = load i32, i32* %22, align 4, !dbg !6335
  %65 = icmp eq i32 %64, -2, !dbg !6338
  br i1 %65, label %66, label %67, !dbg !6339

66:                                               ; preds = %63
  call void @usage(i32 1), !dbg !6340
  br label %69, !dbg !6340

67:                                               ; preds = %63
  %68 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11.131, i64 0, i64 0)) #13, !dbg !6341
  call void (i32, i8*, ...) @errorx(i32 1, i8* %68) #16, !dbg !6342
  unreachable, !dbg !6342

69:                                               ; preds = %66
  br label %70, !dbg !6343

70:                                               ; preds = %69, %56
  %71 = load i32, i32* %9, align 4, !dbg !6344
  %72 = and i32 %71, 65535, !dbg !6345
  switch i32 %72, label %193 [
    i32 32, label %73
    i32 4, label %106
    i32 12, label %106
    i32 16, label %111
    i32 8, label %111
    i32 256, label %115
    i32 264, label %115
    i32 128, label %115
    i32 136, label %115
    i32 2, label %125
    i32 1, label %125
  ], !dbg !6346

73:                                               ; preds = %70
  %74 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !6347
  %75 = icmp ne i32 %74, 0, !dbg !6349
  %76 = xor i1 %75, true, !dbg !6349
  %77 = zext i1 %76 to i32, !dbg !6349
  %78 = call i32 @policy_show_version(%struct.plugin_container* @policy_plugin, i32 %77), !dbg !6350
  %79 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !6351
  store %struct.plugin_container* %79, %struct.plugin_container** %18, align 8, !dbg !6351
  br label %80, !dbg !6351

80:                                               ; preds = %101, %73
  %81 = load %struct.plugin_container*, %struct.plugin_container** %18, align 8, !dbg !6353
  %82 = icmp ne %struct.plugin_container* %81, null, !dbg !6353
  br i1 %82, label %83, label %105, !dbg !6351

83:                                               ; preds = %80
  %84 = load %struct.plugin_container*, %struct.plugin_container** %18, align 8, !dbg !6355
  %85 = load i8**, i8*** %12, align 8, !dbg !6357
  %86 = load i8**, i8*** %14, align 8, !dbg !6358
  %87 = load i32, i32* %8, align 4, !dbg !6359
  %88 = load i8**, i8*** %11, align 8, !dbg !6360
  %89 = load i8**, i8*** %7, align 8, !dbg !6361
  %90 = call i32 @iolog_open(%struct.plugin_container* %84, i8** %85, i8** %86, i8** null, i32 %87, i8** %88, i8** %89), !dbg !6362
  store i32 %90, i32* %22, align 4, !dbg !6363
  %91 = load i32, i32* %22, align 4, !dbg !6364
  %92 = icmp eq i32 %91, 1, !dbg !6366
  br i1 %92, label %93, label %100, !dbg !6367

93:                                               ; preds = %83
  %94 = load %struct.plugin_container*, %struct.plugin_container** %18, align 8, !dbg !6368
  %95 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !6369
  %96 = icmp ne i32 %95, 0, !dbg !6370
  %97 = xor i1 %96, true, !dbg !6370
  %98 = zext i1 %97 to i32, !dbg !6370
  %99 = call i32 @iolog_show_version(%struct.plugin_container* %94, i32 %98), !dbg !6371
  br label %100, !dbg !6371

100:                                              ; preds = %93, %83
  br label %101, !dbg !6372

101:                                              ; preds = %100
  %102 = load %struct.plugin_container*, %struct.plugin_container** %18, align 8, !dbg !6353
  %103 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %102, i32 0, i32 1, !dbg !6353
  %104 = load %struct.plugin_container*, %struct.plugin_container** %103, align 8, !dbg !6353
  store %struct.plugin_container* %104, %struct.plugin_container** %18, align 8, !dbg !6353
  br label %80, !dbg !6353, !llvm.loop !6373

105:                                              ; preds = %80
  br label %196, !dbg !6375

106:                                              ; preds = %70, %70
  %107 = call i32 @policy_validate(%struct.plugin_container* @policy_plugin), !dbg !6376
  store i32 %107, i32* %22, align 4, !dbg !6377
  %108 = load i32, i32* %22, align 4, !dbg !6378
  %109 = icmp ne i32 %108, 1, !dbg !6379
  %110 = zext i1 %109 to i32, !dbg !6379
  call void @exit(i32 %110) #15, !dbg !6380
  unreachable, !dbg !6380

111:                                              ; preds = %70, %70
  %112 = load i32, i32* %9, align 4, !dbg !6381
  %113 = icmp eq i32 %112, 16, !dbg !6382
  %114 = zext i1 %113 to i32, !dbg !6382
  call void @policy_invalidate(%struct.plugin_container* @policy_plugin, i32 %114), !dbg !6383
  call void @exit(i32 0) #15, !dbg !6384
  unreachable, !dbg !6384

115:                                              ; preds = %70, %70, %70, %70
  %116 = load i32, i32* %8, align 4, !dbg !6385
  %117 = load i8**, i8*** %11, align 8, !dbg !6386
  %118 = load i32, i32* %9, align 4, !dbg !6387
  %119 = and i32 %118, 16777216, !dbg !6387
  %120 = load i8*, i8** @list_user, align 8, !dbg !6388
  %121 = call i32 @policy_list(%struct.plugin_container* @policy_plugin, i32 %116, i8** %117, i32 %119, i8* %120), !dbg !6389
  store i32 %121, i32* %22, align 4, !dbg !6390
  %122 = load i32, i32* %22, align 4, !dbg !6391
  %123 = icmp ne i32 %122, 1, !dbg !6392
  %124 = zext i1 %123 to i32, !dbg !6392
  call void @exit(i32 %124) #15, !dbg !6393
  unreachable, !dbg !6393

125:                                              ; preds = %70, %70
  %126 = load i32, i32* %8, align 4, !dbg !6394
  %127 = load i8**, i8*** %11, align 8, !dbg !6395
  %128 = load i8**, i8*** %13, align 8, !dbg !6396
  %129 = call i32 @policy_check(%struct.plugin_container* @policy_plugin, i32 %126, i8** %127, i8** %128, i8*** %15, i8*** %16, i8*** %17), !dbg !6397
  store i32 %129, i32* %22, align 4, !dbg !6398
  %130 = load i32, i32* %22, align 4, !dbg !6399
  call void (i32, i8*, ...) @sudo_debug(i32 8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12.132, i64 0, i64 0), i32 %130), !dbg !6400
  %131 = load i32, i32* %22, align 4, !dbg !6401
  %132 = icmp ne i32 %131, 1, !dbg !6403
  br i1 %132, label %133, label %138, !dbg !6404

133:                                              ; preds = %125
  %134 = load i32, i32* %22, align 4, !dbg !6405
  %135 = icmp eq i32 %134, -2, !dbg !6408
  br i1 %135, label %136, label %137, !dbg !6409

136:                                              ; preds = %133
  call void @usage(i32 1), !dbg !6410
  br label %137, !dbg !6410

137:                                              ; preds = %136, %133
  call void @exit(i32 1) #15, !dbg !6411
  unreachable, !dbg !6411

138:                                              ; preds = %125
  %139 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !6412
  store %struct.plugin_container* %139, %struct.plugin_container** %18, align 8, !dbg !6414
  br label %140, !dbg !6415

140:                                              ; preds = %167, %138
  %141 = load %struct.plugin_container*, %struct.plugin_container** %18, align 8, !dbg !6416
  %142 = icmp ne %struct.plugin_container* %141, null, !dbg !6418
  br i1 %142, label %143, label %169, !dbg !6419

143:                                              ; preds = %140
  %144 = load %struct.plugin_container*, %struct.plugin_container** %18, align 8, !dbg !6420
  %145 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %144, i32 0, i32 1, !dbg !6422
  %146 = load %struct.plugin_container*, %struct.plugin_container** %145, align 8, !dbg !6422
  store %struct.plugin_container* %146, %struct.plugin_container** %19, align 8, !dbg !6423
  %147 = load %struct.plugin_container*, %struct.plugin_container** %18, align 8, !dbg !6424
  %148 = load i8**, i8*** %12, align 8, !dbg !6425
  %149 = load i8**, i8*** %14, align 8, !dbg !6426
  %150 = load i8**, i8*** %15, align 8, !dbg !6427
  %151 = load i32, i32* %8, align 4, !dbg !6428
  %152 = load i8**, i8*** %11, align 8, !dbg !6429
  %153 = load i8**, i8*** %7, align 8, !dbg !6430
  %154 = call i32 @iolog_open(%struct.plugin_container* %147, i8** %148, i8** %149, i8** %150, i32 %151, i8** %152, i8** %153), !dbg !6431
  store i32 %154, i32* %22, align 4, !dbg !6432
  %155 = load i32, i32* %22, align 4, !dbg !6433
  switch i32 %155, label %161 [
    i32 1, label %156
    i32 0, label %157
    i32 -2, label %160
  ], !dbg !6434

156:                                              ; preds = %143
  br label %166, !dbg !6435

157:                                              ; preds = %143
  %158 = load %struct.plugin_container*, %struct.plugin_container** %18, align 8, !dbg !6437
  %159 = bitcast %struct.plugin_container* %158 to i8*, !dbg !6437
  call void @tq_remove(i8* bitcast (%struct.plugin_container_list* @io_plugins to i8*), i8* %159), !dbg !6438
  br label %166, !dbg !6439

160:                                              ; preds = %143
  call void @usage(i32 1), !dbg !6440
  br label %166, !dbg !6441

161:                                              ; preds = %143
  %162 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13.133, i64 0, i64 0)) #13, !dbg !6442
  %163 = load %struct.plugin_container*, %struct.plugin_container** %18, align 8, !dbg !6443
  %164 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %163, i32 0, i32 2, !dbg !6444
  %165 = load i8*, i8** %164, align 8, !dbg !6444
  call void (i32, i8*, ...) @errorx(i32 1, i8* %162, i8* %165) #16, !dbg !6445
  unreachable, !dbg !6445

166:                                              ; preds = %160, %157, %156
  br label %167, !dbg !6446

167:                                              ; preds = %166
  %168 = load %struct.plugin_container*, %struct.plugin_container** %19, align 8, !dbg !6447
  store %struct.plugin_container* %168, %struct.plugin_container** %18, align 8, !dbg !6448
  br label %140, !dbg !6449, !llvm.loop !6450

169:                                              ; preds = %140
  %170 = load i8**, i8*** %15, align 8, !dbg !6452
  call void @command_info_to_details(i8** %170, %struct.command_details* %20), !dbg !6453
  %171 = load i8**, i8*** %16, align 8, !dbg !6454
  %172 = getelementptr inbounds %struct.command_details, %struct.command_details* %20, i32 0, i32 18, !dbg !6455
  store i8** %171, i8*** %172, align 8, !dbg !6456
  %173 = load i8**, i8*** %17, align 8, !dbg !6457
  %174 = getelementptr inbounds %struct.command_details, %struct.command_details* %20, i32 0, i32 19, !dbg !6458
  store i8** %173, i8*** %174, align 8, !dbg !6459
  %175 = load i32, i32* %9, align 4, !dbg !6460
  %176 = and i32 %175, 65536, !dbg !6460
  %177 = icmp ne i32 %176, 0, !dbg !6460
  br i1 %177, label %178, label %182, !dbg !6462

178:                                              ; preds = %169
  %179 = getelementptr inbounds %struct.command_details, %struct.command_details* %20, i32 0, i32 9, !dbg !6463
  %180 = load i32, i32* %179, align 4, !dbg !6463
  %181 = or i32 %180, 1024, !dbg !6463
  store i32 %181, i32* %179, align 4, !dbg !6463
  br label %182, !dbg !6463

182:                                              ; preds = %178, %169
  %183 = call i32 @setrlimit(i32 4, %struct.timeval* @corelimit) #13, !dbg !6464
  %184 = getelementptr inbounds %struct.command_details, %struct.command_details* %20, i32 0, i32 9, !dbg !6465
  %185 = load i32, i32* %184, align 4, !dbg !6465
  %186 = and i32 %185, 512, !dbg !6465
  %187 = icmp ne i32 %186, 0, !dbg !6465
  br i1 %187, label %188, label %190, !dbg !6467

188:                                              ; preds = %182
  %189 = call i32 @sudo_edit(%struct.command_details* %20), !dbg !6468
  store i32 %189, i32* %10, align 4, !dbg !6470
  br label %192, !dbg !6471

190:                                              ; preds = %182
  %191 = call i32 @run_command(%struct.command_details* %20), !dbg !6472
  store i32 %191, i32* %10, align 4, !dbg !6474
  br label %192

192:                                              ; preds = %190, %188
  br label %196, !dbg !6475

193:                                              ; preds = %70
  %194 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14.134, i64 0, i64 0)) #13, !dbg !6476
  %195 = load i32, i32* %9, align 4, !dbg !6477
  call void (i32, i8*, ...) @errorx(i32 1, i8* %194, i32 %195) #16, !dbg !6478
  unreachable, !dbg !6478

196:                                              ; preds = %192, %105
  %197 = load i32, i32* %10, align 4, !dbg !6479
  call void @exit(i32 %197) #15, !dbg !6480
  unreachable, !dbg !6480
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #4

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #4

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @disable_coredumps() #0 !dbg !6481 {
  %1 = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval* %1, metadata !6482, metadata !DIExpression()), !dbg !6483
  %2 = call i32 @getrlimit(i32 6, %struct.timeval* @nproclimit) #13, !dbg !6484
  %3 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 1, !dbg !6485
  store i64 -1, i64* %3, align 8, !dbg !6486
  %4 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 0, !dbg !6487
  store i64 -1, i64* %4, align 8, !dbg !6488
  %5 = call i32 @setrlimit(i32 6, %struct.timeval* %1) #13, !dbg !6489
  %6 = icmp ne i32 %5, 0, !dbg !6489
  br i1 %6, label %7, label %13, !dbg !6491

7:                                                ; preds = %0
  %8 = bitcast %struct.timeval* %1 to i8*, !dbg !6492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.timeval* @nproclimit to i8*), i64 16, i1 false), !dbg !6492
  %9 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 1, !dbg !6494
  %10 = load i64, i64* %9, align 8, !dbg !6494
  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 0, !dbg !6495
  store i64 %10, i64* %11, align 8, !dbg !6496
  %12 = call i32 @setrlimit(i32 6, %struct.timeval* %1) #13, !dbg !6497
  br label %13, !dbg !6498

13:                                               ; preds = %7, %0
  %14 = call i32 @getrlimit(i32 4, %struct.timeval* @corelimit) #13, !dbg !6499
  %15 = bitcast %struct.timeval* %1 to i8*, !dbg !6500
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.timeval* @corelimit to i8*), i64 16, i1 false), !dbg !6500
  %16 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 0, !dbg !6501
  store i64 0, i64* %16, align 8, !dbg !6502
  %17 = call i32 @setrlimit(i32 4, %struct.timeval* %1) #13, !dbg !6503
  ret void, !dbg !6504
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fix_fds() #0 !dbg !6505 {
  %1 = alloca [3 x i32], align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata [3 x i32]* %1, metadata !6506, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6509, metadata !DIExpression()), !dbg !6510
  store i32 -1, i32* %2, align 4, !dbg !6510
  %3 = call i32 (i32, i32, ...) @fcntl(i32 0, i32 3, i32 0), !dbg !6511
  %4 = icmp eq i32 %3, -1, !dbg !6512
  %5 = zext i1 %4 to i32, !dbg !6512
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 0, !dbg !6513
  store i32 %5, i32* %6, align 4, !dbg !6514
  %7 = call i32 (i32, i32, ...) @fcntl(i32 1, i32 3, i32 0), !dbg !6515
  %8 = icmp eq i32 %7, -1, !dbg !6516
  %9 = zext i1 %8 to i32, !dbg !6516
  %10 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 1, !dbg !6517
  store i32 %9, i32* %10, align 4, !dbg !6518
  %11 = call i32 (i32, i32, ...) @fcntl(i32 2, i32 3, i32 0), !dbg !6519
  %12 = icmp eq i32 %11, -1, !dbg !6520
  %13 = zext i1 %12 to i32, !dbg !6520
  %14 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 2, !dbg !6521
  store i32 %13, i32* %14, align 4, !dbg !6522
  %15 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 0, !dbg !6523
  %16 = load i32, i32* %15, align 4, !dbg !6523
  %17 = icmp ne i32 %16, 0, !dbg !6523
  br i1 %17, label %26, label %18, !dbg !6525

18:                                               ; preds = %0
  %19 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 1, !dbg !6526
  %20 = load i32, i32* %19, align 4, !dbg !6526
  %21 = icmp ne i32 %20, 0, !dbg !6526
  br i1 %21, label %26, label %22, !dbg !6527

22:                                               ; preds = %18
  %23 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 2, !dbg !6528
  %24 = load i32, i32* %23, align 4, !dbg !6528
  %25 = icmp ne i32 %24, 0, !dbg !6528
  br i1 %25, label %26, label %65, !dbg !6529

26:                                               ; preds = %22, %18, %0
  %27 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29.186, i64 0, i64 0), i32 2, i32 420), !dbg !6530
  store i32 %27, i32* %2, align 4, !dbg !6533
  %28 = icmp eq i32 %27, -1, !dbg !6534
  br i1 %28, label %29, label %31, !dbg !6535

29:                                               ; preds = %26
  %30 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30.187, i64 0, i64 0)) #13, !dbg !6536
  call void (i32, i8*, ...) @error(i32 1, i8* %30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29.186, i64 0, i64 0)) #16, !dbg !6537
  unreachable, !dbg !6537

31:                                               ; preds = %26
  %32 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 0, !dbg !6538
  %33 = load i32, i32* %32, align 4, !dbg !6538
  %34 = icmp ne i32 %33, 0, !dbg !6538
  br i1 %34, label %35, label %40, !dbg !6540

35:                                               ; preds = %31
  %36 = load i32, i32* %2, align 4, !dbg !6541
  %37 = call i32 @dup2(i32 %36, i32 0) #13, !dbg !6542
  %38 = icmp eq i32 %37, -1, !dbg !6543
  br i1 %38, label %39, label %40, !dbg !6544

39:                                               ; preds = %35
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31.188, i64 0, i64 0)) #16, !dbg !6545
  unreachable, !dbg !6545

40:                                               ; preds = %35, %31
  %41 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 1, !dbg !6546
  %42 = load i32, i32* %41, align 4, !dbg !6546
  %43 = icmp ne i32 %42, 0, !dbg !6546
  br i1 %43, label %44, label %49, !dbg !6548

44:                                               ; preds = %40
  %45 = load i32, i32* %2, align 4, !dbg !6549
  %46 = call i32 @dup2(i32 %45, i32 1) #13, !dbg !6550
  %47 = icmp eq i32 %46, -1, !dbg !6551
  br i1 %47, label %48, label %49, !dbg !6552

48:                                               ; preds = %44
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31.188, i64 0, i64 0)) #16, !dbg !6553
  unreachable, !dbg !6553

49:                                               ; preds = %44, %40
  %50 = getelementptr inbounds [3 x i32], [3 x i32]* %1, i64 0, i64 2, !dbg !6554
  %51 = load i32, i32* %50, align 4, !dbg !6554
  %52 = icmp ne i32 %51, 0, !dbg !6554
  br i1 %52, label %53, label %58, !dbg !6556

53:                                               ; preds = %49
  %54 = load i32, i32* %2, align 4, !dbg !6557
  %55 = call i32 @dup2(i32 %54, i32 2) #13, !dbg !6558
  %56 = icmp eq i32 %55, -1, !dbg !6559
  br i1 %56, label %57, label %58, !dbg !6560

57:                                               ; preds = %53
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31.188, i64 0, i64 0)) #16, !dbg !6561
  unreachable, !dbg !6561

58:                                               ; preds = %53, %49
  %59 = load i32, i32* %2, align 4, !dbg !6562
  %60 = icmp sgt i32 %59, 2, !dbg !6564
  br i1 %60, label %61, label %64, !dbg !6565

61:                                               ; preds = %58
  %62 = load i32, i32* %2, align 4, !dbg !6566
  %63 = call i32 @close(i32 %62), !dbg !6567
  br label %64, !dbg !6567

64:                                               ; preds = %61, %58
  br label %65, !dbg !6568

65:                                               ; preds = %64, %22
  ret void, !dbg !6569
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8** @get_user_info(%struct.user_details* %0) #0 !dbg !6570 {
  %2 = alloca %struct.user_details*, align 8
  %3 = alloca [4096 x i8], align 16
  %4 = alloca [64 x i8], align 16
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.passwd*, align 8
  %8 = alloca i32, align 4
  store %struct.user_details* %0, %struct.user_details** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.user_details** %2, metadata !6574, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.declare(metadata [4096 x i8]* %3, metadata !6576, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.declare(metadata [64 x i8]* %4, metadata !6578, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !6583, metadata !DIExpression()), !dbg !6584
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6585, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.declare(metadata %struct.passwd** %7, metadata !6587, metadata !DIExpression()), !dbg !6588
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6589, metadata !DIExpression()), !dbg !6590
  store i32 0, i32* %8, align 4, !dbg !6590
  %9 = call i8* @emalloc2(i64 32, i64 8), !dbg !6591
  %10 = bitcast i8* %9 to i8**, !dbg !6591
  store i8** %10, i8*** %5, align 8, !dbg !6592
  %11 = call i32 @getuid() #13, !dbg !6593
  %12 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6594
  %13 = getelementptr inbounds %struct.user_details, %struct.user_details* %12, i32 0, i32 0, !dbg !6595
  store i32 %11, i32* %13, align 8, !dbg !6596
  %14 = call i32 @geteuid() #13, !dbg !6597
  %15 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6598
  %16 = getelementptr inbounds %struct.user_details, %struct.user_details* %15, i32 0, i32 1, !dbg !6599
  store i32 %14, i32* %16, align 4, !dbg !6600
  %17 = call i32 @getgid() #13, !dbg !6601
  %18 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6602
  %19 = getelementptr inbounds %struct.user_details, %struct.user_details* %18, i32 0, i32 2, !dbg !6603
  store i32 %17, i32* %19, align 8, !dbg !6604
  %20 = call i32 @getegid() #13, !dbg !6605
  %21 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6606
  %22 = getelementptr inbounds %struct.user_details, %struct.user_details* %21, i32 0, i32 3, !dbg !6607
  store i32 %20, i32* %22, align 4, !dbg !6608
  %23 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6609
  %24 = getelementptr inbounds %struct.user_details, %struct.user_details* %23, i32 0, i32 0, !dbg !6610
  %25 = load i32, i32* %24, align 8, !dbg !6610
  %26 = call %struct.passwd* @getpwuid(i32 %25), !dbg !6611
  store %struct.passwd* %26, %struct.passwd** %7, align 8, !dbg !6612
  %27 = load %struct.passwd*, %struct.passwd** %7, align 8, !dbg !6613
  %28 = icmp eq %struct.passwd* %27, null, !dbg !6615
  br i1 %28, label %29, label %34, !dbg !6616

29:                                               ; preds = %1
  %30 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.32.167, i64 0, i64 0)) #13, !dbg !6617
  %31 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6618
  %32 = getelementptr inbounds %struct.user_details, %struct.user_details* %31, i32 0, i32 0, !dbg !6619
  %33 = load i32, i32* %32, align 8, !dbg !6619
  call void (i32, i8*, ...) @errorx(i32 1, i8* %30, i32 %33) #16, !dbg !6620
  unreachable, !dbg !6620

34:                                               ; preds = %1
  %35 = load %struct.passwd*, %struct.passwd** %7, align 8, !dbg !6621
  %36 = getelementptr inbounds %struct.passwd, %struct.passwd* %35, i32 0, i32 0, !dbg !6622
  %37 = load i8*, i8** %36, align 8, !dbg !6622
  %38 = call i8* @fmt_string(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33.168, i64 0, i64 0), i8* %37), !dbg !6623
  %39 = load i8**, i8*** %5, align 8, !dbg !6624
  %40 = load i32, i32* %8, align 4, !dbg !6625
  %41 = sext i32 %40 to i64, !dbg !6624
  %42 = getelementptr inbounds i8*, i8** %39, i64 %41, !dbg !6624
  store i8* %38, i8** %42, align 8, !dbg !6626
  %43 = load i8**, i8*** %5, align 8, !dbg !6627
  %44 = load i32, i32* %8, align 4, !dbg !6629
  %45 = sext i32 %44 to i64, !dbg !6627
  %46 = getelementptr inbounds i8*, i8** %43, i64 %45, !dbg !6627
  %47 = load i8*, i8** %46, align 8, !dbg !6627
  %48 = icmp eq i8* %47, null, !dbg !6630
  br i1 %48, label %49, label %51, !dbg !6631

49:                                               ; preds = %34
  %50 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34.169, i64 0, i64 0)) #13, !dbg !6632
  call void (i32, i8*, ...) @errorx(i32 1, i8* %50) #16, !dbg !6633
  unreachable, !dbg !6633

51:                                               ; preds = %34
  %52 = load i8**, i8*** %5, align 8, !dbg !6634
  %53 = load i32, i32* %8, align 4, !dbg !6635
  %54 = sext i32 %53 to i64, !dbg !6634
  %55 = getelementptr inbounds i8*, i8** %52, i64 %54, !dbg !6634
  %56 = load i8*, i8** %55, align 8, !dbg !6634
  %57 = getelementptr inbounds i8, i8* %56, i64 6, !dbg !6636
  %58 = getelementptr inbounds i8, i8* %57, i64 -1, !dbg !6637
  %59 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6638
  %60 = getelementptr inbounds %struct.user_details, %struct.user_details* %59, i32 0, i32 4, !dbg !6639
  store i8* %58, i8** %60, align 8, !dbg !6640
  %61 = call i8* @getenv(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35.170, i64 0, i64 0)) #13, !dbg !6641
  %62 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6643
  %63 = getelementptr inbounds %struct.user_details, %struct.user_details* %62, i32 0, i32 8, !dbg !6644
  store i8* %61, i8** %63, align 8, !dbg !6645
  %64 = icmp eq i8* %61, null, !dbg !6646
  br i1 %64, label %73, label %65, !dbg !6647

65:                                               ; preds = %51
  %66 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6648
  %67 = getelementptr inbounds %struct.user_details, %struct.user_details* %66, i32 0, i32 8, !dbg !6649
  %68 = load i8*, i8** %67, align 8, !dbg !6649
  %69 = getelementptr inbounds i8, i8* %68, i64 0, !dbg !6648
  %70 = load i8, i8* %69, align 1, !dbg !6648
  %71 = sext i8 %70 to i32, !dbg !6648
  %72 = icmp eq i32 %71, 0, !dbg !6650
  br i1 %72, label %73, label %90, !dbg !6651

73:                                               ; preds = %65, %51
  %74 = load %struct.passwd*, %struct.passwd** %7, align 8, !dbg !6652
  %75 = getelementptr inbounds %struct.passwd, %struct.passwd* %74, i32 0, i32 6, !dbg !6654
  %76 = load i8*, i8** %75, align 8, !dbg !6654
  %77 = getelementptr inbounds i8, i8* %76, i64 0, !dbg !6652
  %78 = load i8, i8* %77, align 1, !dbg !6652
  %79 = sext i8 %78 to i32, !dbg !6652
  %80 = icmp ne i32 %79, 0, !dbg !6652
  br i1 %80, label %81, label %85, !dbg !6652

81:                                               ; preds = %73
  %82 = load %struct.passwd*, %struct.passwd** %7, align 8, !dbg !6655
  %83 = getelementptr inbounds %struct.passwd, %struct.passwd* %82, i32 0, i32 6, !dbg !6656
  %84 = load i8*, i8** %83, align 8, !dbg !6656
  br label %86, !dbg !6652

85:                                               ; preds = %73
  br label %86, !dbg !6652

86:                                               ; preds = %85, %81
  %87 = phi i8* [ %84, %81 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36.171, i64 0, i64 0), %85 ], !dbg !6652
  %88 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6657
  %89 = getelementptr inbounds %struct.user_details, %struct.user_details* %88, i32 0, i32 8, !dbg !6658
  store i8* %87, i8** %89, align 8, !dbg !6659
  br label %90, !dbg !6660

90:                                               ; preds = %86, %65
  %91 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6661
  %92 = getelementptr inbounds %struct.user_details, %struct.user_details* %91, i32 0, i32 8, !dbg !6662
  %93 = load i8*, i8** %92, align 8, !dbg !6662
  %94 = call i8* @estrdup(i8* %93), !dbg !6663
  %95 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6664
  %96 = getelementptr inbounds %struct.user_details, %struct.user_details* %95, i32 0, i32 8, !dbg !6665
  store i8* %94, i8** %96, align 8, !dbg !6666
  %97 = load i8**, i8*** %5, align 8, !dbg !6667
  %98 = load i32, i32* %8, align 4, !dbg !6668
  %99 = add nsw i32 %98, 1, !dbg !6668
  store i32 %99, i32* %8, align 4, !dbg !6668
  %100 = sext i32 %99 to i64, !dbg !6667
  %101 = getelementptr inbounds i8*, i8** %97, i64 %100, !dbg !6667
  %102 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6669
  %103 = getelementptr inbounds %struct.user_details, %struct.user_details* %102, i32 0, i32 0, !dbg !6670
  %104 = load i32, i32* %103, align 8, !dbg !6670
  %105 = call i32 (i8**, i8*, ...) @easprintf(i8** %101, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37.172, i64 0, i64 0), i32 %104), !dbg !6671
  %106 = load i8**, i8*** %5, align 8, !dbg !6672
  %107 = load i32, i32* %8, align 4, !dbg !6673
  %108 = add nsw i32 %107, 1, !dbg !6673
  store i32 %108, i32* %8, align 4, !dbg !6673
  %109 = sext i32 %108 to i64, !dbg !6672
  %110 = getelementptr inbounds i8*, i8** %106, i64 %109, !dbg !6672
  %111 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6674
  %112 = getelementptr inbounds %struct.user_details, %struct.user_details* %111, i32 0, i32 1, !dbg !6675
  %113 = load i32, i32* %112, align 4, !dbg !6675
  %114 = call i32 (i8**, i8*, ...) @easprintf(i8** %110, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38.173, i64 0, i64 0), i32 %113), !dbg !6676
  %115 = load i8**, i8*** %5, align 8, !dbg !6677
  %116 = load i32, i32* %8, align 4, !dbg !6678
  %117 = add nsw i32 %116, 1, !dbg !6678
  store i32 %117, i32* %8, align 4, !dbg !6678
  %118 = sext i32 %117 to i64, !dbg !6677
  %119 = getelementptr inbounds i8*, i8** %115, i64 %118, !dbg !6677
  %120 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6679
  %121 = getelementptr inbounds %struct.user_details, %struct.user_details* %120, i32 0, i32 2, !dbg !6680
  %122 = load i32, i32* %121, align 8, !dbg !6680
  %123 = call i32 (i8**, i8*, ...) @easprintf(i8** %119, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39.174, i64 0, i64 0), i32 %122), !dbg !6681
  %124 = load i8**, i8*** %5, align 8, !dbg !6682
  %125 = load i32, i32* %8, align 4, !dbg !6683
  %126 = add nsw i32 %125, 1, !dbg !6683
  store i32 %126, i32* %8, align 4, !dbg !6683
  %127 = sext i32 %126 to i64, !dbg !6682
  %128 = getelementptr inbounds i8*, i8** %124, i64 %127, !dbg !6682
  %129 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6684
  %130 = getelementptr inbounds %struct.user_details, %struct.user_details* %129, i32 0, i32 3, !dbg !6685
  %131 = load i32, i32* %130, align 4, !dbg !6685
  %132 = call i32 (i8**, i8*, ...) @easprintf(i8** %128, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40.175, i64 0, i64 0), i32 %131), !dbg !6686
  %133 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6687
  %134 = call i8* @get_user_groups(%struct.user_details* %133), !dbg !6689
  store i8* %134, i8** %6, align 8, !dbg !6690
  %135 = icmp ne i8* %134, null, !dbg !6691
  br i1 %135, label %136, label %143, !dbg !6692

136:                                              ; preds = %90
  %137 = load i8*, i8** %6, align 8, !dbg !6693
  %138 = load i8**, i8*** %5, align 8, !dbg !6694
  %139 = load i32, i32* %8, align 4, !dbg !6695
  %140 = add nsw i32 %139, 1, !dbg !6695
  store i32 %140, i32* %8, align 4, !dbg !6695
  %141 = sext i32 %140 to i64, !dbg !6694
  %142 = getelementptr inbounds i8*, i8** %138, i64 %141, !dbg !6694
  store i8* %137, i8** %142, align 8, !dbg !6696
  br label %143, !dbg !6694

143:                                              ; preds = %136, %90
  %144 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0, !dbg !6697
  %145 = call i8* @getcwd(i8* %144, i64 4096) #13, !dbg !6699
  %146 = icmp ne i8* %145, null, !dbg !6700
  br i1 %146, label %147, label %173, !dbg !6701

147:                                              ; preds = %143
  %148 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0, !dbg !6702
  %149 = call i8* @fmt_string(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41.176, i64 0, i64 0), i8* %148), !dbg !6704
  %150 = load i8**, i8*** %5, align 8, !dbg !6705
  %151 = load i32, i32* %8, align 4, !dbg !6706
  %152 = add nsw i32 %151, 1, !dbg !6706
  store i32 %152, i32* %8, align 4, !dbg !6706
  %153 = sext i32 %152 to i64, !dbg !6705
  %154 = getelementptr inbounds i8*, i8** %150, i64 %153, !dbg !6705
  store i8* %149, i8** %154, align 8, !dbg !6707
  %155 = load i8**, i8*** %5, align 8, !dbg !6708
  %156 = load i32, i32* %8, align 4, !dbg !6710
  %157 = sext i32 %156 to i64, !dbg !6708
  %158 = getelementptr inbounds i8*, i8** %155, i64 %157, !dbg !6708
  %159 = load i8*, i8** %158, align 8, !dbg !6708
  %160 = icmp eq i8* %159, null, !dbg !6711
  br i1 %160, label %161, label %163, !dbg !6712

161:                                              ; preds = %147
  %162 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34.169, i64 0, i64 0)) #13, !dbg !6713
  call void (i32, i8*, ...) @errorx(i32 1, i8* %162) #16, !dbg !6714
  unreachable, !dbg !6714

163:                                              ; preds = %147
  %164 = load i8**, i8*** %5, align 8, !dbg !6715
  %165 = load i32, i32* %8, align 4, !dbg !6716
  %166 = sext i32 %165 to i64, !dbg !6715
  %167 = getelementptr inbounds i8*, i8** %164, i64 %166, !dbg !6715
  %168 = load i8*, i8** %167, align 8, !dbg !6715
  %169 = getelementptr inbounds i8, i8* %168, i64 5, !dbg !6717
  %170 = getelementptr inbounds i8, i8* %169, i64 -1, !dbg !6718
  %171 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6719
  %172 = getelementptr inbounds %struct.user_details, %struct.user_details* %171, i32 0, i32 5, !dbg !6720
  store i8* %170, i8** %172, align 8, !dbg !6721
  br label %173, !dbg !6722

173:                                              ; preds = %163, %143
  %174 = call i8* @ttyname(i32 0) #13, !dbg !6723
  store i8* %174, i8** %6, align 8, !dbg !6725
  %175 = icmp ne i8* %174, null, !dbg !6725
  br i1 %175, label %182, label %176, !dbg !6726

176:                                              ; preds = %173
  %177 = call i8* @ttyname(i32 1) #13, !dbg !6727
  store i8* %177, i8** %6, align 8, !dbg !6728
  %178 = icmp ne i8* %177, null, !dbg !6728
  br i1 %178, label %182, label %179, !dbg !6729

179:                                              ; preds = %176
  %180 = call i8* @ttyname(i32 2) #13, !dbg !6730
  store i8* %180, i8** %6, align 8, !dbg !6731
  %181 = icmp ne i8* %180, null, !dbg !6731
  br i1 %181, label %182, label %208, !dbg !6732

182:                                              ; preds = %179, %176, %173
  %183 = load i8*, i8** %6, align 8, !dbg !6733
  %184 = call i8* @fmt_string(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42.177, i64 0, i64 0), i8* %183), !dbg !6735
  %185 = load i8**, i8*** %5, align 8, !dbg !6736
  %186 = load i32, i32* %8, align 4, !dbg !6737
  %187 = add nsw i32 %186, 1, !dbg !6737
  store i32 %187, i32* %8, align 4, !dbg !6737
  %188 = sext i32 %187 to i64, !dbg !6736
  %189 = getelementptr inbounds i8*, i8** %185, i64 %188, !dbg !6736
  store i8* %184, i8** %189, align 8, !dbg !6738
  %190 = load i8**, i8*** %5, align 8, !dbg !6739
  %191 = load i32, i32* %8, align 4, !dbg !6741
  %192 = sext i32 %191 to i64, !dbg !6739
  %193 = getelementptr inbounds i8*, i8** %190, i64 %192, !dbg !6739
  %194 = load i8*, i8** %193, align 8, !dbg !6739
  %195 = icmp eq i8* %194, null, !dbg !6742
  br i1 %195, label %196, label %198, !dbg !6743

196:                                              ; preds = %182
  %197 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34.169, i64 0, i64 0)) #13, !dbg !6744
  call void (i32, i8*, ...) @errorx(i32 1, i8* %197) #16, !dbg !6745
  unreachable, !dbg !6745

198:                                              ; preds = %182
  %199 = load i8**, i8*** %5, align 8, !dbg !6746
  %200 = load i32, i32* %8, align 4, !dbg !6747
  %201 = sext i32 %200 to i64, !dbg !6746
  %202 = getelementptr inbounds i8*, i8** %199, i64 %201, !dbg !6746
  %203 = load i8*, i8** %202, align 8, !dbg !6746
  %204 = getelementptr inbounds i8, i8* %203, i64 5, !dbg !6748
  %205 = getelementptr inbounds i8, i8* %204, i64 -1, !dbg !6749
  %206 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6750
  %207 = getelementptr inbounds %struct.user_details, %struct.user_details* %206, i32 0, i32 6, !dbg !6751
  store i8* %205, i8** %207, align 8, !dbg !6752
  br label %208, !dbg !6753

208:                                              ; preds = %198, %179
  %209 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 0, !dbg !6754
  %210 = call i32 @gethostname(i8* %209, i64 64) #13, !dbg !6756
  %211 = icmp eq i32 %210, 0, !dbg !6757
  br i1 %211, label %212, label %214, !dbg !6758

212:                                              ; preds = %208
  %213 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 63, !dbg !6759
  store i8 0, i8* %213, align 1, !dbg !6760
  br label %217, !dbg !6759

214:                                              ; preds = %208
  %215 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 0, !dbg !6761
  %216 = call i64 @strlcpy(i8* %215, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43.178, i64 0, i64 0), i64 64), !dbg !6762
  br label %217

217:                                              ; preds = %214, %212
  %218 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 0, !dbg !6763
  %219 = call i8* @fmt_string(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44.179, i64 0, i64 0), i8* %218), !dbg !6764
  %220 = load i8**, i8*** %5, align 8, !dbg !6765
  %221 = load i32, i32* %8, align 4, !dbg !6766
  %222 = add nsw i32 %221, 1, !dbg !6766
  store i32 %222, i32* %8, align 4, !dbg !6766
  %223 = sext i32 %222 to i64, !dbg !6765
  %224 = getelementptr inbounds i8*, i8** %220, i64 %223, !dbg !6765
  store i8* %219, i8** %224, align 8, !dbg !6767
  %225 = load i8**, i8*** %5, align 8, !dbg !6768
  %226 = load i32, i32* %8, align 4, !dbg !6770
  %227 = sext i32 %226 to i64, !dbg !6768
  %228 = getelementptr inbounds i8*, i8** %225, i64 %227, !dbg !6768
  %229 = load i8*, i8** %228, align 8, !dbg !6768
  %230 = icmp eq i8* %229, null, !dbg !6771
  br i1 %230, label %231, label %233, !dbg !6772

231:                                              ; preds = %217
  %232 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34.169, i64 0, i64 0)) #13, !dbg !6773
  call void (i32, i8*, ...) @errorx(i32 1, i8* %232) #16, !dbg !6774
  unreachable, !dbg !6774

233:                                              ; preds = %217
  %234 = load i8**, i8*** %5, align 8, !dbg !6775
  %235 = load i32, i32* %8, align 4, !dbg !6776
  %236 = sext i32 %235 to i64, !dbg !6775
  %237 = getelementptr inbounds i8*, i8** %234, i64 %236, !dbg !6775
  %238 = load i8*, i8** %237, align 8, !dbg !6775
  %239 = getelementptr inbounds i8, i8* %238, i64 6, !dbg !6777
  %240 = getelementptr inbounds i8, i8* %239, i64 -1, !dbg !6778
  %241 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6779
  %242 = getelementptr inbounds %struct.user_details, %struct.user_details* %241, i32 0, i32 7, !dbg !6780
  store i8* %240, i8** %242, align 8, !dbg !6781
  %243 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6782
  %244 = getelementptr inbounds %struct.user_details, %struct.user_details* %243, i32 0, i32 12, !dbg !6783
  %245 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6784
  %246 = getelementptr inbounds %struct.user_details, %struct.user_details* %245, i32 0, i32 11, !dbg !6785
  call void @get_ttysize(i32* %244, i32* %246), !dbg !6786
  %247 = load i8**, i8*** %5, align 8, !dbg !6787
  %248 = load i32, i32* %8, align 4, !dbg !6788
  %249 = add nsw i32 %248, 1, !dbg !6788
  store i32 %249, i32* %8, align 4, !dbg !6788
  %250 = sext i32 %249 to i64, !dbg !6787
  %251 = getelementptr inbounds i8*, i8** %247, i64 %250, !dbg !6787
  %252 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6789
  %253 = getelementptr inbounds %struct.user_details, %struct.user_details* %252, i32 0, i32 12, !dbg !6790
  %254 = load i32, i32* %253, align 8, !dbg !6790
  %255 = call i32 (i8**, i8*, ...) @easprintf(i8** %251, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45.180, i64 0, i64 0), i32 %254), !dbg !6791
  %256 = load i8**, i8*** %5, align 8, !dbg !6792
  %257 = load i32, i32* %8, align 4, !dbg !6793
  %258 = add nsw i32 %257, 1, !dbg !6793
  store i32 %258, i32* %8, align 4, !dbg !6793
  %259 = sext i32 %258 to i64, !dbg !6792
  %260 = getelementptr inbounds i8*, i8** %256, i64 %259, !dbg !6792
  %261 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !6794
  %262 = getelementptr inbounds %struct.user_details, %struct.user_details* %261, i32 0, i32 11, !dbg !6795
  %263 = load i32, i32* %262, align 4, !dbg !6795
  %264 = call i32 (i8**, i8*, ...) @easprintf(i8** %260, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46.181, i64 0, i64 0), i32 %263), !dbg !6796
  %265 = load i8**, i8*** %5, align 8, !dbg !6797
  %266 = load i32, i32* %8, align 4, !dbg !6798
  %267 = add nsw i32 %266, 1, !dbg !6798
  store i32 %267, i32* %8, align 4, !dbg !6798
  %268 = sext i32 %267 to i64, !dbg !6797
  %269 = getelementptr inbounds i8*, i8** %265, i64 %268, !dbg !6797
  store i8* null, i8** %269, align 8, !dbg !6799
  %270 = load i8**, i8*** %5, align 8, !dbg !6800
  ret i8** %270, !dbg !6801
}

declare dso_local i32 @printf(i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @sudo_debug(i32 %0, i8* %1, ...) #0 !dbg !6802 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  %6 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6803, metadata !DIExpression()), !dbg !6804
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6805, metadata !DIExpression()), !dbg !6806
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %5, metadata !6807, metadata !DIExpression()), !dbg !6818
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6819, metadata !DIExpression()), !dbg !6820
  %7 = load i32, i32* %3, align 4, !dbg !6821
  %8 = load i32, i32* @debug_level, align 4, !dbg !6823
  %9 = icmp sgt i32 %7, %8, !dbg !6824
  br i1 %9, label %10, label %11, !dbg !6825

10:                                               ; preds = %2
  br label %24, !dbg !6826

11:                                               ; preds = %2
  %12 = load i8*, i8** @__progname, align 8, !dbg !6827
  %13 = load i8*, i8** %4, align 8, !dbg !6828
  %14 = call i32 (i8**, i8*, ...) @easprintf(i8** %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28.166, i64 0, i64 0), i8* %12, i8* %13), !dbg !6829
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !6830
  %16 = bitcast %struct.__va_list_tag* %15 to i8*, !dbg !6830
  call void @llvm.va_start(i8* %16), !dbg !6830
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6831
  %18 = load i8*, i8** %6, align 8, !dbg !6832
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !6833
  %20 = call i32 @vfprintf(%struct._IO_FILE* %17, i8* %18, %struct.__va_list_tag* %19), !dbg !6834
  %21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !6835
  %22 = bitcast %struct.__va_list_tag* %21 to i8*, !dbg !6835
  call void @llvm.va_end(i8* %22), !dbg !6835
  %23 = load i8*, i8** %6, align 8, !dbg !6836
  call void @efree(i8* %23), !dbg !6837
  br label %24, !dbg !6838

24:                                               ; preds = %11, %10
  ret void, !dbg !6838
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @policy_open(%struct.plugin_container* %0, i8** %1, i8** %2, i8** %3) #0 !dbg !6839 {
  %5 = alloca %struct.plugin_container*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  store %struct.plugin_container* %0, %struct.plugin_container** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %5, metadata !6842, metadata !DIExpression()), !dbg !6843
  store i8** %1, i8*** %6, align 8
  call void @llvm.dbg.declare(metadata i8*** %6, metadata !6844, metadata !DIExpression()), !dbg !6845
  store i8** %2, i8*** %7, align 8
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !6846, metadata !DIExpression()), !dbg !6847
  store i8** %3, i8*** %8, align 8
  call void @llvm.dbg.declare(metadata i8*** %8, metadata !6848, metadata !DIExpression()), !dbg !6849
  %9 = load %struct.plugin_container*, %struct.plugin_container** %5, align 8, !dbg !6850
  %10 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %9, i32 0, i32 4, !dbg !6851
  %11 = bitcast %union.anon.9* %10 to %struct.policy_plugin**, !dbg !6852
  %12 = load %struct.policy_plugin*, %struct.policy_plugin** %11, align 8, !dbg !6852
  %13 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %12, i32 0, i32 2, !dbg !6853
  %14 = load i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**)*, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**)** %13, align 8, !dbg !6853
  %15 = load i8**, i8*** %6, align 8, !dbg !6854
  %16 = load i8**, i8*** %7, align 8, !dbg !6855
  %17 = load i8**, i8*** %8, align 8, !dbg !6856
  %18 = call i32 %14(i32 65537, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)* @sudo_conversation, i32 (i32, i8*, ...)* @_sudo_printf, i8** %15, i8** %16, i8** %17), !dbg !6850
  ret i32 %18, !dbg !6857
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @policy_show_version(%struct.plugin_container* %0, i32 %1) #0 !dbg !6858 {
  %3 = alloca %struct.plugin_container*, align 8
  %4 = alloca i32, align 4
  store %struct.plugin_container* %0, %struct.plugin_container** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %3, metadata !6861, metadata !DIExpression()), !dbg !6862
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6863, metadata !DIExpression()), !dbg !6864
  %5 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !6865
  %6 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %5, i32 0, i32 4, !dbg !6866
  %7 = bitcast %union.anon.9* %6 to %struct.policy_plugin**, !dbg !6867
  %8 = load %struct.policy_plugin*, %struct.policy_plugin** %7, align 8, !dbg !6867
  %9 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %8, i32 0, i32 4, !dbg !6868
  %10 = load i32 (i32)*, i32 (i32)** %9, align 8, !dbg !6868
  %11 = load i32, i32* %4, align 4, !dbg !6869
  %12 = call i32 %10(i32 %11), !dbg !6865
  ret i32 %12, !dbg !6870
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @iolog_open(%struct.plugin_container* %0, i8** %1, i8** %2, i8** %3, i32 %4, i8** %5, i8** %6) #0 !dbg !6871 {
  %8 = alloca %struct.plugin_container*, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8**, align 8
  %14 = alloca i8**, align 8
  %15 = alloca i32, align 4
  store %struct.plugin_container* %0, %struct.plugin_container** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %8, metadata !6874, metadata !DIExpression()), !dbg !6875
  store i8** %1, i8*** %9, align 8
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !6876, metadata !DIExpression()), !dbg !6877
  store i8** %2, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !6878, metadata !DIExpression()), !dbg !6879
  store i8** %3, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !6880, metadata !DIExpression()), !dbg !6881
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !6882, metadata !DIExpression()), !dbg !6883
  store i8** %5, i8*** %13, align 8
  call void @llvm.dbg.declare(metadata i8*** %13, metadata !6884, metadata !DIExpression()), !dbg !6885
  store i8** %6, i8*** %14, align 8
  call void @llvm.dbg.declare(metadata i8*** %14, metadata !6886, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.declare(metadata i32* %15, metadata !6888, metadata !DIExpression()), !dbg !6889
  %16 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !6890
  %17 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %16, i32 0, i32 4, !dbg !6891
  %18 = bitcast %union.anon.9* %17 to %struct.command_status**, !dbg !6892
  %19 = load %struct.command_status*, %struct.command_status** %18, align 8, !dbg !6892
  %20 = getelementptr inbounds %struct.command_status, %struct.command_status* %19, i32 0, i32 1, !dbg !6893
  %21 = load i32, i32* %20, align 4, !dbg !6893
  switch i32 %21, label %41 [
    i32 65536, label %22
  ], !dbg !6894

22:                                               ; preds = %7
  %23 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !6895
  %24 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %23, i32 0, i32 4, !dbg !6897
  %25 = bitcast %union.anon.9* %24 to %struct.io_plugin_1_0**, !dbg !6898
  %26 = load %struct.io_plugin_1_0*, %struct.io_plugin_1_0** %25, align 8, !dbg !6898
  %27 = getelementptr inbounds %struct.io_plugin_1_0, %struct.io_plugin_1_0* %26, i32 0, i32 2, !dbg !6899
  %28 = load i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i32, i8**, i8**)*, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i32, i8**, i8**)** %27, align 8, !dbg !6899
  %29 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !6900
  %30 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %29, i32 0, i32 4, !dbg !6901
  %31 = bitcast %union.anon.9* %30 to %struct.io_plugin_1_0**, !dbg !6902
  %32 = load %struct.io_plugin_1_0*, %struct.io_plugin_1_0** %31, align 8, !dbg !6902
  %33 = getelementptr inbounds %struct.io_plugin_1_0, %struct.io_plugin_1_0* %32, i32 0, i32 1, !dbg !6903
  %34 = load i32, i32* %33, align 4, !dbg !6903
  %35 = load i8**, i8*** %9, align 8, !dbg !6904
  %36 = load i8**, i8*** %10, align 8, !dbg !6905
  %37 = load i32, i32* %12, align 4, !dbg !6906
  %38 = load i8**, i8*** %13, align 8, !dbg !6907
  %39 = load i8**, i8*** %14, align 8, !dbg !6908
  %40 = call i32 %28(i32 %34, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)* @sudo_conversation, i32 (i32, i8*, ...)* @_sudo_printf, i8** %35, i8** %36, i32 %37, i8** %38, i8** %39), !dbg !6895
  store i32 %40, i32* %15, align 4, !dbg !6909
  br label %55, !dbg !6910

41:                                               ; preds = %7
  %42 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !6911
  %43 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %42, i32 0, i32 4, !dbg !6912
  %44 = bitcast %union.anon.9* %43 to %struct.io_plugin**, !dbg !6913
  %45 = load %struct.io_plugin*, %struct.io_plugin** %44, align 8, !dbg !6913
  %46 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %45, i32 0, i32 2, !dbg !6914
  %47 = load i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**, i32, i8**, i8**)*, i32 (i32, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)*, i32 (i32, i8*, ...)*, i8**, i8**, i8**, i32, i8**, i8**)** %46, align 8, !dbg !6914
  %48 = load i8**, i8*** %9, align 8, !dbg !6915
  %49 = load i8**, i8*** %10, align 8, !dbg !6916
  %50 = load i8**, i8*** %11, align 8, !dbg !6917
  %51 = load i32, i32* %12, align 4, !dbg !6918
  %52 = load i8**, i8*** %13, align 8, !dbg !6919
  %53 = load i8**, i8*** %14, align 8, !dbg !6920
  %54 = call i32 %47(i32 65537, i32 (i32, %struct.sudo_conv_message*, %struct.sudo_conv_reply*)* @sudo_conversation, i32 (i32, i8*, ...)* @_sudo_printf, i8** %48, i8** %49, i8** %50, i32 %51, i8** %52, i8** %53), !dbg !6911
  store i32 %54, i32* %15, align 4, !dbg !6921
  br label %55, !dbg !6922

55:                                               ; preds = %41, %22
  %56 = load i32, i32* %15, align 4, !dbg !6923
  ret i32 %56, !dbg !6924
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @iolog_show_version(%struct.plugin_container* %0, i32 %1) #0 !dbg !6925 {
  %3 = alloca %struct.plugin_container*, align 8
  %4 = alloca i32, align 4
  store %struct.plugin_container* %0, %struct.plugin_container** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %3, metadata !6926, metadata !DIExpression()), !dbg !6927
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6928, metadata !DIExpression()), !dbg !6929
  %5 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !6930
  %6 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %5, i32 0, i32 4, !dbg !6931
  %7 = bitcast %union.anon.9* %6 to %struct.io_plugin**, !dbg !6932
  %8 = load %struct.io_plugin*, %struct.io_plugin** %7, align 8, !dbg !6932
  %9 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %8, i32 0, i32 4, !dbg !6933
  %10 = load i32 (i32)*, i32 (i32)** %9, align 8, !dbg !6933
  %11 = load i32, i32* %4, align 4, !dbg !6934
  %12 = call i32 %10(i32 %11), !dbg !6930
  ret i32 %12, !dbg !6935
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @policy_validate(%struct.plugin_container* %0) #0 !dbg !6936 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.plugin_container*, align 8
  store %struct.plugin_container* %0, %struct.plugin_container** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %3, metadata !6939, metadata !DIExpression()), !dbg !6940
  %4 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !6941
  %5 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %4, i32 0, i32 4, !dbg !6943
  %6 = bitcast %union.anon.9* %5 to %struct.policy_plugin**, !dbg !6944
  %7 = load %struct.policy_plugin*, %struct.policy_plugin** %6, align 8, !dbg !6944
  %8 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %7, i32 0, i32 7, !dbg !6945
  %9 = load i32 ()*, i32 ()** %8, align 8, !dbg !6945
  %10 = icmp eq i32 ()* %9, null, !dbg !6946
  br i1 %10, label %11, label %16, !dbg !6947

11:                                               ; preds = %1
  %12 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.77.165, i64 0, i64 0)) #13, !dbg !6948
  %13 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !6950
  %14 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %13, i32 0, i32 2, !dbg !6951
  %15 = load i8*, i8** %14, align 8, !dbg !6951
  call void (i8*, ...) @warningx(i8* %12, i8* %15), !dbg !6952
  store i32 0, i32* %2, align 4, !dbg !6953
  br label %24, !dbg !6953

16:                                               ; preds = %1
  %17 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !6954
  %18 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %17, i32 0, i32 4, !dbg !6955
  %19 = bitcast %union.anon.9* %18 to %struct.policy_plugin**, !dbg !6956
  %20 = load %struct.policy_plugin*, %struct.policy_plugin** %19, align 8, !dbg !6956
  %21 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %20, i32 0, i32 7, !dbg !6957
  %22 = load i32 ()*, i32 ()** %21, align 8, !dbg !6957
  %23 = call i32 %22(), !dbg !6954
  store i32 %23, i32* %2, align 4, !dbg !6958
  br label %24, !dbg !6958

24:                                               ; preds = %16, %11
  %25 = load i32, i32* %2, align 4, !dbg !6959
  ret i32 %25, !dbg !6959
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @policy_invalidate(%struct.plugin_container* %0, i32 %1) #0 !dbg !6960 {
  %3 = alloca %struct.plugin_container*, align 8
  %4 = alloca i32, align 4
  store %struct.plugin_container* %0, %struct.plugin_container** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %3, metadata !6963, metadata !DIExpression()), !dbg !6964
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6965, metadata !DIExpression()), !dbg !6966
  %5 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !6967
  %6 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %5, i32 0, i32 4, !dbg !6969
  %7 = bitcast %union.anon.9* %6 to %struct.policy_plugin**, !dbg !6970
  %8 = load %struct.policy_plugin*, %struct.policy_plugin** %7, align 8, !dbg !6970
  %9 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %8, i32 0, i32 8, !dbg !6971
  %10 = load void (i32)*, void (i32)** %9, align 8, !dbg !6971
  %11 = icmp eq void (i32)* %10, null, !dbg !6972
  br i1 %11, label %12, label %17, !dbg !6973

12:                                               ; preds = %2
  %13 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.78.164, i64 0, i64 0)) #13, !dbg !6974
  %14 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !6976
  %15 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %14, i32 0, i32 2, !dbg !6977
  %16 = load i8*, i8** %15, align 8, !dbg !6977
  call void (i32, i8*, ...) @errorx(i32 1, i8* %13, i8* %16) #16, !dbg !6978
  unreachable, !dbg !6978

17:                                               ; preds = %2
  %18 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !6979
  %19 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %18, i32 0, i32 4, !dbg !6980
  %20 = bitcast %union.anon.9* %19 to %struct.policy_plugin**, !dbg !6981
  %21 = load %struct.policy_plugin*, %struct.policy_plugin** %20, align 8, !dbg !6981
  %22 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %21, i32 0, i32 8, !dbg !6982
  %23 = load void (i32)*, void (i32)** %22, align 8, !dbg !6982
  %24 = load i32, i32* %4, align 4, !dbg !6983
  call void %23(i32 %24), !dbg !6979
  ret void, !dbg !6984
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @policy_list(%struct.plugin_container* %0, i32 %1, i8** %2, i32 %3, i8* %4) #0 !dbg !6985 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.plugin_container*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  store %struct.plugin_container* %0, %struct.plugin_container** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %7, metadata !6988, metadata !DIExpression()), !dbg !6989
  store i32 %1, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6990, metadata !DIExpression()), !dbg !6991
  store i8** %2, i8*** %9, align 8
  call void @llvm.dbg.declare(metadata i8*** %9, metadata !6992, metadata !DIExpression()), !dbg !6993
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6994, metadata !DIExpression()), !dbg !6995
  store i8* %4, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !6996, metadata !DIExpression()), !dbg !6997
  %12 = load %struct.plugin_container*, %struct.plugin_container** %7, align 8, !dbg !6998
  %13 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %12, i32 0, i32 4, !dbg !7000
  %14 = bitcast %union.anon.9* %13 to %struct.policy_plugin**, !dbg !7001
  %15 = load %struct.policy_plugin*, %struct.policy_plugin** %14, align 8, !dbg !7001
  %16 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %15, i32 0, i32 6, !dbg !7002
  %17 = load i32 (i32, i8**, i32, i8*)*, i32 (i32, i8**, i32, i8*)** %16, align 8, !dbg !7002
  %18 = icmp eq i32 (i32, i8**, i32, i8*)* %17, null, !dbg !7003
  br i1 %18, label %19, label %24, !dbg !7004

19:                                               ; preds = %5
  %20 = call i8* @gettext(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.76.163, i64 0, i64 0)) #13, !dbg !7005
  %21 = load %struct.plugin_container*, %struct.plugin_container** %7, align 8, !dbg !7007
  %22 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %21, i32 0, i32 2, !dbg !7008
  %23 = load i8*, i8** %22, align 8, !dbg !7008
  call void (i8*, ...) @warningx(i8* %20, i8* %23), !dbg !7009
  store i32 0, i32* %6, align 4, !dbg !7010
  br label %36, !dbg !7010

24:                                               ; preds = %5
  %25 = load %struct.plugin_container*, %struct.plugin_container** %7, align 8, !dbg !7011
  %26 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %25, i32 0, i32 4, !dbg !7012
  %27 = bitcast %union.anon.9* %26 to %struct.policy_plugin**, !dbg !7013
  %28 = load %struct.policy_plugin*, %struct.policy_plugin** %27, align 8, !dbg !7013
  %29 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %28, i32 0, i32 6, !dbg !7014
  %30 = load i32 (i32, i8**, i32, i8*)*, i32 (i32, i8**, i32, i8*)** %29, align 8, !dbg !7014
  %31 = load i32, i32* %8, align 4, !dbg !7015
  %32 = load i8**, i8*** %9, align 8, !dbg !7016
  %33 = load i32, i32* %10, align 4, !dbg !7017
  %34 = load i8*, i8** %11, align 8, !dbg !7018
  %35 = call i32 %30(i32 %31, i8** %32, i32 %33, i8* %34), !dbg !7011
  store i32 %35, i32* %6, align 4, !dbg !7019
  br label %36, !dbg !7019

36:                                               ; preds = %24, %19
  %37 = load i32, i32* %6, align 4, !dbg !7020
  ret i32 %37, !dbg !7020
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @policy_check(%struct.plugin_container* %0, i32 %1, i8** %2, i8** %3, i8*** %4, i8*** %5, i8*** %6) #0 !dbg !7021 {
  %8 = alloca %struct.plugin_container*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i8***, align 8
  %13 = alloca i8***, align 8
  %14 = alloca i8***, align 8
  store %struct.plugin_container* %0, %struct.plugin_container** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %8, metadata !7024, metadata !DIExpression()), !dbg !7025
  store i32 %1, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !7026, metadata !DIExpression()), !dbg !7027
  store i8** %2, i8*** %10, align 8
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !7028, metadata !DIExpression()), !dbg !7029
  store i8** %3, i8*** %11, align 8
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !7030, metadata !DIExpression()), !dbg !7031
  store i8*** %4, i8**** %12, align 8
  call void @llvm.dbg.declare(metadata i8**** %12, metadata !7032, metadata !DIExpression()), !dbg !7033
  store i8*** %5, i8**** %13, align 8
  call void @llvm.dbg.declare(metadata i8**** %13, metadata !7034, metadata !DIExpression()), !dbg !7035
  store i8*** %6, i8**** %14, align 8
  call void @llvm.dbg.declare(metadata i8**** %14, metadata !7036, metadata !DIExpression()), !dbg !7037
  %15 = load %struct.plugin_container*, %struct.plugin_container** %8, align 8, !dbg !7038
  %16 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %15, i32 0, i32 4, !dbg !7039
  %17 = bitcast %union.anon.9* %16 to %struct.policy_plugin**, !dbg !7040
  %18 = load %struct.policy_plugin*, %struct.policy_plugin** %17, align 8, !dbg !7040
  %19 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %18, i32 0, i32 5, !dbg !7041
  %20 = load i32 (i32, i8**, i8**, i8***, i8***, i8***)*, i32 (i32, i8**, i8**, i8***, i8***, i8***)** %19, align 8, !dbg !7041
  %21 = load i32, i32* %9, align 4, !dbg !7042
  %22 = load i8**, i8*** %10, align 8, !dbg !7043
  %23 = load i8**, i8*** %11, align 8, !dbg !7044
  %24 = load i8***, i8**** %12, align 8, !dbg !7045
  %25 = load i8***, i8**** %13, align 8, !dbg !7046
  %26 = load i8***, i8**** %14, align 8, !dbg !7047
  %27 = call i32 %20(i32 %21, i8** %22, i8** %23, i8*** %24, i8*** %25, i8*** %26), !dbg !7038
  ret i32 %27, !dbg !7048
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @command_info_to_details(i8** %0, %struct.command_details* %1) #0 !dbg !7049 {
  %3 = alloca i8**, align 8
  %4 = alloca %struct.command_details*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store i8** %0, i8*** %3, align 8
  call void @llvm.dbg.declare(metadata i8*** %3, metadata !7053, metadata !DIExpression()), !dbg !7054
  store %struct.command_details* %1, %struct.command_details** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %4, metadata !7055, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7057, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.declare(metadata i64* %6, metadata !7059, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.declare(metadata i64* %7, metadata !7061, metadata !DIExpression()), !dbg !7062
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7063, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7065, metadata !DIExpression()), !dbg !7066
  %11 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7067
  %12 = bitcast %struct.command_details* %11 to i8*, !dbg !7068
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 120, i1 false), !dbg !7068
  %13 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7069
  %14 = getelementptr inbounds %struct.command_details, %struct.command_details* %13, i32 0, i32 8, !dbg !7070
  store i32 -1, i32* %14, align 8, !dbg !7071
  store i32 0, i32* %5, align 4, !dbg !7072
  br label %15, !dbg !7074

15:                                               ; preds = %912, %2
  %16 = load i8**, i8*** %3, align 8, !dbg !7075
  %17 = load i32, i32* %5, align 4, !dbg !7077
  %18 = sext i32 %17 to i64, !dbg !7075
  %19 = getelementptr inbounds i8*, i8** %16, i64 %18, !dbg !7075
  %20 = load i8*, i8** %19, align 8, !dbg !7075
  %21 = icmp ne i8* %20, null, !dbg !7078
  br i1 %21, label %22, label %915, !dbg !7079

22:                                               ; preds = %15
  %23 = load i8**, i8*** %3, align 8, !dbg !7080
  %24 = load i32, i32* %5, align 4, !dbg !7082
  %25 = sext i32 %24 to i64, !dbg !7080
  %26 = getelementptr inbounds i8*, i8** %23, i64 %25, !dbg !7080
  %27 = load i8*, i8** %26, align 8, !dbg !7080
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.51.140, i64 0, i64 0), i8* %27), !dbg !7083
  %28 = load i8**, i8*** %3, align 8, !dbg !7084
  %29 = load i32, i32* %5, align 4, !dbg !7085
  %30 = sext i32 %29 to i64, !dbg !7084
  %31 = getelementptr inbounds i8*, i8** %28, i64 %30, !dbg !7084
  %32 = load i8*, i8** %31, align 8, !dbg !7084
  %33 = getelementptr inbounds i8, i8* %32, i64 0, !dbg !7084
  %34 = load i8, i8* %33, align 1, !dbg !7084
  %35 = sext i8 %34 to i32, !dbg !7084
  switch i32 %35, label %911 [
    i32 99, label %36
    i32 108, label %177
    i32 110, label %206
    i32 112, label %307
    i32 114, label %332
    i32 115, label %641
    i32 116, label %746
    i32 117, label %807
  ], !dbg !7086

36:                                               ; preds = %22
  %37 = load i8**, i8*** %3, align 8, !dbg !7087
  %38 = load i32, i32* %5, align 4, !dbg !7087
  %39 = sext i32 %38 to i64, !dbg !7087
  %40 = getelementptr inbounds i8*, i8** %37, i64 %39, !dbg !7087
  %41 = load i8*, i8** %40, align 8, !dbg !7087
  %42 = call i32 @strncmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52.141, i64 0, i64 0), i8* %41, i64 7) #12, !dbg !7087
  %43 = icmp eq i32 %42, 0, !dbg !7087
  br i1 %43, label %44, label %64, !dbg !7087

44:                                               ; preds = %36
  %45 = load i8**, i8*** %3, align 8, !dbg !7087
  %46 = load i32, i32* %5, align 4, !dbg !7087
  %47 = sext i32 %46 to i64, !dbg !7087
  %48 = getelementptr inbounds i8*, i8** %45, i64 %47, !dbg !7087
  %49 = load i8*, i8** %48, align 8, !dbg !7087
  %50 = getelementptr inbounds i8, i8* %49, i64 7, !dbg !7087
  %51 = load i8, i8* %50, align 1, !dbg !7087
  %52 = sext i8 %51 to i32, !dbg !7087
  %53 = icmp ne i32 %52, 0, !dbg !7087
  br i1 %53, label %54, label %64, !dbg !7090

54:                                               ; preds = %44
  %55 = load i8**, i8*** %3, align 8, !dbg !7091
  %56 = load i32, i32* %5, align 4, !dbg !7091
  %57 = sext i32 %56 to i64, !dbg !7091
  %58 = getelementptr inbounds i8*, i8** %55, i64 %57, !dbg !7091
  %59 = load i8*, i8** %58, align 8, !dbg !7091
  %60 = getelementptr inbounds i8, i8* %59, i64 8, !dbg !7091
  %61 = getelementptr inbounds i8, i8* %60, i64 -1, !dbg !7091
  %62 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7091
  %63 = getelementptr inbounds %struct.command_details, %struct.command_details* %62, i32 0, i32 14, !dbg !7091
  store i8* %61, i8** %63, align 8, !dbg !7091
  br label %911, !dbg !7091

64:                                               ; preds = %44, %36
  %65 = load i8**, i8*** %3, align 8, !dbg !7093
  %66 = load i32, i32* %5, align 4, !dbg !7093
  %67 = sext i32 %66 to i64, !dbg !7093
  %68 = getelementptr inbounds i8*, i8** %65, i64 %67, !dbg !7093
  %69 = load i8*, i8** %68, align 8, !dbg !7093
  %70 = call i32 @strncmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53.142, i64 0, i64 0), i8* %69, i64 8) #12, !dbg !7093
  %71 = icmp eq i32 %70, 0, !dbg !7093
  br i1 %71, label %72, label %92, !dbg !7093

72:                                               ; preds = %64
  %73 = load i8**, i8*** %3, align 8, !dbg !7093
  %74 = load i32, i32* %5, align 4, !dbg !7093
  %75 = sext i32 %74 to i64, !dbg !7093
  %76 = getelementptr inbounds i8*, i8** %73, i64 %75, !dbg !7093
  %77 = load i8*, i8** %76, align 8, !dbg !7093
  %78 = getelementptr inbounds i8, i8* %77, i64 8, !dbg !7093
  %79 = load i8, i8* %78, align 1, !dbg !7093
  %80 = sext i8 %79 to i32, !dbg !7093
  %81 = icmp ne i32 %80, 0, !dbg !7093
  br i1 %81, label %82, label %92, !dbg !7095

82:                                               ; preds = %72
  %83 = load i8**, i8*** %3, align 8, !dbg !7096
  %84 = load i32, i32* %5, align 4, !dbg !7096
  %85 = sext i32 %84 to i64, !dbg !7096
  %86 = getelementptr inbounds i8*, i8** %83, i64 %85, !dbg !7096
  %87 = load i8*, i8** %86, align 8, !dbg !7096
  %88 = getelementptr inbounds i8, i8* %87, i64 9, !dbg !7096
  %89 = getelementptr inbounds i8, i8* %88, i64 -1, !dbg !7096
  %90 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7096
  %91 = getelementptr inbounds %struct.command_details, %struct.command_details* %90, i32 0, i32 11, !dbg !7096
  store i8* %89, i8** %91, align 8, !dbg !7096
  br label %911, !dbg !7096

92:                                               ; preds = %72, %64
  %93 = load i8**, i8*** %3, align 8, !dbg !7098
  %94 = load i32, i32* %5, align 4, !dbg !7098
  %95 = sext i32 %94 to i64, !dbg !7098
  %96 = getelementptr inbounds i8*, i8** %93, i64 %95, !dbg !7098
  %97 = load i8*, i8** %96, align 8, !dbg !7098
  %98 = call i32 @strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54.143, i64 0, i64 0), i8* %97, i64 4) #12, !dbg !7098
  %99 = icmp eq i32 %98, 0, !dbg !7098
  br i1 %99, label %100, label %120, !dbg !7098

100:                                              ; preds = %92
  %101 = load i8**, i8*** %3, align 8, !dbg !7098
  %102 = load i32, i32* %5, align 4, !dbg !7098
  %103 = sext i32 %102 to i64, !dbg !7098
  %104 = getelementptr inbounds i8*, i8** %101, i64 %103, !dbg !7098
  %105 = load i8*, i8** %104, align 8, !dbg !7098
  %106 = getelementptr inbounds i8, i8* %105, i64 4, !dbg !7098
  %107 = load i8, i8* %106, align 1, !dbg !7098
  %108 = sext i8 %107 to i32, !dbg !7098
  %109 = icmp ne i32 %108, 0, !dbg !7098
  br i1 %109, label %110, label %120, !dbg !7100

110:                                              ; preds = %100
  %111 = load i8**, i8*** %3, align 8, !dbg !7101
  %112 = load i32, i32* %5, align 4, !dbg !7101
  %113 = sext i32 %112 to i64, !dbg !7101
  %114 = getelementptr inbounds i8*, i8** %111, i64 %113, !dbg !7101
  %115 = load i8*, i8** %114, align 8, !dbg !7101
  %116 = getelementptr inbounds i8, i8* %115, i64 5, !dbg !7101
  %117 = getelementptr inbounds i8, i8* %116, i64 -1, !dbg !7101
  %118 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7101
  %119 = getelementptr inbounds %struct.command_details, %struct.command_details* %118, i32 0, i32 12, !dbg !7101
  store i8* %117, i8** %119, align 8, !dbg !7101
  br label %911, !dbg !7101

120:                                              ; preds = %100, %92
  %121 = load i8**, i8*** %3, align 8, !dbg !7103
  %122 = load i32, i32* %5, align 4, !dbg !7105
  %123 = sext i32 %122 to i64, !dbg !7103
  %124 = getelementptr inbounds i8*, i8** %121, i64 %123, !dbg !7103
  %125 = load i8*, i8** %124, align 8, !dbg !7103
  %126 = call i32 @strncmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55.144, i64 0, i64 0), i8* %125, i64 10) #12, !dbg !7106
  %127 = icmp eq i32 %126, 0, !dbg !7107
  br i1 %127, label %128, label %176, !dbg !7108

128:                                              ; preds = %120
  %129 = load i8**, i8*** %3, align 8, !dbg !7109
  %130 = load i32, i32* %5, align 4, !dbg !7111
  %131 = sext i32 %130 to i64, !dbg !7109
  %132 = getelementptr inbounds i8*, i8** %129, i64 %131, !dbg !7109
  %133 = load i8*, i8** %132, align 8, !dbg !7109
  %134 = getelementptr inbounds i8, i8* %133, i64 11, !dbg !7112
  %135 = getelementptr inbounds i8, i8* %134, i64 -1, !dbg !7113
  store i8* %135, i8** %8, align 8, !dbg !7114
  %136 = load i8*, i8** %8, align 8, !dbg !7115
  %137 = load i8, i8* %136, align 1, !dbg !7117
  %138 = sext i8 %137 to i32, !dbg !7117
  %139 = icmp eq i32 %138, 0, !dbg !7118
  br i1 %139, label %140, label %141, !dbg !7119

140:                                              ; preds = %128
  br label %911, !dbg !7120

141:                                              ; preds = %128
  %142 = call i32* @__errno_location() #14, !dbg !7121
  store i32 0, i32* %142, align 4, !dbg !7122
  %143 = load i8*, i8** %8, align 8, !dbg !7123
  %144 = call i64 @strtol(i8* %143, i8** %9, i32 0) #13, !dbg !7124
  store i64 %144, i64* %6, align 8, !dbg !7125
  %145 = load i8*, i8** %8, align 8, !dbg !7126
  %146 = load i8, i8* %145, align 1, !dbg !7128
  %147 = sext i8 %146 to i32, !dbg !7128
  %148 = icmp ne i32 %147, 0, !dbg !7129
  br i1 %148, label %149, label %175, !dbg !7130

149:                                              ; preds = %141
  %150 = load i8*, i8** %9, align 8, !dbg !7131
  %151 = load i8, i8* %150, align 1, !dbg !7132
  %152 = sext i8 %151 to i32, !dbg !7132
  %153 = icmp eq i32 %152, 0, !dbg !7133
  br i1 %153, label %154, label %175, !dbg !7134

154:                                              ; preds = %149
  %155 = call i32* @__errno_location() #14, !dbg !7135
  %156 = load i32, i32* %155, align 4, !dbg !7135
  %157 = icmp eq i32 %156, 34, !dbg !7136
  br i1 %157, label %158, label %164, !dbg !7137

158:                                              ; preds = %154
  %159 = load i64, i64* %6, align 8, !dbg !7138
  %160 = icmp eq i64 %159, 9223372036854775807, !dbg !7139
  br i1 %160, label %175, label %161, !dbg !7140

161:                                              ; preds = %158
  %162 = load i64, i64* %6, align 8, !dbg !7141
  %163 = icmp eq i64 %162, -9223372036854775808, !dbg !7142
  br i1 %163, label %175, label %164, !dbg !7143

164:                                              ; preds = %161, %154
  %165 = load i64, i64* %6, align 8, !dbg !7144
  %166 = icmp slt i64 %165, 2147483647, !dbg !7145
  br i1 %166, label %167, label %175, !dbg !7146

167:                                              ; preds = %164
  %168 = load i64, i64* %6, align 8, !dbg !7147
  %169 = icmp sgt i64 %168, -2147483648, !dbg !7148
  br i1 %169, label %170, label %175, !dbg !7149

170:                                              ; preds = %167
  %171 = load i64, i64* %6, align 8, !dbg !7150
  %172 = trunc i64 %171 to i32, !dbg !7152
  %173 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7153
  %174 = getelementptr inbounds %struct.command_details, %struct.command_details* %173, i32 0, i32 8, !dbg !7154
  store i32 %172, i32* %174, align 8, !dbg !7155
  br label %175, !dbg !7156

175:                                              ; preds = %170, %167, %164, %161, %158, %149, %141
  br label %911, !dbg !7157

176:                                              ; preds = %120
  br label %911, !dbg !7158

177:                                              ; preds = %22
  %178 = load i8**, i8*** %3, align 8, !dbg !7159
  %179 = load i32, i32* %5, align 4, !dbg !7159
  %180 = sext i32 %179 to i64, !dbg !7159
  %181 = getelementptr inbounds i8*, i8** %178, i64 %180, !dbg !7159
  %182 = load i8*, i8** %181, align 8, !dbg !7159
  %183 = call i32 @strncmp(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56.145, i64 0, i64 0), i8* %182, i64 12) #12, !dbg !7159
  %184 = icmp eq i32 %183, 0, !dbg !7159
  br i1 %184, label %185, label %205, !dbg !7159

185:                                              ; preds = %177
  %186 = load i8**, i8*** %3, align 8, !dbg !7159
  %187 = load i32, i32* %5, align 4, !dbg !7159
  %188 = sext i32 %187 to i64, !dbg !7159
  %189 = getelementptr inbounds i8*, i8** %186, i64 %188, !dbg !7159
  %190 = load i8*, i8** %189, align 8, !dbg !7159
  %191 = getelementptr inbounds i8, i8* %190, i64 12, !dbg !7159
  %192 = load i8, i8* %191, align 1, !dbg !7159
  %193 = sext i8 %192 to i32, !dbg !7159
  %194 = icmp ne i32 %193, 0, !dbg !7159
  br i1 %194, label %195, label %205, !dbg !7161

195:                                              ; preds = %185
  %196 = load i8**, i8*** %3, align 8, !dbg !7162
  %197 = load i32, i32* %5, align 4, !dbg !7162
  %198 = sext i32 %197 to i64, !dbg !7162
  %199 = getelementptr inbounds i8*, i8** %196, i64 %198, !dbg !7162
  %200 = load i8*, i8** %199, align 8, !dbg !7162
  %201 = getelementptr inbounds i8, i8* %200, i64 13, !dbg !7162
  %202 = getelementptr inbounds i8, i8* %201, i64 -1, !dbg !7162
  %203 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7162
  %204 = getelementptr inbounds %struct.command_details, %struct.command_details* %203, i32 0, i32 13, !dbg !7162
  store i8* %202, i8** %204, align 8, !dbg !7162
  br label %911, !dbg !7162

205:                                              ; preds = %185, %177
  br label %911, !dbg !7164

206:                                              ; preds = %22
  %207 = load i8**, i8*** %3, align 8, !dbg !7165
  %208 = load i32, i32* %5, align 4, !dbg !7167
  %209 = sext i32 %208 to i64, !dbg !7165
  %210 = getelementptr inbounds i8*, i8** %207, i64 %209, !dbg !7165
  %211 = load i8*, i8** %210, align 8, !dbg !7165
  %212 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57.146, i64 0, i64 0), i8* %211, i64 5) #12, !dbg !7168
  %213 = icmp eq i32 %212, 0, !dbg !7169
  br i1 %213, label %214, label %266, !dbg !7170

214:                                              ; preds = %206
  %215 = load i8**, i8*** %3, align 8, !dbg !7171
  %216 = load i32, i32* %5, align 4, !dbg !7173
  %217 = sext i32 %216 to i64, !dbg !7171
  %218 = getelementptr inbounds i8*, i8** %215, i64 %217, !dbg !7171
  %219 = load i8*, i8** %218, align 8, !dbg !7171
  %220 = getelementptr inbounds i8, i8* %219, i64 6, !dbg !7174
  %221 = getelementptr inbounds i8, i8* %220, i64 -1, !dbg !7175
  store i8* %221, i8** %8, align 8, !dbg !7176
  %222 = load i8*, i8** %8, align 8, !dbg !7177
  %223 = load i8, i8* %222, align 1, !dbg !7179
  %224 = sext i8 %223 to i32, !dbg !7179
  %225 = icmp eq i32 %224, 0, !dbg !7180
  br i1 %225, label %226, label %227, !dbg !7181

226:                                              ; preds = %214
  br label %911, !dbg !7182

227:                                              ; preds = %214
  %228 = call i32* @__errno_location() #14, !dbg !7183
  store i32 0, i32* %228, align 4, !dbg !7184
  %229 = load i8*, i8** %8, align 8, !dbg !7185
  %230 = call i64 @strtol(i8* %229, i8** %9, i32 0) #13, !dbg !7186
  store i64 %230, i64* %6, align 8, !dbg !7187
  %231 = load i8*, i8** %8, align 8, !dbg !7188
  %232 = load i8, i8* %231, align 1, !dbg !7190
  %233 = sext i8 %232 to i32, !dbg !7190
  %234 = icmp ne i32 %233, 0, !dbg !7191
  br i1 %234, label %235, label %265, !dbg !7192

235:                                              ; preds = %227
  %236 = load i8*, i8** %9, align 8, !dbg !7193
  %237 = load i8, i8* %236, align 1, !dbg !7194
  %238 = sext i8 %237 to i32, !dbg !7194
  %239 = icmp eq i32 %238, 0, !dbg !7195
  br i1 %239, label %240, label %265, !dbg !7196

240:                                              ; preds = %235
  %241 = call i32* @__errno_location() #14, !dbg !7197
  %242 = load i32, i32* %241, align 4, !dbg !7197
  %243 = icmp eq i32 %242, 34, !dbg !7198
  br i1 %243, label %244, label %250, !dbg !7199

244:                                              ; preds = %240
  %245 = load i64, i64* %6, align 8, !dbg !7200
  %246 = icmp eq i64 %245, 9223372036854775807, !dbg !7201
  br i1 %246, label %265, label %247, !dbg !7202

247:                                              ; preds = %244
  %248 = load i64, i64* %6, align 8, !dbg !7203
  %249 = icmp eq i64 %248, -9223372036854775808, !dbg !7204
  br i1 %249, label %265, label %250, !dbg !7205

250:                                              ; preds = %247, %240
  %251 = load i64, i64* %6, align 8, !dbg !7206
  %252 = icmp slt i64 %251, 2147483647, !dbg !7207
  br i1 %252, label %253, label %265, !dbg !7208

253:                                              ; preds = %250
  %254 = load i64, i64* %6, align 8, !dbg !7209
  %255 = icmp sgt i64 %254, -2147483648, !dbg !7210
  br i1 %255, label %256, label %265, !dbg !7211

256:                                              ; preds = %253
  %257 = load i64, i64* %6, align 8, !dbg !7212
  %258 = trunc i64 %257 to i32, !dbg !7214
  %259 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7215
  %260 = getelementptr inbounds %struct.command_details, %struct.command_details* %259, i32 0, i32 5, !dbg !7216
  store i32 %258, i32* %260, align 4, !dbg !7217
  %261 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7218
  %262 = getelementptr inbounds %struct.command_details, %struct.command_details* %261, i32 0, i32 9, !dbg !7218
  %263 = load i32, i32* %262, align 4, !dbg !7218
  %264 = or i32 %263, 64, !dbg !7218
  store i32 %264, i32* %262, align 4, !dbg !7218
  br label %265, !dbg !7219

265:                                              ; preds = %256, %253, %250, %247, %244, %235, %227
  br label %911, !dbg !7220

266:                                              ; preds = %206
  %267 = load i8**, i8*** %3, align 8, !dbg !7221
  %268 = load i32, i32* %5, align 4, !dbg !7223
  %269 = sext i32 %268 to i64, !dbg !7221
  %270 = getelementptr inbounds i8*, i8** %267, i64 %269, !dbg !7221
  %271 = load i8*, i8** %270, align 8, !dbg !7221
  %272 = call i32 @strncmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58.147, i64 0, i64 0), i8* %271, i64 7) #12, !dbg !7224
  %273 = icmp eq i32 %272, 0, !dbg !7225
  br i1 %273, label %274, label %290, !dbg !7226

274:                                              ; preds = %266
  %275 = load i8**, i8*** %3, align 8, !dbg !7227
  %276 = load i32, i32* %5, align 4, !dbg !7230
  %277 = sext i32 %276 to i64, !dbg !7227
  %278 = getelementptr inbounds i8*, i8** %275, i64 %277, !dbg !7227
  %279 = load i8*, i8** %278, align 8, !dbg !7227
  %280 = getelementptr inbounds i8, i8* %279, i64 8, !dbg !7231
  %281 = getelementptr inbounds i8, i8* %280, i64 -1, !dbg !7232
  %282 = call i32 @atobool(i8* %281), !dbg !7233
  %283 = icmp eq i32 %282, 1, !dbg !7234
  br i1 %283, label %284, label %289, !dbg !7235

284:                                              ; preds = %274
  %285 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7236
  %286 = getelementptr inbounds %struct.command_details, %struct.command_details* %285, i32 0, i32 9, !dbg !7236
  %287 = load i32, i32* %286, align 4, !dbg !7236
  %288 = or i32 %287, 32, !dbg !7236
  store i32 %288, i32* %286, align 4, !dbg !7236
  br label %289, !dbg !7236

289:                                              ; preds = %284, %274
  br label %911, !dbg !7237

290:                                              ; preds = %266
  %291 = load i8**, i8*** %3, align 8, !dbg !7238
  %292 = load i32, i32* %5, align 4, !dbg !7240
  %293 = sext i32 %292 to i64, !dbg !7238
  %294 = getelementptr inbounds i8*, i8** %291, i64 %293, !dbg !7238
  %295 = load i8*, i8** %294, align 8, !dbg !7238
  %296 = call i32 @strncmp(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59.148, i64 0, i64 0), i8* %295, i64 12) #12, !dbg !7241
  %297 = icmp eq i32 %296, 0, !dbg !7242
  br i1 %297, label %298, label %306, !dbg !7243

298:                                              ; preds = %290
  %299 = load i8**, i8*** %3, align 8, !dbg !7244
  %300 = load i32, i32* %5, align 4, !dbg !7246
  %301 = sext i32 %300 to i64, !dbg !7244
  %302 = getelementptr inbounds i8*, i8** %299, i64 %301, !dbg !7244
  %303 = load i8*, i8** %302, align 8, !dbg !7244
  %304 = getelementptr inbounds i8, i8* %303, i64 13, !dbg !7247
  %305 = getelementptr inbounds i8, i8* %304, i64 -1, !dbg !7248
  store i8* %305, i8** @noexec_path, align 8, !dbg !7249
  br label %911, !dbg !7250

306:                                              ; preds = %290
  br label %911, !dbg !7251

307:                                              ; preds = %22
  %308 = load i8**, i8*** %3, align 8, !dbg !7252
  %309 = load i32, i32* %5, align 4, !dbg !7254
  %310 = sext i32 %309 to i64, !dbg !7252
  %311 = getelementptr inbounds i8*, i8** %308, i64 %310, !dbg !7252
  %312 = load i8*, i8** %311, align 8, !dbg !7252
  %313 = call i32 @strncmp(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.60.149, i64 0, i64 0), i8* %312, i64 16) #12, !dbg !7255
  %314 = icmp eq i32 %313, 0, !dbg !7256
  br i1 %314, label %315, label %331, !dbg !7257

315:                                              ; preds = %307
  %316 = load i8**, i8*** %3, align 8, !dbg !7258
  %317 = load i32, i32* %5, align 4, !dbg !7261
  %318 = sext i32 %317 to i64, !dbg !7258
  %319 = getelementptr inbounds i8*, i8** %316, i64 %318, !dbg !7258
  %320 = load i8*, i8** %319, align 8, !dbg !7258
  %321 = getelementptr inbounds i8, i8* %320, i64 17, !dbg !7262
  %322 = getelementptr inbounds i8, i8* %321, i64 -1, !dbg !7263
  %323 = call i32 @atobool(i8* %322), !dbg !7264
  %324 = icmp eq i32 %323, 1, !dbg !7265
  br i1 %324, label %325, label %330, !dbg !7266

325:                                              ; preds = %315
  %326 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7267
  %327 = getelementptr inbounds %struct.command_details, %struct.command_details* %326, i32 0, i32 9, !dbg !7267
  %328 = load i32, i32* %327, align 4, !dbg !7267
  %329 = or i32 %328, 16, !dbg !7267
  store i32 %329, i32* %327, align 4, !dbg !7267
  br label %330, !dbg !7267

330:                                              ; preds = %325, %315
  br label %911, !dbg !7268

331:                                              ; preds = %307
  br label %911, !dbg !7269

332:                                              ; preds = %22
  %333 = load i8**, i8*** %3, align 8, !dbg !7270
  %334 = load i32, i32* %5, align 4, !dbg !7272
  %335 = sext i32 %334 to i64, !dbg !7270
  %336 = getelementptr inbounds i8*, i8** %333, i64 %335, !dbg !7270
  %337 = load i8*, i8** %336, align 8, !dbg !7270
  %338 = call i32 @strncmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61.150, i64 0, i64 0), i8* %337, i64 11) #12, !dbg !7273
  %339 = icmp eq i32 %338, 0, !dbg !7274
  br i1 %339, label %340, label %383, !dbg !7275

340:                                              ; preds = %332
  %341 = load i8**, i8*** %3, align 8, !dbg !7276
  %342 = load i32, i32* %5, align 4, !dbg !7278
  %343 = sext i32 %342 to i64, !dbg !7276
  %344 = getelementptr inbounds i8*, i8** %341, i64 %343, !dbg !7276
  %345 = load i8*, i8** %344, align 8, !dbg !7276
  %346 = getelementptr inbounds i8, i8* %345, i64 12, !dbg !7279
  %347 = getelementptr inbounds i8, i8* %346, i64 -1, !dbg !7280
  store i8* %347, i8** %8, align 8, !dbg !7281
  %348 = load i8*, i8** %8, align 8, !dbg !7282
  %349 = load i8, i8* %348, align 1, !dbg !7284
  %350 = sext i8 %349 to i32, !dbg !7284
  %351 = icmp eq i32 %350, 0, !dbg !7285
  br i1 %351, label %352, label %353, !dbg !7286

352:                                              ; preds = %340
  br label %911, !dbg !7287

353:                                              ; preds = %340
  %354 = call i32* @__errno_location() #14, !dbg !7288
  store i32 0, i32* %354, align 4, !dbg !7289
  %355 = load i8*, i8** %8, align 8, !dbg !7290
  %356 = call i64 @strtoul(i8* %355, i8** %9, i32 0) #13, !dbg !7291
  store i64 %356, i64* %7, align 8, !dbg !7292
  %357 = load i8*, i8** %8, align 8, !dbg !7293
  %358 = load i8, i8* %357, align 1, !dbg !7295
  %359 = sext i8 %358 to i32, !dbg !7295
  %360 = icmp ne i32 %359, 0, !dbg !7296
  br i1 %360, label %361, label %382, !dbg !7297

361:                                              ; preds = %353
  %362 = load i8*, i8** %9, align 8, !dbg !7298
  %363 = load i8, i8* %362, align 1, !dbg !7299
  %364 = sext i8 %363 to i32, !dbg !7299
  %365 = icmp eq i32 %364, 0, !dbg !7300
  br i1 %365, label %366, label %382, !dbg !7301

366:                                              ; preds = %361
  %367 = call i32* @__errno_location() #14, !dbg !7302
  %368 = load i32, i32* %367, align 4, !dbg !7302
  %369 = icmp ne i32 %368, 34, !dbg !7303
  br i1 %369, label %373, label %370, !dbg !7304

370:                                              ; preds = %366
  %371 = load i64, i64* %7, align 8, !dbg !7305
  %372 = icmp ne i64 %371, -1, !dbg !7306
  br i1 %372, label %373, label %382, !dbg !7307

373:                                              ; preds = %370, %366
  %374 = load i64, i64* %7, align 8, !dbg !7308
  %375 = trunc i64 %374 to i32, !dbg !7310
  %376 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7311
  %377 = getelementptr inbounds %struct.command_details, %struct.command_details* %376, i32 0, i32 3, !dbg !7312
  store i32 %375, i32* %377, align 4, !dbg !7313
  %378 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7314
  %379 = getelementptr inbounds %struct.command_details, %struct.command_details* %378, i32 0, i32 9, !dbg !7314
  %380 = load i32, i32* %379, align 4, !dbg !7314
  %381 = or i32 %380, 8, !dbg !7314
  store i32 %381, i32* %379, align 4, !dbg !7314
  br label %382, !dbg !7315

382:                                              ; preds = %373, %370, %361, %353
  br label %911, !dbg !7316

383:                                              ; preds = %332
  %384 = load i8**, i8*** %3, align 8, !dbg !7317
  %385 = load i32, i32* %5, align 4, !dbg !7319
  %386 = sext i32 %385 to i64, !dbg !7317
  %387 = getelementptr inbounds i8*, i8** %384, i64 %386, !dbg !7317
  %388 = load i8*, i8** %387, align 8, !dbg !7317
  %389 = call i32 @strncmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.62.151, i64 0, i64 0), i8* %388, i64 11) #12, !dbg !7320
  %390 = icmp eq i32 %389, 0, !dbg !7321
  br i1 %390, label %391, label %434, !dbg !7322

391:                                              ; preds = %383
  %392 = load i8**, i8*** %3, align 8, !dbg !7323
  %393 = load i32, i32* %5, align 4, !dbg !7325
  %394 = sext i32 %393 to i64, !dbg !7323
  %395 = getelementptr inbounds i8*, i8** %392, i64 %394, !dbg !7323
  %396 = load i8*, i8** %395, align 8, !dbg !7323
  %397 = getelementptr inbounds i8, i8* %396, i64 12, !dbg !7326
  %398 = getelementptr inbounds i8, i8* %397, i64 -1, !dbg !7327
  store i8* %398, i8** %8, align 8, !dbg !7328
  %399 = load i8*, i8** %8, align 8, !dbg !7329
  %400 = load i8, i8* %399, align 1, !dbg !7331
  %401 = sext i8 %400 to i32, !dbg !7331
  %402 = icmp eq i32 %401, 0, !dbg !7332
  br i1 %402, label %403, label %404, !dbg !7333

403:                                              ; preds = %391
  br label %911, !dbg !7334

404:                                              ; preds = %391
  %405 = call i32* @__errno_location() #14, !dbg !7335
  store i32 0, i32* %405, align 4, !dbg !7336
  %406 = load i8*, i8** %8, align 8, !dbg !7337
  %407 = call i64 @strtoul(i8* %406, i8** %9, i32 0) #13, !dbg !7338
  store i64 %407, i64* %7, align 8, !dbg !7339
  %408 = load i8*, i8** %8, align 8, !dbg !7340
  %409 = load i8, i8* %408, align 1, !dbg !7342
  %410 = sext i8 %409 to i32, !dbg !7342
  %411 = icmp ne i32 %410, 0, !dbg !7343
  br i1 %411, label %412, label %433, !dbg !7344

412:                                              ; preds = %404
  %413 = load i8*, i8** %9, align 8, !dbg !7345
  %414 = load i8, i8* %413, align 1, !dbg !7346
  %415 = sext i8 %414 to i32, !dbg !7346
  %416 = icmp eq i32 %415, 0, !dbg !7347
  br i1 %416, label %417, label %433, !dbg !7348

417:                                              ; preds = %412
  %418 = call i32* @__errno_location() #14, !dbg !7349
  %419 = load i32, i32* %418, align 4, !dbg !7349
  %420 = icmp ne i32 %419, 34, !dbg !7350
  br i1 %420, label %424, label %421, !dbg !7351

421:                                              ; preds = %417
  %422 = load i64, i64* %7, align 8, !dbg !7352
  %423 = icmp ne i64 %422, -1, !dbg !7353
  br i1 %423, label %424, label %433, !dbg !7354

424:                                              ; preds = %421, %417
  %425 = load i64, i64* %7, align 8, !dbg !7355
  %426 = trunc i64 %425 to i32, !dbg !7357
  %427 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7358
  %428 = getelementptr inbounds %struct.command_details, %struct.command_details* %427, i32 0, i32 1, !dbg !7359
  store i32 %426, i32* %428, align 4, !dbg !7360
  %429 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7361
  %430 = getelementptr inbounds %struct.command_details, %struct.command_details* %429, i32 0, i32 9, !dbg !7361
  %431 = load i32, i32* %430, align 4, !dbg !7361
  %432 = or i32 %431, 2, !dbg !7361
  store i32 %432, i32* %430, align 4, !dbg !7361
  br label %433, !dbg !7362

433:                                              ; preds = %424, %421, %412, %404
  br label %911, !dbg !7363

434:                                              ; preds = %383
  %435 = load i8**, i8*** %3, align 8, !dbg !7364
  %436 = load i32, i32* %5, align 4, !dbg !7366
  %437 = sext i32 %436 to i64, !dbg !7364
  %438 = getelementptr inbounds i8*, i8** %435, i64 %437, !dbg !7364
  %439 = load i8*, i8** %438, align 8, !dbg !7364
  %440 = call i32 @strncmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63.152, i64 0, i64 0), i8* %439, i64 10) #12, !dbg !7367
  %441 = icmp eq i32 %440, 0, !dbg !7368
  br i1 %441, label %442, label %485, !dbg !7369

442:                                              ; preds = %434
  %443 = load i8**, i8*** %3, align 8, !dbg !7370
  %444 = load i32, i32* %5, align 4, !dbg !7372
  %445 = sext i32 %444 to i64, !dbg !7370
  %446 = getelementptr inbounds i8*, i8** %443, i64 %445, !dbg !7370
  %447 = load i8*, i8** %446, align 8, !dbg !7370
  %448 = getelementptr inbounds i8, i8* %447, i64 11, !dbg !7373
  %449 = getelementptr inbounds i8, i8* %448, i64 -1, !dbg !7374
  store i8* %449, i8** %8, align 8, !dbg !7375
  %450 = load i8*, i8** %8, align 8, !dbg !7376
  %451 = load i8, i8* %450, align 1, !dbg !7378
  %452 = sext i8 %451 to i32, !dbg !7378
  %453 = icmp eq i32 %452, 0, !dbg !7379
  br i1 %453, label %454, label %455, !dbg !7380

454:                                              ; preds = %442
  br label %911, !dbg !7381

455:                                              ; preds = %442
  %456 = call i32* @__errno_location() #14, !dbg !7382
  store i32 0, i32* %456, align 4, !dbg !7383
  %457 = load i8*, i8** %8, align 8, !dbg !7384
  %458 = call i64 @strtoul(i8* %457, i8** %9, i32 0) #13, !dbg !7385
  store i64 %458, i64* %7, align 8, !dbg !7386
  %459 = load i8*, i8** %8, align 8, !dbg !7387
  %460 = load i8, i8* %459, align 1, !dbg !7389
  %461 = sext i8 %460 to i32, !dbg !7389
  %462 = icmp ne i32 %461, 0, !dbg !7390
  br i1 %462, label %463, label %484, !dbg !7391

463:                                              ; preds = %455
  %464 = load i8*, i8** %9, align 8, !dbg !7392
  %465 = load i8, i8* %464, align 1, !dbg !7393
  %466 = sext i8 %465 to i32, !dbg !7393
  %467 = icmp eq i32 %466, 0, !dbg !7394
  br i1 %467, label %468, label %484, !dbg !7395

468:                                              ; preds = %463
  %469 = call i32* @__errno_location() #14, !dbg !7396
  %470 = load i32, i32* %469, align 4, !dbg !7396
  %471 = icmp ne i32 %470, 34, !dbg !7397
  br i1 %471, label %475, label %472, !dbg !7398

472:                                              ; preds = %468
  %473 = load i64, i64* %7, align 8, !dbg !7399
  %474 = icmp ne i64 %473, -1, !dbg !7400
  br i1 %474, label %475, label %484, !dbg !7401

475:                                              ; preds = %472, %468
  %476 = load i64, i64* %7, align 8, !dbg !7402
  %477 = trunc i64 %476 to i32, !dbg !7404
  %478 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7405
  %479 = getelementptr inbounds %struct.command_details, %struct.command_details* %478, i32 0, i32 2, !dbg !7406
  store i32 %477, i32* %479, align 8, !dbg !7407
  %480 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7408
  %481 = getelementptr inbounds %struct.command_details, %struct.command_details* %480, i32 0, i32 9, !dbg !7408
  %482 = load i32, i32* %481, align 4, !dbg !7408
  %483 = or i32 %482, 4, !dbg !7408
  store i32 %483, i32* %481, align 4, !dbg !7408
  br label %484, !dbg !7409

484:                                              ; preds = %475, %472, %463, %455
  br label %911, !dbg !7410

485:                                              ; preds = %434
  %486 = load i8**, i8*** %3, align 8, !dbg !7411
  %487 = load i32, i32* %5, align 4, !dbg !7413
  %488 = sext i32 %487 to i64, !dbg !7411
  %489 = getelementptr inbounds i8*, i8** %486, i64 %488, !dbg !7411
  %490 = load i8*, i8** %489, align 8, !dbg !7411
  %491 = call i32 @strncmp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64.153, i64 0, i64 0), i8* %490, i64 13) #12, !dbg !7414
  %492 = icmp eq i32 %491, 0, !dbg !7415
  br i1 %492, label %493, label %589, !dbg !7416

493:                                              ; preds = %485
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7417, metadata !DIExpression()), !dbg !7419
  %494 = load i8**, i8*** %3, align 8, !dbg !7420
  %495 = load i32, i32* %5, align 4, !dbg !7421
  %496 = sext i32 %495 to i64, !dbg !7420
  %497 = getelementptr inbounds i8*, i8** %494, i64 %496, !dbg !7420
  %498 = load i8*, i8** %497, align 8, !dbg !7420
  %499 = getelementptr inbounds i8, i8* %498, i64 14, !dbg !7422
  %500 = getelementptr inbounds i8, i8* %499, i64 -1, !dbg !7423
  store i8* %500, i8** %8, align 8, !dbg !7424
  %501 = load i8*, i8** %8, align 8, !dbg !7425
  %502 = load i8, i8* %501, align 1, !dbg !7427
  %503 = sext i8 %502 to i32, !dbg !7427
  %504 = icmp eq i32 %503, 0, !dbg !7428
  br i1 %504, label %505, label %506, !dbg !7429

505:                                              ; preds = %493
  br label %911, !dbg !7430

506:                                              ; preds = %493
  br label %507, !dbg !7431

507:                                              ; preds = %516, %506
  %508 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7432
  %509 = getelementptr inbounds %struct.command_details, %struct.command_details* %508, i32 0, i32 7, !dbg !7436
  %510 = load i32, i32* %509, align 4, !dbg !7437
  %511 = add nsw i32 %510, 1, !dbg !7437
  store i32 %511, i32* %509, align 4, !dbg !7437
  %512 = load i8*, i8** %8, align 8, !dbg !7438
  %513 = call i8* @strchr(i8* %512, i32 44) #12, !dbg !7440
  store i8* %513, i8** %8, align 8, !dbg !7441
  %514 = icmp eq i8* %513, null, !dbg !7442
  br i1 %514, label %515, label %516, !dbg !7443

515:                                              ; preds = %507
  br label %519, !dbg !7444

516:                                              ; preds = %507
  %517 = load i8*, i8** %8, align 8, !dbg !7445
  %518 = getelementptr inbounds i8, i8* %517, i32 1, !dbg !7445
  store i8* %518, i8** %8, align 8, !dbg !7445
  br label %507, !dbg !7446, !llvm.loop !7447

519:                                              ; preds = %515
  %520 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7450
  %521 = getelementptr inbounds %struct.command_details, %struct.command_details* %520, i32 0, i32 7, !dbg !7452
  %522 = load i32, i32* %521, align 4, !dbg !7452
  %523 = icmp ne i32 %522, 0, !dbg !7453
  br i1 %523, label %524, label %588, !dbg !7454

524:                                              ; preds = %519
  %525 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7455
  %526 = getelementptr inbounds %struct.command_details, %struct.command_details* %525, i32 0, i32 7, !dbg !7457
  %527 = load i32, i32* %526, align 4, !dbg !7457
  %528 = sext i32 %527 to i64, !dbg !7455
  %529 = call i8* @emalloc2(i64 %528, i64 4), !dbg !7458
  %530 = bitcast i8* %529 to i32*, !dbg !7458
  %531 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7459
  %532 = getelementptr inbounds %struct.command_details, %struct.command_details* %531, i32 0, i32 10, !dbg !7460
  store i32* %530, i32** %532, align 8, !dbg !7461
  %533 = load i8**, i8*** %3, align 8, !dbg !7462
  %534 = load i32, i32* %5, align 4, !dbg !7463
  %535 = sext i32 %534 to i64, !dbg !7462
  %536 = getelementptr inbounds i8*, i8** %533, i64 %535, !dbg !7462
  %537 = load i8*, i8** %536, align 8, !dbg !7462
  %538 = getelementptr inbounds i8, i8* %537, i64 14, !dbg !7464
  %539 = getelementptr inbounds i8, i8* %538, i64 -1, !dbg !7465
  store i8* %539, i8** %8, align 8, !dbg !7466
  store i32 0, i32* %10, align 4, !dbg !7467
  br label %540, !dbg !7469

540:                                              ; preds = %572, %524
  %541 = load i32, i32* %10, align 4, !dbg !7470
  %542 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7472
  %543 = getelementptr inbounds %struct.command_details, %struct.command_details* %542, i32 0, i32 7, !dbg !7473
  %544 = load i32, i32* %543, align 4, !dbg !7473
  %545 = icmp slt i32 %541, %544, !dbg !7474
  br i1 %545, label %546, label %584, !dbg !7475

546:                                              ; preds = %540
  %547 = call i32* @__errno_location() #14, !dbg !7476
  store i32 0, i32* %547, align 4, !dbg !7478
  %548 = load i8*, i8** %8, align 8, !dbg !7479
  %549 = call i64 @strtoul(i8* %548, i8** %9, i32 0) #13, !dbg !7480
  store i64 %549, i64* %7, align 8, !dbg !7481
  %550 = load i8*, i8** %8, align 8, !dbg !7482
  %551 = load i8, i8* %550, align 1, !dbg !7484
  %552 = sext i8 %551 to i32, !dbg !7484
  %553 = icmp eq i32 %552, 0, !dbg !7485
  br i1 %553, label %571, label %554, !dbg !7486

554:                                              ; preds = %546
  %555 = load i8*, i8** %9, align 8, !dbg !7487
  %556 = load i8, i8* %555, align 1, !dbg !7488
  %557 = sext i8 %556 to i32, !dbg !7488
  %558 = icmp ne i32 %557, 44, !dbg !7489
  br i1 %558, label %559, label %564, !dbg !7490

559:                                              ; preds = %554
  %560 = load i8*, i8** %9, align 8, !dbg !7491
  %561 = load i8, i8* %560, align 1, !dbg !7492
  %562 = sext i8 %561 to i32, !dbg !7492
  %563 = icmp ne i32 %562, 0, !dbg !7493
  br i1 %563, label %571, label %564, !dbg !7494

564:                                              ; preds = %559, %554
  %565 = load i64, i64* %7, align 8, !dbg !7495
  %566 = icmp eq i64 %565, -1, !dbg !7496
  br i1 %566, label %567, label %572, !dbg !7497

567:                                              ; preds = %564
  %568 = call i32* @__errno_location() #14, !dbg !7498
  %569 = load i32, i32* %568, align 4, !dbg !7498
  %570 = icmp eq i32 %569, 34, !dbg !7499
  br i1 %570, label %571, label %572, !dbg !7500

571:                                              ; preds = %567, %559, %546
  br label %584, !dbg !7501

572:                                              ; preds = %567, %564
  %573 = load i64, i64* %7, align 8, !dbg !7503
  %574 = trunc i64 %573 to i32, !dbg !7504
  %575 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7505
  %576 = getelementptr inbounds %struct.command_details, %struct.command_details* %575, i32 0, i32 10, !dbg !7506
  %577 = load i32*, i32** %576, align 8, !dbg !7506
  %578 = load i32, i32* %10, align 4, !dbg !7507
  %579 = add nsw i32 %578, 1, !dbg !7507
  store i32 %579, i32* %10, align 4, !dbg !7507
  %580 = sext i32 %578 to i64, !dbg !7505
  %581 = getelementptr inbounds i32, i32* %577, i64 %580, !dbg !7505
  store i32 %574, i32* %581, align 4, !dbg !7508
  %582 = load i8*, i8** %9, align 8, !dbg !7509
  %583 = getelementptr inbounds i8, i8* %582, i64 1, !dbg !7510
  store i8* %583, i8** %8, align 8, !dbg !7511
  br label %540, !dbg !7512, !llvm.loop !7513

584:                                              ; preds = %571, %540
  %585 = load i32, i32* %10, align 4, !dbg !7515
  %586 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7516
  %587 = getelementptr inbounds %struct.command_details, %struct.command_details* %586, i32 0, i32 7, !dbg !7517
  store i32 %585, i32* %587, align 4, !dbg !7518
  br label %588, !dbg !7519

588:                                              ; preds = %584, %519
  br label %911, !dbg !7520

589:                                              ; preds = %485
  %590 = load i8**, i8*** %3, align 8, !dbg !7521
  %591 = load i32, i32* %5, align 4, !dbg !7523
  %592 = sext i32 %591 to i64, !dbg !7521
  %593 = getelementptr inbounds i8*, i8** %590, i64 %592, !dbg !7521
  %594 = load i8*, i8** %593, align 8, !dbg !7521
  %595 = call i32 @strncmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65.154, i64 0, i64 0), i8* %594, i64 10) #12, !dbg !7524
  %596 = icmp eq i32 %595, 0, !dbg !7525
  br i1 %596, label %597, label %640, !dbg !7526

597:                                              ; preds = %589
  %598 = load i8**, i8*** %3, align 8, !dbg !7527
  %599 = load i32, i32* %5, align 4, !dbg !7529
  %600 = sext i32 %599 to i64, !dbg !7527
  %601 = getelementptr inbounds i8*, i8** %598, i64 %600, !dbg !7527
  %602 = load i8*, i8** %601, align 8, !dbg !7527
  %603 = getelementptr inbounds i8, i8* %602, i64 11, !dbg !7530
  %604 = getelementptr inbounds i8, i8* %603, i64 -1, !dbg !7531
  store i8* %604, i8** %8, align 8, !dbg !7532
  %605 = load i8*, i8** %8, align 8, !dbg !7533
  %606 = load i8, i8* %605, align 1, !dbg !7535
  %607 = sext i8 %606 to i32, !dbg !7535
  %608 = icmp eq i32 %607, 0, !dbg !7536
  br i1 %608, label %609, label %610, !dbg !7537

609:                                              ; preds = %597
  br label %911, !dbg !7538

610:                                              ; preds = %597
  %611 = call i32* @__errno_location() #14, !dbg !7539
  store i32 0, i32* %611, align 4, !dbg !7540
  %612 = load i8*, i8** %8, align 8, !dbg !7541
  %613 = call i64 @strtoul(i8* %612, i8** %9, i32 0) #13, !dbg !7542
  store i64 %613, i64* %7, align 8, !dbg !7543
  %614 = load i8*, i8** %8, align 8, !dbg !7544
  %615 = load i8, i8* %614, align 1, !dbg !7546
  %616 = sext i8 %615 to i32, !dbg !7546
  %617 = icmp ne i32 %616, 0, !dbg !7547
  br i1 %617, label %618, label %639, !dbg !7548

618:                                              ; preds = %610
  %619 = load i8*, i8** %9, align 8, !dbg !7549
  %620 = load i8, i8* %619, align 1, !dbg !7550
  %621 = sext i8 %620 to i32, !dbg !7550
  %622 = icmp eq i32 %621, 0, !dbg !7551
  br i1 %622, label %623, label %639, !dbg !7552

623:                                              ; preds = %618
  %624 = call i32* @__errno_location() #14, !dbg !7553
  %625 = load i32, i32* %624, align 4, !dbg !7553
  %626 = icmp ne i32 %625, 34, !dbg !7554
  br i1 %626, label %630, label %627, !dbg !7555

627:                                              ; preds = %623
  %628 = load i64, i64* %7, align 8, !dbg !7556
  %629 = icmp ne i64 %628, -1, !dbg !7557
  br i1 %629, label %630, label %639, !dbg !7558

630:                                              ; preds = %627, %623
  %631 = load i64, i64* %7, align 8, !dbg !7559
  %632 = trunc i64 %631 to i32, !dbg !7561
  %633 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7562
  %634 = getelementptr inbounds %struct.command_details, %struct.command_details* %633, i32 0, i32 0, !dbg !7563
  store i32 %632, i32* %634, align 8, !dbg !7564
  %635 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7565
  %636 = getelementptr inbounds %struct.command_details, %struct.command_details* %635, i32 0, i32 9, !dbg !7565
  %637 = load i32, i32* %636, align 4, !dbg !7565
  %638 = or i32 %637, 1, !dbg !7565
  store i32 %638, i32* %636, align 4, !dbg !7565
  br label %639, !dbg !7566

639:                                              ; preds = %630, %627, %618, %610
  br label %911, !dbg !7567

640:                                              ; preds = %589
  br label %911, !dbg !7568

641:                                              ; preds = %22
  %642 = load i8**, i8*** %3, align 8, !dbg !7569
  %643 = load i32, i32* %5, align 4, !dbg !7569
  %644 = sext i32 %643 to i64, !dbg !7569
  %645 = getelementptr inbounds i8*, i8** %642, i64 %644, !dbg !7569
  %646 = load i8*, i8** %645, align 8, !dbg !7569
  %647 = call i32 @strncmp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66.155, i64 0, i64 0), i8* %646, i64 13) #12, !dbg !7569
  %648 = icmp eq i32 %647, 0, !dbg !7569
  br i1 %648, label %649, label %669, !dbg !7569

649:                                              ; preds = %641
  %650 = load i8**, i8*** %3, align 8, !dbg !7569
  %651 = load i32, i32* %5, align 4, !dbg !7569
  %652 = sext i32 %651 to i64, !dbg !7569
  %653 = getelementptr inbounds i8*, i8** %650, i64 %652, !dbg !7569
  %654 = load i8*, i8** %653, align 8, !dbg !7569
  %655 = getelementptr inbounds i8, i8* %654, i64 13, !dbg !7569
  %656 = load i8, i8* %655, align 1, !dbg !7569
  %657 = sext i8 %656 to i32, !dbg !7569
  %658 = icmp ne i32 %657, 0, !dbg !7569
  br i1 %658, label %659, label %669, !dbg !7571

659:                                              ; preds = %649
  %660 = load i8**, i8*** %3, align 8, !dbg !7572
  %661 = load i32, i32* %5, align 4, !dbg !7572
  %662 = sext i32 %661 to i64, !dbg !7572
  %663 = getelementptr inbounds i8*, i8** %660, i64 %662, !dbg !7572
  %664 = load i8*, i8** %663, align 8, !dbg !7572
  %665 = getelementptr inbounds i8, i8* %664, i64 14, !dbg !7572
  %666 = getelementptr inbounds i8, i8* %665, i64 -1, !dbg !7572
  %667 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7572
  %668 = getelementptr inbounds %struct.command_details, %struct.command_details* %667, i32 0, i32 15, !dbg !7572
  store i8* %666, i8** %668, align 8, !dbg !7572
  br label %911, !dbg !7572

669:                                              ; preds = %649, %641
  %670 = load i8**, i8*** %3, align 8, !dbg !7574
  %671 = load i32, i32* %5, align 4, !dbg !7574
  %672 = sext i32 %671 to i64, !dbg !7574
  %673 = getelementptr inbounds i8*, i8** %670, i64 %672, !dbg !7574
  %674 = load i8*, i8** %673, align 8, !dbg !7574
  %675 = call i32 @strncmp(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67.156, i64 0, i64 0), i8* %674, i64 13) #12, !dbg !7574
  %676 = icmp eq i32 %675, 0, !dbg !7574
  br i1 %676, label %677, label %697, !dbg !7574

677:                                              ; preds = %669
  %678 = load i8**, i8*** %3, align 8, !dbg !7574
  %679 = load i32, i32* %5, align 4, !dbg !7574
  %680 = sext i32 %679 to i64, !dbg !7574
  %681 = getelementptr inbounds i8*, i8** %678, i64 %680, !dbg !7574
  %682 = load i8*, i8** %681, align 8, !dbg !7574
  %683 = getelementptr inbounds i8, i8* %682, i64 13, !dbg !7574
  %684 = load i8, i8* %683, align 1, !dbg !7574
  %685 = sext i8 %684 to i32, !dbg !7574
  %686 = icmp ne i32 %685, 0, !dbg !7574
  br i1 %686, label %687, label %697, !dbg !7576

687:                                              ; preds = %677
  %688 = load i8**, i8*** %3, align 8, !dbg !7577
  %689 = load i32, i32* %5, align 4, !dbg !7577
  %690 = sext i32 %689 to i64, !dbg !7577
  %691 = getelementptr inbounds i8*, i8** %688, i64 %690, !dbg !7577
  %692 = load i8*, i8** %691, align 8, !dbg !7577
  %693 = getelementptr inbounds i8, i8* %692, i64 14, !dbg !7577
  %694 = getelementptr inbounds i8, i8* %693, i64 -1, !dbg !7577
  %695 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7577
  %696 = getelementptr inbounds %struct.command_details, %struct.command_details* %695, i32 0, i32 16, !dbg !7577
  store i8* %694, i8** %696, align 8, !dbg !7577
  br label %911, !dbg !7577

697:                                              ; preds = %677, %669
  %698 = load i8**, i8*** %3, align 8, !dbg !7579
  %699 = load i32, i32* %5, align 4, !dbg !7581
  %700 = sext i32 %699 to i64, !dbg !7579
  %701 = getelementptr inbounds i8*, i8** %698, i64 %700, !dbg !7579
  %702 = load i8*, i8** %701, align 8, !dbg !7579
  %703 = call i32 @strncmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68.157, i64 0, i64 0), i8* %702, i64 9) #12, !dbg !7582
  %704 = icmp eq i32 %703, 0, !dbg !7583
  br i1 %704, label %705, label %721, !dbg !7584

705:                                              ; preds = %697
  %706 = load i8**, i8*** %3, align 8, !dbg !7585
  %707 = load i32, i32* %5, align 4, !dbg !7588
  %708 = sext i32 %707 to i64, !dbg !7585
  %709 = getelementptr inbounds i8*, i8** %706, i64 %708, !dbg !7585
  %710 = load i8*, i8** %709, align 8, !dbg !7585
  %711 = getelementptr inbounds i8, i8* %710, i64 10, !dbg !7589
  %712 = getelementptr inbounds i8, i8* %711, i64 -1, !dbg !7590
  %713 = call i32 @atobool(i8* %712), !dbg !7591
  %714 = icmp eq i32 %713, 1, !dbg !7592
  br i1 %714, label %715, label %720, !dbg !7593

715:                                              ; preds = %705
  %716 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7594
  %717 = getelementptr inbounds %struct.command_details, %struct.command_details* %716, i32 0, i32 9, !dbg !7594
  %718 = load i32, i32* %717, align 4, !dbg !7594
  %719 = or i32 %718, 8192, !dbg !7594
  store i32 %719, i32* %717, align 4, !dbg !7594
  br label %720, !dbg !7594

720:                                              ; preds = %715, %705
  br label %911, !dbg !7595

721:                                              ; preds = %697
  %722 = load i8**, i8*** %3, align 8, !dbg !7596
  %723 = load i32, i32* %5, align 4, !dbg !7598
  %724 = sext i32 %723 to i64, !dbg !7596
  %725 = getelementptr inbounds i8*, i8** %722, i64 %724, !dbg !7596
  %726 = load i8*, i8** %725, align 8, !dbg !7596
  %727 = call i32 @strncmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69.158, i64 0, i64 0), i8* %726, i64 9) #12, !dbg !7599
  %728 = icmp eq i32 %727, 0, !dbg !7600
  br i1 %728, label %729, label %745, !dbg !7601

729:                                              ; preds = %721
  %730 = load i8**, i8*** %3, align 8, !dbg !7602
  %731 = load i32, i32* %5, align 4, !dbg !7605
  %732 = sext i32 %731 to i64, !dbg !7602
  %733 = getelementptr inbounds i8*, i8** %730, i64 %732, !dbg !7602
  %734 = load i8*, i8** %733, align 8, !dbg !7602
  %735 = getelementptr inbounds i8, i8* %734, i64 10, !dbg !7606
  %736 = getelementptr inbounds i8, i8* %735, i64 -1, !dbg !7607
  %737 = call i32 @atobool(i8* %736), !dbg !7608
  %738 = icmp eq i32 %737, 1, !dbg !7609
  br i1 %738, label %739, label %744, !dbg !7610

739:                                              ; preds = %729
  %740 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7611
  %741 = getelementptr inbounds %struct.command_details, %struct.command_details* %740, i32 0, i32 9, !dbg !7611
  %742 = load i32, i32* %741, align 4, !dbg !7611
  %743 = or i32 %742, 512, !dbg !7611
  store i32 %743, i32* %741, align 4, !dbg !7611
  br label %744, !dbg !7611

744:                                              ; preds = %739, %729
  br label %911, !dbg !7612

745:                                              ; preds = %721
  br label %911, !dbg !7613

746:                                              ; preds = %22
  %747 = load i8**, i8*** %3, align 8, !dbg !7614
  %748 = load i32, i32* %5, align 4, !dbg !7616
  %749 = sext i32 %748 to i64, !dbg !7614
  %750 = getelementptr inbounds i8*, i8** %747, i64 %749, !dbg !7614
  %751 = load i8*, i8** %750, align 8, !dbg !7614
  %752 = call i32 @strncmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70.159, i64 0, i64 0), i8* %751, i64 8) #12, !dbg !7617
  %753 = icmp eq i32 %752, 0, !dbg !7618
  br i1 %753, label %754, label %806, !dbg !7619

754:                                              ; preds = %746
  %755 = load i8**, i8*** %3, align 8, !dbg !7620
  %756 = load i32, i32* %5, align 4, !dbg !7622
  %757 = sext i32 %756 to i64, !dbg !7620
  %758 = getelementptr inbounds i8*, i8** %755, i64 %757, !dbg !7620
  %759 = load i8*, i8** %758, align 8, !dbg !7620
  %760 = getelementptr inbounds i8, i8* %759, i64 9, !dbg !7623
  %761 = getelementptr inbounds i8, i8* %760, i64 -1, !dbg !7624
  store i8* %761, i8** %8, align 8, !dbg !7625
  %762 = load i8*, i8** %8, align 8, !dbg !7626
  %763 = load i8, i8* %762, align 1, !dbg !7628
  %764 = sext i8 %763 to i32, !dbg !7628
  %765 = icmp eq i32 %764, 0, !dbg !7629
  br i1 %765, label %766, label %767, !dbg !7630

766:                                              ; preds = %754
  br label %911, !dbg !7631

767:                                              ; preds = %754
  %768 = call i32* @__errno_location() #14, !dbg !7632
  store i32 0, i32* %768, align 4, !dbg !7633
  %769 = load i8*, i8** %8, align 8, !dbg !7634
  %770 = call i64 @strtol(i8* %769, i8** %9, i32 0) #13, !dbg !7635
  store i64 %770, i64* %6, align 8, !dbg !7636
  %771 = load i8*, i8** %8, align 8, !dbg !7637
  %772 = load i8, i8* %771, align 1, !dbg !7639
  %773 = sext i8 %772 to i32, !dbg !7639
  %774 = icmp ne i32 %773, 0, !dbg !7640
  br i1 %774, label %775, label %805, !dbg !7641

775:                                              ; preds = %767
  %776 = load i8*, i8** %9, align 8, !dbg !7642
  %777 = load i8, i8* %776, align 1, !dbg !7643
  %778 = sext i8 %777 to i32, !dbg !7643
  %779 = icmp eq i32 %778, 0, !dbg !7644
  br i1 %779, label %780, label %805, !dbg !7645

780:                                              ; preds = %775
  %781 = call i32* @__errno_location() #14, !dbg !7646
  %782 = load i32, i32* %781, align 4, !dbg !7646
  %783 = icmp eq i32 %782, 34, !dbg !7647
  br i1 %783, label %784, label %790, !dbg !7648

784:                                              ; preds = %780
  %785 = load i64, i64* %6, align 8, !dbg !7649
  %786 = icmp eq i64 %785, 9223372036854775807, !dbg !7650
  br i1 %786, label %805, label %787, !dbg !7651

787:                                              ; preds = %784
  %788 = load i64, i64* %6, align 8, !dbg !7652
  %789 = icmp eq i64 %788, -9223372036854775808, !dbg !7653
  br i1 %789, label %805, label %790, !dbg !7654

790:                                              ; preds = %787, %780
  %791 = load i64, i64* %6, align 8, !dbg !7655
  %792 = icmp sle i64 %791, 2147483647, !dbg !7656
  br i1 %792, label %793, label %805, !dbg !7657

793:                                              ; preds = %790
  %794 = load i64, i64* %6, align 8, !dbg !7658
  %795 = icmp sge i64 %794, 0, !dbg !7659
  br i1 %795, label %796, label %805, !dbg !7660

796:                                              ; preds = %793
  %797 = load i64, i64* %6, align 8, !dbg !7661
  %798 = trunc i64 %797 to i32, !dbg !7663
  %799 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7664
  %800 = getelementptr inbounds %struct.command_details, %struct.command_details* %799, i32 0, i32 6, !dbg !7665
  store i32 %798, i32* %800, align 8, !dbg !7666
  %801 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7667
  %802 = getelementptr inbounds %struct.command_details, %struct.command_details* %801, i32 0, i32 9, !dbg !7667
  %803 = load i32, i32* %802, align 4, !dbg !7667
  %804 = or i32 %803, 256, !dbg !7667
  store i32 %804, i32* %802, align 4, !dbg !7667
  br label %805, !dbg !7668

805:                                              ; preds = %796, %793, %790, %787, %784, %775, %767
  br label %911, !dbg !7669

806:                                              ; preds = %746
  br label %911, !dbg !7670

807:                                              ; preds = %22
  %808 = load i8**, i8*** %3, align 8, !dbg !7671
  %809 = load i32, i32* %5, align 4, !dbg !7673
  %810 = sext i32 %809 to i64, !dbg !7671
  %811 = getelementptr inbounds i8*, i8** %808, i64 %810, !dbg !7671
  %812 = load i8*, i8** %811, align 8, !dbg !7671
  %813 = call i32 @strncmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71.160, i64 0, i64 0), i8* %812, i64 6) #12, !dbg !7674
  %814 = icmp eq i32 %813, 0, !dbg !7675
  br i1 %814, label %815, label %858, !dbg !7676

815:                                              ; preds = %807
  %816 = load i8**, i8*** %3, align 8, !dbg !7677
  %817 = load i32, i32* %5, align 4, !dbg !7679
  %818 = sext i32 %817 to i64, !dbg !7677
  %819 = getelementptr inbounds i8*, i8** %816, i64 %818, !dbg !7677
  %820 = load i8*, i8** %819, align 8, !dbg !7677
  %821 = getelementptr inbounds i8, i8* %820, i64 7, !dbg !7680
  %822 = getelementptr inbounds i8, i8* %821, i64 -1, !dbg !7681
  store i8* %822, i8** %8, align 8, !dbg !7682
  %823 = load i8*, i8** %8, align 8, !dbg !7683
  %824 = load i8, i8* %823, align 1, !dbg !7685
  %825 = sext i8 %824 to i32, !dbg !7685
  %826 = icmp eq i32 %825, 0, !dbg !7686
  br i1 %826, label %827, label %828, !dbg !7687

827:                                              ; preds = %815
  br label %911, !dbg !7688

828:                                              ; preds = %815
  %829 = call i32* @__errno_location() #14, !dbg !7689
  store i32 0, i32* %829, align 4, !dbg !7690
  %830 = load i8*, i8** %8, align 8, !dbg !7691
  %831 = call i64 @strtoul(i8* %830, i8** %9, i32 8) #13, !dbg !7692
  store i64 %831, i64* %7, align 8, !dbg !7693
  %832 = load i8*, i8** %8, align 8, !dbg !7694
  %833 = load i8, i8* %832, align 1, !dbg !7696
  %834 = sext i8 %833 to i32, !dbg !7696
  %835 = icmp ne i32 %834, 0, !dbg !7697
  br i1 %835, label %836, label %857, !dbg !7698

836:                                              ; preds = %828
  %837 = load i8*, i8** %9, align 8, !dbg !7699
  %838 = load i8, i8* %837, align 1, !dbg !7700
  %839 = sext i8 %838 to i32, !dbg !7700
  %840 = icmp eq i32 %839, 0, !dbg !7701
  br i1 %840, label %841, label %857, !dbg !7702

841:                                              ; preds = %836
  %842 = call i32* @__errno_location() #14, !dbg !7703
  %843 = load i32, i32* %842, align 4, !dbg !7703
  %844 = icmp ne i32 %843, 34, !dbg !7704
  br i1 %844, label %848, label %845, !dbg !7705

845:                                              ; preds = %841
  %846 = load i64, i64* %7, align 8, !dbg !7706
  %847 = icmp ne i64 %846, -1, !dbg !7707
  br i1 %847, label %848, label %857, !dbg !7708

848:                                              ; preds = %845, %841
  %849 = load i64, i64* %7, align 8, !dbg !7709
  %850 = trunc i64 %849 to i32, !dbg !7711
  %851 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7712
  %852 = getelementptr inbounds %struct.command_details, %struct.command_details* %851, i32 0, i32 4, !dbg !7713
  store i32 %850, i32* %852, align 8, !dbg !7714
  %853 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7715
  %854 = getelementptr inbounds %struct.command_details, %struct.command_details* %853, i32 0, i32 9, !dbg !7715
  %855 = load i32, i32* %854, align 4, !dbg !7715
  %856 = or i32 %855, 128, !dbg !7715
  store i32 %856, i32* %854, align 4, !dbg !7715
  br label %857, !dbg !7716

857:                                              ; preds = %848, %845, %836, %828
  br label %911, !dbg !7717

858:                                              ; preds = %807
  %859 = load i8**, i8*** %3, align 8, !dbg !7718
  %860 = load i32, i32* %5, align 4, !dbg !7720
  %861 = sext i32 %860 to i64, !dbg !7718
  %862 = getelementptr inbounds i8*, i8** %859, i64 %861, !dbg !7718
  %863 = load i8*, i8** %862, align 8, !dbg !7718
  %864 = call i32 @strncmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.72.161, i64 0, i64 0), i8* %863, i64 8) #12, !dbg !7721
  %865 = icmp eq i32 %864, 0, !dbg !7722
  br i1 %865, label %866, label %882, !dbg !7723

866:                                              ; preds = %858
  %867 = load i8**, i8*** %3, align 8, !dbg !7724
  %868 = load i32, i32* %5, align 4, !dbg !7727
  %869 = sext i32 %868 to i64, !dbg !7724
  %870 = getelementptr inbounds i8*, i8** %867, i64 %869, !dbg !7724
  %871 = load i8*, i8** %870, align 8, !dbg !7724
  %872 = getelementptr inbounds i8, i8* %871, i64 9, !dbg !7728
  %873 = getelementptr inbounds i8, i8* %872, i64 -1, !dbg !7729
  %874 = call i32 @atobool(i8* %873), !dbg !7730
  %875 = icmp eq i32 %874, 1, !dbg !7731
  br i1 %875, label %876, label %881, !dbg !7732

876:                                              ; preds = %866
  %877 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7733
  %878 = getelementptr inbounds %struct.command_details, %struct.command_details* %877, i32 0, i32 9, !dbg !7733
  %879 = load i32, i32* %878, align 4, !dbg !7733
  %880 = or i32 %879, 4096, !dbg !7733
  store i32 %880, i32* %878, align 4, !dbg !7733
  br label %881, !dbg !7733

881:                                              ; preds = %876, %866
  br label %911, !dbg !7734

882:                                              ; preds = %858
  %883 = load i8**, i8*** %3, align 8, !dbg !7735
  %884 = load i32, i32* %5, align 4, !dbg !7735
  %885 = sext i32 %884 to i64, !dbg !7735
  %886 = getelementptr inbounds i8*, i8** %883, i64 %885, !dbg !7735
  %887 = load i8*, i8** %886, align 8, !dbg !7735
  %888 = call i32 @strncmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73.162, i64 0, i64 0), i8* %887, i64 10) #12, !dbg !7735
  %889 = icmp eq i32 %888, 0, !dbg !7735
  br i1 %889, label %890, label %910, !dbg !7735

890:                                              ; preds = %882
  %891 = load i8**, i8*** %3, align 8, !dbg !7735
  %892 = load i32, i32* %5, align 4, !dbg !7735
  %893 = sext i32 %892 to i64, !dbg !7735
  %894 = getelementptr inbounds i8*, i8** %891, i64 %893, !dbg !7735
  %895 = load i8*, i8** %894, align 8, !dbg !7735
  %896 = getelementptr inbounds i8, i8* %895, i64 10, !dbg !7735
  %897 = load i8, i8* %896, align 1, !dbg !7735
  %898 = sext i8 %897 to i32, !dbg !7735
  %899 = icmp ne i32 %898, 0, !dbg !7735
  br i1 %899, label %900, label %910, !dbg !7737

900:                                              ; preds = %890
  %901 = load i8**, i8*** %3, align 8, !dbg !7738
  %902 = load i32, i32* %5, align 4, !dbg !7738
  %903 = sext i32 %902 to i64, !dbg !7738
  %904 = getelementptr inbounds i8*, i8** %901, i64 %903, !dbg !7738
  %905 = load i8*, i8** %904, align 8, !dbg !7738
  %906 = getelementptr inbounds i8, i8* %905, i64 11, !dbg !7738
  %907 = getelementptr inbounds i8, i8* %906, i64 -1, !dbg !7738
  %908 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7738
  %909 = getelementptr inbounds %struct.command_details, %struct.command_details* %908, i32 0, i32 17, !dbg !7738
  store i8* %907, i8** %909, align 8, !dbg !7738
  br label %911, !dbg !7738

910:                                              ; preds = %890, %882
  br label %911, !dbg !7740

911:                                              ; preds = %22, %910, %900, %881, %857, %827, %806, %805, %766, %745, %744, %720, %687, %659, %640, %639, %609, %588, %505, %484, %454, %433, %403, %382, %352, %331, %330, %306, %298, %289, %265, %226, %205, %195, %176, %175, %140, %110, %82, %54
  br label %912, !dbg !7741

912:                                              ; preds = %911
  %913 = load i32, i32* %5, align 4, !dbg !7742
  %914 = add nsw i32 %913, 1, !dbg !7742
  store i32 %914, i32* %5, align 4, !dbg !7742
  br label %15, !dbg !7743, !llvm.loop !7744

915:                                              ; preds = %15
  %916 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7746
  %917 = getelementptr inbounds %struct.command_details, %struct.command_details* %916, i32 0, i32 9, !dbg !7746
  %918 = load i32, i32* %917, align 4, !dbg !7746
  %919 = and i32 %918, 2, !dbg !7746
  %920 = icmp ne i32 %919, 0, !dbg !7746
  br i1 %920, label %927, label %921, !dbg !7748

921:                                              ; preds = %915
  %922 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7749
  %923 = getelementptr inbounds %struct.command_details, %struct.command_details* %922, i32 0, i32 0, !dbg !7750
  %924 = load i32, i32* %923, align 8, !dbg !7750
  %925 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !7751
  %926 = getelementptr inbounds %struct.command_details, %struct.command_details* %925, i32 0, i32 1, !dbg !7752
  store i32 %924, i32* %926, align 4, !dbg !7753
  br label %927, !dbg !7751

927:                                              ; preds = %921, %915
  ret void, !dbg !7754
}

; Function Attrs: nounwind
declare dso_local i32 @setrlimit(i32, %struct.timeval*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @run_command(%struct.command_details* %0) #0 !dbg !7755 {
  %2 = alloca %struct.command_details*, align 8
  %3 = alloca %struct.plugin_container*, align 8
  %4 = alloca %struct.command_status, align 4
  %5 = alloca i32, align 4
  store %struct.command_details* %0, %struct.command_details** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %2, metadata !7758, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %3, metadata !7760, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.declare(metadata %struct.command_status* %4, metadata !7762, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7768, metadata !DIExpression()), !dbg !7769
  store i32 1, i32* %5, align 4, !dbg !7769
  %6 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 0, !dbg !7770
  store i32 0, i32* %6, align 4, !dbg !7771
  %7 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 1, !dbg !7772
  store i32 0, i32* %7, align 4, !dbg !7773
  %8 = load %struct.command_details*, %struct.command_details** %2, align 8, !dbg !7774
  %9 = call i32 @sudo_execve(%struct.command_details* %8, %struct.command_status* %4), !dbg !7775
  %10 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 0, !dbg !7776
  %11 = load i32, i32* %10, align 4, !dbg !7776
  switch i32 %11, label %69 [
    i32 1, label %12
    i32 2, label %28
  ], !dbg !7777

12:                                               ; preds = %1
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23.135, i64 0, i64 0)), !dbg !7778
  %13 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 1, !dbg !7780
  %14 = load i32, i32* %13, align 4, !dbg !7780
  call void @policy_close(%struct.plugin_container* @policy_plugin, i32 0, i32 %14), !dbg !7781
  %15 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !7782
  store %struct.plugin_container* %15, %struct.plugin_container** %3, align 8, !dbg !7782
  br label %16, !dbg !7782

16:                                               ; preds = %23, %12
  %17 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !7784
  %18 = icmp ne %struct.plugin_container* %17, null, !dbg !7784
  br i1 %18, label %19, label %27, !dbg !7782

19:                                               ; preds = %16
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24.136, i64 0, i64 0)), !dbg !7786
  %20 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !7788
  %21 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 1, !dbg !7789
  %22 = load i32, i32* %21, align 4, !dbg !7789
  call void @iolog_close(%struct.plugin_container* %20, i32 0, i32 %22), !dbg !7790
  br label %23, !dbg !7791

23:                                               ; preds = %19
  %24 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !7784
  %25 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %24, i32 0, i32 1, !dbg !7784
  %26 = load %struct.plugin_container*, %struct.plugin_container** %25, align 8, !dbg !7784
  store %struct.plugin_container* %26, %struct.plugin_container** %3, align 8, !dbg !7784
  br label %16, !dbg !7784, !llvm.loop !7792

27:                                               ; preds = %16
  store i32 1, i32* %5, align 4, !dbg !7794
  br label %73, !dbg !7795

28:                                               ; preds = %1
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25.137, i64 0, i64 0)), !dbg !7796
  %29 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 1, !dbg !7797
  %30 = load i32, i32* %29, align 4, !dbg !7797
  call void @policy_close(%struct.plugin_container* @policy_plugin, i32 %30, i32 0), !dbg !7798
  %31 = load %struct.plugin_container*, %struct.plugin_container** getelementptr inbounds (%struct.plugin_container_list, %struct.plugin_container_list* @io_plugins, i32 0, i32 0), align 8, !dbg !7799
  store %struct.plugin_container* %31, %struct.plugin_container** %3, align 8, !dbg !7799
  br label %32, !dbg !7799

32:                                               ; preds = %39, %28
  %33 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !7801
  %34 = icmp ne %struct.plugin_container* %33, null, !dbg !7801
  br i1 %34, label %35, label %43, !dbg !7799

35:                                               ; preds = %32
  call void (i32, i8*, ...) @sudo_debug(i32 9, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.26.138, i64 0, i64 0)), !dbg !7803
  %36 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !7805
  %37 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 1, !dbg !7806
  %38 = load i32, i32* %37, align 4, !dbg !7806
  call void @iolog_close(%struct.plugin_container* %36, i32 %38, i32 0), !dbg !7807
  br label %39, !dbg !7808

39:                                               ; preds = %35
  %40 = load %struct.plugin_container*, %struct.plugin_container** %3, align 8, !dbg !7801
  %41 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %40, i32 0, i32 1, !dbg !7801
  %42 = load %struct.plugin_container*, %struct.plugin_container** %41, align 8, !dbg !7801
  store %struct.plugin_container* %42, %struct.plugin_container** %3, align 8, !dbg !7801
  br label %32, !dbg !7801, !llvm.loop !7809

43:                                               ; preds = %32
  %44 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 1, !dbg !7811
  %45 = load i32, i32* %44, align 4, !dbg !7811
  %46 = and i32 %45, 127, !dbg !7811
  %47 = icmp eq i32 %46, 0, !dbg !7811
  br i1 %47, label %48, label %53, !dbg !7813

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 1, !dbg !7814
  %50 = load i32, i32* %49, align 4, !dbg !7814
  %51 = and i32 %50, 65280, !dbg !7814
  %52 = ashr i32 %51, 8, !dbg !7814
  store i32 %52, i32* %5, align 4, !dbg !7815
  br label %68, !dbg !7816

53:                                               ; preds = %43
  %54 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 1, !dbg !7817
  %55 = load i32, i32* %54, align 4, !dbg !7817
  %56 = and i32 %55, 127, !dbg !7817
  %57 = add nsw i32 %56, 1, !dbg !7817
  %58 = trunc i32 %57 to i8, !dbg !7817
  %59 = sext i8 %58 to i32, !dbg !7817
  %60 = ashr i32 %59, 1, !dbg !7817
  %61 = icmp sgt i32 %60, 0, !dbg !7817
  br i1 %61, label %62, label %67, !dbg !7819

62:                                               ; preds = %53
  %63 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 1, !dbg !7820
  %64 = load i32, i32* %63, align 4, !dbg !7820
  %65 = and i32 %64, 127, !dbg !7820
  %66 = or i32 %65, 128, !dbg !7821
  store i32 %66, i32* %5, align 4, !dbg !7822
  br label %67, !dbg !7823

67:                                               ; preds = %62, %53
  br label %68

68:                                               ; preds = %67, %48
  br label %73, !dbg !7824

69:                                               ; preds = %1
  %70 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.27.139, i64 0, i64 0)) #13, !dbg !7825
  %71 = getelementptr inbounds %struct.command_status, %struct.command_status* %4, i32 0, i32 0, !dbg !7826
  %72 = load i32, i32* %71, align 4, !dbg !7826
  call void (i8*, ...) @warningx(i8* %70, i32 %72), !dbg !7827
  br label %73, !dbg !7828

73:                                               ; preds = %69, %68, %27
  %74 = load i32, i32* %5, align 4, !dbg !7829
  ret i32 %74, !dbg !7830
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @policy_close(%struct.plugin_container* %0, i32 %1, i32 %2) #0 !dbg !7831 {
  %4 = alloca %struct.plugin_container*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.plugin_container* %0, %struct.plugin_container** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %4, metadata !7834, metadata !DIExpression()), !dbg !7835
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7836, metadata !DIExpression()), !dbg !7837
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7838, metadata !DIExpression()), !dbg !7839
  %7 = load %struct.plugin_container*, %struct.plugin_container** %4, align 8, !dbg !7840
  %8 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %7, i32 0, i32 4, !dbg !7841
  %9 = bitcast %union.anon.9* %8 to %struct.policy_plugin**, !dbg !7842
  %10 = load %struct.policy_plugin*, %struct.policy_plugin** %9, align 8, !dbg !7842
  %11 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %10, i32 0, i32 3, !dbg !7843
  %12 = load void (i32, i32)*, void (i32, i32)** %11, align 8, !dbg !7843
  %13 = load i32, i32* %5, align 4, !dbg !7844
  %14 = load i32, i32* %6, align 4, !dbg !7845
  call void %12(i32 %13, i32 %14), !dbg !7840
  ret void, !dbg !7846
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @iolog_close(%struct.plugin_container* %0, i32 %1, i32 %2) #0 !dbg !7847 {
  %4 = alloca %struct.plugin_container*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.plugin_container* %0, %struct.plugin_container** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %4, metadata !7848, metadata !DIExpression()), !dbg !7849
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7850, metadata !DIExpression()), !dbg !7851
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7852, metadata !DIExpression()), !dbg !7853
  %7 = load %struct.plugin_container*, %struct.plugin_container** %4, align 8, !dbg !7854
  %8 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %7, i32 0, i32 4, !dbg !7855
  %9 = bitcast %union.anon.9* %8 to %struct.io_plugin**, !dbg !7856
  %10 = load %struct.io_plugin*, %struct.io_plugin** %9, align 8, !dbg !7856
  %11 = getelementptr inbounds %struct.io_plugin, %struct.io_plugin* %10, i32 0, i32 3, !dbg !7857
  %12 = load void (i32, i32)*, void (i32, i32)** %11, align 8, !dbg !7857
  %13 = load i32, i32* %5, align 4, !dbg !7858
  %14 = load i32, i32* %6, align 4, !dbg !7859
  call void %12(i32 %13, i32 %14), !dbg !7854
  ret void, !dbg !7860
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8*, i8**, i32) #4

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #4

; Function Attrs: nounwind
declare dso_local i32 @getuid() #4

; Function Attrs: nounwind
declare dso_local i32 @getgid() #4

; Function Attrs: nounwind
declare dso_local i32 @getegid() #4

declare dso_local %struct.passwd* @getpwuid(i32) #3

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @get_user_groups(%struct.user_details* %0) #0 !dbg !7861 {
  %2 = alloca %struct.user_details*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.user_details* %0, %struct.user_details** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.user_details** %2, metadata !7864, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7866, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7868, metadata !DIExpression()), !dbg !7869
  store i8* null, i8** %4, align 8, !dbg !7869
  call void @llvm.dbg.declare(metadata i64* %5, metadata !7870, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7872, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7874, metadata !DIExpression()), !dbg !7875
  %8 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7876
  %9 = getelementptr inbounds %struct.user_details, %struct.user_details* %8, i32 0, i32 9, !dbg !7877
  store i32* null, i32** %9, align 8, !dbg !7878
  %10 = call i32 @getgroups(i32 0, i32* null) #13, !dbg !7879
  %11 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7881
  %12 = getelementptr inbounds %struct.user_details, %struct.user_details* %11, i32 0, i32 10, !dbg !7882
  store i32 %10, i32* %12, align 8, !dbg !7883
  %13 = icmp sgt i32 %10, 0, !dbg !7884
  br i1 %13, label %14, label %39, !dbg !7885

14:                                               ; preds = %1
  %15 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7886
  %16 = getelementptr inbounds %struct.user_details, %struct.user_details* %15, i32 0, i32 10, !dbg !7888
  %17 = load i32, i32* %16, align 8, !dbg !7888
  %18 = sext i32 %17 to i64, !dbg !7886
  %19 = call i8* @emalloc2(i64 %18, i64 4), !dbg !7889
  %20 = bitcast i8* %19 to i32*, !dbg !7889
  %21 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7890
  %22 = getelementptr inbounds %struct.user_details, %struct.user_details* %21, i32 0, i32 9, !dbg !7891
  store i32* %20, i32** %22, align 8, !dbg !7892
  %23 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7893
  %24 = getelementptr inbounds %struct.user_details, %struct.user_details* %23, i32 0, i32 10, !dbg !7895
  %25 = load i32, i32* %24, align 8, !dbg !7895
  %26 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7896
  %27 = getelementptr inbounds %struct.user_details, %struct.user_details* %26, i32 0, i32 9, !dbg !7897
  %28 = load i32*, i32** %27, align 8, !dbg !7897
  %29 = call i32 @getgroups(i32 %25, i32* %28) #13, !dbg !7898
  %30 = icmp slt i32 %29, 0, !dbg !7899
  br i1 %30, label %31, label %38, !dbg !7900

31:                                               ; preds = %14
  %32 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7901
  %33 = getelementptr inbounds %struct.user_details, %struct.user_details* %32, i32 0, i32 9, !dbg !7903
  %34 = load i32*, i32** %33, align 8, !dbg !7903
  %35 = bitcast i32* %34 to i8*, !dbg !7901
  call void @efree(i8* %35), !dbg !7904
  %36 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7905
  %37 = getelementptr inbounds %struct.user_details, %struct.user_details* %36, i32 0, i32 9, !dbg !7906
  store i32* null, i32** %37, align 8, !dbg !7907
  br label %38, !dbg !7908

38:                                               ; preds = %31, %14
  br label %39, !dbg !7909

39:                                               ; preds = %38, %1
  %40 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7910
  %41 = getelementptr inbounds %struct.user_details, %struct.user_details* %40, i32 0, i32 9, !dbg !7912
  %42 = load i32*, i32** %41, align 8, !dbg !7912
  %43 = icmp eq i32* %42, null, !dbg !7913
  br i1 %43, label %44, label %51, !dbg !7914

44:                                               ; preds = %39
  %45 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7915
  %46 = call i32 @fill_group_list(%struct.user_details* %45), !dbg !7918
  %47 = icmp eq i32 %46, -1, !dbg !7919
  br i1 %47, label %48, label %50, !dbg !7920

48:                                               ; preds = %44
  %49 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47.182, i64 0, i64 0)) #13, !dbg !7921
  call void (i32, i8*, ...) @error(i32 1, i8* %49) #16, !dbg !7922
  unreachable, !dbg !7922

50:                                               ; preds = %44
  br label %51, !dbg !7923

51:                                               ; preds = %50, %39
  %52 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7924
  %53 = getelementptr inbounds %struct.user_details, %struct.user_details* %52, i32 0, i32 10, !dbg !7925
  %54 = load i32, i32* %53, align 8, !dbg !7925
  %55 = mul nsw i32 %54, 11, !dbg !7926
  %56 = sext i32 %55 to i64, !dbg !7927
  %57 = add i64 7, %56, !dbg !7928
  store i64 %57, i64* %5, align 8, !dbg !7929
  %58 = load i64, i64* %5, align 8, !dbg !7930
  %59 = call i8* @emalloc(i64 %58), !dbg !7931
  store i8* %59, i8** %4, align 8, !dbg !7932
  %60 = load i8*, i8** %4, align 8, !dbg !7933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48.183, i64 0, i64 0), i64 7, i1 false), !dbg !7934
  %61 = load i8*, i8** %4, align 8, !dbg !7935
  %62 = getelementptr inbounds i8, i8* %61, i64 8, !dbg !7936
  %63 = getelementptr inbounds i8, i8* %62, i64 -1, !dbg !7937
  store i8* %63, i8** %3, align 8, !dbg !7938
  store i32 0, i32* %6, align 4, !dbg !7939
  br label %64, !dbg !7941

64:                                               ; preds = %95, %51
  %65 = load i32, i32* %6, align 4, !dbg !7942
  %66 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7944
  %67 = getelementptr inbounds %struct.user_details, %struct.user_details* %66, i32 0, i32 10, !dbg !7945
  %68 = load i32, i32* %67, align 8, !dbg !7945
  %69 = icmp slt i32 %65, %68, !dbg !7946
  br i1 %69, label %70, label %98, !dbg !7947

70:                                               ; preds = %64
  %71 = load i8*, i8** %3, align 8, !dbg !7948
  %72 = load i64, i64* %5, align 8, !dbg !7950
  %73 = load i8*, i8** %3, align 8, !dbg !7951
  %74 = load i8*, i8** %4, align 8, !dbg !7952
  %75 = ptrtoint i8* %73 to i64, !dbg !7953
  %76 = ptrtoint i8* %74 to i64, !dbg !7953
  %77 = sub i64 %75, %76, !dbg !7953
  %78 = sub i64 %72, %77, !dbg !7954
  %79 = load i32, i32* %6, align 4, !dbg !7955
  %80 = icmp ne i32 %79, 0, !dbg !7955
  %81 = zext i1 %80 to i64, !dbg !7955
  %82 = select i1 %80, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50.184, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.118, i64 0, i64 0), !dbg !7955
  %83 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7956
  %84 = getelementptr inbounds %struct.user_details, %struct.user_details* %83, i32 0, i32 9, !dbg !7957
  %85 = load i32*, i32** %84, align 8, !dbg !7957
  %86 = load i32, i32* %6, align 4, !dbg !7958
  %87 = sext i32 %86 to i64, !dbg !7956
  %88 = getelementptr inbounds i32, i32* %85, i64 %87, !dbg !7956
  %89 = load i32, i32* %88, align 4, !dbg !7956
  %90 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %71, i64 %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.185, i64 0, i64 0), i8* %82, i32 %89) #13, !dbg !7959
  store i32 %90, i32* %7, align 4, !dbg !7960
  %91 = load i32, i32* %7, align 4, !dbg !7961
  %92 = load i8*, i8** %3, align 8, !dbg !7962
  %93 = sext i32 %91 to i64, !dbg !7962
  %94 = getelementptr inbounds i8, i8* %92, i64 %93, !dbg !7962
  store i8* %94, i8** %3, align 8, !dbg !7962
  br label %95, !dbg !7963

95:                                               ; preds = %70
  %96 = load i32, i32* %6, align 4, !dbg !7964
  %97 = add nsw i32 %96, 1, !dbg !7964
  store i32 %97, i32* %6, align 4, !dbg !7964
  br label %64, !dbg !7965, !llvm.loop !7966

98:                                               ; preds = %64
  %99 = load i8*, i8** %4, align 8, !dbg !7968
  ret i8* %99, !dbg !7969
}

; Function Attrs: nounwind
declare dso_local i8* @getcwd(i8*, i64) #4

; Function Attrs: nounwind
declare dso_local i8* @ttyname(i32) #4

; Function Attrs: nounwind
declare dso_local i32 @gethostname(i8*, i64) #4

; Function Attrs: nounwind
declare dso_local i32 @getgroups(i32, i32*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fill_group_list(%struct.user_details* %0) #0 !dbg !7970 {
  %2 = alloca %struct.user_details*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.user_details* %0, %struct.user_details** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.user_details** %2, metadata !7973, metadata !DIExpression()), !dbg !7974
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7975, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7977, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7979, metadata !DIExpression()), !dbg !7980
  store i32 -1, i32* %5, align 4, !dbg !7980
  %6 = call i64 @sysconf(i32 3) #13, !dbg !7981
  %7 = trunc i64 %6 to i32, !dbg !7982
  store i32 %7, i32* %3, align 4, !dbg !7983
  %8 = load i32, i32* %3, align 4, !dbg !7984
  %9 = icmp slt i32 %8, 0, !dbg !7986
  br i1 %9, label %10, label %11, !dbg !7987

10:                                               ; preds = %1
  store i32 65536, i32* %3, align 4, !dbg !7988
  br label %11, !dbg !7989

11:                                               ; preds = %10, %1
  %12 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7990
  %13 = getelementptr inbounds %struct.user_details, %struct.user_details* %12, i32 0, i32 9, !dbg !7991
  store i32* null, i32** %13, align 8, !dbg !7992
  %14 = load i32, i32* %3, align 4, !dbg !7993
  %15 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !7994
  %16 = getelementptr inbounds %struct.user_details, %struct.user_details* %15, i32 0, i32 10, !dbg !7995
  store i32 %14, i32* %16, align 8, !dbg !7996
  store i32 0, i32* %4, align 4, !dbg !7997
  br label %17, !dbg !7999

17:                                               ; preds = %54, %11
  %18 = load i32, i32* %4, align 4, !dbg !8000
  %19 = icmp slt i32 %18, 10, !dbg !8002
  br i1 %19, label %20, label %23, !dbg !8003

20:                                               ; preds = %17
  %21 = load i32, i32* %5, align 4, !dbg !8004
  %22 = icmp eq i32 %21, -1, !dbg !8005
  br label %23

23:                                               ; preds = %20, %17
  %24 = phi i1 [ false, %17 ], [ %22, %20 ], !dbg !8006
  br i1 %24, label %25, label %57, !dbg !8007

25:                                               ; preds = %23
  %26 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !8008
  %27 = getelementptr inbounds %struct.user_details, %struct.user_details* %26, i32 0, i32 10, !dbg !8010
  %28 = load i32, i32* %27, align 8, !dbg !8011
  %29 = mul nsw i32 %28, 2, !dbg !8011
  store i32 %29, i32* %27, align 8, !dbg !8011
  %30 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !8012
  %31 = getelementptr inbounds %struct.user_details, %struct.user_details* %30, i32 0, i32 9, !dbg !8013
  %32 = load i32*, i32** %31, align 8, !dbg !8013
  %33 = bitcast i32* %32 to i8*, !dbg !8012
  call void @efree(i8* %33), !dbg !8014
  %34 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !8015
  %35 = getelementptr inbounds %struct.user_details, %struct.user_details* %34, i32 0, i32 10, !dbg !8016
  %36 = load i32, i32* %35, align 8, !dbg !8016
  %37 = sext i32 %36 to i64, !dbg !8015
  %38 = call i8* @emalloc2(i64 %37, i64 4), !dbg !8017
  %39 = bitcast i8* %38 to i32*, !dbg !8017
  %40 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !8018
  %41 = getelementptr inbounds %struct.user_details, %struct.user_details* %40, i32 0, i32 9, !dbg !8019
  store i32* %39, i32** %41, align 8, !dbg !8020
  %42 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !8021
  %43 = getelementptr inbounds %struct.user_details, %struct.user_details* %42, i32 0, i32 4, !dbg !8022
  %44 = load i8*, i8** %43, align 8, !dbg !8022
  %45 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !8023
  %46 = getelementptr inbounds %struct.user_details, %struct.user_details* %45, i32 0, i32 2, !dbg !8024
  %47 = load i32, i32* %46, align 8, !dbg !8024
  %48 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !8025
  %49 = getelementptr inbounds %struct.user_details, %struct.user_details* %48, i32 0, i32 9, !dbg !8026
  %50 = load i32*, i32** %49, align 8, !dbg !8026
  %51 = load %struct.user_details*, %struct.user_details** %2, align 8, !dbg !8027
  %52 = getelementptr inbounds %struct.user_details, %struct.user_details* %51, i32 0, i32 10, !dbg !8028
  %53 = call i32 @getgrouplist(i8* %44, i32 %47, i32* %50, i32* %52), !dbg !8029
  store i32 %53, i32* %5, align 4, !dbg !8030
  br label %54, !dbg !8031

54:                                               ; preds = %25
  %55 = load i32, i32* %4, align 4, !dbg !8032
  %56 = add nsw i32 %55, 1, !dbg !8032
  store i32 %56, i32* %4, align 4, !dbg !8032
  br label %17, !dbg !8033, !llvm.loop !8034

57:                                               ; preds = %23
  %58 = load i32, i32* %5, align 4, !dbg !8036
  ret i32 %58, !dbg !8037
}

; Function Attrs: nounwind
declare dso_local i64 @sysconf(i32) #4

declare dso_local i32 @getgrouplist(i8*, i32, i32*, i32*) #3

; Function Attrs: nounwind
declare dso_local i32 @getrlimit(i32, %struct.timeval*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @exec_setup(%struct.command_details* %0, i8* %1, i32 %2) #0 !dbg !8038 {
  %4 = alloca %struct.command_details*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.passwd*, align 8
  %9 = alloca %struct.timeval, align 8
  store %struct.command_details* %0, %struct.command_details** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %4, metadata !8041, metadata !DIExpression()), !dbg !8042
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8043, metadata !DIExpression()), !dbg !8044
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8045, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8047, metadata !DIExpression()), !dbg !8048
  store i32 0, i32* %7, align 4, !dbg !8048
  call void @llvm.dbg.declare(metadata %struct.passwd** %8, metadata !8049, metadata !DIExpression()), !dbg !8050
  %10 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8051
  %11 = getelementptr inbounds %struct.command_details, %struct.command_details* %10, i32 0, i32 1, !dbg !8052
  %12 = load i32, i32* %11, align 4, !dbg !8052
  %13 = call %struct.passwd* @getpwuid(i32 %12), !dbg !8053
  store %struct.passwd* %13, %struct.passwd** %8, align 8, !dbg !8054
  %14 = load %struct.passwd*, %struct.passwd** %8, align 8, !dbg !8055
  %15 = call i32 @policy_init_session(%struct.plugin_container* @policy_plugin, %struct.passwd* %14), !dbg !8057
  %16 = icmp ne i32 %15, 1, !dbg !8058
  br i1 %16, label %17, label %18, !dbg !8059

17:                                               ; preds = %3
  br label %199, !dbg !8060

18:                                               ; preds = %3
  %19 = load %struct.passwd*, %struct.passwd** %8, align 8, !dbg !8061
  %20 = icmp ne %struct.passwd* %19, null, !dbg !8063
  br i1 %20, label %21, label %22, !dbg !8064

21:                                               ; preds = %18
  br label %22, !dbg !8065

22:                                               ; preds = %21, %18
  %23 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8067
  %24 = getelementptr inbounds %struct.command_details, %struct.command_details* %23, i32 0, i32 9, !dbg !8067
  %25 = load i32, i32* %24, align 4, !dbg !8067
  %26 = and i32 %25, 8, !dbg !8067
  %27 = icmp ne i32 %26, 0, !dbg !8067
  br i1 %27, label %28, label %39, !dbg !8069

28:                                               ; preds = %22
  %29 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8070
  %30 = getelementptr inbounds %struct.command_details, %struct.command_details* %29, i32 0, i32 3, !dbg !8071
  %31 = load i32, i32* %30, align 4, !dbg !8071
  %32 = call i32 @setegid(i32 %31) #13, !dbg !8072
  %33 = icmp ne i32 %32, 0, !dbg !8072
  br i1 %33, label %34, label %39, !dbg !8073

34:                                               ; preds = %28
  %35 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15.191, i64 0, i64 0)) #13, !dbg !8074
  %36 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8076
  %37 = getelementptr inbounds %struct.command_details, %struct.command_details* %36, i32 0, i32 3, !dbg !8077
  %38 = load i32, i32* %37, align 4, !dbg !8077
  call void (i8*, ...) @warning(i8* %35, i32 %38), !dbg !8078
  br label %199, !dbg !8079

39:                                               ; preds = %28, %22
  %40 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8080
  %41 = getelementptr inbounds %struct.command_details, %struct.command_details* %40, i32 0, i32 9, !dbg !8080
  %42 = load i32, i32* %41, align 4, !dbg !8080
  %43 = and i32 %42, 4, !dbg !8080
  %44 = icmp ne i32 %43, 0, !dbg !8080
  br i1 %44, label %45, label %56, !dbg !8082

45:                                               ; preds = %39
  %46 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8083
  %47 = getelementptr inbounds %struct.command_details, %struct.command_details* %46, i32 0, i32 2, !dbg !8084
  %48 = load i32, i32* %47, align 8, !dbg !8084
  %49 = call i32 @setgid(i32 %48) #13, !dbg !8085
  %50 = icmp ne i32 %49, 0, !dbg !8085
  br i1 %50, label %51, label %56, !dbg !8086

51:                                               ; preds = %45
  %52 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16.192, i64 0, i64 0)) #13, !dbg !8087
  %53 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8089
  %54 = getelementptr inbounds %struct.command_details, %struct.command_details* %53, i32 0, i32 2, !dbg !8090
  %55 = load i32, i32* %54, align 8, !dbg !8090
  call void (i8*, ...) @warning(i8* %52, i32 %55), !dbg !8091
  br label %199, !dbg !8092

56:                                               ; preds = %45, %39
  %57 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8093
  %58 = getelementptr inbounds %struct.command_details, %struct.command_details* %57, i32 0, i32 9, !dbg !8093
  %59 = load i32, i32* %58, align 4, !dbg !8093
  %60 = and i32 %59, 16, !dbg !8093
  %61 = icmp ne i32 %60, 0, !dbg !8093
  br i1 %61, label %80, label %62, !dbg !8095

62:                                               ; preds = %56
  %63 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8096
  %64 = getelementptr inbounds %struct.command_details, %struct.command_details* %63, i32 0, i32 7, !dbg !8099
  %65 = load i32, i32* %64, align 4, !dbg !8099
  %66 = icmp sge i32 %65, 0, !dbg !8100
  br i1 %66, label %67, label %79, !dbg !8101

67:                                               ; preds = %62
  %68 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8102
  %69 = getelementptr inbounds %struct.command_details, %struct.command_details* %68, i32 0, i32 7, !dbg !8105
  %70 = load i32, i32* %69, align 4, !dbg !8105
  %71 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8106
  %72 = getelementptr inbounds %struct.command_details, %struct.command_details* %71, i32 0, i32 10, !dbg !8107
  %73 = load i32*, i32** %72, align 8, !dbg !8107
  %74 = call i32 @sudo_setgroups(i32 %70, i32* %73), !dbg !8108
  %75 = icmp slt i32 %74, 0, !dbg !8109
  br i1 %75, label %76, label %78, !dbg !8110

76:                                               ; preds = %67
  %77 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17.193, i64 0, i64 0)) #13, !dbg !8111
  call void (i8*, ...) @warning(i8* %77), !dbg !8113
  br label %199, !dbg !8114

78:                                               ; preds = %67
  br label %79, !dbg !8115

79:                                               ; preds = %78, %62
  br label %80, !dbg !8116

80:                                               ; preds = %79, %56
  %81 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8117
  %82 = getelementptr inbounds %struct.command_details, %struct.command_details* %81, i32 0, i32 9, !dbg !8117
  %83 = load i32, i32* %82, align 4, !dbg !8117
  %84 = and i32 %83, 64, !dbg !8117
  %85 = icmp ne i32 %84, 0, !dbg !8117
  br i1 %85, label %86, label %95, !dbg !8119

86:                                               ; preds = %80
  %87 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8120
  %88 = getelementptr inbounds %struct.command_details, %struct.command_details* %87, i32 0, i32 5, !dbg !8123
  %89 = load i32, i32* %88, align 4, !dbg !8123
  %90 = call i32 @setpriority(i32 0, i32 0, i32 %89) #13, !dbg !8124
  %91 = icmp ne i32 %90, 0, !dbg !8125
  br i1 %91, label %92, label %94, !dbg !8126

92:                                               ; preds = %86
  %93 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18.194, i64 0, i64 0)) #13, !dbg !8127
  call void (i8*, ...) @warning(i8* %93), !dbg !8129
  br label %199, !dbg !8130

94:                                               ; preds = %86
  br label %95, !dbg !8131

95:                                               ; preds = %94, %80
  %96 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8132
  %97 = getelementptr inbounds %struct.command_details, %struct.command_details* %96, i32 0, i32 9, !dbg !8132
  %98 = load i32, i32* %97, align 4, !dbg !8132
  %99 = and i32 %98, 128, !dbg !8132
  %100 = icmp ne i32 %99, 0, !dbg !8132
  br i1 %100, label %101, label %106, !dbg !8134

101:                                              ; preds = %95
  %102 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8135
  %103 = getelementptr inbounds %struct.command_details, %struct.command_details* %102, i32 0, i32 4, !dbg !8136
  %104 = load i32, i32* %103, align 8, !dbg !8136
  %105 = call i32 @umask(i32 %104) #13, !dbg !8137
  br label %106, !dbg !8138

106:                                              ; preds = %101, %95
  %107 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8139
  %108 = getelementptr inbounds %struct.command_details, %struct.command_details* %107, i32 0, i32 14, !dbg !8141
  %109 = load i8*, i8** %108, align 8, !dbg !8141
  %110 = icmp ne i8* %109, null, !dbg !8139
  br i1 %110, label %111, label %126, !dbg !8142

111:                                              ; preds = %106
  %112 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8143
  %113 = getelementptr inbounds %struct.command_details, %struct.command_details* %112, i32 0, i32 14, !dbg !8146
  %114 = load i8*, i8** %113, align 8, !dbg !8146
  %115 = call i32 @chroot(i8* %114) #13, !dbg !8147
  %116 = icmp ne i32 %115, 0, !dbg !8148
  br i1 %116, label %120, label %117, !dbg !8149

117:                                              ; preds = %111
  %118 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19.195, i64 0, i64 0)) #13, !dbg !8150
  %119 = icmp ne i32 %118, 0, !dbg !8151
  br i1 %119, label %120, label %125, !dbg !8152

120:                                              ; preds = %117, %111
  %121 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20.196, i64 0, i64 0)) #13, !dbg !8153
  %122 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8155
  %123 = getelementptr inbounds %struct.command_details, %struct.command_details* %122, i32 0, i32 14, !dbg !8156
  %124 = load i8*, i8** %123, align 8, !dbg !8156
  call void (i8*, ...) @warning(i8* %121, i8* %124), !dbg !8157
  br label %199, !dbg !8158

125:                                              ; preds = %117
  br label %126, !dbg !8159

126:                                              ; preds = %125, %106
  %127 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8160
  %128 = getelementptr inbounds %struct.command_details, %struct.command_details* %127, i32 0, i32 9, !dbg !8160
  %129 = load i32, i32* %128, align 4, !dbg !8160
  %130 = and i32 %129, 32, !dbg !8160
  %131 = icmp ne i32 %130, 0, !dbg !8160
  br i1 %131, label %132, label %134, !dbg !8162

132:                                              ; preds = %126
  %133 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8163
  call void @disable_execute(%struct.command_details* %133), !dbg !8164
  br label %134, !dbg !8164

134:                                              ; preds = %132, %126
  %135 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8165
  %136 = getelementptr inbounds %struct.command_details, %struct.command_details* %135, i32 0, i32 0, !dbg !8167
  %137 = load i32, i32* %136, align 8, !dbg !8167
  %138 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8168
  %139 = getelementptr inbounds %struct.command_details, %struct.command_details* %138, i32 0, i32 1, !dbg !8169
  %140 = load i32, i32* %139, align 4, !dbg !8169
  %141 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8170
  %142 = getelementptr inbounds %struct.command_details, %struct.command_details* %141, i32 0, i32 1, !dbg !8171
  %143 = load i32, i32* %142, align 4, !dbg !8171
  %144 = call i32 @setresuid(i32 %137, i32 %140, i32 %143) #13, !dbg !8172
  %145 = icmp ne i32 %144, 0, !dbg !8173
  br i1 %145, label %146, label %154, !dbg !8174

146:                                              ; preds = %134
  %147 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.197, i64 0, i64 0)) #13, !dbg !8175
  %148 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8177
  %149 = getelementptr inbounds %struct.command_details, %struct.command_details* %148, i32 0, i32 0, !dbg !8178
  %150 = load i32, i32* %149, align 8, !dbg !8178
  %151 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8179
  %152 = getelementptr inbounds %struct.command_details, %struct.command_details* %151, i32 0, i32 1, !dbg !8180
  %153 = load i32, i32* %152, align 4, !dbg !8180
  call void (i8*, ...) @warning(i8* %147, i32 %150, i32 %153), !dbg !8181
  br label %199, !dbg !8182

154:                                              ; preds = %134
  %155 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8183
  %156 = getelementptr inbounds %struct.command_details, %struct.command_details* %155, i32 0, i32 12, !dbg !8185
  %157 = load i8*, i8** %156, align 8, !dbg !8185
  %158 = icmp ne i8* %157, null, !dbg !8183
  br i1 %158, label %159, label %184, !dbg !8186

159:                                              ; preds = %154
  %160 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8187
  %161 = getelementptr inbounds %struct.command_details, %struct.command_details* %160, i32 0, i32 14, !dbg !8190
  %162 = load i8*, i8** %161, align 8, !dbg !8190
  %163 = icmp ne i8* %162, null, !dbg !8187
  br i1 %163, label %171, label %164, !dbg !8191

164:                                              ; preds = %159
  %165 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8192
  %166 = getelementptr inbounds %struct.command_details, %struct.command_details* %165, i32 0, i32 12, !dbg !8193
  %167 = load i8*, i8** %166, align 8, !dbg !8193
  %168 = load i8*, i8** getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 5), align 8, !dbg !8194
  %169 = call i32 @strcmp(i8* %167, i8* %168) #12, !dbg !8195
  %170 = icmp ne i32 %169, 0, !dbg !8196
  br i1 %170, label %171, label %183, !dbg !8197

171:                                              ; preds = %164, %159
  %172 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8198
  %173 = getelementptr inbounds %struct.command_details, %struct.command_details* %172, i32 0, i32 12, !dbg !8201
  %174 = load i8*, i8** %173, align 8, !dbg !8201
  %175 = call i32 @chdir(i8* %174) #13, !dbg !8202
  %176 = icmp ne i32 %175, 0, !dbg !8203
  br i1 %176, label %177, label %182, !dbg !8204

177:                                              ; preds = %171
  %178 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22.198, i64 0, i64 0)) #13, !dbg !8205
  %179 = load %struct.command_details*, %struct.command_details** %4, align 8, !dbg !8207
  %180 = getelementptr inbounds %struct.command_details, %struct.command_details* %179, i32 0, i32 12, !dbg !8208
  %181 = load i8*, i8** %180, align 8, !dbg !8208
  call void (i8*, ...) @warning(i8* %178, i8* %181), !dbg !8209
  br label %199, !dbg !8210

182:                                              ; preds = %171
  br label %183, !dbg !8211

183:                                              ; preds = %182, %164
  br label %184, !dbg !8212

184:                                              ; preds = %183, %154
  call void @llvm.dbg.declare(metadata %struct.timeval* %9, metadata !8213, metadata !DIExpression()), !dbg !8215
  %185 = call i32 @getrlimit(i32 6, %struct.timeval* %9) #13, !dbg !8216
  %186 = icmp eq i32 %185, 0, !dbg !8218
  br i1 %186, label %187, label %198, !dbg !8219

187:                                              ; preds = %184
  %188 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0, !dbg !8220
  %189 = load i64, i64* %188, align 8, !dbg !8220
  %190 = icmp eq i64 %189, -1, !dbg !8223
  br i1 %190, label %191, label %197, !dbg !8224

191:                                              ; preds = %187
  %192 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 1, !dbg !8225
  %193 = load i64, i64* %192, align 8, !dbg !8225
  %194 = icmp eq i64 %193, -1, !dbg !8226
  br i1 %194, label %195, label %197, !dbg !8227

195:                                              ; preds = %191
  %196 = call i32 @setrlimit(i32 6, %struct.timeval* @nproclimit) #13, !dbg !8228
  br label %197, !dbg !8229

197:                                              ; preds = %195, %191, %187
  br label %198, !dbg !8230

198:                                              ; preds = %197, %184
  store i32 1, i32* %7, align 4, !dbg !8231
  br label %199, !dbg !8232

199:                                              ; preds = %198, %177, %146, %120, %92, %76, %51, %34, %17
  call void @llvm.dbg.label(metadata !8233), !dbg !8234
  %200 = load i32, i32* %7, align 4, !dbg !8235
  ret i32 %200, !dbg !8236
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @policy_init_session(%struct.plugin_container* %0, %struct.passwd* %1) #0 !dbg !8237 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.plugin_container*, align 8
  %5 = alloca %struct.passwd*, align 8
  store %struct.plugin_container* %0, %struct.plugin_container** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.plugin_container** %4, metadata !8240, metadata !DIExpression()), !dbg !8241
  store %struct.passwd* %1, %struct.passwd** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.passwd** %5, metadata !8242, metadata !DIExpression()), !dbg !8243
  %6 = load %struct.plugin_container*, %struct.plugin_container** %4, align 8, !dbg !8244
  %7 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %6, i32 0, i32 4, !dbg !8246
  %8 = bitcast %union.anon.9* %7 to %struct.policy_plugin**, !dbg !8247
  %9 = load %struct.policy_plugin*, %struct.policy_plugin** %8, align 8, !dbg !8247
  %10 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %9, i32 0, i32 9, !dbg !8248
  %11 = load i32 (%struct.passwd*)*, i32 (%struct.passwd*)** %10, align 8, !dbg !8248
  %12 = icmp ne i32 (%struct.passwd*)* %11, null, !dbg !8244
  br i1 %12, label %13, label %22, !dbg !8249

13:                                               ; preds = %2
  %14 = load %struct.plugin_container*, %struct.plugin_container** %4, align 8, !dbg !8250
  %15 = getelementptr inbounds %struct.plugin_container, %struct.plugin_container* %14, i32 0, i32 4, !dbg !8251
  %16 = bitcast %union.anon.9* %15 to %struct.policy_plugin**, !dbg !8252
  %17 = load %struct.policy_plugin*, %struct.policy_plugin** %16, align 8, !dbg !8252
  %18 = getelementptr inbounds %struct.policy_plugin, %struct.policy_plugin* %17, i32 0, i32 9, !dbg !8253
  %19 = load i32 (%struct.passwd*)*, i32 (%struct.passwd*)** %18, align 8, !dbg !8253
  %20 = load %struct.passwd*, %struct.passwd** %5, align 8, !dbg !8254
  %21 = call i32 %19(%struct.passwd* %20), !dbg !8250
  store i32 %21, i32* %3, align 4, !dbg !8255
  br label %23, !dbg !8255

22:                                               ; preds = %2
  store i32 1, i32* %3, align 4, !dbg !8256
  br label %23, !dbg !8256

23:                                               ; preds = %22, %13
  %24 = load i32, i32* %3, align 4, !dbg !8257
  ret i32 %24, !dbg !8257
}

; Function Attrs: nounwind
declare dso_local i32 @setegid(i32) #4

; Function Attrs: nounwind
declare dso_local i32 @setgid(i32) #4

; Function Attrs: nounwind
declare dso_local i32 @setpriority(i32, i32, i32) #4

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #4

; Function Attrs: nounwind
declare dso_local i32 @chroot(i8*) #4

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @disable_execute(%struct.command_details* %0) #0 !dbg !8258 {
  %2 = alloca %struct.command_details*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.command_details* %0, %struct.command_details** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %2, metadata !8261, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8263, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !8265, metadata !DIExpression()), !dbg !8266
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !8267, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8269, metadata !DIExpression()), !dbg !8270
  store i32 0, i32* %6, align 4, !dbg !8270
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8271, metadata !DIExpression()), !dbg !8272
  store i32 128, i32* %7, align 4, !dbg !8272
  %8 = load i32, i32* %7, align 4, !dbg !8273
  %9 = sext i32 %8 to i64, !dbg !8273
  %10 = call i8* @emalloc2(i64 %9, i64 8), !dbg !8274
  %11 = bitcast i8* %10 to i8**, !dbg !8274
  store i8** %11, i8*** %5, align 8, !dbg !8275
  %12 = load %struct.command_details*, %struct.command_details** %2, align 8, !dbg !8276
  %13 = getelementptr inbounds %struct.command_details, %struct.command_details* %12, i32 0, i32 19, !dbg !8278
  %14 = load i8**, i8*** %13, align 8, !dbg !8278
  store i8** %14, i8*** %4, align 8, !dbg !8279
  br label %15, !dbg !8280

15:                                               ; preds = %47, %1
  %16 = load i8**, i8*** %4, align 8, !dbg !8281
  %17 = load i8*, i8** %16, align 8, !dbg !8283
  %18 = icmp ne i8* %17, null, !dbg !8284
  br i1 %18, label %19, label %50, !dbg !8285

19:                                               ; preds = %15
  %20 = load i32, i32* %6, align 4, !dbg !8286
  %21 = add nsw i32 %20, 2, !dbg !8289
  %22 = load i32, i32* %7, align 4, !dbg !8290
  %23 = icmp sgt i32 %21, %22, !dbg !8291
  br i1 %23, label %24, label %33, !dbg !8292

24:                                               ; preds = %19
  %25 = load i32, i32* %7, align 4, !dbg !8293
  %26 = add nsw i32 %25, 128, !dbg !8293
  store i32 %26, i32* %7, align 4, !dbg !8293
  %27 = load i8**, i8*** %5, align 8, !dbg !8295
  %28 = bitcast i8** %27 to i8*, !dbg !8295
  %29 = load i32, i32* %7, align 4, !dbg !8296
  %30 = sext i32 %29 to i64, !dbg !8296
  %31 = call i8* @erealloc3(i8* %28, i64 %30, i64 8), !dbg !8297
  %32 = bitcast i8* %31 to i8**, !dbg !8297
  store i8** %32, i8*** %5, align 8, !dbg !8298
  br label %33, !dbg !8299

33:                                               ; preds = %24, %19
  %34 = load i8**, i8*** %4, align 8, !dbg !8300
  %35 = load i8*, i8** %34, align 8, !dbg !8302
  %36 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74.199, i64 0, i64 0), i64 11) #12, !dbg !8303
  %37 = icmp eq i32 %36, 0, !dbg !8304
  br i1 %37, label %38, label %39, !dbg !8305

38:                                               ; preds = %33
  br label %47, !dbg !8306

39:                                               ; preds = %33
  %40 = load i8**, i8*** %4, align 8, !dbg !8307
  %41 = load i8*, i8** %40, align 8, !dbg !8308
  %42 = load i8**, i8*** %5, align 8, !dbg !8309
  %43 = load i32, i32* %6, align 4, !dbg !8310
  %44 = add nsw i32 %43, 1, !dbg !8310
  store i32 %44, i32* %6, align 4, !dbg !8310
  %45 = sext i32 %43 to i64, !dbg !8309
  %46 = getelementptr inbounds i8*, i8** %42, i64 %45, !dbg !8309
  store i8* %41, i8** %46, align 8, !dbg !8311
  br label %47, !dbg !8312

47:                                               ; preds = %39, %38
  %48 = load i8**, i8*** %4, align 8, !dbg !8313
  %49 = getelementptr inbounds i8*, i8** %48, i32 1, !dbg !8313
  store i8** %49, i8*** %4, align 8, !dbg !8313
  br label %15, !dbg !8314, !llvm.loop !8315

50:                                               ; preds = %15
  %51 = load i8*, i8** @noexec_path, align 8, !dbg !8317
  %52 = call i8* @fmt_string(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75.200, i64 0, i64 0), i8* %51), !dbg !8318
  store i8* %52, i8** %3, align 8, !dbg !8319
  %53 = load i8*, i8** %3, align 8, !dbg !8320
  %54 = icmp eq i8* %53, null, !dbg !8322
  br i1 %54, label %55, label %56, !dbg !8323

55:                                               ; preds = %50
  call void (i32, i8*, ...) @error(i32 1, i8* null) #16, !dbg !8324
  unreachable, !dbg !8324

56:                                               ; preds = %50
  %57 = load i8*, i8** %3, align 8, !dbg !8325
  %58 = load i8**, i8*** %5, align 8, !dbg !8326
  %59 = load i32, i32* %6, align 4, !dbg !8327
  %60 = add nsw i32 %59, 1, !dbg !8327
  store i32 %60, i32* %6, align 4, !dbg !8327
  %61 = sext i32 %59 to i64, !dbg !8326
  %62 = getelementptr inbounds i8*, i8** %58, i64 %61, !dbg !8326
  store i8* %57, i8** %62, align 8, !dbg !8328
  %63 = load i8**, i8*** %5, align 8, !dbg !8329
  %64 = load i32, i32* %6, align 4, !dbg !8330
  %65 = sext i32 %64 to i64, !dbg !8329
  %66 = getelementptr inbounds i8*, i8** %63, i64 %65, !dbg !8329
  store i8* null, i8** %66, align 8, !dbg !8331
  %67 = load i8**, i8*** %5, align 8, !dbg !8332
  %68 = load %struct.command_details*, %struct.command_details** %2, align 8, !dbg !8333
  %69 = getelementptr inbounds %struct.command_details, %struct.command_details* %68, i32 0, i32 19, !dbg !8334
  store i8** %67, i8*** %69, align 8, !dbg !8335
  ret void, !dbg !8336
}

; Function Attrs: nounwind
declare dso_local i32 @setresuid(i32, i32, i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sudo_edit(%struct.command_details* %0) #0 !dbg !8337 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.command_details*, align 8
  %4 = alloca %struct.command_details, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i8**, align 8
  %13 = alloca [8192 x i8], align 16
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %struct.stat, align 8
  %26 = alloca %struct.timeval, align 8
  %27 = alloca %struct.timeval, align 8
  %28 = alloca %struct.timeval, align 8
  %29 = alloca %struct.tempfile*, align 8
  store %struct.command_details* %0, %struct.command_details** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.command_details** %3, metadata !8364, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.declare(metadata %struct.command_details* %4, metadata !8366, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.declare(metadata i64* %5, metadata !8368, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.declare(metadata i64* %6, metadata !8370, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.declare(metadata i8** %7, metadata !8372, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8374, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.declare(metadata i8** %9, metadata !8376, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !8378, metadata !DIExpression()), !dbg !8379
  call void @llvm.dbg.declare(metadata i8*** %11, metadata !8380, metadata !DIExpression()), !dbg !8381
  call void @llvm.dbg.declare(metadata i8*** %12, metadata !8382, metadata !DIExpression()), !dbg !8383
  store i8** null, i8*** %12, align 8, !dbg !8383
  call void @llvm.dbg.declare(metadata [8192 x i8]* %13, metadata !8384, metadata !DIExpression()), !dbg !8388
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8389, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.declare(metadata i32* %15, metadata !8391, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.declare(metadata i32* %16, metadata !8393, metadata !DIExpression()), !dbg !8394
  call void @llvm.dbg.declare(metadata i32* %17, metadata !8395, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.declare(metadata i32* %18, metadata !8397, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.declare(metadata i32* %19, metadata !8399, metadata !DIExpression()), !dbg !8400
  call void @llvm.dbg.declare(metadata i32* %20, metadata !8401, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.declare(metadata i32* %21, metadata !8403, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.declare(metadata i32* %22, metadata !8405, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.declare(metadata i32* %23, metadata !8407, metadata !DIExpression()), !dbg !8408
  store i32 0, i32* %23, align 4, !dbg !8408
  call void @llvm.dbg.declare(metadata i32* %24, metadata !8409, metadata !DIExpression()), !dbg !8410
  store i32 0, i32* %24, align 4, !dbg !8410
  call void @llvm.dbg.declare(metadata %struct.stat* %25, metadata !8411, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.declare(metadata %struct.timeval* %26, metadata !8434, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.declare(metadata %struct.timeval* %27, metadata !8440, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.declare(metadata %struct.timeval* %28, metadata !8442, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.declare(metadata %struct.tempfile** %29, metadata !8444, metadata !DIExpression()), !dbg !8453
  %30 = call i32 @setuid(i32 0) #13, !dbg !8454
  %31 = icmp ne i32 %30, 0, !dbg !8456
  br i1 %31, label %32, label %34, !dbg !8457

32:                                               ; preds = %1
  %33 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.203, i64 0, i64 0)) #13, !dbg !8458
  call void (i8*, ...) @warning(i8* %33, i32 0), !dbg !8460
  store i32 1, i32* %2, align 4, !dbg !8461
  br label %792, !dbg !8461

34:                                               ; preds = %1
  %35 = call i32 @stat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.204, i64 0, i64 0), %struct.stat* %25) #13, !dbg !8462
  %36 = icmp eq i32 %35, 0, !dbg !8464
  br i1 %36, label %37, label %43, !dbg !8465

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 3, !dbg !8466
  %39 = load i32, i32* %38, align 8, !dbg !8466
  %40 = and i32 %39, 61440, !dbg !8466
  %41 = icmp eq i32 %40, 16384, !dbg !8466
  br i1 %41, label %42, label %43, !dbg !8467

42:                                               ; preds = %37
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.204, i64 0, i64 0), i8** %7, align 8, !dbg !8468
  br label %54, !dbg !8469

43:                                               ; preds = %37, %34
  %44 = call i32 @stat(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.205, i64 0, i64 0), %struct.stat* %25) #13, !dbg !8470
  %45 = icmp eq i32 %44, 0, !dbg !8472
  br i1 %45, label %46, label %52, !dbg !8473

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 3, !dbg !8474
  %48 = load i32, i32* %47, align 8, !dbg !8474
  %49 = and i32 %48, 61440, !dbg !8474
  %50 = icmp eq i32 %49, 16384, !dbg !8474
  br i1 %50, label %51, label %52, !dbg !8475

51:                                               ; preds = %46
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.205, i64 0, i64 0), i8** %7, align 8, !dbg !8476
  br label %53, !dbg !8477

52:                                               ; preds = %46, %43
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.206, i64 0, i64 0), i8** %7, align 8, !dbg !8478
  br label %53

53:                                               ; preds = %52, %51
  br label %54

54:                                               ; preds = %53, %42
  %55 = load i8*, i8** %7, align 8, !dbg !8479
  %56 = call i64 @strlen(i8* %55) #12, !dbg !8480
  %57 = trunc i64 %56 to i32, !dbg !8480
  store i32 %57, i32* %22, align 4, !dbg !8481
  br label %58, !dbg !8482

58:                                               ; preds = %72, %54
  %59 = load i32, i32* %22, align 4, !dbg !8483
  %60 = icmp sgt i32 %59, 0, !dbg !8484
  br i1 %60, label %61, label %70, !dbg !8485

61:                                               ; preds = %58
  %62 = load i8*, i8** %7, align 8, !dbg !8486
  %63 = load i32, i32* %22, align 4, !dbg !8487
  %64 = sub nsw i32 %63, 1, !dbg !8488
  %65 = sext i32 %64 to i64, !dbg !8486
  %66 = getelementptr inbounds i8, i8* %62, i64 %65, !dbg !8486
  %67 = load i8, i8* %66, align 1, !dbg !8486
  %68 = sext i8 %67 to i32, !dbg !8486
  %69 = icmp eq i32 %68, 47, !dbg !8489
  br label %70

70:                                               ; preds = %61, %58
  %71 = phi i1 [ false, %58 ], [ %69, %61 ], !dbg !8490
  br i1 %71, label %72, label %75, !dbg !8482

72:                                               ; preds = %70
  %73 = load i32, i32* %22, align 4, !dbg !8491
  %74 = add nsw i32 %73, -1, !dbg !8491
  store i32 %74, i32* %22, align 4, !dbg !8491
  br label %58, !dbg !8482, !llvm.loop !8492

75:                                               ; preds = %70
  %76 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !8493
  %77 = getelementptr inbounds %struct.command_details, %struct.command_details* %76, i32 0, i32 18, !dbg !8495
  %78 = load i8**, i8*** %77, align 8, !dbg !8495
  store i8** %78, i8*** %11, align 8, !dbg !8496
  br label %79, !dbg !8497

79:                                               ; preds = %102, %75
  %80 = load i8**, i8*** %11, align 8, !dbg !8498
  %81 = load i8*, i8** %80, align 8, !dbg !8500
  %82 = icmp ne i8* %81, null, !dbg !8501
  br i1 %82, label %83, label %105, !dbg !8502

83:                                               ; preds = %79
  %84 = load i8**, i8*** %12, align 8, !dbg !8503
  %85 = icmp ne i8** %84, null, !dbg !8503
  br i1 %85, label %86, label %89, !dbg !8506

86:                                               ; preds = %83
  %87 = load i32, i32* %24, align 4, !dbg !8507
  %88 = add nsw i32 %87, 1, !dbg !8507
  store i32 %88, i32* %24, align 4, !dbg !8507
  br label %101, !dbg !8508

89:                                               ; preds = %83
  %90 = load i8**, i8*** %11, align 8, !dbg !8509
  %91 = load i8*, i8** %90, align 8, !dbg !8511
  %92 = call i32 @strcmp(i8* %91, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.207, i64 0, i64 0)) #12, !dbg !8512
  %93 = icmp eq i32 %92, 0, !dbg !8513
  br i1 %93, label %94, label %97, !dbg !8514

94:                                               ; preds = %89
  %95 = load i8**, i8*** %11, align 8, !dbg !8515
  %96 = getelementptr inbounds i8*, i8** %95, i64 1, !dbg !8516
  store i8** %96, i8*** %12, align 8, !dbg !8517
  br label %100, !dbg !8518

97:                                               ; preds = %89
  %98 = load i32, i32* %23, align 4, !dbg !8519
  %99 = add nsw i32 %98, 1, !dbg !8519
  store i32 %99, i32* %23, align 4, !dbg !8519
  br label %100

100:                                              ; preds = %97, %94
  br label %101

101:                                              ; preds = %100, %86
  br label %102, !dbg !8520

102:                                              ; preds = %101
  %103 = load i8**, i8*** %11, align 8, !dbg !8521
  %104 = getelementptr inbounds i8*, i8** %103, i32 1, !dbg !8521
  store i8** %104, i8*** %11, align 8, !dbg !8521
  br label %79, !dbg !8522, !llvm.loop !8523

105:                                              ; preds = %79
  %106 = load i32, i32* %24, align 4, !dbg !8525
  %107 = icmp eq i32 %106, 0, !dbg !8527
  br i1 %107, label %108, label %110, !dbg !8528

108:                                              ; preds = %105
  %109 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5.208, i64 0, i64 0)) #13, !dbg !8529
  call void (i8*, ...) @warningx(i8* %109), !dbg !8531
  store i32 1, i32* %2, align 4, !dbg !8532
  br label %792, !dbg !8532

110:                                              ; preds = %105
  %111 = load i32, i32* %24, align 4, !dbg !8533
  %112 = sext i32 %111 to i64, !dbg !8533
  %113 = call i8* @emalloc2(i64 %112, i64 40), !dbg !8534
  %114 = bitcast i8* %113 to %struct.tempfile*, !dbg !8534
  store %struct.tempfile* %114, %struct.tempfile** %29, align 8, !dbg !8535
  %115 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8536
  %116 = bitcast %struct.tempfile* %115 to i8*, !dbg !8536
  %117 = load i32, i32* %24, align 4, !dbg !8537
  %118 = sext i32 %117 to i64, !dbg !8537
  %119 = mul i64 %118, 40, !dbg !8538
  call void @zero_bytes(i8* %116, i64 %119), !dbg !8539
  store i32 0, i32* %15, align 4, !dbg !8540
  store i32 0, i32* %16, align 4, !dbg !8542
  br label %120, !dbg !8543

120:                                              ; preds = %391, %110
  %121 = load i32, i32* %15, align 4, !dbg !8544
  %122 = load i32, i32* %24, align 4, !dbg !8546
  %123 = icmp slt i32 %121, %122, !dbg !8547
  br i1 %123, label %124, label %394, !dbg !8548

124:                                              ; preds = %120
  store i32 -1, i32* %14, align 4, !dbg !8549
  %125 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !8551
  %126 = getelementptr inbounds %struct.command_details, %struct.command_details* %125, i32 0, i32 1, !dbg !8552
  %127 = load i32, i32* %126, align 4, !dbg !8552
  %128 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !8553
  %129 = getelementptr inbounds %struct.command_details, %struct.command_details* %128, i32 0, i32 3, !dbg !8554
  %130 = load i32, i32* %129, align 4, !dbg !8554
  %131 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !8555
  %132 = getelementptr inbounds %struct.command_details, %struct.command_details* %131, i32 0, i32 7, !dbg !8556
  %133 = load i32, i32* %132, align 4, !dbg !8556
  %134 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !8557
  %135 = getelementptr inbounds %struct.command_details, %struct.command_details* %134, i32 0, i32 10, !dbg !8558
  %136 = load i32*, i32** %135, align 8, !dbg !8558
  call void @switch_user(i32 %127, i32 %130, i32 %133, i32* %136), !dbg !8559
  %137 = load i8**, i8*** %12, align 8, !dbg !8560
  %138 = load i32, i32* %15, align 4, !dbg !8562
  %139 = sext i32 %138 to i64, !dbg !8560
  %140 = getelementptr inbounds i8*, i8** %137, i64 %139, !dbg !8560
  %141 = load i8*, i8** %140, align 8, !dbg !8560
  %142 = call i32 (i8*, i32, ...) @open(i8* %141, i32 0, i32 420), !dbg !8563
  store i32 %142, i32* %18, align 4, !dbg !8564
  %143 = icmp ne i32 %142, -1, !dbg !8565
  br i1 %143, label %148, label %144, !dbg !8566

144:                                              ; preds = %124
  %145 = call i32* @__errno_location() #14, !dbg !8567
  %146 = load i32, i32* %145, align 4, !dbg !8567
  %147 = icmp eq i32 %146, 2, !dbg !8568
  br i1 %147, label %148, label %157, !dbg !8569

148:                                              ; preds = %144, %124
  %149 = load i32, i32* %18, align 4, !dbg !8570
  %150 = icmp eq i32 %149, -1, !dbg !8573
  br i1 %150, label %151, label %153, !dbg !8574

151:                                              ; preds = %148
  %152 = bitcast %struct.stat* %25 to i8*, !dbg !8575
  call void @zero_bytes(i8* %152, i64 144), !dbg !8577
  store i32 0, i32* %14, align 4, !dbg !8578
  br label %156, !dbg !8579

153:                                              ; preds = %148
  %154 = load i32, i32* %18, align 4, !dbg !8580
  %155 = call i32 @fstat(i32 %154, %struct.stat* %25) #13, !dbg !8582
  store i32 %155, i32* %14, align 4, !dbg !8583
  br label %156

156:                                              ; preds = %153, %151
  br label %157, !dbg !8584

157:                                              ; preds = %156, %144
  %158 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 3), align 4, !dbg !8585
  %159 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 10), align 8, !dbg !8586
  %160 = load i32*, i32** getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 9), align 8, !dbg !8587
  call void @switch_user(i32 0, i32 %158, i32 %159, i32* %160), !dbg !8588
  %161 = load i32, i32* %14, align 4, !dbg !8589
  %162 = icmp ne i32 %161, 0, !dbg !8589
  br i1 %162, label %171, label %163, !dbg !8591

163:                                              ; preds = %157
  %164 = load i32, i32* %18, align 4, !dbg !8592
  %165 = icmp ne i32 %164, -1, !dbg !8593
  br i1 %165, label %166, label %194, !dbg !8594

166:                                              ; preds = %163
  %167 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 3, !dbg !8595
  %168 = load i32, i32* %167, align 8, !dbg !8595
  %169 = and i32 %168, 61440, !dbg !8595
  %170 = icmp eq i32 %169, 32768, !dbg !8595
  br i1 %170, label %194, label %171, !dbg !8596

171:                                              ; preds = %166, %157
  %172 = load i32, i32* %14, align 4, !dbg !8597
  %173 = icmp ne i32 %172, 0, !dbg !8597
  br i1 %173, label %174, label %180, !dbg !8600

174:                                              ; preds = %171
  %175 = load i8**, i8*** %12, align 8, !dbg !8601
  %176 = load i32, i32* %15, align 4, !dbg !8602
  %177 = sext i32 %176 to i64, !dbg !8601
  %178 = getelementptr inbounds i8*, i8** %175, i64 %177, !dbg !8601
  %179 = load i8*, i8** %178, align 8, !dbg !8601
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.209, i64 0, i64 0), i8* %179), !dbg !8603
  br label %187, !dbg !8603

180:                                              ; preds = %171
  %181 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.210, i64 0, i64 0)) #13, !dbg !8604
  %182 = load i8**, i8*** %12, align 8, !dbg !8605
  %183 = load i32, i32* %15, align 4, !dbg !8606
  %184 = sext i32 %183 to i64, !dbg !8605
  %185 = getelementptr inbounds i8*, i8** %182, i64 %184, !dbg !8605
  %186 = load i8*, i8** %185, align 8, !dbg !8605
  call void (i8*, ...) @warningx(i8* %181, i8* %186), !dbg !8607
  br label %187

187:                                              ; preds = %180, %174
  %188 = load i32, i32* %18, align 4, !dbg !8608
  %189 = icmp ne i32 %188, -1, !dbg !8610
  br i1 %189, label %190, label %193, !dbg !8611

190:                                              ; preds = %187
  %191 = load i32, i32* %18, align 4, !dbg !8612
  %192 = call i32 @close(i32 %191), !dbg !8613
  br label %193, !dbg !8613

193:                                              ; preds = %190, %187
  br label %391, !dbg !8614

194:                                              ; preds = %166, %163
  %195 = load i8**, i8*** %12, align 8, !dbg !8615
  %196 = load i32, i32* %15, align 4, !dbg !8616
  %197 = sext i32 %196 to i64, !dbg !8615
  %198 = getelementptr inbounds i8*, i8** %195, i64 %197, !dbg !8615
  %199 = load i8*, i8** %198, align 8, !dbg !8615
  %200 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8617
  %201 = load i32, i32* %16, align 4, !dbg !8618
  %202 = sext i32 %201 to i64, !dbg !8617
  %203 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %200, i64 %202, !dbg !8617
  %204 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %203, i32 0, i32 1, !dbg !8619
  store i8* %199, i8** %204, align 8, !dbg !8620
  %205 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 8, !dbg !8621
  %206 = load i64, i64* %205, align 8, !dbg !8621
  %207 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8622
  %208 = load i32, i32* %16, align 4, !dbg !8623
  %209 = sext i32 %208 to i64, !dbg !8622
  %210 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %207, i64 %209, !dbg !8622
  %211 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %210, i32 0, i32 3, !dbg !8624
  store i64 %206, i64* %211, align 8, !dbg !8625
  br label %212, !dbg !8626

212:                                              ; preds = %194
  %213 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 12, !dbg !8627
  %214 = getelementptr inbounds %struct.timeval, %struct.timeval* %213, i32 0, i32 0, !dbg !8627
  %215 = load i64, i64* %214, align 8, !dbg !8627
  %216 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8627
  %217 = load i32, i32* %16, align 4, !dbg !8627
  %218 = sext i32 %217 to i64, !dbg !8627
  %219 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %216, i64 %218, !dbg !8627
  %220 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %219, i32 0, i32 2, !dbg !8627
  %221 = getelementptr inbounds %struct.timeval, %struct.timeval* %220, i32 0, i32 0, !dbg !8627
  store i64 %215, i64* %221, align 8, !dbg !8627
  %222 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 12, !dbg !8627
  %223 = getelementptr inbounds %struct.timeval, %struct.timeval* %222, i32 0, i32 1, !dbg !8627
  %224 = load i64, i64* %223, align 8, !dbg !8627
  %225 = sdiv i64 %224, 1000, !dbg !8627
  %226 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8627
  %227 = load i32, i32* %16, align 4, !dbg !8627
  %228 = sext i32 %227 to i64, !dbg !8627
  %229 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %226, i64 %228, !dbg !8627
  %230 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %229, i32 0, i32 2, !dbg !8627
  %231 = getelementptr inbounds %struct.timeval, %struct.timeval* %230, i32 0, i32 1, !dbg !8627
  store i64 %225, i64* %231, align 8, !dbg !8627
  br label %232, !dbg !8627

232:                                              ; preds = %212
  %233 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8629
  %234 = load i32, i32* %16, align 4, !dbg !8631
  %235 = sext i32 %234 to i64, !dbg !8629
  %236 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %233, i64 %235, !dbg !8629
  %237 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %236, i32 0, i32 1, !dbg !8632
  %238 = load i8*, i8** %237, align 8, !dbg !8632
  %239 = call i8* @strrchr(i8* %238, i32 47) #12, !dbg !8633
  store i8* %239, i8** %8, align 8, !dbg !8634
  %240 = icmp ne i8* %239, null, !dbg !8635
  br i1 %240, label %241, label %244, !dbg !8636

241:                                              ; preds = %232
  %242 = load i8*, i8** %8, align 8, !dbg !8637
  %243 = getelementptr inbounds i8, i8* %242, i32 1, !dbg !8637
  store i8* %243, i8** %8, align 8, !dbg !8637
  br label %251, !dbg !8638

244:                                              ; preds = %232
  %245 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8639
  %246 = load i32, i32* %16, align 4, !dbg !8640
  %247 = sext i32 %246 to i64, !dbg !8639
  %248 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %245, i64 %247, !dbg !8639
  %249 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %248, i32 0, i32 1, !dbg !8641
  %250 = load i8*, i8** %249, align 8, !dbg !8641
  store i8* %250, i8** %8, align 8, !dbg !8642
  br label %251

251:                                              ; preds = %244, %241
  %252 = load i8*, i8** %8, align 8, !dbg !8643
  %253 = call i8* @strrchr(i8* %252, i32 46) #12, !dbg !8644
  store i8* %253, i8** %9, align 8, !dbg !8645
  %254 = load i8*, i8** %9, align 8, !dbg !8646
  %255 = icmp ne i8* %254, null, !dbg !8648
  br i1 %255, label %256, label %273, !dbg !8649

256:                                              ; preds = %251
  %257 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8650
  %258 = load i32, i32* %16, align 4, !dbg !8652
  %259 = sext i32 %258 to i64, !dbg !8650
  %260 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %257, i64 %259, !dbg !8650
  %261 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %260, i32 0, i32 0, !dbg !8653
  %262 = load i32, i32* %22, align 4, !dbg !8654
  %263 = load i8*, i8** %7, align 8, !dbg !8655
  %264 = load i8*, i8** %9, align 8, !dbg !8656
  %265 = load i8*, i8** %8, align 8, !dbg !8657
  %266 = ptrtoint i8* %264 to i64, !dbg !8658
  %267 = ptrtoint i8* %265 to i64, !dbg !8658
  %268 = sub i64 %266, %267, !dbg !8658
  %269 = trunc i64 %268 to i32, !dbg !8659
  %270 = load i8*, i8** %8, align 8, !dbg !8660
  %271 = load i8*, i8** %9, align 8, !dbg !8661
  %272 = call i32 (i8**, i8*, ...) @easprintf(i8** %261, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.211, i64 0, i64 0), i32 %262, i8* %263, i32 %269, i8* %270, i8* %271), !dbg !8662
  br label %283, !dbg !8663

273:                                              ; preds = %251
  %274 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8664
  %275 = load i32, i32* %16, align 4, !dbg !8666
  %276 = sext i32 %275 to i64, !dbg !8664
  %277 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %274, i64 %276, !dbg !8664
  %278 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %277, i32 0, i32 0, !dbg !8667
  %279 = load i32, i32* %22, align 4, !dbg !8668
  %280 = load i8*, i8** %7, align 8, !dbg !8669
  %281 = load i8*, i8** %8, align 8, !dbg !8670
  %282 = call i32 (i8**, i8*, ...) @easprintf(i8** %278, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9.212, i64 0, i64 0), i32 %279, i8* %280, i8* %281), !dbg !8671
  br label %283

283:                                              ; preds = %273, %256
  %284 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !8672
  %285 = call i32 @seteuid(i32 %284) #13, !dbg !8674
  %286 = icmp ne i32 %285, 0, !dbg !8675
  br i1 %286, label %287, label %289, !dbg !8676

287:                                              ; preds = %283
  %288 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !8677
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.213, i64 0, i64 0), i32 %288) #16, !dbg !8678
  unreachable, !dbg !8678

289:                                              ; preds = %283
  %290 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8679
  %291 = load i32, i32* %16, align 4, !dbg !8680
  %292 = sext i32 %291 to i64, !dbg !8679
  %293 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %290, i64 %292, !dbg !8679
  %294 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %293, i32 0, i32 0, !dbg !8681
  %295 = load i8*, i8** %294, align 8, !dbg !8681
  %296 = load i8*, i8** %9, align 8, !dbg !8682
  %297 = icmp ne i8* %296, null, !dbg !8682
  br i1 %297, label %298, label %301, !dbg !8682

298:                                              ; preds = %289
  %299 = load i8*, i8** %9, align 8, !dbg !8683
  %300 = call i64 @strlen(i8* %299) #12, !dbg !8684
  br label %302, !dbg !8682

301:                                              ; preds = %289
  br label %302, !dbg !8682

302:                                              ; preds = %301, %298
  %303 = phi i64 [ %300, %298 ], [ 0, %301 ], !dbg !8682
  %304 = trunc i64 %303 to i32, !dbg !8682
  %305 = call i32 @mkstemps(i8* %295, i32 %304), !dbg !8685
  store i32 %305, i32* %19, align 4, !dbg !8686
  %306 = call i32 @seteuid(i32 0) #13, !dbg !8687
  %307 = icmp ne i32 %306, 0, !dbg !8689
  br i1 %307, label %308, label %309, !dbg !8690

308:                                              ; preds = %302
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.214, i64 0, i64 0)) #16, !dbg !8691
  unreachable, !dbg !8691

309:                                              ; preds = %302
  %310 = load i32, i32* %19, align 4, !dbg !8692
  %311 = icmp eq i32 %310, -1, !dbg !8694
  br i1 %311, label %312, label %313, !dbg !8695

312:                                              ; preds = %309
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12.215, i64 0, i64 0)), !dbg !8696
  br label %766, !dbg !8698

313:                                              ; preds = %309
  %314 = load i32, i32* %18, align 4, !dbg !8699
  %315 = icmp ne i32 %314, -1, !dbg !8701
  br i1 %315, label %316, label %352, !dbg !8702

316:                                              ; preds = %313
  br label %317, !dbg !8703

317:                                              ; preds = %348, %316
  %318 = load i32, i32* %18, align 4, !dbg !8705
  %319 = getelementptr inbounds [8192 x i8], [8192 x i8]* %13, i64 0, i64 0, !dbg !8706
  %320 = call i64 @read(i32 %318, i8* %319, i64 8192), !dbg !8707
  store i64 %320, i64* %5, align 8, !dbg !8708
  %321 = icmp ne i64 %320, 0, !dbg !8709
  br i1 %321, label %322, label %349, !dbg !8703

322:                                              ; preds = %317
  %323 = load i32, i32* %19, align 4, !dbg !8710
  %324 = getelementptr inbounds [8192 x i8], [8192 x i8]* %13, i64 0, i64 0, !dbg !8713
  %325 = load i64, i64* %5, align 8, !dbg !8714
  %326 = call i64 @write(i32 %323, i8* %324, i64 %325), !dbg !8715
  store i64 %326, i64* %6, align 8, !dbg !8716
  %327 = load i64, i64* %5, align 8, !dbg !8717
  %328 = icmp ne i64 %326, %327, !dbg !8718
  br i1 %328, label %329, label %348, !dbg !8719

329:                                              ; preds = %322
  %330 = load i64, i64* %6, align 8, !dbg !8720
  %331 = icmp eq i64 %330, -1, !dbg !8723
  br i1 %331, label %332, label %339, !dbg !8724

332:                                              ; preds = %329
  %333 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8725
  %334 = load i32, i32* %16, align 4, !dbg !8726
  %335 = sext i32 %334 to i64, !dbg !8725
  %336 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %333, i64 %335, !dbg !8725
  %337 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %336, i32 0, i32 0, !dbg !8727
  %338 = load i8*, i8** %337, align 8, !dbg !8727
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.209, i64 0, i64 0), i8* %338), !dbg !8728
  br label %347, !dbg !8728

339:                                              ; preds = %329
  %340 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13.216, i64 0, i64 0)) #13, !dbg !8729
  %341 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8730
  %342 = load i32, i32* %16, align 4, !dbg !8731
  %343 = sext i32 %342 to i64, !dbg !8730
  %344 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %341, i64 %343, !dbg !8730
  %345 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %344, i32 0, i32 0, !dbg !8732
  %346 = load i8*, i8** %345, align 8, !dbg !8732
  call void (i8*, ...) @warningx(i8* %340, i8* %346), !dbg !8733
  br label %347

347:                                              ; preds = %339, %332
  br label %766, !dbg !8734

348:                                              ; preds = %322
  br label %317, !dbg !8703, !llvm.loop !8735

349:                                              ; preds = %317
  %350 = load i32, i32* %18, align 4, !dbg !8737
  %351 = call i32 @close(i32 %350), !dbg !8738
  br label %352, !dbg !8739

352:                                              ; preds = %349, %313
  %353 = load i32, i32* %19, align 4, !dbg !8740
  %354 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8741
  %355 = load i32, i32* %16, align 4, !dbg !8742
  %356 = sext i32 %355 to i64, !dbg !8741
  %357 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %354, i64 %356, !dbg !8741
  %358 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %357, i32 0, i32 2, !dbg !8743
  %359 = call i32 @touch(i32 %353, i8* null, %struct.timeval* %358), !dbg !8744
  %360 = load i32, i32* %19, align 4, !dbg !8745
  %361 = call i32 @fstat(i32 %360, %struct.stat* %25) #13, !dbg !8746
  store i32 %361, i32* %14, align 4, !dbg !8747
  %362 = load i32, i32* %14, align 4, !dbg !8748
  %363 = icmp ne i32 %362, 0, !dbg !8748
  br i1 %363, label %386, label %364, !dbg !8750

364:                                              ; preds = %352
  br label %365, !dbg !8751

365:                                              ; preds = %364
  %366 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 12, !dbg !8752
  %367 = getelementptr inbounds %struct.timeval, %struct.timeval* %366, i32 0, i32 0, !dbg !8752
  %368 = load i64, i64* %367, align 8, !dbg !8752
  %369 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8752
  %370 = load i32, i32* %16, align 4, !dbg !8752
  %371 = sext i32 %370 to i64, !dbg !8752
  %372 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %369, i64 %371, !dbg !8752
  %373 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %372, i32 0, i32 2, !dbg !8752
  %374 = getelementptr inbounds %struct.timeval, %struct.timeval* %373, i32 0, i32 0, !dbg !8752
  store i64 %368, i64* %374, align 8, !dbg !8752
  %375 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 12, !dbg !8752
  %376 = getelementptr inbounds %struct.timeval, %struct.timeval* %375, i32 0, i32 1, !dbg !8752
  %377 = load i64, i64* %376, align 8, !dbg !8752
  %378 = sdiv i64 %377, 1000, !dbg !8752
  %379 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8752
  %380 = load i32, i32* %16, align 4, !dbg !8752
  %381 = sext i32 %380 to i64, !dbg !8752
  %382 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %379, i64 %381, !dbg !8752
  %383 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %382, i32 0, i32 2, !dbg !8752
  %384 = getelementptr inbounds %struct.timeval, %struct.timeval* %383, i32 0, i32 1, !dbg !8752
  store i64 %378, i64* %384, align 8, !dbg !8752
  br label %385, !dbg !8752

385:                                              ; preds = %365
  br label %386, !dbg !8752

386:                                              ; preds = %385, %352
  %387 = load i32, i32* %19, align 4, !dbg !8754
  %388 = call i32 @close(i32 %387), !dbg !8755
  %389 = load i32, i32* %16, align 4, !dbg !8756
  %390 = add nsw i32 %389, 1, !dbg !8756
  store i32 %390, i32* %16, align 4, !dbg !8756
  br label %391, !dbg !8757

391:                                              ; preds = %386, %193
  %392 = load i32, i32* %15, align 4, !dbg !8758
  %393 = add nsw i32 %392, 1, !dbg !8758
  store i32 %393, i32* %15, align 4, !dbg !8758
  br label %120, !dbg !8759, !llvm.loop !8760

394:                                              ; preds = %120
  %395 = load i32, i32* %16, align 4, !dbg !8762
  store i32 %395, i32* %24, align 4, !dbg !8764
  %396 = icmp eq i32 %395, 0, !dbg !8765
  br i1 %396, label %397, label %398, !dbg !8766

397:                                              ; preds = %394
  store i32 1, i32* %2, align 4, !dbg !8767
  br label %792, !dbg !8767

398:                                              ; preds = %394
  %399 = load i32, i32* %23, align 4, !dbg !8768
  %400 = load i32, i32* %24, align 4, !dbg !8769
  %401 = add nsw i32 %399, %400, !dbg !8770
  store i32 %401, i32* %20, align 4, !dbg !8771
  %402 = load i32, i32* %20, align 4, !dbg !8772
  %403 = add nsw i32 %402, 1, !dbg !8773
  %404 = sext i32 %403 to i64, !dbg !8772
  %405 = call i8* @emalloc2(i64 %404, i64 8), !dbg !8774
  %406 = bitcast i8* %405 to i8**, !dbg !8775
  store i8** %406, i8*** %10, align 8, !dbg !8776
  store i32 0, i32* %17, align 4, !dbg !8777
  br label %407, !dbg !8779

407:                                              ; preds = %423, %398
  %408 = load i32, i32* %17, align 4, !dbg !8780
  %409 = load i32, i32* %23, align 4, !dbg !8782
  %410 = icmp slt i32 %408, %409, !dbg !8783
  br i1 %410, label %411, label %426, !dbg !8784

411:                                              ; preds = %407
  %412 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !8785
  %413 = getelementptr inbounds %struct.command_details, %struct.command_details* %412, i32 0, i32 18, !dbg !8786
  %414 = load i8**, i8*** %413, align 8, !dbg !8786
  %415 = load i32, i32* %17, align 4, !dbg !8787
  %416 = sext i32 %415 to i64, !dbg !8785
  %417 = getelementptr inbounds i8*, i8** %414, i64 %416, !dbg !8785
  %418 = load i8*, i8** %417, align 8, !dbg !8785
  %419 = load i8**, i8*** %10, align 8, !dbg !8788
  %420 = load i32, i32* %17, align 4, !dbg !8789
  %421 = sext i32 %420 to i64, !dbg !8788
  %422 = getelementptr inbounds i8*, i8** %419, i64 %421, !dbg !8788
  store i8* %418, i8** %422, align 8, !dbg !8790
  br label %423, !dbg !8788

423:                                              ; preds = %411
  %424 = load i32, i32* %17, align 4, !dbg !8791
  %425 = add nsw i32 %424, 1, !dbg !8791
  store i32 %425, i32* %17, align 4, !dbg !8791
  br label %407, !dbg !8792, !llvm.loop !8793

426:                                              ; preds = %407
  store i32 0, i32* %15, align 4, !dbg !8795
  br label %427, !dbg !8797

427:                                              ; preds = %437, %426
  %428 = load i32, i32* %15, align 4, !dbg !8798
  %429 = load i32, i32* %24, align 4, !dbg !8800
  %430 = icmp slt i32 %428, %429, !dbg !8801
  br i1 %430, label %431, label %435, !dbg !8802

431:                                              ; preds = %427
  %432 = load i32, i32* %17, align 4, !dbg !8803
  %433 = load i32, i32* %20, align 4, !dbg !8804
  %434 = icmp slt i32 %432, %433, !dbg !8805
  br label %435

435:                                              ; preds = %431, %427
  %436 = phi i1 [ false, %427 ], [ %434, %431 ], !dbg !8806
  br i1 %436, label %437, label %450, !dbg !8807

437:                                              ; preds = %435
  %438 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8808
  %439 = load i32, i32* %15, align 4, !dbg !8809
  %440 = add nsw i32 %439, 1, !dbg !8809
  store i32 %440, i32* %15, align 4, !dbg !8809
  %441 = sext i32 %439 to i64, !dbg !8808
  %442 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %438, i64 %441, !dbg !8808
  %443 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %442, i32 0, i32 0, !dbg !8810
  %444 = load i8*, i8** %443, align 8, !dbg !8810
  %445 = load i8**, i8*** %10, align 8, !dbg !8811
  %446 = load i32, i32* %17, align 4, !dbg !8812
  %447 = add nsw i32 %446, 1, !dbg !8812
  store i32 %447, i32* %17, align 4, !dbg !8812
  %448 = sext i32 %446 to i64, !dbg !8811
  %449 = getelementptr inbounds i8*, i8** %445, i64 %448, !dbg !8811
  store i8* %444, i8** %449, align 8, !dbg !8813
  br label %427, !dbg !8814, !llvm.loop !8815

450:                                              ; preds = %435
  %451 = load i8**, i8*** %10, align 8, !dbg !8817
  %452 = load i32, i32* %17, align 4, !dbg !8818
  %453 = sext i32 %452 to i64, !dbg !8817
  %454 = getelementptr inbounds i8*, i8** %451, i64 %453, !dbg !8817
  store i8* null, i8** %454, align 8, !dbg !8819
  %455 = call i32 @gettimeofday(%struct.timeval* %27, i8* null) #13, !dbg !8820
  %456 = bitcast %struct.command_details* %4 to i8*, !dbg !8821
  %457 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !8822
  %458 = bitcast %struct.command_details* %457 to i8*, !dbg !8821
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %456, i8* align 8 %458, i64 120, i1 false), !dbg !8821
  %459 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !8823
  %460 = getelementptr inbounds %struct.command_details, %struct.command_details* %4, i32 0, i32 0, !dbg !8824
  store i32 %459, i32* %460, align 8, !dbg !8825
  %461 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !8826
  %462 = getelementptr inbounds %struct.command_details, %struct.command_details* %4, i32 0, i32 1, !dbg !8827
  store i32 %461, i32* %462, align 4, !dbg !8828
  %463 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 2), align 8, !dbg !8829
  %464 = getelementptr inbounds %struct.command_details, %struct.command_details* %4, i32 0, i32 2, !dbg !8830
  store i32 %463, i32* %464, align 8, !dbg !8831
  %465 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 2), align 8, !dbg !8832
  %466 = getelementptr inbounds %struct.command_details, %struct.command_details* %4, i32 0, i32 3, !dbg !8833
  store i32 %465, i32* %466, align 4, !dbg !8834
  %467 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 10), align 8, !dbg !8835
  %468 = getelementptr inbounds %struct.command_details, %struct.command_details* %4, i32 0, i32 7, !dbg !8836
  store i32 %467, i32* %468, align 4, !dbg !8837
  %469 = load i32*, i32** getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 9), align 8, !dbg !8838
  %470 = getelementptr inbounds %struct.command_details, %struct.command_details* %4, i32 0, i32 10, !dbg !8839
  store i32* %469, i32** %470, align 8, !dbg !8840
  %471 = load i8**, i8*** %10, align 8, !dbg !8841
  %472 = getelementptr inbounds %struct.command_details, %struct.command_details* %4, i32 0, i32 18, !dbg !8842
  store i8** %471, i8*** %472, align 8, !dbg !8843
  %473 = call i32 @run_command(%struct.command_details* %4), !dbg !8844
  store i32 %473, i32* %21, align 4, !dbg !8845
  %474 = call i32 @gettimeofday(%struct.timeval* %28, i8* null) #13, !dbg !8846
  store i32 0, i32* %15, align 4, !dbg !8847
  br label %475, !dbg !8849

475:                                              ; preds = %761, %450
  %476 = load i32, i32* %15, align 4, !dbg !8850
  %477 = load i32, i32* %24, align 4, !dbg !8852
  %478 = icmp slt i32 %476, %477, !dbg !8853
  br i1 %478, label %479, label %764, !dbg !8854

479:                                              ; preds = %475
  store i32 -1, i32* %14, align 4, !dbg !8855
  %480 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !8857
  %481 = call i32 @seteuid(i32 %480) #13, !dbg !8859
  %482 = icmp ne i32 %481, 0, !dbg !8860
  br i1 %482, label %483, label %485, !dbg !8861

483:                                              ; preds = %479
  %484 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !8862
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.213, i64 0, i64 0), i32 %484) #16, !dbg !8863
  unreachable, !dbg !8863

485:                                              ; preds = %479
  %486 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8864
  %487 = load i32, i32* %15, align 4, !dbg !8866
  %488 = sext i32 %487 to i64, !dbg !8864
  %489 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %486, i64 %488, !dbg !8864
  %490 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %489, i32 0, i32 0, !dbg !8867
  %491 = load i8*, i8** %490, align 8, !dbg !8867
  %492 = call i32 (i8*, i32, ...) @open(i8* %491, i32 0, i32 420), !dbg !8868
  store i32 %492, i32* %19, align 4, !dbg !8869
  %493 = icmp ne i32 %492, -1, !dbg !8870
  br i1 %493, label %494, label %497, !dbg !8871

494:                                              ; preds = %485
  %495 = load i32, i32* %19, align 4, !dbg !8872
  %496 = call i32 @fstat(i32 %495, %struct.stat* %25) #13, !dbg !8874
  store i32 %496, i32* %14, align 4, !dbg !8875
  br label %497, !dbg !8876

497:                                              ; preds = %494, %485
  %498 = call i32 @seteuid(i32 0) #13, !dbg !8877
  %499 = icmp ne i32 %498, 0, !dbg !8879
  br i1 %499, label %500, label %501, !dbg !8880

500:                                              ; preds = %497
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.214, i64 0, i64 0)) #16, !dbg !8881
  unreachable, !dbg !8881

501:                                              ; preds = %497
  %502 = load i32, i32* %14, align 4, !dbg !8882
  %503 = icmp ne i32 %502, 0, !dbg !8882
  br i1 %503, label %509, label %504, !dbg !8884

504:                                              ; preds = %501
  %505 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 3, !dbg !8885
  %506 = load i32, i32* %505, align 8, !dbg !8885
  %507 = and i32 %506, 61440, !dbg !8885
  %508 = icmp eq i32 %507, 32768, !dbg !8885
  br i1 %508, label %541, label %509, !dbg !8886

509:                                              ; preds = %504, %501
  %510 = load i32, i32* %14, align 4, !dbg !8887
  %511 = icmp ne i32 %510, 0, !dbg !8887
  br i1 %511, label %512, label %519, !dbg !8890

512:                                              ; preds = %509
  %513 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8891
  %514 = load i32, i32* %15, align 4, !dbg !8892
  %515 = sext i32 %514 to i64, !dbg !8891
  %516 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %513, i64 %515, !dbg !8891
  %517 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %516, i32 0, i32 0, !dbg !8893
  %518 = load i8*, i8** %517, align 8, !dbg !8893
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.209, i64 0, i64 0), i8* %518), !dbg !8894
  br label %527, !dbg !8894

519:                                              ; preds = %509
  %520 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.210, i64 0, i64 0)) #13, !dbg !8895
  %521 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8896
  %522 = load i32, i32* %15, align 4, !dbg !8897
  %523 = sext i32 %522 to i64, !dbg !8896
  %524 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %521, i64 %523, !dbg !8896
  %525 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %524, i32 0, i32 0, !dbg !8898
  %526 = load i8*, i8** %525, align 8, !dbg !8898
  call void (i8*, ...) @warningx(i8* %520, i8* %526), !dbg !8899
  br label %527

527:                                              ; preds = %519, %512
  %528 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14.217, i64 0, i64 0)) #13, !dbg !8900
  %529 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8901
  %530 = load i32, i32* %15, align 4, !dbg !8902
  %531 = sext i32 %530 to i64, !dbg !8901
  %532 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %529, i64 %531, !dbg !8901
  %533 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %532, i32 0, i32 1, !dbg !8903
  %534 = load i8*, i8** %533, align 8, !dbg !8903
  call void (i8*, ...) @warningx(i8* %528, i8* %534), !dbg !8904
  %535 = load i32, i32* %19, align 4, !dbg !8905
  %536 = icmp ne i32 %535, -1, !dbg !8907
  br i1 %536, label %537, label %540, !dbg !8908

537:                                              ; preds = %527
  %538 = load i32, i32* %19, align 4, !dbg !8909
  %539 = call i32 @close(i32 %538), !dbg !8910
  br label %540, !dbg !8910

540:                                              ; preds = %537, %527
  br label %761, !dbg !8911

541:                                              ; preds = %504
  br label %542, !dbg !8912

542:                                              ; preds = %541
  %543 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 12, !dbg !8913
  %544 = getelementptr inbounds %struct.timeval, %struct.timeval* %543, i32 0, i32 0, !dbg !8913
  %545 = load i64, i64* %544, align 8, !dbg !8913
  %546 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 0, !dbg !8913
  store i64 %545, i64* %546, align 8, !dbg !8913
  %547 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 12, !dbg !8913
  %548 = getelementptr inbounds %struct.timeval, %struct.timeval* %547, i32 0, i32 1, !dbg !8913
  %549 = load i64, i64* %548, align 8, !dbg !8913
  %550 = sdiv i64 %549, 1000, !dbg !8913
  %551 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 1, !dbg !8913
  store i64 %550, i64* %551, align 8, !dbg !8913
  br label %552, !dbg !8913

552:                                              ; preds = %542
  %553 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8915
  %554 = load i32, i32* %15, align 4, !dbg !8917
  %555 = sext i32 %554 to i64, !dbg !8915
  %556 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %553, i64 %555, !dbg !8915
  %557 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %556, i32 0, i32 3, !dbg !8918
  %558 = load i64, i64* %557, align 8, !dbg !8918
  %559 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 8, !dbg !8919
  %560 = load i64, i64* %559, align 8, !dbg !8919
  %561 = icmp eq i64 %558, %560, !dbg !8920
  br i1 %561, label %562, label %644, !dbg !8921

562:                                              ; preds = %552
  %563 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8922
  %564 = load i32, i32* %15, align 4, !dbg !8922
  %565 = sext i32 %564 to i64, !dbg !8922
  %566 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %563, i64 %565, !dbg !8922
  %567 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %566, i32 0, i32 2, !dbg !8922
  %568 = getelementptr inbounds %struct.timeval, %struct.timeval* %567, i32 0, i32 0, !dbg !8922
  %569 = load i64, i64* %568, align 8, !dbg !8922
  %570 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 0, !dbg !8922
  %571 = load i64, i64* %570, align 8, !dbg !8922
  %572 = icmp eq i64 %569, %571, !dbg !8922
  br i1 %572, label %573, label %584, !dbg !8923

573:                                              ; preds = %562
  %574 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8922
  %575 = load i32, i32* %15, align 4, !dbg !8922
  %576 = sext i32 %575 to i64, !dbg !8922
  %577 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %574, i64 %576, !dbg !8922
  %578 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %577, i32 0, i32 2, !dbg !8922
  %579 = getelementptr inbounds %struct.timeval, %struct.timeval* %578, i32 0, i32 1, !dbg !8922
  %580 = load i64, i64* %579, align 8, !dbg !8922
  %581 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 1, !dbg !8922
  %582 = load i64, i64* %581, align 8, !dbg !8922
  %583 = icmp eq i64 %580, %582, !dbg !8922
  br i1 %583, label %595, label %644, !dbg !8922

584:                                              ; preds = %562
  %585 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8922
  %586 = load i32, i32* %15, align 4, !dbg !8922
  %587 = sext i32 %586 to i64, !dbg !8922
  %588 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %585, i64 %587, !dbg !8922
  %589 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %588, i32 0, i32 2, !dbg !8922
  %590 = getelementptr inbounds %struct.timeval, %struct.timeval* %589, i32 0, i32 0, !dbg !8922
  %591 = load i64, i64* %590, align 8, !dbg !8922
  %592 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 0, !dbg !8922
  %593 = load i64, i64* %592, align 8, !dbg !8922
  %594 = icmp eq i64 %591, %593, !dbg !8922
  br i1 %594, label %595, label %644, !dbg !8923

595:                                              ; preds = %584, %573
  br label %596, !dbg !8924

596:                                              ; preds = %595
  %597 = getelementptr inbounds %struct.timeval, %struct.timeval* %28, i32 0, i32 0, !dbg !8926
  %598 = load i64, i64* %597, align 8, !dbg !8926
  %599 = getelementptr inbounds %struct.timeval, %struct.timeval* %27, i32 0, i32 0, !dbg !8926
  %600 = load i64, i64* %599, align 8, !dbg !8926
  %601 = sub nsw i64 %600, %598, !dbg !8926
  store i64 %601, i64* %599, align 8, !dbg !8926
  %602 = getelementptr inbounds %struct.timeval, %struct.timeval* %28, i32 0, i32 1, !dbg !8926
  %603 = load i64, i64* %602, align 8, !dbg !8926
  %604 = getelementptr inbounds %struct.timeval, %struct.timeval* %27, i32 0, i32 1, !dbg !8926
  %605 = load i64, i64* %604, align 8, !dbg !8926
  %606 = sub nsw i64 %605, %603, !dbg !8926
  store i64 %606, i64* %604, align 8, !dbg !8926
  %607 = getelementptr inbounds %struct.timeval, %struct.timeval* %27, i32 0, i32 1, !dbg !8928
  %608 = load i64, i64* %607, align 8, !dbg !8928
  %609 = icmp slt i64 %608, 0, !dbg !8928
  br i1 %609, label %610, label %617, !dbg !8926

610:                                              ; preds = %596
  %611 = getelementptr inbounds %struct.timeval, %struct.timeval* %27, i32 0, i32 0, !dbg !8930
  %612 = load i64, i64* %611, align 8, !dbg !8930
  %613 = add nsw i64 %612, -1, !dbg !8930
  store i64 %613, i64* %611, align 8, !dbg !8930
  %614 = getelementptr inbounds %struct.timeval, %struct.timeval* %27, i32 0, i32 1, !dbg !8930
  %615 = load i64, i64* %614, align 8, !dbg !8930
  %616 = add nsw i64 %615, 1000000, !dbg !8930
  store i64 %616, i64* %614, align 8, !dbg !8930
  br label %617, !dbg !8930

617:                                              ; preds = %610, %596
  br label %618, !dbg !8926

618:                                              ; preds = %617
  %619 = getelementptr inbounds %struct.timeval, %struct.timeval* %28, i32 0, i32 0, !dbg !8932
  %620 = load i64, i64* %619, align 8, !dbg !8932
  %621 = icmp ne i64 %620, 0, !dbg !8932
  br i1 %621, label %626, label %622, !dbg !8932

622:                                              ; preds = %618
  %623 = getelementptr inbounds %struct.timeval, %struct.timeval* %28, i32 0, i32 1, !dbg !8932
  %624 = load i64, i64* %623, align 8, !dbg !8932
  %625 = icmp ne i64 %624, 0, !dbg !8932
  br i1 %625, label %626, label %643, !dbg !8934

626:                                              ; preds = %622, %618
  %627 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15.218, i64 0, i64 0)) #13, !dbg !8935
  %628 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8937
  %629 = load i32, i32* %15, align 4, !dbg !8938
  %630 = sext i32 %629 to i64, !dbg !8937
  %631 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %628, i64 %630, !dbg !8937
  %632 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %631, i32 0, i32 1, !dbg !8939
  %633 = load i8*, i8** %632, align 8, !dbg !8939
  call void (i8*, ...) @warningx(i8* %627, i8* %633), !dbg !8940
  %634 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8941
  %635 = load i32, i32* %15, align 4, !dbg !8942
  %636 = sext i32 %635 to i64, !dbg !8941
  %637 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %634, i64 %636, !dbg !8941
  %638 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %637, i32 0, i32 0, !dbg !8943
  %639 = load i8*, i8** %638, align 8, !dbg !8943
  %640 = call i32 @unlink(i8* %639) #13, !dbg !8944
  %641 = load i32, i32* %19, align 4, !dbg !8945
  %642 = call i32 @close(i32 %641), !dbg !8946
  br label %761, !dbg !8947

643:                                              ; preds = %622
  br label %644, !dbg !8948

644:                                              ; preds = %643, %584, %573, %552
  %645 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !8949
  %646 = getelementptr inbounds %struct.command_details, %struct.command_details* %645, i32 0, i32 1, !dbg !8950
  %647 = load i32, i32* %646, align 4, !dbg !8950
  %648 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !8951
  %649 = getelementptr inbounds %struct.command_details, %struct.command_details* %648, i32 0, i32 3, !dbg !8952
  %650 = load i32, i32* %649, align 4, !dbg !8952
  %651 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !8953
  %652 = getelementptr inbounds %struct.command_details, %struct.command_details* %651, i32 0, i32 7, !dbg !8954
  %653 = load i32, i32* %652, align 4, !dbg !8954
  %654 = load %struct.command_details*, %struct.command_details** %3, align 8, !dbg !8955
  %655 = getelementptr inbounds %struct.command_details, %struct.command_details* %654, i32 0, i32 10, !dbg !8956
  %656 = load i32*, i32** %655, align 8, !dbg !8956
  call void @switch_user(i32 %647, i32 %650, i32 %653, i32* %656), !dbg !8957
  %657 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8958
  %658 = load i32, i32* %15, align 4, !dbg !8959
  %659 = sext i32 %658 to i64, !dbg !8958
  %660 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %657, i64 %659, !dbg !8958
  %661 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %660, i32 0, i32 1, !dbg !8960
  %662 = load i8*, i8** %661, align 8, !dbg !8960
  %663 = call i32 (i8*, i32, ...) @open(i8* %662, i32 577, i32 420), !dbg !8961
  store i32 %663, i32* %18, align 4, !dbg !8962
  %664 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 3), align 4, !dbg !8963
  %665 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 10), align 8, !dbg !8964
  %666 = load i32*, i32** getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 9), align 8, !dbg !8965
  call void @switch_user(i32 0, i32 %664, i32 %665, i32* %666), !dbg !8966
  %667 = load i32, i32* %18, align 4, !dbg !8967
  %668 = icmp eq i32 %667, -1, !dbg !8969
  br i1 %668, label %669, label %686, !dbg !8970

669:                                              ; preds = %644
  %670 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16.219, i64 0, i64 0)) #13, !dbg !8971
  %671 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8973
  %672 = load i32, i32* %15, align 4, !dbg !8974
  %673 = sext i32 %672 to i64, !dbg !8973
  %674 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %671, i64 %673, !dbg !8973
  %675 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %674, i32 0, i32 1, !dbg !8975
  %676 = load i8*, i8** %675, align 8, !dbg !8975
  call void (i8*, ...) @warning(i8* %670, i8* %676), !dbg !8976
  %677 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.17.220, i64 0, i64 0)) #13, !dbg !8977
  %678 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !8978
  %679 = load i32, i32* %15, align 4, !dbg !8979
  %680 = sext i32 %679 to i64, !dbg !8978
  %681 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %678, i64 %680, !dbg !8978
  %682 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %681, i32 0, i32 0, !dbg !8980
  %683 = load i8*, i8** %682, align 8, !dbg !8980
  call void (i8*, ...) @warningx(i8* %677, i8* %683), !dbg !8981
  %684 = load i32, i32* %19, align 4, !dbg !8982
  %685 = call i32 @close(i32 %684), !dbg !8983
  br label %761, !dbg !8984

686:                                              ; preds = %644
  br label %687, !dbg !8985

687:                                              ; preds = %718, %686
  %688 = load i32, i32* %19, align 4, !dbg !8986
  %689 = getelementptr inbounds [8192 x i8], [8192 x i8]* %13, i64 0, i64 0, !dbg !8987
  %690 = call i64 @read(i32 %688, i8* %689, i64 8192), !dbg !8988
  store i64 %690, i64* %5, align 8, !dbg !8989
  %691 = icmp sgt i64 %690, 0, !dbg !8990
  br i1 %691, label %692, label %719, !dbg !8985

692:                                              ; preds = %687
  %693 = load i32, i32* %18, align 4, !dbg !8991
  %694 = getelementptr inbounds [8192 x i8], [8192 x i8]* %13, i64 0, i64 0, !dbg !8994
  %695 = load i64, i64* %5, align 8, !dbg !8995
  %696 = call i64 @write(i32 %693, i8* %694, i64 %695), !dbg !8996
  store i64 %696, i64* %6, align 8, !dbg !8997
  %697 = load i64, i64* %5, align 8, !dbg !8998
  %698 = icmp ne i64 %696, %697, !dbg !8999
  br i1 %698, label %699, label %718, !dbg !9000

699:                                              ; preds = %692
  %700 = load i64, i64* %6, align 8, !dbg !9001
  %701 = icmp eq i64 %700, -1, !dbg !9004
  br i1 %701, label %702, label %709, !dbg !9005

702:                                              ; preds = %699
  %703 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !9006
  %704 = load i32, i32* %15, align 4, !dbg !9007
  %705 = sext i32 %704 to i64, !dbg !9006
  %706 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %703, i64 %705, !dbg !9006
  %707 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %706, i32 0, i32 1, !dbg !9008
  %708 = load i8*, i8** %707, align 8, !dbg !9008
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.209, i64 0, i64 0), i8* %708), !dbg !9009
  br label %717, !dbg !9009

709:                                              ; preds = %699
  %710 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13.216, i64 0, i64 0)) #13, !dbg !9010
  %711 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !9011
  %712 = load i32, i32* %15, align 4, !dbg !9012
  %713 = sext i32 %712 to i64, !dbg !9011
  %714 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %711, i64 %713, !dbg !9011
  %715 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %714, i32 0, i32 1, !dbg !9013
  %716 = load i8*, i8** %715, align 8, !dbg !9013
  call void (i8*, ...) @warningx(i8* %710, i8* %716), !dbg !9014
  br label %717

717:                                              ; preds = %709, %702
  br label %719, !dbg !9015

718:                                              ; preds = %692
  br label %687, !dbg !8985, !llvm.loop !9016

719:                                              ; preds = %717, %687
  %720 = load i64, i64* %5, align 8, !dbg !9018
  %721 = icmp eq i64 %720, 0, !dbg !9020
  br i1 %721, label %722, label %730, !dbg !9021

722:                                              ; preds = %719
  %723 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !9022
  %724 = load i32, i32* %15, align 4, !dbg !9024
  %725 = sext i32 %724 to i64, !dbg !9022
  %726 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %723, i64 %725, !dbg !9022
  %727 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %726, i32 0, i32 0, !dbg !9025
  %728 = load i8*, i8** %727, align 8, !dbg !9025
  %729 = call i32 @unlink(i8* %728) #13, !dbg !9026
  br label %758, !dbg !9027

730:                                              ; preds = %719
  %731 = load i64, i64* %5, align 8, !dbg !9028
  %732 = icmp slt i64 %731, 0, !dbg !9030
  br i1 %732, label %733, label %742, !dbg !9031

733:                                              ; preds = %730
  %734 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18.221, i64 0, i64 0)) #13, !dbg !9032
  call void (i8*, ...) @warning(i8* %734), !dbg !9034
  %735 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.17.220, i64 0, i64 0)) #13, !dbg !9035
  %736 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !9036
  %737 = load i32, i32* %15, align 4, !dbg !9037
  %738 = sext i32 %737 to i64, !dbg !9036
  %739 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %736, i64 %738, !dbg !9036
  %740 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %739, i32 0, i32 0, !dbg !9038
  %741 = load i8*, i8** %740, align 8, !dbg !9038
  call void (i8*, ...) @warningx(i8* %735, i8* %741), !dbg !9039
  br label %757, !dbg !9040

742:                                              ; preds = %730
  %743 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16.219, i64 0, i64 0)) #13, !dbg !9041
  %744 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !9043
  %745 = load i32, i32* %15, align 4, !dbg !9044
  %746 = sext i32 %745 to i64, !dbg !9043
  %747 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %744, i64 %746, !dbg !9043
  %748 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %747, i32 0, i32 1, !dbg !9045
  %749 = load i8*, i8** %748, align 8, !dbg !9045
  call void (i8*, ...) @warning(i8* %743, i8* %749), !dbg !9046
  %750 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.17.220, i64 0, i64 0)) #13, !dbg !9047
  %751 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !9048
  %752 = load i32, i32* %15, align 4, !dbg !9049
  %753 = sext i32 %752 to i64, !dbg !9048
  %754 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %751, i64 %753, !dbg !9048
  %755 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %754, i32 0, i32 0, !dbg !9050
  %756 = load i8*, i8** %755, align 8, !dbg !9050
  call void (i8*, ...) @warningx(i8* %750, i8* %756), !dbg !9051
  br label %757

757:                                              ; preds = %742, %733
  br label %758

758:                                              ; preds = %757, %722
  %759 = load i32, i32* %18, align 4, !dbg !9052
  %760 = call i32 @close(i32 %759), !dbg !9053
  br label %761, !dbg !9054

761:                                              ; preds = %758, %669, %626, %540
  %762 = load i32, i32* %15, align 4, !dbg !9055
  %763 = add nsw i32 %762, 1, !dbg !9055
  store i32 %763, i32* %15, align 4, !dbg !9055
  br label %475, !dbg !9056, !llvm.loop !9057

764:                                              ; preds = %475
  %765 = load i32, i32* %21, align 4, !dbg !9059
  store i32 %765, i32* %2, align 4, !dbg !9060
  br label %792, !dbg !9060

766:                                              ; preds = %347, %312
  call void @llvm.dbg.label(metadata !9061), !dbg !9062
  store i32 0, i32* %15, align 4, !dbg !9063
  br label %767, !dbg !9065

767:                                              ; preds = %788, %766
  %768 = load i32, i32* %15, align 4, !dbg !9066
  %769 = load i32, i32* %24, align 4, !dbg !9068
  %770 = icmp slt i32 %768, %769, !dbg !9069
  br i1 %770, label %771, label %791, !dbg !9070

771:                                              ; preds = %767
  %772 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !9071
  %773 = load i32, i32* %15, align 4, !dbg !9074
  %774 = sext i32 %773 to i64, !dbg !9071
  %775 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %772, i64 %774, !dbg !9071
  %776 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %775, i32 0, i32 0, !dbg !9075
  %777 = load i8*, i8** %776, align 8, !dbg !9075
  %778 = icmp ne i8* %777, null, !dbg !9076
  br i1 %778, label %779, label %787, !dbg !9077

779:                                              ; preds = %771
  %780 = load %struct.tempfile*, %struct.tempfile** %29, align 8, !dbg !9078
  %781 = load i32, i32* %15, align 4, !dbg !9079
  %782 = sext i32 %781 to i64, !dbg !9078
  %783 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %780, i64 %782, !dbg !9078
  %784 = getelementptr inbounds %struct.tempfile, %struct.tempfile* %783, i32 0, i32 0, !dbg !9080
  %785 = load i8*, i8** %784, align 8, !dbg !9080
  %786 = call i32 @unlink(i8* %785) #13, !dbg !9081
  br label %787, !dbg !9081

787:                                              ; preds = %779, %771
  br label %788, !dbg !9082

788:                                              ; preds = %787
  %789 = load i32, i32* %15, align 4, !dbg !9083
  %790 = add nsw i32 %789, 1, !dbg !9083
  store i32 %790, i32* %15, align 4, !dbg !9083
  br label %767, !dbg !9084, !llvm.loop !9085

791:                                              ; preds = %767
  store i32 1, i32* %2, align 4, !dbg !9087
  br label %792, !dbg !9087

792:                                              ; preds = %791, %764, %397, %108, %32
  %793 = load i32, i32* %2, align 4, !dbg !9088
  ret i32 %793, !dbg !9088
}

; Function Attrs: nounwind
declare dso_local i32 @setuid(i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @switch_user(i32 %0, i32 %1, i32 %2, i32* %3) #0 !dbg !9089 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9092, metadata !DIExpression()), !dbg !9093
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9094, metadata !DIExpression()), !dbg !9095
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9096, metadata !DIExpression()), !dbg !9097
  store i32* %3, i32** %8, align 8
  call void @llvm.dbg.declare(metadata i32** %8, metadata !9098, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9100, metadata !DIExpression()), !dbg !9101
  %10 = call i32* @__errno_location() #14, !dbg !9102
  %11 = load i32, i32* %10, align 4, !dbg !9102
  store i32 %11, i32* %9, align 4, !dbg !9101
  %12 = load i32, i32* %5, align 4, !dbg !9103
  %13 = icmp eq i32 %12, 0, !dbg !9105
  br i1 %13, label %14, label %19, !dbg !9106

14:                                               ; preds = %4
  %15 = call i32 @seteuid(i32 0) #13, !dbg !9107
  %16 = icmp ne i32 %15, 0, !dbg !9110
  br i1 %16, label %17, label %18, !dbg !9111

17:                                               ; preds = %14
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.214, i64 0, i64 0)) #16, !dbg !9112
  unreachable, !dbg !9112

18:                                               ; preds = %14
  br label %19, !dbg !9113

19:                                               ; preds = %18, %4
  %20 = load i32, i32* %6, align 4, !dbg !9114
  %21 = call i32 @setegid(i32 %20) #13, !dbg !9116
  %22 = icmp ne i32 %21, 0, !dbg !9117
  br i1 %22, label %23, label %25, !dbg !9118

23:                                               ; preds = %19
  %24 = load i32, i32* %6, align 4, !dbg !9119
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19.222, i64 0, i64 0), i32 %24) #16, !dbg !9120
  unreachable, !dbg !9120

25:                                               ; preds = %19
  %26 = load i32, i32* %7, align 4, !dbg !9121
  %27 = icmp ne i32 %26, -1, !dbg !9123
  br i1 %27, label %28, label %35, !dbg !9124

28:                                               ; preds = %25
  %29 = load i32, i32* %7, align 4, !dbg !9125
  %30 = load i32*, i32** %8, align 8, !dbg !9128
  %31 = call i32 @sudo_setgroups(i32 %29, i32* %30), !dbg !9129
  %32 = icmp ne i32 %31, 0, !dbg !9130
  br i1 %32, label %33, label %34, !dbg !9131

33:                                               ; preds = %28
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20.223, i64 0, i64 0)) #16, !dbg !9132
  unreachable, !dbg !9132

34:                                               ; preds = %28
  br label %35, !dbg !9133

35:                                               ; preds = %34, %25
  %36 = load i32, i32* %5, align 4, !dbg !9134
  %37 = icmp ne i32 %36, 0, !dbg !9136
  br i1 %37, label %38, label %45, !dbg !9137

38:                                               ; preds = %35
  %39 = load i32, i32* %5, align 4, !dbg !9138
  %40 = call i32 @seteuid(i32 %39) #13, !dbg !9141
  %41 = icmp ne i32 %40, 0, !dbg !9142
  br i1 %41, label %42, label %44, !dbg !9143

42:                                               ; preds = %38
  %43 = load i32, i32* %5, align 4, !dbg !9144
  call void (i32, i8*, ...) @error(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.213, i64 0, i64 0), i32 %43) #16, !dbg !9145
  unreachable, !dbg !9145

44:                                               ; preds = %38
  br label %45, !dbg !9146

45:                                               ; preds = %44, %35
  %46 = load i32, i32* %9, align 4, !dbg !9147
  %47 = call i32* @__errno_location() #14, !dbg !9148
  store i32 %46, i32* %47, align 4, !dbg !9149
  ret void, !dbg !9150
}

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #4

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @seteuid(i32) #4

declare dso_local i32 @mkstemps(i8*, i32) #3

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timeval*, i8*) #4

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @tgetpass(i8* %0, i32 %1, i32 %2) #0 !dbg !723 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.sigaction, align 8
  %9 = alloca %struct.sigaction, align 8
  %10 = alloca %struct.sigaction, align 8
  %11 = alloca %struct.sigaction, align 8
  %12 = alloca %struct.sigaction, align 8
  %13 = alloca %struct.sigaction, align 8
  %14 = alloca %struct.sigaction, align 8
  %15 = alloca %struct.sigaction, align 8
  %16 = alloca %struct.sigaction, align 8
  %17 = alloca %struct.sigaction, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9151, metadata !DIExpression()), !dbg !9152
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9153, metadata !DIExpression()), !dbg !9154
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9155, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.declare(metadata %struct.sigaction* %8, metadata !9157, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.declare(metadata %struct.sigaction* %9, metadata !9244, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.declare(metadata %struct.sigaction* %10, metadata !9246, metadata !DIExpression()), !dbg !9247
  call void @llvm.dbg.declare(metadata %struct.sigaction* %11, metadata !9248, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.declare(metadata %struct.sigaction* %12, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.declare(metadata %struct.sigaction* %13, metadata !9252, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.declare(metadata %struct.sigaction* %14, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.declare(metadata %struct.sigaction* %15, metadata !9256, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.declare(metadata %struct.sigaction* %16, metadata !9258, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.declare(metadata %struct.sigaction* %17, metadata !9260, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.declare(metadata i8** %18, metadata !9262, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.declare(metadata i32* %19, metadata !9264, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.declare(metadata i32* %20, metadata !9266, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.declare(metadata i32* %21, metadata !9268, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.declare(metadata i32* %22, metadata !9270, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.declare(metadata i32* %23, metadata !9272, metadata !DIExpression()), !dbg !9273
  store i32 0, i32* %23, align 4, !dbg !9273
  call void @llvm.dbg.declare(metadata i32* %24, metadata !9274, metadata !DIExpression()), !dbg !9275
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !9276
  %26 = call i32 @fflush(%struct._IO_FILE* %25), !dbg !9277
  %27 = load i8*, i8** @tgetpass.askpass, align 8, !dbg !9278
  %28 = icmp eq i8* %27, null, !dbg !9280
  br i1 %28, label %29, label %41, !dbg !9281

29:                                               ; preds = %3
  %30 = call i8* @getenv(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.228, i64 0, i64 0)) #13, !dbg !9282
  store i8* %30, i8** @tgetpass.askpass, align 8, !dbg !9284
  %31 = load i8*, i8** @tgetpass.askpass, align 8, !dbg !9285
  %32 = icmp eq i8* %31, null, !dbg !9287
  br i1 %32, label %38, label %33, !dbg !9288

33:                                               ; preds = %29
  %34 = load i8*, i8** @tgetpass.askpass, align 8, !dbg !9289
  %35 = load i8, i8* %34, align 1, !dbg !9290
  %36 = sext i8 %35 to i32, !dbg !9290
  %37 = icmp eq i32 %36, 0, !dbg !9291
  br i1 %37, label %38, label %40, !dbg !9292

38:                                               ; preds = %33, %29
  %39 = load i8*, i8** @askpass_path, align 8, !dbg !9293
  store i8* %39, i8** @tgetpass.askpass, align 8, !dbg !9294
  br label %40, !dbg !9295

40:                                               ; preds = %38, %33
  br label %41, !dbg !9296

41:                                               ; preds = %40, %3
  %42 = load i32, i32* %7, align 4, !dbg !9297
  %43 = and i32 %42, 23, !dbg !9297
  %44 = icmp ne i32 %43, 0, !dbg !9297
  br i1 %44, label %59, label %45, !dbg !9299

45:                                               ; preds = %41
  %46 = call i32 @tty_present(), !dbg !9300
  %47 = icmp ne i32 %46, 0, !dbg !9300
  br i1 %47, label %59, label %48, !dbg !9301

48:                                               ; preds = %45
  %49 = load i8*, i8** @tgetpass.askpass, align 8, !dbg !9302
  %50 = icmp eq i8* %49, null, !dbg !9305
  br i1 %50, label %54, label %51, !dbg !9306

51:                                               ; preds = %48
  %52 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.229, i64 0, i64 0)) #13, !dbg !9307
  %53 = icmp eq i8* %52, null, !dbg !9308
  br i1 %53, label %54, label %56, !dbg !9309

54:                                               ; preds = %51, %48
  %55 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.230, i64 0, i64 0)) #13, !dbg !9310
  call void (i8*, ...) @warningx(i8* %55), !dbg !9312
  store i8* null, i8** %4, align 8, !dbg !9313
  br label %222, !dbg !9313

56:                                               ; preds = %51
  %57 = load i32, i32* %7, align 4, !dbg !9314
  %58 = or i32 %57, 4, !dbg !9314
  store i32 %58, i32* %7, align 4, !dbg !9314
  br label %59, !dbg !9315

59:                                               ; preds = %56, %45, %41
  %60 = load i32, i32* %7, align 4, !dbg !9316
  %61 = and i32 %60, 4, !dbg !9316
  %62 = icmp ne i32 %61, 0, !dbg !9316
  br i1 %62, label %63, label %77, !dbg !9318

63:                                               ; preds = %59
  %64 = load i8*, i8** @tgetpass.askpass, align 8, !dbg !9319
  %65 = icmp eq i8* %64, null, !dbg !9322
  br i1 %65, label %71, label %66, !dbg !9323

66:                                               ; preds = %63
  %67 = load i8*, i8** @tgetpass.askpass, align 8, !dbg !9324
  %68 = load i8, i8* %67, align 1, !dbg !9325
  %69 = sext i8 %68 to i32, !dbg !9325
  %70 = icmp eq i32 %69, 0, !dbg !9326
  br i1 %70, label %71, label %73, !dbg !9327

71:                                               ; preds = %66, %63
  %72 = call i8* @gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.231, i64 0, i64 0)) #13, !dbg !9328
  call void (i32, i8*, ...) @errorx(i32 1, i8* %72) #16, !dbg !9329
  unreachable, !dbg !9329

73:                                               ; preds = %66
  %74 = load i8*, i8** @tgetpass.askpass, align 8, !dbg !9330
  %75 = load i8*, i8** %5, align 8, !dbg !9331
  %76 = call i8* @sudo_askpass(i8* %74, i8* %75), !dbg !9332
  store i8* %76, i8** %4, align 8, !dbg !9333
  br label %222, !dbg !9333

77:                                               ; preds = %59
  br label %78, !dbg !9316

78:                                               ; preds = %213, %77
  call void @llvm.dbg.label(metadata !9334), !dbg !9335
  store i32 0, i32* %19, align 4, !dbg !9336
  br label %79, !dbg !9338

79:                                               ; preds = %86, %78
  %80 = load i32, i32* %19, align 4, !dbg !9339
  %81 = icmp slt i32 %80, 65, !dbg !9341
  br i1 %81, label %82, label %89, !dbg !9342

82:                                               ; preds = %79
  %83 = load i32, i32* %19, align 4, !dbg !9343
  %84 = sext i32 %83 to i64, !dbg !9344
  %85 = getelementptr inbounds [65 x i32], [65 x i32]* @signo, i64 0, i64 %84, !dbg !9344
  store volatile i32 0, i32* %85, align 4, !dbg !9345
  br label %86, !dbg !9344

86:                                               ; preds = %82
  %87 = load i32, i32* %19, align 4, !dbg !9346
  %88 = add nsw i32 %87, 1, !dbg !9346
  store i32 %88, i32* %19, align 4, !dbg !9346
  br label %79, !dbg !9347, !llvm.loop !9348

89:                                               ; preds = %79
  store i8* null, i8** %18, align 8, !dbg !9350
  store i32 0, i32* %22, align 4, !dbg !9351
  store i32 0, i32* %24, align 4, !dbg !9352
  %90 = load i32, i32* %7, align 4, !dbg !9353
  %91 = and i32 %90, 2, !dbg !9353
  %92 = icmp ne i32 %91, 0, !dbg !9353
  br i1 %92, label %96, label %93, !dbg !9355

93:                                               ; preds = %89
  %94 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.232, i64 0, i64 0), i32 258), !dbg !9356
  store i32 %94, i32* %21, align 4, !dbg !9357
  store i32 %94, i32* %20, align 4, !dbg !9358
  %95 = icmp eq i32 %94, -1, !dbg !9359
  br i1 %95, label %96, label %97, !dbg !9360

96:                                               ; preds = %93, %89
  store i32 0, i32* %20, align 4, !dbg !9361
  store i32 2, i32* %21, align 4, !dbg !9363
  br label %97, !dbg !9364

97:                                               ; preds = %96, %93
  %98 = load i32, i32* %7, align 4, !dbg !9365
  %99 = and i32 %98, 1, !dbg !9365
  %100 = icmp ne i32 %99, 0, !dbg !9365
  br i1 %100, label %112, label %101, !dbg !9367

101:                                              ; preds = %97
  %102 = load i32, i32* %7, align 4, !dbg !9368
  %103 = and i32 %102, 8, !dbg !9368
  %104 = icmp ne i32 %103, 0, !dbg !9368
  br i1 %104, label %105, label %108, !dbg !9371

105:                                              ; preds = %101
  %106 = load i32, i32* %20, align 4, !dbg !9372
  %107 = call i32 @term_cbreak(i32 %106), !dbg !9373
  store i32 %107, i32* %23, align 4, !dbg !9374
  br label %111, !dbg !9375

108:                                              ; preds = %101
  %109 = load i32, i32* %20, align 4, !dbg !9376
  %110 = call i32 @term_noecho(i32 %109), !dbg !9377
  store i32 %110, i32* %23, align 4, !dbg !9378
  br label %111

111:                                              ; preds = %108, %105
  br label %112, !dbg !9379

112:                                              ; preds = %111, %97
  %113 = bitcast %struct.sigaction* %8 to i8*, !dbg !9380
  call void @zero_bytes(i8* %113, i64 152), !dbg !9381
  %114 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %8, i32 0, i32 1, !dbg !9382
  %115 = call i32 @sigemptyset(%struct.__sigset_t* %114) #13, !dbg !9383
  %116 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %8, i32 0, i32 2, !dbg !9384
  store i32 536870912, i32* %116, align 8, !dbg !9385
  %117 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %8, i32 0, i32 0, !dbg !9386
  %118 = bitcast %union.anon* %117 to void (i32)**, !dbg !9386
  store void (i32)* @handler.233, void (i32)** %118, align 8, !dbg !9387
  %119 = call i32 @sigaction(i32 14, %struct.sigaction* %8, %struct.sigaction* %9) #13, !dbg !9388
  %120 = call i32 @sigaction(i32 2, %struct.sigaction* %8, %struct.sigaction* %10) #13, !dbg !9389
  %121 = call i32 @sigaction(i32 1, %struct.sigaction* %8, %struct.sigaction* %11) #13, !dbg !9390
  %122 = call i32 @sigaction(i32 3, %struct.sigaction* %8, %struct.sigaction* %12) #13, !dbg !9391
  %123 = call i32 @sigaction(i32 15, %struct.sigaction* %8, %struct.sigaction* %13) #13, !dbg !9392
  %124 = call i32 @sigaction(i32 20, %struct.sigaction* %8, %struct.sigaction* %14) #13, !dbg !9393
  %125 = call i32 @sigaction(i32 21, %struct.sigaction* %8, %struct.sigaction* %15) #13, !dbg !9394
  %126 = call i32 @sigaction(i32 22, %struct.sigaction* %8, %struct.sigaction* %16) #13, !dbg !9395
  %127 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %8, i32 0, i32 0, !dbg !9396
  %128 = bitcast %union.anon* %127 to void (i32)**, !dbg !9396
  store void (i32)* inttoptr (i64 1 to void (i32)*), void (i32)** %128, align 8, !dbg !9397
  %129 = call i32 @sigaction(i32 13, %struct.sigaction* %8, %struct.sigaction* %17) #13, !dbg !9398
  %130 = load i8*, i8** %5, align 8, !dbg !9399
  %131 = icmp ne i8* %130, null, !dbg !9399
  br i1 %131, label %132, label %141, !dbg !9401

132:                                              ; preds = %112
  %133 = load i32, i32* %21, align 4, !dbg !9402
  %134 = load i8*, i8** %5, align 8, !dbg !9405
  %135 = load i8*, i8** %5, align 8, !dbg !9406
  %136 = call i64 @strlen(i8* %135) #12, !dbg !9407
  %137 = call i64 @write(i32 %133, i8* %134, i64 %136), !dbg !9408
  %138 = icmp eq i64 %137, -1, !dbg !9409
  br i1 %138, label %139, label %140, !dbg !9410

139:                                              ; preds = %132
  br label %167, !dbg !9411

140:                                              ; preds = %132
  br label %141, !dbg !9412

141:                                              ; preds = %140, %112
  %142 = load i32, i32* %6, align 4, !dbg !9413
  %143 = icmp sgt i32 %142, 0, !dbg !9415
  br i1 %143, label %144, label %147, !dbg !9416

144:                                              ; preds = %141
  %145 = load i32, i32* %6, align 4, !dbg !9417
  %146 = call i32 @alarm(i32 %145) #13, !dbg !9418
  br label %147, !dbg !9418

147:                                              ; preds = %144, %141
  %148 = load i32, i32* %20, align 4, !dbg !9419
  %149 = load i32, i32* %7, align 4, !dbg !9420
  %150 = and i32 %149, 8, !dbg !9420
  %151 = call i8* @getln(i32 %148, i8* getelementptr inbounds ([257 x i8], [257 x i8]* @tgetpass.buf, i64 0, i64 0), i64 257, i32 %150), !dbg !9421
  store i8* %151, i8** %18, align 8, !dbg !9422
  %152 = call i32 @alarm(i32 0) #13, !dbg !9423
  %153 = call i32* @__errno_location() #14, !dbg !9424
  %154 = load i32, i32* %153, align 4, !dbg !9424
  store i32 %154, i32* %22, align 4, !dbg !9425
  %155 = load i32, i32* %23, align 4, !dbg !9426
  %156 = icmp ne i32 %155, 0, !dbg !9426
  br i1 %156, label %160, label %157, !dbg !9428

157:                                              ; preds = %147
  %158 = load i8*, i8** %18, align 8, !dbg !9429
  %159 = icmp eq i8* %158, null, !dbg !9430
  br i1 %159, label %160, label %166, !dbg !9431

160:                                              ; preds = %157, %147
  %161 = load i32, i32* %21, align 4, !dbg !9432
  %162 = call i64 @write(i32 %161, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.234, i64 0, i64 0), i64 1), !dbg !9435
  %163 = icmp eq i64 %162, -1, !dbg !9436
  br i1 %163, label %164, label %165, !dbg !9437

164:                                              ; preds = %160
  br label %167, !dbg !9438

165:                                              ; preds = %160
  br label %166, !dbg !9439

166:                                              ; preds = %165, %157
  br label %167, !dbg !9440

167:                                              ; preds = %166, %164, %139
  call void @llvm.dbg.label(metadata !9441), !dbg !9442
  %168 = load i32, i32* %7, align 4, !dbg !9443
  %169 = and i32 %168, 1, !dbg !9443
  %170 = icmp ne i32 %169, 0, !dbg !9443
  br i1 %170, label %174, label %171, !dbg !9445

171:                                              ; preds = %167
  %172 = load i32, i32* %20, align 4, !dbg !9446
  %173 = call i32 @term_restore(i32 %172, i32 1), !dbg !9447
  br label %174, !dbg !9447

174:                                              ; preds = %171, %167
  %175 = call i32 @sigaction(i32 14, %struct.sigaction* %9, %struct.sigaction* null) #13, !dbg !9448
  %176 = call i32 @sigaction(i32 2, %struct.sigaction* %10, %struct.sigaction* null) #13, !dbg !9449
  %177 = call i32 @sigaction(i32 1, %struct.sigaction* %11, %struct.sigaction* null) #13, !dbg !9450
  %178 = call i32 @sigaction(i32 3, %struct.sigaction* %12, %struct.sigaction* null) #13, !dbg !9451
  %179 = call i32 @sigaction(i32 15, %struct.sigaction* %13, %struct.sigaction* null) #13, !dbg !9452
  %180 = call i32 @sigaction(i32 20, %struct.sigaction* %14, %struct.sigaction* null) #13, !dbg !9453
  %181 = call i32 @sigaction(i32 21, %struct.sigaction* %15, %struct.sigaction* null) #13, !dbg !9454
  %182 = call i32 @sigaction(i32 22, %struct.sigaction* %16, %struct.sigaction* null) #13, !dbg !9455
  %183 = call i32 @sigaction(i32 22, %struct.sigaction* %17, %struct.sigaction* null) #13, !dbg !9456
  %184 = load i32, i32* %20, align 4, !dbg !9457
  %185 = icmp ne i32 %184, 0, !dbg !9459
  br i1 %185, label %186, label %189, !dbg !9460

186:                                              ; preds = %174
  %187 = load i32, i32* %20, align 4, !dbg !9461
  %188 = call i32 @close(i32 %187), !dbg !9462
  br label %189, !dbg !9463

189:                                              ; preds = %186, %174
  store i32 0, i32* %19, align 4, !dbg !9464
  br label %190, !dbg !9466

190:                                              ; preds = %207, %189
  %191 = load i32, i32* %19, align 4, !dbg !9467
  %192 = icmp slt i32 %191, 65, !dbg !9469
  br i1 %192, label %193, label %210, !dbg !9470

193:                                              ; preds = %190
  %194 = load i32, i32* %19, align 4, !dbg !9471
  %195 = sext i32 %194 to i64, !dbg !9474
  %196 = getelementptr inbounds [65 x i32], [65 x i32]* @signo, i64 0, i64 %195, !dbg !9474
  %197 = load volatile i32, i32* %196, align 4, !dbg !9474
  %198 = icmp ne i32 %197, 0, !dbg !9474
  br i1 %198, label %199, label %206, !dbg !9475

199:                                              ; preds = %193
  %200 = call i32 @getpid() #13, !dbg !9476
  %201 = load i32, i32* %19, align 4, !dbg !9478
  %202 = call i32 @kill(i32 %200, i32 %201) #13, !dbg !9479
  %203 = load i32, i32* %19, align 4, !dbg !9480
  switch i32 %203, label %205 [
    i32 20, label %204
    i32 21, label %204
    i32 22, label %204
  ], !dbg !9481

204:                                              ; preds = %199, %199, %199
  store i32 1, i32* %24, align 4, !dbg !9482
  br label %205, !dbg !9484

205:                                              ; preds = %199, %204
  br label %206, !dbg !9485

206:                                              ; preds = %205, %193
  br label %207, !dbg !9486

207:                                              ; preds = %206
  %208 = load i32, i32* %19, align 4, !dbg !9487
  %209 = add nsw i32 %208, 1, !dbg !9487
  store i32 %209, i32* %19, align 4, !dbg !9487
  br label %190, !dbg !9488, !llvm.loop !9489

210:                                              ; preds = %190
  %211 = load i32, i32* %24, align 4, !dbg !9491
  %212 = icmp ne i32 %211, 0, !dbg !9491
  br i1 %212, label %213, label %214, !dbg !9493

213:                                              ; preds = %210
  br label %78, !dbg !9494

214:                                              ; preds = %210
  %215 = load i32, i32* %22, align 4, !dbg !9495
  %216 = icmp ne i32 %215, 0, !dbg !9495
  br i1 %216, label %217, label %220, !dbg !9497

217:                                              ; preds = %214
  %218 = load i32, i32* %22, align 4, !dbg !9498
  %219 = call i32* @__errno_location() #14, !dbg !9499
  store i32 %218, i32* %219, align 4, !dbg !9500
  br label %220, !dbg !9499

220:                                              ; preds = %217, %214
  %221 = load i8*, i8** %18, align 8, !dbg !9501
  store i8* %221, i8** %4, align 8, !dbg !9502
  br label %222, !dbg !9502

222:                                              ; preds = %220, %73, %54
  %223 = load i8*, i8** %4, align 8, !dbg !9503
  ret i8* %223, !dbg !9503
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @tty_present() #0 !dbg !9504 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9505, metadata !DIExpression()), !dbg !9506
  %2 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.232, i64 0, i64 0), i32 258), !dbg !9507
  store i32 %2, i32* %1, align 4, !dbg !9509
  %3 = icmp ne i32 %2, -1, !dbg !9510
  br i1 %3, label %4, label %7, !dbg !9511

4:                                                ; preds = %0
  %5 = load i32, i32* %1, align 4, !dbg !9512
  %6 = call i32 @close(i32 %5), !dbg !9513
  br label %7, !dbg !9513

7:                                                ; preds = %4, %0
  %8 = load i32, i32* %1, align 4, !dbg !9514
  %9 = icmp ne i32 %8, -1, !dbg !9515
  %10 = zext i1 %9 to i32, !dbg !9515
  ret i32 %10, !dbg !9516
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @sudo_askpass(i8* %0, i8* %1) #0 !dbg !743 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.sigaction, align 8
  %6 = alloca %struct.sigaction, align 8
  %7 = alloca [2 x i32], align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !9517, metadata !DIExpression()), !dbg !9518
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !9519, metadata !DIExpression()), !dbg !9520
  call void @llvm.dbg.declare(metadata %struct.sigaction* %5, metadata !9521, metadata !DIExpression()), !dbg !9522
  call void @llvm.dbg.declare(metadata %struct.sigaction* %6, metadata !9523, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.declare(metadata [2 x i32]* %7, metadata !9525, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9527, metadata !DIExpression()), !dbg !9528
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 0, !dbg !9529
  %10 = call i32 @pipe(i32* %9) #13, !dbg !9531
  %11 = icmp eq i32 %10, -1, !dbg !9532
  br i1 %11, label %12, label %14, !dbg !9533

12:                                               ; preds = %2
  %13 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6.237, i64 0, i64 0)) #13, !dbg !9534
  call void (i32, i8*, ...) @error(i32 1, i8* %13) #16, !dbg !9535
  unreachable, !dbg !9535

14:                                               ; preds = %2
  %15 = call i32 @fork() #13, !dbg !9536
  store i32 %15, i32* %8, align 4, !dbg !9538
  %16 = icmp eq i32 %15, -1, !dbg !9539
  br i1 %16, label %17, label %19, !dbg !9540

17:                                               ; preds = %14
  %18 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.238, i64 0, i64 0)) #13, !dbg !9541
  call void (i32, i8*, ...) @error(i32 1, i8* %18) #16, !dbg !9542
  unreachable, !dbg !9542

19:                                               ; preds = %14
  %20 = load i32, i32* %8, align 4, !dbg !9543
  %21 = icmp eq i32 %20, 0, !dbg !9545
  br i1 %21, label %22, label %50, !dbg !9546

22:                                               ; preds = %19
  %23 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 1, !dbg !9547
  %24 = load i32, i32* %23, align 4, !dbg !9547
  %25 = call i32 @dup2(i32 %24, i32 1) #13, !dbg !9550
  %26 = icmp eq i32 %25, -1, !dbg !9551
  br i1 %26, label %27, label %28, !dbg !9552

27:                                               ; preds = %22
  call void (i8*, ...) @warning(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.239, i64 0, i64 0)), !dbg !9553
  call void @_exit(i32 255) #16, !dbg !9555
  unreachable, !dbg !9555

28:                                               ; preds = %22
  %29 = call i32 @setuid(i32 0) #13, !dbg !9556
  %30 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 2), align 8, !dbg !9557
  %31 = call i32 @setgid(i32 %30) #13, !dbg !9559
  %32 = icmp ne i32 %31, 0, !dbg !9559
  br i1 %32, label %33, label %36, !dbg !9560

33:                                               ; preds = %28
  %34 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9.240, i64 0, i64 0)) #13, !dbg !9561
  %35 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 2), align 8, !dbg !9563
  call void (i8*, ...) @warning(i8* %34, i32 %35), !dbg !9564
  call void @_exit(i32 255) #16, !dbg !9565
  unreachable, !dbg !9565

36:                                               ; preds = %28
  %37 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !9566
  %38 = call i32 @setuid(i32 %37) #13, !dbg !9568
  %39 = icmp ne i32 %38, 0, !dbg !9568
  br i1 %39, label %40, label %43, !dbg !9569

40:                                               ; preds = %36
  %41 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10.241, i64 0, i64 0)) #13, !dbg !9570
  %42 = load i32, i32* getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 0), align 8, !dbg !9572
  call void (i8*, ...) @warning(i8* %41, i32 %42), !dbg !9573
  call void @_exit(i32 255) #16, !dbg !9574
  unreachable, !dbg !9574

43:                                               ; preds = %36
  call void @closefrom(i32 3), !dbg !9575
  %44 = load i8*, i8** %3, align 8, !dbg !9576
  %45 = load i8*, i8** %3, align 8, !dbg !9577
  %46 = load i8*, i8** %4, align 8, !dbg !9578
  %47 = call i32 (i8*, i8*, ...) @execl(i8* %44, i8* %45, i8* %46, i8* null) #13, !dbg !9579
  %48 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11.242, i64 0, i64 0)) #13, !dbg !9580
  %49 = load i8*, i8** %3, align 8, !dbg !9581
  call void (i8*, ...) @warning(i8* %48, i8* %49), !dbg !9582
  call void @_exit(i32 255) #16, !dbg !9583
  unreachable, !dbg !9583

50:                                               ; preds = %19
  %51 = bitcast %struct.sigaction* %5 to i8*, !dbg !9584
  call void @zero_bytes(i8* %51, i64 152), !dbg !9585
  %52 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %5, i32 0, i32 1, !dbg !9586
  %53 = call i32 @sigemptyset(%struct.__sigset_t* %52) #13, !dbg !9587
  %54 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %5, i32 0, i32 2, !dbg !9588
  store i32 536870912, i32* %54, align 8, !dbg !9589
  %55 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %5, i32 0, i32 0, !dbg !9590
  %56 = bitcast %union.anon* %55 to void (i32)**, !dbg !9590
  store void (i32)* inttoptr (i64 1 to void (i32)*), void (i32)** %56, align 8, !dbg !9591
  %57 = call i32 @sigaction(i32 13, %struct.sigaction* %5, %struct.sigaction* %6) #13, !dbg !9592
  %58 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 1, !dbg !9593
  %59 = load i32, i32* %58, align 4, !dbg !9593
  %60 = call i32 @close(i32 %59), !dbg !9594
  %61 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 0, !dbg !9595
  %62 = load i32, i32* %61, align 4, !dbg !9595
  %63 = call i8* @getln(i32 %62, i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sudo_askpass.buf, i64 0, i64 0), i64 257, i32 0), !dbg !9596
  store i8* %63, i8** @sudo_askpass.pass, align 8, !dbg !9597
  %64 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 0, !dbg !9598
  %65 = load i32, i32* %64, align 4, !dbg !9598
  %66 = call i32 @close(i32 %65), !dbg !9599
  %67 = call i32 @sigaction(i32 13, %struct.sigaction* %6, %struct.sigaction* null) #13, !dbg !9600
  %68 = load i8*, i8** @sudo_askpass.pass, align 8, !dbg !9601
  ret i8* %68, !dbg !9602
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @handler.233(i32 %0) #0 !dbg !9603 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9604, metadata !DIExpression()), !dbg !9605
  %3 = load i32, i32* %2, align 4, !dbg !9606
  %4 = icmp ne i32 %3, 14, !dbg !9608
  br i1 %4, label %5, label %9, !dbg !9609

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !9610
  %7 = sext i32 %6 to i64, !dbg !9611
  %8 = getelementptr inbounds [65 x i32], [65 x i32]* @signo, i64 0, i64 %7, !dbg !9611
  store volatile i32 1, i32* %8, align 4, !dbg !9612
  br label %9, !dbg !9611

9:                                                ; preds = %5, %1
  ret void, !dbg !9613
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @getln(i32 %0, i8* %1, i64 %2, i32 %3) #0 !dbg !9614 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8, align 1
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9617, metadata !DIExpression()), !dbg !9618
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !9619, metadata !DIExpression()), !dbg !9620
  store i64 %2, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !9621, metadata !DIExpression()), !dbg !9622
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9623, metadata !DIExpression()), !dbg !9624
  call void @llvm.dbg.declare(metadata i64* %10, metadata !9625, metadata !DIExpression()), !dbg !9626
  %14 = load i64, i64* %8, align 8, !dbg !9627
  store i64 %14, i64* %10, align 8, !dbg !9626
  call void @llvm.dbg.declare(metadata i64* %11, metadata !9628, metadata !DIExpression()), !dbg !9629
  store i64 -1, i64* %11, align 8, !dbg !9629
  call void @llvm.dbg.declare(metadata i8** %12, metadata !9630, metadata !DIExpression()), !dbg !9631
  %15 = load i8*, i8** %7, align 8, !dbg !9632
  store i8* %15, i8** %12, align 8, !dbg !9631
  call void @llvm.dbg.declare(metadata i8* %13, metadata !9633, metadata !DIExpression()), !dbg !9634
  store i8 0, i8* %13, align 1, !dbg !9634
  %16 = load i64, i64* %10, align 8, !dbg !9635
  %17 = icmp eq i64 %16, 0, !dbg !9637
  br i1 %17, label %18, label %20, !dbg !9638

18:                                               ; preds = %4
  %19 = call i32* @__errno_location() #14, !dbg !9639
  store i32 22, i32* %19, align 4, !dbg !9641
  store i8* null, i8** %5, align 8, !dbg !9642
  br label %119, !dbg !9642

20:                                               ; preds = %4
  br label %21, !dbg !9643

21:                                               ; preds = %89, %81, %60, %20
  %22 = load i64, i64* %10, align 8, !dbg !9644
  %23 = add i64 %22, -1, !dbg !9644
  store i64 %23, i64* %10, align 8, !dbg !9644
  %24 = icmp ne i64 %23, 0, !dbg !9643
  br i1 %24, label %25, label %93, !dbg !9643

25:                                               ; preds = %21
  %26 = load i32, i32* %6, align 4, !dbg !9645
  %27 = call i64 @read(i32 %26, i8* %13, i64 1), !dbg !9647
  store i64 %27, i64* %11, align 8, !dbg !9648
  %28 = load i64, i64* %11, align 8, !dbg !9649
  %29 = icmp ne i64 %28, 1, !dbg !9651
  br i1 %29, label %38, label %30, !dbg !9652

30:                                               ; preds = %25
  %31 = load i8, i8* %13, align 1, !dbg !9653
  %32 = sext i8 %31 to i32, !dbg !9653
  %33 = icmp eq i32 %32, 10, !dbg !9654
  br i1 %33, label %38, label %34, !dbg !9655

34:                                               ; preds = %30
  %35 = load i8, i8* %13, align 1, !dbg !9656
  %36 = sext i8 %35 to i32, !dbg !9656
  %37 = icmp eq i32 %36, 13, !dbg !9657
  br i1 %37, label %38, label %39, !dbg !9658

38:                                               ; preds = %34, %30, %25
  br label %93, !dbg !9659

39:                                               ; preds = %34
  %40 = load i32, i32* %9, align 4, !dbg !9660
  %41 = icmp ne i32 %40, 0, !dbg !9660
  br i1 %41, label %42, label %89, !dbg !9662

42:                                               ; preds = %39
  %43 = load i8, i8* %13, align 1, !dbg !9663
  %44 = sext i8 %43 to i32, !dbg !9663
  %45 = load i32, i32* @term_kill, align 4, !dbg !9666
  %46 = icmp eq i32 %44, %45, !dbg !9667
  br i1 %46, label %47, label %62, !dbg !9668

47:                                               ; preds = %42
  br label %48, !dbg !9669

48:                                               ; preds = %57, %47
  %49 = load i8*, i8** %12, align 8, !dbg !9671
  %50 = load i8*, i8** %7, align 8, !dbg !9672
  %51 = icmp ugt i8* %49, %50, !dbg !9673
  br i1 %51, label %52, label %60, !dbg !9669

52:                                               ; preds = %48
  %53 = load i32, i32* %6, align 4, !dbg !9674
  %54 = call i64 @write(i32 %53, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.235, i64 0, i64 0), i64 3), !dbg !9677
  %55 = icmp eq i64 %54, -1, !dbg !9678
  br i1 %55, label %56, label %57, !dbg !9679

56:                                               ; preds = %52
  br label %60, !dbg !9680

57:                                               ; preds = %52
  %58 = load i8*, i8** %12, align 8, !dbg !9681
  %59 = getelementptr inbounds i8, i8* %58, i32 -1, !dbg !9681
  store i8* %59, i8** %12, align 8, !dbg !9681
  br label %48, !dbg !9669, !llvm.loop !9682

60:                                               ; preds = %56, %48
  %61 = load i64, i64* %8, align 8, !dbg !9684
  store i64 %61, i64* %10, align 8, !dbg !9685
  br label %21, !dbg !9686, !llvm.loop !9687

62:                                               ; preds = %42
  %63 = load i8, i8* %13, align 1, !dbg !9689
  %64 = sext i8 %63 to i32, !dbg !9689
  %65 = load i32, i32* @term_erase, align 4, !dbg !9691
  %66 = icmp eq i32 %64, %65, !dbg !9692
  br i1 %66, label %67, label %82, !dbg !9693

67:                                               ; preds = %62
  %68 = load i8*, i8** %12, align 8, !dbg !9694
  %69 = load i8*, i8** %7, align 8, !dbg !9697
  %70 = icmp ugt i8* %68, %69, !dbg !9698
  br i1 %70, label %71, label %81, !dbg !9699

71:                                               ; preds = %67
  %72 = load i32, i32* %6, align 4, !dbg !9700
  %73 = call i64 @write(i32 %72, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.235, i64 0, i64 0), i64 3), !dbg !9703
  %74 = icmp eq i64 %73, -1, !dbg !9704
  br i1 %74, label %75, label %76, !dbg !9705

75:                                               ; preds = %71
  br label %93, !dbg !9706

76:                                               ; preds = %71
  %77 = load i8*, i8** %12, align 8, !dbg !9707
  %78 = getelementptr inbounds i8, i8* %77, i32 -1, !dbg !9707
  store i8* %78, i8** %12, align 8, !dbg !9707
  %79 = load i64, i64* %10, align 8, !dbg !9708
  %80 = add i64 %79, 1, !dbg !9708
  store i64 %80, i64* %10, align 8, !dbg !9708
  br label %81, !dbg !9709

81:                                               ; preds = %76, %67
  br label %21, !dbg !9710, !llvm.loop !9687

82:                                               ; preds = %62
  br label %83

83:                                               ; preds = %82
  %84 = load i32, i32* %6, align 4, !dbg !9711
  %85 = call i64 @write(i32 %84, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13.236, i64 0, i64 0), i64 1), !dbg !9713
  %86 = icmp eq i64 %85, -1, !dbg !9714
  br i1 %86, label %87, label %88, !dbg !9715

87:                                               ; preds = %83
  br label %88, !dbg !9715

88:                                               ; preds = %87, %83
  br label %89, !dbg !9716

89:                                               ; preds = %88, %39
  %90 = load i8, i8* %13, align 1, !dbg !9717
  %91 = load i8*, i8** %12, align 8, !dbg !9718
  %92 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !9718
  store i8* %92, i8** %12, align 8, !dbg !9718
  store i8 %90, i8* %91, align 1, !dbg !9719
  br label %21, !dbg !9643, !llvm.loop !9687

93:                                               ; preds = %75, %38, %21
  %94 = load i8*, i8** %12, align 8, !dbg !9720
  store i8 0, i8* %94, align 1, !dbg !9721
  %95 = load i32, i32* %9, align 4, !dbg !9722
  %96 = icmp ne i32 %95, 0, !dbg !9722
  br i1 %96, label %97, label %111, !dbg !9724

97:                                               ; preds = %93
  br label %98, !dbg !9725

98:                                               ; preds = %107, %97
  %99 = load i8*, i8** %12, align 8, !dbg !9727
  %100 = load i8*, i8** %7, align 8, !dbg !9728
  %101 = icmp ugt i8* %99, %100, !dbg !9729
  br i1 %101, label %102, label %110, !dbg !9725

102:                                              ; preds = %98
  %103 = load i32, i32* %6, align 4, !dbg !9730
  %104 = call i64 @write(i32 %103, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.235, i64 0, i64 0), i64 3), !dbg !9733
  %105 = icmp eq i64 %104, -1, !dbg !9734
  br i1 %105, label %106, label %107, !dbg !9735

106:                                              ; preds = %102
  br label %110, !dbg !9736

107:                                              ; preds = %102
  %108 = load i8*, i8** %12, align 8, !dbg !9737
  %109 = getelementptr inbounds i8, i8* %108, i32 -1, !dbg !9737
  store i8* %109, i8** %12, align 8, !dbg !9737
  br label %98, !dbg !9725, !llvm.loop !9738

110:                                              ; preds = %106, %98
  br label %111, !dbg !9740

111:                                              ; preds = %110, %93
  %112 = load i64, i64* %11, align 8, !dbg !9741
  %113 = icmp eq i64 %112, 1, !dbg !9742
  br i1 %113, label %114, label %116, !dbg !9741

114:                                              ; preds = %111
  %115 = load i8*, i8** %7, align 8, !dbg !9743
  br label %117, !dbg !9741

116:                                              ; preds = %111
  br label %117, !dbg !9741

117:                                              ; preds = %116, %114
  %118 = phi i8* [ %115, %114 ], [ null, %116 ], !dbg !9741
  store i8* %118, i8** %5, align 8, !dbg !9744
  br label %119, !dbg !9744

119:                                              ; preds = %117, %18
  %120 = load i8*, i8** %5, align 8, !dbg !9745
  ret i8* %120, !dbg !9745
}

; Function Attrs: nounwind
declare dso_local i32 @execl(i8*, i8*, ...) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @get_ttysize(i32* %0, i32* %1) #0 !dbg !9746 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.winsize, align 2
  store i32* %0, i32** %3, align 8
  call void @llvm.dbg.declare(metadata i32** %3, metadata !9750, metadata !DIExpression()), !dbg !9751
  store i32* %1, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !9752, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9754, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.declare(metadata %struct.winsize* %6, metadata !9756, metadata !DIExpression()), !dbg !9763
  %7 = call i32 (i32, i64, ...) @ioctl(i32 2, i64 21523, %struct.winsize* %6) #13, !dbg !9764
  %8 = icmp eq i32 %7, 0, !dbg !9766
  br i1 %8, label %9, label %28, !dbg !9767

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.winsize, %struct.winsize* %6, i32 0, i32 0, !dbg !9768
  %11 = load i16, i16* %10, align 2, !dbg !9768
  %12 = zext i16 %11 to i32, !dbg !9769
  %13 = icmp ne i32 %12, 0, !dbg !9770
  br i1 %13, label %14, label %28, !dbg !9771

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.winsize, %struct.winsize* %6, i32 0, i32 1, !dbg !9772
  %16 = load i16, i16* %15, align 2, !dbg !9772
  %17 = zext i16 %16 to i32, !dbg !9773
  %18 = icmp ne i32 %17, 0, !dbg !9774
  br i1 %18, label %19, label %28, !dbg !9775

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.winsize, %struct.winsize* %6, i32 0, i32 0, !dbg !9776
  %21 = load i16, i16* %20, align 2, !dbg !9776
  %22 = zext i16 %21 to i32, !dbg !9778
  %23 = load i32*, i32** %3, align 8, !dbg !9779
  store i32 %22, i32* %23, align 4, !dbg !9780
  %24 = getelementptr inbounds %struct.winsize, %struct.winsize* %6, i32 0, i32 1, !dbg !9781
  %25 = load i16, i16* %24, align 2, !dbg !9781
  %26 = zext i16 %25 to i32, !dbg !9782
  %27 = load i32*, i32** %4, align 8, !dbg !9783
  store i32 %26, i32* %27, align 4, !dbg !9784
  br label %48, !dbg !9785

28:                                               ; preds = %14, %9, %2
  %29 = call i8* @getenv(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.245, i64 0, i64 0)) #13, !dbg !9786
  store i8* %29, i8** %5, align 8, !dbg !9788
  %30 = icmp eq i8* %29, null, !dbg !9789
  br i1 %30, label %36, label %31, !dbg !9790

31:                                               ; preds = %28
  %32 = load i8*, i8** %5, align 8, !dbg !9791
  %33 = call i32 @atoi(i8* %32) #12, !dbg !9792
  %34 = load i32*, i32** %3, align 8, !dbg !9793
  store i32 %33, i32* %34, align 4, !dbg !9794
  %35 = icmp sle i32 %33, 0, !dbg !9795
  br i1 %35, label %36, label %38, !dbg !9796

36:                                               ; preds = %31, %28
  %37 = load i32*, i32** %3, align 8, !dbg !9797
  store i32 24, i32* %37, align 4, !dbg !9798
  br label %38, !dbg !9799

38:                                               ; preds = %36, %31
  %39 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i64 0, i64 0)) #13, !dbg !9800
  store i8* %39, i8** %5, align 8, !dbg !9802
  %40 = icmp eq i8* %39, null, !dbg !9803
  br i1 %40, label %46, label %41, !dbg !9804

41:                                               ; preds = %38
  %42 = load i8*, i8** %5, align 8, !dbg !9805
  %43 = call i32 @atoi(i8* %42) #12, !dbg !9806
  %44 = load i32*, i32** %4, align 8, !dbg !9807
  store i32 %43, i32* %44, align 4, !dbg !9808
  %45 = icmp sle i32 %43, 0, !dbg !9809
  br i1 %45, label %46, label %48, !dbg !9810

46:                                               ; preds = %41, %38
  %47 = load i32*, i32** %4, align 8, !dbg !9811
  store i32 80, i32* %47, align 4, !dbg !9812
  br label %48, !dbg !9813

48:                                               ; preds = %19, %46, %41
  ret void, !dbg !9814
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utmp_login(i8* %0, i8* %1, i32 %2, i8* %3) #0 !dbg !9815 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %struct.utmpx, align 4
  %10 = alloca %struct.utmpx*, align 8
  %11 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9819, metadata !DIExpression()), !dbg !9820
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9821, metadata !DIExpression()), !dbg !9822
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9823, metadata !DIExpression()), !dbg !9824
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !9825, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.declare(metadata %struct.utmpx* %9, metadata !9827, metadata !DIExpression()), !dbg !9858
  call void @llvm.dbg.declare(metadata %struct.utmpx** %10, metadata !9859, metadata !DIExpression()), !dbg !9861
  store %struct.utmpx* null, %struct.utmpx** %10, align 8, !dbg !9861
  call void @llvm.dbg.declare(metadata i32* %11, metadata !9862, metadata !DIExpression()), !dbg !9863
  store i32 0, i32* %11, align 4, !dbg !9863
  %12 = load i8*, i8** %6, align 8, !dbg !9864
  %13 = call i32 @strncmp(i8* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.249, i64 0, i64 0), i64 5) #12, !dbg !9866
  %14 = icmp eq i32 %13, 0, !dbg !9867
  br i1 %14, label %15, label %18, !dbg !9868

15:                                               ; preds = %4
  %16 = load i8*, i8** %6, align 8, !dbg !9869
  %17 = getelementptr inbounds i8, i8* %16, i64 5, !dbg !9869
  store i8* %17, i8** %6, align 8, !dbg !9869
  br label %18, !dbg !9870

18:                                               ; preds = %15, %4
  call void @setutxent(), !dbg !9871
  %19 = load i8*, i8** %5, align 8, !dbg !9872
  %20 = icmp ne i8* %19, null, !dbg !9874
  br i1 %20, label %21, label %35, !dbg !9875

21:                                               ; preds = %18
  %22 = load i8*, i8** %5, align 8, !dbg !9876
  %23 = call i32 @strncmp(i8* %22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.249, i64 0, i64 0), i64 5) #12, !dbg !9879
  %24 = icmp eq i32 %23, 0, !dbg !9880
  br i1 %24, label %25, label %28, !dbg !9881

25:                                               ; preds = %21
  %26 = load i8*, i8** %5, align 8, !dbg !9882
  %27 = getelementptr inbounds i8, i8* %26, i64 5, !dbg !9882
  store i8* %27, i8** %5, align 8, !dbg !9882
  br label %28, !dbg !9883

28:                                               ; preds = %25, %21
  %29 = bitcast %struct.utmpx* %9 to i8*, !dbg !9884
  call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 0, i64 384, i1 false), !dbg !9884
  %30 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %9, i32 0, i32 2, !dbg !9885
  %31 = getelementptr inbounds [32 x i8], [32 x i8]* %30, i64 0, i64 0, !dbg !9886
  %32 = load i8*, i8** %5, align 8, !dbg !9887
  %33 = call i8* @strncpy(i8* %31, i8* %32, i64 32) #13, !dbg !9888
  %34 = call %struct.utmpx* @getutxline(%struct.utmpx* %9), !dbg !9889
  store %struct.utmpx* %34, %struct.utmpx** %10, align 8, !dbg !9890
  br label %35, !dbg !9891

35:                                               ; preds = %28, %18
  %36 = load i8*, i8** %6, align 8, !dbg !9892
  %37 = load i8*, i8** %8, align 8, !dbg !9893
  %38 = load %struct.utmpx*, %struct.utmpx** %10, align 8, !dbg !9894
  call void @utmp_fill(i8* %36, i8* %37, %struct.utmpx* %38, %struct.utmpx* %9), !dbg !9895
  %39 = call %struct.utmpx* @pututxline(%struct.utmpx* %9), !dbg !9896
  %40 = icmp ne %struct.utmpx* %39, null, !dbg !9898
  br i1 %40, label %41, label %42, !dbg !9899

41:                                               ; preds = %35
  store i32 1, i32* %11, align 4, !dbg !9900
  br label %42, !dbg !9901

42:                                               ; preds = %41, %35
  call void @endutxent(), !dbg !9902
  %43 = load i32, i32* %11, align 4, !dbg !9903
  ret i32 %43, !dbg !9904
}

declare dso_local void @setutxent() #3

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #4

declare dso_local %struct.utmpx* @getutxline(%struct.utmpx*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @utmp_fill(i8* %0, i8* %1, %struct.utmpx* %2, %struct.utmpx* %3) #0 !dbg !9905 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.utmpx*, align 8
  %8 = alloca %struct.utmpx*, align 8
  store i8* %0, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9908, metadata !DIExpression()), !dbg !9909
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9910, metadata !DIExpression()), !dbg !9911
  store %struct.utmpx* %2, %struct.utmpx** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %7, metadata !9912, metadata !DIExpression()), !dbg !9913
  store %struct.utmpx* %3, %struct.utmpx** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %8, metadata !9914, metadata !DIExpression()), !dbg !9915
  %9 = load %struct.utmpx*, %struct.utmpx** %7, align 8, !dbg !9916
  %10 = icmp eq %struct.utmpx* %9, null, !dbg !9918
  br i1 %10, label %11, label %23, !dbg !9919

11:                                               ; preds = %4
  %12 = load %struct.utmpx*, %struct.utmpx** %8, align 8, !dbg !9920
  %13 = bitcast %struct.utmpx* %12 to i8*, !dbg !9922
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 384, i1 false), !dbg !9922
  %14 = load i8*, i8** %6, align 8, !dbg !9923
  %15 = icmp eq i8* %14, null, !dbg !9925
  br i1 %15, label %16, label %22, !dbg !9926

16:                                               ; preds = %11
  %17 = load %struct.utmpx*, %struct.utmpx** %8, align 8, !dbg !9927
  %18 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %17, i32 0, i32 4, !dbg !9929
  %19 = getelementptr inbounds [32 x i8], [32 x i8]* %18, i64 0, i64 0, !dbg !9927
  %20 = load i8*, i8** getelementptr inbounds (%struct.user_details, %struct.user_details* @user_details, i32 0, i32 4), align 8, !dbg !9930
  %21 = call i8* @strncpy(i8* %19, i8* %20, i64 32) #13, !dbg !9931
  br label %22, !dbg !9932

22:                                               ; preds = %16, %11
  br label %33, !dbg !9933

23:                                               ; preds = %4
  %24 = load %struct.utmpx*, %struct.utmpx** %7, align 8, !dbg !9934
  %25 = load %struct.utmpx*, %struct.utmpx** %8, align 8, !dbg !9936
  %26 = icmp ne %struct.utmpx* %24, %25, !dbg !9937
  br i1 %26, label %27, label %32, !dbg !9938

27:                                               ; preds = %23
  %28 = load %struct.utmpx*, %struct.utmpx** %8, align 8, !dbg !9939
  %29 = bitcast %struct.utmpx* %28 to i8*, !dbg !9941
  %30 = load %struct.utmpx*, %struct.utmpx** %7, align 8, !dbg !9942
  %31 = bitcast %struct.utmpx* %30 to i8*, !dbg !9941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %31, i64 384, i1 false), !dbg !9941
  br label %32, !dbg !9943

32:                                               ; preds = %27, %23
  br label %33

33:                                               ; preds = %32, %22
  %34 = load i8*, i8** %6, align 8, !dbg !9944
  %35 = icmp ne i8* %34, null, !dbg !9946
  br i1 %35, label %36, label %42, !dbg !9947

36:                                               ; preds = %33
  %37 = load %struct.utmpx*, %struct.utmpx** %8, align 8, !dbg !9948
  %38 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %37, i32 0, i32 4, !dbg !9949
  %39 = getelementptr inbounds [32 x i8], [32 x i8]* %38, i64 0, i64 0, !dbg !9948
  %40 = load i8*, i8** %6, align 8, !dbg !9950
  %41 = call i8* @strncpy(i8* %39, i8* %40, i64 32) #13, !dbg !9951
  br label %42, !dbg !9951

42:                                               ; preds = %36, %33
  %43 = load %struct.utmpx*, %struct.utmpx** %8, align 8, !dbg !9952
  %44 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %43, i32 0, i32 2, !dbg !9953
  %45 = getelementptr inbounds [32 x i8], [32 x i8]* %44, i64 0, i64 0, !dbg !9952
  %46 = load i8*, i8** %5, align 8, !dbg !9954
  %47 = call i8* @strncpy(i8* %45, i8* %46, i64 32) #13, !dbg !9955
  %48 = load %struct.utmpx*, %struct.utmpx** %7, align 8, !dbg !9956
  %49 = load %struct.utmpx*, %struct.utmpx** %8, align 8, !dbg !9957
  call void @utmp_setid(%struct.utmpx* %48, %struct.utmpx* %49), !dbg !9958
  %50 = call i32 @getpid() #13, !dbg !9959
  %51 = load %struct.utmpx*, %struct.utmpx** %8, align 8, !dbg !9960
  %52 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %51, i32 0, i32 1, !dbg !9961
  store i32 %50, i32* %52, align 4, !dbg !9962
  %53 = load %struct.utmpx*, %struct.utmpx** %8, align 8, !dbg !9963
  call void @utmp_settime(%struct.utmpx* %53), !dbg !9964
  %54 = load %struct.utmpx*, %struct.utmpx** %8, align 8, !dbg !9965
  %55 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %54, i32 0, i32 0, !dbg !9966
  store i16 7, i16* %55, align 4, !dbg !9967
  ret void, !dbg !9968
}

declare dso_local %struct.utmpx* @pututxline(%struct.utmpx*) #3

declare dso_local void @endutxent() #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @utmp_setid(%struct.utmpx* %0, %struct.utmpx* %1) #0 !dbg !9969 {
  %3 = alloca %struct.utmpx*, align 8
  %4 = alloca %struct.utmpx*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.utmpx* %0, %struct.utmpx** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %3, metadata !9972, metadata !DIExpression()), !dbg !9973
  store %struct.utmpx* %1, %struct.utmpx** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %4, metadata !9974, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9976, metadata !DIExpression()), !dbg !9977
  %7 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !9978
  %8 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %7, i32 0, i32 2, !dbg !9979
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0, !dbg !9978
  store i8* %9, i8** %5, align 8, !dbg !9977
  call void @llvm.dbg.declare(metadata i64* %6, metadata !9980, metadata !DIExpression()), !dbg !9981
  %10 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !9982
  %11 = icmp ne %struct.utmpx* %10, null, !dbg !9984
  br i1 %11, label %12, label %28, !dbg !9985

12:                                               ; preds = %2
  %13 = load i8*, i8** %5, align 8, !dbg !9986
  %14 = call i32 @strncmp(i8* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.250, i64 0, i64 0), i64 3) #12, !dbg !9989
  %15 = icmp eq i32 %14, 0, !dbg !9990
  br i1 %15, label %16, label %27, !dbg !9991

16:                                               ; preds = %12
  store i64 3, i64* %6, align 8, !dbg !9992
  %17 = load %struct.utmpx*, %struct.utmpx** %3, align 8, !dbg !9994
  %18 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %17, i32 0, i32 3, !dbg !9996
  %19 = getelementptr inbounds [4 x i8], [4 x i8]* %18, i64 0, i64 0, !dbg !9994
  %20 = load i64, i64* %6, align 8, !dbg !9997
  %21 = call i32 @strncmp(i8* %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1.250, i64 0, i64 0), i64 %20) #12, !dbg !9998
  %22 = icmp ne i32 %21, 0, !dbg !9999
  br i1 %22, label %23, label %26, !dbg !10000

23:                                               ; preds = %16
  %24 = load i8*, i8** %5, align 8, !dbg !10001
  %25 = getelementptr inbounds i8, i8* %24, i64 3, !dbg !10001
  store i8* %25, i8** %5, align 8, !dbg !10001
  br label %26, !dbg !10002

26:                                               ; preds = %23, %16
  br label %27, !dbg !10003

27:                                               ; preds = %26, %12
  br label %28, !dbg !10004

28:                                               ; preds = %27, %2
  %29 = load i8*, i8** %5, align 8, !dbg !10005
  %30 = call i64 @strlen(i8* %29) #12, !dbg !10006
  store i64 %30, i64* %6, align 8, !dbg !10007
  %31 = load i64, i64* %6, align 8, !dbg !10008
  %32 = icmp ugt i64 %31, 4, !dbg !10010
  br i1 %32, label %33, label %38, !dbg !10011

33:                                               ; preds = %28
  %34 = load i64, i64* %6, align 8, !dbg !10012
  %35 = sub i64 %34, 4, !dbg !10014
  %36 = load i8*, i8** %5, align 8, !dbg !10015
  %37 = getelementptr inbounds i8, i8* %36, i64 %35, !dbg !10015
  store i8* %37, i8** %5, align 8, !dbg !10015
  store i64 4, i64* %6, align 8, !dbg !10016
  br label %38, !dbg !10017

38:                                               ; preds = %33, %28
  %39 = load %struct.utmpx*, %struct.utmpx** %4, align 8, !dbg !10018
  %40 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %39, i32 0, i32 3, !dbg !10019
  %41 = getelementptr inbounds [4 x i8], [4 x i8]* %40, i64 0, i64 0, !dbg !10018
  %42 = load i8*, i8** %5, align 8, !dbg !10020
  %43 = load i64, i64* %6, align 8, !dbg !10021
  %44 = call i8* @strncpy(i8* %41, i8* %42, i64 %43) #13, !dbg !10022
  ret void, !dbg !10023
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @utmp_settime(%struct.utmpx* %0) #0 !dbg !10024 {
  %2 = alloca %struct.utmpx*, align 8
  %3 = alloca %struct.timeval, align 8
  store %struct.utmpx* %0, %struct.utmpx** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.utmpx** %2, metadata !10027, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.declare(metadata %struct.timeval* %3, metadata !10029, metadata !DIExpression()), !dbg !10034
  %4 = call i32 @gettimeofday(%struct.timeval* %3, i8* null) #13, !dbg !10035
  %5 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 0, !dbg !10036
  %6 = load i64, i64* %5, align 8, !dbg !10036
  %7 = trunc i64 %6 to i32, !dbg !10037
  %8 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !10038
  %9 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %8, i32 0, i32 8, !dbg !10039
  %10 = getelementptr inbounds %struct.command_status, %struct.command_status* %9, i32 0, i32 0, !dbg !10040
  store i32 %7, i32* %10, align 4, !dbg !10041
  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i32 0, i32 1, !dbg !10042
  %12 = load i64, i64* %11, align 8, !dbg !10042
  %13 = trunc i64 %12 to i32, !dbg !10043
  %14 = load %struct.utmpx*, %struct.utmpx** %2, align 8, !dbg !10044
  %15 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %14, i32 0, i32 8, !dbg !10045
  %16 = getelementptr inbounds %struct.command_status, %struct.command_status* %15, i32 0, i32 1, !dbg !10046
  store i32 %13, i32* %16, align 4, !dbg !10047
  ret void, !dbg !10048
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utmp_logout(i8* %0, i32 %1) #0 !dbg !10049 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.utmpx*, align 8
  %7 = alloca %struct.utmpx, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10052, metadata !DIExpression()), !dbg !10053
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10054, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10056, metadata !DIExpression()), !dbg !10057
  store i32 0, i32* %5, align 4, !dbg !10057
  call void @llvm.dbg.declare(metadata %struct.utmpx** %6, metadata !10058, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.declare(metadata %struct.utmpx* %7, metadata !10060, metadata !DIExpression()), !dbg !10061
  %8 = load i8*, i8** %3, align 8, !dbg !10062
  %9 = call i32 @strncmp(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.249, i64 0, i64 0), i64 5) #12, !dbg !10064
  %10 = icmp eq i32 %9, 0, !dbg !10065
  br i1 %10, label %11, label %14, !dbg !10066

11:                                               ; preds = %2
  %12 = load i8*, i8** %3, align 8, !dbg !10067
  %13 = getelementptr inbounds i8, i8* %12, i64 5, !dbg !10067
  store i8* %13, i8** %3, align 8, !dbg !10067
  br label %14, !dbg !10068

14:                                               ; preds = %11, %2
  %15 = bitcast %struct.utmpx* %7 to i8*, !dbg !10069
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 384, i1 false), !dbg !10069
  %16 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %7, i32 0, i32 2, !dbg !10070
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0, !dbg !10071
  %18 = load i8*, i8** %3, align 8, !dbg !10072
  %19 = call i8* @strncpy(i8* %17, i8* %18, i64 32) #13, !dbg !10073
  %20 = call %struct.utmpx* @getutxline(%struct.utmpx* %7), !dbg !10074
  store %struct.utmpx* %20, %struct.utmpx** %6, align 8, !dbg !10076
  %21 = icmp ne %struct.utmpx* %20, null, !dbg !10077
  br i1 %21, label %22, label %55, !dbg !10078

22:                                               ; preds = %14
  %23 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !10079
  %24 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %23, i32 0, i32 4, !dbg !10081
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %24, i64 0, i64 0, !dbg !10082
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 32, i1 false), !dbg !10082
  %26 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !10083
  %27 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %26, i32 0, i32 0, !dbg !10084
  store i16 8, i16* %27, align 4, !dbg !10085
  %28 = load i32, i32* %4, align 4, !dbg !10086
  %29 = and i32 %28, 65280, !dbg !10086
  %30 = ashr i32 %29, 8, !dbg !10086
  %31 = trunc i32 %30 to i16, !dbg !10086
  %32 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !10087
  %33 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %32, i32 0, i32 6, !dbg !10088
  %34 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %33, i32 0, i32 1, !dbg !10089
  store i16 %31, i16* %34, align 2, !dbg !10090
  %35 = load i32, i32* %4, align 4, !dbg !10091
  %36 = and i32 %35, 127, !dbg !10091
  %37 = icmp eq i32 %36, 0, !dbg !10091
  br i1 %37, label %38, label %42, !dbg !10091

38:                                               ; preds = %22
  %39 = load i32, i32* %4, align 4, !dbg !10092
  %40 = and i32 %39, 65280, !dbg !10092
  %41 = ashr i32 %40, 8, !dbg !10092
  br label %43, !dbg !10091

42:                                               ; preds = %22
  br label %43, !dbg !10091

43:                                               ; preds = %42, %38
  %44 = phi i32 [ %41, %38 ], [ 0, %42 ], !dbg !10091
  %45 = trunc i32 %44 to i16, !dbg !10091
  %46 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !10093
  %47 = getelementptr inbounds %struct.utmpx, %struct.utmpx* %46, i32 0, i32 6, !dbg !10094
  %48 = getelementptr inbounds %struct.__exit_status, %struct.__exit_status* %47, i32 0, i32 0, !dbg !10095
  store i16 %45, i16* %48, align 4, !dbg !10096
  %49 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !10097
  call void @utmp_settime(%struct.utmpx* %49), !dbg !10098
  %50 = load %struct.utmpx*, %struct.utmpx** %6, align 8, !dbg !10099
  %51 = call %struct.utmpx* @pututxline(%struct.utmpx* %50), !dbg !10101
  %52 = icmp ne %struct.utmpx* %51, null, !dbg !10102
  br i1 %52, label %53, label %54, !dbg !10103

53:                                               ; preds = %43
  store i32 1, i32* %5, align 4, !dbg !10104
  br label %54, !dbg !10105

54:                                               ; preds = %53, %43
  br label %55, !dbg !10106

55:                                               ; preds = %54, %14
  %56 = load i32, i32* %5, align 4, !dbg !10107
  ret i32 %56, !dbg !10108
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @emalloc(i64 %0) #0 !dbg !10109 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  call void @llvm.dbg.declare(metadata i64* %2, metadata !10113, metadata !DIExpression()), !dbg !10114
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10115, metadata !DIExpression()), !dbg !10116
  %4 = load i64, i64* %2, align 8, !dbg !10117
  %5 = icmp eq i64 %4, 0, !dbg !10119
  br i1 %5, label %6, label %8, !dbg !10120

6:                                                ; preds = %1
  %7 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1.256, i64 0, i64 0)) #13, !dbg !10121
  call void (i32, i8*, ...) @errorx(i32 1, i8* %7) #16, !dbg !10122
  unreachable, !dbg !10122

8:                                                ; preds = %1
  %9 = load i64, i64* %2, align 8, !dbg !10123
  %10 = call noalias i8* @malloc(i64 %9) #13, !dbg !10125
  store i8* %10, i8** %3, align 8, !dbg !10126
  %11 = icmp eq i8* %10, null, !dbg !10127
  br i1 %11, label %12, label %14, !dbg !10128

12:                                               ; preds = %8
  %13 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.257, i64 0, i64 0)) #13, !dbg !10129
  call void (i32, i8*, ...) @errorx(i32 1, i8* %13) #16, !dbg !10130
  unreachable, !dbg !10130

14:                                               ; preds = %8
  %15 = load i8*, i8** %3, align 8, !dbg !10131
  ret i8* %15, !dbg !10132
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

; Function Attrs: noinline nounwind optnone uwtable
define i8* @emalloc2(i64 %0, i64 %1) #0 !dbg !10133 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !10136, metadata !DIExpression()), !dbg !10137
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !10138, metadata !DIExpression()), !dbg !10139
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10140, metadata !DIExpression()), !dbg !10141
  %6 = load i64, i64* %3, align 8, !dbg !10142
  %7 = icmp eq i64 %6, 0, !dbg !10144
  br i1 %7, label %11, label %8, !dbg !10145

8:                                                ; preds = %2
  %9 = load i64, i64* %4, align 8, !dbg !10146
  %10 = icmp eq i64 %9, 0, !dbg !10147
  br i1 %10, label %11, label %13, !dbg !10148

11:                                               ; preds = %8, %2
  %12 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.260, i64 0, i64 0)) #13, !dbg !10149
  call void (i32, i8*, ...) @errorx(i32 1, i8* %12) #16, !dbg !10150
  unreachable, !dbg !10150

13:                                               ; preds = %8
  %14 = load i64, i64* %3, align 8, !dbg !10151
  %15 = load i64, i64* %4, align 8, !dbg !10153
  %16 = udiv i64 -1, %15, !dbg !10154
  %17 = icmp ugt i64 %14, %16, !dbg !10155
  br i1 %17, label %18, label %20, !dbg !10156

18:                                               ; preds = %13
  %19 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.261, i64 0, i64 0)) #13, !dbg !10157
  call void (i32, i8*, ...) @errorx(i32 1, i8* %19) #16, !dbg !10158
  unreachable, !dbg !10158

20:                                               ; preds = %13
  %21 = load i64, i64* %3, align 8, !dbg !10159
  %22 = load i64, i64* %4, align 8, !dbg !10160
  %23 = mul i64 %22, %21, !dbg !10160
  store i64 %23, i64* %4, align 8, !dbg !10160
  %24 = load i64, i64* %4, align 8, !dbg !10161
  %25 = call noalias i8* @malloc(i64 %24) #13, !dbg !10163
  store i8* %25, i8** %5, align 8, !dbg !10164
  %26 = icmp eq i8* %25, null, !dbg !10165
  br i1 %26, label %27, label %29, !dbg !10166

27:                                               ; preds = %20
  %28 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.257, i64 0, i64 0)) #13, !dbg !10167
  call void (i32, i8*, ...) @errorx(i32 1, i8* %28) #16, !dbg !10168
  unreachable, !dbg !10168

29:                                               ; preds = %20
  %30 = load i8*, i8** %5, align 8, !dbg !10169
  ret i8* %30, !dbg !10170
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @erealloc(i8* %0, i64 %1) #0 !dbg !10171 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10174, metadata !DIExpression()), !dbg !10175
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !10176, metadata !DIExpression()), !dbg !10177
  %5 = load i64, i64* %4, align 8, !dbg !10178
  %6 = icmp eq i64 %5, 0, !dbg !10180
  br i1 %6, label %7, label %9, !dbg !10181

7:                                                ; preds = %2
  %8 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.262, i64 0, i64 0)) #13, !dbg !10182
  call void (i32, i8*, ...) @errorx(i32 1, i8* %8) #16, !dbg !10183
  unreachable, !dbg !10183

9:                                                ; preds = %2
  %10 = load i8*, i8** %3, align 8, !dbg !10184
  %11 = icmp ne i8* %10, null, !dbg !10184
  br i1 %11, label %12, label %16, !dbg !10184

12:                                               ; preds = %9
  %13 = load i8*, i8** %3, align 8, !dbg !10185
  %14 = load i64, i64* %4, align 8, !dbg !10186
  %15 = call i8* @realloc(i8* %13, i64 %14) #13, !dbg !10187
  br label %19, !dbg !10184

16:                                               ; preds = %9
  %17 = load i64, i64* %4, align 8, !dbg !10188
  %18 = call noalias i8* @malloc(i64 %17) #13, !dbg !10189
  br label %19, !dbg !10184

19:                                               ; preds = %16, %12
  %20 = phi i8* [ %15, %12 ], [ %18, %16 ], !dbg !10184
  store i8* %20, i8** %3, align 8, !dbg !10190
  %21 = load i8*, i8** %3, align 8, !dbg !10191
  %22 = icmp eq i8* %21, null, !dbg !10193
  br i1 %22, label %23, label %25, !dbg !10194

23:                                               ; preds = %19
  %24 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.257, i64 0, i64 0)) #13, !dbg !10195
  call void (i32, i8*, ...) @errorx(i32 1, i8* %24) #16, !dbg !10196
  unreachable, !dbg !10196

25:                                               ; preds = %19
  %26 = load i8*, i8** %3, align 8, !dbg !10197
  ret i8* %26, !dbg !10198
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #4

; Function Attrs: noinline nounwind optnone uwtable
define i8* @erealloc3(i8* %0, i64 %1, i64 %2) #0 !dbg !10199 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10202, metadata !DIExpression()), !dbg !10203
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !10204, metadata !DIExpression()), !dbg !10205
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !10206, metadata !DIExpression()), !dbg !10207
  %7 = load i64, i64* %5, align 8, !dbg !10208
  %8 = icmp eq i64 %7, 0, !dbg !10210
  br i1 %8, label %12, label %9, !dbg !10211

9:                                                ; preds = %3
  %10 = load i64, i64* %6, align 8, !dbg !10212
  %11 = icmp eq i64 %10, 0, !dbg !10213
  br i1 %11, label %12, label %14, !dbg !10214

12:                                               ; preds = %9, %3
  %13 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i64 0, i64 0)) #13, !dbg !10215
  call void (i32, i8*, ...) @errorx(i32 1, i8* %13) #16, !dbg !10216
  unreachable, !dbg !10216

14:                                               ; preds = %9
  %15 = load i64, i64* %5, align 8, !dbg !10217
  %16 = load i64, i64* %6, align 8, !dbg !10219
  %17 = udiv i64 -1, %16, !dbg !10220
  %18 = icmp ugt i64 %15, %17, !dbg !10221
  br i1 %18, label %19, label %21, !dbg !10222

19:                                               ; preds = %14
  %20 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.266, i64 0, i64 0)) #13, !dbg !10223
  call void (i32, i8*, ...) @errorx(i32 1, i8* %20) #16, !dbg !10224
  unreachable, !dbg !10224

21:                                               ; preds = %14
  %22 = load i64, i64* %5, align 8, !dbg !10225
  %23 = load i64, i64* %6, align 8, !dbg !10226
  %24 = mul i64 %23, %22, !dbg !10226
  store i64 %24, i64* %6, align 8, !dbg !10226
  %25 = load i8*, i8** %4, align 8, !dbg !10227
  %26 = icmp ne i8* %25, null, !dbg !10227
  br i1 %26, label %27, label %31, !dbg !10227

27:                                               ; preds = %21
  %28 = load i8*, i8** %4, align 8, !dbg !10228
  %29 = load i64, i64* %6, align 8, !dbg !10229
  %30 = call i8* @realloc(i8* %28, i64 %29) #13, !dbg !10230
  br label %34, !dbg !10227

31:                                               ; preds = %21
  %32 = load i64, i64* %6, align 8, !dbg !10231
  %33 = call noalias i8* @malloc(i64 %32) #13, !dbg !10232
  br label %34, !dbg !10227

34:                                               ; preds = %31, %27
  %35 = phi i8* [ %30, %27 ], [ %33, %31 ], !dbg !10227
  store i8* %35, i8** %4, align 8, !dbg !10233
  %36 = load i8*, i8** %4, align 8, !dbg !10234
  %37 = icmp eq i8* %36, null, !dbg !10236
  br i1 %37, label %38, label %40, !dbg !10237

38:                                               ; preds = %34
  %39 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.257, i64 0, i64 0)) #13, !dbg !10238
  call void (i32, i8*, ...) @errorx(i32 1, i8* %39) #16, !dbg !10239
  unreachable, !dbg !10239

40:                                               ; preds = %34
  %41 = load i8*, i8** %4, align 8, !dbg !10240
  ret i8* %41, !dbg !10241
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @estrdup(i8* %0) #0 !dbg !10242 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !10245, metadata !DIExpression()), !dbg !10246
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10247, metadata !DIExpression()), !dbg !10248
  store i8* null, i8** %3, align 8, !dbg !10248
  call void @llvm.dbg.declare(metadata i64* %4, metadata !10249, metadata !DIExpression()), !dbg !10250
  %5 = load i8*, i8** %2, align 8, !dbg !10251
  %6 = icmp ne i8* %5, null, !dbg !10253
  br i1 %6, label %7, label %19, !dbg !10254

7:                                                ; preds = %1
  %8 = load i8*, i8** %2, align 8, !dbg !10255
  %9 = call i64 @strlen(i8* %8) #12, !dbg !10257
  store i64 %9, i64* %4, align 8, !dbg !10258
  %10 = load i64, i64* %4, align 8, !dbg !10259
  %11 = add i64 %10, 1, !dbg !10260
  %12 = call i8* @emalloc(i64 %11), !dbg !10261
  store i8* %12, i8** %3, align 8, !dbg !10262
  %13 = load i8*, i8** %3, align 8, !dbg !10263
  %14 = load i8*, i8** %2, align 8, !dbg !10264
  %15 = load i64, i64* %4, align 8, !dbg !10265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %14, i64 %15, i1 false), !dbg !10266
  %16 = load i8*, i8** %3, align 8, !dbg !10267
  %17 = load i64, i64* %4, align 8, !dbg !10268
  %18 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !10267
  store i8 0, i8* %18, align 1, !dbg !10269
  br label %19, !dbg !10270

19:                                               ; preds = %7, %1
  %20 = load i8*, i8** %3, align 8, !dbg !10271
  ret i8* %20, !dbg !10272
}

; Function Attrs: noinline nounwind optnone uwtable
define i8* @estrndup(i8* %0, i64 %1) #0 !dbg !10273 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10276, metadata !DIExpression()), !dbg !10277
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !10278, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10280, metadata !DIExpression()), !dbg !10281
  store i8* null, i8** %5, align 8, !dbg !10281
  call void @llvm.dbg.declare(metadata i64* %6, metadata !10282, metadata !DIExpression()), !dbg !10283
  %7 = load i8*, i8** %3, align 8, !dbg !10284
  %8 = icmp ne i8* %7, null, !dbg !10286
  br i1 %8, label %9, label %27, !dbg !10287

9:                                                ; preds = %2
  %10 = load i8*, i8** %3, align 8, !dbg !10288
  %11 = call i64 @strlen(i8* %10) #12, !dbg !10290
  store i64 %11, i64* %6, align 8, !dbg !10291
  %12 = load i64, i64* %6, align 8, !dbg !10292
  %13 = load i64, i64* %4, align 8, !dbg !10294
  %14 = icmp ugt i64 %12, %13, !dbg !10295
  br i1 %14, label %15, label %17, !dbg !10296

15:                                               ; preds = %9
  %16 = load i64, i64* %4, align 8, !dbg !10297
  store i64 %16, i64* %6, align 8, !dbg !10298
  br label %17, !dbg !10299

17:                                               ; preds = %15, %9
  %18 = load i64, i64* %6, align 8, !dbg !10300
  %19 = add i64 %18, 1, !dbg !10301
  %20 = call i8* @emalloc(i64 %19), !dbg !10302
  store i8* %20, i8** %5, align 8, !dbg !10303
  %21 = load i8*, i8** %5, align 8, !dbg !10304
  %22 = load i8*, i8** %3, align 8, !dbg !10305
  %23 = load i64, i64* %6, align 8, !dbg !10306
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %22, i64 %23, i1 false), !dbg !10307
  %24 = load i8*, i8** %5, align 8, !dbg !10308
  %25 = load i64, i64* %6, align 8, !dbg !10309
  %26 = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !10308
  store i8 0, i8* %26, align 1, !dbg !10310
  br label %27, !dbg !10311

27:                                               ; preds = %17, %2
  %28 = load i8*, i8** %5, align 8, !dbg !10312
  ret i8* %28, !dbg !10313
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @easprintf(i8** %0, i8* %1, ...) #0 !dbg !10314 {
  %3 = alloca i8**, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  store i8** %0, i8*** %3, align 8
  call void @llvm.dbg.declare(metadata i8*** %3, metadata !10317, metadata !DIExpression()), !dbg !10318
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10319, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10321, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %6, metadata !10323, metadata !DIExpression()), !dbg !10334
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !10335
  %8 = bitcast %struct.__va_list_tag* %7 to i8*, !dbg !10335
  call void @llvm.va_start(i8* %8), !dbg !10335
  %9 = load i8**, i8*** %3, align 8, !dbg !10336
  %10 = load i8*, i8** %4, align 8, !dbg !10337
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !10338
  %12 = call i32 @vasprintf(i8** %9, i8* %10, %struct.__va_list_tag* %11) #13, !dbg !10339
  store i32 %12, i32* %5, align 4, !dbg !10340
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !10341
  %14 = bitcast %struct.__va_list_tag* %13 to i8*, !dbg !10341
  call void @llvm.va_end(i8* %14), !dbg !10341
  %15 = load i32, i32* %5, align 4, !dbg !10342
  %16 = icmp eq i32 %15, -1, !dbg !10344
  br i1 %16, label %17, label %19, !dbg !10345

17:                                               ; preds = %2
  %18 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.257, i64 0, i64 0)) #13, !dbg !10346
  call void (i32, i8*, ...) @errorx(i32 1, i8* %18) #16, !dbg !10347
  unreachable, !dbg !10347

19:                                               ; preds = %2
  %20 = load i32, i32* %5, align 4, !dbg !10348
  ret i32 %20, !dbg !10349
}

; Function Attrs: nounwind
declare i32 @vasprintf(i8**, i8*, %struct.__va_list_tag*) #4

; Function Attrs: noinline nounwind optnone uwtable
define i32 @evasprintf(i8** %0, i8* %1, %struct.__va_list_tag* %2) #0 !dbg !10350 {
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.__va_list_tag*, align 8
  %7 = alloca i32, align 4
  store i8** %0, i8*** %4, align 8
  call void @llvm.dbg.declare(metadata i8*** %4, metadata !10354, metadata !DIExpression()), !dbg !10355
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10356, metadata !DIExpression()), !dbg !10357
  store %struct.__va_list_tag* %2, %struct.__va_list_tag** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %6, metadata !10358, metadata !DIExpression()), !dbg !10359
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10360, metadata !DIExpression()), !dbg !10361
  %8 = load i8**, i8*** %4, align 8, !dbg !10362
  %9 = load i8*, i8** %5, align 8, !dbg !10364
  %10 = load %struct.__va_list_tag*, %struct.__va_list_tag** %6, align 8, !dbg !10365
  %11 = call i32 @vasprintf(i8** %8, i8* %9, %struct.__va_list_tag* %10) #13, !dbg !10366
  store i32 %11, i32* %7, align 4, !dbg !10367
  %12 = icmp eq i32 %11, -1, !dbg !10368
  br i1 %12, label %13, label %15, !dbg !10369

13:                                               ; preds = %3
  %14 = call i8* @dgettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.257, i64 0, i64 0)) #13, !dbg !10370
  call void (i32, i8*, ...) @errorx(i32 1, i8* %14) #16, !dbg !10371
  unreachable, !dbg !10371

15:                                               ; preds = %3
  %16 = load i32, i32* %7, align 4, !dbg !10372
  ret i32 %16, !dbg !10373
}

; Function Attrs: noinline nounwind optnone uwtable
define void @efree(i8* %0) #0 !dbg !10374 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !10377, metadata !DIExpression()), !dbg !10378
  %3 = load i8*, i8** %2, align 8, !dbg !10379
  %4 = icmp ne i8* %3, null, !dbg !10381
  br i1 %4, label %5, label %7, !dbg !10382

5:                                                ; preds = %1
  %6 = load i8*, i8** %2, align 8, !dbg !10383
  call void @free(i8* %6) #13, !dbg !10384
  br label %7, !dbg !10384

7:                                                ; preds = %5, %1
  ret void, !dbg !10385
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @atobool(i8* %0) #0 !dbg !10386 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10388, metadata !DIExpression()), !dbg !10389
  %4 = load i8*, i8** %3, align 8, !dbg !10390
  %5 = load i8, i8* %4, align 1, !dbg !10391
  %6 = sext i8 %5 to i32, !dbg !10391
  switch i32 %6, label %54 [
    i32 48, label %7
    i32 49, label %7
    i32 121, label %19
    i32 89, label %19
    i32 116, label %25
    i32 84, label %25
    i32 111, label %31
    i32 79, label %31
    i32 110, label %42
    i32 78, label %42
    i32 102, label %48
    i32 70, label %48
  ], !dbg !10392

7:                                                ; preds = %1, %1
  %8 = load i8*, i8** %3, align 8, !dbg !10393
  %9 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !10393
  %10 = load i8, i8* %9, align 1, !dbg !10393
  %11 = sext i8 %10 to i32, !dbg !10393
  %12 = icmp eq i32 %11, 0, !dbg !10396
  br i1 %12, label %13, label %18, !dbg !10397

13:                                               ; preds = %7
  %14 = load i8*, i8** %3, align 8, !dbg !10398
  %15 = load i8, i8* %14, align 1, !dbg !10399
  %16 = sext i8 %15 to i32, !dbg !10399
  %17 = sub nsw i32 %16, 48, !dbg !10400
  store i32 %17, i32* %2, align 4, !dbg !10401
  br label %55, !dbg !10401

18:                                               ; preds = %7
  br label %54, !dbg !10402

19:                                               ; preds = %1, %1
  %20 = load i8*, i8** %3, align 8, !dbg !10403
  %21 = call i32 @strcasecmp(i8* %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.275, i64 0, i64 0)) #12, !dbg !10405
  %22 = icmp eq i32 %21, 0, !dbg !10406
  br i1 %22, label %23, label %24, !dbg !10407

23:                                               ; preds = %19
  store i32 1, i32* %2, align 4, !dbg !10408
  br label %55, !dbg !10408

24:                                               ; preds = %19
  br label %54, !dbg !10409

25:                                               ; preds = %1, %1
  %26 = load i8*, i8** %3, align 8, !dbg !10410
  %27 = call i32 @strcasecmp(i8* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.276, i64 0, i64 0)) #12, !dbg !10412
  %28 = icmp eq i32 %27, 0, !dbg !10413
  br i1 %28, label %29, label %30, !dbg !10414

29:                                               ; preds = %25
  store i32 1, i32* %2, align 4, !dbg !10415
  br label %55, !dbg !10415

30:                                               ; preds = %25
  br label %54, !dbg !10416

31:                                               ; preds = %1, %1
  %32 = load i8*, i8** %3, align 8, !dbg !10417
  %33 = call i32 @strcasecmp(i8* %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.277, i64 0, i64 0)) #12, !dbg !10419
  %34 = icmp eq i32 %33, 0, !dbg !10420
  br i1 %34, label %35, label %36, !dbg !10421

35:                                               ; preds = %31
  store i32 1, i32* %2, align 4, !dbg !10422
  br label %55, !dbg !10422

36:                                               ; preds = %31
  %37 = load i8*, i8** %3, align 8, !dbg !10423
  %38 = call i32 @strcasecmp(i8* %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.278, i64 0, i64 0)) #12, !dbg !10425
  %39 = icmp eq i32 %38, 0, !dbg !10426
  br i1 %39, label %40, label %41, !dbg !10427

40:                                               ; preds = %36
  store i32 0, i32* %2, align 4, !dbg !10428
  br label %55, !dbg !10428

41:                                               ; preds = %36
  br label %54, !dbg !10429

42:                                               ; preds = %1, %1
  %43 = load i8*, i8** %3, align 8, !dbg !10430
  %44 = call i32 @strcasecmp(i8* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.279, i64 0, i64 0)) #12, !dbg !10432
  %45 = icmp eq i32 %44, 0, !dbg !10433
  br i1 %45, label %46, label %47, !dbg !10434

46:                                               ; preds = %42
  store i32 0, i32* %2, align 4, !dbg !10435
  br label %55, !dbg !10435

47:                                               ; preds = %42
  br label %54, !dbg !10436

48:                                               ; preds = %1, %1
  %49 = load i8*, i8** %3, align 8, !dbg !10437
  %50 = call i32 @strcasecmp(i8* %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.280, i64 0, i64 0)) #12, !dbg !10439
  %51 = icmp eq i32 %50, 0, !dbg !10440
  br i1 %51, label %52, label %53, !dbg !10441

52:                                               ; preds = %48
  store i32 0, i32* %2, align 4, !dbg !10442
  br label %55, !dbg !10442

53:                                               ; preds = %48
  br label %54, !dbg !10443

54:                                               ; preds = %1, %53, %47, %41, %30, %24, %18
  store i32 -1, i32* %2, align 4, !dbg !10444
  br label %55, !dbg !10444

55:                                               ; preds = %54, %52, %46, %40, %35, %29, %23, %13
  %56 = load i32, i32* %2, align 4, !dbg !10445
  ret i32 %56, !dbg !10445
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @touch(i32 %0, i8* %1, %struct.timeval* %2) #0 !dbg !10446 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.timeval*, align 8
  %8 = alloca [2 x %struct.timeval], align 16
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10454, metadata !DIExpression()), !dbg !10455
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10456, metadata !DIExpression()), !dbg !10457
  store %struct.timeval* %2, %struct.timeval** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %7, metadata !10458, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.declare(metadata [2 x %struct.timeval]* %8, metadata !10460, metadata !DIExpression()), !dbg !10462
  %9 = load %struct.timeval*, %struct.timeval** %7, align 8, !dbg !10463
  %10 = icmp ne %struct.timeval* %9, null, !dbg !10465
  br i1 %10, label %11, label %26, !dbg !10466

11:                                               ; preds = %3
  %12 = load %struct.timeval*, %struct.timeval** %7, align 8, !dbg !10467
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0, !dbg !10469
  %14 = load i64, i64* %13, align 8, !dbg !10469
  %15 = getelementptr inbounds [2 x %struct.timeval], [2 x %struct.timeval]* %8, i64 0, i64 1, !dbg !10470
  %16 = getelementptr inbounds %struct.timeval, %struct.timeval* %15, i32 0, i32 0, !dbg !10471
  store i64 %14, i64* %16, align 16, !dbg !10472
  %17 = getelementptr inbounds [2 x %struct.timeval], [2 x %struct.timeval]* %8, i64 0, i64 0, !dbg !10473
  %18 = getelementptr inbounds %struct.timeval, %struct.timeval* %17, i32 0, i32 0, !dbg !10474
  store i64 %14, i64* %18, align 16, !dbg !10475
  %19 = load %struct.timeval*, %struct.timeval** %7, align 8, !dbg !10476
  %20 = getelementptr inbounds %struct.timeval, %struct.timeval* %19, i32 0, i32 1, !dbg !10477
  %21 = load i64, i64* %20, align 8, !dbg !10477
  %22 = getelementptr inbounds [2 x %struct.timeval], [2 x %struct.timeval]* %8, i64 0, i64 1, !dbg !10478
  %23 = getelementptr inbounds %struct.timeval, %struct.timeval* %22, i32 0, i32 1, !dbg !10479
  store i64 %21, i64* %23, align 8, !dbg !10480
  %24 = getelementptr inbounds [2 x %struct.timeval], [2 x %struct.timeval]* %8, i64 0, i64 0, !dbg !10481
  %25 = getelementptr inbounds %struct.timeval, %struct.timeval* %24, i32 0, i32 1, !dbg !10482
  store i64 %21, i64* %25, align 8, !dbg !10483
  br label %26, !dbg !10484

26:                                               ; preds = %11, %3
  %27 = load i32, i32* %5, align 4, !dbg !10485
  %28 = icmp ne i32 %27, -1, !dbg !10487
  br i1 %28, label %29, label %39, !dbg !10488

29:                                               ; preds = %26
  %30 = load i32, i32* %5, align 4, !dbg !10489
  %31 = load %struct.timeval*, %struct.timeval** %7, align 8, !dbg !10490
  %32 = icmp ne %struct.timeval* %31, null, !dbg !10490
  br i1 %32, label %33, label %35, !dbg !10490

33:                                               ; preds = %29
  %34 = getelementptr inbounds [2 x %struct.timeval], [2 x %struct.timeval]* %8, i64 0, i64 0, !dbg !10491
  br label %36, !dbg !10490

35:                                               ; preds = %29
  br label %36, !dbg !10490

36:                                               ; preds = %35, %33
  %37 = phi %struct.timeval* [ %34, %33 ], [ null, %35 ], !dbg !10490
  %38 = call i32 @futimes(i32 %30, %struct.timeval* %37) #13, !dbg !10492
  store i32 %38, i32* %4, align 4, !dbg !10493
  br label %53, !dbg !10493

39:                                               ; preds = %26
  %40 = load i8*, i8** %6, align 8, !dbg !10494
  %41 = icmp ne i8* %40, null, !dbg !10496
  br i1 %41, label %42, label %52, !dbg !10497

42:                                               ; preds = %39
  %43 = load i8*, i8** %6, align 8, !dbg !10498
  %44 = load %struct.timeval*, %struct.timeval** %7, align 8, !dbg !10499
  %45 = icmp ne %struct.timeval* %44, null, !dbg !10499
  br i1 %45, label %46, label %48, !dbg !10499

46:                                               ; preds = %42
  %47 = getelementptr inbounds [2 x %struct.timeval], [2 x %struct.timeval]* %8, i64 0, i64 0, !dbg !10500
  br label %49, !dbg !10499

48:                                               ; preds = %42
  br label %49, !dbg !10499

49:                                               ; preds = %48, %46
  %50 = phi %struct.timeval* [ %47, %46 ], [ null, %48 ], !dbg !10499
  %51 = call i32 @utimes(i8* %43, %struct.timeval* %50) #13, !dbg !10501
  store i32 %51, i32* %4, align 4, !dbg !10502
  br label %53, !dbg !10502

52:                                               ; preds = %39
  store i32 -1, i32* %4, align 4, !dbg !10503
  br label %53, !dbg !10503

53:                                               ; preds = %52, %49, %36
  %54 = load i32, i32* %4, align 4, !dbg !10504
  ret i32 %54, !dbg !10504
}

; Function Attrs: nounwind
declare i32 @futimes(i32, %struct.timeval*) #4

; Function Attrs: nounwind
declare i32 @utimes(i8*, %struct.timeval*) #4

; Function Attrs: noinline nounwind optnone uwtable
define i32 @lock_file(i32 %0, i32 %1) #0 !dbg !10505 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10508, metadata !DIExpression()), !dbg !10509
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10510, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10512, metadata !DIExpression()), !dbg !10513
  store i32 0, i32* %5, align 4, !dbg !10513
  %6 = load i32, i32* %4, align 4, !dbg !10514
  switch i32 %6, label %10 [
    i32 1, label %7
    i32 2, label %8
    i32 4, label %9
  ], !dbg !10515

7:                                                ; preds = %2
  store i32 1, i32* %5, align 4, !dbg !10516
  br label %10, !dbg !10518

8:                                                ; preds = %2
  store i32 2, i32* %5, align 4, !dbg !10519
  br label %10, !dbg !10520

9:                                                ; preds = %2
  store i32 0, i32* %5, align 4, !dbg !10521
  br label %10, !dbg !10522

10:                                               ; preds = %2, %9, %8, %7
  %11 = load i32, i32* %3, align 4, !dbg !10523
  %12 = load i32, i32* %5, align 4, !dbg !10524
  %13 = call i32 @lockf(i32 %11, i32 %12, i64 0), !dbg !10525
  %14 = icmp eq i32 %13, 0, !dbg !10526
  %15 = zext i1 %14 to i32, !dbg !10526
  ret i32 %15, !dbg !10527
}

declare i32 @lockf(i32, i32, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define i8* @sudo_parseln(%struct._IO_FILE* %0) #0 !dbg !750 {
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %2, metadata !10528, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.declare(metadata i64* %3, metadata !10530, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10532, metadata !DIExpression()), !dbg !10533
  store i8* null, i8** %4, align 8, !dbg !10533
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8, !dbg !10534
  %6 = call i8* @fgets(i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @sudo_parseln.buf, i64 0, i64 0), i32 2048, %struct._IO_FILE* %5), !dbg !10536
  %7 = icmp ne i8* %6, null, !dbg !10537
  br i1 %7, label %8, label %56, !dbg !10538

8:                                                ; preds = %1
  %9 = call i8* @strchr(i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @sudo_parseln.buf, i64 0, i64 0), i32 35) #12, !dbg !10539
  store i8* %9, i8** %4, align 8, !dbg !10542
  %10 = icmp ne i8* %9, null, !dbg !10543
  br i1 %10, label %11, label %13, !dbg !10544

11:                                               ; preds = %8
  %12 = load i8*, i8** %4, align 8, !dbg !10545
  store i8 0, i8* %12, align 1, !dbg !10546
  br label %13, !dbg !10547

13:                                               ; preds = %11, %8
  %14 = call i64 @strlen(i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @sudo_parseln.buf, i64 0, i64 0)) #12, !dbg !10548
  store i64 %14, i64* %3, align 8, !dbg !10549
  br label %15, !dbg !10550

15:                                               ; preds = %34, %13
  %16 = load i64, i64* %3, align 8, !dbg !10551
  %17 = icmp ugt i64 %16, 0, !dbg !10552
  br i1 %17, label %18, label %32, !dbg !10553

18:                                               ; preds = %15
  %19 = call i16** @__ctype_b_loc() #14, !dbg !10554
  %20 = load i16*, i16** %19, align 8, !dbg !10554
  %21 = load i64, i64* %3, align 8, !dbg !10554
  %22 = sub i64 %21, 1, !dbg !10554
  %23 = getelementptr inbounds [2048 x i8], [2048 x i8]* @sudo_parseln.buf, i64 0, i64 %22, !dbg !10554
  %24 = load i8, i8* %23, align 1, !dbg !10554
  %25 = zext i8 %24 to i32, !dbg !10554
  %26 = sext i32 %25 to i64, !dbg !10554
  %27 = getelementptr inbounds i16, i16* %20, i64 %26, !dbg !10554
  %28 = load i16, i16* %27, align 2, !dbg !10554
  %29 = zext i16 %28 to i32, !dbg !10554
  %30 = and i32 %29, 8192, !dbg !10554
  %31 = icmp ne i32 %30, 0, !dbg !10553
  br label %32

32:                                               ; preds = %18, %15
  %33 = phi i1 [ false, %15 ], [ %31, %18 ], !dbg !10555
  br i1 %33, label %34, label %38, !dbg !10550

34:                                               ; preds = %32
  %35 = load i64, i64* %3, align 8, !dbg !10556
  %36 = add i64 %35, -1, !dbg !10556
  store i64 %36, i64* %3, align 8, !dbg !10556
  %37 = getelementptr inbounds [2048 x i8], [2048 x i8]* @sudo_parseln.buf, i64 0, i64 %36, !dbg !10557
  store i8 0, i8* %37, align 1, !dbg !10558
  br label %15, !dbg !10550, !llvm.loop !10559

38:                                               ; preds = %32
  store i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @sudo_parseln.buf, i64 0, i64 0), i8** %4, align 8, !dbg !10561
  br label %39, !dbg !10563

39:                                               ; preds = %52, %38
  %40 = call i16** @__ctype_b_loc() #14, !dbg !10564
  %41 = load i16*, i16** %40, align 8, !dbg !10564
  %42 = load i8*, i8** %4, align 8, !dbg !10564
  %43 = load i8, i8* %42, align 1, !dbg !10564
  %44 = zext i8 %43 to i32, !dbg !10564
  %45 = sext i32 %44 to i64, !dbg !10564
  %46 = getelementptr inbounds i16, i16* %41, i64 %45, !dbg !10564
  %47 = load i16, i16* %46, align 2, !dbg !10564
  %48 = zext i16 %47 to i32, !dbg !10564
  %49 = and i32 %48, 1, !dbg !10564
  %50 = icmp ne i32 %49, 0, !dbg !10566
  br i1 %50, label %51, label %55, !dbg !10566

51:                                               ; preds = %39
  br label %52, !dbg !10567

52:                                               ; preds = %51
  %53 = load i8*, i8** %4, align 8, !dbg !10568
  %54 = getelementptr inbounds i8, i8* %53, i32 1, !dbg !10568
  store i8* %54, i8** %4, align 8, !dbg !10568
  br label %39, !dbg !10569, !llvm.loop !10570

55:                                               ; preds = %39
  br label %56, !dbg !10572

56:                                               ; preds = %55, %1
  %57 = load i8*, i8** %4, align 8, !dbg !10573
  ret i8* %57, !dbg !10574
}

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define i8* @fmt_string(i8* %0, i8* %1) #0 !dbg !10575 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10577, metadata !DIExpression()), !dbg !10578
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10579, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.declare(metadata i64* %5, metadata !10581, metadata !DIExpression()), !dbg !10582
  %9 = load i8*, i8** %3, align 8, !dbg !10583
  %10 = call i64 @strlen(i8* %9) #12, !dbg !10584
  store i64 %10, i64* %5, align 8, !dbg !10582
  call void @llvm.dbg.declare(metadata i64* %6, metadata !10585, metadata !DIExpression()), !dbg !10586
  %11 = load i8*, i8** %4, align 8, !dbg !10587
  %12 = call i64 @strlen(i8* %11) #12, !dbg !10588
  store i64 %12, i64* %6, align 8, !dbg !10586
  call void @llvm.dbg.declare(metadata i8** %7, metadata !10589, metadata !DIExpression()), !dbg !10590
  call void @llvm.dbg.declare(metadata i8** %8, metadata !10591, metadata !DIExpression()), !dbg !10592
  %13 = load i64, i64* %5, align 8, !dbg !10593
  %14 = add i64 %13, 1, !dbg !10594
  %15 = load i64, i64* %6, align 8, !dbg !10595
  %16 = add i64 %14, %15, !dbg !10596
  %17 = add i64 %16, 1, !dbg !10597
  %18 = call noalias i8* @malloc(i64 %17) #13, !dbg !10598
  store i8* %18, i8** %8, align 8, !dbg !10599
  store i8* %18, i8** %7, align 8, !dbg !10600
  %19 = load i8*, i8** %8, align 8, !dbg !10601
  %20 = icmp ne i8* %19, null, !dbg !10603
  br i1 %20, label %21, label %37, !dbg !10604

21:                                               ; preds = %2
  %22 = load i8*, i8** %7, align 8, !dbg !10605
  %23 = load i8*, i8** %3, align 8, !dbg !10607
  %24 = load i64, i64* %5, align 8, !dbg !10608
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 %24, i1 false), !dbg !10609
  %25 = load i64, i64* %5, align 8, !dbg !10610
  %26 = load i8*, i8** %7, align 8, !dbg !10611
  %27 = getelementptr inbounds i8, i8* %26, i64 %25, !dbg !10611
  store i8* %27, i8** %7, align 8, !dbg !10611
  %28 = load i8*, i8** %7, align 8, !dbg !10612
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !10612
  store i8* %29, i8** %7, align 8, !dbg !10612
  store i8 61, i8* %28, align 1, !dbg !10613
  %30 = load i8*, i8** %7, align 8, !dbg !10614
  %31 = load i8*, i8** %4, align 8, !dbg !10615
  %32 = load i64, i64* %6, align 8, !dbg !10616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false), !dbg !10617
  %33 = load i64, i64* %6, align 8, !dbg !10618
  %34 = load i8*, i8** %7, align 8, !dbg !10619
  %35 = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !10619
  store i8* %35, i8** %7, align 8, !dbg !10619
  %36 = load i8*, i8** %7, align 8, !dbg !10620
  store i8 0, i8* %36, align 1, !dbg !10621
  br label %37, !dbg !10622

37:                                               ; preds = %21, %2
  %38 = load i8*, i8** %8, align 8, !dbg !10623
  ret i8* %38, !dbg !10624
}

; Function Attrs: noinline nounwind optnone uwtable
define void @lbuf_init(%struct.lbuf* %0, i32 (i8*)* %1, i32 %2, i8* %3, i32 %4) #0 !dbg !10625 {
  %6 = alloca %struct.lbuf*, align 8
  %7 = alloca i32 (i8*)*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %struct.lbuf* %0, %struct.lbuf** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.lbuf** %6, metadata !10640, metadata !DIExpression()), !dbg !10641
  store i32 (i8*)* %1, i32 (i8*)** %7, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*)** %7, metadata !10642, metadata !DIExpression()), !dbg !10643
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10644, metadata !DIExpression()), !dbg !10645
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !10646, metadata !DIExpression()), !dbg !10647
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10648, metadata !DIExpression()), !dbg !10649
  %11 = load i32 (i8*)*, i32 (i8*)** %7, align 8, !dbg !10650
  %12 = load %struct.lbuf*, %struct.lbuf** %6, align 8, !dbg !10651
  %13 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %12, i32 0, i32 0, !dbg !10652
  store i32 (i8*)* %11, i32 (i8*)** %13, align 8, !dbg !10653
  %14 = load i8*, i8** %9, align 8, !dbg !10654
  %15 = load %struct.lbuf*, %struct.lbuf** %6, align 8, !dbg !10655
  %16 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %15, i32 0, i32 2, !dbg !10656
  store i8* %14, i8** %16, align 8, !dbg !10657
  %17 = load i32, i32* %8, align 4, !dbg !10658
  %18 = load %struct.lbuf*, %struct.lbuf** %6, align 8, !dbg !10659
  %19 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %18, i32 0, i32 3, !dbg !10660
  store i32 %17, i32* %19, align 8, !dbg !10661
  %20 = load i32, i32* %10, align 4, !dbg !10662
  %21 = load %struct.lbuf*, %struct.lbuf** %6, align 8, !dbg !10663
  %22 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %21, i32 0, i32 6, !dbg !10664
  store i32 %20, i32* %22, align 4, !dbg !10665
  %23 = load %struct.lbuf*, %struct.lbuf** %6, align 8, !dbg !10666
  %24 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %23, i32 0, i32 4, !dbg !10667
  store i32 0, i32* %24, align 4, !dbg !10668
  %25 = load %struct.lbuf*, %struct.lbuf** %6, align 8, !dbg !10669
  %26 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %25, i32 0, i32 5, !dbg !10670
  store i32 0, i32* %26, align 8, !dbg !10671
  %27 = load %struct.lbuf*, %struct.lbuf** %6, align 8, !dbg !10672
  %28 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %27, i32 0, i32 1, !dbg !10673
  store i8* null, i8** %28, align 8, !dbg !10674
  ret void, !dbg !10675
}

; Function Attrs: noinline nounwind optnone uwtable
define void @lbuf_destroy(%struct.lbuf* %0) #0 !dbg !10676 {
  %2 = alloca %struct.lbuf*, align 8
  store %struct.lbuf* %0, %struct.lbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.lbuf** %2, metadata !10679, metadata !DIExpression()), !dbg !10680
  %3 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !10681
  %4 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %3, i32 0, i32 1, !dbg !10682
  %5 = load i8*, i8** %4, align 8, !dbg !10682
  call void @efree(i8* %5), !dbg !10683
  %6 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !10684
  %7 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %6, i32 0, i32 1, !dbg !10685
  store i8* null, i8** %7, align 8, !dbg !10686
  ret void, !dbg !10687
}

; Function Attrs: noinline nounwind optnone uwtable
define void @lbuf_append_quoted(%struct.lbuf* %0, i8* %1, i8* %2, ...) #0 !dbg !10688 {
  %4 = alloca %struct.lbuf*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [1 x %struct.__va_list_tag], align 16
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store %struct.lbuf* %0, %struct.lbuf** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.lbuf** %4, metadata !10691, metadata !DIExpression()), !dbg !10692
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10693, metadata !DIExpression()), !dbg !10694
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10695, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %7, metadata !10697, metadata !DIExpression()), !dbg !10708
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10709, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.declare(metadata i8** %9, metadata !10711, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.declare(metadata i8** %10, metadata !10713, metadata !DIExpression()), !dbg !10714
  store i8* null, i8** %10, align 8, !dbg !10714
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i64 0, i64 0, !dbg !10715
  %12 = bitcast %struct.__va_list_tag* %11 to i8*, !dbg !10715
  call void @llvm.va_start(i8* %12), !dbg !10715
  br label %13, !dbg !10716

13:                                               ; preds = %200, %179, %3
  %14 = load i8*, i8** %6, align 8, !dbg !10717
  %15 = load i8, i8* %14, align 1, !dbg !10718
  %16 = sext i8 %15 to i32, !dbg !10718
  %17 = icmp ne i32 %16, 0, !dbg !10719
  br i1 %17, label %18, label %213, !dbg !10716

18:                                               ; preds = %13
  store i32 1, i32* %8, align 4, !dbg !10720
  %19 = load i8*, i8** %6, align 8, !dbg !10722
  %20 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !10722
  %21 = load i8, i8* %20, align 1, !dbg !10722
  %22 = sext i8 %21 to i32, !dbg !10722
  %23 = icmp eq i32 %22, 37, !dbg !10724
  br i1 %23, label %24, label %52, !dbg !10725

24:                                               ; preds = %18
  %25 = load i8*, i8** %6, align 8, !dbg !10726
  %26 = getelementptr inbounds i8, i8* %25, i64 1, !dbg !10726
  %27 = load i8, i8* %26, align 1, !dbg !10726
  %28 = sext i8 %27 to i32, !dbg !10726
  %29 = icmp eq i32 %28, 115, !dbg !10727
  br i1 %29, label %30, label %52, !dbg !10728

30:                                               ; preds = %24
  %31 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i64 0, i64 0, !dbg !10729
  %32 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %31, i32 0, i32 0, !dbg !10729
  %33 = load i32, i32* %32, align 16, !dbg !10729
  %34 = icmp ule i32 %33, 40, !dbg !10729
  br i1 %34, label %35, label %41, !dbg !10729

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %31, i32 0, i32 3, !dbg !10729
  %37 = load i8*, i8** %36, align 16, !dbg !10729
  %38 = getelementptr i8, i8* %37, i32 %33, !dbg !10729
  %39 = bitcast i8* %38 to i8**, !dbg !10729
  %40 = add i32 %33, 8, !dbg !10729
  store i32 %40, i32* %32, align 16, !dbg !10729
  br label %46, !dbg !10729

41:                                               ; preds = %30
  %42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %31, i32 0, i32 2, !dbg !10729
  %43 = load i8*, i8** %42, align 8, !dbg !10729
  %44 = bitcast i8* %43 to i8**, !dbg !10729
  %45 = getelementptr i8, i8* %43, i32 8, !dbg !10729
  store i8* %45, i8** %42, align 8, !dbg !10729
  br label %46, !dbg !10729

46:                                               ; preds = %41, %35
  %47 = phi i8** [ %39, %35 ], [ %44, %41 ], !dbg !10729
  %48 = load i8*, i8** %47, align 8, !dbg !10729
  store i8* %48, i8** %10, align 8, !dbg !10731
  %49 = load i8*, i8** %10, align 8, !dbg !10732
  %50 = call i64 @strlen(i8* %49) #12, !dbg !10733
  %51 = trunc i64 %50 to i32, !dbg !10733
  store i32 %51, i32* %8, align 4, !dbg !10734
  br label %52, !dbg !10735

52:                                               ; preds = %46, %24, %18
  %53 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10736
  %54 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %53, i32 0, i32 4, !dbg !10738
  %55 = load i32, i32* %54, align 4, !dbg !10738
  %56 = load i32, i32* %8, align 4, !dbg !10739
  %57 = mul nsw i32 %56, 2, !dbg !10740
  %58 = add nsw i32 %55, %57, !dbg !10741
  %59 = add nsw i32 %58, 1, !dbg !10742
  %60 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10743
  %61 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %60, i32 0, i32 5, !dbg !10744
  %62 = load i32, i32* %61, align 8, !dbg !10744
  %63 = icmp sge i32 %59, %62, !dbg !10745
  br i1 %63, label %64, label %92, !dbg !10746

64:                                               ; preds = %52
  br label %65, !dbg !10747

65:                                               ; preds = %70, %64
  %66 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10749
  %67 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %66, i32 0, i32 5, !dbg !10751
  %68 = load i32, i32* %67, align 8, !dbg !10752
  %69 = add nsw i32 %68, 256, !dbg !10752
  store i32 %69, i32* %67, align 8, !dbg !10752
  br label %70, !dbg !10753

70:                                               ; preds = %65
  %71 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10754
  %72 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %71, i32 0, i32 4, !dbg !10755
  %73 = load i32, i32* %72, align 4, !dbg !10755
  %74 = load i32, i32* %8, align 4, !dbg !10756
  %75 = add nsw i32 %73, %74, !dbg !10757
  %76 = add nsw i32 %75, 1, !dbg !10758
  %77 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10759
  %78 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %77, i32 0, i32 5, !dbg !10760
  %79 = load i32, i32* %78, align 8, !dbg !10760
  %80 = icmp sge i32 %76, %79, !dbg !10761
  br i1 %80, label %65, label %81, !dbg !10753, !llvm.loop !10762

81:                                               ; preds = %70
  %82 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10764
  %83 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %82, i32 0, i32 1, !dbg !10765
  %84 = load i8*, i8** %83, align 8, !dbg !10765
  %85 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10766
  %86 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %85, i32 0, i32 5, !dbg !10767
  %87 = load i32, i32* %86, align 8, !dbg !10767
  %88 = sext i32 %87 to i64, !dbg !10766
  %89 = call i8* @erealloc(i8* %84, i64 %88), !dbg !10768
  %90 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10769
  %91 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %90, i32 0, i32 1, !dbg !10770
  store i8* %89, i8** %91, align 8, !dbg !10771
  br label %92, !dbg !10772

92:                                               ; preds = %81, %52
  %93 = load i8*, i8** %6, align 8, !dbg !10773
  %94 = load i8, i8* %93, align 1, !dbg !10775
  %95 = sext i8 %94 to i32, !dbg !10775
  %96 = icmp eq i32 %95, 37, !dbg !10776
  br i1 %96, label %97, label %183, !dbg !10777

97:                                               ; preds = %92
  %98 = load i8*, i8** %6, align 8, !dbg !10778
  %99 = getelementptr inbounds i8, i8* %98, i32 1, !dbg !10778
  store i8* %99, i8** %6, align 8, !dbg !10778
  %100 = load i8, i8* %99, align 1, !dbg !10781
  %101 = sext i8 %100 to i32, !dbg !10781
  %102 = icmp eq i32 %101, 115, !dbg !10782
  br i1 %102, label %103, label %182, !dbg !10783

103:                                              ; preds = %97
  br label %104, !dbg !10784

104:                                              ; preds = %109, %103
  %105 = load i8*, i8** %10, align 8, !dbg !10786
  %106 = load i8*, i8** %5, align 8, !dbg !10787
  %107 = call i8* @strpbrk(i8* %105, i8* %106) #12, !dbg !10788
  store i8* %107, i8** %9, align 8, !dbg !10789
  %108 = icmp ne i8* %107, null, !dbg !10790
  br i1 %108, label %109, label %154, !dbg !10784

109:                                              ; preds = %104
  %110 = load i8*, i8** %9, align 8, !dbg !10791
  %111 = load i8*, i8** %10, align 8, !dbg !10793
  %112 = ptrtoint i8* %110 to i64, !dbg !10794
  %113 = ptrtoint i8* %111 to i64, !dbg !10794
  %114 = sub i64 %112, %113, !dbg !10794
  %115 = trunc i64 %114 to i32, !dbg !10795
  store i32 %115, i32* %8, align 4, !dbg !10796
  %116 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10797
  %117 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %116, i32 0, i32 1, !dbg !10798
  %118 = load i8*, i8** %117, align 8, !dbg !10798
  %119 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10799
  %120 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %119, i32 0, i32 4, !dbg !10800
  %121 = load i32, i32* %120, align 4, !dbg !10800
  %122 = sext i32 %121 to i64, !dbg !10801
  %123 = getelementptr inbounds i8, i8* %118, i64 %122, !dbg !10801
  %124 = load i8*, i8** %10, align 8, !dbg !10802
  %125 = load i32, i32* %8, align 4, !dbg !10803
  %126 = sext i32 %125 to i64, !dbg !10803
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %123, i8* align 1 %124, i64 %126, i1 false), !dbg !10804
  %127 = load i32, i32* %8, align 4, !dbg !10805
  %128 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10806
  %129 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %128, i32 0, i32 4, !dbg !10807
  %130 = load i32, i32* %129, align 4, !dbg !10808
  %131 = add nsw i32 %130, %127, !dbg !10808
  store i32 %131, i32* %129, align 4, !dbg !10808
  %132 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10809
  %133 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %132, i32 0, i32 1, !dbg !10810
  %134 = load i8*, i8** %133, align 8, !dbg !10810
  %135 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10811
  %136 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %135, i32 0, i32 4, !dbg !10812
  %137 = load i32, i32* %136, align 4, !dbg !10813
  %138 = add nsw i32 %137, 1, !dbg !10813
  store i32 %138, i32* %136, align 4, !dbg !10813
  %139 = sext i32 %137 to i64, !dbg !10809
  %140 = getelementptr inbounds i8, i8* %134, i64 %139, !dbg !10809
  store i8 92, i8* %140, align 1, !dbg !10814
  %141 = load i8*, i8** %9, align 8, !dbg !10815
  %142 = load i8, i8* %141, align 1, !dbg !10816
  %143 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10817
  %144 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %143, i32 0, i32 1, !dbg !10818
  %145 = load i8*, i8** %144, align 8, !dbg !10818
  %146 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10819
  %147 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %146, i32 0, i32 4, !dbg !10820
  %148 = load i32, i32* %147, align 4, !dbg !10821
  %149 = add nsw i32 %148, 1, !dbg !10821
  store i32 %149, i32* %147, align 4, !dbg !10821
  %150 = sext i32 %148 to i64, !dbg !10817
  %151 = getelementptr inbounds i8, i8* %145, i64 %150, !dbg !10817
  store i8 %142, i8* %151, align 1, !dbg !10822
  %152 = load i8*, i8** %9, align 8, !dbg !10823
  %153 = getelementptr inbounds i8, i8* %152, i64 1, !dbg !10824
  store i8* %153, i8** %10, align 8, !dbg !10825
  br label %104, !dbg !10784, !llvm.loop !10826

154:                                              ; preds = %104
  %155 = load i8*, i8** %10, align 8, !dbg !10828
  %156 = load i8, i8* %155, align 1, !dbg !10830
  %157 = sext i8 %156 to i32, !dbg !10830
  %158 = icmp ne i32 %157, 0, !dbg !10831
  br i1 %158, label %159, label %179, !dbg !10832

159:                                              ; preds = %154
  %160 = load i8*, i8** %10, align 8, !dbg !10833
  %161 = call i64 @strlen(i8* %160) #12, !dbg !10835
  %162 = trunc i64 %161 to i32, !dbg !10835
  store i32 %162, i32* %8, align 4, !dbg !10836
  %163 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10837
  %164 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %163, i32 0, i32 1, !dbg !10838
  %165 = load i8*, i8** %164, align 8, !dbg !10838
  %166 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10839
  %167 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %166, i32 0, i32 4, !dbg !10840
  %168 = load i32, i32* %167, align 4, !dbg !10840
  %169 = sext i32 %168 to i64, !dbg !10841
  %170 = getelementptr inbounds i8, i8* %165, i64 %169, !dbg !10841
  %171 = load i8*, i8** %10, align 8, !dbg !10842
  %172 = load i32, i32* %8, align 4, !dbg !10843
  %173 = sext i32 %172 to i64, !dbg !10843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %170, i8* align 1 %171, i64 %173, i1 false), !dbg !10844
  %174 = load i32, i32* %8, align 4, !dbg !10845
  %175 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10846
  %176 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %175, i32 0, i32 4, !dbg !10847
  %177 = load i32, i32* %176, align 4, !dbg !10848
  %178 = add nsw i32 %177, %174, !dbg !10848
  store i32 %178, i32* %176, align 4, !dbg !10848
  br label %179, !dbg !10849

179:                                              ; preds = %159, %154
  %180 = load i8*, i8** %6, align 8, !dbg !10850
  %181 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !10850
  store i8* %181, i8** %6, align 8, !dbg !10850
  br label %13, !dbg !10851, !llvm.loop !10852

182:                                              ; preds = %97
  br label %183, !dbg !10854

183:                                              ; preds = %182, %92
  %184 = load i8*, i8** %5, align 8, !dbg !10855
  %185 = load i8*, i8** %6, align 8, !dbg !10857
  %186 = load i8, i8* %185, align 1, !dbg !10858
  %187 = sext i8 %186 to i32, !dbg !10858
  %188 = call i8* @strchr(i8* %184, i32 %187) #12, !dbg !10859
  %189 = icmp ne i8* %188, null, !dbg !10860
  br i1 %189, label %190, label %200, !dbg !10861

190:                                              ; preds = %183
  %191 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10862
  %192 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %191, i32 0, i32 1, !dbg !10863
  %193 = load i8*, i8** %192, align 8, !dbg !10863
  %194 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10864
  %195 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %194, i32 0, i32 4, !dbg !10865
  %196 = load i32, i32* %195, align 4, !dbg !10866
  %197 = add nsw i32 %196, 1, !dbg !10866
  store i32 %197, i32* %195, align 4, !dbg !10866
  %198 = sext i32 %196 to i64, !dbg !10862
  %199 = getelementptr inbounds i8, i8* %193, i64 %198, !dbg !10862
  store i8 92, i8* %199, align 1, !dbg !10867
  br label %200, !dbg !10862

200:                                              ; preds = %190, %183
  %201 = load i8*, i8** %6, align 8, !dbg !10868
  %202 = getelementptr inbounds i8, i8* %201, i32 1, !dbg !10868
  store i8* %202, i8** %6, align 8, !dbg !10868
  %203 = load i8, i8* %201, align 1, !dbg !10869
  %204 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10870
  %205 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %204, i32 0, i32 1, !dbg !10871
  %206 = load i8*, i8** %205, align 8, !dbg !10871
  %207 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10872
  %208 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %207, i32 0, i32 4, !dbg !10873
  %209 = load i32, i32* %208, align 4, !dbg !10874
  %210 = add nsw i32 %209, 1, !dbg !10874
  store i32 %210, i32* %208, align 4, !dbg !10874
  %211 = sext i32 %209 to i64, !dbg !10870
  %212 = getelementptr inbounds i8, i8* %206, i64 %211, !dbg !10870
  store i8 %203, i8* %212, align 1, !dbg !10875
  br label %13, !dbg !10716, !llvm.loop !10852

213:                                              ; preds = %13
  %214 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10876
  %215 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %214, i32 0, i32 1, !dbg !10877
  %216 = load i8*, i8** %215, align 8, !dbg !10877
  %217 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !10878
  %218 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %217, i32 0, i32 4, !dbg !10879
  %219 = load i32, i32* %218, align 4, !dbg !10879
  %220 = sext i32 %219 to i64, !dbg !10876
  %221 = getelementptr inbounds i8, i8* %216, i64 %220, !dbg !10876
  store i8 0, i8* %221, align 1, !dbg !10880
  %222 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %7, i64 0, i64 0, !dbg !10881
  %223 = bitcast %struct.__va_list_tag* %222 to i8*, !dbg !10881
  call void @llvm.va_end(i8* %223), !dbg !10881
  ret void, !dbg !10882
}

; Function Attrs: nounwind readonly
declare i8* @strpbrk(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define void @lbuf_append(%struct.lbuf* %0, i8* %1, ...) #0 !dbg !10883 {
  %3 = alloca %struct.lbuf*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store %struct.lbuf* %0, %struct.lbuf** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.lbuf** %3, metadata !10886, metadata !DIExpression()), !dbg !10887
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10888, metadata !DIExpression()), !dbg !10889
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %5, metadata !10890, metadata !DIExpression()), !dbg !10891
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10892, metadata !DIExpression()), !dbg !10893
  call void @llvm.dbg.declare(metadata i8** %7, metadata !10894, metadata !DIExpression()), !dbg !10895
  store i8* null, i8** %7, align 8, !dbg !10895
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !10896
  %9 = bitcast %struct.__va_list_tag* %8 to i8*, !dbg !10896
  call void @llvm.va_start(i8* %9), !dbg !10896
  br label %10, !dbg !10897

10:                                               ; preds = %119, %99, %2
  %11 = load i8*, i8** %4, align 8, !dbg !10898
  %12 = load i8, i8* %11, align 1, !dbg !10899
  %13 = sext i8 %12 to i32, !dbg !10899
  %14 = icmp ne i32 %13, 0, !dbg !10900
  br i1 %14, label %15, label %132, !dbg !10897

15:                                               ; preds = %10
  store i32 1, i32* %6, align 4, !dbg !10901
  %16 = load i8*, i8** %4, align 8, !dbg !10903
  %17 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !10903
  %18 = load i8, i8* %17, align 1, !dbg !10903
  %19 = sext i8 %18 to i32, !dbg !10903
  %20 = icmp eq i32 %19, 37, !dbg !10905
  br i1 %20, label %21, label %49, !dbg !10906

21:                                               ; preds = %15
  %22 = load i8*, i8** %4, align 8, !dbg !10907
  %23 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !10907
  %24 = load i8, i8* %23, align 1, !dbg !10907
  %25 = sext i8 %24 to i32, !dbg !10907
  %26 = icmp eq i32 %25, 115, !dbg !10908
  br i1 %26, label %27, label %49, !dbg !10909

27:                                               ; preds = %21
  %28 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !10910
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %28, i32 0, i32 0, !dbg !10910
  %30 = load i32, i32* %29, align 16, !dbg !10910
  %31 = icmp ule i32 %30, 40, !dbg !10910
  br i1 %31, label %32, label %38, !dbg !10910

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %28, i32 0, i32 3, !dbg !10910
  %34 = load i8*, i8** %33, align 16, !dbg !10910
  %35 = getelementptr i8, i8* %34, i32 %30, !dbg !10910
  %36 = bitcast i8* %35 to i8**, !dbg !10910
  %37 = add i32 %30, 8, !dbg !10910
  store i32 %37, i32* %29, align 16, !dbg !10910
  br label %43, !dbg !10910

38:                                               ; preds = %27
  %39 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %28, i32 0, i32 2, !dbg !10910
  %40 = load i8*, i8** %39, align 8, !dbg !10910
  %41 = bitcast i8* %40 to i8**, !dbg !10910
  %42 = getelementptr i8, i8* %40, i32 8, !dbg !10910
  store i8* %42, i8** %39, align 8, !dbg !10910
  br label %43, !dbg !10910

43:                                               ; preds = %38, %32
  %44 = phi i8** [ %36, %32 ], [ %41, %38 ], !dbg !10910
  %45 = load i8*, i8** %44, align 8, !dbg !10910
  store i8* %45, i8** %7, align 8, !dbg !10912
  %46 = load i8*, i8** %7, align 8, !dbg !10913
  %47 = call i64 @strlen(i8* %46) #12, !dbg !10914
  %48 = trunc i64 %47 to i32, !dbg !10914
  store i32 %48, i32* %6, align 4, !dbg !10915
  br label %49, !dbg !10916

49:                                               ; preds = %43, %21, %15
  %50 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10917
  %51 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %50, i32 0, i32 4, !dbg !10919
  %52 = load i32, i32* %51, align 4, !dbg !10919
  %53 = load i32, i32* %6, align 4, !dbg !10920
  %54 = add nsw i32 %52, %53, !dbg !10921
  %55 = add nsw i32 %54, 1, !dbg !10922
  %56 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10923
  %57 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %56, i32 0, i32 5, !dbg !10924
  %58 = load i32, i32* %57, align 8, !dbg !10924
  %59 = icmp sge i32 %55, %58, !dbg !10925
  br i1 %59, label %60, label %88, !dbg !10926

60:                                               ; preds = %49
  br label %61, !dbg !10927

61:                                               ; preds = %66, %60
  %62 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10929
  %63 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %62, i32 0, i32 5, !dbg !10931
  %64 = load i32, i32* %63, align 8, !dbg !10932
  %65 = add nsw i32 %64, 256, !dbg !10932
  store i32 %65, i32* %63, align 8, !dbg !10932
  br label %66, !dbg !10933

66:                                               ; preds = %61
  %67 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10934
  %68 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %67, i32 0, i32 4, !dbg !10935
  %69 = load i32, i32* %68, align 4, !dbg !10935
  %70 = load i32, i32* %6, align 4, !dbg !10936
  %71 = add nsw i32 %69, %70, !dbg !10937
  %72 = add nsw i32 %71, 1, !dbg !10938
  %73 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10939
  %74 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %73, i32 0, i32 5, !dbg !10940
  %75 = load i32, i32* %74, align 8, !dbg !10940
  %76 = icmp sge i32 %72, %75, !dbg !10941
  br i1 %76, label %61, label %77, !dbg !10933, !llvm.loop !10942

77:                                               ; preds = %66
  %78 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10944
  %79 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %78, i32 0, i32 1, !dbg !10945
  %80 = load i8*, i8** %79, align 8, !dbg !10945
  %81 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10946
  %82 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %81, i32 0, i32 5, !dbg !10947
  %83 = load i32, i32* %82, align 8, !dbg !10947
  %84 = sext i32 %83 to i64, !dbg !10946
  %85 = call i8* @erealloc(i8* %80, i64 %84), !dbg !10948
  %86 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10949
  %87 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %86, i32 0, i32 1, !dbg !10950
  store i8* %85, i8** %87, align 8, !dbg !10951
  br label %88, !dbg !10952

88:                                               ; preds = %77, %49
  %89 = load i8*, i8** %4, align 8, !dbg !10953
  %90 = load i8, i8* %89, align 1, !dbg !10955
  %91 = sext i8 %90 to i32, !dbg !10955
  %92 = icmp eq i32 %91, 37, !dbg !10956
  br i1 %92, label %93, label %119, !dbg !10957

93:                                               ; preds = %88
  %94 = load i8*, i8** %4, align 8, !dbg !10958
  %95 = getelementptr inbounds i8, i8* %94, i32 1, !dbg !10958
  store i8* %95, i8** %4, align 8, !dbg !10958
  %96 = load i8, i8* %95, align 1, !dbg !10961
  %97 = sext i8 %96 to i32, !dbg !10961
  %98 = icmp eq i32 %97, 115, !dbg !10962
  br i1 %98, label %99, label %118, !dbg !10963

99:                                               ; preds = %93
  %100 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10964
  %101 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %100, i32 0, i32 1, !dbg !10966
  %102 = load i8*, i8** %101, align 8, !dbg !10966
  %103 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10967
  %104 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %103, i32 0, i32 4, !dbg !10968
  %105 = load i32, i32* %104, align 4, !dbg !10968
  %106 = sext i32 %105 to i64, !dbg !10969
  %107 = getelementptr inbounds i8, i8* %102, i64 %106, !dbg !10969
  %108 = load i8*, i8** %7, align 8, !dbg !10970
  %109 = load i32, i32* %6, align 4, !dbg !10971
  %110 = sext i32 %109 to i64, !dbg !10971
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 %108, i64 %110, i1 false), !dbg !10972
  %111 = load i32, i32* %6, align 4, !dbg !10973
  %112 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10974
  %113 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %112, i32 0, i32 4, !dbg !10975
  %114 = load i32, i32* %113, align 4, !dbg !10976
  %115 = add nsw i32 %114, %111, !dbg !10976
  store i32 %115, i32* %113, align 4, !dbg !10976
  %116 = load i8*, i8** %4, align 8, !dbg !10977
  %117 = getelementptr inbounds i8, i8* %116, i32 1, !dbg !10977
  store i8* %117, i8** %4, align 8, !dbg !10977
  br label %10, !dbg !10978, !llvm.loop !10979

118:                                              ; preds = %93
  br label %119, !dbg !10981

119:                                              ; preds = %118, %88
  %120 = load i8*, i8** %4, align 8, !dbg !10982
  %121 = getelementptr inbounds i8, i8* %120, i32 1, !dbg !10982
  store i8* %121, i8** %4, align 8, !dbg !10982
  %122 = load i8, i8* %120, align 1, !dbg !10983
  %123 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10984
  %124 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %123, i32 0, i32 1, !dbg !10985
  %125 = load i8*, i8** %124, align 8, !dbg !10985
  %126 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10986
  %127 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %126, i32 0, i32 4, !dbg !10987
  %128 = load i32, i32* %127, align 4, !dbg !10988
  %129 = add nsw i32 %128, 1, !dbg !10988
  store i32 %129, i32* %127, align 4, !dbg !10988
  %130 = sext i32 %128 to i64, !dbg !10984
  %131 = getelementptr inbounds i8, i8* %125, i64 %130, !dbg !10984
  store i8 %122, i8* %131, align 1, !dbg !10989
  br label %10, !dbg !10897, !llvm.loop !10979

132:                                              ; preds = %10
  %133 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10990
  %134 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %133, i32 0, i32 1, !dbg !10991
  %135 = load i8*, i8** %134, align 8, !dbg !10991
  %136 = load %struct.lbuf*, %struct.lbuf** %3, align 8, !dbg !10992
  %137 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %136, i32 0, i32 4, !dbg !10993
  %138 = load i32, i32* %137, align 4, !dbg !10993
  %139 = sext i32 %138 to i64, !dbg !10990
  %140 = getelementptr inbounds i8, i8* %135, i64 %139, !dbg !10990
  store i8 0, i8* %140, align 1, !dbg !10994
  %141 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !10995
  %142 = bitcast %struct.__va_list_tag* %141 to i8*, !dbg !10995
  call void @llvm.va_end(i8* %142), !dbg !10995
  ret void, !dbg !10996
}

; Function Attrs: noinline nounwind optnone uwtable
define void @lbuf_print(%struct.lbuf* %0) #0 !dbg !10997 {
  %2 = alloca %struct.lbuf*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store %struct.lbuf* %0, %struct.lbuf** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.lbuf** %2, metadata !10998, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11000, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11002, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11004, metadata !DIExpression()), !dbg !11005
  %6 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11006
  %7 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %6, i32 0, i32 1, !dbg !11008
  %8 = load i8*, i8** %7, align 8, !dbg !11008
  %9 = icmp eq i8* %8, null, !dbg !11009
  br i1 %9, label %15, label %10, !dbg !11010

10:                                               ; preds = %1
  %11 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11011
  %12 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %11, i32 0, i32 4, !dbg !11012
  %13 = load i32, i32* %12, align 4, !dbg !11012
  %14 = icmp eq i32 %13, 0, !dbg !11013
  br i1 %14, label %15, label %16, !dbg !11014

15:                                               ; preds = %10, %1
  br label %126, !dbg !11015

16:                                               ; preds = %10
  %17 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11016
  %18 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %17, i32 0, i32 2, !dbg !11017
  %19 = load i8*, i8** %18, align 8, !dbg !11017
  %20 = icmp ne i8* %19, null, !dbg !11016
  br i1 %20, label %21, label %26, !dbg !11016

21:                                               ; preds = %16
  %22 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11018
  %23 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %22, i32 0, i32 2, !dbg !11019
  %24 = load i8*, i8** %23, align 8, !dbg !11019
  %25 = call i64 @strlen(i8* %24) #12, !dbg !11020
  br label %27, !dbg !11016

26:                                               ; preds = %16
  br label %27, !dbg !11016

27:                                               ; preds = %26, %21
  %28 = phi i64 [ %25, %21 ], [ 0, %26 ], !dbg !11016
  %29 = trunc i64 %28 to i32, !dbg !11016
  store i32 %29, i32* %5, align 4, !dbg !11021
  %30 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11022
  %31 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %30, i32 0, i32 6, !dbg !11024
  %32 = load i32, i32* %31, align 4, !dbg !11024
  %33 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11025
  %34 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %33, i32 0, i32 3, !dbg !11026
  %35 = load i32, i32* %34, align 8, !dbg !11026
  %36 = load i32, i32* %5, align 4, !dbg !11027
  %37 = add nsw i32 %35, %36, !dbg !11028
  %38 = add nsw i32 %37, 20, !dbg !11029
  %39 = icmp sle i32 %32, %38, !dbg !11030
  br i1 %39, label %40, label %56, !dbg !11031

40:                                               ; preds = %27
  %41 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11032
  %42 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %41, i32 0, i32 1, !dbg !11034
  %43 = load i8*, i8** %42, align 8, !dbg !11034
  %44 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11035
  %45 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %44, i32 0, i32 4, !dbg !11036
  %46 = load i32, i32* %45, align 4, !dbg !11036
  %47 = sext i32 %46 to i64, !dbg !11032
  %48 = getelementptr inbounds i8, i8* %43, i64 %47, !dbg !11032
  store i8 0, i8* %48, align 1, !dbg !11037
  %49 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11038
  %50 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %49, i32 0, i32 0, !dbg !11039
  %51 = load i32 (i8*)*, i32 (i8*)** %50, align 8, !dbg !11039
  %52 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11040
  %53 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %52, i32 0, i32 1, !dbg !11041
  %54 = load i8*, i8** %53, align 8, !dbg !11041
  %55 = call i32 %51(i8* %54), !dbg !11038
  br label %126, !dbg !11042

56:                                               ; preds = %27
  %57 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11043
  %58 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %57, i32 0, i32 1, !dbg !11045
  %59 = load i8*, i8** %58, align 8, !dbg !11045
  store i8* %59, i8** %3, align 8, !dbg !11046
  br label %60, !dbg !11047

60:                                               ; preds = %124, %56
  %61 = load i8*, i8** %3, align 8, !dbg !11048
  %62 = icmp ne i8* %61, null, !dbg !11050
  br i1 %62, label %63, label %68, !dbg !11051

63:                                               ; preds = %60
  %64 = load i8*, i8** %3, align 8, !dbg !11052
  %65 = load i8, i8* %64, align 1, !dbg !11053
  %66 = sext i8 %65 to i32, !dbg !11053
  %67 = icmp ne i32 %66, 0, !dbg !11054
  br label %68

68:                                               ; preds = %63, %60
  %69 = phi i1 [ false, %60 ], [ %67, %63 ], !dbg !11055
  br i1 %69, label %70, label %125, !dbg !11056

70:                                               ; preds = %68
  %71 = load i8*, i8** %3, align 8, !dbg !11057
  %72 = load i8, i8* %71, align 1, !dbg !11060
  %73 = sext i8 %72 to i32, !dbg !11060
  %74 = icmp eq i32 %73, 10, !dbg !11061
  br i1 %74, label %75, label %82, !dbg !11062

75:                                               ; preds = %70
  %76 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11063
  %77 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %76, i32 0, i32 0, !dbg !11065
  %78 = load i32 (i8*)*, i32 (i8*)** %77, align 8, !dbg !11065
  %79 = call i32 %78(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.295, i64 0, i64 0)), !dbg !11063
  %80 = load i8*, i8** %3, align 8, !dbg !11066
  %81 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !11066
  store i8* %81, i8** %3, align 8, !dbg !11066
  br label %124, !dbg !11067

82:                                               ; preds = %70
  %83 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11068
  %84 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %83, i32 0, i32 4, !dbg !11070
  %85 = load i32, i32* %84, align 4, !dbg !11070
  %86 = sext i32 %85 to i64, !dbg !11068
  %87 = load i8*, i8** %3, align 8, !dbg !11071
  %88 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11072
  %89 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %88, i32 0, i32 1, !dbg !11073
  %90 = load i8*, i8** %89, align 8, !dbg !11073
  %91 = ptrtoint i8* %87 to i64, !dbg !11074
  %92 = ptrtoint i8* %90 to i64, !dbg !11074
  %93 = sub i64 %91, %92, !dbg !11074
  %94 = sub nsw i64 %86, %93, !dbg !11075
  %95 = trunc i64 %94 to i32, !dbg !11068
  store i32 %95, i32* %5, align 4, !dbg !11076
  %96 = load i8*, i8** %3, align 8, !dbg !11077
  %97 = load i32, i32* %5, align 4, !dbg !11079
  %98 = sext i32 %97 to i64, !dbg !11079
  %99 = call i8* @memchr(i8* %96, i32 10, i64 %98) #12, !dbg !11080
  store i8* %99, i8** %4, align 8, !dbg !11081
  %100 = icmp ne i8* %99, null, !dbg !11082
  br i1 %100, label %101, label %108, !dbg !11083

101:                                              ; preds = %82
  %102 = load i8*, i8** %4, align 8, !dbg !11084
  %103 = load i8*, i8** %3, align 8, !dbg !11085
  %104 = ptrtoint i8* %102 to i64, !dbg !11086
  %105 = ptrtoint i8* %103 to i64, !dbg !11086
  %106 = sub i64 %104, %105, !dbg !11086
  %107 = trunc i64 %106 to i32, !dbg !11087
  store i32 %107, i32* %5, align 4, !dbg !11088
  br label %108, !dbg !11089

108:                                              ; preds = %101, %82
  %109 = load i32, i32* %5, align 4, !dbg !11090
  %110 = icmp ne i32 %109, 0, !dbg !11090
  br i1 %110, label %111, label %115, !dbg !11092

111:                                              ; preds = %108
  %112 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11093
  %113 = load i8*, i8** %3, align 8, !dbg !11094
  %114 = load i32, i32* %5, align 4, !dbg !11095
  call void @lbuf_println(%struct.lbuf* %112, i8* %113, i32 %114), !dbg !11096
  br label %115, !dbg !11096

115:                                              ; preds = %111, %108
  %116 = load i8*, i8** %4, align 8, !dbg !11097
  %117 = icmp ne i8* %116, null, !dbg !11097
  br i1 %117, label %118, label %121, !dbg !11097

118:                                              ; preds = %115
  %119 = load i8*, i8** %4, align 8, !dbg !11098
  %120 = getelementptr inbounds i8, i8* %119, i64 1, !dbg !11099
  br label %122, !dbg !11097

121:                                              ; preds = %115
  br label %122, !dbg !11097

122:                                              ; preds = %121, %118
  %123 = phi i8* [ %120, %118 ], [ null, %121 ], !dbg !11097
  store i8* %123, i8** %3, align 8, !dbg !11100
  br label %124

124:                                              ; preds = %122, %75
  br label %60, !dbg !11101, !llvm.loop !11102

125:                                              ; preds = %68
  br label %126, !dbg !11103

126:                                              ; preds = %125, %40, %15
  call void @llvm.dbg.label(metadata !11104), !dbg !11105
  %127 = load %struct.lbuf*, %struct.lbuf** %2, align 8, !dbg !11106
  %128 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %127, i32 0, i32 4, !dbg !11107
  store i32 0, i32* %128, align 4, !dbg !11108
  ret void, !dbg !11109
}

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @lbuf_println(%struct.lbuf* %0, i8* %1, i32 %2) #0 !dbg !11110 {
  %4 = alloca %struct.lbuf*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  store %struct.lbuf* %0, %struct.lbuf** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.lbuf** %4, metadata !11113, metadata !DIExpression()), !dbg !11114
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11115, metadata !DIExpression()), !dbg !11116
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11117, metadata !DIExpression()), !dbg !11118
  call void @llvm.dbg.declare(metadata i8** %7, metadata !11119, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.declare(metadata i8* %8, metadata !11121, metadata !DIExpression()), !dbg !11122
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11123, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11125, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.declare(metadata i32* %11, metadata !11127, metadata !DIExpression()), !dbg !11128
  %14 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !11129
  %15 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %14, i32 0, i32 2, !dbg !11130
  %16 = load i8*, i8** %15, align 8, !dbg !11130
  %17 = icmp ne i8* %16, null, !dbg !11129
  br i1 %17, label %18, label %23, !dbg !11129

18:                                               ; preds = %3
  %19 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !11131
  %20 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %19, i32 0, i32 2, !dbg !11132
  %21 = load i8*, i8** %20, align 8, !dbg !11132
  %22 = call i64 @strlen(i8* %21) #12, !dbg !11133
  br label %24, !dbg !11129

23:                                               ; preds = %3
  br label %24, !dbg !11129

24:                                               ; preds = %23, %18
  %25 = phi i64 [ %22, %18 ], [ 0, %23 ], !dbg !11129
  %26 = trunc i64 %25 to i32, !dbg !11129
  store i32 %26, i32* %11, align 4, !dbg !11134
  %27 = load i8*, i8** %5, align 8, !dbg !11135
  store i8* %27, i8** %7, align 8, !dbg !11136
  %28 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !11137
  %29 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %28, i32 0, i32 6, !dbg !11138
  %30 = load i32, i32* %29, align 4, !dbg !11138
  store i32 %30, i32* %10, align 4, !dbg !11139
  br label %31, !dbg !11140

31:                                               ; preds = %171, %24
  %32 = load i8*, i8** %7, align 8, !dbg !11141
  %33 = icmp ne i8* %32, null, !dbg !11142
  br i1 %33, label %34, label %39, !dbg !11143

34:                                               ; preds = %31
  %35 = load i8*, i8** %7, align 8, !dbg !11144
  %36 = load i8, i8* %35, align 1, !dbg !11145
  %37 = sext i8 %36 to i32, !dbg !11145
  %38 = icmp ne i32 %37, 0, !dbg !11146
  br label %39

39:                                               ; preds = %34, %31
  %40 = phi i1 [ false, %31 ], [ %38, %34 ], !dbg !11147
  br i1 %40, label %41, label %176, !dbg !11140

41:                                               ; preds = %39
  call void @llvm.dbg.declare(metadata i8** %12, metadata !11148, metadata !DIExpression()), !dbg !11150
  store i8* null, i8** %12, align 8, !dbg !11150
  call void @llvm.dbg.declare(metadata i32* %13, metadata !11151, metadata !DIExpression()), !dbg !11152
  %42 = load i32, i32* %6, align 4, !dbg !11153
  %43 = load i8*, i8** %7, align 8, !dbg !11154
  %44 = load i8*, i8** %5, align 8, !dbg !11155
  %45 = ptrtoint i8* %43 to i64, !dbg !11156
  %46 = ptrtoint i8* %44 to i64, !dbg !11156
  %47 = sub i64 %45, %46, !dbg !11156
  %48 = trunc i64 %47 to i32, !dbg !11157
  %49 = sub nsw i32 %42, %48, !dbg !11158
  store i32 %49, i32* %13, align 4, !dbg !11152
  %50 = load i32, i32* %13, align 4, !dbg !11159
  %51 = load i32, i32* %10, align 4, !dbg !11161
  %52 = icmp sgt i32 %50, %51, !dbg !11162
  br i1 %52, label %53, label %83, !dbg !11163

53:                                               ; preds = %41
  %54 = load i32, i32* %11, align 4, !dbg !11164
  %55 = load i32, i32* %10, align 4, !dbg !11166
  %56 = sub nsw i32 %55, %54, !dbg !11166
  store i32 %56, i32* %10, align 4, !dbg !11166
  %57 = load i8*, i8** %7, align 8, !dbg !11167
  %58 = load i32, i32* %10, align 4, !dbg !11169
  %59 = sext i32 %58 to i64, !dbg !11169
  %60 = call i8* @memrchr(i8* %57, i32 32, i64 %59) #12, !dbg !11170
  store i8* %60, i8** %12, align 8, !dbg !11171
  %61 = icmp eq i8* %60, null, !dbg !11172
  br i1 %61, label %62, label %72, !dbg !11173

62:                                               ; preds = %53
  %63 = load i8*, i8** %7, align 8, !dbg !11174
  %64 = load i32, i32* %10, align 4, !dbg !11175
  %65 = sext i32 %64 to i64, !dbg !11176
  %66 = getelementptr inbounds i8, i8* %63, i64 %65, !dbg !11176
  %67 = load i32, i32* %13, align 4, !dbg !11177
  %68 = load i32, i32* %10, align 4, !dbg !11178
  %69 = sub nsw i32 %67, %68, !dbg !11179
  %70 = sext i32 %69 to i64, !dbg !11177
  %71 = call i8* @memchr(i8* %66, i32 32, i64 %70) #12, !dbg !11180
  store i8* %71, i8** %12, align 8, !dbg !11181
  br label %72, !dbg !11182

72:                                               ; preds = %62, %53
  %73 = load i8*, i8** %12, align 8, !dbg !11183
  %74 = icmp ne i8* %73, null, !dbg !11185
  br i1 %74, label %75, label %82, !dbg !11186

75:                                               ; preds = %72
  %76 = load i8*, i8** %12, align 8, !dbg !11187
  %77 = load i8*, i8** %7, align 8, !dbg !11188
  %78 = ptrtoint i8* %76 to i64, !dbg !11189
  %79 = ptrtoint i8* %77 to i64, !dbg !11189
  %80 = sub i64 %78, %79, !dbg !11189
  %81 = trunc i64 %80 to i32, !dbg !11190
  store i32 %81, i32* %13, align 4, !dbg !11191
  br label %82, !dbg !11192

82:                                               ; preds = %75, %72
  br label %83, !dbg !11193

83:                                               ; preds = %82, %41
  %84 = load i8*, i8** %7, align 8, !dbg !11194
  %85 = load i8*, i8** %5, align 8, !dbg !11196
  %86 = icmp ne i8* %84, %85, !dbg !11197
  br i1 %86, label %87, label %103, !dbg !11198

87:                                               ; preds = %83
  store i32 0, i32* %9, align 4, !dbg !11199
  br label %88, !dbg !11202

88:                                               ; preds = %99, %87
  %89 = load i32, i32* %9, align 4, !dbg !11203
  %90 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !11205
  %91 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %90, i32 0, i32 3, !dbg !11206
  %92 = load i32, i32* %91, align 8, !dbg !11206
  %93 = icmp slt i32 %89, %92, !dbg !11207
  br i1 %93, label %94, label %102, !dbg !11208

94:                                               ; preds = %88
  %95 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !11209
  %96 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %95, i32 0, i32 0, !dbg !11210
  %97 = load i32 (i8*)*, i32 (i8*)** %96, align 8, !dbg !11210
  %98 = call i32 %97(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.296, i64 0, i64 0)), !dbg !11209
  br label %99, !dbg !11209

99:                                               ; preds = %94
  %100 = load i32, i32* %9, align 4, !dbg !11211
  %101 = add nsw i32 %100, 1, !dbg !11211
  store i32 %101, i32* %9, align 4, !dbg !11211
  br label %88, !dbg !11212, !llvm.loop !11213

102:                                              ; preds = %88
  br label %103, !dbg !11215

103:                                              ; preds = %102, %83
  %104 = load i8*, i8** %7, align 8, !dbg !11216
  %105 = load i32, i32* %13, align 4, !dbg !11217
  %106 = sext i32 %105 to i64, !dbg !11216
  %107 = getelementptr inbounds i8, i8* %104, i64 %106, !dbg !11216
  %108 = load i8, i8* %107, align 1, !dbg !11216
  store i8 %108, i8* %8, align 1, !dbg !11218
  %109 = load i8*, i8** %7, align 8, !dbg !11219
  %110 = load i32, i32* %13, align 4, !dbg !11220
  %111 = sext i32 %110 to i64, !dbg !11219
  %112 = getelementptr inbounds i8, i8* %109, i64 %111, !dbg !11219
  store i8 0, i8* %112, align 1, !dbg !11221
  %113 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !11222
  %114 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %113, i32 0, i32 0, !dbg !11223
  %115 = load i32 (i8*)*, i32 (i8*)** %114, align 8, !dbg !11223
  %116 = load i8*, i8** %7, align 8, !dbg !11224
  %117 = call i32 %115(i8* %116), !dbg !11222
  %118 = load i8, i8* %8, align 1, !dbg !11225
  %119 = load i8*, i8** %7, align 8, !dbg !11226
  %120 = load i32, i32* %13, align 4, !dbg !11227
  %121 = sext i32 %120 to i64, !dbg !11226
  %122 = getelementptr inbounds i8, i8* %119, i64 %121, !dbg !11226
  store i8 %118, i8* %122, align 1, !dbg !11228
  %123 = load i8*, i8** %12, align 8, !dbg !11229
  store i8* %123, i8** %7, align 8, !dbg !11230
  %124 = load i8*, i8** %7, align 8, !dbg !11231
  %125 = icmp ne i8* %124, null, !dbg !11233
  br i1 %125, label %126, label %171, !dbg !11234

126:                                              ; preds = %103
  %127 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !11235
  %128 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %127, i32 0, i32 6, !dbg !11237
  %129 = load i32, i32* %128, align 4, !dbg !11237
  %130 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !11238
  %131 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %130, i32 0, i32 3, !dbg !11239
  %132 = load i32, i32* %131, align 8, !dbg !11239
  %133 = sub nsw i32 %129, %132, !dbg !11240
  store i32 %133, i32* %10, align 4, !dbg !11241
  %134 = load i8*, i8** %5, align 8, !dbg !11242
  %135 = load i32, i32* %6, align 4, !dbg !11243
  %136 = sext i32 %135 to i64, !dbg !11244
  %137 = getelementptr inbounds i8, i8* %134, i64 %136, !dbg !11244
  store i8* %137, i8** %12, align 8, !dbg !11245
  br label %138, !dbg !11246

138:                                              ; preds = %156, %126
  %139 = load i8*, i8** %7, align 8, !dbg !11247
  %140 = load i8*, i8** %12, align 8, !dbg !11248
  %141 = icmp ult i8* %139, %140, !dbg !11249
  br i1 %141, label %142, label %154, !dbg !11250

142:                                              ; preds = %138
  %143 = call i16** @__ctype_b_loc() #14, !dbg !11251
  %144 = load i16*, i16** %143, align 8, !dbg !11251
  %145 = load i8*, i8** %7, align 8, !dbg !11251
  %146 = load i8, i8* %145, align 1, !dbg !11251
  %147 = zext i8 %146 to i32, !dbg !11251
  %148 = sext i32 %147 to i64, !dbg !11251
  %149 = getelementptr inbounds i16, i16* %144, i64 %148, !dbg !11251
  %150 = load i16, i16* %149, align 2, !dbg !11251
  %151 = zext i16 %150 to i32, !dbg !11251
  %152 = and i32 %151, 1, !dbg !11251
  %153 = icmp ne i32 %152, 0, !dbg !11250
  br label %154

154:                                              ; preds = %142, %138
  %155 = phi i1 [ false, %138 ], [ %153, %142 ], !dbg !11252
  br i1 %155, label %156, label %159, !dbg !11246

156:                                              ; preds = %154
  %157 = load i8*, i8** %7, align 8, !dbg !11253
  %158 = getelementptr inbounds i8, i8* %157, i32 1, !dbg !11253
  store i8* %158, i8** %7, align 8, !dbg !11253
  br label %138, !dbg !11246, !llvm.loop !11255

159:                                              ; preds = %154
  %160 = load i32, i32* %11, align 4, !dbg !11257
  %161 = icmp ne i32 %160, 0, !dbg !11257
  br i1 %161, label %162, label %170, !dbg !11259

162:                                              ; preds = %159
  %163 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !11260
  %164 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %163, i32 0, i32 0, !dbg !11261
  %165 = load i32 (i8*)*, i32 (i8*)** %164, align 8, !dbg !11261
  %166 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !11262
  %167 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %166, i32 0, i32 2, !dbg !11263
  %168 = load i8*, i8** %167, align 8, !dbg !11263
  %169 = call i32 %165(i8* %168), !dbg !11260
  br label %170, !dbg !11260

170:                                              ; preds = %162, %159
  br label %171, !dbg !11264

171:                                              ; preds = %170, %103
  %172 = load %struct.lbuf*, %struct.lbuf** %4, align 8, !dbg !11265
  %173 = getelementptr inbounds %struct.lbuf, %struct.lbuf* %172, i32 0, i32 0, !dbg !11266
  %174 = load i32 (i8*)*, i32 (i8*)** %173, align 8, !dbg !11266
  %175 = call i32 %174(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.295, i64 0, i64 0)), !dbg !11265
  br label %31, !dbg !11140, !llvm.loop !11267

176:                                              ; preds = %39
  ret void, !dbg !11269
}

; Function Attrs: nounwind readonly
declare i8* @memrchr(i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define i8* @tq_pop(i8* %0) #0 !dbg !11270 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.list_proto*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !11273, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.declare(metadata %struct.list_proto** %3, metadata !11275, metadata !DIExpression()), !dbg !11276
  %5 = load i8*, i8** %2, align 8, !dbg !11277
  %6 = bitcast i8* %5 to %struct.list_proto*, !dbg !11278
  store %struct.list_proto* %6, %struct.list_proto** %3, align 8, !dbg !11276
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11279, metadata !DIExpression()), !dbg !11280
  store i8* null, i8** %4, align 8, !dbg !11280
  %7 = load %struct.list_proto*, %struct.list_proto** %3, align 8, !dbg !11281
  %8 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %7, i32 0, i32 0, !dbg !11281
  %9 = load %struct.list_proto*, %struct.list_proto** %8, align 8, !dbg !11281
  %10 = icmp eq %struct.list_proto* %9, null, !dbg !11281
  br i1 %10, label %41, label %11, !dbg !11283

11:                                               ; preds = %1
  %12 = load %struct.list_proto*, %struct.list_proto** %3, align 8, !dbg !11284
  %13 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %12, i32 0, i32 1, !dbg !11286
  %14 = load %struct.list_proto*, %struct.list_proto** %13, align 8, !dbg !11286
  %15 = bitcast %struct.list_proto* %14 to i8*, !dbg !11287
  store i8* %15, i8** %4, align 8, !dbg !11288
  %16 = load %struct.list_proto*, %struct.list_proto** %3, align 8, !dbg !11289
  %17 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %16, i32 0, i32 0, !dbg !11291
  %18 = load %struct.list_proto*, %struct.list_proto** %17, align 8, !dbg !11291
  %19 = load %struct.list_proto*, %struct.list_proto** %3, align 8, !dbg !11292
  %20 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %19, i32 0, i32 1, !dbg !11293
  %21 = load %struct.list_proto*, %struct.list_proto** %20, align 8, !dbg !11293
  %22 = icmp eq %struct.list_proto* %18, %21, !dbg !11294
  br i1 %22, label %23, label %28, !dbg !11295

23:                                               ; preds = %11
  %24 = load %struct.list_proto*, %struct.list_proto** %3, align 8, !dbg !11296
  %25 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %24, i32 0, i32 0, !dbg !11298
  store %struct.list_proto* null, %struct.list_proto** %25, align 8, !dbg !11299
  %26 = load %struct.list_proto*, %struct.list_proto** %3, align 8, !dbg !11300
  %27 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %26, i32 0, i32 1, !dbg !11301
  store %struct.list_proto* null, %struct.list_proto** %27, align 8, !dbg !11302
  br label %40, !dbg !11303

28:                                               ; preds = %11
  %29 = load %struct.list_proto*, %struct.list_proto** %3, align 8, !dbg !11304
  %30 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %29, i32 0, i32 1, !dbg !11306
  %31 = load %struct.list_proto*, %struct.list_proto** %30, align 8, !dbg !11306
  %32 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %31, i32 0, i32 0, !dbg !11307
  %33 = load %struct.list_proto*, %struct.list_proto** %32, align 8, !dbg !11307
  %34 = load %struct.list_proto*, %struct.list_proto** %3, align 8, !dbg !11308
  %35 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %34, i32 0, i32 1, !dbg !11309
  store %struct.list_proto* %33, %struct.list_proto** %35, align 8, !dbg !11310
  %36 = load %struct.list_proto*, %struct.list_proto** %3, align 8, !dbg !11311
  %37 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %36, i32 0, i32 1, !dbg !11312
  %38 = load %struct.list_proto*, %struct.list_proto** %37, align 8, !dbg !11312
  %39 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %38, i32 0, i32 1, !dbg !11313
  store %struct.list_proto* null, %struct.list_proto** %39, align 8, !dbg !11314
  br label %40

40:                                               ; preds = %28, %23
  br label %41, !dbg !11315

41:                                               ; preds = %40, %1
  %42 = load i8*, i8** %4, align 8, !dbg !11316
  ret i8* %42, !dbg !11317
}

; Function Attrs: noinline nounwind optnone uwtable
define void @list2tq(i8* %0, i8* %1) #0 !dbg !11318 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.list_proto*, align 8
  %6 = alloca %struct.list_proto*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11321, metadata !DIExpression()), !dbg !11322
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11323, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.declare(metadata %struct.list_proto** %5, metadata !11325, metadata !DIExpression()), !dbg !11326
  %7 = load i8*, i8** %3, align 8, !dbg !11327
  %8 = bitcast i8* %7 to %struct.list_proto*, !dbg !11328
  store %struct.list_proto* %8, %struct.list_proto** %5, align 8, !dbg !11326
  call void @llvm.dbg.declare(metadata %struct.list_proto** %6, metadata !11329, metadata !DIExpression()), !dbg !11330
  %9 = load i8*, i8** %4, align 8, !dbg !11331
  %10 = bitcast i8* %9 to %struct.list_proto*, !dbg !11332
  store %struct.list_proto* %10, %struct.list_proto** %6, align 8, !dbg !11330
  %11 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11333
  %12 = icmp ne %struct.list_proto* %11, null, !dbg !11335
  br i1 %12, label %13, label %24, !dbg !11336

13:                                               ; preds = %2
  %14 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11337
  %15 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11339
  %16 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %15, i32 0, i32 0, !dbg !11340
  store %struct.list_proto* %14, %struct.list_proto** %16, align 8, !dbg !11341
  %17 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11342
  %18 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %17, i32 0, i32 0, !dbg !11343
  %19 = load %struct.list_proto*, %struct.list_proto** %18, align 8, !dbg !11343
  %20 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11344
  %21 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %20, i32 0, i32 1, !dbg !11345
  store %struct.list_proto* %19, %struct.list_proto** %21, align 8, !dbg !11346
  %22 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11347
  %23 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %22, i32 0, i32 0, !dbg !11348
  store %struct.list_proto* null, %struct.list_proto** %23, align 8, !dbg !11349
  br label %29, !dbg !11350

24:                                               ; preds = %2
  %25 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11351
  %26 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %25, i32 0, i32 0, !dbg !11353
  store %struct.list_proto* null, %struct.list_proto** %26, align 8, !dbg !11354
  %27 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11355
  %28 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %27, i32 0, i32 1, !dbg !11356
  store %struct.list_proto* null, %struct.list_proto** %28, align 8, !dbg !11357
  br label %29

29:                                               ; preds = %24, %13
  ret void, !dbg !11358
}

; Function Attrs: noinline nounwind optnone uwtable
define void @list_append(i8* %0, i8* %1) #0 !dbg !11359 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.list_proto*, align 8
  %6 = alloca %struct.list_proto*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11360, metadata !DIExpression()), !dbg !11361
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11362, metadata !DIExpression()), !dbg !11363
  call void @llvm.dbg.declare(metadata %struct.list_proto** %5, metadata !11364, metadata !DIExpression()), !dbg !11365
  %8 = load i8*, i8** %3, align 8, !dbg !11366
  %9 = bitcast i8* %8 to %struct.list_proto*, !dbg !11367
  store %struct.list_proto* %9, %struct.list_proto** %5, align 8, !dbg !11365
  call void @llvm.dbg.declare(metadata %struct.list_proto** %6, metadata !11368, metadata !DIExpression()), !dbg !11369
  %10 = load i8*, i8** %4, align 8, !dbg !11370
  %11 = bitcast i8* %10 to %struct.list_proto*, !dbg !11371
  store %struct.list_proto* %11, %struct.list_proto** %6, align 8, !dbg !11369
  call void @llvm.dbg.declare(metadata i8** %7, metadata !11372, metadata !DIExpression()), !dbg !11373
  %12 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11374
  %13 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %12, i32 0, i32 0, !dbg !11375
  %14 = load %struct.list_proto*, %struct.list_proto** %13, align 8, !dbg !11375
  %15 = bitcast %struct.list_proto* %14 to i8*, !dbg !11374
  store i8* %15, i8** %7, align 8, !dbg !11373
  %16 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11376
  %17 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11377
  %18 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %17, i32 0, i32 0, !dbg !11378
  %19 = load %struct.list_proto*, %struct.list_proto** %18, align 8, !dbg !11378
  %20 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %19, i32 0, i32 1, !dbg !11379
  store %struct.list_proto* %16, %struct.list_proto** %20, align 8, !dbg !11380
  %21 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11381
  %22 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %21, i32 0, i32 0, !dbg !11382
  %23 = load %struct.list_proto*, %struct.list_proto** %22, align 8, !dbg !11382
  %24 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11383
  %25 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %24, i32 0, i32 0, !dbg !11384
  store %struct.list_proto* %23, %struct.list_proto** %25, align 8, !dbg !11385
  %26 = load i8*, i8** %7, align 8, !dbg !11386
  %27 = bitcast i8* %26 to %struct.list_proto*, !dbg !11386
  %28 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11387
  %29 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %28, i32 0, i32 0, !dbg !11388
  store %struct.list_proto* %27, %struct.list_proto** %29, align 8, !dbg !11389
  ret void, !dbg !11390
}

; Function Attrs: noinline nounwind optnone uwtable
define void @tq_append(i8* %0, i8* %1) #0 !dbg !11391 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.list_proto*, align 8
  %6 = alloca %struct.list_proto*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11392, metadata !DIExpression()), !dbg !11393
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11394, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.declare(metadata %struct.list_proto** %5, metadata !11396, metadata !DIExpression()), !dbg !11397
  %8 = load i8*, i8** %3, align 8, !dbg !11398
  %9 = bitcast i8* %8 to %struct.list_proto*, !dbg !11399
  store %struct.list_proto* %9, %struct.list_proto** %5, align 8, !dbg !11397
  call void @llvm.dbg.declare(metadata %struct.list_proto** %6, metadata !11400, metadata !DIExpression()), !dbg !11401
  %10 = load i8*, i8** %4, align 8, !dbg !11402
  %11 = bitcast i8* %10 to %struct.list_proto*, !dbg !11403
  store %struct.list_proto* %11, %struct.list_proto** %6, align 8, !dbg !11401
  call void @llvm.dbg.declare(metadata i8** %7, metadata !11404, metadata !DIExpression()), !dbg !11405
  %12 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11406
  %13 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %12, i32 0, i32 0, !dbg !11407
  %14 = load %struct.list_proto*, %struct.list_proto** %13, align 8, !dbg !11407
  %15 = bitcast %struct.list_proto* %14 to i8*, !dbg !11406
  store i8* %15, i8** %7, align 8, !dbg !11405
  %16 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11408
  %17 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %16, i32 0, i32 0, !dbg !11410
  %18 = load %struct.list_proto*, %struct.list_proto** %17, align 8, !dbg !11410
  %19 = icmp eq %struct.list_proto* %18, null, !dbg !11411
  br i1 %19, label %20, label %24, !dbg !11412

20:                                               ; preds = %2
  %21 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11413
  %22 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11414
  %23 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %22, i32 0, i32 0, !dbg !11415
  store %struct.list_proto* %21, %struct.list_proto** %23, align 8, !dbg !11416
  br label %30, !dbg !11414

24:                                               ; preds = %2
  %25 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11417
  %26 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11418
  %27 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %26, i32 0, i32 1, !dbg !11419
  %28 = load %struct.list_proto*, %struct.list_proto** %27, align 8, !dbg !11419
  %29 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %28, i32 0, i32 1, !dbg !11420
  store %struct.list_proto* %25, %struct.list_proto** %29, align 8, !dbg !11421
  br label %30

30:                                               ; preds = %24, %20
  %31 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11422
  %32 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %31, i32 0, i32 1, !dbg !11423
  %33 = load %struct.list_proto*, %struct.list_proto** %32, align 8, !dbg !11423
  %34 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11424
  %35 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %34, i32 0, i32 0, !dbg !11425
  store %struct.list_proto* %33, %struct.list_proto** %35, align 8, !dbg !11426
  %36 = load i8*, i8** %7, align 8, !dbg !11427
  %37 = bitcast i8* %36 to %struct.list_proto*, !dbg !11427
  %38 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11428
  %39 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %38, i32 0, i32 1, !dbg !11429
  store %struct.list_proto* %37, %struct.list_proto** %39, align 8, !dbg !11430
  ret void, !dbg !11431
}

; Function Attrs: noinline nounwind optnone uwtable
define void @tq_remove(i8* %0, i8* %1) #0 !dbg !11432 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.list_proto*, align 8
  %6 = alloca %struct.list_proto*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11433, metadata !DIExpression()), !dbg !11434
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11435, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.declare(metadata %struct.list_proto** %5, metadata !11437, metadata !DIExpression()), !dbg !11438
  %7 = load i8*, i8** %3, align 8, !dbg !11439
  %8 = bitcast i8* %7 to %struct.list_proto*, !dbg !11440
  store %struct.list_proto* %8, %struct.list_proto** %5, align 8, !dbg !11438
  call void @llvm.dbg.declare(metadata %struct.list_proto** %6, metadata !11441, metadata !DIExpression()), !dbg !11442
  %9 = load i8*, i8** %4, align 8, !dbg !11443
  %10 = bitcast i8* %9 to %struct.list_proto*, !dbg !11444
  store %struct.list_proto* %10, %struct.list_proto** %6, align 8, !dbg !11442
  %11 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11445
  %12 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %11, i32 0, i32 0, !dbg !11447
  %13 = load %struct.list_proto*, %struct.list_proto** %12, align 8, !dbg !11447
  %14 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11448
  %15 = icmp eq %struct.list_proto* %13, %14, !dbg !11449
  br i1 %15, label %16, label %27, !dbg !11450

16:                                               ; preds = %2
  %17 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11451
  %18 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %17, i32 0, i32 1, !dbg !11452
  %19 = load %struct.list_proto*, %struct.list_proto** %18, align 8, !dbg !11452
  %20 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11453
  %21 = icmp eq %struct.list_proto* %19, %20, !dbg !11454
  br i1 %21, label %22, label %27, !dbg !11455

22:                                               ; preds = %16
  %23 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11456
  %24 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %23, i32 0, i32 0, !dbg !11458
  store %struct.list_proto* null, %struct.list_proto** %24, align 8, !dbg !11459
  %25 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11460
  %26 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %25, i32 0, i32 1, !dbg !11461
  store %struct.list_proto* null, %struct.list_proto** %26, align 8, !dbg !11462
  br label %79, !dbg !11463

27:                                               ; preds = %16, %2
  %28 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11464
  %29 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %28, i32 0, i32 0, !dbg !11467
  %30 = load %struct.list_proto*, %struct.list_proto** %29, align 8, !dbg !11467
  %31 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11468
  %32 = icmp eq %struct.list_proto* %30, %31, !dbg !11469
  br i1 %32, label %33, label %46, !dbg !11470

33:                                               ; preds = %27
  %34 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11471
  %35 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %34, i32 0, i32 1, !dbg !11473
  %36 = load %struct.list_proto*, %struct.list_proto** %35, align 8, !dbg !11473
  %37 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11474
  %38 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %37, i32 0, i32 0, !dbg !11475
  store %struct.list_proto* %36, %struct.list_proto** %38, align 8, !dbg !11476
  %39 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11477
  %40 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %39, i32 0, i32 0, !dbg !11478
  %41 = load %struct.list_proto*, %struct.list_proto** %40, align 8, !dbg !11478
  %42 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11479
  %43 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %42, i32 0, i32 0, !dbg !11480
  %44 = load %struct.list_proto*, %struct.list_proto** %43, align 8, !dbg !11480
  %45 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %44, i32 0, i32 0, !dbg !11481
  store %struct.list_proto* %41, %struct.list_proto** %45, align 8, !dbg !11482
  br label %78, !dbg !11483

46:                                               ; preds = %27
  %47 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11484
  %48 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %47, i32 0, i32 1, !dbg !11486
  %49 = load %struct.list_proto*, %struct.list_proto** %48, align 8, !dbg !11486
  %50 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11487
  %51 = icmp eq %struct.list_proto* %49, %50, !dbg !11488
  br i1 %51, label %52, label %62, !dbg !11489

52:                                               ; preds = %46
  %53 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11490
  %54 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %53, i32 0, i32 0, !dbg !11492
  %55 = load %struct.list_proto*, %struct.list_proto** %54, align 8, !dbg !11492
  %56 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11493
  %57 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %56, i32 0, i32 1, !dbg !11494
  store %struct.list_proto* %55, %struct.list_proto** %57, align 8, !dbg !11495
  %58 = load %struct.list_proto*, %struct.list_proto** %5, align 8, !dbg !11496
  %59 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %58, i32 0, i32 1, !dbg !11497
  %60 = load %struct.list_proto*, %struct.list_proto** %59, align 8, !dbg !11497
  %61 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %60, i32 0, i32 1, !dbg !11498
  store %struct.list_proto* null, %struct.list_proto** %61, align 8, !dbg !11499
  br label %77, !dbg !11500

62:                                               ; preds = %46
  %63 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11501
  %64 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %63, i32 0, i32 1, !dbg !11503
  %65 = load %struct.list_proto*, %struct.list_proto** %64, align 8, !dbg !11503
  %66 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11504
  %67 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %66, i32 0, i32 0, !dbg !11505
  %68 = load %struct.list_proto*, %struct.list_proto** %67, align 8, !dbg !11505
  %69 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %68, i32 0, i32 1, !dbg !11506
  store %struct.list_proto* %65, %struct.list_proto** %69, align 8, !dbg !11507
  %70 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11508
  %71 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %70, i32 0, i32 0, !dbg !11509
  %72 = load %struct.list_proto*, %struct.list_proto** %71, align 8, !dbg !11509
  %73 = load %struct.list_proto*, %struct.list_proto** %6, align 8, !dbg !11510
  %74 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %73, i32 0, i32 1, !dbg !11511
  %75 = load %struct.list_proto*, %struct.list_proto** %74, align 8, !dbg !11511
  %76 = getelementptr inbounds %struct.list_proto, %struct.list_proto* %75, i32 0, i32 0, !dbg !11512
  store %struct.list_proto* %72, %struct.list_proto** %76, align 8, !dbg !11513
  br label %77

77:                                               ; preds = %62, %52
  br label %78

78:                                               ; preds = %77, %33
  br label %79

79:                                               ; preds = %78, %22
  ret void, !dbg !11514
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @sudo_setgroups(i32 %0, i32* %1) #0 !dbg !11515 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11521, metadata !DIExpression()), !dbg !11522
  store i32* %1, i32** %4, align 8
  call void @llvm.dbg.declare(metadata i32** %4, metadata !11523, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11525, metadata !DIExpression()), !dbg !11526
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11527, metadata !DIExpression()), !dbg !11528
  %7 = load i32, i32* %3, align 4, !dbg !11529
  %8 = sext i32 %7 to i64, !dbg !11529
  %9 = load i32*, i32** %4, align 8, !dbg !11530
  %10 = call i32 @setgroups(i64 %8, i32* %9) #13, !dbg !11531
  store i32 %10, i32* %6, align 4, !dbg !11532
  %11 = load i32, i32* %6, align 4, !dbg !11533
  %12 = icmp eq i32 %11, -1, !dbg !11535
  br i1 %12, label %13, label %33, !dbg !11536

13:                                               ; preds = %2
  %14 = call i32* @__errno_location() #14, !dbg !11537
  %15 = load i32, i32* %14, align 4, !dbg !11537
  %16 = icmp eq i32 %15, 22, !dbg !11538
  br i1 %16, label %17, label %33, !dbg !11539

17:                                               ; preds = %13
  %18 = call i64 @sysconf(i32 3) #13, !dbg !11540
  %19 = trunc i64 %18 to i32, !dbg !11542
  store i32 %19, i32* %5, align 4, !dbg !11543
  %20 = load i32, i32* %5, align 4, !dbg !11544
  %21 = icmp eq i32 %20, -1, !dbg !11546
  br i1 %21, label %22, label %23, !dbg !11547

22:                                               ; preds = %17
  store i32 65536, i32* %5, align 4, !dbg !11548
  br label %23, !dbg !11549

23:                                               ; preds = %22, %17
  %24 = load i32, i32* %3, align 4, !dbg !11550
  %25 = load i32, i32* %5, align 4, !dbg !11552
  %26 = icmp sgt i32 %24, %25, !dbg !11553
  br i1 %26, label %27, label %32, !dbg !11554

27:                                               ; preds = %23
  %28 = load i32, i32* %5, align 4, !dbg !11555
  %29 = sext i32 %28 to i64, !dbg !11555
  %30 = load i32*, i32** %4, align 8, !dbg !11556
  %31 = call i32 @setgroups(i64 %29, i32* %30) #13, !dbg !11557
  store i32 %31, i32* %6, align 4, !dbg !11558
  br label %32, !dbg !11559

32:                                               ; preds = %27, %23
  br label %33, !dbg !11560

33:                                               ; preds = %32, %13, %2
  %34 = load i32, i32* %6, align 4, !dbg !11561
  ret i32 %34, !dbg !11562
}

; Function Attrs: nounwind
declare i32 @setgroups(i64, i32*) #4

; Function Attrs: noinline nounwind optnone uwtable
define i32 @term_restore(i32 %0, i32 %1) #0 !dbg !11563 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11564, metadata !DIExpression()), !dbg !11565
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11566, metadata !DIExpression()), !dbg !11567
  %7 = load i32, i32* @changed, align 4, !dbg !11568
  %8 = icmp ne i32 %7, 0, !dbg !11568
  br i1 %8, label %9, label %22, !dbg !11570

9:                                                ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11571, metadata !DIExpression()), !dbg !11573
  store i32 0, i32* %6, align 4, !dbg !11573
  %10 = load i32, i32* %5, align 4, !dbg !11574
  %11 = icmp ne i32 %10, 0, !dbg !11574
  %12 = zext i1 %11 to i64, !dbg !11574
  %13 = select i1 %11, i32 2, i32 1, !dbg !11574
  %14 = load i32, i32* %6, align 4, !dbg !11575
  %15 = or i32 %14, %13, !dbg !11575
  store i32 %15, i32* %6, align 4, !dbg !11575
  %16 = load i32, i32* %4, align 4, !dbg !11576
  %17 = load i32, i32* %6, align 4, !dbg !11578
  %18 = call i32 @tcsetattr(i32 %16, i32 %17, %struct.termios* @oterm) #13, !dbg !11579
  %19 = icmp ne i32 %18, 0, !dbg !11580
  br i1 %19, label %20, label %21, !dbg !11581

20:                                               ; preds = %9
  store i32 0, i32* %3, align 4, !dbg !11582
  br label %23, !dbg !11582

21:                                               ; preds = %9
  store i32 0, i32* @changed, align 4, !dbg !11583
  br label %22, !dbg !11584

22:                                               ; preds = %21, %2
  store i32 1, i32* %3, align 4, !dbg !11585
  br label %23, !dbg !11585

23:                                               ; preds = %22, %20
  %24 = load i32, i32* %3, align 4, !dbg !11586
  ret i32 %24, !dbg !11586
}

; Function Attrs: nounwind
declare i32 @tcsetattr(i32, i32, %struct.termios*) #4

; Function Attrs: noinline nounwind optnone uwtable
define i32 @term_noecho(i32 %0) #0 !dbg !11587 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11588, metadata !DIExpression()), !dbg !11589
  %4 = load i32, i32* @changed, align 4, !dbg !11590
  %5 = icmp ne i32 %4, 0, !dbg !11590
  br i1 %5, label %11, label %6, !dbg !11592

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4, !dbg !11593
  %8 = call i32 @tcgetattr(i32 %7, %struct.termios* @oterm) #13, !dbg !11594
  %9 = icmp ne i32 %8, 0, !dbg !11595
  br i1 %9, label %10, label %11, !dbg !11596

10:                                               ; preds = %6
  store i32 0, i32* %2, align 4, !dbg !11597
  br label %19, !dbg !11597

11:                                               ; preds = %6, %1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 bitcast (%struct.termios* @term to i8*), i8* align 4 bitcast (%struct.termios* @oterm to i8*), i64 60, i1 false), !dbg !11598
  %12 = load i32, i32* getelementptr inbounds (%struct.termios, %struct.termios* @term, i32 0, i32 3), align 4, !dbg !11599
  %13 = and i32 %12, -73, !dbg !11599
  store i32 %13, i32* getelementptr inbounds (%struct.termios, %struct.termios* @term, i32 0, i32 3), align 4, !dbg !11599
  %14 = load i32, i32* %3, align 4, !dbg !11600
  %15 = call i32 @tcsetattr(i32 %14, i32 1, %struct.termios* @term) #13, !dbg !11602
  %16 = icmp eq i32 %15, 0, !dbg !11603
  br i1 %16, label %17, label %18, !dbg !11604

17:                                               ; preds = %11
  store i32 1, i32* @changed, align 4, !dbg !11605
  store i32 1, i32* %2, align 4, !dbg !11607
  br label %19, !dbg !11607

18:                                               ; preds = %11
  store i32 0, i32* %2, align 4, !dbg !11608
  br label %19, !dbg !11608

19:                                               ; preds = %18, %17, %10
  %20 = load i32, i32* %2, align 4, !dbg !11609
  ret i32 %20, !dbg !11609
}

; Function Attrs: nounwind
declare i32 @tcgetattr(i32, %struct.termios*) #4

; Function Attrs: noinline nounwind optnone uwtable
define i32 @term_raw(i32 %0, i32 %1) #0 !dbg !11610 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.termios, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11611, metadata !DIExpression()), !dbg !11612
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11613, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.declare(metadata %struct.termios* %6, metadata !11615, metadata !DIExpression()), !dbg !11616
  %7 = load i32, i32* @changed, align 4, !dbg !11617
  %8 = icmp ne i32 %7, 0, !dbg !11617
  br i1 %8, label %14, label %9, !dbg !11619

9:                                                ; preds = %2
  %10 = load i32, i32* %4, align 4, !dbg !11620
  %11 = call i32 @tcgetattr(i32 %10, %struct.termios* @oterm) #13, !dbg !11621
  %12 = icmp ne i32 %11, 0, !dbg !11622
  br i1 %12, label %13, label %14, !dbg !11623

13:                                               ; preds = %9
  store i32 0, i32* %3, align 4, !dbg !11624
  br label %41, !dbg !11624

14:                                               ; preds = %9, %2
  %15 = bitcast %struct.termios* %6 to i8*, !dbg !11625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 bitcast (%struct.termios* @oterm to i8*), i64 60, i1 false), !dbg !11625
  %16 = getelementptr inbounds %struct.termios, %struct.termios* %6, i32 0, i32 5, !dbg !11626
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 6, !dbg !11627
  store i8 1, i8* %17, align 1, !dbg !11628
  %18 = getelementptr inbounds %struct.termios, %struct.termios* %6, i32 0, i32 5, !dbg !11629
  %19 = getelementptr inbounds [32 x i8], [32 x i8]* %18, i64 0, i64 5, !dbg !11630
  store i8 0, i8* %19, align 1, !dbg !11631
  %20 = getelementptr inbounds %struct.termios, %struct.termios* %6, i32 0, i32 0, !dbg !11632
  %21 = load i32, i32* %20, align 4, !dbg !11632
  %22 = and i32 %21, -1985, !dbg !11632
  store i32 %22, i32* %20, align 4, !dbg !11632
  %23 = getelementptr inbounds %struct.termios, %struct.termios* %6, i32 0, i32 1, !dbg !11633
  %24 = load i32, i32* %23, align 4, !dbg !11633
  %25 = and i32 %24, -2, !dbg !11633
  store i32 %25, i32* %23, align 4, !dbg !11633
  %26 = getelementptr inbounds %struct.termios, %struct.termios* %6, i32 0, i32 3, !dbg !11634
  %27 = load i32, i32* %26, align 4, !dbg !11634
  %28 = and i32 %27, -32780, !dbg !11634
  store i32 %28, i32* %26, align 4, !dbg !11634
  %29 = load i32, i32* %5, align 4, !dbg !11635
  %30 = icmp ne i32 %29, 0, !dbg !11635
  br i1 %30, label %31, label %35, !dbg !11637

31:                                               ; preds = %14
  %32 = getelementptr inbounds %struct.termios, %struct.termios* %6, i32 0, i32 3, !dbg !11638
  %33 = load i32, i32* %32, align 4, !dbg !11638
  %34 = or i32 %33, 1, !dbg !11638
  store i32 %34, i32* %32, align 4, !dbg !11638
  br label %35, !dbg !11638

35:                                               ; preds = %31, %14
  %36 = load i32, i32* %4, align 4, !dbg !11639
  %37 = call i32 @tcsetattr(i32 %36, i32 1, %struct.termios* %6) #13, !dbg !11641
  %38 = icmp eq i32 %37, 0, !dbg !11642
  br i1 %38, label %39, label %40, !dbg !11643

39:                                               ; preds = %35
  store i32 1, i32* @changed, align 4, !dbg !11644
  store i32 1, i32* %3, align 4, !dbg !11646
  br label %41, !dbg !11646

40:                                               ; preds = %35
  store i32 0, i32* %3, align 4, !dbg !11647
  br label %41, !dbg !11647

41:                                               ; preds = %40, %39, %13
  %42 = load i32, i32* %3, align 4, !dbg !11648
  ret i32 %42, !dbg !11648
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @term_cbreak(i32 %0) #0 !dbg !11649 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11650, metadata !DIExpression()), !dbg !11651
  %4 = load i32, i32* @changed, align 4, !dbg !11652
  %5 = icmp ne i32 %4, 0, !dbg !11652
  br i1 %5, label %11, label %6, !dbg !11654

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4, !dbg !11655
  %8 = call i32 @tcgetattr(i32 %7, %struct.termios* @oterm) #13, !dbg !11656
  %9 = icmp ne i32 %8, 0, !dbg !11657
  br i1 %9, label %10, label %11, !dbg !11658

10:                                               ; preds = %6
  store i32 0, i32* %2, align 4, !dbg !11659
  br label %25, !dbg !11659

11:                                               ; preds = %6, %1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 bitcast (%struct.termios* @term to i8*), i8* align 4 bitcast (%struct.termios* @oterm to i8*), i64 60, i1 false), !dbg !11660
  store i8 1, i8* getelementptr inbounds (%struct.termios, %struct.termios* @term, i32 0, i32 5, i64 6), align 1, !dbg !11661
  store i8 0, i8* getelementptr inbounds (%struct.termios, %struct.termios* @term, i32 0, i32 5, i64 5), align 1, !dbg !11662
  %12 = load i32, i32* getelementptr inbounds (%struct.termios, %struct.termios* @term, i32 0, i32 3), align 4, !dbg !11663
  %13 = and i32 %12, -32843, !dbg !11663
  store i32 %13, i32* getelementptr inbounds (%struct.termios, %struct.termios* @term, i32 0, i32 3), align 4, !dbg !11663
  %14 = load i32, i32* getelementptr inbounds (%struct.termios, %struct.termios* @term, i32 0, i32 3), align 4, !dbg !11664
  %15 = or i32 %14, 1, !dbg !11664
  store i32 %15, i32* getelementptr inbounds (%struct.termios, %struct.termios* @term, i32 0, i32 3), align 4, !dbg !11664
  %16 = load i32, i32* %3, align 4, !dbg !11665
  %17 = call i32 @tcsetattr(i32 %16, i32 1, %struct.termios* @term) #13, !dbg !11667
  %18 = icmp eq i32 %17, 0, !dbg !11668
  br i1 %18, label %19, label %24, !dbg !11669

19:                                               ; preds = %11
  %20 = load i8, i8* getelementptr inbounds (%struct.termios, %struct.termios* @term, i32 0, i32 5, i64 2), align 1, !dbg !11670
  %21 = zext i8 %20 to i32, !dbg !11670
  store i32 %21, i32* @term_erase, align 4, !dbg !11672
  %22 = load i8, i8* getelementptr inbounds (%struct.termios, %struct.termios* @term, i32 0, i32 5, i64 3), align 1, !dbg !11673
  %23 = zext i8 %22 to i32, !dbg !11673
  store i32 %23, i32* @term_kill, align 4, !dbg !11674
  store i32 1, i32* @changed, align 4, !dbg !11675
  store i32 1, i32* %2, align 4, !dbg !11676
  br label %25, !dbg !11676

24:                                               ; preds = %11
  store i32 0, i32* %2, align 4, !dbg !11677
  br label %25, !dbg !11677

25:                                               ; preds = %24, %19, %10
  %26 = load i32, i32* %2, align 4, !dbg !11678
  ret i32 %26, !dbg !11678
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @term_copy(i32 %0, i32 %1) #0 !dbg !11679 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.termios, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11680, metadata !DIExpression()), !dbg !11681
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11682, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.declare(metadata %struct.termios* %6, metadata !11684, metadata !DIExpression()), !dbg !11685
  %7 = load i32, i32* %4, align 4, !dbg !11686
  %8 = call i32 @tcgetattr(i32 %7, %struct.termios* %6) #13, !dbg !11688
  %9 = icmp ne i32 %8, 0, !dbg !11689
  br i1 %9, label %10, label %11, !dbg !11690

10:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !11691
  br label %17, !dbg !11691

11:                                               ; preds = %2
  %12 = load i32, i32* %5, align 4, !dbg !11692
  %13 = call i32 @tcsetattr(i32 %12, i32 0, %struct.termios* %6) #13, !dbg !11694
  %14 = icmp ne i32 %13, 0, !dbg !11695
  br i1 %14, label %15, label %16, !dbg !11696

15:                                               ; preds = %11
  store i32 0, i32* %3, align 4, !dbg !11697
  br label %17, !dbg !11697

16:                                               ; preds = %11
  store i32 1, i32* %3, align 4, !dbg !11698
  br label %17, !dbg !11698

17:                                               ; preds = %16, %15, %10
  %18 = load i32, i32* %3, align 4, !dbg !11699
  ret i32 %18, !dbg !11699
}

; Function Attrs: noinline nounwind optnone uwtable
define void @zero_bytes(i8* %0, i64 %1) #0 !dbg !11700 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11706, metadata !DIExpression()), !dbg !11707
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata i64* %4, metadata !11708, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11710, metadata !DIExpression()), !dbg !11713
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11714, metadata !DIExpression()), !dbg !11715
  %7 = load i8*, i8** %3, align 8, !dbg !11716
  store i8* %7, i8** %5, align 8, !dbg !11718
  %8 = load i8*, i8** %5, align 8, !dbg !11719
  %9 = load i64, i64* %4, align 8, !dbg !11720
  %10 = getelementptr inbounds i8, i8* %8, i64 %9, !dbg !11721
  store i8* %10, i8** %6, align 8, !dbg !11722
  br label %11, !dbg !11723

11:                                               ; preds = %17, %2
  %12 = load i8*, i8** %5, align 8, !dbg !11724
  %13 = load i8*, i8** %6, align 8, !dbg !11726
  %14 = icmp ult i8* %12, %13, !dbg !11727
  br i1 %14, label %15, label %20, !dbg !11728

15:                                               ; preds = %11
  %16 = load i8*, i8** %5, align 8, !dbg !11729
  store volatile i8 0, i8* %16, align 1, !dbg !11730
  br label %17, !dbg !11731

17:                                               ; preds = %15
  %18 = load i8*, i8** %5, align 8, !dbg !11732
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !11732
  store i8* %19, i8** %5, align 8, !dbg !11732
  br label %11, !dbg !11733, !llvm.loop !11734

20:                                               ; preds = %11
  ret void, !dbg !11736
}

; Function Attrs: noinline nounwind optnone uwtable
define i64 @strlcpy(i8* %0, i8* %1, i64 %2) #0 !dbg !11737 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11741, metadata !DIExpression()), !dbg !11742
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11743, metadata !DIExpression()), !dbg !11744
  store i64 %2, i64* %6, align 8
  call void @llvm.dbg.declare(metadata i64* %6, metadata !11745, metadata !DIExpression()), !dbg !11746
  call void @llvm.dbg.declare(metadata i8** %7, metadata !11747, metadata !DIExpression()), !dbg !11748
  %10 = load i8*, i8** %4, align 8, !dbg !11749
  store i8* %10, i8** %7, align 8, !dbg !11748
  call void @llvm.dbg.declare(metadata i8** %8, metadata !11750, metadata !DIExpression()), !dbg !11751
  %11 = load i8*, i8** %5, align 8, !dbg !11752
  store i8* %11, i8** %8, align 8, !dbg !11751
  call void @llvm.dbg.declare(metadata i64* %9, metadata !11753, metadata !DIExpression()), !dbg !11754
  %12 = load i64, i64* %6, align 8, !dbg !11755
  store i64 %12, i64* %9, align 8, !dbg !11754
  %13 = load i64, i64* %9, align 8, !dbg !11756
  %14 = icmp ne i64 %13, 0, !dbg !11758
  br i1 %14, label %15, label %35, !dbg !11759

15:                                               ; preds = %3
  %16 = load i64, i64* %9, align 8, !dbg !11760
  %17 = add i64 %16, -1, !dbg !11760
  store i64 %17, i64* %9, align 8, !dbg !11760
  %18 = icmp ne i64 %17, 0, !dbg !11761
  br i1 %18, label %19, label %35, !dbg !11762

19:                                               ; preds = %15
  br label %20, !dbg !11763

20:                                               ; preds = %30, %19
  %21 = load i8*, i8** %8, align 8, !dbg !11765
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !11765
  store i8* %22, i8** %8, align 8, !dbg !11765
  %23 = load i8, i8* %21, align 1, !dbg !11768
  %24 = load i8*, i8** %7, align 8, !dbg !11769
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !11769
  store i8* %25, i8** %7, align 8, !dbg !11769
  store i8 %23, i8* %24, align 1, !dbg !11770
  %26 = sext i8 %23 to i32, !dbg !11771
  %27 = icmp eq i32 %26, 0, !dbg !11772
  br i1 %27, label %28, label %29, !dbg !11773

28:                                               ; preds = %20
  br label %34, !dbg !11774

29:                                               ; preds = %20
  br label %30, !dbg !11775

30:                                               ; preds = %29
  %31 = load i64, i64* %9, align 8, !dbg !11776
  %32 = add i64 %31, -1, !dbg !11776
  store i64 %32, i64* %9, align 8, !dbg !11776
  %33 = icmp ne i64 %32, 0, !dbg !11777
  br i1 %33, label %20, label %34, !dbg !11775, !llvm.loop !11778

34:                                               ; preds = %30, %28
  br label %35, !dbg !11780

35:                                               ; preds = %34, %15, %3
  %36 = load i64, i64* %9, align 8, !dbg !11781
  %37 = icmp eq i64 %36, 0, !dbg !11783
  br i1 %37, label %38, label %51, !dbg !11784

38:                                               ; preds = %35
  %39 = load i64, i64* %6, align 8, !dbg !11785
  %40 = icmp ne i64 %39, 0, !dbg !11788
  br i1 %40, label %41, label %43, !dbg !11789

41:                                               ; preds = %38
  %42 = load i8*, i8** %7, align 8, !dbg !11790
  store i8 0, i8* %42, align 1, !dbg !11791
  br label %43, !dbg !11792

43:                                               ; preds = %41, %38
  br label %44, !dbg !11793

44:                                               ; preds = %49, %43
  %45 = load i8*, i8** %8, align 8, !dbg !11794
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !11794
  store i8* %46, i8** %8, align 8, !dbg !11794
  %47 = load i8, i8* %45, align 1, !dbg !11795
  %48 = icmp ne i8 %47, 0, !dbg !11793
  br i1 %48, label %49, label %50, !dbg !11793

49:                                               ; preds = %44
  br label %44, !dbg !11793, !llvm.loop !11796

50:                                               ; preds = %44
  br label %51, !dbg !11798

51:                                               ; preds = %50, %35
  %52 = load i8*, i8** %8, align 8, !dbg !11799
  %53 = load i8*, i8** %5, align 8, !dbg !11800
  %54 = ptrtoint i8* %52 to i64, !dbg !11801
  %55 = ptrtoint i8* %53 to i64, !dbg !11801
  %56 = sub i64 %54, %55, !dbg !11801
  %57 = sub nsw i64 %56, 1, !dbg !11802
  ret i64 %57, !dbg !11803
}

; Function Attrs: noinline nounwind optnone uwtable
define void @closefrom_fallback(i32 %0) #0 !dbg !11804 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11806, metadata !DIExpression()), !dbg !11807
  call void @llvm.dbg.declare(metadata i64* %3, metadata !11808, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.declare(metadata i64* %4, metadata !11810, metadata !DIExpression()), !dbg !11811
  %5 = call i64 @sysconf(i32 4) #13, !dbg !11812
  store i64 %5, i64* %4, align 8, !dbg !11813
  %6 = load i64, i64* %4, align 8, !dbg !11814
  %7 = icmp slt i64 %6, 0, !dbg !11816
  br i1 %7, label %8, label %9, !dbg !11817

8:                                                ; preds = %1
  store i64 256, i64* %4, align 8, !dbg !11818
  br label %9, !dbg !11819

9:                                                ; preds = %8, %1
  %10 = load i32, i32* %2, align 4, !dbg !11820
  %11 = sext i32 %10 to i64, !dbg !11820
  store i64 %11, i64* %3, align 8, !dbg !11822
  br label %12, !dbg !11823

12:                                               ; preds = %20, %9
  %13 = load i64, i64* %3, align 8, !dbg !11824
  %14 = load i64, i64* %4, align 8, !dbg !11826
  %15 = icmp slt i64 %13, %14, !dbg !11827
  br i1 %15, label %16, label %23, !dbg !11828

16:                                               ; preds = %12
  %17 = load i64, i64* %3, align 8, !dbg !11829
  %18 = trunc i64 %17 to i32, !dbg !11830
  %19 = call i32 @close(i32 %18), !dbg !11831
  br label %20, !dbg !11832

20:                                               ; preds = %16
  %21 = load i64, i64* %3, align 8, !dbg !11833
  %22 = add nsw i64 %21, 1, !dbg !11833
  store i64 %22, i64* %3, align 8, !dbg !11833
  br label %12, !dbg !11834, !llvm.loop !11835

23:                                               ; preds = %12
  ret void, !dbg !11837
}

; Function Attrs: noinline nounwind optnone uwtable
define void @closefrom(i32 %0) #0 !dbg !11838 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.dirent*, align 8
  %4 = alloca %struct.__dirstream*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11839, metadata !DIExpression()), !dbg !11840
  call void @llvm.dbg.declare(metadata %struct.dirent** %3, metadata !11841, metadata !DIExpression()), !dbg !11851
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %4, metadata !11852, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11858, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.declare(metadata i64* %6, metadata !11860, metadata !DIExpression()), !dbg !11861
  %7 = call %struct.__dirstream* @opendir(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.323, i64 0, i64 0)), !dbg !11862
  store %struct.__dirstream* %7, %struct.__dirstream** %4, align 8, !dbg !11864
  %8 = icmp ne %struct.__dirstream* %7, null, !dbg !11865
  br i1 %8, label %9, label %54, !dbg !11866

9:                                                ; preds = %1
  br label %10, !dbg !11867

10:                                               ; preds = %50, %9
  %11 = load %struct.__dirstream*, %struct.__dirstream** %4, align 8, !dbg !11869
  %12 = call %struct.dirent* @readdir(%struct.__dirstream* %11), !dbg !11870
  store %struct.dirent* %12, %struct.dirent** %3, align 8, !dbg !11871
  %13 = icmp ne %struct.dirent* %12, null, !dbg !11872
  br i1 %13, label %14, label %51, !dbg !11867

14:                                               ; preds = %10
  %15 = load %struct.dirent*, %struct.dirent** %3, align 8, !dbg !11873
  %16 = getelementptr inbounds %struct.dirent, %struct.dirent* %15, i32 0, i32 4, !dbg !11875
  %17 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i64 0, i64 0, !dbg !11873
  %18 = call i64 @strtol(i8* %17, i8** %5, i32 10) #13, !dbg !11876
  store i64 %18, i64* %6, align 8, !dbg !11877
  %19 = load %struct.dirent*, %struct.dirent** %3, align 8, !dbg !11878
  %20 = getelementptr inbounds %struct.dirent, %struct.dirent* %19, i32 0, i32 4, !dbg !11880
  %21 = getelementptr inbounds [256 x i8], [256 x i8]* %20, i64 0, i64 0, !dbg !11878
  %22 = load i8*, i8** %5, align 8, !dbg !11881
  %23 = icmp ne i8* %21, %22, !dbg !11882
  br i1 %23, label %24, label %50, !dbg !11883

24:                                               ; preds = %14
  %25 = load i8*, i8** %5, align 8, !dbg !11884
  %26 = load i8, i8* %25, align 1, !dbg !11885
  %27 = sext i8 %26 to i32, !dbg !11885
  %28 = icmp eq i32 %27, 0, !dbg !11886
  br i1 %28, label %29, label %50, !dbg !11887

29:                                               ; preds = %24
  %30 = load i64, i64* %6, align 8, !dbg !11888
  %31 = icmp sge i64 %30, 0, !dbg !11889
  br i1 %31, label %32, label %50, !dbg !11890

32:                                               ; preds = %29
  %33 = load i64, i64* %6, align 8, !dbg !11891
  %34 = icmp slt i64 %33, 2147483647, !dbg !11892
  br i1 %34, label %35, label %50, !dbg !11893

35:                                               ; preds = %32
  %36 = load i64, i64* %6, align 8, !dbg !11894
  %37 = load i32, i32* %2, align 4, !dbg !11895
  %38 = sext i32 %37 to i64, !dbg !11895
  %39 = icmp sge i64 %36, %38, !dbg !11896
  br i1 %39, label %40, label %50, !dbg !11897

40:                                               ; preds = %35
  %41 = load i64, i64* %6, align 8, !dbg !11898
  %42 = load %struct.__dirstream*, %struct.__dirstream** %4, align 8, !dbg !11899
  %43 = call i32 @dirfd(%struct.__dirstream* %42) #13, !dbg !11900
  %44 = sext i32 %43 to i64, !dbg !11900
  %45 = icmp ne i64 %41, %44, !dbg !11901
  br i1 %45, label %46, label %50, !dbg !11902

46:                                               ; preds = %40
  %47 = load i64, i64* %6, align 8, !dbg !11903
  %48 = trunc i64 %47 to i32, !dbg !11904
  %49 = call i32 @close(i32 %48), !dbg !11905
  br label %50, !dbg !11906

50:                                               ; preds = %46, %40, %35, %32, %29, %24, %14
  br label %10, !dbg !11867, !llvm.loop !11907

51:                                               ; preds = %10
  %52 = load %struct.__dirstream*, %struct.__dirstream** %4, align 8, !dbg !11909
  %53 = call i32 @closedir(%struct.__dirstream* %52), !dbg !11910
  br label %56, !dbg !11911

54:                                               ; preds = %1
  %55 = load i32, i32* %2, align 4, !dbg !11912
  call void @closefrom_fallback(i32 %55), !dbg !11913
  br label %56

56:                                               ; preds = %54, %51
  ret void, !dbg !11914
}

declare %struct.__dirstream* @opendir(i8*) #3

declare %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: nounwind
declare i32 @dirfd(%struct.__dirstream*) #4

declare i32 @closedir(%struct.__dirstream*) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nosync nounwind willreturn }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #12 = { nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { nounwind readnone }
attributes #15 = { noreturn nounwind }
attributes #16 = { noreturn }

!llvm.dbg.cu = !{!845, !847, !2, !174, !849, !851, !238, !263, !298, !919, !717, !922, !924, !926, !929, !806, !931, !933, !935, !949, !815, !952, !954, !956}
!llvm.ident = !{!959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959, !959}
!llvm.module.flags = !{!960, !961, !962, !963}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "signal_pipe", scope: !2, file: !42, line: 67, type: !169, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !18, globals: !39, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "exec.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !6, line: 24, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17}
!9 = !DIEnumerator(name: "SOCK_STREAM", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "SOCK_DGRAM", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "SOCK_RAW", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "SOCK_RDM", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5, isUnsigned: true)
!14 = !DIEnumerator(name: "SOCK_DCCP", value: 6, isUnsigned: true)
!15 = !DIEnumerator(name: "SOCK_PACKET", value: 10, isUnsigned: true)
!16 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288, isUnsigned: true)
!17 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048, isUnsigned: true)
!18 = !{!19, !20, !22, !33, !29, !34, !35}
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !24, line: 70, baseType: !25)
!24 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "")
!25 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !24, line: 59, size: 1024, elements: !26)
!26 = !{!27}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "fds_bits", scope: !25, file: !24, line: 64, baseType: !28, size: 1024)
!28 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 1024, elements: !31)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !24, line: 49, baseType: !30)
!30 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!31 = !{!32}
!32 = !DISubrange(count: 16, lowerBound: 0)
!33 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!34 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !36, line: 97, baseType: !37)
!36 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !38, line: 154, baseType: !33)
!38 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!39 = !{!0, !40, !53}
!40 = !DIGlobalVariableExpression(var: !41, expr: !DIExpression())
!41 = distinct !DIGlobalVariable(name: "sigfwd_list", scope: !2, file: !42, line: 75, type: !43, isLocal: true, isDefinition: true)
!42 = !DIFile(filename: "./exec.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!43 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigforward_list", file: !42, line: 74, size: 128, elements: !44)
!44 = !{!45, !52}
!45 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !43, file: !42, line: 74, baseType: !46, size: 64)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigforward", file: !42, line: 70, size: 192, elements: !48)
!48 = !{!49, !50, !51}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !47, file: !42, line: 71, baseType: !46, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !47, file: !42, line: 71, baseType: !46, size: 64, offset: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "signo", scope: !47, file: !42, line: 72, baseType: !33, size: 32, offset: 128)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !43, file: !42, line: 74, baseType: !46, size: 64, offset: 64)
!53 = !DIGlobalVariableExpression(var: !54, expr: !DIExpression())
!54 = distinct !DIGlobalVariable(name: "saved_signals", scope: !2, file: !42, line: 156, type: !55, isLocal: true, isDefinition: true)
!55 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 17920, elements: !167)
!56 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_state", file: !42, line: 153, size: 1280, elements: !57)
!57 = !{!58, !59}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "signo", scope: !56, file: !42, line: 154, baseType: !33, size: 32)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !56, file: !42, line: 155, baseType: !60, size: 1216, offset: 64)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigaction_t", file: !61, line: 162, baseType: !62)
!61 = !DIFile(filename: "../include/missing.h", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!62 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !63, line: 27, size: 1216, elements: !64)
!63 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigaction.h", directory: "")
!64 = !{!65, !154, !162, !163}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !62, file: !63, line: 38, baseType: !66, size: 64)
!66 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !62, file: !63, line: 31, size: 64, elements: !67)
!67 = !{!68, !74}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !66, file: !63, line: 34, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !70, line: 72, baseType: !71)
!70 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!72 = !DISubroutineType(types: !73)
!73 = !{null, !33}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !66, file: !63, line: 36, baseType: !75, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!76 = !DISubroutineType(types: !77)
!77 = !{null, !33, !78, !19}
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !80, line: 124, baseType: !81)
!80 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h", directory: "")
!81 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !80, line: 36, size: 1024, elements: !82)
!82 = !{!83, !84, !85, !86, !87}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !81, file: !80, line: 38, baseType: !33, size: 32)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !81, file: !80, line: 40, baseType: !33, size: 32, offset: 32)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !81, file: !80, line: 42, baseType: !33, size: 32, offset: 64)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !81, file: !80, line: 48, baseType: !33, size: 32, offset: 96)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !81, file: !80, line: 123, baseType: !88, size: 896, offset: 128)
!88 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !81, file: !80, line: 51, size: 896, elements: !89)
!89 = !{!90, !94, !100, !112, !118, !127, !143, !148}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !88, file: !80, line: 53, baseType: !91, size: 896)
!91 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 896, elements: !92)
!92 = !{!93}
!93 = !DISubrange(count: 28, lowerBound: 0)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !88, file: !80, line: 60, baseType: !95, size: 64)
!95 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !88, file: !80, line: 56, size: 64, elements: !96)
!96 = !{!97, !98}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !95, file: !80, line: 58, baseType: !37, size: 32)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !95, file: !80, line: 59, baseType: !99, size: 32, offset: 32)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !38, line: 146, baseType: !7)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !88, file: !80, line: 68, baseType: !101, size: 128)
!101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !88, file: !80, line: 63, size: 128, elements: !102)
!102 = !{!103, !104, !105}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !101, file: !80, line: 65, baseType: !33, size: 32)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !101, file: !80, line: 66, baseType: !33, size: 32, offset: 32)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !101, file: !80, line: 67, baseType: !106, size: 64, offset: 64)
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigval_t", file: !107, line: 30, baseType: !108)
!107 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigval_t.h", directory: "")
!108 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !107, line: 24, size: 64, elements: !109)
!109 = !{!110, !111}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !108, file: !107, line: 26, baseType: !33, size: 32)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !108, file: !107, line: 27, baseType: !19, size: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !88, file: !80, line: 76, baseType: !113, size: 128)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !88, file: !80, line: 71, size: 128, elements: !114)
!114 = !{!115, !116, !117}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !113, file: !80, line: 73, baseType: !37, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !113, file: !80, line: 74, baseType: !99, size: 32, offset: 32)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !113, file: !80, line: 75, baseType: !106, size: 64, offset: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !88, file: !80, line: 86, baseType: !119, size: 256)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !88, file: !80, line: 79, size: 256, elements: !120)
!120 = !{!121, !122, !123, !124, !126}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !119, file: !80, line: 81, baseType: !37, size: 32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !119, file: !80, line: 82, baseType: !99, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !119, file: !80, line: 83, baseType: !33, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !119, file: !80, line: 84, baseType: !125, size: 64, offset: 128)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !38, line: 156, baseType: !30)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !119, file: !80, line: 85, baseType: !125, size: 64, offset: 192)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !88, file: !80, line: 105, baseType: !128, size: 256)
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !88, file: !80, line: 89, size: 256, elements: !129)
!129 = !{!130, !131, !133}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !128, file: !80, line: 91, baseType: !19, size: 64)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !128, file: !80, line: 93, baseType: !132, size: 16, offset: 64)
!132 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "_bounds", scope: !128, file: !80, line: 104, baseType: !134, size: 128, offset: 128)
!134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !80, line: 94, size: 128, elements: !135)
!135 = !{!136, !141}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !134, file: !80, line: 101, baseType: !137, size: 128)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !134, file: !80, line: 97, size: 128, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !137, file: !80, line: 99, baseType: !19, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !137, file: !80, line: 100, baseType: !19, size: 64, offset: 64)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !134, file: !80, line: 103, baseType: !142, size: 32)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !38, line: 42, baseType: !7)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !88, file: !80, line: 112, baseType: !144, size: 128)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !88, file: !80, line: 108, size: 128, elements: !145)
!145 = !{!146, !147}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !144, file: !80, line: 110, baseType: !30, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !144, file: !80, line: 111, baseType: !33, size: 32, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !88, file: !80, line: 121, baseType: !149, size: 128)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !88, file: !80, line: 116, size: 128, elements: !150)
!150 = !{!151, !152, !153}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !149, file: !80, line: 118, baseType: !19, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !149, file: !80, line: 119, baseType: !33, size: 32, offset: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !149, file: !80, line: 120, baseType: !7, size: 32, offset: 96)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !62, file: !63, line: 46, baseType: !155, size: 1024, offset: 64)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !156, line: 8, baseType: !157)
!156 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", directory: "")
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !156, line: 5, size: 1024, elements: !158)
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !157, file: !156, line: 7, baseType: !160, size: 1024)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 1024, elements: !31)
!161 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !62, file: !63, line: 49, baseType: !33, size: 32, offset: 1088)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !62, file: !63, line: 52, baseType: !164, size: 64, offset: 1152)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!165 = !DISubroutineType(types: !166)
!166 = !{null}
!167 = !{!168}
!168 = !DISubrange(count: 14, lowerBound: 0)
!169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 64, elements: !170)
!170 = !{!171}
!171 = !DISubrange(count: 2, lowerBound: 0)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "io_fds", scope: !174, file: !187, line: 94, type: !233, isLocal: true, isDefinition: true)
!174 = distinct !DICompileUnit(language: DW_LANG_C99, file: !175, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !177, globals: !184, splitDebugInlining: false, nameTableKind: None)
!175 = !DIFile(filename: "exec_pty.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!176 = !{}
!177 = !{!19, !69, !33, !29, !178, !179}
!178 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !24, line: 70, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !24, line: 59, size: 1024, elements: !182)
!182 = !{!183}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "fds_bits", scope: !181, file: !24, line: 64, baseType: !28, size: 1024)
!184 = !{!185, !191, !193, !195, !197, !199, !207, !172, !227, !229, !231}
!185 = !DIGlobalVariableExpression(var: !186, expr: !DIExpression())
!186 = distinct !DIGlobalVariable(name: "slavename", scope: !174, file: !187, line: 92, type: !188, isLocal: true, isDefinition: true)
!187 = !DIFile(filename: "./exec_pty.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 32768, elements: !189)
!189 = !{!190}
!190 = !DISubrange(count: 4096, lowerBound: 0)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(name: "foreground", scope: !174, file: !187, line: 93, type: !33, isLocal: true, isDefinition: true)
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "tty_initialized", scope: !174, file: !187, line: 96, type: !33, isLocal: true, isDefinition: true)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "ppgrp", scope: !174, file: !187, line: 98, type: !35, isLocal: true, isDefinition: true)
!197 = !DIGlobalVariableExpression(var: !198, expr: !DIExpression())
!198 = distinct !DIGlobalVariable(name: "child", scope: !174, file: !187, line: 98, type: !35, isLocal: true, isDefinition: true)
!199 = !DIGlobalVariableExpression(var: !200, expr: !DIExpression())
!200 = distinct !DIGlobalVariable(name: "ttyblock", scope: !174, file: !187, line: 99, type: !201, isLocal: true, isDefinition: true)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !202, line: 7, baseType: !203)
!202 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h", directory: "")
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !156, line: 8, baseType: !204)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !156, line: 5, size: 1024, elements: !205)
!205 = !{!206}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !204, file: !156, line: 7, baseType: !160, size: 1024)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "iobufs", scope: !174, file: !187, line: 100, type: !209, isLocal: true, isDefinition: true)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_buffer", file: !187, line: 82, size: 131328, elements: !211)
!211 = !{!212, !213, !214, !215, !216, !217, !223}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !210, file: !187, line: 83, baseType: !209, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !210, file: !187, line: 84, baseType: !33, size: 32, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !210, file: !187, line: 85, baseType: !33, size: 32, offset: 96)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "rfd", scope: !210, file: !187, line: 86, baseType: !33, size: 32, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "wfd", scope: !210, file: !187, line: 87, baseType: !33, size: 32, offset: 160)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !210, file: !187, line: 88, baseType: !218, size: 64, offset: 192)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DISubroutineType(types: !220)
!220 = !{!33, !221, !7}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !210, file: !187, line: 89, baseType: !224, size: 131072, offset: 256)
!224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 131072, elements: !225)
!225 = !{!226}
!226 = !DISubrange(count: 16384, lowerBound: 0)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "ttymode", scope: !174, file: !187, line: 97, type: !33, isLocal: true, isDefinition: true)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "pipeline", scope: !174, file: !187, line: 95, type: !33, isLocal: true, isDefinition: true)
!231 = !DIGlobalVariableExpression(var: !232, expr: !DIExpression())
!232 = distinct !DIGlobalVariable(name: "child_pgrp", scope: !174, file: !187, line: 98, type: !35, isLocal: true, isDefinition: true)
!233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 192, elements: !234)
!234 = !{!235}
!235 = !DISubrange(count: 6, lowerBound: 0)
!236 = !DIGlobalVariableExpression(var: !237, expr: !DIExpression())
!237 = distinct !DIGlobalVariable(name: "noexec_path", scope: !238, file: !245, line: 56, type: !221, isLocal: false, isDefinition: true)
!238 = distinct !DICompileUnit(language: DW_LANG_C99, file: !239, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !240, globals: !241, splitDebugInlining: false, nameTableKind: None)
!239 = !DIFile(filename: "load_plugins.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!240 = !{!19}
!241 = !{!236, !242}
!242 = !DIGlobalVariableExpression(var: !243, expr: !DIExpression())
!243 = distinct !DIGlobalVariable(name: "pil", scope: !244, file: !245, line: 69, type: !249, isLocal: true, isDefinition: true)
!244 = distinct !DISubprogram(name: "sudo_read_conf", scope: !245, file: !245, line: 64, type: !246, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !238, retainedNodes: !176)
!245 = !DIFile(filename: "./load_plugins.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!246 = !DISubroutineType(types: !247)
!247 = !{!248, !221}
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plugin_info_list", file: !250, line: 58, size: 128, elements: !251)
!250 = !DIFile(filename: "./sudo_plugin_int.h", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!251 = !{!252, !260}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !249, file: !250, line: 58, baseType: !253, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plugin_info", file: !250, line: 52, size: 256, elements: !255)
!255 = !{!256, !257, !258, !259}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !254, file: !250, line: 53, baseType: !253, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !254, file: !250, line: 54, baseType: !253, size: 64, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !254, file: !250, line: 55, baseType: !221, size: 64, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_name", scope: !254, file: !250, line: 56, baseType: !221, size: 64, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !249, file: !250, line: 58, baseType: !253, size: 64, offset: 64)
!261 = !DIGlobalVariableExpression(var: !262, expr: !DIExpression())
!262 = distinct !DIGlobalVariable(name: "tgetpass_flags", scope: !263, file: !288, line: 56, type: !33, isLocal: false, isDefinition: true)
!263 = distinct !DICompileUnit(language: DW_LANG_C99, file: !264, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !265, retainedTypes: !281, globals: !285, splitDebugInlining: false, nameTableKind: None)
!264 = !DIFile(filename: "parse_args.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!265 = !{!266}
!266 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !267, line: 46, baseType: !7, size: 32, elements: !268)
!267 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!268 = !{!269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280}
!269 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!270 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!271 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!272 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!273 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!274 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!275 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!276 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!277 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!278 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!279 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!280 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!281 = !{!19, !282, !33, !34, !284, !20}
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !283, line: 46, baseType: !161)
!283 = !DIFile(filename: "/usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h", directory: "")
!284 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!285 = !{!261, !286}
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(name: "sudo_settings", scope: !263, file: !288, line: 70, type: !289, isLocal: true, isDefinition: true)
!288 = !DIFile(filename: "./parse_args.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !290, size: 2688, elements: !294)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sudo_settings", file: !288, line: 67, size: 128, elements: !291)
!291 = !{!292, !293}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !288, line: 68, baseType: !221, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !290, file: !288, line: 69, baseType: !221, size: 64, offset: 64)
!294 = !{!295}
!295 = !DISubrange(count: 21, lowerBound: 0)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(name: "user_details", scope: !298, file: !554, line: 103, type: !698, isLocal: false, isDefinition: true)
!298 = distinct !DICompileUnit(language: DW_LANG_C99, file: !299, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !300, retainedTypes: !546, globals: !551, splitDebugInlining: false, nameTableKind: None)
!299 = !DIFile(filename: "sudo.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!300 = !{!301, !323, !328}
!301 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__rlimit_resource", file: !302, line: 31, baseType: !7, size: 32, elements: !303)
!302 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/resource.h", directory: "")
!303 = !{!304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322}
!304 = !DIEnumerator(name: "RLIMIT_CPU", value: 0, isUnsigned: true)
!305 = !DIEnumerator(name: "RLIMIT_FSIZE", value: 1, isUnsigned: true)
!306 = !DIEnumerator(name: "RLIMIT_DATA", value: 2, isUnsigned: true)
!307 = !DIEnumerator(name: "RLIMIT_STACK", value: 3, isUnsigned: true)
!308 = !DIEnumerator(name: "RLIMIT_CORE", value: 4, isUnsigned: true)
!309 = !DIEnumerator(name: "__RLIMIT_RSS", value: 5, isUnsigned: true)
!310 = !DIEnumerator(name: "RLIMIT_NOFILE", value: 7, isUnsigned: true)
!311 = !DIEnumerator(name: "__RLIMIT_OFILE", value: 7, isUnsigned: true)
!312 = !DIEnumerator(name: "RLIMIT_AS", value: 9, isUnsigned: true)
!313 = !DIEnumerator(name: "__RLIMIT_NPROC", value: 6, isUnsigned: true)
!314 = !DIEnumerator(name: "__RLIMIT_MEMLOCK", value: 8, isUnsigned: true)
!315 = !DIEnumerator(name: "__RLIMIT_LOCKS", value: 10, isUnsigned: true)
!316 = !DIEnumerator(name: "__RLIMIT_SIGPENDING", value: 11, isUnsigned: true)
!317 = !DIEnumerator(name: "__RLIMIT_MSGQUEUE", value: 12, isUnsigned: true)
!318 = !DIEnumerator(name: "__RLIMIT_NICE", value: 13, isUnsigned: true)
!319 = !DIEnumerator(name: "__RLIMIT_RTPRIO", value: 14, isUnsigned: true)
!320 = !DIEnumerator(name: "__RLIMIT_RTTIME", value: 15, isUnsigned: true)
!321 = !DIEnumerator(name: "__RLIMIT_NLIMITS", value: 16, isUnsigned: true)
!322 = !DIEnumerator(name: "__RLIM_NLIMITS", value: 16, isUnsigned: true)
!323 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__priority_which", file: !302, line: 187, baseType: !7, size: 32, elements: !324)
!324 = !{!325, !326, !327}
!325 = !DIEnumerator(name: "PRIO_PROCESS", value: 0, isUnsigned: true)
!326 = !DIEnumerator(name: "PRIO_PGRP", value: 1, isUnsigned: true)
!327 = !DIEnumerator(name: "PRIO_USER", value: 2, isUnsigned: true)
!328 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !329, line: 71, baseType: !7, size: 32, elements: !330)
!329 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/confname.h", directory: "")
!330 = !{!331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545}
!331 = !DIEnumerator(name: "_SC_ARG_MAX", value: 0, isUnsigned: true)
!332 = !DIEnumerator(name: "_SC_CHILD_MAX", value: 1, isUnsigned: true)
!333 = !DIEnumerator(name: "_SC_CLK_TCK", value: 2, isUnsigned: true)
!334 = !DIEnumerator(name: "_SC_NGROUPS_MAX", value: 3, isUnsigned: true)
!335 = !DIEnumerator(name: "_SC_OPEN_MAX", value: 4, isUnsigned: true)
!336 = !DIEnumerator(name: "_SC_STREAM_MAX", value: 5, isUnsigned: true)
!337 = !DIEnumerator(name: "_SC_TZNAME_MAX", value: 6, isUnsigned: true)
!338 = !DIEnumerator(name: "_SC_JOB_CONTROL", value: 7, isUnsigned: true)
!339 = !DIEnumerator(name: "_SC_SAVED_IDS", value: 8, isUnsigned: true)
!340 = !DIEnumerator(name: "_SC_REALTIME_SIGNALS", value: 9, isUnsigned: true)
!341 = !DIEnumerator(name: "_SC_PRIORITY_SCHEDULING", value: 10, isUnsigned: true)
!342 = !DIEnumerator(name: "_SC_TIMERS", value: 11, isUnsigned: true)
!343 = !DIEnumerator(name: "_SC_ASYNCHRONOUS_IO", value: 12, isUnsigned: true)
!344 = !DIEnumerator(name: "_SC_PRIORITIZED_IO", value: 13, isUnsigned: true)
!345 = !DIEnumerator(name: "_SC_SYNCHRONIZED_IO", value: 14, isUnsigned: true)
!346 = !DIEnumerator(name: "_SC_FSYNC", value: 15, isUnsigned: true)
!347 = !DIEnumerator(name: "_SC_MAPPED_FILES", value: 16, isUnsigned: true)
!348 = !DIEnumerator(name: "_SC_MEMLOCK", value: 17, isUnsigned: true)
!349 = !DIEnumerator(name: "_SC_MEMLOCK_RANGE", value: 18, isUnsigned: true)
!350 = !DIEnumerator(name: "_SC_MEMORY_PROTECTION", value: 19, isUnsigned: true)
!351 = !DIEnumerator(name: "_SC_MESSAGE_PASSING", value: 20, isUnsigned: true)
!352 = !DIEnumerator(name: "_SC_SEMAPHORES", value: 21, isUnsigned: true)
!353 = !DIEnumerator(name: "_SC_SHARED_MEMORY_OBJECTS", value: 22, isUnsigned: true)
!354 = !DIEnumerator(name: "_SC_AIO_LISTIO_MAX", value: 23, isUnsigned: true)
!355 = !DIEnumerator(name: "_SC_AIO_MAX", value: 24, isUnsigned: true)
!356 = !DIEnumerator(name: "_SC_AIO_PRIO_DELTA_MAX", value: 25, isUnsigned: true)
!357 = !DIEnumerator(name: "_SC_DELAYTIMER_MAX", value: 26, isUnsigned: true)
!358 = !DIEnumerator(name: "_SC_MQ_OPEN_MAX", value: 27, isUnsigned: true)
!359 = !DIEnumerator(name: "_SC_MQ_PRIO_MAX", value: 28, isUnsigned: true)
!360 = !DIEnumerator(name: "_SC_VERSION", value: 29, isUnsigned: true)
!361 = !DIEnumerator(name: "_SC_PAGESIZE", value: 30, isUnsigned: true)
!362 = !DIEnumerator(name: "_SC_RTSIG_MAX", value: 31, isUnsigned: true)
!363 = !DIEnumerator(name: "_SC_SEM_NSEMS_MAX", value: 32, isUnsigned: true)
!364 = !DIEnumerator(name: "_SC_SEM_VALUE_MAX", value: 33, isUnsigned: true)
!365 = !DIEnumerator(name: "_SC_SIGQUEUE_MAX", value: 34, isUnsigned: true)
!366 = !DIEnumerator(name: "_SC_TIMER_MAX", value: 35, isUnsigned: true)
!367 = !DIEnumerator(name: "_SC_BC_BASE_MAX", value: 36, isUnsigned: true)
!368 = !DIEnumerator(name: "_SC_BC_DIM_MAX", value: 37, isUnsigned: true)
!369 = !DIEnumerator(name: "_SC_BC_SCALE_MAX", value: 38, isUnsigned: true)
!370 = !DIEnumerator(name: "_SC_BC_STRING_MAX", value: 39, isUnsigned: true)
!371 = !DIEnumerator(name: "_SC_COLL_WEIGHTS_MAX", value: 40, isUnsigned: true)
!372 = !DIEnumerator(name: "_SC_EQUIV_CLASS_MAX", value: 41, isUnsigned: true)
!373 = !DIEnumerator(name: "_SC_EXPR_NEST_MAX", value: 42, isUnsigned: true)
!374 = !DIEnumerator(name: "_SC_LINE_MAX", value: 43, isUnsigned: true)
!375 = !DIEnumerator(name: "_SC_RE_DUP_MAX", value: 44, isUnsigned: true)
!376 = !DIEnumerator(name: "_SC_CHARCLASS_NAME_MAX", value: 45, isUnsigned: true)
!377 = !DIEnumerator(name: "_SC_2_VERSION", value: 46, isUnsigned: true)
!378 = !DIEnumerator(name: "_SC_2_C_BIND", value: 47, isUnsigned: true)
!379 = !DIEnumerator(name: "_SC_2_C_DEV", value: 48, isUnsigned: true)
!380 = !DIEnumerator(name: "_SC_2_FORT_DEV", value: 49, isUnsigned: true)
!381 = !DIEnumerator(name: "_SC_2_FORT_RUN", value: 50, isUnsigned: true)
!382 = !DIEnumerator(name: "_SC_2_SW_DEV", value: 51, isUnsigned: true)
!383 = !DIEnumerator(name: "_SC_2_LOCALEDEF", value: 52, isUnsigned: true)
!384 = !DIEnumerator(name: "_SC_PII", value: 53, isUnsigned: true)
!385 = !DIEnumerator(name: "_SC_PII_XTI", value: 54, isUnsigned: true)
!386 = !DIEnumerator(name: "_SC_PII_SOCKET", value: 55, isUnsigned: true)
!387 = !DIEnumerator(name: "_SC_PII_INTERNET", value: 56, isUnsigned: true)
!388 = !DIEnumerator(name: "_SC_PII_OSI", value: 57, isUnsigned: true)
!389 = !DIEnumerator(name: "_SC_POLL", value: 58, isUnsigned: true)
!390 = !DIEnumerator(name: "_SC_SELECT", value: 59, isUnsigned: true)
!391 = !DIEnumerator(name: "_SC_UIO_MAXIOV", value: 60, isUnsigned: true)
!392 = !DIEnumerator(name: "_SC_IOV_MAX", value: 60, isUnsigned: true)
!393 = !DIEnumerator(name: "_SC_PII_INTERNET_STREAM", value: 61, isUnsigned: true)
!394 = !DIEnumerator(name: "_SC_PII_INTERNET_DGRAM", value: 62, isUnsigned: true)
!395 = !DIEnumerator(name: "_SC_PII_OSI_COTS", value: 63, isUnsigned: true)
!396 = !DIEnumerator(name: "_SC_PII_OSI_CLTS", value: 64, isUnsigned: true)
!397 = !DIEnumerator(name: "_SC_PII_OSI_M", value: 65, isUnsigned: true)
!398 = !DIEnumerator(name: "_SC_T_IOV_MAX", value: 66, isUnsigned: true)
!399 = !DIEnumerator(name: "_SC_THREADS", value: 67, isUnsigned: true)
!400 = !DIEnumerator(name: "_SC_THREAD_SAFE_FUNCTIONS", value: 68, isUnsigned: true)
!401 = !DIEnumerator(name: "_SC_GETGR_R_SIZE_MAX", value: 69, isUnsigned: true)
!402 = !DIEnumerator(name: "_SC_GETPW_R_SIZE_MAX", value: 70, isUnsigned: true)
!403 = !DIEnumerator(name: "_SC_LOGIN_NAME_MAX", value: 71, isUnsigned: true)
!404 = !DIEnumerator(name: "_SC_TTY_NAME_MAX", value: 72, isUnsigned: true)
!405 = !DIEnumerator(name: "_SC_THREAD_DESTRUCTOR_ITERATIONS", value: 73, isUnsigned: true)
!406 = !DIEnumerator(name: "_SC_THREAD_KEYS_MAX", value: 74, isUnsigned: true)
!407 = !DIEnumerator(name: "_SC_THREAD_STACK_MIN", value: 75, isUnsigned: true)
!408 = !DIEnumerator(name: "_SC_THREAD_THREADS_MAX", value: 76, isUnsigned: true)
!409 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKADDR", value: 77, isUnsigned: true)
!410 = !DIEnumerator(name: "_SC_THREAD_ATTR_STACKSIZE", value: 78, isUnsigned: true)
!411 = !DIEnumerator(name: "_SC_THREAD_PRIORITY_SCHEDULING", value: 79, isUnsigned: true)
!412 = !DIEnumerator(name: "_SC_THREAD_PRIO_INHERIT", value: 80, isUnsigned: true)
!413 = !DIEnumerator(name: "_SC_THREAD_PRIO_PROTECT", value: 81, isUnsigned: true)
!414 = !DIEnumerator(name: "_SC_THREAD_PROCESS_SHARED", value: 82, isUnsigned: true)
!415 = !DIEnumerator(name: "_SC_NPROCESSORS_CONF", value: 83, isUnsigned: true)
!416 = !DIEnumerator(name: "_SC_NPROCESSORS_ONLN", value: 84, isUnsigned: true)
!417 = !DIEnumerator(name: "_SC_PHYS_PAGES", value: 85, isUnsigned: true)
!418 = !DIEnumerator(name: "_SC_AVPHYS_PAGES", value: 86, isUnsigned: true)
!419 = !DIEnumerator(name: "_SC_ATEXIT_MAX", value: 87, isUnsigned: true)
!420 = !DIEnumerator(name: "_SC_PASS_MAX", value: 88, isUnsigned: true)
!421 = !DIEnumerator(name: "_SC_XOPEN_VERSION", value: 89, isUnsigned: true)
!422 = !DIEnumerator(name: "_SC_XOPEN_XCU_VERSION", value: 90, isUnsigned: true)
!423 = !DIEnumerator(name: "_SC_XOPEN_UNIX", value: 91, isUnsigned: true)
!424 = !DIEnumerator(name: "_SC_XOPEN_CRYPT", value: 92, isUnsigned: true)
!425 = !DIEnumerator(name: "_SC_XOPEN_ENH_I18N", value: 93, isUnsigned: true)
!426 = !DIEnumerator(name: "_SC_XOPEN_SHM", value: 94, isUnsigned: true)
!427 = !DIEnumerator(name: "_SC_2_CHAR_TERM", value: 95, isUnsigned: true)
!428 = !DIEnumerator(name: "_SC_2_C_VERSION", value: 96, isUnsigned: true)
!429 = !DIEnumerator(name: "_SC_2_UPE", value: 97, isUnsigned: true)
!430 = !DIEnumerator(name: "_SC_XOPEN_XPG2", value: 98, isUnsigned: true)
!431 = !DIEnumerator(name: "_SC_XOPEN_XPG3", value: 99, isUnsigned: true)
!432 = !DIEnumerator(name: "_SC_XOPEN_XPG4", value: 100, isUnsigned: true)
!433 = !DIEnumerator(name: "_SC_CHAR_BIT", value: 101, isUnsigned: true)
!434 = !DIEnumerator(name: "_SC_CHAR_MAX", value: 102, isUnsigned: true)
!435 = !DIEnumerator(name: "_SC_CHAR_MIN", value: 103, isUnsigned: true)
!436 = !DIEnumerator(name: "_SC_INT_MAX", value: 104, isUnsigned: true)
!437 = !DIEnumerator(name: "_SC_INT_MIN", value: 105, isUnsigned: true)
!438 = !DIEnumerator(name: "_SC_LONG_BIT", value: 106, isUnsigned: true)
!439 = !DIEnumerator(name: "_SC_WORD_BIT", value: 107, isUnsigned: true)
!440 = !DIEnumerator(name: "_SC_MB_LEN_MAX", value: 108, isUnsigned: true)
!441 = !DIEnumerator(name: "_SC_NZERO", value: 109, isUnsigned: true)
!442 = !DIEnumerator(name: "_SC_SSIZE_MAX", value: 110, isUnsigned: true)
!443 = !DIEnumerator(name: "_SC_SCHAR_MAX", value: 111, isUnsigned: true)
!444 = !DIEnumerator(name: "_SC_SCHAR_MIN", value: 112, isUnsigned: true)
!445 = !DIEnumerator(name: "_SC_SHRT_MAX", value: 113, isUnsigned: true)
!446 = !DIEnumerator(name: "_SC_SHRT_MIN", value: 114, isUnsigned: true)
!447 = !DIEnumerator(name: "_SC_UCHAR_MAX", value: 115, isUnsigned: true)
!448 = !DIEnumerator(name: "_SC_UINT_MAX", value: 116, isUnsigned: true)
!449 = !DIEnumerator(name: "_SC_ULONG_MAX", value: 117, isUnsigned: true)
!450 = !DIEnumerator(name: "_SC_USHRT_MAX", value: 118, isUnsigned: true)
!451 = !DIEnumerator(name: "_SC_NL_ARGMAX", value: 119, isUnsigned: true)
!452 = !DIEnumerator(name: "_SC_NL_LANGMAX", value: 120, isUnsigned: true)
!453 = !DIEnumerator(name: "_SC_NL_MSGMAX", value: 121, isUnsigned: true)
!454 = !DIEnumerator(name: "_SC_NL_NMAX", value: 122, isUnsigned: true)
!455 = !DIEnumerator(name: "_SC_NL_SETMAX", value: 123, isUnsigned: true)
!456 = !DIEnumerator(name: "_SC_NL_TEXTMAX", value: 124, isUnsigned: true)
!457 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFF32", value: 125, isUnsigned: true)
!458 = !DIEnumerator(name: "_SC_XBS5_ILP32_OFFBIG", value: 126, isUnsigned: true)
!459 = !DIEnumerator(name: "_SC_XBS5_LP64_OFF64", value: 127, isUnsigned: true)
!460 = !DIEnumerator(name: "_SC_XBS5_LPBIG_OFFBIG", value: 128, isUnsigned: true)
!461 = !DIEnumerator(name: "_SC_XOPEN_LEGACY", value: 129, isUnsigned: true)
!462 = !DIEnumerator(name: "_SC_XOPEN_REALTIME", value: 130, isUnsigned: true)
!463 = !DIEnumerator(name: "_SC_XOPEN_REALTIME_THREADS", value: 131, isUnsigned: true)
!464 = !DIEnumerator(name: "_SC_ADVISORY_INFO", value: 132, isUnsigned: true)
!465 = !DIEnumerator(name: "_SC_BARRIERS", value: 133, isUnsigned: true)
!466 = !DIEnumerator(name: "_SC_BASE", value: 134, isUnsigned: true)
!467 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT", value: 135, isUnsigned: true)
!468 = !DIEnumerator(name: "_SC_C_LANG_SUPPORT_R", value: 136, isUnsigned: true)
!469 = !DIEnumerator(name: "_SC_CLOCK_SELECTION", value: 137, isUnsigned: true)
!470 = !DIEnumerator(name: "_SC_CPUTIME", value: 138, isUnsigned: true)
!471 = !DIEnumerator(name: "_SC_THREAD_CPUTIME", value: 139, isUnsigned: true)
!472 = !DIEnumerator(name: "_SC_DEVICE_IO", value: 140, isUnsigned: true)
!473 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC", value: 141, isUnsigned: true)
!474 = !DIEnumerator(name: "_SC_DEVICE_SPECIFIC_R", value: 142, isUnsigned: true)
!475 = !DIEnumerator(name: "_SC_FD_MGMT", value: 143, isUnsigned: true)
!476 = !DIEnumerator(name: "_SC_FIFO", value: 144, isUnsigned: true)
!477 = !DIEnumerator(name: "_SC_PIPE", value: 145, isUnsigned: true)
!478 = !DIEnumerator(name: "_SC_FILE_ATTRIBUTES", value: 146, isUnsigned: true)
!479 = !DIEnumerator(name: "_SC_FILE_LOCKING", value: 147, isUnsigned: true)
!480 = !DIEnumerator(name: "_SC_FILE_SYSTEM", value: 148, isUnsigned: true)
!481 = !DIEnumerator(name: "_SC_MONOTONIC_CLOCK", value: 149, isUnsigned: true)
!482 = !DIEnumerator(name: "_SC_MULTI_PROCESS", value: 150, isUnsigned: true)
!483 = !DIEnumerator(name: "_SC_SINGLE_PROCESS", value: 151, isUnsigned: true)
!484 = !DIEnumerator(name: "_SC_NETWORKING", value: 152, isUnsigned: true)
!485 = !DIEnumerator(name: "_SC_READER_WRITER_LOCKS", value: 153, isUnsigned: true)
!486 = !DIEnumerator(name: "_SC_SPIN_LOCKS", value: 154, isUnsigned: true)
!487 = !DIEnumerator(name: "_SC_REGEXP", value: 155, isUnsigned: true)
!488 = !DIEnumerator(name: "_SC_REGEX_VERSION", value: 156, isUnsigned: true)
!489 = !DIEnumerator(name: "_SC_SHELL", value: 157, isUnsigned: true)
!490 = !DIEnumerator(name: "_SC_SIGNALS", value: 158, isUnsigned: true)
!491 = !DIEnumerator(name: "_SC_SPAWN", value: 159, isUnsigned: true)
!492 = !DIEnumerator(name: "_SC_SPORADIC_SERVER", value: 160, isUnsigned: true)
!493 = !DIEnumerator(name: "_SC_THREAD_SPORADIC_SERVER", value: 161, isUnsigned: true)
!494 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE", value: 162, isUnsigned: true)
!495 = !DIEnumerator(name: "_SC_SYSTEM_DATABASE_R", value: 163, isUnsigned: true)
!496 = !DIEnumerator(name: "_SC_TIMEOUTS", value: 164, isUnsigned: true)
!497 = !DIEnumerator(name: "_SC_TYPED_MEMORY_OBJECTS", value: 165, isUnsigned: true)
!498 = !DIEnumerator(name: "_SC_USER_GROUPS", value: 166, isUnsigned: true)
!499 = !DIEnumerator(name: "_SC_USER_GROUPS_R", value: 167, isUnsigned: true)
!500 = !DIEnumerator(name: "_SC_2_PBS", value: 168, isUnsigned: true)
!501 = !DIEnumerator(name: "_SC_2_PBS_ACCOUNTING", value: 169, isUnsigned: true)
!502 = !DIEnumerator(name: "_SC_2_PBS_LOCATE", value: 170, isUnsigned: true)
!503 = !DIEnumerator(name: "_SC_2_PBS_MESSAGE", value: 171, isUnsigned: true)
!504 = !DIEnumerator(name: "_SC_2_PBS_TRACK", value: 172, isUnsigned: true)
!505 = !DIEnumerator(name: "_SC_SYMLOOP_MAX", value: 173, isUnsigned: true)
!506 = !DIEnumerator(name: "_SC_STREAMS", value: 174, isUnsigned: true)
!507 = !DIEnumerator(name: "_SC_2_PBS_CHECKPOINT", value: 175, isUnsigned: true)
!508 = !DIEnumerator(name: "_SC_V6_ILP32_OFF32", value: 176, isUnsigned: true)
!509 = !DIEnumerator(name: "_SC_V6_ILP32_OFFBIG", value: 177, isUnsigned: true)
!510 = !DIEnumerator(name: "_SC_V6_LP64_OFF64", value: 178, isUnsigned: true)
!511 = !DIEnumerator(name: "_SC_V6_LPBIG_OFFBIG", value: 179, isUnsigned: true)
!512 = !DIEnumerator(name: "_SC_HOST_NAME_MAX", value: 180, isUnsigned: true)
!513 = !DIEnumerator(name: "_SC_TRACE", value: 181, isUnsigned: true)
!514 = !DIEnumerator(name: "_SC_TRACE_EVENT_FILTER", value: 182, isUnsigned: true)
!515 = !DIEnumerator(name: "_SC_TRACE_INHERIT", value: 183, isUnsigned: true)
!516 = !DIEnumerator(name: "_SC_TRACE_LOG", value: 184, isUnsigned: true)
!517 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_SIZE", value: 185, isUnsigned: true)
!518 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_ASSOC", value: 186, isUnsigned: true)
!519 = !DIEnumerator(name: "_SC_LEVEL1_ICACHE_LINESIZE", value: 187, isUnsigned: true)
!520 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_SIZE", value: 188, isUnsigned: true)
!521 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_ASSOC", value: 189, isUnsigned: true)
!522 = !DIEnumerator(name: "_SC_LEVEL1_DCACHE_LINESIZE", value: 190, isUnsigned: true)
!523 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_SIZE", value: 191, isUnsigned: true)
!524 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_ASSOC", value: 192, isUnsigned: true)
!525 = !DIEnumerator(name: "_SC_LEVEL2_CACHE_LINESIZE", value: 193, isUnsigned: true)
!526 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_SIZE", value: 194, isUnsigned: true)
!527 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_ASSOC", value: 195, isUnsigned: true)
!528 = !DIEnumerator(name: "_SC_LEVEL3_CACHE_LINESIZE", value: 196, isUnsigned: true)
!529 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_SIZE", value: 197, isUnsigned: true)
!530 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_ASSOC", value: 198, isUnsigned: true)
!531 = !DIEnumerator(name: "_SC_LEVEL4_CACHE_LINESIZE", value: 199, isUnsigned: true)
!532 = !DIEnumerator(name: "_SC_IPV6", value: 235, isUnsigned: true)
!533 = !DIEnumerator(name: "_SC_RAW_SOCKETS", value: 236, isUnsigned: true)
!534 = !DIEnumerator(name: "_SC_V7_ILP32_OFF32", value: 237, isUnsigned: true)
!535 = !DIEnumerator(name: "_SC_V7_ILP32_OFFBIG", value: 238, isUnsigned: true)
!536 = !DIEnumerator(name: "_SC_V7_LP64_OFF64", value: 239, isUnsigned: true)
!537 = !DIEnumerator(name: "_SC_V7_LPBIG_OFFBIG", value: 240, isUnsigned: true)
!538 = !DIEnumerator(name: "_SC_SS_REPL_MAX", value: 241, isUnsigned: true)
!539 = !DIEnumerator(name: "_SC_TRACE_EVENT_NAME_MAX", value: 242, isUnsigned: true)
!540 = !DIEnumerator(name: "_SC_TRACE_NAME_MAX", value: 243, isUnsigned: true)
!541 = !DIEnumerator(name: "_SC_TRACE_SYS_MAX", value: 244, isUnsigned: true)
!542 = !DIEnumerator(name: "_SC_TRACE_USER_EVENT_MAX", value: 245, isUnsigned: true)
!543 = !DIEnumerator(name: "_SC_XOPEN_STREAMS", value: 246, isUnsigned: true)
!544 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_INHERIT", value: 247, isUnsigned: true)
!545 = !DIEnumerator(name: "_SC_THREAD_ROBUST_PRIO_PROTECT", value: 248, isUnsigned: true)
!546 = !{!19, !7, !547, !178, !33, !548, !550}
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlim_t", file: !38, line: 157, baseType: !161)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !36, line: 64, baseType: !549)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !38, line: 147, baseType: !7)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !36, line: 79, baseType: !99)
!551 = !{!552, !675, !296, !681, !683, !685, !687, !689, !696}
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "policy_plugin", scope: !298, file: !554, line: 101, type: !555, isLocal: false, isDefinition: true)
!554 = !DIFile(filename: "./sudo.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plugin_container", file: !250, line: 60, size: 320, elements: !556)
!556 = !{!557, !559, !560, !561, !562}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !555, file: !250, line: 61, baseType: !558, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !555, file: !250, line: 62, baseType: !558, size: 64, offset: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !555, file: !250, line: 63, baseType: !221, size: 64, offset: 128)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !555, file: !250, line: 64, baseType: !19, size: 64, offset: 192)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !555, file: !250, line: 70, baseType: !563, size: 64, offset: 256)
!563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !555, file: !250, line: 65, size: 64, elements: !564)
!564 = !{!565, !571, !641, !658}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !563, file: !250, line: 66, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "generic_plugin", file: !250, line: 23, size: 64, elements: !568)
!568 = !{!569, !570}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !567, file: !250, line: 24, baseType: !7, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !567, file: !250, line: 25, baseType: !7, size: 32, offset: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !563, file: !250, line: 67, baseType: !572, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "policy_plugin", file: !574, line: 59, size: 576, elements: !575)
!574 = !DIFile(filename: "../include/sudo_plugin.h", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!575 = !{!576, !577, !578, !603, !607, !611, !617, !621, !625, !626}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !573, file: !574, line: 61, baseType: !7, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !573, file: !574, line: 62, baseType: !7, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !573, file: !574, line: 63, baseType: !579, size: 64, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = !DISubroutineType(types: !581)
!581 = !{!33, !7, !582, !597, !601, !601, !601}
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sudo_conv_t", file: !574, line: 53, baseType: !583)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{!33, !33, !586, !593}
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sudo_conv_message", file: !574, line: 37, size: 128, elements: !589)
!589 = !{!590, !591, !592}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "msg_type", scope: !588, file: !574, line: 44, baseType: !33, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !588, file: !574, line: 45, baseType: !33, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !588, file: !574, line: 46, baseType: !221, size: 64, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sudo_conv_reply", file: !574, line: 49, size: 64, elements: !595)
!595 = !{!596}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !594, file: !574, line: 50, baseType: !20, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "sudo_printf_t", file: !574, line: 55, baseType: !598)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DISubroutineType(types: !600)
!600 = !{!33, !33, !221, null}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !573, file: !574, line: 66, baseType: !604, size: 64, offset: 128)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DISubroutineType(types: !606)
!606 = !{null, !33, !33}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !573, file: !574, line: 67, baseType: !608, size: 64, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!33, !33}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "check_policy", scope: !573, file: !574, line: 68, baseType: !612, size: 64, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{!33, !33, !601, !615, !616, !616, !616}
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !573, file: !574, line: 71, baseType: !618, size: 64, offset: 320)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DISubroutineType(types: !620)
!620 = !{!33, !33, !601, !33, !221}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !573, file: !574, line: 73, baseType: !622, size: 64, offset: 384)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DISubroutineType(types: !624)
!624 = !{!33}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "invalidate", scope: !573, file: !574, line: 74, baseType: !71, size: 64, offset: 448)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "init_session", scope: !573, file: !574, line: 75, baseType: !627, size: 64, offset: 512)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DISubroutineType(types: !629)
!629 = !{!33, !630}
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !632, line: 49, size: 384, elements: !633)
!632 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!633 = !{!634, !635, !636, !637, !638, !639, !640}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !631, file: !632, line: 51, baseType: !20, size: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !631, file: !632, line: 52, baseType: !20, size: 64, offset: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !631, file: !632, line: 54, baseType: !99, size: 32, offset: 128)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !631, file: !632, line: 55, baseType: !549, size: 32, offset: 160)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !631, file: !632, line: 56, baseType: !20, size: 64, offset: 192)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !631, file: !632, line: 57, baseType: !20, size: 64, offset: 256)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !631, file: !632, line: 58, baseType: !20, size: 64, offset: 320)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !563, file: !250, line: 68, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_plugin", file: !574, line: 79, size: 576, elements: !644)
!644 = !{!645, !646, !647, !651, !652, !653, !654, !655, !656, !657}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !643, file: !574, line: 81, baseType: !7, size: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !643, file: !574, line: 82, baseType: !7, size: 32, offset: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !643, file: !574, line: 83, baseType: !648, size: 64, offset: 64)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DISubroutineType(types: !650)
!650 = !{!33, !7, !582, !597, !601, !601, !601, !33, !601, !601}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !643, file: !574, line: 87, baseType: !604, size: 64, offset: 128)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !643, file: !574, line: 88, baseType: !608, size: 64, offset: 192)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyin", scope: !643, file: !574, line: 89, baseType: !218, size: 64, offset: 256)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyout", scope: !643, file: !574, line: 90, baseType: !218, size: 64, offset: 320)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdin", scope: !643, file: !574, line: 91, baseType: !218, size: 64, offset: 384)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdout", scope: !643, file: !574, line: 92, baseType: !218, size: 64, offset: 448)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "log_stderr", scope: !643, file: !574, line: 93, baseType: !218, size: 64, offset: 512)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "io_1_0", scope: !563, file: !250, line: 69, baseType: !659, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_plugin_1_0", file: !250, line: 32, size: 576, elements: !661)
!661 = !{!662, !663, !664, !668, !669, !670, !671, !672, !673, !674}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !660, file: !250, line: 33, baseType: !7, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !660, file: !250, line: 34, baseType: !7, size: 32, offset: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !660, file: !250, line: 35, baseType: !665, size: 64, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{!33, !7, !582, !597, !601, !601, !33, !601, !601}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !660, file: !250, line: 39, baseType: !604, size: 64, offset: 128)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !660, file: !250, line: 40, baseType: !608, size: 64, offset: 192)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyin", scope: !660, file: !250, line: 41, baseType: !218, size: 64, offset: 256)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyout", scope: !660, file: !250, line: 42, baseType: !218, size: 64, offset: 320)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdin", scope: !660, file: !250, line: 43, baseType: !218, size: 64, offset: 384)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdout", scope: !660, file: !250, line: 44, baseType: !218, size: 64, offset: 448)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "log_stderr", scope: !660, file: !250, line: 45, baseType: !218, size: 64, offset: 512)
!675 = !DIGlobalVariableExpression(var: !676, expr: !DIExpression())
!676 = distinct !DIGlobalVariable(name: "io_plugins", scope: !298, file: !554, line: 102, type: !677, isLocal: false, isDefinition: true)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plugin_container_list", file: !250, line: 72, size: 128, elements: !678)
!678 = !{!679, !680}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !677, file: !250, line: 72, baseType: !558, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !677, file: !250, line: 72, baseType: !558, size: 64, offset: 64)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "list_user", scope: !298, file: !554, line: 104, type: !221, isLocal: false, isDefinition: true)
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "runas_user", scope: !298, file: !554, line: 104, type: !221, isLocal: false, isDefinition: true)
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "runas_group", scope: !298, file: !554, line: 104, type: !221, isLocal: false, isDefinition: true)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "debug_level", scope: !298, file: !554, line: 105, type: !33, isLocal: false, isDefinition: true)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "corelimit", scope: !298, file: !554, line: 150, type: !691, isLocal: true, isDefinition: true)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !302, line: 139, size: 128, elements: !692)
!692 = !{!693, !695}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !691, file: !302, line: 142, baseType: !694, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim_t", file: !302, line: 131, baseType: !547)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !691, file: !302, line: 144, baseType: !694, size: 64, offset: 64)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "nproclimit", scope: !298, file: !554, line: 153, type: !691, isLocal: true, isDefinition: true)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_details", file: !699, line: 95, size: 640, elements: !700)
!699 = !DIFile(filename: "./sudo.h", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!700 = !{!701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !712, !713, !714}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !698, file: !699, line: 96, baseType: !550, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !698, file: !699, line: 97, baseType: !550, size: 32, offset: 32)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !698, file: !699, line: 98, baseType: !550, size: 32, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !698, file: !699, line: 99, baseType: !550, size: 32, offset: 96)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "username", scope: !698, file: !699, line: 100, baseType: !221, size: 64, offset: 128)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !698, file: !699, line: 101, baseType: !221, size: 64, offset: 192)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !698, file: !699, line: 102, baseType: !221, size: 64, offset: 256)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !698, file: !699, line: 103, baseType: !221, size: 64, offset: 320)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "shell", scope: !698, file: !699, line: 104, baseType: !221, size: 64, offset: 384)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !698, file: !699, line: 105, baseType: !711, size: 64, offset: 448)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !698, file: !699, line: 106, baseType: !33, size: 32, offset: 512)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "ts_cols", scope: !698, file: !699, line: 107, baseType: !33, size: 32, offset: 544)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "ts_lines", scope: !698, file: !699, line: 108, baseType: !33, size: 32, offset: 576)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "askpass_path", scope: !717, file: !724, line: 67, type: !221, isLocal: false, isDefinition: true)
!717 = distinct !DICompileUnit(language: DW_LANG_C99, file: !718, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !719, globals: !720, splitDebugInlining: false, nameTableKind: None)
!718 = !DIFile(filename: "tgetpass.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!719 = !{!19, !69, !7, !20}
!720 = !{!721, !727, !732, !715, !741, !746}
!721 = !DIGlobalVariableExpression(var: !722, expr: !DIExpression())
!722 = distinct !DIGlobalVariable(name: "askpass", scope: !723, file: !724, line: 79, type: !221, isLocal: true, isDefinition: true)
!723 = distinct !DISubprogram(name: "tgetpass", scope: !724, file: !724, line: 74, type: !725, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !717, retainedNodes: !176)
!724 = !DIFile(filename: "./tgetpass.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!725 = !DISubroutineType(types: !726)
!726 = !{!20, !221, !33, !33}
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "buf", scope: !723, file: !724, line: 80, type: !729, isLocal: true, isDefinition: true)
!729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 2056, elements: !730)
!730 = !{!731}
!731 = !DISubrange(count: 257, lowerBound: 0)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "signo", scope: !717, file: !724, line: 58, type: !734, isLocal: true, isDefinition: true)
!734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !735, size: 2080, elements: !739)
!735 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !736)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "sig_atomic_t", file: !737, line: 8, baseType: !738)
!737 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/sig_atomic_t.h", directory: "")
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sig_atomic_t", file: !38, line: 214, baseType: !33)
!739 = !{!740}
!740 = !DISubrange(count: 65, lowerBound: 0)
!741 = !DIGlobalVariableExpression(var: !742, expr: !DIExpression())
!742 = distinct !DIGlobalVariable(name: "buf", scope: !743, file: !724, line: 215, type: !729, isLocal: true, isDefinition: true)
!743 = distinct !DISubprogram(name: "sudo_askpass", scope: !724, file: !724, line: 213, type: !744, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !717, retainedNodes: !176)
!744 = !DISubroutineType(types: !745)
!745 = !{!20, !221, !221}
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "pass", scope: !743, file: !724, line: 215, type: !20, isLocal: true, isDefinition: true)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "buf", scope: !750, file: !751, line: 153, type: !810, isLocal: true, isDefinition: true)
!750 = distinct !DISubprogram(name: "sudo_parseln", scope: !751, file: !751, line: 149, type: !752, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !806, retainedNodes: !176)
!751 = !DIFile(filename: "./fileops.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!752 = !DISubroutineType(types: !753)
!753 = !{!20, !754}
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !756, line: 7, baseType: !757)
!756 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !758, line: 49, size: 1728, elements: !759)
!758 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !775, !777, !778, !779, !781, !782, !783, !787, !790, !792, !795, !798, !799, !800, !801, !802}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !757, file: !758, line: 51, baseType: !33, size: 32)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !757, file: !758, line: 54, baseType: !20, size: 64, offset: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !757, file: !758, line: 55, baseType: !20, size: 64, offset: 128)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !757, file: !758, line: 56, baseType: !20, size: 64, offset: 192)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !757, file: !758, line: 57, baseType: !20, size: 64, offset: 256)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !757, file: !758, line: 58, baseType: !20, size: 64, offset: 320)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !757, file: !758, line: 59, baseType: !20, size: 64, offset: 384)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !757, file: !758, line: 60, baseType: !20, size: 64, offset: 448)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !757, file: !758, line: 61, baseType: !20, size: 64, offset: 512)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !757, file: !758, line: 64, baseType: !20, size: 64, offset: 576)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !757, file: !758, line: 65, baseType: !20, size: 64, offset: 640)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !757, file: !758, line: 66, baseType: !20, size: 64, offset: 704)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !757, file: !758, line: 68, baseType: !773, size: 64, offset: 768)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !758, line: 36, flags: DIFlagFwdDecl)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !757, file: !758, line: 70, baseType: !776, size: 64, offset: 832)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !757, file: !758, line: 72, baseType: !33, size: 32, offset: 896)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !757, file: !758, line: 73, baseType: !33, size: 32, offset: 928)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !757, file: !758, line: 74, baseType: !780, size: 64, offset: 960)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !38, line: 152, baseType: !30)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !757, file: !758, line: 77, baseType: !284, size: 16, offset: 1024)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !757, file: !758, line: 78, baseType: !178, size: 8, offset: 1040)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !757, file: !758, line: 79, baseType: !784, size: 8, offset: 1048)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 8, elements: !785)
!785 = !{!786}
!786 = !DISubrange(count: 1, lowerBound: 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !757, file: !758, line: 81, baseType: !788, size: 64, offset: 1088)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !758, line: 43, baseType: null)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !757, file: !758, line: 89, baseType: !791, size: 64, offset: 1152)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !38, line: 153, baseType: !30)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !757, file: !758, line: 91, baseType: !793, size: 64, offset: 1216)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !758, line: 37, flags: DIFlagFwdDecl)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !757, file: !758, line: 92, baseType: !796, size: 64, offset: 1280)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !758, line: 38, flags: DIFlagFwdDecl)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !757, file: !758, line: 93, baseType: !776, size: 64, offset: 1344)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !757, file: !758, line: 94, baseType: !19, size: 64, offset: 1408)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !757, file: !758, line: 95, baseType: !282, size: 64, offset: 1472)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !757, file: !758, line: 96, baseType: !33, size: 32, offset: 1536)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !757, file: !758, line: 98, baseType: !803, size: 160, offset: 1568)
!803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 160, elements: !804)
!804 = !{!805}
!805 = !DISubrange(count: 20, lowerBound: 0)
!806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !807, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !265, retainedTypes: !808, globals: !809, splitDebugInlining: false, nameTableKind: None)
!807 = !DIFile(filename: "fileops.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!808 = !{!19, !33, !34, !284}
!809 = !{!748}
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 16384, elements: !811)
!811 = !{!812}
!812 = !DISubrange(count: 2048, lowerBound: 0)
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "term_erase", scope: !815, file: !820, line: 66, type: !33, isLocal: false, isDefinition: true)
!815 = distinct !DICompileUnit(language: DW_LANG_C99, file: !816, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, globals: !817, splitDebugInlining: false, nameTableKind: None)
!816 = !DIFile(filename: "term.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!817 = !{!818, !839, !841, !813, !843}
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "term", scope: !815, file: !820, line: 64, type: !821, isLocal: true, isDefinition: true)
!820 = !DIFile(filename: "./term.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termios", file: !822, line: 24, size: 480, elements: !823)
!822 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/termios-struct.h", directory: "")
!823 = !{!824, !827, !828, !829, !830, !832, !836, !838}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !821, file: !822, line: 26, baseType: !825, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !826, line: 25, baseType: !7)
!826 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/termios.h", directory: "")
!827 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !821, file: !822, line: 27, baseType: !825, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !821, file: !822, line: 28, baseType: !825, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !821, file: !822, line: 29, baseType: !825, size: 32, offset: 96)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !821, file: !822, line: 30, baseType: !831, size: 8, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !826, line: 23, baseType: !34)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !821, file: !822, line: 31, baseType: !833, size: 256, offset: 136)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !831, size: 256, elements: !834)
!834 = !{!835}
!835 = !DISubrange(count: 32, lowerBound: 0)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !821, file: !822, line: 32, baseType: !837, size: 32, offset: 416)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !826, line: 24, baseType: !7)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !821, file: !822, line: 33, baseType: !837, size: 32, offset: 448)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "oterm", scope: !815, file: !820, line: 64, type: !821, isLocal: true, isDefinition: true)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "changed", scope: !815, file: !820, line: 65, type: !33, isLocal: true, isDefinition: true)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "term_kill", scope: !815, file: !820, line: 67, type: !33, isLocal: false, isDefinition: true)
!845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !846, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !240, splitDebugInlining: false, nameTableKind: None)
!846 = !DIFile(filename: "conversation.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !848, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !240, splitDebugInlining: false, nameTableKind: None)
!848 = !DIFile(filename: "error.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !850, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !240, splitDebugInlining: false, nameTableKind: None)
!850 = !DIFile(filename: "get_pty.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !852, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !853, retainedTypes: !873, splitDebugInlining: false, nameTableKind: None)
!852 = !DIFile(filename: "net_ifs.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!853 = !{!854}
!854 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !855, line: 42, baseType: !7, size: 32, elements: !856)
!855 = !DIFile(filename: "/usr/include/net/if.h", directory: "")
!856 = !{!857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872}
!857 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!858 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!859 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!860 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!861 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!862 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!863 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!864 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!865 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!866 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!867 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!868 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!869 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!870 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!871 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!872 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!873 = !{!19, !874, !896}
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !876, line: 238, size: 128, elements: !877)
!876 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "")
!877 = !{!878, !881, !886, !892}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !875, file: !876, line: 240, baseType: !879, size: 16)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !880, line: 28, baseType: !284)
!880 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "")
!881 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !875, file: !876, line: 241, baseType: !882, size: 16, offset: 16)
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !876, line: 119, baseType: !883)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !884, line: 25, baseType: !885)
!884 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !38, line: 40, baseType: !284)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !875, file: !876, line: 242, baseType: !887, size: 32, offset: 32)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !876, line: 31, size: 32, elements: !888)
!888 = !{!889}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !887, file: !876, line: 33, baseType: !890, size: 32)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !876, line: 30, baseType: !891)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !884, line: 26, baseType: !142)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !875, file: !876, line: 245, baseType: !893, size: 64, offset: 64)
!893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 64, elements: !894)
!894 = !{!895}
!895 = !DISubrange(count: 8, lowerBound: 0)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !876, line: 253, size: 224, elements: !898)
!898 = !{!899, !900, !901, !902, !918}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !897, file: !876, line: 255, baseType: !879, size: 16)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !897, file: !876, line: 256, baseType: !882, size: 16, offset: 16)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !897, file: !876, line: 257, baseType: !891, size: 32, offset: 32)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !897, file: !876, line: 258, baseType: !903, size: 128, offset: 64)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !876, line: 212, size: 128, elements: !904)
!904 = !{!905}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !903, file: !876, line: 219, baseType: !906, size: 128)
!906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !903, file: !876, line: 214, size: 128, elements: !907)
!907 = !{!908, !912, !914}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !906, file: !876, line: 216, baseType: !909, size: 128)
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 128, elements: !31)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !884, line: 24, baseType: !911)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !38, line: 38, baseType: !34)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !906, file: !876, line: 217, baseType: !913, size: 128)
!913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !883, size: 128, elements: !894)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !906, file: !876, line: 218, baseType: !915, size: 128)
!915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 128, elements: !916)
!916 = !{!917}
!917 = !DISubrange(count: 4, lowerBound: 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !897, file: !876, line: 259, baseType: !891, size: 32, offset: 192)
!919 = distinct !DICompileUnit(language: DW_LANG_C99, file: !920, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !921, splitDebugInlining: false, nameTableKind: None)
!920 = !DIFile(filename: "sudo_edit.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!921 = !{!19, !33, !282, !615}
!922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !923, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !240, splitDebugInlining: false, nameTableKind: None)
!923 = !DIFile(filename: "ttysize.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !925, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !240, splitDebugInlining: false, nameTableKind: None)
!925 = !DIFile(filename: "utmp.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!926 = distinct !DICompileUnit(language: DW_LANG_C99, file: !927, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !928, splitDebugInlining: false, nameTableKind: None)
!927 = !DIFile(filename: "alloc.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!928 = !{!19, !20}
!929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !930, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, splitDebugInlining: false, nameTableKind: None)
!930 = !DIFile(filename: "atobool.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!931 = distinct !DICompileUnit(language: DW_LANG_C99, file: !932, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !240, splitDebugInlining: false, nameTableKind: None)
!932 = !DIFile(filename: "fmt_string.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!933 = distinct !DICompileUnit(language: DW_LANG_C99, file: !934, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !265, retainedTypes: !808, splitDebugInlining: false, nameTableKind: None)
!934 = !DIFile(filename: "lbuf.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !936, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, retainedTypes: !937, splitDebugInlining: false, nameTableKind: None)
!936 = !DIFile(filename: "list.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!937 = !{!938, !19, !943}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head_proto", file: !940, line: 43, size: 128, elements: !941)
!940 = !DIFile(filename: "./list.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!941 = !{!942, !948}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !939, file: !940, line: 44, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_proto", file: !940, line: 38, size: 128, elements: !945)
!945 = !{!946, !947}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !944, file: !940, line: 39, baseType: !943, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !944, file: !940, line: 40, baseType: !943, size: 64, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !939, file: !940, line: 45, baseType: !943, size: 64, offset: 64)
!949 = distinct !DICompileUnit(language: DW_LANG_C99, file: !950, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !951, retainedTypes: !624, splitDebugInlining: false, nameTableKind: None)
!950 = !DIFile(filename: "setgroups.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!951 = !{!328}
!952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !953, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, splitDebugInlining: false, nameTableKind: None)
!953 = !DIFile(filename: "zero_bytes.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!954 = distinct !DICompileUnit(language: DW_LANG_C99, file: !955, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !176, splitDebugInlining: false, nameTableKind: None)
!955 = !DIFile(filename: "strlcpy.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/compat")
!956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !957, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !951, retainedTypes: !958, splitDebugInlining: false, nameTableKind: None)
!957 = !DIFile(filename: "closefrom.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/compat")
!958 = !{!33, !19}
!959 = !{!"clang version 10.0.0-4ubuntu1 "}
!960 = !{i32 7, !"Dwarf Version", i32 4}
!961 = !{i32 2, !"Debug Info Version", i32 3}
!962 = !{i32 1, !"wchar_size", i32 4}
!963 = !{i32 7, !"PIC Level", i32 2}
!964 = distinct !DISubprogram(name: "sudo_conversation", scope: !965, file: !965, line: 57, type: !966, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !845, retainedNodes: !176)
!965 = !DIFile(filename: "./conversation.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!966 = !DISubroutineType(types: !967)
!967 = !{!33, !33, !968, !975}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sudo_conv_message", file: !574, line: 37, size: 128, elements: !971)
!971 = !{!972, !973, !974}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "msg_type", scope: !970, file: !574, line: 44, baseType: !33, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !970, file: !574, line: 45, baseType: !33, size: 32, offset: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !970, file: !574, line: 46, baseType: !221, size: 64, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sudo_conv_reply", file: !574, line: 49, size: 64, elements: !977)
!977 = !{!978}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !976, file: !574, line: 50, baseType: !20, size: 64)
!979 = !DILocalVariable(name: "num_msgs", arg: 1, scope: !964, file: !965, line: 57, type: !33)
!980 = !DILocation(line: 57, column: 23, scope: !964)
!981 = !DILocalVariable(name: "msgs", arg: 2, scope: !964, file: !965, line: 57, type: !968)
!982 = !DILocation(line: 57, column: 64, scope: !964)
!983 = !DILocalVariable(name: "replies", arg: 3, scope: !964, file: !965, line: 58, type: !975)
!984 = !DILocation(line: 58, column: 28, scope: !964)
!985 = !DILocalVariable(name: "repl", scope: !964, file: !965, line: 60, type: !975)
!986 = !DILocation(line: 60, column: 29, scope: !964)
!987 = !DILocalVariable(name: "msg", scope: !964, file: !965, line: 61, type: !968)
!988 = !DILocation(line: 61, column: 37, scope: !964)
!989 = !DILocalVariable(name: "pass", scope: !964, file: !965, line: 62, type: !20)
!990 = !DILocation(line: 62, column: 11, scope: !964)
!991 = !DILocalVariable(name: "n", scope: !964, file: !965, line: 63, type: !33)
!992 = !DILocation(line: 63, column: 9, scope: !964)
!993 = !DILocalVariable(name: "flags", scope: !964, file: !965, line: 63, type: !33)
!994 = !DILocation(line: 63, column: 12, scope: !964)
!995 = !DILocation(line: 63, column: 20, scope: !964)
!996 = !DILocation(line: 65, column: 12, scope: !997)
!997 = distinct !DILexicalBlock(scope: !964, file: !965, line: 65, column: 5)
!998 = !DILocation(line: 65, column: 10, scope: !997)
!999 = !DILocation(line: 65, column: 17, scope: !1000)
!1000 = distinct !DILexicalBlock(scope: !997, file: !965, line: 65, column: 5)
!1001 = !DILocation(line: 65, column: 21, scope: !1000)
!1002 = !DILocation(line: 65, column: 19, scope: !1000)
!1003 = !DILocation(line: 65, column: 5, scope: !997)
!1004 = !DILocation(line: 66, column: 9, scope: !1005)
!1005 = distinct !DILexicalBlock(scope: !1000, file: !965, line: 65, column: 36)
!1006 = !DILocation(line: 66, column: 14, scope: !1005)
!1007 = !DILocation(line: 66, column: 6, scope: !1005)
!1008 = !DILocation(line: 67, column: 10, scope: !1005)
!1009 = !DILocation(line: 67, column: 18, scope: !1005)
!1010 = !DILocation(line: 67, column: 7, scope: !1005)
!1011 = !DILocation(line: 68, column: 10, scope: !1005)
!1012 = !DILocation(line: 68, column: 15, scope: !1005)
!1013 = !DILocation(line: 68, column: 24, scope: !1005)
!1014 = !DILocation(line: 68, column: 2, scope: !1005)
!1015 = !DILocation(line: 71, column: 7, scope: !1016)
!1016 = distinct !DILexicalBlock(scope: !1017, file: !965, line: 71, column: 7)
!1017 = distinct !DILexicalBlock(scope: !1005, file: !965, line: 68, column: 32)
!1018 = !DILocation(line: 71, column: 12, scope: !1016)
!1019 = !DILocation(line: 71, column: 21, scope: !1016)
!1020 = !DILocation(line: 71, column: 7, scope: !1017)
!1021 = !DILocation(line: 72, column: 7, scope: !1016)
!1022 = !DILocation(line: 74, column: 7, scope: !1016)
!1023 = !DILocation(line: 71, column: 24, scope: !1016)
!1024 = !DILocation(line: 77, column: 7, scope: !1025)
!1025 = distinct !DILexicalBlock(scope: !1017, file: !965, line: 77, column: 7)
!1026 = !DILocation(line: 77, column: 7, scope: !1017)
!1027 = !DILocation(line: 78, column: 7, scope: !1025)
!1028 = !DILocation(line: 80, column: 19, scope: !1017)
!1029 = !DILocation(line: 80, column: 24, scope: !1017)
!1030 = !DILocation(line: 80, column: 29, scope: !1017)
!1031 = !DILocation(line: 80, column: 34, scope: !1017)
!1032 = !DILocation(line: 80, column: 43, scope: !1017)
!1033 = !DILocation(line: 80, column: 10, scope: !1017)
!1034 = !DILocation(line: 80, column: 8, scope: !1017)
!1035 = !DILocation(line: 81, column: 7, scope: !1036)
!1036 = distinct !DILexicalBlock(scope: !1017, file: !965, line: 81, column: 7)
!1037 = !DILocation(line: 81, column: 12, scope: !1036)
!1038 = !DILocation(line: 81, column: 7, scope: !1017)
!1039 = !DILocation(line: 82, column: 7, scope: !1036)
!1040 = !DILocation(line: 83, column: 25, scope: !1017)
!1041 = !DILocation(line: 83, column: 17, scope: !1017)
!1042 = !DILocation(line: 83, column: 3, scope: !1017)
!1043 = !DILocation(line: 83, column: 9, scope: !1017)
!1044 = !DILocation(line: 83, column: 15, scope: !1017)
!1045 = !DILocation(line: 84, column: 14, scope: !1017)
!1046 = !DILocation(line: 84, column: 27, scope: !1017)
!1047 = !DILocation(line: 84, column: 20, scope: !1017)
!1048 = !DILocation(line: 84, column: 3, scope: !1017)
!1049 = !DILocation(line: 85, column: 3, scope: !1017)
!1050 = !DILocation(line: 87, column: 7, scope: !1051)
!1051 = distinct !DILexicalBlock(scope: !1017, file: !965, line: 87, column: 7)
!1052 = !DILocation(line: 87, column: 12, scope: !1051)
!1053 = !DILocation(line: 87, column: 7, scope: !1017)
!1054 = !DILocation(line: 88, column: 20, scope: !1051)
!1055 = !DILocation(line: 88, column: 25, scope: !1051)
!1056 = !DILocation(line: 88, column: 30, scope: !1051)
!1057 = !DILocation(line: 88, column: 14, scope: !1051)
!1058 = !DILocation(line: 88, column: 7, scope: !1051)
!1059 = !DILocation(line: 89, column: 3, scope: !1017)
!1060 = !DILocation(line: 91, column: 7, scope: !1061)
!1061 = distinct !DILexicalBlock(scope: !1017, file: !965, line: 91, column: 7)
!1062 = !DILocation(line: 91, column: 12, scope: !1061)
!1063 = !DILocation(line: 91, column: 7, scope: !1017)
!1064 = !DILocation(line: 92, column: 20, scope: !1061)
!1065 = !DILocation(line: 92, column: 25, scope: !1061)
!1066 = !DILocation(line: 92, column: 30, scope: !1061)
!1067 = !DILocation(line: 92, column: 14, scope: !1061)
!1068 = !DILocation(line: 92, column: 7, scope: !1061)
!1069 = !DILocation(line: 93, column: 3, scope: !1017)
!1070 = !DILocation(line: 95, column: 3, scope: !1017)
!1071 = !DILocation(line: 97, column: 5, scope: !1005)
!1072 = !DILocation(line: 65, column: 32, scope: !1000)
!1073 = !DILocation(line: 65, column: 5, scope: !1000)
!1074 = distinct !{!1074, !1003, !1075}
!1075 = !DILocation(line: 97, column: 5, scope: !997)
!1076 = !DILocation(line: 99, column: 5, scope: !964)
!1077 = !DILabel(scope: !964, name: "err", file: !965, line: 101)
!1078 = !DILocation(line: 101, column: 1, scope: !964)
!1079 = !DILocation(line: 103, column: 5, scope: !964)
!1080 = !DILocation(line: 104, column: 10, scope: !1081)
!1081 = distinct !DILexicalBlock(scope: !964, file: !965, line: 103, column: 8)
!1082 = !DILocation(line: 104, column: 18, scope: !1081)
!1083 = !DILocation(line: 104, column: 7, scope: !1081)
!1084 = !DILocation(line: 105, column: 6, scope: !1085)
!1085 = distinct !DILexicalBlock(scope: !1081, file: !965, line: 105, column: 6)
!1086 = !DILocation(line: 105, column: 12, scope: !1085)
!1087 = !DILocation(line: 105, column: 18, scope: !1085)
!1088 = !DILocation(line: 105, column: 6, scope: !1081)
!1089 = !DILocation(line: 106, column: 17, scope: !1090)
!1090 = distinct !DILexicalBlock(scope: !1085, file: !965, line: 105, column: 27)
!1091 = !DILocation(line: 106, column: 23, scope: !1090)
!1092 = !DILocation(line: 106, column: 37, scope: !1090)
!1093 = !DILocation(line: 106, column: 43, scope: !1090)
!1094 = !DILocation(line: 106, column: 30, scope: !1090)
!1095 = !DILocation(line: 106, column: 6, scope: !1090)
!1096 = !DILocation(line: 107, column: 11, scope: !1090)
!1097 = !DILocation(line: 107, column: 17, scope: !1090)
!1098 = !DILocation(line: 107, column: 6, scope: !1090)
!1099 = !DILocation(line: 108, column: 6, scope: !1090)
!1100 = !DILocation(line: 108, column: 12, scope: !1090)
!1101 = !DILocation(line: 108, column: 18, scope: !1090)
!1102 = !DILocation(line: 109, column: 2, scope: !1090)
!1103 = !DILocation(line: 110, column: 5, scope: !1081)
!1104 = !DILocation(line: 110, column: 15, scope: !964)
!1105 = distinct !{!1105, !1079, !1106}
!1106 = !DILocation(line: 110, column: 17, scope: !964)
!1107 = !DILocation(line: 112, column: 5, scope: !964)
!1108 = !DILocation(line: 113, column: 1, scope: !964)
!1109 = distinct !DISubprogram(name: "_sudo_printf", scope: !965, file: !965, line: 116, type: !599, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !845, retainedNodes: !176)
!1110 = !DILocalVariable(name: "msg_type", arg: 1, scope: !1109, file: !965, line: 116, type: !33)
!1111 = !DILocation(line: 116, column: 18, scope: !1109)
!1112 = !DILocalVariable(name: "fmt", arg: 2, scope: !1109, file: !965, line: 116, type: !221)
!1113 = !DILocation(line: 116, column: 40, scope: !1109)
!1114 = !DILocalVariable(name: "ap", scope: !1109, file: !965, line: 118, type: !1115)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1116, line: 52, baseType: !1117)
!1116 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1118, line: 32, baseType: !1119)
!1118 = !DIFile(filename: "/usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h", directory: "")
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !846, line: 118, baseType: !1120)
!1120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1121, size: 192, elements: !785)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !846, line: 118, size: 192, elements: !1122)
!1122 = !{!1123, !1124, !1125, !1126}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1121, file: !846, line: 118, baseType: !7, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1121, file: !846, line: 118, baseType: !7, size: 32, offset: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1121, file: !846, line: 118, baseType: !19, size: 64, offset: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1121, file: !846, line: 118, baseType: !19, size: 64, offset: 128)
!1127 = !DILocation(line: 118, column: 13, scope: !1109)
!1128 = !DILocalVariable(name: "fp", scope: !1109, file: !965, line: 119, type: !1129)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !756, line: 7, baseType: !1131)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !758, line: 49, size: 1728, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1131, file: !758, line: 51, baseType: !33, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1131, file: !758, line: 54, baseType: !20, size: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1131, file: !758, line: 55, baseType: !20, size: 64, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1131, file: !758, line: 56, baseType: !20, size: 64, offset: 192)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1131, file: !758, line: 57, baseType: !20, size: 64, offset: 256)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1131, file: !758, line: 58, baseType: !20, size: 64, offset: 320)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1131, file: !758, line: 59, baseType: !20, size: 64, offset: 384)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1131, file: !758, line: 60, baseType: !20, size: 64, offset: 448)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1131, file: !758, line: 61, baseType: !20, size: 64, offset: 512)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1131, file: !758, line: 64, baseType: !20, size: 64, offset: 576)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1131, file: !758, line: 65, baseType: !20, size: 64, offset: 640)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1131, file: !758, line: 66, baseType: !20, size: 64, offset: 704)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1131, file: !758, line: 68, baseType: !773, size: 64, offset: 768)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1131, file: !758, line: 70, baseType: !1147, size: 64, offset: 832)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1131, file: !758, line: 72, baseType: !33, size: 32, offset: 896)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1131, file: !758, line: 73, baseType: !33, size: 32, offset: 928)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1131, file: !758, line: 74, baseType: !780, size: 64, offset: 960)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1131, file: !758, line: 77, baseType: !284, size: 16, offset: 1024)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1131, file: !758, line: 78, baseType: !178, size: 8, offset: 1040)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1131, file: !758, line: 79, baseType: !784, size: 8, offset: 1048)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1131, file: !758, line: 81, baseType: !788, size: 64, offset: 1088)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1131, file: !758, line: 89, baseType: !791, size: 64, offset: 1152)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1131, file: !758, line: 91, baseType: !793, size: 64, offset: 1216)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1131, file: !758, line: 92, baseType: !796, size: 64, offset: 1280)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1131, file: !758, line: 93, baseType: !1147, size: 64, offset: 1344)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1131, file: !758, line: 94, baseType: !19, size: 64, offset: 1408)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1131, file: !758, line: 95, baseType: !282, size: 64, offset: 1472)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1131, file: !758, line: 96, baseType: !33, size: 32, offset: 1536)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1131, file: !758, line: 98, baseType: !803, size: 160, offset: 1568)
!1163 = !DILocation(line: 119, column: 11, scope: !1109)
!1164 = !DILocalVariable(name: "len", scope: !1109, file: !965, line: 120, type: !33)
!1165 = !DILocation(line: 120, column: 9, scope: !1109)
!1166 = !DILocation(line: 122, column: 13, scope: !1109)
!1167 = !DILocation(line: 122, column: 5, scope: !1109)
!1168 = !DILocation(line: 124, column: 7, scope: !1169)
!1169 = distinct !DILexicalBlock(scope: !1109, file: !965, line: 122, column: 23)
!1170 = !DILocation(line: 124, column: 5, scope: !1169)
!1171 = !DILocation(line: 125, column: 2, scope: !1169)
!1172 = !DILocation(line: 127, column: 7, scope: !1169)
!1173 = !DILocation(line: 127, column: 5, scope: !1169)
!1174 = !DILocation(line: 128, column: 2, scope: !1169)
!1175 = !DILocation(line: 130, column: 2, scope: !1169)
!1176 = !DILocation(line: 130, column: 8, scope: !1169)
!1177 = !DILocation(line: 131, column: 2, scope: !1169)
!1178 = !DILocation(line: 134, column: 5, scope: !1109)
!1179 = !DILocation(line: 135, column: 20, scope: !1109)
!1180 = !DILocation(line: 135, column: 24, scope: !1109)
!1181 = !DILocation(line: 135, column: 29, scope: !1109)
!1182 = !DILocation(line: 135, column: 11, scope: !1109)
!1183 = !DILocation(line: 135, column: 9, scope: !1109)
!1184 = !DILocation(line: 136, column: 5, scope: !1109)
!1185 = !DILocation(line: 138, column: 12, scope: !1109)
!1186 = !DILocation(line: 138, column: 5, scope: !1109)
!1187 = !DILocation(line: 139, column: 1, scope: !1109)
!1188 = distinct !DISubprogram(name: "error", scope: !1189, file: !1189, line: 36, type: !1190, scopeLine: 37, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !847, retainedNodes: !176)
!1189 = !DIFile(filename: "./error.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!1190 = !DISubroutineType(types: !1191)
!1191 = !{null, !33, !221, null}
!1192 = !DILocalVariable(name: "eval", arg: 1, scope: !1188, file: !1189, line: 36, type: !33)
!1193 = !DILocation(line: 36, column: 11, scope: !1188)
!1194 = !DILocalVariable(name: "fmt", arg: 2, scope: !1188, file: !1189, line: 36, type: !221)
!1195 = !DILocation(line: 36, column: 29, scope: !1188)
!1196 = !DILocalVariable(name: "ap", scope: !1188, file: !1189, line: 38, type: !1197)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1116, line: 52, baseType: !1198)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1118, line: 32, baseType: !1199)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !848, line: 38, baseType: !1200)
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1201, size: 192, elements: !785)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !848, line: 38, size: 192, elements: !1202)
!1202 = !{!1203, !1204, !1205, !1206}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1201, file: !848, line: 38, baseType: !7, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1201, file: !848, line: 38, baseType: !7, size: 32, offset: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1201, file: !848, line: 38, baseType: !19, size: 64, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1201, file: !848, line: 38, baseType: !19, size: 64, offset: 128)
!1207 = !DILocation(line: 38, column: 10, scope: !1188)
!1208 = !DILocation(line: 39, column: 2, scope: !1188)
!1209 = !DILocation(line: 40, column: 14, scope: !1188)
!1210 = !DILocation(line: 40, column: 19, scope: !1188)
!1211 = !DILocation(line: 40, column: 2, scope: !1188)
!1212 = !DILocation(line: 41, column: 2, scope: !1188)
!1213 = !DILocation(line: 42, column: 2, scope: !1188)
!1214 = !DILocation(line: 43, column: 7, scope: !1188)
!1215 = !DILocation(line: 43, column: 2, scope: !1188)
!1216 = distinct !DISubprogram(name: "_warning", scope: !1189, file: !1189, line: 76, type: !1217, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !847, retainedNodes: !176)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{null, !33, !221, !1219}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1220 = !DILocalVariable(name: "use_errno", arg: 1, scope: !1216, file: !1189, line: 76, type: !33)
!1221 = !DILocation(line: 76, column: 14, scope: !1216)
!1222 = !DILocalVariable(name: "fmt", arg: 2, scope: !1216, file: !1189, line: 76, type: !221)
!1223 = !DILocation(line: 76, column: 37, scope: !1216)
!1224 = !DILocalVariable(name: "ap", arg: 3, scope: !1216, file: !1189, line: 76, type: !1219)
!1225 = !DILocation(line: 76, column: 50, scope: !1216)
!1226 = !DILocalVariable(name: "serrno", scope: !1216, file: !1189, line: 78, type: !33)
!1227 = !DILocation(line: 78, column: 6, scope: !1216)
!1228 = !DILocation(line: 78, column: 15, scope: !1216)
!1229 = !DILocation(line: 80, column: 8, scope: !1216)
!1230 = !DILocation(line: 80, column: 23, scope: !1216)
!1231 = !DILocation(line: 80, column: 2, scope: !1216)
!1232 = !DILocation(line: 81, column: 6, scope: !1233)
!1233 = distinct !DILexicalBlock(scope: !1216, file: !1189, line: 81, column: 6)
!1234 = !DILocation(line: 81, column: 10, scope: !1233)
!1235 = !DILocation(line: 81, column: 6, scope: !1216)
!1236 = !DILocation(line: 82, column: 9, scope: !1237)
!1237 = distinct !DILexicalBlock(scope: !1233, file: !1189, line: 81, column: 19)
!1238 = !DILocation(line: 82, column: 18, scope: !1237)
!1239 = !DILocation(line: 82, column: 3, scope: !1237)
!1240 = !DILocation(line: 83, column: 12, scope: !1237)
!1241 = !DILocation(line: 83, column: 20, scope: !1237)
!1242 = !DILocation(line: 83, column: 25, scope: !1237)
!1243 = !DILocation(line: 83, column: 3, scope: !1237)
!1244 = !DILocation(line: 84, column: 2, scope: !1237)
!1245 = !DILocation(line: 85, column: 6, scope: !1246)
!1246 = distinct !DILexicalBlock(scope: !1216, file: !1189, line: 85, column: 6)
!1247 = !DILocation(line: 85, column: 6, scope: !1216)
!1248 = !DILocation(line: 86, column: 12, scope: !1249)
!1249 = distinct !DILexicalBlock(scope: !1246, file: !1189, line: 85, column: 17)
!1250 = !DILocation(line: 86, column: 21, scope: !1249)
!1251 = !DILocation(line: 86, column: 6, scope: !1249)
!1252 = !DILocation(line: 87, column: 21, scope: !1249)
!1253 = !DILocation(line: 87, column: 12, scope: !1249)
!1254 = !DILocation(line: 87, column: 30, scope: !1249)
!1255 = !DILocation(line: 87, column: 6, scope: !1249)
!1256 = !DILocation(line: 88, column: 2, scope: !1249)
!1257 = !DILocation(line: 89, column: 13, scope: !1216)
!1258 = !DILocation(line: 89, column: 2, scope: !1216)
!1259 = !DILocation(line: 90, column: 1, scope: !1216)
!1260 = distinct !DISubprogram(name: "errorx", scope: !1189, file: !1189, line: 47, type: !1190, scopeLine: 48, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !847, retainedNodes: !176)
!1261 = !DILocalVariable(name: "eval", arg: 1, scope: !1260, file: !1189, line: 47, type: !33)
!1262 = !DILocation(line: 47, column: 12, scope: !1260)
!1263 = !DILocalVariable(name: "fmt", arg: 2, scope: !1260, file: !1189, line: 47, type: !221)
!1264 = !DILocation(line: 47, column: 30, scope: !1260)
!1265 = !DILocalVariable(name: "ap", scope: !1260, file: !1189, line: 49, type: !1197)
!1266 = !DILocation(line: 49, column: 10, scope: !1260)
!1267 = !DILocation(line: 50, column: 2, scope: !1260)
!1268 = !DILocation(line: 51, column: 14, scope: !1260)
!1269 = !DILocation(line: 51, column: 19, scope: !1260)
!1270 = !DILocation(line: 51, column: 2, scope: !1260)
!1271 = !DILocation(line: 52, column: 2, scope: !1260)
!1272 = !DILocation(line: 53, column: 2, scope: !1260)
!1273 = !DILocation(line: 54, column: 7, scope: !1260)
!1274 = !DILocation(line: 54, column: 2, scope: !1260)
!1275 = distinct !DISubprogram(name: "warning", scope: !1189, file: !1189, line: 58, type: !1276, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !847, retainedNodes: !176)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{null, !221, null}
!1278 = !DILocalVariable(name: "fmt", arg: 1, scope: !1275, file: !1189, line: 58, type: !221)
!1279 = !DILocation(line: 58, column: 21, scope: !1275)
!1280 = !DILocalVariable(name: "ap", scope: !1275, file: !1189, line: 60, type: !1197)
!1281 = !DILocation(line: 60, column: 10, scope: !1275)
!1282 = !DILocation(line: 61, column: 2, scope: !1275)
!1283 = !DILocation(line: 62, column: 14, scope: !1275)
!1284 = !DILocation(line: 62, column: 19, scope: !1275)
!1285 = !DILocation(line: 62, column: 2, scope: !1275)
!1286 = !DILocation(line: 63, column: 2, scope: !1275)
!1287 = !DILocation(line: 64, column: 1, scope: !1275)
!1288 = distinct !DISubprogram(name: "warningx", scope: !1189, file: !1189, line: 67, type: !1276, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !847, retainedNodes: !176)
!1289 = !DILocalVariable(name: "fmt", arg: 1, scope: !1288, file: !1189, line: 67, type: !221)
!1290 = !DILocation(line: 67, column: 22, scope: !1288)
!1291 = !DILocalVariable(name: "ap", scope: !1288, file: !1189, line: 69, type: !1197)
!1292 = !DILocation(line: 69, column: 10, scope: !1288)
!1293 = !DILocation(line: 70, column: 2, scope: !1288)
!1294 = !DILocation(line: 71, column: 14, scope: !1288)
!1295 = !DILocation(line: 71, column: 19, scope: !1288)
!1296 = !DILocation(line: 71, column: 2, scope: !1288)
!1297 = !DILocation(line: 72, column: 2, scope: !1288)
!1298 = !DILocation(line: 73, column: 1, scope: !1288)
!1299 = distinct !DISubprogram(name: "my_execve", scope: !42, file: !42, line: 87, type: !1300, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !176)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!33, !221, !601, !601}
!1302 = !DILocalVariable(name: "path", arg: 1, scope: !1299, file: !42, line: 87, type: !221)
!1303 = !DILocation(line: 87, column: 23, scope: !1299)
!1304 = !DILocalVariable(name: "argv", arg: 2, scope: !1299, file: !42, line: 87, type: !601)
!1305 = !DILocation(line: 87, column: 41, scope: !1299)
!1306 = !DILocalVariable(name: "envp", arg: 3, scope: !1299, file: !42, line: 87, type: !601)
!1307 = !DILocation(line: 87, column: 61, scope: !1299)
!1308 = !DILocation(line: 89, column: 12, scope: !1299)
!1309 = !DILocation(line: 89, column: 18, scope: !1299)
!1310 = !DILocation(line: 89, column: 24, scope: !1299)
!1311 = !DILocation(line: 89, column: 5, scope: !1299)
!1312 = !DILocation(line: 90, column: 9, scope: !1313)
!1313 = distinct !DILexicalBlock(scope: !1299, file: !42, line: 90, column: 9)
!1314 = !DILocation(line: 90, column: 15, scope: !1313)
!1315 = !DILocation(line: 90, column: 9, scope: !1299)
!1316 = !DILocalVariable(name: "argc", scope: !1317, file: !42, line: 91, type: !33)
!1317 = distinct !DILexicalBlock(scope: !1313, file: !42, line: 90, column: 27)
!1318 = !DILocation(line: 91, column: 6, scope: !1317)
!1319 = !DILocalVariable(name: "nargv", scope: !1317, file: !42, line: 92, type: !615)
!1320 = !DILocation(line: 92, column: 9, scope: !1317)
!1321 = !DILocation(line: 94, column: 12, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1317, file: !42, line: 94, column: 2)
!1323 = !DILocation(line: 94, column: 7, scope: !1322)
!1324 = !DILocation(line: 94, column: 17, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1322, file: !42, line: 94, column: 2)
!1326 = !DILocation(line: 94, column: 22, scope: !1325)
!1327 = !DILocation(line: 94, column: 28, scope: !1325)
!1328 = !DILocation(line: 94, column: 2, scope: !1322)
!1329 = !DILocation(line: 95, column: 6, scope: !1325)
!1330 = !DILocation(line: 94, column: 41, scope: !1325)
!1331 = !DILocation(line: 94, column: 2, scope: !1325)
!1332 = distinct !{!1332, !1328, !1333}
!1333 = !DILocation(line: 95, column: 6, scope: !1322)
!1334 = !DILocation(line: 96, column: 19, scope: !1317)
!1335 = !DILocation(line: 96, column: 24, scope: !1317)
!1336 = !DILocation(line: 96, column: 10, scope: !1317)
!1337 = !DILocation(line: 96, column: 8, scope: !1317)
!1338 = !DILocation(line: 97, column: 2, scope: !1317)
!1339 = !DILocation(line: 97, column: 11, scope: !1317)
!1340 = !DILocation(line: 98, column: 21, scope: !1317)
!1341 = !DILocation(line: 98, column: 2, scope: !1317)
!1342 = !DILocation(line: 98, column: 11, scope: !1317)
!1343 = !DILocation(line: 99, column: 9, scope: !1317)
!1344 = !DILocation(line: 99, column: 15, scope: !1317)
!1345 = !DILocation(line: 99, column: 2, scope: !1317)
!1346 = !DILocation(line: 99, column: 20, scope: !1317)
!1347 = !DILocation(line: 99, column: 25, scope: !1317)
!1348 = !DILocation(line: 99, column: 30, scope: !1317)
!1349 = !DILocation(line: 99, column: 35, scope: !1317)
!1350 = !DILocation(line: 100, column: 23, scope: !1317)
!1351 = !DILocation(line: 100, column: 30, scope: !1317)
!1352 = !DILocation(line: 100, column: 2, scope: !1317)
!1353 = !DILocation(line: 101, column: 8, scope: !1317)
!1354 = !DILocation(line: 101, column: 2, scope: !1317)
!1355 = !DILocation(line: 102, column: 5, scope: !1317)
!1356 = !DILocation(line: 103, column: 5, scope: !1299)
!1357 = distinct !DISubprogram(name: "save_signals", scope: !42, file: !42, line: 177, type: !165, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !176)
!1358 = !DILocalVariable(name: "ss", scope: !1357, file: !42, line: 179, type: !1359)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!1360 = !DILocation(line: 179, column: 26, scope: !1357)
!1361 = !DILocation(line: 181, column: 13, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1357, file: !42, line: 181, column: 5)
!1363 = !DILocation(line: 181, column: 10, scope: !1362)
!1364 = !DILocation(line: 181, column: 30, scope: !1365)
!1365 = distinct !DILexicalBlock(scope: !1362, file: !42, line: 181, column: 5)
!1366 = !DILocation(line: 181, column: 34, scope: !1365)
!1367 = !DILocation(line: 181, column: 40, scope: !1365)
!1368 = !DILocation(line: 181, column: 5, scope: !1362)
!1369 = !DILocation(line: 182, column: 12, scope: !1365)
!1370 = !DILocation(line: 182, column: 16, scope: !1365)
!1371 = !DILocation(line: 182, column: 30, scope: !1365)
!1372 = !DILocation(line: 182, column: 34, scope: !1365)
!1373 = !DILocation(line: 182, column: 2, scope: !1365)
!1374 = !DILocation(line: 181, column: 49, scope: !1365)
!1375 = !DILocation(line: 181, column: 5, scope: !1365)
!1376 = distinct !{!1376, !1368, !1377}
!1377 = !DILocation(line: 182, column: 36, scope: !1362)
!1378 = !DILocation(line: 183, column: 1, scope: !1357)
!1379 = distinct !DISubprogram(name: "restore_signals", scope: !42, file: !42, line: 189, type: !165, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !176)
!1380 = !DILocalVariable(name: "ss", scope: !1379, file: !42, line: 191, type: !1359)
!1381 = !DILocation(line: 191, column: 26, scope: !1379)
!1382 = !DILocation(line: 193, column: 13, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1379, file: !42, line: 193, column: 5)
!1384 = !DILocation(line: 193, column: 10, scope: !1383)
!1385 = !DILocation(line: 193, column: 30, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1383, file: !42, line: 193, column: 5)
!1387 = !DILocation(line: 193, column: 34, scope: !1386)
!1388 = !DILocation(line: 193, column: 40, scope: !1386)
!1389 = !DILocation(line: 193, column: 5, scope: !1383)
!1390 = !DILocation(line: 194, column: 12, scope: !1386)
!1391 = !DILocation(line: 194, column: 16, scope: !1386)
!1392 = !DILocation(line: 194, column: 24, scope: !1386)
!1393 = !DILocation(line: 194, column: 28, scope: !1386)
!1394 = !DILocation(line: 194, column: 2, scope: !1386)
!1395 = !DILocation(line: 193, column: 49, scope: !1386)
!1396 = !DILocation(line: 193, column: 5, scope: !1386)
!1397 = distinct !{!1397, !1389, !1398}
!1398 = !DILocation(line: 194, column: 36, scope: !1383)
!1399 = !DILocation(line: 195, column: 1, scope: !1379)
!1400 = distinct !DISubprogram(name: "sudo_execve", scope: !42, file: !42, line: 203, type: !1401, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !176)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!33, !1403, !1428}
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "command_details", file: !699, line: 126, size: 960, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409, !1410, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1404, file: !699, line: 127, baseType: !550, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1404, file: !699, line: 128, baseType: !550, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1404, file: !699, line: 129, baseType: !548, size: 32, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1404, file: !699, line: 130, baseType: !548, size: 32, offset: 96)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "umask", scope: !1404, file: !699, line: 131, baseType: !1411, size: 32, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !36, line: 69, baseType: !1412)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !38, line: 150, baseType: !7)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !1404, file: !699, line: 132, baseType: !33, size: 32, offset: 160)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1404, file: !699, line: 133, baseType: !33, size: 32, offset: 192)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1404, file: !699, line: 134, baseType: !33, size: 32, offset: 224)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "closefrom", scope: !1404, file: !699, line: 135, baseType: !33, size: 32, offset: 256)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1404, file: !699, line: 136, baseType: !33, size: 32, offset: 288)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1404, file: !699, line: 137, baseType: !711, size: 64, offset: 320)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1404, file: !699, line: 138, baseType: !221, size: 64, offset: 384)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1404, file: !699, line: 139, baseType: !221, size: 64, offset: 448)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "login_class", scope: !1404, file: !699, line: 140, baseType: !221, size: 64, offset: 512)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "chroot", scope: !1404, file: !699, line: 141, baseType: !221, size: 64, offset: 576)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "selinux_role", scope: !1404, file: !699, line: 142, baseType: !221, size: 64, offset: 640)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "selinux_type", scope: !1404, file: !699, line: 143, baseType: !221, size: 64, offset: 704)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "utmp_user", scope: !1404, file: !699, line: 144, baseType: !221, size: 64, offset: 768)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1404, file: !699, line: 145, baseType: !615, size: 64, offset: 832)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1404, file: !699, line: 146, baseType: !615, size: 64, offset: 896)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "command_status", file: !699, line: 150, size: 64, elements: !1430)
!1430 = !{!1431, !1432}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1429, file: !699, line: 155, baseType: !33, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1429, file: !699, line: 156, baseType: !33, size: 32, offset: 32)
!1433 = !DILocalVariable(name: "details", arg: 1, scope: !1400, file: !42, line: 203, type: !1403)
!1434 = !DILocation(line: 203, column: 37, scope: !1400)
!1435 = !DILocalVariable(name: "cstat", arg: 2, scope: !1400, file: !42, line: 203, type: !1428)
!1436 = !DILocation(line: 203, column: 69, scope: !1400)
!1437 = !DILocalVariable(name: "maxfd", scope: !1400, file: !42, line: 205, type: !33)
!1438 = !DILocation(line: 205, column: 9, scope: !1400)
!1439 = !DILocalVariable(name: "n", scope: !1400, file: !42, line: 205, type: !33)
!1440 = !DILocation(line: 205, column: 16, scope: !1400)
!1441 = !DILocalVariable(name: "nready", scope: !1400, file: !42, line: 205, type: !33)
!1442 = !DILocation(line: 205, column: 19, scope: !1400)
!1443 = !DILocalVariable(name: "sv", scope: !1400, file: !42, line: 205, type: !169)
!1444 = !DILocation(line: 205, column: 27, scope: !1400)
!1445 = !DILocalVariable(name: "log_io", scope: !1400, file: !42, line: 205, type: !33)
!1446 = !DILocation(line: 205, column: 34, scope: !1400)
!1447 = !DILocalVariable(name: "utmp_user", scope: !1400, file: !42, line: 206, type: !221)
!1448 = !DILocation(line: 206, column: 17, scope: !1400)
!1449 = !DILocalVariable(name: "fdsr", scope: !1400, file: !42, line: 207, type: !22)
!1450 = !DILocation(line: 207, column: 13, scope: !1400)
!1451 = !DILocalVariable(name: "fdsw", scope: !1400, file: !42, line: 207, type: !22)
!1452 = !DILocation(line: 207, column: 20, scope: !1400)
!1453 = !DILocalVariable(name: "sa", scope: !1400, file: !42, line: 208, type: !60)
!1454 = !DILocation(line: 208, column: 17, scope: !1400)
!1455 = !DILocalVariable(name: "child", scope: !1400, file: !42, line: 209, type: !35)
!1456 = !DILocation(line: 209, column: 11, scope: !1400)
!1457 = !DILocation(line: 212, column: 9, scope: !1458)
!1458 = distinct !DILexicalBlock(scope: !1400, file: !42, line: 212, column: 9)
!1459 = !DILocation(line: 212, column: 9, scope: !1400)
!1460 = !DILocation(line: 213, column: 10, scope: !1461)
!1461 = distinct !DILexicalBlock(scope: !1458, file: !42, line: 212, column: 47)
!1462 = !DILocation(line: 213, column: 2, scope: !1461)
!1463 = !DILocation(line: 215, column: 3, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1461, file: !42, line: 213, column: 18)
!1465 = !DILocation(line: 215, column: 10, scope: !1464)
!1466 = !DILocation(line: 215, column: 15, scope: !1464)
!1467 = !DILocation(line: 216, column: 16, scope: !1464)
!1468 = !DILocation(line: 216, column: 3, scope: !1464)
!1469 = !DILocation(line: 216, column: 10, scope: !1464)
!1470 = !DILocation(line: 216, column: 14, scope: !1464)
!1471 = !DILocation(line: 217, column: 3, scope: !1464)
!1472 = !DILocation(line: 220, column: 9, scope: !1464)
!1473 = !DILocation(line: 221, column: 3, scope: !1464)
!1474 = !DILocation(line: 224, column: 3, scope: !1464)
!1475 = !DILocation(line: 226, column: 5, scope: !1461)
!1476 = !DILocation(line: 233, column: 10, scope: !1477)
!1477 = distinct !DILexicalBlock(scope: !1400, file: !42, line: 233, column: 9)
!1478 = !DILocation(line: 233, column: 32, scope: !1477)
!1479 = !DILocation(line: 233, column: 35, scope: !1477)
!1480 = !DILocation(line: 233, column: 9, scope: !1400)
!1481 = !DILocation(line: 234, column: 9, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !1477, file: !42, line: 233, column: 70)
!1483 = !DILocation(line: 235, column: 6, scope: !1484)
!1484 = distinct !DILexicalBlock(scope: !1482, file: !42, line: 235, column: 6)
!1485 = !DILocation(line: 235, column: 6, scope: !1482)
!1486 = !DILocation(line: 236, column: 18, scope: !1484)
!1487 = !DILocation(line: 236, column: 27, scope: !1484)
!1488 = !DILocation(line: 236, column: 39, scope: !1484)
!1489 = !DILocation(line: 236, column: 48, scope: !1484)
!1490 = !DILocation(line: 236, column: 73, scope: !1484)
!1491 = !DILocation(line: 236, column: 16, scope: !1484)
!1492 = !DILocation(line: 236, column: 6, scope: !1484)
!1493 = !DILocation(line: 237, column: 2, scope: !1482)
!1494 = !DILocation(line: 238, column: 12, scope: !1482)
!1495 = !DILocation(line: 238, column: 21, scope: !1482)
!1496 = !DILocation(line: 238, column: 40, scope: !1482)
!1497 = !DILocation(line: 238, column: 45, scope: !1482)
!1498 = !DILocation(line: 238, column: 2, scope: !1482)
!1499 = !DILocation(line: 239, column: 5, scope: !1482)
!1500 = !DILocation(line: 245, column: 44, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1400, file: !42, line: 245, column: 9)
!1502 = !DILocation(line: 245, column: 9, scope: !1501)
!1503 = !DILocation(line: 245, column: 48, scope: !1501)
!1504 = !DILocation(line: 245, column: 9, scope: !1400)
!1505 = !DILocation(line: 246, column: 11, scope: !1501)
!1506 = !DILocation(line: 246, column: 2, scope: !1501)
!1507 = !DILocation(line: 252, column: 9, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1400, file: !42, line: 252, column: 9)
!1509 = !DILocation(line: 252, column: 36, scope: !1508)
!1510 = !DILocation(line: 252, column: 9, scope: !1400)
!1511 = !DILocation(line: 253, column: 11, scope: !1508)
!1512 = !DILocation(line: 253, column: 2, scope: !1508)
!1513 = !DILocation(line: 255, column: 16, scope: !1400)
!1514 = !DILocation(line: 255, column: 5, scope: !1400)
!1515 = !DILocation(line: 256, column: 21, scope: !1400)
!1516 = !DILocation(line: 256, column: 5, scope: !1400)
!1517 = !DILocation(line: 262, column: 8, scope: !1400)
!1518 = !DILocation(line: 262, column: 17, scope: !1400)
!1519 = !DILocation(line: 263, column: 8, scope: !1400)
!1520 = !DILocation(line: 263, column: 19, scope: !1400)
!1521 = !DILocation(line: 264, column: 5, scope: !1400)
!1522 = !DILocation(line: 265, column: 5, scope: !1400)
!1523 = !DILocation(line: 266, column: 5, scope: !1400)
!1524 = !DILocation(line: 267, column: 5, scope: !1400)
!1525 = !DILocation(line: 268, column: 5, scope: !1400)
!1526 = !DILocation(line: 269, column: 5, scope: !1400)
!1527 = !DILocation(line: 270, column: 5, scope: !1400)
!1528 = !DILocation(line: 271, column: 5, scope: !1400)
!1529 = !DILocation(line: 272, column: 5, scope: !1400)
!1530 = !DILocation(line: 275, column: 13, scope: !1400)
!1531 = !DILocation(line: 275, column: 11, scope: !1400)
!1532 = !DILocation(line: 281, column: 9, scope: !1533)
!1533 = distinct !DILexicalBlock(scope: !1400, file: !42, line: 281, column: 9)
!1534 = !DILocation(line: 281, column: 9, scope: !1400)
!1535 = !DILocation(line: 282, column: 19, scope: !1533)
!1536 = !DILocation(line: 282, column: 28, scope: !1533)
!1537 = !DILocation(line: 282, column: 10, scope: !1533)
!1538 = !DILocation(line: 282, column: 8, scope: !1533)
!1539 = !DILocation(line: 282, column: 2, scope: !1533)
!1540 = !DILocation(line: 284, column: 20, scope: !1533)
!1541 = !DILocation(line: 284, column: 29, scope: !1533)
!1542 = !DILocation(line: 284, column: 10, scope: !1533)
!1543 = !DILocation(line: 284, column: 8, scope: !1533)
!1544 = !DILocation(line: 285, column: 11, scope: !1400)
!1545 = !DILocation(line: 285, column: 5, scope: !1400)
!1546 = !DILocation(line: 288, column: 9, scope: !1547)
!1547 = distinct !DILexicalBlock(scope: !1400, file: !42, line: 288, column: 9)
!1548 = !DILocation(line: 288, column: 9, scope: !1400)
!1549 = !DILocation(line: 289, column: 8, scope: !1547)
!1550 = !DILocation(line: 289, column: 17, scope: !1547)
!1551 = !DILocation(line: 289, column: 2, scope: !1547)
!1552 = !DILocation(line: 296, column: 5, scope: !1400)
!1553 = !DILocation(line: 303, column: 31, scope: !1400)
!1554 = !DILocation(line: 303, column: 22, scope: !1400)
!1555 = !DILocation(line: 303, column: 12, scope: !1400)
!1556 = !DILocation(line: 303, column: 10, scope: !1400)
!1557 = !DILocation(line: 304, column: 31, scope: !1400)
!1558 = !DILocation(line: 304, column: 22, scope: !1400)
!1559 = !DILocation(line: 304, column: 12, scope: !1400)
!1560 = !DILocation(line: 304, column: 10, scope: !1400)
!1561 = !DILocation(line: 305, column: 5, scope: !1400)
!1562 = !DILocation(line: 306, column: 13, scope: !1563)
!1563 = distinct !DILexicalBlock(scope: !1564, file: !42, line: 305, column: 14)
!1564 = distinct !DILexicalBlock(scope: !1565, file: !42, line: 305, column: 5)
!1565 = distinct !DILexicalBlock(scope: !1400, file: !42, line: 305, column: 5)
!1566 = !DILocation(line: 306, column: 19, scope: !1563)
!1567 = !DILocation(line: 306, column: 47, scope: !1563)
!1568 = !DILocation(line: 306, column: 2, scope: !1563)
!1569 = !DILocation(line: 307, column: 13, scope: !1563)
!1570 = !DILocation(line: 307, column: 19, scope: !1563)
!1571 = !DILocation(line: 307, column: 47, scope: !1563)
!1572 = !DILocation(line: 307, column: 2, scope: !1563)
!1573 = !DILocation(line: 309, column: 2, scope: !1563)
!1574 = !DILocation(line: 310, column: 2, scope: !1563)
!1575 = !DILocation(line: 311, column: 7, scope: !1576)
!1576 = distinct !DILexicalBlock(scope: !1563, file: !42, line: 311, column: 6)
!1577 = !DILocation(line: 311, column: 6, scope: !1563)
!1578 = !DILocation(line: 312, column: 6, scope: !1576)
!1579 = !DILocation(line: 313, column: 6, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1563, file: !42, line: 313, column: 6)
!1581 = !DILocation(line: 313, column: 6, scope: !1563)
!1582 = !DILocation(line: 314, column: 18, scope: !1580)
!1583 = !DILocation(line: 314, column: 24, scope: !1580)
!1584 = !DILocation(line: 314, column: 6, scope: !1580)
!1585 = !DILocation(line: 315, column: 18, scope: !1563)
!1586 = !DILocation(line: 315, column: 24, scope: !1563)
!1587 = !DILocation(line: 315, column: 29, scope: !1563)
!1588 = !DILocation(line: 315, column: 35, scope: !1563)
!1589 = !DILocation(line: 315, column: 11, scope: !1563)
!1590 = !DILocation(line: 315, column: 9, scope: !1563)
!1591 = !DILocation(line: 316, column: 6, scope: !1592)
!1592 = distinct !DILexicalBlock(scope: !1563, file: !42, line: 316, column: 6)
!1593 = !DILocation(line: 316, column: 13, scope: !1592)
!1594 = !DILocation(line: 316, column: 6, scope: !1563)
!1595 = !DILocation(line: 317, column: 10, scope: !1596)
!1596 = distinct !DILexicalBlock(scope: !1597, file: !42, line: 317, column: 10)
!1597 = distinct !DILexicalBlock(scope: !1592, file: !42, line: 316, column: 20)
!1598 = !DILocation(line: 317, column: 16, scope: !1596)
!1599 = !DILocation(line: 317, column: 10, scope: !1597)
!1600 = !DILocation(line: 318, column: 3, scope: !1596)
!1601 = distinct !{!1601, !1602, !1603}
!1602 = !DILocation(line: 305, column: 5, scope: !1565)
!1603 = !DILocation(line: 376, column: 5, scope: !1565)
!1604 = !DILocation(line: 319, column: 15, scope: !1597)
!1605 = !DILocation(line: 319, column: 6, scope: !1597)
!1606 = !DILocation(line: 321, column: 6, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !1563, file: !42, line: 321, column: 6)
!1608 = !DILocation(line: 321, column: 6, scope: !1563)
!1609 = !DILocation(line: 322, column: 22, scope: !1610)
!1610 = distinct !DILexicalBlock(scope: !1607, file: !42, line: 321, column: 29)
!1611 = !DILocation(line: 322, column: 6, scope: !1610)
!1612 = !DILocation(line: 323, column: 2, scope: !1610)
!1613 = !DILocation(line: 324, column: 6, scope: !1614)
!1614 = distinct !DILexicalBlock(scope: !1563, file: !42, line: 324, column: 6)
!1615 = !DILocation(line: 324, column: 6, scope: !1563)
!1616 = !DILocation(line: 325, column: 25, scope: !1617)
!1617 = distinct !DILexicalBlock(scope: !1614, file: !42, line: 324, column: 38)
!1618 = !DILocation(line: 325, column: 41, scope: !1617)
!1619 = !DILocation(line: 325, column: 48, scope: !1617)
!1620 = !DILocation(line: 325, column: 56, scope: !1617)
!1621 = !DILocation(line: 325, column: 10, scope: !1617)
!1622 = !DILocation(line: 325, column: 8, scope: !1617)
!1623 = !DILocation(line: 326, column: 10, scope: !1624)
!1624 = distinct !DILexicalBlock(scope: !1617, file: !42, line: 326, column: 10)
!1625 = !DILocation(line: 326, column: 12, scope: !1624)
!1626 = !DILocation(line: 326, column: 10, scope: !1617)
!1627 = !DILocation(line: 328, column: 3, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1624, file: !42, line: 326, column: 18)
!1629 = !DILocation(line: 330, column: 10, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1617, file: !42, line: 330, column: 10)
!1631 = !DILocation(line: 330, column: 12, scope: !1630)
!1632 = !DILocation(line: 330, column: 10, scope: !1617)
!1633 = !DILocation(line: 332, column: 3, scope: !1634)
!1634 = distinct !DILexicalBlock(scope: !1630, file: !42, line: 330, column: 19)
!1635 = !DILocation(line: 335, column: 6, scope: !1617)
!1636 = !DILocation(line: 337, column: 6, scope: !1637)
!1637 = distinct !DILexicalBlock(scope: !1563, file: !42, line: 337, column: 6)
!1638 = !DILocation(line: 337, column: 6, scope: !1563)
!1639 = !DILocation(line: 339, column: 15, scope: !1640)
!1640 = distinct !DILexicalBlock(scope: !1637, file: !42, line: 337, column: 29)
!1641 = !DILocation(line: 339, column: 22, scope: !1640)
!1642 = !DILocation(line: 339, column: 10, scope: !1640)
!1643 = !DILocation(line: 339, column: 8, scope: !1640)
!1644 = !DILocation(line: 340, column: 10, scope: !1645)
!1645 = distinct !DILexicalBlock(scope: !1640, file: !42, line: 340, column: 10)
!1646 = !DILocation(line: 340, column: 12, scope: !1645)
!1647 = !DILocation(line: 340, column: 10, scope: !1640)
!1648 = !DILocation(line: 341, column: 7, scope: !1649)
!1649 = distinct !DILexicalBlock(scope: !1650, file: !42, line: 341, column: 7)
!1650 = distinct !DILexicalBlock(scope: !1645, file: !42, line: 340, column: 19)
!1651 = !DILocation(line: 341, column: 13, scope: !1649)
!1652 = !DILocation(line: 341, column: 7, scope: !1650)
!1653 = !DILocation(line: 342, column: 7, scope: !1649)
!1654 = !DILocation(line: 347, column: 7, scope: !1655)
!1655 = distinct !DILexicalBlock(scope: !1650, file: !42, line: 347, column: 7)
!1656 = !DILocation(line: 347, column: 14, scope: !1655)
!1657 = !DILocation(line: 347, column: 17, scope: !1655)
!1658 = !DILocation(line: 347, column: 23, scope: !1655)
!1659 = !DILocation(line: 347, column: 7, scope: !1650)
!1660 = !DILocation(line: 348, column: 7, scope: !1661)
!1661 = distinct !DILexicalBlock(scope: !1655, file: !42, line: 347, column: 34)
!1662 = !DILocation(line: 348, column: 14, scope: !1661)
!1663 = !DILocation(line: 348, column: 19, scope: !1661)
!1664 = !DILocation(line: 349, column: 20, scope: !1661)
!1665 = !DILocation(line: 349, column: 7, scope: !1661)
!1666 = !DILocation(line: 349, column: 14, scope: !1661)
!1667 = !DILocation(line: 349, column: 18, scope: !1661)
!1668 = !DILocation(line: 350, column: 7, scope: !1661)
!1669 = !DILocation(line: 352, column: 6, scope: !1650)
!1670 = !DILocation(line: 353, column: 10, scope: !1671)
!1671 = distinct !DILexicalBlock(scope: !1640, file: !42, line: 353, column: 10)
!1672 = !DILocation(line: 353, column: 17, scope: !1671)
!1673 = !DILocation(line: 353, column: 22, scope: !1671)
!1674 = !DILocation(line: 353, column: 10, scope: !1640)
!1675 = !DILocation(line: 354, column: 7, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1677, file: !42, line: 354, column: 7)
!1677 = distinct !DILexicalBlock(scope: !1671, file: !42, line: 353, column: 38)
!1678 = !DILocation(line: 354, column: 7, scope: !1677)
!1679 = !DILocation(line: 356, column: 7, scope: !1680)
!1680 = distinct !DILexicalBlock(scope: !1676, file: !42, line: 354, column: 31)
!1681 = !DILocation(line: 357, column: 26, scope: !1680)
!1682 = !DILocation(line: 357, column: 11, scope: !1680)
!1683 = !DILocation(line: 357, column: 9, scope: !1680)
!1684 = !DILocation(line: 358, column: 23, scope: !1680)
!1685 = !DILocation(line: 358, column: 7, scope: !1680)
!1686 = !DILocation(line: 359, column: 7, scope: !1680)
!1687 = !DILocation(line: 362, column: 7, scope: !1688)
!1688 = distinct !DILexicalBlock(scope: !1676, file: !42, line: 360, column: 10)
!1689 = !DILocation(line: 364, column: 17, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1671, file: !42, line: 364, column: 17)
!1691 = !DILocation(line: 364, column: 24, scope: !1690)
!1692 = !DILocation(line: 364, column: 29, scope: !1690)
!1693 = !DILocation(line: 364, column: 17, scope: !1671)
!1694 = !DILocation(line: 366, column: 3, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1690, file: !42, line: 364, column: 43)
!1696 = !DILocation(line: 368, column: 2, scope: !1640)
!1697 = !DILocation(line: 370, column: 17, scope: !1698)
!1698 = distinct !DILexicalBlock(scope: !1563, file: !42, line: 370, column: 6)
!1699 = !DILocation(line: 370, column: 23, scope: !1698)
!1700 = !DILocation(line: 370, column: 29, scope: !1698)
!1701 = !DILocation(line: 370, column: 6, scope: !1698)
!1702 = !DILocation(line: 370, column: 36, scope: !1698)
!1703 = !DILocation(line: 370, column: 6, scope: !1563)
!1704 = !DILocation(line: 372, column: 6, scope: !1705)
!1705 = distinct !DILexicalBlock(scope: !1698, file: !42, line: 370, column: 42)
!1706 = !DILocation(line: 373, column: 22, scope: !1705)
!1707 = !DILocation(line: 373, column: 6, scope: !1705)
!1708 = !DILocation(line: 374, column: 6, scope: !1705)
!1709 = !DILocation(line: 305, column: 5, scope: !1564)
!1710 = !DILocation(line: 378, column: 9, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !1400, file: !42, line: 378, column: 9)
!1712 = !DILocation(line: 378, column: 9, scope: !1400)
!1713 = !DILocation(line: 380, column: 12, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !1711, file: !42, line: 378, column: 17)
!1715 = !DILocation(line: 380, column: 2, scope: !1714)
!1716 = !DILocation(line: 381, column: 4, scope: !1714)
!1717 = !DILabel(scope: !1400, name: "done", file: !42, line: 391)
!1718 = !DILocation(line: 391, column: 1, scope: !1400)
!1719 = !DILocation(line: 392, column: 11, scope: !1400)
!1720 = !DILocation(line: 392, column: 5, scope: !1400)
!1721 = !DILocation(line: 393, column: 11, scope: !1400)
!1722 = !DILocation(line: 393, column: 5, scope: !1400)
!1723 = !DILocation(line: 394, column: 5, scope: !1400)
!1724 = !DILocation(line: 394, column: 13, scope: !1400)
!1725 = !DILocation(line: 394, column: 12, scope: !1400)
!1726 = !DILocalVariable(name: "sigfwd", scope: !1727, file: !42, line: 395, type: !46)
!1727 = distinct !DILexicalBlock(scope: !1400, file: !42, line: 394, column: 37)
!1728 = !DILocation(line: 395, column: 21, scope: !1727)
!1729 = !DILocation(line: 395, column: 30, scope: !1727)
!1730 = !DILocation(line: 396, column: 26, scope: !1727)
!1731 = !DILocation(line: 396, column: 2, scope: !1727)
!1732 = !DILocation(line: 397, column: 8, scope: !1727)
!1733 = !DILocation(line: 397, column: 2, scope: !1727)
!1734 = distinct !{!1734, !1723, !1735}
!1735 = !DILocation(line: 398, column: 5, scope: !1400)
!1736 = !DILocation(line: 400, column: 12, scope: !1400)
!1737 = !DILocation(line: 400, column: 19, scope: !1400)
!1738 = !DILocation(line: 400, column: 24, scope: !1400)
!1739 = !DILocation(line: 400, column: 5, scope: !1400)
!1740 = !DILocation(line: 401, column: 1, scope: !1400)
!1741 = distinct !DISubprogram(name: "pipe_nonblock", scope: !42, file: !42, line: 560, type: !1742, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !176)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{!33, !1744}
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64)
!1745 = !DILocalVariable(name: "fds", arg: 1, scope: !1741, file: !42, line: 560, type: !1744)
!1746 = !DILocation(line: 560, column: 19, scope: !1741)
!1747 = !DILocalVariable(name: "flags", scope: !1741, file: !42, line: 562, type: !33)
!1748 = !DILocation(line: 562, column: 9, scope: !1741)
!1749 = !DILocalVariable(name: "rval", scope: !1741, file: !42, line: 562, type: !33)
!1750 = !DILocation(line: 562, column: 16, scope: !1741)
!1751 = !DILocation(line: 564, column: 17, scope: !1741)
!1752 = !DILocation(line: 564, column: 12, scope: !1741)
!1753 = !DILocation(line: 564, column: 10, scope: !1741)
!1754 = !DILocation(line: 565, column: 9, scope: !1755)
!1755 = distinct !DILexicalBlock(scope: !1741, file: !42, line: 565, column: 9)
!1756 = !DILocation(line: 565, column: 14, scope: !1755)
!1757 = !DILocation(line: 565, column: 9, scope: !1741)
!1758 = !DILocation(line: 566, column: 16, scope: !1759)
!1759 = distinct !DILexicalBlock(scope: !1755, file: !42, line: 565, column: 21)
!1760 = !DILocation(line: 566, column: 10, scope: !1759)
!1761 = !DILocation(line: 566, column: 8, scope: !1759)
!1762 = !DILocation(line: 567, column: 6, scope: !1763)
!1763 = distinct !DILexicalBlock(scope: !1759, file: !42, line: 567, column: 6)
!1764 = !DILocation(line: 567, column: 12, scope: !1763)
!1765 = !DILocation(line: 567, column: 18, scope: !1763)
!1766 = !DILocation(line: 567, column: 22, scope: !1763)
!1767 = !DILocation(line: 567, column: 6, scope: !1759)
!1768 = !DILocation(line: 568, column: 19, scope: !1763)
!1769 = !DILocation(line: 568, column: 36, scope: !1763)
!1770 = !DILocation(line: 568, column: 42, scope: !1763)
!1771 = !DILocation(line: 568, column: 13, scope: !1763)
!1772 = !DILocation(line: 568, column: 11, scope: !1763)
!1773 = !DILocation(line: 568, column: 6, scope: !1763)
!1774 = !DILocation(line: 569, column: 6, scope: !1775)
!1775 = distinct !DILexicalBlock(scope: !1759, file: !42, line: 569, column: 6)
!1776 = !DILocation(line: 569, column: 11, scope: !1775)
!1777 = !DILocation(line: 569, column: 6, scope: !1759)
!1778 = !DILocation(line: 570, column: 20, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1775, file: !42, line: 569, column: 18)
!1780 = !DILocation(line: 570, column: 14, scope: !1779)
!1781 = !DILocation(line: 570, column: 12, scope: !1779)
!1782 = !DILocation(line: 571, column: 10, scope: !1783)
!1783 = distinct !DILexicalBlock(scope: !1779, file: !42, line: 571, column: 10)
!1784 = !DILocation(line: 571, column: 16, scope: !1783)
!1785 = !DILocation(line: 571, column: 22, scope: !1783)
!1786 = !DILocation(line: 571, column: 26, scope: !1783)
!1787 = !DILocation(line: 571, column: 10, scope: !1779)
!1788 = !DILocation(line: 572, column: 16, scope: !1783)
!1789 = !DILocation(line: 572, column: 33, scope: !1783)
!1790 = !DILocation(line: 572, column: 39, scope: !1783)
!1791 = !DILocation(line: 572, column: 10, scope: !1783)
!1792 = !DILocation(line: 572, column: 8, scope: !1783)
!1793 = !DILocation(line: 572, column: 3, scope: !1783)
!1794 = !DILocation(line: 573, column: 2, scope: !1779)
!1795 = !DILocation(line: 574, column: 6, scope: !1796)
!1796 = distinct !DILexicalBlock(scope: !1759, file: !42, line: 574, column: 6)
!1797 = !DILocation(line: 574, column: 11, scope: !1796)
!1798 = !DILocation(line: 574, column: 6, scope: !1759)
!1799 = !DILocation(line: 575, column: 12, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1796, file: !42, line: 574, column: 18)
!1801 = !DILocation(line: 575, column: 6, scope: !1800)
!1802 = !DILocation(line: 576, column: 12, scope: !1800)
!1803 = !DILocation(line: 576, column: 6, scope: !1800)
!1804 = !DILocation(line: 577, column: 2, scope: !1800)
!1805 = !DILocation(line: 578, column: 5, scope: !1759)
!1806 = !DILocation(line: 580, column: 12, scope: !1741)
!1807 = !DILocation(line: 580, column: 5, scope: !1741)
!1808 = distinct !DISubprogram(name: "handler", scope: !42, file: !42, line: 543, type: !72, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !176)
!1809 = !DILocalVariable(name: "s", arg: 1, scope: !1808, file: !42, line: 543, type: !33)
!1810 = !DILocation(line: 543, column: 13, scope: !1808)
!1811 = !DILocalVariable(name: "signo", scope: !1808, file: !42, line: 545, type: !34)
!1812 = !DILocation(line: 545, column: 19, scope: !1808)
!1813 = !DILocation(line: 545, column: 42, scope: !1808)
!1814 = !DILocation(line: 545, column: 27, scope: !1808)
!1815 = !DILocation(line: 551, column: 15, scope: !1816)
!1816 = distinct !DILexicalBlock(scope: !1808, file: !42, line: 551, column: 9)
!1817 = !DILocation(line: 551, column: 9, scope: !1816)
!1818 = !DILocation(line: 551, column: 54, scope: !1816)
!1819 = !DILocation(line: 551, column: 9, scope: !1808)
!1820 = !DILocation(line: 553, column: 1, scope: !1808)
!1821 = distinct !DISubprogram(name: "fork_cmnd", scope: !42, file: !42, line: 110, type: !1822, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !176)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!33, !1403, !1744}
!1824 = !DILocalVariable(name: "details", arg: 1, scope: !1821, file: !42, line: 110, type: !1403)
!1825 = !DILocation(line: 110, column: 46, scope: !1821)
!1826 = !DILocalVariable(name: "sv", arg: 2, scope: !1821, file: !42, line: 110, type: !1744)
!1827 = !DILocation(line: 110, column: 59, scope: !1821)
!1828 = !DILocalVariable(name: "cstat", scope: !1821, file: !42, line: 112, type: !1429)
!1829 = !DILocation(line: 112, column: 27, scope: !1821)
!1830 = !DILocalVariable(name: "sa", scope: !1821, file: !42, line: 113, type: !60)
!1831 = !DILocation(line: 113, column: 17, scope: !1821)
!1832 = !DILocalVariable(name: "child", scope: !1821, file: !42, line: 114, type: !35)
!1833 = !DILocation(line: 114, column: 11, scope: !1821)
!1834 = !DILocation(line: 116, column: 16, scope: !1821)
!1835 = !DILocation(line: 116, column: 5, scope: !1821)
!1836 = !DILocation(line: 117, column: 21, scope: !1821)
!1837 = !DILocation(line: 117, column: 5, scope: !1821)
!1838 = !DILocation(line: 118, column: 8, scope: !1821)
!1839 = !DILocation(line: 118, column: 17, scope: !1821)
!1840 = !DILocation(line: 119, column: 8, scope: !1821)
!1841 = !DILocation(line: 119, column: 19, scope: !1821)
!1842 = !DILocation(line: 120, column: 5, scope: !1821)
!1843 = !DILocation(line: 122, column: 13, scope: !1821)
!1844 = !DILocation(line: 122, column: 11, scope: !1821)
!1845 = !DILocation(line: 123, column: 13, scope: !1821)
!1846 = !DILocation(line: 123, column: 5, scope: !1821)
!1847 = !DILocation(line: 125, column: 11, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1821, file: !42, line: 123, column: 20)
!1849 = !DILocation(line: 125, column: 2, scope: !1848)
!1850 = !DILocation(line: 129, column: 8, scope: !1848)
!1851 = !DILocation(line: 129, column: 2, scope: !1848)
!1852 = !DILocation(line: 130, column: 8, scope: !1848)
!1853 = !DILocation(line: 130, column: 2, scope: !1848)
!1854 = !DILocation(line: 131, column: 8, scope: !1848)
!1855 = !DILocation(line: 131, column: 2, scope: !1848)
!1856 = !DILocation(line: 132, column: 8, scope: !1848)
!1857 = !DILocation(line: 132, column: 2, scope: !1848)
!1858 = !DILocation(line: 133, column: 2, scope: !1848)
!1859 = !DILocation(line: 134, column: 17, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1848, file: !42, line: 134, column: 6)
!1861 = !DILocation(line: 134, column: 6, scope: !1860)
!1862 = !DILocation(line: 134, column: 36, scope: !1860)
!1863 = !DILocation(line: 134, column: 6, scope: !1848)
!1864 = !DILocation(line: 136, column: 10, scope: !1865)
!1865 = distinct !DILexicalBlock(scope: !1866, file: !42, line: 136, column: 10)
!1866 = distinct !DILexicalBlock(scope: !1860, file: !42, line: 134, column: 45)
!1867 = !DILocation(line: 136, column: 19, scope: !1865)
!1868 = !DILocation(line: 136, column: 29, scope: !1865)
!1869 = !DILocation(line: 136, column: 10, scope: !1866)
!1870 = !DILocation(line: 137, column: 13, scope: !1865)
!1871 = !DILocation(line: 137, column: 22, scope: !1865)
!1872 = !DILocation(line: 137, column: 3, scope: !1865)
!1873 = !DILocation(line: 143, column: 13, scope: !1866)
!1874 = !DILocation(line: 143, column: 22, scope: !1866)
!1875 = !DILocation(line: 143, column: 31, scope: !1866)
!1876 = !DILocation(line: 143, column: 40, scope: !1866)
!1877 = !DILocation(line: 143, column: 46, scope: !1866)
!1878 = !DILocation(line: 143, column: 55, scope: !1866)
!1879 = !DILocation(line: 143, column: 3, scope: !1866)
!1880 = !DILocation(line: 144, column: 2, scope: !1866)
!1881 = !DILocation(line: 145, column: 8, scope: !1848)
!1882 = !DILocation(line: 145, column: 13, scope: !1848)
!1883 = !DILocation(line: 146, column: 14, scope: !1848)
!1884 = !DILocation(line: 146, column: 8, scope: !1848)
!1885 = !DILocation(line: 146, column: 12, scope: !1848)
!1886 = !DILocation(line: 147, column: 7, scope: !1848)
!1887 = !DILocation(line: 147, column: 14, scope: !1848)
!1888 = !DILocation(line: 147, column: 2, scope: !1848)
!1889 = !DILocation(line: 148, column: 2, scope: !1848)
!1890 = !DILocation(line: 150, column: 12, scope: !1821)
!1891 = !DILocation(line: 150, column: 5, scope: !1821)
!1892 = distinct !DISubprogram(name: "forward_signals", scope: !42, file: !42, line: 492, type: !72, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !176)
!1893 = !DILocalVariable(name: "sock", arg: 1, scope: !1892, file: !42, line: 492, type: !33)
!1894 = !DILocation(line: 492, column: 21, scope: !1892)
!1895 = !DILocalVariable(name: "sigfwd", scope: !1892, file: !42, line: 494, type: !46)
!1896 = !DILocation(line: 494, column: 24, scope: !1892)
!1897 = !DILocalVariable(name: "cstat", scope: !1892, file: !42, line: 495, type: !1429)
!1898 = !DILocation(line: 495, column: 27, scope: !1892)
!1899 = !DILocalVariable(name: "nsent", scope: !1892, file: !42, line: 496, type: !1900)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !36, line: 108, baseType: !1901)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !38, line: 193, baseType: !30)
!1902 = !DILocation(line: 496, column: 13, scope: !1892)
!1903 = !DILocation(line: 498, column: 5, scope: !1892)
!1904 = !DILocation(line: 498, column: 13, scope: !1892)
!1905 = !DILocation(line: 498, column: 12, scope: !1892)
!1906 = !DILocation(line: 499, column: 11, scope: !1907)
!1907 = distinct !DILexicalBlock(scope: !1892, file: !42, line: 498, column: 37)
!1908 = !DILocation(line: 499, column: 9, scope: !1907)
!1909 = !DILocation(line: 501, column: 6, scope: !1907)
!1910 = !DILocation(line: 501, column: 14, scope: !1907)
!1911 = !DILocation(line: 500, column: 2, scope: !1907)
!1912 = !DILocation(line: 502, column: 8, scope: !1907)
!1913 = !DILocation(line: 502, column: 13, scope: !1907)
!1914 = !DILocation(line: 503, column: 14, scope: !1907)
!1915 = !DILocation(line: 503, column: 22, scope: !1907)
!1916 = !DILocation(line: 503, column: 8, scope: !1907)
!1917 = !DILocation(line: 503, column: 12, scope: !1907)
!1918 = !DILocation(line: 504, column: 2, scope: !1907)
!1919 = !DILocation(line: 505, column: 19, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1907, file: !42, line: 504, column: 5)
!1921 = !DILocation(line: 505, column: 25, scope: !1920)
!1922 = !DILocation(line: 505, column: 14, scope: !1920)
!1923 = !DILocation(line: 505, column: 12, scope: !1920)
!1924 = !DILocation(line: 506, column: 2, scope: !1920)
!1925 = !DILocation(line: 506, column: 11, scope: !1907)
!1926 = !DILocation(line: 506, column: 17, scope: !1907)
!1927 = !DILocation(line: 506, column: 23, scope: !1907)
!1928 = !DILocation(line: 506, column: 26, scope: !1907)
!1929 = !DILocation(line: 506, column: 32, scope: !1907)
!1930 = !DILocation(line: 0, scope: !1907)
!1931 = distinct !{!1931, !1918, !1932}
!1932 = !DILocation(line: 506, column: 40, scope: !1907)
!1933 = !DILocation(line: 507, column: 26, scope: !1907)
!1934 = !DILocation(line: 507, column: 2, scope: !1907)
!1935 = !DILocation(line: 508, column: 8, scope: !1907)
!1936 = !DILocation(line: 508, column: 2, scope: !1907)
!1937 = !DILocation(line: 509, column: 6, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1907, file: !42, line: 509, column: 6)
!1939 = !DILocation(line: 509, column: 12, scope: !1938)
!1940 = !DILocation(line: 509, column: 6, scope: !1907)
!1941 = !DILocation(line: 510, column: 10, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1943, file: !42, line: 510, column: 10)
!1943 = distinct !DILexicalBlock(scope: !1938, file: !42, line: 509, column: 30)
!1944 = !DILocation(line: 510, column: 16, scope: !1942)
!1945 = !DILocation(line: 510, column: 10, scope: !1943)
!1946 = !DILocation(line: 512, column: 3, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1942, file: !42, line: 510, column: 26)
!1948 = !DILocation(line: 512, column: 11, scope: !1947)
!1949 = !DILocation(line: 512, column: 10, scope: !1947)
!1950 = !DILocation(line: 513, column: 16, scope: !1951)
!1951 = distinct !DILexicalBlock(scope: !1947, file: !42, line: 512, column: 35)
!1952 = !DILocation(line: 513, column: 14, scope: !1951)
!1953 = !DILocation(line: 514, column: 31, scope: !1951)
!1954 = !DILocation(line: 514, column: 7, scope: !1951)
!1955 = !DILocation(line: 515, column: 13, scope: !1951)
!1956 = !DILocation(line: 515, column: 7, scope: !1951)
!1957 = distinct !{!1957, !1946, !1958}
!1958 = !DILocation(line: 516, column: 3, scope: !1947)
!1959 = !DILocation(line: 517, column: 6, scope: !1947)
!1960 = !DILocation(line: 518, column: 6, scope: !1943)
!1961 = distinct !{!1961, !1903, !1962}
!1962 = !DILocation(line: 520, column: 5, scope: !1892)
!1963 = !DILocation(line: 521, column: 1, scope: !1892)
!1964 = distinct !DISubprogram(name: "handle_signals", scope: !42, file: !42, line: 408, type: !1965, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !176)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!33, !33, !35, !33, !1428}
!1967 = !DILocalVariable(name: "fd", arg: 1, scope: !1964, file: !42, line: 408, type: !33)
!1968 = !DILocation(line: 408, column: 20, scope: !1964)
!1969 = !DILocalVariable(name: "child", arg: 2, scope: !1964, file: !42, line: 408, type: !35)
!1970 = !DILocation(line: 408, column: 30, scope: !1964)
!1971 = !DILocalVariable(name: "log_io", arg: 3, scope: !1964, file: !42, line: 408, type: !33)
!1972 = !DILocation(line: 408, column: 41, scope: !1964)
!1973 = !DILocalVariable(name: "cstat", arg: 4, scope: !1964, file: !42, line: 408, type: !1428)
!1974 = !DILocation(line: 408, column: 72, scope: !1964)
!1975 = !DILocalVariable(name: "signo", scope: !1964, file: !42, line: 410, type: !34)
!1976 = !DILocation(line: 410, column: 19, scope: !1964)
!1977 = !DILocalVariable(name: "nread", scope: !1964, file: !42, line: 411, type: !1900)
!1978 = !DILocation(line: 411, column: 13, scope: !1964)
!1979 = !DILocalVariable(name: "status", scope: !1964, file: !42, line: 412, type: !33)
!1980 = !DILocation(line: 412, column: 9, scope: !1964)
!1981 = !DILocalVariable(name: "pid", scope: !1964, file: !42, line: 413, type: !35)
!1982 = !DILocation(line: 413, column: 11, scope: !1964)
!1983 = !DILocation(line: 415, column: 5, scope: !1964)
!1984 = !DILocation(line: 417, column: 15, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !1986, file: !42, line: 415, column: 14)
!1986 = distinct !DILexicalBlock(scope: !1987, file: !42, line: 415, column: 5)
!1987 = distinct !DILexicalBlock(scope: !1964, file: !42, line: 415, column: 5)
!1988 = !DILocation(line: 417, column: 10, scope: !1985)
!1989 = !DILocation(line: 417, column: 8, scope: !1985)
!1990 = !DILocation(line: 418, column: 6, scope: !1991)
!1991 = distinct !DILexicalBlock(scope: !1985, file: !42, line: 418, column: 6)
!1992 = !DILocation(line: 418, column: 12, scope: !1991)
!1993 = !DILocation(line: 418, column: 6, scope: !1985)
!1994 = !DILocation(line: 420, column: 10, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1996, file: !42, line: 420, column: 10)
!1996 = distinct !DILexicalBlock(scope: !1991, file: !42, line: 418, column: 18)
!1997 = !DILocation(line: 420, column: 16, scope: !1995)
!1998 = !DILocation(line: 420, column: 10, scope: !1996)
!1999 = !DILocation(line: 421, column: 3, scope: !1995)
!2000 = !DILocation(line: 421, column: 9, scope: !1995)
!2001 = !DILocation(line: 423, column: 10, scope: !2002)
!2002 = distinct !DILexicalBlock(scope: !1996, file: !42, line: 423, column: 10)
!2003 = !DILocation(line: 423, column: 16, scope: !2002)
!2004 = !DILocation(line: 423, column: 10, scope: !1996)
!2005 = !DILocation(line: 424, column: 3, scope: !2002)
!2006 = distinct !{!2006, !2007, !2008}
!2007 = !DILocation(line: 415, column: 5, scope: !1987)
!2008 = !DILocation(line: 484, column: 5, scope: !1987)
!2009 = !DILocation(line: 426, column: 10, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !1996, file: !42, line: 426, column: 10)
!2011 = !DILocation(line: 426, column: 16, scope: !2010)
!2012 = !DILocation(line: 426, column: 10, scope: !1996)
!2013 = !DILocation(line: 427, column: 3, scope: !2010)
!2014 = !DILocation(line: 428, column: 61, scope: !1996)
!2015 = !DILocation(line: 428, column: 52, scope: !1996)
!2016 = !DILocation(line: 428, column: 6, scope: !1996)
!2017 = !DILocation(line: 429, column: 6, scope: !1996)
!2018 = !DILocation(line: 429, column: 13, scope: !1996)
!2019 = !DILocation(line: 429, column: 18, scope: !1996)
!2020 = !DILocation(line: 430, column: 19, scope: !1996)
!2021 = !DILocation(line: 430, column: 6, scope: !1996)
!2022 = !DILocation(line: 430, column: 13, scope: !1996)
!2023 = !DILocation(line: 430, column: 17, scope: !1996)
!2024 = !DILocation(line: 431, column: 6, scope: !1996)
!2025 = !DILocation(line: 433, column: 38, scope: !1985)
!2026 = !DILocation(line: 433, column: 2, scope: !1985)
!2027 = !DILocation(line: 434, column: 6, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !1985, file: !42, line: 434, column: 6)
!2029 = !DILocation(line: 434, column: 12, scope: !2028)
!2030 = !DILocation(line: 434, column: 6, scope: !1985)
!2031 = !DILocation(line: 439, column: 6, scope: !2032)
!2032 = distinct !DILexicalBlock(scope: !2028, file: !42, line: 434, column: 24)
!2033 = !DILocation(line: 440, column: 17, scope: !2034)
!2034 = distinct !DILexicalBlock(scope: !2032, file: !42, line: 439, column: 9)
!2035 = !DILocation(line: 440, column: 9, scope: !2034)
!2036 = !DILocation(line: 440, column: 7, scope: !2034)
!2037 = !DILocation(line: 441, column: 6, scope: !2034)
!2038 = !DILocation(line: 441, column: 15, scope: !2032)
!2039 = !DILocation(line: 441, column: 19, scope: !2032)
!2040 = !DILocation(line: 441, column: 25, scope: !2032)
!2041 = !DILocation(line: 441, column: 28, scope: !2032)
!2042 = !DILocation(line: 441, column: 34, scope: !2032)
!2043 = !DILocation(line: 0, scope: !2032)
!2044 = distinct !{!2044, !2031, !2045}
!2045 = !DILocation(line: 441, column: 42, scope: !2032)
!2046 = !DILocation(line: 442, column: 10, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !2032, file: !42, line: 442, column: 10)
!2048 = !DILocation(line: 442, column: 17, scope: !2047)
!2049 = !DILocation(line: 442, column: 14, scope: !2047)
!2050 = !DILocation(line: 442, column: 10, scope: !2032)
!2051 = !DILocation(line: 444, column: 8, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !2053, file: !42, line: 444, column: 7)
!2053 = distinct !DILexicalBlock(scope: !2047, file: !42, line: 442, column: 24)
!2054 = !DILocation(line: 444, column: 7, scope: !2053)
!2055 = !DILocation(line: 445, column: 11, scope: !2056)
!2056 = distinct !DILexicalBlock(scope: !2057, file: !42, line: 445, column: 11)
!2057 = distinct !DILexicalBlock(scope: !2052, file: !42, line: 444, column: 16)
!2058 = !DILocation(line: 445, column: 11, scope: !2057)
!2059 = !DILocalVariable(name: "saved_pgrp", scope: !2060, file: !42, line: 450, type: !35)
!2060 = distinct !DILexicalBlock(scope: !2056, file: !42, line: 445, column: 31)
!2061 = !DILocation(line: 450, column: 10, scope: !2060)
!2062 = !DILocalVariable(name: "fd", scope: !2060, file: !42, line: 451, type: !33)
!2063 = !DILocation(line: 451, column: 8, scope: !2060)
!2064 = !DILocation(line: 451, column: 13, scope: !2060)
!2065 = !DILocation(line: 452, column: 8, scope: !2066)
!2066 = distinct !DILexicalBlock(scope: !2060, file: !42, line: 452, column: 8)
!2067 = !DILocation(line: 452, column: 11, scope: !2066)
!2068 = !DILocation(line: 452, column: 8, scope: !2060)
!2069 = !DILocation(line: 453, column: 31, scope: !2066)
!2070 = !DILocation(line: 453, column: 21, scope: !2066)
!2071 = !DILocation(line: 453, column: 19, scope: !2066)
!2072 = !DILocation(line: 453, column: 8, scope: !2066)
!2073 = !DILocation(line: 454, column: 13, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2060, file: !42, line: 454, column: 8)
!2075 = !DILocation(line: 454, column: 23, scope: !2074)
!2076 = !DILocation(line: 454, column: 8, scope: !2074)
!2077 = !DILocation(line: 454, column: 41, scope: !2074)
!2078 = !DILocation(line: 454, column: 8, scope: !2060)
!2079 = !DILocation(line: 455, column: 37, scope: !2080)
!2080 = distinct !DILexicalBlock(scope: !2074, file: !42, line: 454, column: 47)
!2081 = !DILocation(line: 456, column: 5, scope: !2080)
!2082 = !DILocation(line: 455, column: 8, scope: !2080)
!2083 = !DILocation(line: 457, column: 4, scope: !2080)
!2084 = !DILocation(line: 458, column: 8, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !2060, file: !42, line: 458, column: 8)
!2086 = !DILocation(line: 458, column: 11, scope: !2085)
!2087 = !DILocation(line: 458, column: 8, scope: !2060)
!2088 = !DILocation(line: 459, column: 12, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !2090, file: !42, line: 459, column: 12)
!2090 = distinct !DILexicalBlock(scope: !2085, file: !42, line: 458, column: 18)
!2091 = !DILocation(line: 459, column: 23, scope: !2089)
!2092 = !DILocation(line: 459, column: 12, scope: !2090)
!2093 = !DILocation(line: 460, column: 21, scope: !2089)
!2094 = !DILocation(line: 460, column: 25, scope: !2089)
!2095 = !DILocation(line: 460, column: 11, scope: !2089)
!2096 = !DILocation(line: 460, column: 5, scope: !2089)
!2097 = !DILocation(line: 461, column: 14, scope: !2090)
!2098 = !DILocation(line: 461, column: 8, scope: !2090)
!2099 = !DILocation(line: 462, column: 4, scope: !2090)
!2100 = !DILocation(line: 463, column: 7, scope: !2060)
!2101 = !DILocation(line: 465, column: 4, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2056, file: !42, line: 463, column: 14)
!2103 = !DILocation(line: 465, column: 11, scope: !2102)
!2104 = !DILocation(line: 465, column: 16, scope: !2102)
!2105 = !DILocation(line: 466, column: 17, scope: !2102)
!2106 = !DILocation(line: 466, column: 4, scope: !2102)
!2107 = !DILocation(line: 466, column: 11, scope: !2102)
!2108 = !DILocation(line: 466, column: 15, scope: !2102)
!2109 = !DILocation(line: 467, column: 4, scope: !2102)
!2110 = !DILocation(line: 469, column: 3, scope: !2057)
!2111 = !DILocation(line: 471, column: 6, scope: !2053)
!2112 = !DILocation(line: 472, column: 2, scope: !2032)
!2113 = !DILocation(line: 473, column: 10, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !2115, file: !42, line: 473, column: 10)
!2115 = distinct !DILexicalBlock(scope: !2028, file: !42, line: 472, column: 9)
!2116 = !DILocation(line: 473, column: 10, scope: !2115)
!2117 = !DILocation(line: 475, column: 19, scope: !2118)
!2118 = distinct !DILexicalBlock(scope: !2114, file: !42, line: 473, column: 18)
!2119 = !DILocation(line: 475, column: 3, scope: !2118)
!2120 = !DILocation(line: 476, column: 6, scope: !2118)
!2121 = !DILocation(line: 478, column: 7, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !2123, file: !42, line: 478, column: 7)
!2123 = distinct !DILexicalBlock(scope: !2114, file: !42, line: 476, column: 13)
!2124 = !DILocation(line: 478, column: 13, scope: !2122)
!2125 = !DILocation(line: 478, column: 7, scope: !2123)
!2126 = !DILocation(line: 479, column: 23, scope: !2122)
!2127 = !DILocation(line: 479, column: 7, scope: !2122)
!2128 = !DILocation(line: 480, column: 17, scope: !2129)
!2129 = distinct !DILexicalBlock(scope: !2122, file: !42, line: 480, column: 12)
!2130 = !DILocation(line: 480, column: 24, scope: !2129)
!2131 = !DILocation(line: 480, column: 12, scope: !2129)
!2132 = !DILocation(line: 480, column: 31, scope: !2129)
!2133 = !DILocation(line: 480, column: 12, scope: !2122)
!2134 = !DILocation(line: 481, column: 36, scope: !2129)
!2135 = !DILocation(line: 481, column: 43, scope: !2129)
!2136 = !DILocation(line: 481, column: 7, scope: !2129)
!2137 = !DILocation(line: 415, column: 5, scope: !1986)
!2138 = !DILocation(line: 485, column: 5, scope: !1964)
!2139 = !DILocation(line: 486, column: 1, scope: !1964)
!2140 = distinct !DISubprogram(name: "schedule_signal", scope: !42, file: !42, line: 527, type: !72, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !176)
!2141 = !DILocalVariable(name: "signo", arg: 1, scope: !2140, file: !42, line: 527, type: !33)
!2142 = !DILocation(line: 527, column: 21, scope: !2140)
!2143 = !DILocalVariable(name: "sigfwd", scope: !2140, file: !42, line: 529, type: !46)
!2144 = !DILocation(line: 529, column: 24, scope: !2140)
!2145 = !DILocation(line: 531, column: 14, scope: !2140)
!2146 = !DILocation(line: 531, column: 12, scope: !2140)
!2147 = !DILocation(line: 532, column: 20, scope: !2140)
!2148 = !DILocation(line: 532, column: 5, scope: !2140)
!2149 = !DILocation(line: 532, column: 13, scope: !2140)
!2150 = !DILocation(line: 532, column: 18, scope: !2140)
!2151 = !DILocation(line: 533, column: 5, scope: !2140)
!2152 = !DILocation(line: 533, column: 13, scope: !2140)
!2153 = !DILocation(line: 533, column: 18, scope: !2140)
!2154 = !DILocation(line: 534, column: 21, scope: !2140)
!2155 = !DILocation(line: 534, column: 5, scope: !2140)
!2156 = !DILocation(line: 534, column: 13, scope: !2140)
!2157 = !DILocation(line: 534, column: 19, scope: !2140)
!2158 = !DILocation(line: 535, column: 29, scope: !2140)
!2159 = !DILocation(line: 535, column: 5, scope: !2140)
!2160 = !DILocation(line: 536, column: 1, scope: !2140)
!2161 = distinct !DISubprogram(name: "cleanup", scope: !187, file: !187, line: 114, type: !72, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !174, retainedNodes: !176)
!2162 = !DILocalVariable(name: "gotsignal", arg: 1, scope: !2161, file: !187, line: 114, type: !33)
!2163 = !DILocation(line: 114, column: 13, scope: !2161)
!2164 = !DILocation(line: 116, column: 10, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2161, file: !187, line: 116, column: 9)
!2166 = !DILocation(line: 116, column: 9, scope: !2161)
!2167 = !DILocation(line: 117, column: 15, scope: !2165)
!2168 = !DILocation(line: 117, column: 2, scope: !2165)
!2169 = !DILocation(line: 121, column: 5, scope: !2161)
!2170 = !DILocation(line: 122, column: 1, scope: !2161)
!2171 = distinct !DISubprogram(name: "pty_setup", scope: !187, file: !187, line: 130, type: !2172, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !174, retainedNodes: !176)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{null, !550, !221, !221}
!2174 = !DILocalVariable(name: "uid", arg: 1, scope: !2171, file: !187, line: 130, type: !550)
!2175 = !DILocation(line: 130, column: 17, scope: !2171)
!2176 = !DILocalVariable(name: "tty", arg: 2, scope: !2171, file: !187, line: 130, type: !221)
!2177 = !DILocation(line: 130, column: 34, scope: !2171)
!2178 = !DILocalVariable(name: "utmp_user", arg: 3, scope: !2171, file: !187, line: 130, type: !221)
!2179 = !DILocation(line: 130, column: 51, scope: !2171)
!2180 = !DILocation(line: 132, column: 27, scope: !2171)
!2181 = !DILocation(line: 132, column: 25, scope: !2171)
!2182 = !DILocation(line: 133, column: 9, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2171, file: !187, line: 133, column: 9)
!2184 = !DILocation(line: 133, column: 29, scope: !2183)
!2185 = !DILocation(line: 133, column: 9, scope: !2171)
!2186 = !DILocation(line: 135, column: 36, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !2188, file: !187, line: 134, column: 6)
!2188 = distinct !DILexicalBlock(scope: !2183, file: !187, line: 133, column: 36)
!2189 = !DILocation(line: 134, column: 7, scope: !2187)
!2190 = !DILocation(line: 134, column: 6, scope: !2188)
!2191 = !DILocation(line: 136, column: 15, scope: !2187)
!2192 = !DILocation(line: 136, column: 6, scope: !2187)
!2193 = !DILocation(line: 138, column: 6, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2188, file: !187, line: 138, column: 6)
!2195 = !DILocation(line: 138, column: 16, scope: !2194)
!2196 = !DILocation(line: 138, column: 6, scope: !2188)
!2197 = !DILocation(line: 139, column: 17, scope: !2194)
!2198 = !DILocation(line: 139, column: 33, scope: !2194)
!2199 = !DILocation(line: 139, column: 52, scope: !2194)
!2200 = !DILocation(line: 139, column: 6, scope: !2194)
!2201 = !DILocation(line: 140, column: 5, scope: !2188)
!2202 = !DILocation(line: 141, column: 1, scope: !2171)
!2203 = distinct !DISubprogram(name: "suspend_parent", scope: !187, file: !187, line: 283, type: !609, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !174, retainedNodes: !176)
!2204 = !DILocalVariable(name: "signo", arg: 1, scope: !2203, file: !187, line: 283, type: !33)
!2205 = !DILocation(line: 283, column: 20, scope: !2203)
!2206 = !DILocalVariable(name: "sa", scope: !2203, file: !187, line: 285, type: !2207)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigaction_t", file: !61, line: 162, baseType: !2208)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !63, line: 27, size: 1216, elements: !2209)
!2209 = !{!2210, !2285, !2286, !2287}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !2208, file: !63, line: 38, baseType: !2211, size: 64)
!2211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2208, file: !63, line: 31, size: 64, elements: !2212)
!2212 = !{!2213, !2214}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2211, file: !63, line: 34, baseType: !69, size: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !2211, file: !63, line: 36, baseType: !2215, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 64)
!2216 = !DISubroutineType(types: !2217)
!2217 = !{null, !33, !2218, !19}
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !80, line: 124, baseType: !2220)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !80, line: 36, size: 1024, elements: !2221)
!2221 = !{!2222, !2223, !2224, !2225, !2226}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2220, file: !80, line: 38, baseType: !33, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2220, file: !80, line: 40, baseType: !33, size: 32, offset: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2220, file: !80, line: 42, baseType: !33, size: 32, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2220, file: !80, line: 48, baseType: !33, size: 32, offset: 96)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2220, file: !80, line: 123, baseType: !2227, size: 896, offset: 128)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2220, file: !80, line: 51, size: 896, elements: !2228)
!2228 = !{!2229, !2230, !2235, !2246, !2252, !2260, !2274, !2279}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2227, file: !80, line: 53, baseType: !91, size: 896)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2227, file: !80, line: 60, baseType: !2231, size: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !80, line: 56, size: 64, elements: !2232)
!2232 = !{!2233, !2234}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !2231, file: !80, line: 58, baseType: !37, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !2231, file: !80, line: 59, baseType: !99, size: 32, offset: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2227, file: !80, line: 68, baseType: !2236, size: 128)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !80, line: 63, size: 128, elements: !2237)
!2237 = !{!2238, !2239, !2240}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !2236, file: !80, line: 65, baseType: !33, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !2236, file: !80, line: 66, baseType: !33, size: 32, offset: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !2236, file: !80, line: 67, baseType: !2241, size: 64, offset: 64)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigval_t", file: !107, line: 30, baseType: !2242)
!2242 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !107, line: 24, size: 64, elements: !2243)
!2243 = !{!2244, !2245}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2242, file: !107, line: 26, baseType: !33, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2242, file: !107, line: 27, baseType: !19, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2227, file: !80, line: 76, baseType: !2247, size: 128)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !80, line: 71, size: 128, elements: !2248)
!2248 = !{!2249, !2250, !2251}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !2247, file: !80, line: 73, baseType: !37, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !2247, file: !80, line: 74, baseType: !99, size: 32, offset: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !2247, file: !80, line: 75, baseType: !2241, size: 64, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2227, file: !80, line: 86, baseType: !2253, size: 256)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !80, line: 79, size: 256, elements: !2254)
!2254 = !{!2255, !2256, !2257, !2258, !2259}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !2253, file: !80, line: 81, baseType: !37, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !2253, file: !80, line: 82, baseType: !99, size: 32, offset: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !2253, file: !80, line: 83, baseType: !33, size: 32, offset: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !2253, file: !80, line: 84, baseType: !125, size: 64, offset: 128)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !2253, file: !80, line: 85, baseType: !125, size: 64, offset: 192)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2227, file: !80, line: 105, baseType: !2261, size: 256)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !80, line: 89, size: 256, elements: !2262)
!2262 = !{!2263, !2264, !2265}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !2261, file: !80, line: 91, baseType: !19, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !2261, file: !80, line: 93, baseType: !132, size: 16, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_bounds", scope: !2261, file: !80, line: 104, baseType: !2266, size: 128, offset: 128)
!2266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2261, file: !80, line: 94, size: 128, elements: !2267)
!2267 = !{!2268, !2273}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2266, file: !80, line: 101, baseType: !2269, size: 128)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2266, file: !80, line: 97, size: 128, elements: !2270)
!2270 = !{!2271, !2272}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2269, file: !80, line: 99, baseType: !19, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2269, file: !80, line: 100, baseType: !19, size: 64, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2266, file: !80, line: 103, baseType: !142, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2227, file: !80, line: 112, baseType: !2275, size: 128)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !80, line: 108, size: 128, elements: !2276)
!2276 = !{!2277, !2278}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !2275, file: !80, line: 110, baseType: !30, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !2275, file: !80, line: 111, baseType: !33, size: 32, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2227, file: !80, line: 121, baseType: !2280, size: 128)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !80, line: 116, size: 128, elements: !2281)
!2281 = !{!2282, !2283, !2284}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2280, file: !80, line: 118, baseType: !19, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2280, file: !80, line: 119, baseType: !33, size: 32, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2280, file: !80, line: 120, baseType: !7, size: 32, offset: 96)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2208, file: !63, line: 46, baseType: !203, size: 1024, offset: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2208, file: !63, line: 49, baseType: !33, size: 32, offset: 1088)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2208, file: !63, line: 52, baseType: !164, size: 64, offset: 1152)
!2288 = !DILocation(line: 285, column: 17, scope: !2203)
!2289 = !DILocalVariable(name: "osa", scope: !2203, file: !187, line: 285, type: !2207)
!2290 = !DILocation(line: 285, column: 21, scope: !2203)
!2291 = !DILocalVariable(name: "n", scope: !2203, file: !187, line: 286, type: !33)
!2292 = !DILocation(line: 286, column: 9, scope: !2203)
!2293 = !DILocalVariable(name: "oldmode", scope: !2203, file: !187, line: 286, type: !33)
!2294 = !DILocation(line: 286, column: 12, scope: !2203)
!2295 = !DILocation(line: 286, column: 22, scope: !2203)
!2296 = !DILocalVariable(name: "rval", scope: !2203, file: !187, line: 286, type: !33)
!2297 = !DILocation(line: 286, column: 31, scope: !2203)
!2298 = !DILocation(line: 288, column: 13, scope: !2203)
!2299 = !DILocation(line: 288, column: 5, scope: !2203)
!2300 = !DILocation(line: 295, column: 7, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2302, file: !187, line: 295, column: 6)
!2302 = distinct !DILexicalBlock(scope: !2203, file: !187, line: 288, column: 20)
!2303 = !DILocation(line: 295, column: 6, scope: !2302)
!2304 = !DILocation(line: 296, column: 6, scope: !2301)
!2305 = !DILocation(line: 297, column: 6, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2302, file: !187, line: 297, column: 6)
!2307 = !DILocation(line: 297, column: 6, scope: !2302)
!2308 = !DILocation(line: 298, column: 10, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2310, file: !187, line: 298, column: 10)
!2310 = distinct !DILexicalBlock(scope: !2306, file: !187, line: 297, column: 18)
!2311 = !DILocation(line: 298, column: 18, scope: !2309)
!2312 = !DILocation(line: 298, column: 10, scope: !2310)
!2313 = !DILocation(line: 299, column: 3, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2309, file: !187, line: 298, column: 31)
!2315 = !DILocation(line: 300, column: 20, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2314, file: !187, line: 299, column: 6)
!2317 = !DILocation(line: 300, column: 11, scope: !2316)
!2318 = !DILocation(line: 300, column: 9, scope: !2316)
!2319 = !DILocation(line: 301, column: 3, scope: !2316)
!2320 = !DILocation(line: 301, column: 13, scope: !2314)
!2321 = !DILocation(line: 301, column: 15, scope: !2314)
!2322 = !DILocation(line: 301, column: 18, scope: !2314)
!2323 = !DILocation(line: 301, column: 24, scope: !2314)
!2324 = !DILocation(line: 0, scope: !2314)
!2325 = distinct !{!2325, !2313, !2326}
!2326 = !DILocation(line: 301, column: 32, scope: !2314)
!2327 = !DILocation(line: 302, column: 11, scope: !2314)
!2328 = !DILocation(line: 303, column: 6, scope: !2314)
!2329 = !DILocation(line: 304, column: 11, scope: !2310)
!2330 = !DILocation(line: 305, column: 6, scope: !2310)
!2331 = !DILocation(line: 307, column: 10, scope: !2302)
!2332 = !DILocation(line: 307, column: 2, scope: !2302)
!2333 = !DILocation(line: 312, column: 2, scope: !2302)
!2334 = !DILocation(line: 315, column: 6, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2302, file: !187, line: 315, column: 6)
!2336 = !DILocation(line: 315, column: 14, scope: !2335)
!2337 = !DILocation(line: 315, column: 6, scope: !2302)
!2338 = !DILocation(line: 316, column: 6, scope: !2339)
!2339 = distinct !DILexicalBlock(scope: !2335, file: !187, line: 315, column: 30)
!2340 = !DILocation(line: 317, column: 20, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2339, file: !187, line: 316, column: 9)
!2342 = !DILocation(line: 317, column: 7, scope: !2341)
!2343 = !DILocation(line: 317, column: 5, scope: !2341)
!2344 = !DILocation(line: 318, column: 6, scope: !2341)
!2345 = !DILocation(line: 318, column: 16, scope: !2339)
!2346 = !DILocation(line: 318, column: 18, scope: !2339)
!2347 = !DILocation(line: 318, column: 21, scope: !2339)
!2348 = !DILocation(line: 318, column: 27, scope: !2339)
!2349 = !DILocation(line: 0, scope: !2339)
!2350 = distinct !{!2350, !2338, !2351}
!2351 = !DILocation(line: 318, column: 35, scope: !2339)
!2352 = !DILocation(line: 319, column: 2, scope: !2339)
!2353 = !DILocation(line: 322, column: 5, scope: !2302)
!2354 = !DILocation(line: 322, column: 16, scope: !2302)
!2355 = !DILocation(line: 323, column: 12, scope: !2302)
!2356 = !DILocation(line: 323, column: 2, scope: !2302)
!2357 = !DILocation(line: 324, column: 34, scope: !2302)
!2358 = !DILocation(line: 324, column: 2, scope: !2302)
!2359 = !DILocation(line: 325, column: 13, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2302, file: !187, line: 325, column: 6)
!2361 = !DILocation(line: 325, column: 20, scope: !2360)
!2362 = !DILocation(line: 325, column: 6, scope: !2360)
!2363 = !DILocation(line: 325, column: 27, scope: !2360)
!2364 = !DILocation(line: 325, column: 6, scope: !2302)
!2365 = !DILocation(line: 326, column: 37, scope: !2360)
!2366 = !DILocation(line: 326, column: 44, scope: !2360)
!2367 = !DILocation(line: 326, column: 6, scope: !2360)
!2368 = !DILocation(line: 329, column: 2, scope: !2302)
!2369 = !DILocation(line: 336, column: 6, scope: !2302)
!2370 = !DILocation(line: 336, column: 48, scope: !2302)
!2371 = !DILocation(line: 336, column: 57, scope: !2302)
!2372 = !DILocation(line: 335, column: 2, scope: !2302)
!2373 = !DILocation(line: 338, column: 6, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2302, file: !187, line: 338, column: 6)
!2375 = !DILocation(line: 338, column: 14, scope: !2374)
!2376 = !DILocation(line: 338, column: 6, scope: !2302)
!2377 = !DILocation(line: 339, column: 10, scope: !2378)
!2378 = distinct !DILexicalBlock(scope: !2379, file: !187, line: 339, column: 10)
!2379 = distinct !DILexicalBlock(scope: !2374, file: !187, line: 338, column: 30)
!2380 = !DILocation(line: 339, column: 10, scope: !2379)
!2381 = !DILocation(line: 341, column: 3, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2378, file: !187, line: 339, column: 22)
!2383 = !DILocation(line: 342, column: 20, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2382, file: !187, line: 341, column: 6)
!2385 = !DILocation(line: 342, column: 11, scope: !2384)
!2386 = !DILocation(line: 342, column: 9, scope: !2384)
!2387 = !DILocation(line: 343, column: 3, scope: !2384)
!2388 = !DILocation(line: 343, column: 13, scope: !2382)
!2389 = !DILocation(line: 343, column: 15, scope: !2382)
!2390 = !DILocation(line: 343, column: 18, scope: !2382)
!2391 = !DILocation(line: 343, column: 24, scope: !2382)
!2392 = !DILocation(line: 0, scope: !2382)
!2393 = distinct !{!2393, !2381, !2394}
!2394 = !DILocation(line: 343, column: 32, scope: !2382)
!2395 = !DILocation(line: 344, column: 6, scope: !2382)
!2396 = !DILocation(line: 346, column: 11, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2378, file: !187, line: 344, column: 13)
!2398 = !DILocation(line: 348, column: 2, scope: !2379)
!2399 = !DILocation(line: 350, column: 12, scope: !2302)
!2400 = !DILocation(line: 350, column: 2, scope: !2302)
!2401 = !DILocation(line: 351, column: 9, scope: !2302)
!2402 = !DILocation(line: 351, column: 17, scope: !2302)
!2403 = !DILocation(line: 351, column: 7, scope: !2302)
!2404 = !DILocation(line: 352, column: 2, scope: !2302)
!2405 = !DILocation(line: 355, column: 12, scope: !2203)
!2406 = !DILocation(line: 355, column: 5, scope: !2203)
!2407 = distinct !DISubprogram(name: "check_foreground", scope: !187, file: !187, line: 264, type: !165, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!2408 = !DILocation(line: 266, column: 9, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2407, file: !187, line: 266, column: 9)
!2410 = !DILocation(line: 266, column: 29, scope: !2409)
!2411 = !DILocation(line: 266, column: 9, scope: !2407)
!2412 = !DILocation(line: 267, column: 25, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2409, file: !187, line: 266, column: 36)
!2414 = !DILocation(line: 267, column: 15, scope: !2413)
!2415 = !DILocation(line: 267, column: 49, scope: !2413)
!2416 = !DILocation(line: 267, column: 46, scope: !2413)
!2417 = !DILocation(line: 267, column: 13, scope: !2413)
!2418 = !DILocation(line: 268, column: 6, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2413, file: !187, line: 268, column: 6)
!2420 = !DILocation(line: 268, column: 17, scope: !2419)
!2421 = !DILocation(line: 268, column: 21, scope: !2419)
!2422 = !DILocation(line: 268, column: 6, scope: !2413)
!2423 = !DILocation(line: 269, column: 20, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2425, file: !187, line: 269, column: 10)
!2425 = distinct !DILexicalBlock(scope: !2419, file: !187, line: 268, column: 38)
!2426 = !DILocation(line: 269, column: 41, scope: !2424)
!2427 = !DILocation(line: 269, column: 10, scope: !2424)
!2428 = !DILocation(line: 269, column: 10, scope: !2425)
!2429 = !DILocation(line: 270, column: 19, scope: !2430)
!2430 = distinct !DILexicalBlock(scope: !2424, file: !187, line: 269, column: 61)
!2431 = !DILocation(line: 271, column: 16, scope: !2430)
!2432 = !DILocation(line: 271, column: 37, scope: !2430)
!2433 = !DILocation(line: 271, column: 3, scope: !2430)
!2434 = !DILocation(line: 272, column: 6, scope: !2430)
!2435 = !DILocation(line: 273, column: 2, scope: !2425)
!2436 = !DILocation(line: 274, column: 5, scope: !2413)
!2437 = !DILocation(line: 275, column: 1, scope: !2407)
!2438 = distinct !DISubprogram(name: "flush_output", scope: !187, file: !187, line: 1018, type: !165, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!2439 = !DILocalVariable(name: "iob", scope: !2438, file: !187, line: 1020, type: !209)
!2440 = !DILocation(line: 1020, column: 23, scope: !2438)
!2441 = !DILocalVariable(name: "tv", scope: !2438, file: !187, line: 1021, type: !2442)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !2443, line: 8, size: 128, elements: !2444)
!2443 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "")
!2444 = !{!2445, !2447}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2442, file: !2443, line: 10, baseType: !2446, size: 64)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !38, line: 160, baseType: !30)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !2442, file: !2443, line: 11, baseType: !2448, size: 64, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !38, line: 162, baseType: !30)
!2449 = !DILocation(line: 1021, column: 20, scope: !2438)
!2450 = !DILocalVariable(name: "fdsr", scope: !2438, file: !187, line: 1022, type: !179)
!2451 = !DILocation(line: 1022, column: 13, scope: !2438)
!2452 = !DILocalVariable(name: "fdsw", scope: !2438, file: !187, line: 1022, type: !179)
!2453 = !DILocation(line: 1022, column: 20, scope: !2438)
!2454 = !DILocalVariable(name: "nready", scope: !2438, file: !187, line: 1023, type: !33)
!2455 = !DILocation(line: 1023, column: 9, scope: !2438)
!2456 = !DILocalVariable(name: "nwriters", scope: !2438, file: !187, line: 1023, type: !33)
!2457 = !DILocation(line: 1023, column: 17, scope: !2438)
!2458 = !DILocalVariable(name: "maxfd", scope: !2438, file: !187, line: 1023, type: !33)
!2459 = !DILocation(line: 1023, column: 27, scope: !2438)
!2460 = !DILocation(line: 1026, column: 16, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2438, file: !187, line: 1026, column: 5)
!2462 = !DILocation(line: 1026, column: 14, scope: !2461)
!2463 = !DILocation(line: 1026, column: 10, scope: !2461)
!2464 = !DILocation(line: 1026, column: 24, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2461, file: !187, line: 1026, column: 5)
!2466 = !DILocation(line: 1026, column: 5, scope: !2461)
!2467 = !DILocation(line: 1027, column: 6, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2469, file: !187, line: 1027, column: 6)
!2469 = distinct !DILexicalBlock(scope: !2465, file: !187, line: 1026, column: 46)
!2470 = !DILocation(line: 1027, column: 11, scope: !2468)
!2471 = !DILocation(line: 1027, column: 17, scope: !2468)
!2472 = !DILocation(line: 1027, column: 15, scope: !2468)
!2473 = !DILocation(line: 1027, column: 6, scope: !2469)
!2474 = !DILocation(line: 1028, column: 14, scope: !2468)
!2475 = !DILocation(line: 1028, column: 19, scope: !2468)
!2476 = !DILocation(line: 1028, column: 12, scope: !2468)
!2477 = !DILocation(line: 1028, column: 6, scope: !2468)
!2478 = !DILocation(line: 1029, column: 6, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2469, file: !187, line: 1029, column: 6)
!2480 = !DILocation(line: 1029, column: 11, scope: !2479)
!2481 = !DILocation(line: 1029, column: 17, scope: !2479)
!2482 = !DILocation(line: 1029, column: 15, scope: !2479)
!2483 = !DILocation(line: 1029, column: 6, scope: !2469)
!2484 = !DILocation(line: 1030, column: 14, scope: !2479)
!2485 = !DILocation(line: 1030, column: 19, scope: !2479)
!2486 = !DILocation(line: 1030, column: 12, scope: !2479)
!2487 = !DILocation(line: 1030, column: 6, scope: !2479)
!2488 = !DILocation(line: 1031, column: 5, scope: !2469)
!2489 = !DILocation(line: 1026, column: 35, scope: !2465)
!2490 = !DILocation(line: 1026, column: 40, scope: !2465)
!2491 = !DILocation(line: 1026, column: 33, scope: !2465)
!2492 = !DILocation(line: 1026, column: 5, scope: !2465)
!2493 = distinct !{!2493, !2466, !2494}
!2494 = !DILocation(line: 1031, column: 5, scope: !2461)
!2495 = !DILocation(line: 1032, column: 9, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2438, file: !187, line: 1032, column: 9)
!2497 = !DILocation(line: 1032, column: 15, scope: !2496)
!2498 = !DILocation(line: 1032, column: 9, scope: !2438)
!2499 = !DILocation(line: 1033, column: 2, scope: !2496)
!2500 = !DILocation(line: 1035, column: 31, scope: !2438)
!2501 = !DILocation(line: 1035, column: 22, scope: !2438)
!2502 = !DILocation(line: 1035, column: 12, scope: !2438)
!2503 = !DILocation(line: 1035, column: 10, scope: !2438)
!2504 = !DILocation(line: 1036, column: 31, scope: !2438)
!2505 = !DILocation(line: 1036, column: 22, scope: !2438)
!2506 = !DILocation(line: 1036, column: 12, scope: !2438)
!2507 = !DILocation(line: 1036, column: 10, scope: !2438)
!2508 = !DILocation(line: 1037, column: 5, scope: !2438)
!2509 = !DILocation(line: 1038, column: 13, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2511, file: !187, line: 1037, column: 14)
!2511 = distinct !DILexicalBlock(scope: !2512, file: !187, line: 1037, column: 5)
!2512 = distinct !DILexicalBlock(scope: !2438, file: !187, line: 1037, column: 5)
!2513 = !DILocation(line: 1038, column: 19, scope: !2510)
!2514 = !DILocation(line: 1038, column: 47, scope: !2510)
!2515 = !DILocation(line: 1038, column: 2, scope: !2510)
!2516 = !DILocation(line: 1039, column: 13, scope: !2510)
!2517 = !DILocation(line: 1039, column: 19, scope: !2510)
!2518 = !DILocation(line: 1039, column: 47, scope: !2510)
!2519 = !DILocation(line: 1039, column: 2, scope: !2510)
!2520 = !DILocation(line: 1041, column: 11, scope: !2510)
!2521 = !DILocation(line: 1042, column: 13, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2510, file: !187, line: 1042, column: 2)
!2523 = !DILocation(line: 1042, column: 11, scope: !2522)
!2524 = !DILocation(line: 1042, column: 7, scope: !2522)
!2525 = !DILocation(line: 1042, column: 21, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2522, file: !187, line: 1042, column: 2)
!2527 = !DILocation(line: 1042, column: 2, scope: !2522)
!2528 = !DILocation(line: 1044, column: 10, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2530, file: !187, line: 1044, column: 10)
!2530 = distinct !DILexicalBlock(scope: !2526, file: !187, line: 1042, column: 43)
!2531 = !DILocation(line: 1044, column: 30, scope: !2529)
!2532 = !DILocation(line: 1044, column: 36, scope: !2529)
!2533 = !DILocation(line: 1044, column: 39, scope: !2529)
!2534 = !DILocation(line: 1044, column: 44, scope: !2529)
!2535 = !DILocation(line: 1044, column: 51, scope: !2529)
!2536 = !DILocation(line: 1044, column: 48, scope: !2529)
!2537 = !DILocation(line: 1044, column: 10, scope: !2530)
!2538 = !DILocation(line: 1045, column: 3, scope: !2529)
!2539 = !DILocation(line: 1046, column: 10, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2530, file: !187, line: 1046, column: 10)
!2541 = !DILocation(line: 1046, column: 15, scope: !2540)
!2542 = !DILocation(line: 1046, column: 19, scope: !2540)
!2543 = !DILocation(line: 1046, column: 25, scope: !2540)
!2544 = !DILocation(line: 1046, column: 28, scope: !2540)
!2545 = !DILocation(line: 1046, column: 33, scope: !2540)
!2546 = !DILocation(line: 1046, column: 37, scope: !2540)
!2547 = !DILocation(line: 1046, column: 10, scope: !2530)
!2548 = !DILocation(line: 1047, column: 7, scope: !2540)
!2549 = !DILocation(line: 1048, column: 10, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2530, file: !187, line: 1048, column: 10)
!2551 = !DILocation(line: 1048, column: 15, scope: !2550)
!2552 = !DILocation(line: 1048, column: 22, scope: !2550)
!2553 = !DILocation(line: 1048, column: 27, scope: !2550)
!2554 = !DILocation(line: 1048, column: 19, scope: !2550)
!2555 = !DILocation(line: 1048, column: 10, scope: !2530)
!2556 = !DILocation(line: 1049, column: 14, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2550, file: !187, line: 1048, column: 32)
!2558 = !DILocation(line: 1049, column: 19, scope: !2557)
!2559 = !DILocation(line: 1049, column: 23, scope: !2557)
!2560 = !DILocation(line: 1049, column: 3, scope: !2557)
!2561 = !DILocation(line: 1049, column: 8, scope: !2557)
!2562 = !DILocation(line: 1049, column: 12, scope: !2557)
!2563 = !DILocation(line: 1051, column: 7, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2557, file: !187, line: 1051, column: 7)
!2565 = !DILocation(line: 1051, column: 12, scope: !2564)
!2566 = !DILocation(line: 1051, column: 16, scope: !2564)
!2567 = !DILocation(line: 1051, column: 7, scope: !2557)
!2568 = !DILocation(line: 1052, column: 18, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2564, file: !187, line: 1051, column: 23)
!2570 = !DILocation(line: 1052, column: 23, scope: !2569)
!2571 = !DILocation(line: 1052, column: 7, scope: !2569)
!2572 = !DILocation(line: 1053, column: 7, scope: !2569)
!2573 = !DILocation(line: 1053, column: 12, scope: !2569)
!2574 = !DILocation(line: 1053, column: 16, scope: !2569)
!2575 = !DILocation(line: 1054, column: 3, scope: !2569)
!2576 = !DILocation(line: 1055, column: 6, scope: !2557)
!2577 = !DILocation(line: 1056, column: 10, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2530, file: !187, line: 1056, column: 10)
!2579 = !DILocation(line: 1056, column: 15, scope: !2578)
!2580 = !DILocation(line: 1056, column: 19, scope: !2578)
!2581 = !DILocation(line: 1056, column: 10, scope: !2530)
!2582 = !DILocation(line: 1057, column: 7, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !2584, file: !187, line: 1057, column: 7)
!2584 = distinct !DILexicalBlock(scope: !2578, file: !187, line: 1056, column: 26)
!2585 = !DILocation(line: 1057, column: 12, scope: !2583)
!2586 = !DILocation(line: 1057, column: 16, scope: !2583)
!2587 = !DILocation(line: 1057, column: 7, scope: !2584)
!2588 = !DILocation(line: 1058, column: 7, scope: !2583)
!2589 = !DILocation(line: 1059, column: 6, scope: !2584)
!2590 = !DILocation(line: 1060, column: 10, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2530, file: !187, line: 1060, column: 10)
!2592 = !DILocation(line: 1060, column: 15, scope: !2591)
!2593 = !DILocation(line: 1060, column: 19, scope: !2591)
!2594 = !DILocation(line: 1060, column: 10, scope: !2530)
!2595 = !DILocation(line: 1061, column: 7, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !2597, file: !187, line: 1061, column: 7)
!2597 = distinct !DILexicalBlock(scope: !2591, file: !187, line: 1060, column: 26)
!2598 = !DILocation(line: 1061, column: 12, scope: !2596)
!2599 = !DILocation(line: 1061, column: 18, scope: !2596)
!2600 = !DILocation(line: 1061, column: 23, scope: !2596)
!2601 = !DILocation(line: 1061, column: 16, scope: !2596)
!2602 = !DILocation(line: 1061, column: 7, scope: !2597)
!2603 = !DILocation(line: 1062, column: 15, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2596, file: !187, line: 1061, column: 28)
!2605 = !DILocation(line: 1063, column: 7, scope: !2604)
!2606 = !DILocation(line: 1064, column: 3, scope: !2604)
!2607 = !DILocation(line: 1065, column: 6, scope: !2597)
!2608 = !DILocation(line: 1066, column: 2, scope: !2530)
!2609 = !DILocation(line: 1042, column: 32, scope: !2526)
!2610 = !DILocation(line: 1042, column: 37, scope: !2526)
!2611 = !DILocation(line: 1042, column: 30, scope: !2526)
!2612 = !DILocation(line: 1042, column: 2, scope: !2526)
!2613 = distinct !{!2613, !2527, !2614}
!2614 = !DILocation(line: 1066, column: 2, scope: !2522)
!2615 = !DILocation(line: 1069, column: 5, scope: !2510)
!2616 = !DILocation(line: 1069, column: 12, scope: !2510)
!2617 = !DILocation(line: 1070, column: 5, scope: !2510)
!2618 = !DILocation(line: 1070, column: 13, scope: !2510)
!2619 = !DILocation(line: 1071, column: 18, scope: !2510)
!2620 = !DILocation(line: 1071, column: 24, scope: !2510)
!2621 = !DILocation(line: 1071, column: 29, scope: !2510)
!2622 = !DILocation(line: 1071, column: 35, scope: !2510)
!2623 = !DILocation(line: 1071, column: 47, scope: !2510)
!2624 = !DILocation(line: 1071, column: 11, scope: !2510)
!2625 = !DILocation(line: 1071, column: 9, scope: !2510)
!2626 = !DILocation(line: 1072, column: 6, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2510, file: !187, line: 1072, column: 6)
!2628 = !DILocation(line: 1072, column: 13, scope: !2627)
!2629 = !DILocation(line: 1072, column: 6, scope: !2510)
!2630 = !DILocation(line: 1073, column: 10, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2632, file: !187, line: 1073, column: 10)
!2632 = distinct !DILexicalBlock(scope: !2627, file: !187, line: 1072, column: 19)
!2633 = !DILocation(line: 1073, column: 17, scope: !2631)
!2634 = !DILocation(line: 1073, column: 10, scope: !2632)
!2635 = !DILocation(line: 1074, column: 3, scope: !2631)
!2636 = !DILocation(line: 1075, column: 10, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2632, file: !187, line: 1075, column: 10)
!2638 = !DILocation(line: 1075, column: 16, scope: !2637)
!2639 = !DILocation(line: 1075, column: 10, scope: !2632)
!2640 = !DILocation(line: 1076, column: 3, scope: !2637)
!2641 = distinct !{!2641, !2642, !2643}
!2642 = !DILocation(line: 1037, column: 5, scope: !2512)
!2643 = !DILocation(line: 1081, column: 5, scope: !2512)
!2644 = !DILocation(line: 1077, column: 15, scope: !2632)
!2645 = !DILocation(line: 1077, column: 6, scope: !2632)
!2646 = !DILocation(line: 1079, column: 17, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2510, file: !187, line: 1079, column: 6)
!2648 = !DILocation(line: 1079, column: 23, scope: !2647)
!2649 = !DILocation(line: 1079, column: 6, scope: !2647)
!2650 = !DILocation(line: 1079, column: 35, scope: !2647)
!2651 = !DILocation(line: 1079, column: 6, scope: !2510)
!2652 = !DILocation(line: 1080, column: 6, scope: !2647)
!2653 = !DILocation(line: 1037, column: 5, scope: !2511)
!2654 = !DILocation(line: 1082, column: 11, scope: !2438)
!2655 = !DILocation(line: 1082, column: 5, scope: !2438)
!2656 = !DILocation(line: 1083, column: 11, scope: !2438)
!2657 = !DILocation(line: 1083, column: 5, scope: !2438)
!2658 = !DILocation(line: 1084, column: 1, scope: !2438)
!2659 = distinct !DISubprogram(name: "safe_close", scope: !187, file: !187, line: 1165, type: !609, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!2660 = !DILocalVariable(name: "fd", arg: 1, scope: !2659, file: !187, line: 1165, type: !33)
!2661 = !DILocation(line: 1165, column: 16, scope: !2659)
!2662 = !DILocation(line: 1168, column: 9, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2659, file: !187, line: 1168, column: 9)
!2664 = !DILocation(line: 1168, column: 12, scope: !2663)
!2665 = !DILocation(line: 1168, column: 16, scope: !2663)
!2666 = !DILocation(line: 1168, column: 19, scope: !2663)
!2667 = !DILocation(line: 1168, column: 25, scope: !2663)
!2668 = !DILocation(line: 1168, column: 22, scope: !2663)
!2669 = !DILocation(line: 1168, column: 9, scope: !2659)
!2670 = !DILocation(line: 1169, column: 2, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2663, file: !187, line: 1168, column: 46)
!2672 = !DILocation(line: 1169, column: 8, scope: !2671)
!2673 = !DILocation(line: 1170, column: 2, scope: !2671)
!2674 = !DILocation(line: 1172, column: 18, scope: !2659)
!2675 = !DILocation(line: 1172, column: 12, scope: !2659)
!2676 = !DILocation(line: 1172, column: 5, scope: !2659)
!2677 = !DILocation(line: 1173, column: 1, scope: !2659)
!2678 = distinct !DISubprogram(name: "perform_io", scope: !187, file: !187, line: 400, type: !2679, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !174, retainedNodes: !176)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{!33, !179, !179, !2681}
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "command_status", file: !699, line: 150, size: 64, elements: !2683)
!2683 = !{!2684, !2685}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2682, file: !699, line: 155, baseType: !33, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2682, file: !699, line: 156, baseType: !33, size: 32, offset: 32)
!2686 = !DILocalVariable(name: "fdsr", arg: 1, scope: !2678, file: !187, line: 400, type: !179)
!2687 = !DILocation(line: 400, column: 20, scope: !2678)
!2688 = !DILocalVariable(name: "fdsw", arg: 2, scope: !2678, file: !187, line: 400, type: !179)
!2689 = !DILocation(line: 400, column: 34, scope: !2678)
!2690 = !DILocalVariable(name: "cstat", arg: 3, scope: !2678, file: !187, line: 400, type: !2681)
!2691 = !DILocation(line: 400, column: 63, scope: !2678)
!2692 = !DILocalVariable(name: "iob", scope: !2678, file: !187, line: 402, type: !209)
!2693 = !DILocation(line: 402, column: 23, scope: !2678)
!2694 = !DILocalVariable(name: "n", scope: !2678, file: !187, line: 403, type: !33)
!2695 = !DILocation(line: 403, column: 9, scope: !2678)
!2696 = !DILocalVariable(name: "errors", scope: !2678, file: !187, line: 403, type: !33)
!2697 = !DILocation(line: 403, column: 12, scope: !2678)
!2698 = !DILocation(line: 405, column: 16, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2678, file: !187, line: 405, column: 5)
!2700 = !DILocation(line: 405, column: 14, scope: !2699)
!2701 = !DILocation(line: 405, column: 10, scope: !2699)
!2702 = !DILocation(line: 405, column: 24, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2699, file: !187, line: 405, column: 5)
!2704 = !DILocation(line: 405, column: 5, scope: !2699)
!2705 = !DILocation(line: 406, column: 6, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2707, file: !187, line: 406, column: 6)
!2707 = distinct !DILexicalBlock(scope: !2703, file: !187, line: 405, column: 46)
!2708 = !DILocation(line: 406, column: 11, scope: !2706)
!2709 = !DILocation(line: 406, column: 15, scope: !2706)
!2710 = !DILocation(line: 406, column: 21, scope: !2706)
!2711 = !DILocation(line: 406, column: 24, scope: !2706)
!2712 = !DILocation(line: 406, column: 6, scope: !2707)
!2713 = !DILocation(line: 407, column: 6, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2706, file: !187, line: 406, column: 50)
!2715 = !DILocation(line: 408, column: 12, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2714, file: !187, line: 407, column: 9)
!2717 = !DILocation(line: 408, column: 17, scope: !2716)
!2718 = !DILocation(line: 408, column: 22, scope: !2716)
!2719 = !DILocation(line: 408, column: 27, scope: !2716)
!2720 = !DILocation(line: 408, column: 33, scope: !2716)
!2721 = !DILocation(line: 408, column: 38, scope: !2716)
!2722 = !DILocation(line: 408, column: 31, scope: !2716)
!2723 = !DILocation(line: 409, column: 26, scope: !2716)
!2724 = !DILocation(line: 409, column: 31, scope: !2716)
!2725 = !DILocation(line: 409, column: 24, scope: !2716)
!2726 = !DILocation(line: 408, column: 7, scope: !2716)
!2727 = !DILocation(line: 408, column: 5, scope: !2716)
!2728 = !DILocation(line: 410, column: 6, scope: !2716)
!2729 = !DILocation(line: 410, column: 15, scope: !2714)
!2730 = !DILocation(line: 410, column: 17, scope: !2714)
!2731 = !DILocation(line: 410, column: 23, scope: !2714)
!2732 = !DILocation(line: 410, column: 26, scope: !2714)
!2733 = !DILocation(line: 410, column: 32, scope: !2714)
!2734 = !DILocation(line: 0, scope: !2714)
!2735 = distinct !{!2735, !2713, !2736}
!2736 = !DILocation(line: 410, column: 40, scope: !2714)
!2737 = !DILocation(line: 411, column: 14, scope: !2714)
!2738 = !DILocation(line: 411, column: 6, scope: !2714)
!2739 = !DILocation(line: 413, column: 11, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2741, file: !187, line: 413, column: 11)
!2741 = distinct !DILexicalBlock(scope: !2714, file: !187, line: 411, column: 17)
!2742 = !DILocation(line: 413, column: 17, scope: !2740)
!2743 = !DILocation(line: 413, column: 11, scope: !2741)
!2744 = !DILocation(line: 414, column: 4, scope: !2740)
!2745 = !DILocation(line: 415, column: 11, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2741, file: !187, line: 415, column: 11)
!2747 = !DILocation(line: 415, column: 17, scope: !2746)
!2748 = !DILocation(line: 415, column: 26, scope: !2746)
!2749 = !DILocation(line: 415, column: 29, scope: !2746)
!2750 = !DILocation(line: 415, column: 35, scope: !2746)
!2751 = !DILocation(line: 415, column: 11, scope: !2741)
!2752 = !DILocation(line: 416, column: 10, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2746, file: !187, line: 415, column: 45)
!2754 = !DILocation(line: 417, column: 4, scope: !2753)
!2755 = !DILocation(line: 415, column: 38, scope: !2746)
!2756 = !DILocation(line: 422, column: 18, scope: !2741)
!2757 = !DILocation(line: 422, column: 23, scope: !2741)
!2758 = !DILocation(line: 422, column: 7, scope: !2741)
!2759 = !DILocation(line: 423, column: 7, scope: !2741)
!2760 = !DILocation(line: 423, column: 12, scope: !2741)
!2761 = !DILocation(line: 423, column: 16, scope: !2741)
!2762 = !DILocation(line: 424, column: 7, scope: !2741)
!2763 = !DILocation(line: 426, column: 12, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2741, file: !187, line: 426, column: 11)
!2765 = !DILocation(line: 426, column: 17, scope: !2764)
!2766 = !DILocation(line: 426, column: 24, scope: !2764)
!2767 = !DILocation(line: 426, column: 29, scope: !2764)
!2768 = !DILocation(line: 426, column: 35, scope: !2764)
!2769 = !DILocation(line: 426, column: 40, scope: !2764)
!2770 = !DILocation(line: 426, column: 33, scope: !2764)
!2771 = !DILocation(line: 426, column: 45, scope: !2764)
!2772 = !DILocation(line: 426, column: 11, scope: !2741)
!2773 = !DILocation(line: 427, column: 20, scope: !2764)
!2774 = !DILocation(line: 427, column: 4, scope: !2764)
!2775 = !DILocation(line: 428, column: 19, scope: !2741)
!2776 = !DILocation(line: 428, column: 7, scope: !2741)
!2777 = !DILocation(line: 428, column: 12, scope: !2741)
!2778 = !DILocation(line: 428, column: 16, scope: !2741)
!2779 = !DILocation(line: 429, column: 7, scope: !2741)
!2780 = !DILocation(line: 431, column: 2, scope: !2714)
!2781 = !DILocation(line: 432, column: 6, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2707, file: !187, line: 432, column: 6)
!2783 = !DILocation(line: 432, column: 11, scope: !2782)
!2784 = !DILocation(line: 432, column: 15, scope: !2782)
!2785 = !DILocation(line: 432, column: 21, scope: !2782)
!2786 = !DILocation(line: 432, column: 24, scope: !2782)
!2787 = !DILocation(line: 432, column: 6, scope: !2707)
!2788 = !DILocation(line: 433, column: 6, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2782, file: !187, line: 432, column: 50)
!2790 = !DILocation(line: 434, column: 13, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2789, file: !187, line: 433, column: 9)
!2792 = !DILocation(line: 434, column: 18, scope: !2791)
!2793 = !DILocation(line: 434, column: 23, scope: !2791)
!2794 = !DILocation(line: 434, column: 28, scope: !2791)
!2795 = !DILocation(line: 434, column: 34, scope: !2791)
!2796 = !DILocation(line: 434, column: 39, scope: !2791)
!2797 = !DILocation(line: 434, column: 32, scope: !2791)
!2798 = !DILocation(line: 435, column: 7, scope: !2791)
!2799 = !DILocation(line: 435, column: 12, scope: !2791)
!2800 = !DILocation(line: 435, column: 18, scope: !2791)
!2801 = !DILocation(line: 435, column: 23, scope: !2791)
!2802 = !DILocation(line: 435, column: 16, scope: !2791)
!2803 = !DILocation(line: 434, column: 7, scope: !2791)
!2804 = !DILocation(line: 434, column: 5, scope: !2791)
!2805 = !DILocation(line: 436, column: 6, scope: !2791)
!2806 = !DILocation(line: 436, column: 15, scope: !2789)
!2807 = !DILocation(line: 436, column: 17, scope: !2789)
!2808 = !DILocation(line: 436, column: 23, scope: !2789)
!2809 = !DILocation(line: 436, column: 26, scope: !2789)
!2810 = !DILocation(line: 436, column: 32, scope: !2789)
!2811 = !DILocation(line: 0, scope: !2789)
!2812 = distinct !{!2812, !2788, !2813}
!2813 = !DILocation(line: 436, column: 40, scope: !2789)
!2814 = !DILocation(line: 437, column: 10, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2789, file: !187, line: 437, column: 10)
!2816 = !DILocation(line: 437, column: 12, scope: !2815)
!2817 = !DILocation(line: 437, column: 10, scope: !2789)
!2818 = !DILocation(line: 438, column: 7, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2820, file: !187, line: 438, column: 7)
!2820 = distinct !DILexicalBlock(scope: !2815, file: !187, line: 437, column: 19)
!2821 = !DILocation(line: 438, column: 13, scope: !2819)
!2822 = !DILocation(line: 438, column: 22, scope: !2819)
!2823 = !DILocation(line: 438, column: 25, scope: !2819)
!2824 = !DILocation(line: 438, column: 31, scope: !2819)
!2825 = !DILocation(line: 438, column: 40, scope: !2819)
!2826 = !DILocation(line: 438, column: 43, scope: !2819)
!2827 = !DILocation(line: 438, column: 49, scope: !2819)
!2828 = !DILocation(line: 438, column: 7, scope: !2820)
!2829 = !DILocation(line: 440, column: 11, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2831, file: !187, line: 440, column: 11)
!2831 = distinct !DILexicalBlock(scope: !2819, file: !187, line: 438, column: 59)
!2832 = !DILocation(line: 440, column: 16, scope: !2830)
!2833 = !DILocation(line: 440, column: 20, scope: !2830)
!2834 = !DILocation(line: 440, column: 11, scope: !2831)
!2835 = !DILocation(line: 441, column: 15, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2830, file: !187, line: 440, column: 27)
!2837 = !DILocation(line: 441, column: 20, scope: !2836)
!2838 = !DILocation(line: 441, column: 4, scope: !2836)
!2839 = !DILocation(line: 442, column: 4, scope: !2836)
!2840 = !DILocation(line: 442, column: 9, scope: !2836)
!2841 = !DILocation(line: 442, column: 13, scope: !2836)
!2842 = !DILocation(line: 443, column: 7, scope: !2836)
!2843 = !DILocation(line: 444, column: 18, scope: !2831)
!2844 = !DILocation(line: 444, column: 23, scope: !2831)
!2845 = !DILocation(line: 444, column: 7, scope: !2831)
!2846 = !DILocation(line: 445, column: 7, scope: !2831)
!2847 = !DILocation(line: 445, column: 12, scope: !2831)
!2848 = !DILocation(line: 445, column: 16, scope: !2831)
!2849 = !DILocation(line: 446, column: 7, scope: !2831)
!2850 = !DILocation(line: 448, column: 7, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2820, file: !187, line: 448, column: 7)
!2852 = !DILocation(line: 448, column: 13, scope: !2851)
!2853 = !DILocation(line: 448, column: 7, scope: !2820)
!2854 = !DILocation(line: 449, column: 13, scope: !2851)
!2855 = !DILocation(line: 449, column: 7, scope: !2851)
!2856 = !DILocation(line: 450, column: 6, scope: !2820)
!2857 = !DILocation(line: 451, column: 15, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2815, file: !187, line: 450, column: 13)
!2859 = !DILocation(line: 451, column: 3, scope: !2858)
!2860 = !DILocation(line: 451, column: 8, scope: !2858)
!2861 = !DILocation(line: 451, column: 12, scope: !2858)
!2862 = !DILocation(line: 453, column: 2, scope: !2789)
!2863 = !DILocation(line: 454, column: 5, scope: !2707)
!2864 = !DILocation(line: 405, column: 35, scope: !2703)
!2865 = !DILocation(line: 405, column: 40, scope: !2703)
!2866 = !DILocation(line: 405, column: 33, scope: !2703)
!2867 = !DILocation(line: 405, column: 5, scope: !2703)
!2868 = distinct !{!2868, !2704, !2869}
!2869 = !DILocation(line: 454, column: 5, scope: !2699)
!2870 = !DILocation(line: 455, column: 9, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2678, file: !187, line: 455, column: 9)
!2872 = !DILocation(line: 455, column: 16, scope: !2871)
!2873 = !DILocation(line: 455, column: 19, scope: !2871)
!2874 = !DILocation(line: 455, column: 25, scope: !2871)
!2875 = !DILocation(line: 455, column: 9, scope: !2678)
!2876 = !DILocation(line: 456, column: 2, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2871, file: !187, line: 455, column: 34)
!2878 = !DILocation(line: 456, column: 9, scope: !2877)
!2879 = !DILocation(line: 456, column: 14, scope: !2877)
!2880 = !DILocation(line: 457, column: 15, scope: !2877)
!2881 = !DILocation(line: 457, column: 2, scope: !2877)
!2882 = !DILocation(line: 457, column: 9, scope: !2877)
!2883 = !DILocation(line: 457, column: 13, scope: !2877)
!2884 = !DILocation(line: 458, column: 5, scope: !2877)
!2885 = !DILocation(line: 459, column: 12, scope: !2678)
!2886 = !DILocation(line: 459, column: 5, scope: !2678)
!2887 = distinct !DISubprogram(name: "terminate_child", scope: !187, file: !187, line: 362, type: !2888, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !174, retainedNodes: !176)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{null, !35, !33}
!2890 = !DILocalVariable(name: "pid", arg: 1, scope: !2887, file: !187, line: 362, type: !35)
!2891 = !DILocation(line: 362, column: 23, scope: !2887)
!2892 = !DILocalVariable(name: "use_pgrp", arg: 2, scope: !2887, file: !187, line: 362, type: !33)
!2893 = !DILocation(line: 362, column: 32, scope: !2887)
!2894 = !DILocation(line: 367, column: 9, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2887, file: !187, line: 367, column: 9)
!2896 = !DILocation(line: 367, column: 9, scope: !2887)
!2897 = !DILocation(line: 368, column: 9, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2895, file: !187, line: 367, column: 19)
!2899 = !DILocation(line: 368, column: 2, scope: !2898)
!2900 = !DILocation(line: 369, column: 9, scope: !2898)
!2901 = !DILocation(line: 369, column: 2, scope: !2898)
!2902 = !DILocation(line: 370, column: 2, scope: !2898)
!2903 = !DILocation(line: 371, column: 9, scope: !2898)
!2904 = !DILocation(line: 371, column: 2, scope: !2898)
!2905 = !DILocation(line: 372, column: 5, scope: !2898)
!2906 = !DILocation(line: 373, column: 7, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2895, file: !187, line: 372, column: 12)
!2908 = !DILocation(line: 373, column: 2, scope: !2907)
!2909 = !DILocation(line: 374, column: 7, scope: !2907)
!2910 = !DILocation(line: 374, column: 2, scope: !2907)
!2911 = !DILocation(line: 375, column: 2, scope: !2907)
!2912 = !DILocation(line: 376, column: 7, scope: !2907)
!2913 = !DILocation(line: 376, column: 2, scope: !2907)
!2914 = !DILocation(line: 378, column: 1, scope: !2887)
!2915 = distinct !DISubprogram(name: "sync_ttysize", scope: !187, file: !187, line: 1134, type: !605, scopeLine: 1135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!2916 = !DILocalVariable(name: "src", arg: 1, scope: !2915, file: !187, line: 1134, type: !33)
!2917 = !DILocation(line: 1134, column: 18, scope: !2915)
!2918 = !DILocalVariable(name: "dst", arg: 2, scope: !2915, file: !187, line: 1134, type: !33)
!2919 = !DILocation(line: 1134, column: 27, scope: !2915)
!2920 = !DILocalVariable(name: "wsize", scope: !2915, file: !187, line: 1137, type: !2921)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !2922, line: 27, size: 64, elements: !2923)
!2922 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/ioctl-types.h", directory: "")
!2923 = !{!2924, !2925, !2926, !2927}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !2921, file: !2922, line: 29, baseType: !284, size: 16)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !2921, file: !2922, line: 30, baseType: !284, size: 16, offset: 16)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !2921, file: !2922, line: 31, baseType: !284, size: 16, offset: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !2921, file: !2922, line: 32, baseType: !284, size: 16, offset: 48)
!2928 = !DILocation(line: 1137, column: 20, scope: !2915)
!2929 = !DILocalVariable(name: "pgrp", scope: !2915, file: !187, line: 1138, type: !35)
!2930 = !DILocation(line: 1138, column: 11, scope: !2915)
!2931 = !DILocation(line: 1140, column: 15, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2915, file: !187, line: 1140, column: 9)
!2933 = !DILocation(line: 1140, column: 9, scope: !2932)
!2934 = !DILocation(line: 1140, column: 40, scope: !2932)
!2935 = !DILocation(line: 1140, column: 9, scope: !2915)
!2936 = !DILocation(line: 1141, column: 12, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2932, file: !187, line: 1140, column: 46)
!2938 = !DILocation(line: 1141, column: 6, scope: !2937)
!2939 = !DILocation(line: 1142, column: 28, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2937, file: !187, line: 1142, column: 10)
!2941 = !DILocation(line: 1142, column: 18, scope: !2940)
!2942 = !DILocation(line: 1142, column: 16, scope: !2940)
!2943 = !DILocation(line: 1142, column: 34, scope: !2940)
!2944 = !DILocation(line: 1142, column: 10, scope: !2937)
!2945 = !DILocation(line: 1143, column: 10, scope: !2940)
!2946 = !DILocation(line: 1143, column: 3, scope: !2940)
!2947 = !DILocation(line: 1144, column: 5, scope: !2937)
!2948 = !DILocation(line: 1146, column: 1, scope: !2915)
!2949 = distinct !DISubprogram(name: "fork_pty", scope: !187, file: !187, line: 468, type: !2950, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !174, retainedNodes: !176)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!33, !2952, !1744, !1744}
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "command_details", file: !699, line: 126, size: 960, elements: !2954)
!2954 = !{!2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2953, file: !699, line: 127, baseType: !550, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2953, file: !699, line: 128, baseType: !550, size: 32, offset: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2953, file: !699, line: 129, baseType: !548, size: 32, offset: 64)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2953, file: !699, line: 130, baseType: !548, size: 32, offset: 96)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "umask", scope: !2953, file: !699, line: 131, baseType: !1411, size: 32, offset: 128)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2953, file: !699, line: 132, baseType: !33, size: 32, offset: 160)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2953, file: !699, line: 133, baseType: !33, size: 32, offset: 192)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2953, file: !699, line: 134, baseType: !33, size: 32, offset: 224)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "closefrom", scope: !2953, file: !699, line: 135, baseType: !33, size: 32, offset: 256)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2953, file: !699, line: 136, baseType: !33, size: 32, offset: 288)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2953, file: !699, line: 137, baseType: !711, size: 64, offset: 320)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !2953, file: !699, line: 138, baseType: !221, size: 64, offset: 384)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2953, file: !699, line: 139, baseType: !221, size: 64, offset: 448)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "login_class", scope: !2953, file: !699, line: 140, baseType: !221, size: 64, offset: 512)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "chroot", scope: !2953, file: !699, line: 141, baseType: !221, size: 64, offset: 576)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "selinux_role", scope: !2953, file: !699, line: 142, baseType: !221, size: 64, offset: 640)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "selinux_type", scope: !2953, file: !699, line: 143, baseType: !221, size: 64, offset: 704)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "utmp_user", scope: !2953, file: !699, line: 144, baseType: !221, size: 64, offset: 768)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !2953, file: !699, line: 145, baseType: !615, size: 64, offset: 832)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !2953, file: !699, line: 146, baseType: !615, size: 64, offset: 896)
!2975 = !DILocalVariable(name: "details", arg: 1, scope: !2949, file: !187, line: 468, type: !2952)
!2976 = !DILocation(line: 468, column: 34, scope: !2949)
!2977 = !DILocalVariable(name: "sv", arg: 2, scope: !2949, file: !187, line: 468, type: !1744)
!2978 = !DILocation(line: 468, column: 47, scope: !2949)
!2979 = !DILocalVariable(name: "maxfd", arg: 3, scope: !2949, file: !187, line: 468, type: !1744)
!2980 = !DILocation(line: 468, column: 58, scope: !2949)
!2981 = !DILocalVariable(name: "cstat", scope: !2949, file: !187, line: 470, type: !2682)
!2982 = !DILocation(line: 470, column: 27, scope: !2949)
!2983 = !DILocalVariable(name: "iob", scope: !2949, file: !187, line: 471, type: !209)
!2984 = !DILocation(line: 471, column: 23, scope: !2949)
!2985 = !DILocalVariable(name: "io_pipe", scope: !2949, file: !187, line: 472, type: !2986)
!2986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 192, elements: !2987)
!2987 = !{!2988, !171}
!2988 = !DISubrange(count: 3, lowerBound: 0)
!2989 = !DILocation(line: 472, column: 9, scope: !2949)
!2990 = !DILocalVariable(name: "n", scope: !2949, file: !187, line: 472, type: !33)
!2991 = !DILocation(line: 472, column: 24, scope: !2949)
!2992 = !DILocalVariable(name: "sa", scope: !2949, file: !187, line: 473, type: !2207)
!2993 = !DILocation(line: 473, column: 17, scope: !2949)
!2994 = !DILocation(line: 475, column: 13, scope: !2949)
!2995 = !DILocation(line: 475, column: 11, scope: !2949)
!2996 = !DILocation(line: 477, column: 16, scope: !2949)
!2997 = !DILocation(line: 477, column: 5, scope: !2949)
!2998 = !DILocation(line: 478, column: 21, scope: !2949)
!2999 = !DILocation(line: 478, column: 5, scope: !2949)
!3000 = !DILocation(line: 480, column: 9, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 480, column: 9)
!3002 = !DILocation(line: 480, column: 29, scope: !3001)
!3003 = !DILocation(line: 480, column: 9, scope: !2949)
!3004 = !DILocation(line: 481, column: 5, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !3001, file: !187, line: 480, column: 36)
!3006 = !DILocation(line: 481, column: 14, scope: !3005)
!3007 = !DILocation(line: 482, column: 5, scope: !3005)
!3008 = !DILocation(line: 482, column: 16, scope: !3005)
!3009 = !DILocation(line: 483, column: 2, scope: !3005)
!3010 = !DILocation(line: 484, column: 5, scope: !3005)
!3011 = !DILocation(line: 487, column: 5, scope: !2949)
!3012 = !DILocation(line: 488, column: 5, scope: !2949)
!3013 = !DILocation(line: 489, column: 5, scope: !2949)
!3014 = !DILocation(line: 490, column: 5, scope: !2949)
!3015 = !DILocation(line: 491, column: 5, scope: !2949)
!3016 = !DILocation(line: 492, column: 5, scope: !2949)
!3017 = !DILocation(line: 498, column: 10, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 498, column: 9)
!3019 = !DILocation(line: 498, column: 9, scope: !2949)
!3020 = !DILocation(line: 499, column: 22, scope: !3018)
!3021 = !DILocation(line: 499, column: 20, scope: !3018)
!3022 = !DILocation(line: 499, column: 2, scope: !3018)
!3023 = !DILocation(line: 500, column: 26, scope: !2949)
!3024 = !DILocation(line: 500, column: 24, scope: !2949)
!3025 = !DILocation(line: 501, column: 26, scope: !2949)
!3026 = !DILocation(line: 501, column: 24, scope: !2949)
!3027 = !DILocation(line: 503, column: 9, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 503, column: 9)
!3029 = !DILocation(line: 503, column: 29, scope: !3028)
!3030 = !DILocation(line: 503, column: 9, scope: !2949)
!3031 = !DILocation(line: 505, column: 7, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3033, file: !187, line: 505, column: 6)
!3033 = distinct !DILexicalBlock(scope: !3028, file: !187, line: 503, column: 36)
!3034 = !DILocation(line: 505, column: 6, scope: !3033)
!3035 = !DILocation(line: 506, column: 26, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3032, file: !187, line: 505, column: 45)
!3037 = !DILocation(line: 506, column: 47, scope: !3036)
!3038 = !DILocation(line: 507, column: 14, scope: !3036)
!3039 = !DILocation(line: 506, column: 15, scope: !3036)
!3040 = !DILocation(line: 506, column: 13, scope: !3036)
!3041 = !DILocation(line: 508, column: 2, scope: !3036)
!3042 = !DILocation(line: 511, column: 22, scope: !3033)
!3043 = !DILocation(line: 511, column: 42, scope: !3033)
!3044 = !DILocation(line: 512, column: 18, scope: !3033)
!3045 = !DILocation(line: 511, column: 11, scope: !3033)
!3046 = !DILocation(line: 511, column: 9, scope: !3033)
!3047 = !DILocation(line: 515, column: 25, scope: !3033)
!3048 = !DILocation(line: 515, column: 15, scope: !3033)
!3049 = !DILocation(line: 515, column: 49, scope: !3033)
!3050 = !DILocation(line: 515, column: 46, scope: !3033)
!3051 = !DILocation(line: 515, column: 13, scope: !3033)
!3052 = !DILocation(line: 516, column: 5, scope: !3033)
!3053 = !DILocation(line: 522, column: 5, scope: !2949)
!3054 = !DILocation(line: 523, column: 9, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 523, column: 9)
!3056 = !DILocation(line: 523, column: 27, scope: !3055)
!3057 = !DILocation(line: 523, column: 33, scope: !3055)
!3058 = !DILocation(line: 523, column: 37, scope: !3055)
!3059 = !DILocation(line: 523, column: 9, scope: !2949)
!3060 = !DILocation(line: 524, column: 11, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3055, file: !187, line: 523, column: 59)
!3062 = !DILocation(line: 525, column: 11, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3061, file: !187, line: 525, column: 6)
!3064 = !DILocation(line: 525, column: 6, scope: !3063)
!3065 = !DILocation(line: 525, column: 34, scope: !3063)
!3066 = !DILocation(line: 525, column: 6, scope: !3061)
!3067 = !DILocation(line: 526, column: 15, scope: !3063)
!3068 = !DILocation(line: 526, column: 6, scope: !3063)
!3069 = !DILocation(line: 527, column: 36, scope: !3061)
!3070 = !DILocation(line: 528, column: 17, scope: !3061)
!3071 = !DILocation(line: 527, column: 11, scope: !3061)
!3072 = !DILocation(line: 527, column: 9, scope: !3061)
!3073 = !DILocation(line: 529, column: 22, scope: !3061)
!3074 = !DILocation(line: 529, column: 20, scope: !3061)
!3075 = !DILocation(line: 530, column: 5, scope: !3061)
!3076 = !DILocation(line: 531, column: 9, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 531, column: 9)
!3078 = !DILocation(line: 531, column: 28, scope: !3077)
!3079 = !DILocation(line: 531, column: 34, scope: !3077)
!3080 = !DILocation(line: 531, column: 38, scope: !3077)
!3081 = !DILocation(line: 531, column: 9, scope: !2949)
!3082 = !DILocation(line: 532, column: 11, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3077, file: !187, line: 531, column: 61)
!3084 = !DILocation(line: 533, column: 11, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3083, file: !187, line: 533, column: 6)
!3086 = !DILocation(line: 533, column: 6, scope: !3085)
!3087 = !DILocation(line: 533, column: 35, scope: !3085)
!3088 = !DILocation(line: 533, column: 6, scope: !3083)
!3089 = !DILocation(line: 534, column: 15, scope: !3085)
!3090 = !DILocation(line: 534, column: 6, scope: !3085)
!3091 = !DILocation(line: 535, column: 22, scope: !3083)
!3092 = !DILocation(line: 536, column: 18, scope: !3083)
!3093 = !DILocation(line: 535, column: 11, scope: !3083)
!3094 = !DILocation(line: 535, column: 9, scope: !3083)
!3095 = !DILocation(line: 537, column: 23, scope: !3083)
!3096 = !DILocation(line: 537, column: 21, scope: !3083)
!3097 = !DILocation(line: 538, column: 5, scope: !3083)
!3098 = !DILocation(line: 539, column: 9, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 539, column: 9)
!3100 = !DILocation(line: 539, column: 28, scope: !3099)
!3101 = !DILocation(line: 539, column: 34, scope: !3099)
!3102 = !DILocation(line: 539, column: 38, scope: !3099)
!3103 = !DILocation(line: 539, column: 9, scope: !2949)
!3104 = !DILocation(line: 540, column: 11, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3106, file: !187, line: 540, column: 6)
!3106 = distinct !DILexicalBlock(scope: !3099, file: !187, line: 539, column: 61)
!3107 = !DILocation(line: 540, column: 6, scope: !3105)
!3108 = !DILocation(line: 540, column: 35, scope: !3105)
!3109 = !DILocation(line: 540, column: 6, scope: !3106)
!3110 = !DILocation(line: 541, column: 15, scope: !3105)
!3111 = !DILocation(line: 541, column: 6, scope: !3105)
!3112 = !DILocation(line: 542, column: 22, scope: !3106)
!3113 = !DILocation(line: 543, column: 18, scope: !3106)
!3114 = !DILocation(line: 542, column: 11, scope: !3106)
!3115 = !DILocation(line: 542, column: 9, scope: !3106)
!3116 = !DILocation(line: 544, column: 23, scope: !3106)
!3117 = !DILocation(line: 544, column: 21, scope: !3106)
!3118 = !DILocation(line: 545, column: 5, scope: !3106)
!3119 = !DILocation(line: 548, column: 8, scope: !2949)
!3120 = !DILocation(line: 548, column: 17, scope: !2949)
!3121 = !DILocation(line: 549, column: 8, scope: !2949)
!3122 = !DILocation(line: 549, column: 19, scope: !2949)
!3123 = !DILocation(line: 550, column: 5, scope: !2949)
!3124 = !DILocation(line: 552, column: 9, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 552, column: 9)
!3126 = !DILocation(line: 552, column: 9, scope: !2949)
!3127 = !DILocation(line: 554, column: 16, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3129, file: !187, line: 554, column: 6)
!3129 = distinct !DILexicalBlock(scope: !3125, file: !187, line: 552, column: 21)
!3130 = !DILocation(line: 554, column: 37, scope: !3128)
!3131 = !DILocation(line: 554, column: 6, scope: !3128)
!3132 = !DILocation(line: 554, column: 6, scope: !3129)
!3133 = !DILocation(line: 555, column: 22, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3128, file: !187, line: 554, column: 57)
!3135 = !DILocation(line: 556, column: 19, scope: !3134)
!3136 = !DILocation(line: 556, column: 40, scope: !3134)
!3137 = !DILocation(line: 556, column: 6, scope: !3134)
!3138 = !DILocation(line: 557, column: 2, scope: !3134)
!3139 = !DILocation(line: 560, column: 7, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3129, file: !187, line: 560, column: 6)
!3141 = !DILocation(line: 560, column: 6, scope: !3129)
!3142 = !DILocation(line: 561, column: 14, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3140, file: !187, line: 560, column: 17)
!3144 = !DILocation(line: 562, column: 6, scope: !3143)
!3145 = !DILocation(line: 563, column: 16, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3143, file: !187, line: 562, column: 9)
!3147 = !DILocation(line: 563, column: 7, scope: !3146)
!3148 = !DILocation(line: 563, column: 5, scope: !3146)
!3149 = !DILocation(line: 564, column: 6, scope: !3146)
!3150 = !DILocation(line: 564, column: 16, scope: !3143)
!3151 = !DILocation(line: 564, column: 18, scope: !3143)
!3152 = !DILocation(line: 564, column: 21, scope: !3143)
!3153 = !DILocation(line: 564, column: 27, scope: !3143)
!3154 = !DILocation(line: 0, scope: !3143)
!3155 = distinct !{!3155, !3144, !3156}
!3156 = !DILocation(line: 564, column: 35, scope: !3143)
!3157 = !DILocation(line: 565, column: 11, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3143, file: !187, line: 565, column: 10)
!3159 = !DILocation(line: 565, column: 10, scope: !3143)
!3160 = !DILocation(line: 566, column: 12, scope: !3158)
!3161 = !DILocation(line: 566, column: 3, scope: !3158)
!3162 = !DILocation(line: 567, column: 2, scope: !3143)
!3163 = !DILocation(line: 568, column: 5, scope: !3129)
!3164 = !DILocation(line: 570, column: 13, scope: !2949)
!3165 = !DILocation(line: 570, column: 11, scope: !2949)
!3166 = !DILocation(line: 571, column: 13, scope: !2949)
!3167 = !DILocation(line: 571, column: 5, scope: !2949)
!3168 = !DILocation(line: 573, column: 11, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 571, column: 20)
!3170 = !DILocation(line: 573, column: 2, scope: !3169)
!3171 = !DILocation(line: 577, column: 8, scope: !3169)
!3172 = !DILocation(line: 577, column: 2, scope: !3169)
!3173 = !DILocation(line: 578, column: 8, scope: !3169)
!3174 = !DILocation(line: 578, column: 2, scope: !3169)
!3175 = !DILocation(line: 579, column: 8, scope: !3169)
!3176 = !DILocation(line: 579, column: 2, scope: !3169)
!3177 = !DILocation(line: 580, column: 8, scope: !3169)
!3178 = !DILocation(line: 580, column: 2, scope: !3169)
!3179 = !DILocation(line: 581, column: 17, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3169, file: !187, line: 581, column: 6)
!3181 = !DILocation(line: 581, column: 37, scope: !3180)
!3182 = !DILocation(line: 581, column: 6, scope: !3180)
!3183 = !DILocation(line: 581, column: 56, scope: !3180)
!3184 = !DILocation(line: 581, column: 6, scope: !3169)
!3185 = !DILocation(line: 583, column: 10, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3187, file: !187, line: 583, column: 10)
!3187 = distinct !DILexicalBlock(scope: !3180, file: !187, line: 581, column: 65)
!3188 = !DILocation(line: 583, column: 10, scope: !3187)
!3189 = !DILocation(line: 584, column: 9, scope: !3186)
!3190 = !DILocation(line: 584, column: 3, scope: !3186)
!3191 = !DILocation(line: 585, column: 10, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3187, file: !187, line: 585, column: 10)
!3193 = !DILocation(line: 585, column: 10, scope: !3187)
!3194 = !DILocation(line: 586, column: 9, scope: !3192)
!3195 = !DILocation(line: 586, column: 3, scope: !3192)
!3196 = !DILocation(line: 587, column: 10, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3187, file: !187, line: 587, column: 10)
!3198 = !DILocation(line: 587, column: 10, scope: !3187)
!3199 = !DILocation(line: 588, column: 9, scope: !3197)
!3200 = !DILocation(line: 588, column: 3, scope: !3197)
!3201 = !DILocation(line: 589, column: 19, scope: !3187)
!3202 = !DILocation(line: 589, column: 28, scope: !3187)
!3203 = !DILocation(line: 589, column: 6, scope: !3187)
!3204 = !DILocation(line: 590, column: 2, scope: !3187)
!3205 = !DILocation(line: 591, column: 8, scope: !3169)
!3206 = !DILocation(line: 591, column: 13, scope: !3169)
!3207 = !DILocation(line: 592, column: 14, scope: !3169)
!3208 = !DILocation(line: 592, column: 8, scope: !3169)
!3209 = !DILocation(line: 592, column: 12, scope: !3169)
!3210 = !DILocation(line: 593, column: 7, scope: !3169)
!3211 = !DILocation(line: 593, column: 14, scope: !3169)
!3212 = !DILocation(line: 593, column: 2, scope: !3169)
!3213 = !DILocation(line: 594, column: 2, scope: !3169)
!3214 = !DILocation(line: 598, column: 9, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 598, column: 9)
!3216 = !DILocation(line: 598, column: 9, scope: !2949)
!3217 = !DILocation(line: 599, column: 8, scope: !3215)
!3218 = !DILocation(line: 599, column: 2, scope: !3215)
!3219 = !DILocation(line: 600, column: 9, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 600, column: 9)
!3221 = !DILocation(line: 600, column: 9, scope: !2949)
!3222 = !DILocation(line: 601, column: 8, scope: !3220)
!3223 = !DILocation(line: 601, column: 2, scope: !3220)
!3224 = !DILocation(line: 602, column: 9, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 602, column: 9)
!3226 = !DILocation(line: 602, column: 9, scope: !2949)
!3227 = !DILocation(line: 603, column: 8, scope: !3225)
!3228 = !DILocation(line: 603, column: 2, scope: !3225)
!3229 = !DILocation(line: 605, column: 16, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !2949, file: !187, line: 605, column: 5)
!3231 = !DILocation(line: 605, column: 14, scope: !3230)
!3232 = !DILocation(line: 605, column: 10, scope: !3230)
!3233 = !DILocation(line: 605, column: 24, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3230, file: !187, line: 605, column: 5)
!3235 = !DILocation(line: 605, column: 5, scope: !3230)
!3236 = !DILocation(line: 607, column: 6, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !187, line: 607, column: 6)
!3238 = distinct !DILexicalBlock(scope: !3234, file: !187, line: 605, column: 46)
!3239 = !DILocation(line: 607, column: 11, scope: !3237)
!3240 = !DILocation(line: 607, column: 18, scope: !3237)
!3241 = !DILocation(line: 607, column: 17, scope: !3237)
!3242 = !DILocation(line: 607, column: 15, scope: !3237)
!3243 = !DILocation(line: 607, column: 6, scope: !3238)
!3244 = !DILocation(line: 608, column: 15, scope: !3237)
!3245 = !DILocation(line: 608, column: 20, scope: !3237)
!3246 = !DILocation(line: 608, column: 7, scope: !3237)
!3247 = !DILocation(line: 608, column: 13, scope: !3237)
!3248 = !DILocation(line: 608, column: 6, scope: !3237)
!3249 = !DILocation(line: 609, column: 6, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3238, file: !187, line: 609, column: 6)
!3251 = !DILocation(line: 609, column: 11, scope: !3250)
!3252 = !DILocation(line: 609, column: 18, scope: !3250)
!3253 = !DILocation(line: 609, column: 17, scope: !3250)
!3254 = !DILocation(line: 609, column: 15, scope: !3250)
!3255 = !DILocation(line: 609, column: 6, scope: !3238)
!3256 = !DILocation(line: 610, column: 15, scope: !3250)
!3257 = !DILocation(line: 610, column: 20, scope: !3250)
!3258 = !DILocation(line: 610, column: 7, scope: !3250)
!3259 = !DILocation(line: 610, column: 13, scope: !3250)
!3260 = !DILocation(line: 610, column: 6, scope: !3250)
!3261 = !DILocation(line: 613, column: 12, scope: !3238)
!3262 = !DILocation(line: 613, column: 17, scope: !3238)
!3263 = !DILocation(line: 613, column: 6, scope: !3238)
!3264 = !DILocation(line: 613, column: 4, scope: !3238)
!3265 = !DILocation(line: 614, column: 6, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3238, file: !187, line: 614, column: 6)
!3267 = !DILocation(line: 614, column: 8, scope: !3266)
!3268 = !DILocation(line: 614, column: 14, scope: !3266)
!3269 = !DILocation(line: 614, column: 18, scope: !3266)
!3270 = !DILocation(line: 614, column: 6, scope: !3238)
!3271 = !DILocation(line: 615, column: 19, scope: !3266)
!3272 = !DILocation(line: 615, column: 24, scope: !3266)
!3273 = !DILocation(line: 615, column: 38, scope: !3266)
!3274 = !DILocation(line: 615, column: 40, scope: !3266)
!3275 = !DILocation(line: 615, column: 13, scope: !3266)
!3276 = !DILocation(line: 615, column: 6, scope: !3266)
!3277 = !DILocation(line: 616, column: 12, scope: !3238)
!3278 = !DILocation(line: 616, column: 17, scope: !3238)
!3279 = !DILocation(line: 616, column: 6, scope: !3238)
!3280 = !DILocation(line: 616, column: 4, scope: !3238)
!3281 = !DILocation(line: 617, column: 6, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3238, file: !187, line: 617, column: 6)
!3283 = !DILocation(line: 617, column: 8, scope: !3282)
!3284 = !DILocation(line: 617, column: 14, scope: !3282)
!3285 = !DILocation(line: 617, column: 18, scope: !3282)
!3286 = !DILocation(line: 617, column: 6, scope: !3238)
!3287 = !DILocation(line: 618, column: 19, scope: !3282)
!3288 = !DILocation(line: 618, column: 24, scope: !3282)
!3289 = !DILocation(line: 618, column: 38, scope: !3282)
!3290 = !DILocation(line: 618, column: 40, scope: !3282)
!3291 = !DILocation(line: 618, column: 13, scope: !3282)
!3292 = !DILocation(line: 618, column: 6, scope: !3282)
!3293 = !DILocation(line: 619, column: 5, scope: !3238)
!3294 = !DILocation(line: 605, column: 35, scope: !3234)
!3295 = !DILocation(line: 605, column: 40, scope: !3234)
!3296 = !DILocation(line: 605, column: 33, scope: !3234)
!3297 = !DILocation(line: 605, column: 5, scope: !3234)
!3298 = distinct !{!3298, !3235, !3299}
!3299 = !DILocation(line: 619, column: 5, scope: !3230)
!3300 = !DILocation(line: 621, column: 12, scope: !2949)
!3301 = !DILocation(line: 621, column: 5, scope: !2949)
!3302 = distinct !DISubprogram(name: "sigwinch", scope: !187, file: !187, line: 1152, type: !72, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!3303 = !DILocalVariable(name: "s", arg: 1, scope: !3302, file: !187, line: 1152, type: !33)
!3304 = !DILocation(line: 1152, column: 14, scope: !3302)
!3305 = !DILocalVariable(name: "serrno", scope: !3302, file: !187, line: 1154, type: !33)
!3306 = !DILocation(line: 1154, column: 9, scope: !3302)
!3307 = !DILocation(line: 1154, column: 18, scope: !3302)
!3308 = !DILocation(line: 1156, column: 18, scope: !3302)
!3309 = !DILocation(line: 1156, column: 39, scope: !3302)
!3310 = !DILocation(line: 1156, column: 5, scope: !3302)
!3311 = !DILocation(line: 1157, column: 13, scope: !3302)
!3312 = !DILocation(line: 1157, column: 5, scope: !3302)
!3313 = !DILocation(line: 1157, column: 11, scope: !3302)
!3314 = !DILocation(line: 1158, column: 1, scope: !3302)
!3315 = distinct !DISubprogram(name: "log_ttyin", scope: !187, file: !187, line: 145, type: !219, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!3316 = !DILocalVariable(name: "buf", arg: 1, scope: !3315, file: !187, line: 145, type: !221)
!3317 = !DILocation(line: 145, column: 23, scope: !3315)
!3318 = !DILocalVariable(name: "n", arg: 2, scope: !3315, file: !187, line: 145, type: !7)
!3319 = !DILocation(line: 145, column: 41, scope: !3315)
!3320 = !DILocalVariable(name: "plugin", scope: !3315, file: !187, line: 147, type: !3321)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plugin_container", file: !250, line: 60, size: 320, elements: !3323)
!3323 = !{!3324, !3325, !3326, !3327, !3328}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3322, file: !250, line: 61, baseType: !3321, size: 64)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3322, file: !250, line: 62, baseType: !3321, size: 64, offset: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3322, file: !250, line: 63, baseType: !221, size: 64, offset: 128)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !3322, file: !250, line: 64, baseType: !19, size: 64, offset: 192)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !3322, file: !250, line: 70, baseType: !3329, size: 64, offset: 256)
!3329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3322, file: !250, line: 65, size: 64, elements: !3330)
!3330 = !{!3331, !3337, !3374, !3391}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !3329, file: !250, line: 66, baseType: !3332, size: 64)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "generic_plugin", file: !250, line: 23, size: 64, elements: !3334)
!3334 = !{!3335, !3336}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3333, file: !250, line: 24, baseType: !7, size: 32)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3333, file: !250, line: 25, baseType: !7, size: 32, offset: 32)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !3329, file: !250, line: 67, baseType: !3338, size: 64)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "policy_plugin", file: !574, line: 59, size: 576, elements: !3340)
!3340 = !{!3341, !3342, !3343, !3362, !3363, !3364, !3365, !3366, !3367, !3368}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3339, file: !574, line: 61, baseType: !7, size: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3339, file: !574, line: 62, baseType: !7, size: 32, offset: 32)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3339, file: !574, line: 63, baseType: !3344, size: 64, offset: 64)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!33, !7, !3347, !597, !601, !601, !601}
!3347 = !DIDerivedType(tag: DW_TAG_typedef, name: "sudo_conv_t", file: !574, line: 53, baseType: !3348)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = !DISubroutineType(types: !3350)
!3350 = !{!33, !33, !3351, !3358}
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3353)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sudo_conv_message", file: !574, line: 37, size: 128, elements: !3354)
!3354 = !{!3355, !3356, !3357}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "msg_type", scope: !3353, file: !574, line: 44, baseType: !33, size: 32)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3353, file: !574, line: 45, baseType: !33, size: 32, offset: 32)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !3353, file: !574, line: 46, baseType: !221, size: 64, offset: 64)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sudo_conv_reply", file: !574, line: 49, size: 64, elements: !3360)
!3360 = !{!3361}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !3359, file: !574, line: 50, baseType: !20, size: 64)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3339, file: !574, line: 66, baseType: !604, size: 64, offset: 128)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !3339, file: !574, line: 67, baseType: !608, size: 64, offset: 192)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "check_policy", scope: !3339, file: !574, line: 68, baseType: !612, size: 64, offset: 256)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3339, file: !574, line: 71, baseType: !618, size: 64, offset: 320)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !3339, file: !574, line: 73, baseType: !622, size: 64, offset: 384)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "invalidate", scope: !3339, file: !574, line: 74, baseType: !71, size: 64, offset: 448)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "init_session", scope: !3339, file: !574, line: 75, baseType: !3369, size: 64, offset: 512)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{!33, !3372}
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 64)
!3373 = !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !574, line: 58, flags: DIFlagFwdDecl)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !3329, file: !250, line: 68, baseType: !3375, size: 64)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_plugin", file: !574, line: 79, size: 576, elements: !3377)
!3377 = !{!3378, !3379, !3380, !3384, !3385, !3386, !3387, !3388, !3389, !3390}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3376, file: !574, line: 81, baseType: !7, size: 32)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3376, file: !574, line: 82, baseType: !7, size: 32, offset: 32)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3376, file: !574, line: 83, baseType: !3381, size: 64, offset: 64)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{!33, !7, !3347, !597, !601, !601, !601, !33, !601, !601}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3376, file: !574, line: 87, baseType: !604, size: 64, offset: 128)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !3376, file: !574, line: 88, baseType: !608, size: 64, offset: 192)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyin", scope: !3376, file: !574, line: 89, baseType: !218, size: 64, offset: 256)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyout", scope: !3376, file: !574, line: 90, baseType: !218, size: 64, offset: 320)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdin", scope: !3376, file: !574, line: 91, baseType: !218, size: 64, offset: 384)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdout", scope: !3376, file: !574, line: 92, baseType: !218, size: 64, offset: 448)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "log_stderr", scope: !3376, file: !574, line: 93, baseType: !218, size: 64, offset: 512)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "io_1_0", scope: !3329, file: !250, line: 69, baseType: !3392, size: 64)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_plugin_1_0", file: !250, line: 32, size: 576, elements: !3394)
!3394 = !{!3395, !3396, !3397, !3401, !3402, !3403, !3404, !3405, !3406, !3407}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3393, file: !250, line: 33, baseType: !7, size: 32)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3393, file: !250, line: 34, baseType: !7, size: 32, offset: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3393, file: !250, line: 35, baseType: !3398, size: 64, offset: 64)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!33, !7, !3347, !597, !601, !601, !33, !601, !601}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3393, file: !250, line: 39, baseType: !604, size: 64, offset: 128)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !3393, file: !250, line: 40, baseType: !608, size: 64, offset: 192)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyin", scope: !3393, file: !250, line: 41, baseType: !218, size: 64, offset: 256)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyout", scope: !3393, file: !250, line: 42, baseType: !218, size: 64, offset: 320)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdin", scope: !3393, file: !250, line: 43, baseType: !218, size: 64, offset: 384)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdout", scope: !3393, file: !250, line: 44, baseType: !218, size: 64, offset: 448)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "log_stderr", scope: !3393, file: !250, line: 45, baseType: !218, size: 64, offset: 512)
!3408 = !DILocation(line: 147, column: 30, scope: !3315)
!3409 = !DILocalVariable(name: "omask", scope: !3315, file: !187, line: 148, type: !201)
!3410 = !DILocation(line: 148, column: 14, scope: !3315)
!3411 = !DILocalVariable(name: "rval", scope: !3315, file: !187, line: 149, type: !33)
!3412 = !DILocation(line: 149, column: 9, scope: !3315)
!3413 = !DILocation(line: 151, column: 5, scope: !3315)
!3414 = !DILocation(line: 153, column: 5, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3315, file: !187, line: 153, column: 5)
!3416 = !DILocation(line: 153, column: 5, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3415, file: !187, line: 153, column: 5)
!3418 = !DILocation(line: 154, column: 6, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !187, line: 154, column: 6)
!3420 = distinct !DILexicalBlock(scope: !3417, file: !187, line: 153, column: 41)
!3421 = !DILocation(line: 154, column: 14, scope: !3419)
!3422 = !DILocation(line: 154, column: 16, scope: !3419)
!3423 = !DILocation(line: 154, column: 20, scope: !3419)
!3424 = !DILocation(line: 154, column: 6, scope: !3420)
!3425 = !DILocation(line: 155, column: 11, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !187, line: 155, column: 10)
!3427 = distinct !DILexicalBlock(scope: !3419, file: !187, line: 154, column: 31)
!3428 = !DILocation(line: 155, column: 19, scope: !3426)
!3429 = !DILocation(line: 155, column: 21, scope: !3426)
!3430 = !DILocation(line: 155, column: 25, scope: !3426)
!3431 = !DILocation(line: 155, column: 35, scope: !3426)
!3432 = !DILocation(line: 155, column: 40, scope: !3426)
!3433 = !DILocation(line: 155, column: 10, scope: !3427)
!3434 = !DILocation(line: 156, column: 12, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3426, file: !187, line: 155, column: 44)
!3436 = !DILocation(line: 157, column: 3, scope: !3435)
!3437 = !DILocation(line: 159, column: 2, scope: !3427)
!3438 = !DILocation(line: 160, column: 5, scope: !3420)
!3439 = distinct !{!3439, !3414, !3440}
!3440 = !DILocation(line: 160, column: 5, scope: !3415)
!3441 = !DILocation(line: 162, column: 5, scope: !3315)
!3442 = !DILocation(line: 163, column: 12, scope: !3315)
!3443 = !DILocation(line: 163, column: 5, scope: !3315)
!3444 = distinct !DISubprogram(name: "io_buf_new", scope: !187, file: !187, line: 381, type: !3445, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!3445 = !DISubroutineType(types: !3446)
!3446 = !{!209, !33, !33, !218, !209}
!3447 = !DILocalVariable(name: "rfd", arg: 1, scope: !3444, file: !187, line: 381, type: !33)
!3448 = !DILocation(line: 381, column: 16, scope: !3444)
!3449 = !DILocalVariable(name: "wfd", arg: 2, scope: !3444, file: !187, line: 381, type: !33)
!3450 = !DILocation(line: 381, column: 25, scope: !3444)
!3451 = !DILocalVariable(name: "action", arg: 3, scope: !3444, file: !187, line: 381, type: !218)
!3452 = !DILocation(line: 381, column: 36, scope: !3444)
!3453 = !DILocalVariable(name: "head", arg: 4, scope: !3444, file: !187, line: 382, type: !209)
!3454 = !DILocation(line: 382, column: 23, scope: !3444)
!3455 = !DILocalVariable(name: "iob", scope: !3444, file: !187, line: 384, type: !209)
!3456 = !DILocation(line: 384, column: 23, scope: !3444)
!3457 = !DILocation(line: 386, column: 11, scope: !3444)
!3458 = !DILocation(line: 386, column: 9, scope: !3444)
!3459 = !DILocation(line: 387, column: 16, scope: !3444)
!3460 = !DILocation(line: 387, column: 5, scope: !3444)
!3461 = !DILocation(line: 388, column: 16, scope: !3444)
!3462 = !DILocation(line: 388, column: 5, scope: !3444)
!3463 = !DILocation(line: 388, column: 10, scope: !3444)
!3464 = !DILocation(line: 388, column: 14, scope: !3444)
!3465 = !DILocation(line: 389, column: 16, scope: !3444)
!3466 = !DILocation(line: 389, column: 5, scope: !3444)
!3467 = !DILocation(line: 389, column: 10, scope: !3444)
!3468 = !DILocation(line: 389, column: 14, scope: !3444)
!3469 = !DILocation(line: 390, column: 19, scope: !3444)
!3470 = !DILocation(line: 390, column: 5, scope: !3444)
!3471 = !DILocation(line: 390, column: 10, scope: !3444)
!3472 = !DILocation(line: 390, column: 17, scope: !3444)
!3473 = !DILocation(line: 391, column: 17, scope: !3444)
!3474 = !DILocation(line: 391, column: 5, scope: !3444)
!3475 = !DILocation(line: 391, column: 10, scope: !3444)
!3476 = !DILocation(line: 391, column: 15, scope: !3444)
!3477 = !DILocation(line: 392, column: 12, scope: !3444)
!3478 = !DILocation(line: 392, column: 5, scope: !3444)
!3479 = distinct !DISubprogram(name: "log_ttyout", scope: !187, file: !187, line: 191, type: !219, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!3480 = !DILocalVariable(name: "buf", arg: 1, scope: !3479, file: !187, line: 191, type: !221)
!3481 = !DILocation(line: 191, column: 24, scope: !3479)
!3482 = !DILocalVariable(name: "n", arg: 2, scope: !3479, file: !187, line: 191, type: !7)
!3483 = !DILocation(line: 191, column: 42, scope: !3479)
!3484 = !DILocalVariable(name: "plugin", scope: !3479, file: !187, line: 193, type: !3321)
!3485 = !DILocation(line: 193, column: 30, scope: !3479)
!3486 = !DILocalVariable(name: "omask", scope: !3479, file: !187, line: 194, type: !201)
!3487 = !DILocation(line: 194, column: 14, scope: !3479)
!3488 = !DILocalVariable(name: "rval", scope: !3479, file: !187, line: 195, type: !33)
!3489 = !DILocation(line: 195, column: 9, scope: !3479)
!3490 = !DILocation(line: 197, column: 5, scope: !3479)
!3491 = !DILocation(line: 199, column: 5, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3479, file: !187, line: 199, column: 5)
!3493 = !DILocation(line: 199, column: 5, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3492, file: !187, line: 199, column: 5)
!3495 = !DILocation(line: 200, column: 6, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !187, line: 200, column: 6)
!3497 = distinct !DILexicalBlock(scope: !3494, file: !187, line: 199, column: 41)
!3498 = !DILocation(line: 200, column: 14, scope: !3496)
!3499 = !DILocation(line: 200, column: 16, scope: !3496)
!3500 = !DILocation(line: 200, column: 20, scope: !3496)
!3501 = !DILocation(line: 200, column: 6, scope: !3497)
!3502 = !DILocation(line: 201, column: 11, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !187, line: 201, column: 10)
!3504 = distinct !DILexicalBlock(scope: !3496, file: !187, line: 200, column: 32)
!3505 = !DILocation(line: 201, column: 19, scope: !3503)
!3506 = !DILocation(line: 201, column: 21, scope: !3503)
!3507 = !DILocation(line: 201, column: 25, scope: !3503)
!3508 = !DILocation(line: 201, column: 36, scope: !3503)
!3509 = !DILocation(line: 201, column: 41, scope: !3503)
!3510 = !DILocation(line: 201, column: 10, scope: !3504)
!3511 = !DILocation(line: 202, column: 12, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3503, file: !187, line: 201, column: 45)
!3513 = !DILocation(line: 203, column: 3, scope: !3512)
!3514 = !DILocation(line: 205, column: 2, scope: !3504)
!3515 = !DILocation(line: 206, column: 5, scope: !3497)
!3516 = distinct !{!3516, !3491, !3517}
!3517 = !DILocation(line: 206, column: 5, scope: !3492)
!3518 = !DILocation(line: 208, column: 5, scope: !3479)
!3519 = !DILocation(line: 209, column: 12, scope: !3479)
!3520 = !DILocation(line: 209, column: 5, scope: !3479)
!3521 = distinct !DISubprogram(name: "log_stdin", scope: !187, file: !187, line: 168, type: !219, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!3522 = !DILocalVariable(name: "buf", arg: 1, scope: !3521, file: !187, line: 168, type: !221)
!3523 = !DILocation(line: 168, column: 23, scope: !3521)
!3524 = !DILocalVariable(name: "n", arg: 2, scope: !3521, file: !187, line: 168, type: !7)
!3525 = !DILocation(line: 168, column: 41, scope: !3521)
!3526 = !DILocalVariable(name: "plugin", scope: !3521, file: !187, line: 170, type: !3321)
!3527 = !DILocation(line: 170, column: 30, scope: !3521)
!3528 = !DILocalVariable(name: "omask", scope: !3521, file: !187, line: 171, type: !201)
!3529 = !DILocation(line: 171, column: 14, scope: !3521)
!3530 = !DILocalVariable(name: "rval", scope: !3521, file: !187, line: 172, type: !33)
!3531 = !DILocation(line: 172, column: 9, scope: !3521)
!3532 = !DILocation(line: 174, column: 5, scope: !3521)
!3533 = !DILocation(line: 176, column: 5, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3521, file: !187, line: 176, column: 5)
!3535 = !DILocation(line: 176, column: 5, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3534, file: !187, line: 176, column: 5)
!3537 = !DILocation(line: 177, column: 6, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !187, line: 177, column: 6)
!3539 = distinct !DILexicalBlock(scope: !3536, file: !187, line: 176, column: 41)
!3540 = !DILocation(line: 177, column: 14, scope: !3538)
!3541 = !DILocation(line: 177, column: 16, scope: !3538)
!3542 = !DILocation(line: 177, column: 20, scope: !3538)
!3543 = !DILocation(line: 177, column: 6, scope: !3539)
!3544 = !DILocation(line: 178, column: 11, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !187, line: 178, column: 10)
!3546 = distinct !DILexicalBlock(scope: !3538, file: !187, line: 177, column: 31)
!3547 = !DILocation(line: 178, column: 19, scope: !3545)
!3548 = !DILocation(line: 178, column: 21, scope: !3545)
!3549 = !DILocation(line: 178, column: 25, scope: !3545)
!3550 = !DILocation(line: 178, column: 35, scope: !3545)
!3551 = !DILocation(line: 178, column: 40, scope: !3545)
!3552 = !DILocation(line: 178, column: 10, scope: !3546)
!3553 = !DILocation(line: 179, column: 12, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3545, file: !187, line: 178, column: 44)
!3555 = !DILocation(line: 180, column: 3, scope: !3554)
!3556 = !DILocation(line: 182, column: 2, scope: !3546)
!3557 = !DILocation(line: 183, column: 5, scope: !3539)
!3558 = distinct !{!3558, !3533, !3559}
!3559 = !DILocation(line: 183, column: 5, scope: !3534)
!3560 = !DILocation(line: 185, column: 5, scope: !3521)
!3561 = !DILocation(line: 186, column: 12, scope: !3521)
!3562 = !DILocation(line: 186, column: 5, scope: !3521)
!3563 = distinct !DISubprogram(name: "log_stdout", scope: !187, file: !187, line: 214, type: !219, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!3564 = !DILocalVariable(name: "buf", arg: 1, scope: !3563, file: !187, line: 214, type: !221)
!3565 = !DILocation(line: 214, column: 24, scope: !3563)
!3566 = !DILocalVariable(name: "n", arg: 2, scope: !3563, file: !187, line: 214, type: !7)
!3567 = !DILocation(line: 214, column: 42, scope: !3563)
!3568 = !DILocalVariable(name: "plugin", scope: !3563, file: !187, line: 216, type: !3321)
!3569 = !DILocation(line: 216, column: 30, scope: !3563)
!3570 = !DILocalVariable(name: "omask", scope: !3563, file: !187, line: 217, type: !201)
!3571 = !DILocation(line: 217, column: 14, scope: !3563)
!3572 = !DILocalVariable(name: "rval", scope: !3563, file: !187, line: 218, type: !33)
!3573 = !DILocation(line: 218, column: 9, scope: !3563)
!3574 = !DILocation(line: 220, column: 5, scope: !3563)
!3575 = !DILocation(line: 222, column: 5, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3563, file: !187, line: 222, column: 5)
!3577 = !DILocation(line: 222, column: 5, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3576, file: !187, line: 222, column: 5)
!3579 = !DILocation(line: 223, column: 6, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !187, line: 223, column: 6)
!3581 = distinct !DILexicalBlock(scope: !3578, file: !187, line: 222, column: 41)
!3582 = !DILocation(line: 223, column: 14, scope: !3580)
!3583 = !DILocation(line: 223, column: 16, scope: !3580)
!3584 = !DILocation(line: 223, column: 20, scope: !3580)
!3585 = !DILocation(line: 223, column: 6, scope: !3581)
!3586 = !DILocation(line: 224, column: 11, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !187, line: 224, column: 10)
!3588 = distinct !DILexicalBlock(scope: !3580, file: !187, line: 223, column: 32)
!3589 = !DILocation(line: 224, column: 19, scope: !3587)
!3590 = !DILocation(line: 224, column: 21, scope: !3587)
!3591 = !DILocation(line: 224, column: 25, scope: !3587)
!3592 = !DILocation(line: 224, column: 36, scope: !3587)
!3593 = !DILocation(line: 224, column: 41, scope: !3587)
!3594 = !DILocation(line: 224, column: 10, scope: !3588)
!3595 = !DILocation(line: 225, column: 12, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3587, file: !187, line: 224, column: 45)
!3597 = !DILocation(line: 226, column: 3, scope: !3596)
!3598 = !DILocation(line: 228, column: 2, scope: !3588)
!3599 = !DILocation(line: 229, column: 5, scope: !3581)
!3600 = distinct !{!3600, !3575, !3601}
!3601 = !DILocation(line: 229, column: 5, scope: !3576)
!3602 = !DILocation(line: 231, column: 5, scope: !3563)
!3603 = !DILocation(line: 232, column: 12, scope: !3563)
!3604 = !DILocation(line: 232, column: 5, scope: !3563)
!3605 = distinct !DISubprogram(name: "log_stderr", scope: !187, file: !187, line: 237, type: !219, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!3606 = !DILocalVariable(name: "buf", arg: 1, scope: !3605, file: !187, line: 237, type: !221)
!3607 = !DILocation(line: 237, column: 24, scope: !3605)
!3608 = !DILocalVariable(name: "n", arg: 2, scope: !3605, file: !187, line: 237, type: !7)
!3609 = !DILocation(line: 237, column: 42, scope: !3605)
!3610 = !DILocalVariable(name: "plugin", scope: !3605, file: !187, line: 239, type: !3321)
!3611 = !DILocation(line: 239, column: 30, scope: !3605)
!3612 = !DILocalVariable(name: "omask", scope: !3605, file: !187, line: 240, type: !201)
!3613 = !DILocation(line: 240, column: 14, scope: !3605)
!3614 = !DILocalVariable(name: "rval", scope: !3605, file: !187, line: 241, type: !33)
!3615 = !DILocation(line: 241, column: 9, scope: !3605)
!3616 = !DILocation(line: 243, column: 5, scope: !3605)
!3617 = !DILocation(line: 245, column: 5, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3605, file: !187, line: 245, column: 5)
!3619 = !DILocation(line: 245, column: 5, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3618, file: !187, line: 245, column: 5)
!3621 = !DILocation(line: 246, column: 6, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !187, line: 246, column: 6)
!3623 = distinct !DILexicalBlock(scope: !3620, file: !187, line: 245, column: 41)
!3624 = !DILocation(line: 246, column: 14, scope: !3622)
!3625 = !DILocation(line: 246, column: 16, scope: !3622)
!3626 = !DILocation(line: 246, column: 20, scope: !3622)
!3627 = !DILocation(line: 246, column: 6, scope: !3623)
!3628 = !DILocation(line: 247, column: 11, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !187, line: 247, column: 10)
!3630 = distinct !DILexicalBlock(scope: !3622, file: !187, line: 246, column: 32)
!3631 = !DILocation(line: 247, column: 19, scope: !3629)
!3632 = !DILocation(line: 247, column: 21, scope: !3629)
!3633 = !DILocation(line: 247, column: 25, scope: !3629)
!3634 = !DILocation(line: 247, column: 36, scope: !3629)
!3635 = !DILocation(line: 247, column: 41, scope: !3629)
!3636 = !DILocation(line: 247, column: 10, scope: !3630)
!3637 = !DILocation(line: 248, column: 12, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3629, file: !187, line: 247, column: 45)
!3639 = !DILocation(line: 249, column: 3, scope: !3638)
!3640 = !DILocation(line: 251, column: 2, scope: !3630)
!3641 = !DILocation(line: 252, column: 5, scope: !3623)
!3642 = distinct !{!3642, !3617, !3643}
!3643 = !DILocation(line: 252, column: 5, scope: !3618)
!3644 = !DILocation(line: 254, column: 5, scope: !3605)
!3645 = !DILocation(line: 255, column: 12, scope: !3605)
!3646 = !DILocation(line: 255, column: 5, scope: !3605)
!3647 = distinct !DISubprogram(name: "exec_monitor", scope: !187, file: !187, line: 805, type: !3648, scopeLine: 806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{!33, !2952, !33}
!3650 = !DILocalVariable(name: "details", arg: 1, scope: !3647, file: !187, line: 805, type: !2952)
!3651 = !DILocation(line: 805, column: 38, scope: !3647)
!3652 = !DILocalVariable(name: "backchannel", arg: 2, scope: !3647, file: !187, line: 805, type: !33)
!3653 = !DILocation(line: 805, column: 51, scope: !3647)
!3654 = !DILocalVariable(name: "cstat", scope: !3647, file: !187, line: 807, type: !2682)
!3655 = !DILocation(line: 807, column: 27, scope: !3647)
!3656 = !DILocalVariable(name: "tv", scope: !3647, file: !187, line: 808, type: !2442)
!3657 = !DILocation(line: 808, column: 20, scope: !3647)
!3658 = !DILocalVariable(name: "fdsr", scope: !3647, file: !187, line: 809, type: !179)
!3659 = !DILocation(line: 809, column: 13, scope: !3647)
!3660 = !DILocalVariable(name: "sa", scope: !3647, file: !187, line: 810, type: !2207)
!3661 = !DILocation(line: 810, column: 17, scope: !3647)
!3662 = !DILocalVariable(name: "errpipe", scope: !3647, file: !187, line: 811, type: !169)
!3663 = !DILocation(line: 811, column: 9, scope: !3647)
!3664 = !DILocalVariable(name: "maxfd", scope: !3647, file: !187, line: 811, type: !33)
!3665 = !DILocation(line: 811, column: 21, scope: !3647)
!3666 = !DILocalVariable(name: "n", scope: !3647, file: !187, line: 811, type: !33)
!3667 = !DILocation(line: 811, column: 28, scope: !3647)
!3668 = !DILocalVariable(name: "status", scope: !3647, file: !187, line: 811, type: !33)
!3669 = !DILocation(line: 811, column: 31, scope: !3647)
!3670 = !DILocalVariable(name: "alive", scope: !3647, file: !187, line: 812, type: !33)
!3671 = !DILocation(line: 812, column: 9, scope: !3647)
!3672 = !DILocalVariable(name: "signo", scope: !3647, file: !187, line: 813, type: !34)
!3673 = !DILocation(line: 813, column: 19, scope: !3647)
!3674 = !DILocation(line: 816, column: 9, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 816, column: 9)
!3676 = !DILocation(line: 816, column: 28, scope: !3675)
!3677 = !DILocation(line: 816, column: 9, scope: !3647)
!3678 = !DILocation(line: 817, column: 8, scope: !3675)
!3679 = !DILocation(line: 817, column: 2, scope: !3675)
!3680 = !DILocation(line: 818, column: 9, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 818, column: 9)
!3682 = !DILocation(line: 818, column: 29, scope: !3681)
!3683 = !DILocation(line: 818, column: 9, scope: !3647)
!3684 = !DILocation(line: 819, column: 8, scope: !3681)
!3685 = !DILocation(line: 819, column: 2, scope: !3681)
!3686 = !DILocation(line: 825, column: 9, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 825, column: 9)
!3688 = !DILocation(line: 825, column: 36, scope: !3687)
!3689 = !DILocation(line: 825, column: 9, scope: !3647)
!3690 = !DILocation(line: 826, column: 11, scope: !3687)
!3691 = !DILocation(line: 826, column: 2, scope: !3687)
!3692 = !DILocation(line: 829, column: 16, scope: !3647)
!3693 = !DILocation(line: 829, column: 5, scope: !3647)
!3694 = !DILocation(line: 830, column: 21, scope: !3647)
!3695 = !DILocation(line: 830, column: 5, scope: !3647)
!3696 = !DILocation(line: 831, column: 8, scope: !3647)
!3697 = !DILocation(line: 831, column: 17, scope: !3647)
!3698 = !DILocation(line: 832, column: 8, scope: !3647)
!3699 = !DILocation(line: 832, column: 19, scope: !3647)
!3700 = !DILocation(line: 833, column: 5, scope: !3647)
!3701 = !DILocation(line: 834, column: 5, scope: !3647)
!3702 = !DILocation(line: 837, column: 8, scope: !3647)
!3703 = !DILocation(line: 837, column: 19, scope: !3647)
!3704 = !DILocation(line: 838, column: 5, scope: !3647)
!3705 = !DILocation(line: 839, column: 5, scope: !3647)
!3706 = !DILocation(line: 842, column: 8, scope: !3647)
!3707 = !DILocation(line: 842, column: 17, scope: !3647)
!3708 = !DILocation(line: 843, column: 8, scope: !3647)
!3709 = !DILocation(line: 843, column: 19, scope: !3647)
!3710 = !DILocation(line: 844, column: 5, scope: !3647)
!3711 = !DILocation(line: 851, column: 9, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 851, column: 9)
!3713 = !DILocation(line: 851, column: 18, scope: !3712)
!3714 = !DILocation(line: 851, column: 9, scope: !3647)
!3715 = !DILocation(line: 852, column: 2, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3712, file: !187, line: 851, column: 25)
!3717 = !DILocation(line: 853, column: 2, scope: !3716)
!3718 = !DILocation(line: 855, column: 9, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 855, column: 9)
!3720 = !DILocation(line: 855, column: 27, scope: !3719)
!3721 = !DILocation(line: 855, column: 9, scope: !3647)
!3722 = !DILocation(line: 857, column: 12, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !187, line: 857, column: 6)
!3724 = distinct !DILexicalBlock(scope: !3719, file: !187, line: 855, column: 34)
!3725 = !DILocation(line: 857, column: 6, scope: !3723)
!3726 = !DILocation(line: 857, column: 48, scope: !3723)
!3727 = !DILocation(line: 857, column: 6, scope: !3724)
!3728 = !DILocation(line: 858, column: 15, scope: !3723)
!3729 = !DILocation(line: 858, column: 6, scope: !3723)
!3730 = !DILocation(line: 864, column: 5, scope: !3724)
!3731 = !DILocation(line: 872, column: 9, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 872, column: 9)
!3733 = !DILocation(line: 872, column: 9, scope: !3647)
!3734 = !DILocation(line: 873, column: 13, scope: !3732)
!3735 = !DILocation(line: 873, column: 2, scope: !3732)
!3736 = !DILocation(line: 876, column: 14, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 876, column: 9)
!3738 = !DILocation(line: 876, column: 9, scope: !3737)
!3739 = !DILocation(line: 876, column: 23, scope: !3737)
!3740 = !DILocation(line: 876, column: 9, scope: !3647)
!3741 = !DILocation(line: 877, column: 11, scope: !3737)
!3742 = !DILocation(line: 877, column: 2, scope: !3737)
!3743 = !DILocation(line: 878, column: 13, scope: !3647)
!3744 = !DILocation(line: 878, column: 11, scope: !3647)
!3745 = !DILocation(line: 879, column: 9, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 879, column: 9)
!3747 = !DILocation(line: 879, column: 15, scope: !3746)
!3748 = !DILocation(line: 879, column: 9, scope: !3647)
!3749 = !DILocation(line: 880, column: 10, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3746, file: !187, line: 879, column: 22)
!3751 = !DILocation(line: 880, column: 2, scope: !3750)
!3752 = !DILocation(line: 881, column: 2, scope: !3750)
!3753 = !DILocation(line: 883, column: 9, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 883, column: 9)
!3755 = !DILocation(line: 883, column: 15, scope: !3754)
!3756 = !DILocation(line: 883, column: 9, scope: !3647)
!3757 = !DILocation(line: 885, column: 8, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3754, file: !187, line: 883, column: 21)
!3759 = !DILocation(line: 885, column: 2, scope: !3758)
!3760 = !DILocation(line: 886, column: 8, scope: !3758)
!3761 = !DILocation(line: 886, column: 2, scope: !3758)
!3762 = !DILocation(line: 887, column: 8, scope: !3758)
!3763 = !DILocation(line: 887, column: 2, scope: !3758)
!3764 = !DILocation(line: 888, column: 8, scope: !3758)
!3765 = !DILocation(line: 888, column: 2, scope: !3758)
!3766 = !DILocation(line: 889, column: 8, scope: !3758)
!3767 = !DILocation(line: 889, column: 2, scope: !3758)
!3768 = !DILocation(line: 890, column: 2, scope: !3758)
!3769 = !DILocation(line: 893, column: 11, scope: !3758)
!3770 = !DILocation(line: 893, column: 2, scope: !3758)
!3771 = !DILocation(line: 894, column: 8, scope: !3758)
!3772 = !DILocation(line: 894, column: 13, scope: !3758)
!3773 = !DILocation(line: 895, column: 14, scope: !3758)
!3774 = !DILocation(line: 895, column: 8, scope: !3758)
!3775 = !DILocation(line: 895, column: 12, scope: !3758)
!3776 = !DILocation(line: 896, column: 12, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3758, file: !187, line: 896, column: 6)
!3778 = !DILocation(line: 896, column: 24, scope: !3777)
!3779 = !DILocation(line: 896, column: 6, scope: !3777)
!3780 = !DILocation(line: 896, column: 47, scope: !3777)
!3781 = !DILocation(line: 896, column: 6, scope: !3758)
!3782 = !DILocation(line: 898, column: 2, scope: !3758)
!3783 = !DILocation(line: 900, column: 11, scope: !3647)
!3784 = !DILocation(line: 900, column: 5, scope: !3647)
!3785 = !DILocation(line: 903, column: 9, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 903, column: 9)
!3787 = !DILocation(line: 903, column: 30, scope: !3786)
!3788 = !DILocation(line: 903, column: 27, scope: !3786)
!3789 = !DILocation(line: 903, column: 9, scope: !3647)
!3790 = !DILocation(line: 904, column: 8, scope: !3786)
!3791 = !DILocation(line: 904, column: 2, scope: !3786)
!3792 = !DILocation(line: 905, column: 9, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 905, column: 9)
!3794 = !DILocation(line: 905, column: 31, scope: !3793)
!3795 = !DILocation(line: 905, column: 28, scope: !3793)
!3796 = !DILocation(line: 905, column: 9, scope: !3647)
!3797 = !DILocation(line: 906, column: 8, scope: !3793)
!3798 = !DILocation(line: 906, column: 2, scope: !3793)
!3799 = !DILocation(line: 907, column: 9, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 907, column: 9)
!3801 = !DILocation(line: 907, column: 31, scope: !3800)
!3802 = !DILocation(line: 907, column: 28, scope: !3800)
!3803 = !DILocation(line: 907, column: 9, scope: !3647)
!3804 = !DILocation(line: 908, column: 8, scope: !3800)
!3805 = !DILocation(line: 908, column: 2, scope: !3800)
!3806 = !DILocation(line: 914, column: 18, scope: !3647)
!3807 = !DILocation(line: 914, column: 16, scope: !3647)
!3808 = !DILocation(line: 915, column: 13, scope: !3647)
!3809 = !DILocation(line: 915, column: 20, scope: !3647)
!3810 = !DILocation(line: 915, column: 5, scope: !3647)
!3811 = !DILocation(line: 916, column: 9, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 916, column: 9)
!3813 = !DILocation(line: 916, column: 9, scope: !3647)
!3814 = !DILocation(line: 917, column: 2, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3812, file: !187, line: 916, column: 21)
!3816 = !DILocation(line: 918, column: 25, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3815, file: !187, line: 917, column: 5)
!3818 = !DILocation(line: 918, column: 44, scope: !3817)
!3819 = !DILocation(line: 918, column: 15, scope: !3817)
!3820 = !DILocation(line: 918, column: 13, scope: !3817)
!3821 = !DILocation(line: 919, column: 2, scope: !3817)
!3822 = !DILocation(line: 919, column: 11, scope: !3815)
!3823 = !DILocation(line: 919, column: 18, scope: !3815)
!3824 = !DILocation(line: 919, column: 24, scope: !3815)
!3825 = !DILocation(line: 919, column: 27, scope: !3815)
!3826 = !DILocation(line: 919, column: 33, scope: !3815)
!3827 = !DILocation(line: 0, scope: !3815)
!3828 = distinct !{!3828, !3814, !3829}
!3829 = !DILocation(line: 919, column: 41, scope: !3815)
!3830 = !DILocation(line: 920, column: 5, scope: !3815)
!3831 = !DILocation(line: 923, column: 13, scope: !3647)
!3832 = !DILocation(line: 923, column: 11, scope: !3647)
!3833 = !DILocation(line: 924, column: 31, scope: !3647)
!3834 = !DILocation(line: 924, column: 22, scope: !3647)
!3835 = !DILocation(line: 924, column: 12, scope: !3647)
!3836 = !DILocation(line: 924, column: 10, scope: !3647)
!3837 = !DILocation(line: 925, column: 16, scope: !3647)
!3838 = !DILocation(line: 925, column: 22, scope: !3647)
!3839 = !DILocation(line: 925, column: 50, scope: !3647)
!3840 = !DILocation(line: 925, column: 5, scope: !3647)
!3841 = !DILocation(line: 926, column: 16, scope: !3647)
!3842 = !DILocation(line: 926, column: 5, scope: !3647)
!3843 = !DILocation(line: 927, column: 8, scope: !3647)
!3844 = !DILocation(line: 927, column: 15, scope: !3647)
!3845 = !DILocation(line: 928, column: 8, scope: !3647)
!3846 = !DILocation(line: 928, column: 16, scope: !3647)
!3847 = !DILocation(line: 929, column: 5, scope: !3647)
!3848 = !DILocation(line: 931, column: 2, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !187, line: 929, column: 14)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !187, line: 929, column: 5)
!3851 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 929, column: 5)
!3852 = !DILocation(line: 932, column: 2, scope: !3849)
!3853 = !DILocation(line: 933, column: 6, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3849, file: !187, line: 933, column: 6)
!3855 = !DILocation(line: 933, column: 17, scope: !3854)
!3856 = !DILocation(line: 933, column: 6, scope: !3849)
!3857 = !DILocation(line: 934, column: 6, scope: !3854)
!3858 = !DILocation(line: 935, column: 10, scope: !3849)
!3859 = !DILocation(line: 935, column: 8, scope: !3849)
!3860 = !DILocation(line: 938, column: 13, scope: !3849)
!3861 = !DILocation(line: 938, column: 19, scope: !3849)
!3862 = !DILocation(line: 938, column: 24, scope: !3849)
!3863 = !DILocation(line: 938, column: 42, scope: !3849)
!3864 = !DILocation(line: 938, column: 6, scope: !3849)
!3865 = !DILocation(line: 938, column: 4, scope: !3849)
!3866 = !DILocation(line: 939, column: 6, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3849, file: !187, line: 939, column: 6)
!3868 = !DILocation(line: 939, column: 8, scope: !3867)
!3869 = !DILocation(line: 939, column: 6, scope: !3849)
!3870 = !DILocation(line: 940, column: 10, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3872, file: !187, line: 940, column: 10)
!3872 = distinct !DILexicalBlock(scope: !3867, file: !187, line: 939, column: 14)
!3873 = !DILocation(line: 940, column: 12, scope: !3871)
!3874 = !DILocation(line: 940, column: 10, scope: !3872)
!3875 = !DILocation(line: 941, column: 3, scope: !3871)
!3876 = !DILocation(line: 942, column: 10, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3872, file: !187, line: 942, column: 10)
!3878 = !DILocation(line: 942, column: 16, scope: !3877)
!3879 = !DILocation(line: 942, column: 10, scope: !3872)
!3880 = !DILocation(line: 943, column: 3, scope: !3877)
!3881 = distinct !{!3881, !3882, !3883}
!3882 = !DILocation(line: 929, column: 5, scope: !3851)
!3883 = !DILocation(line: 997, column: 5, scope: !3851)
!3884 = !DILocation(line: 944, column: 15, scope: !3872)
!3885 = !DILocation(line: 944, column: 6, scope: !3872)
!3886 = !DILocation(line: 947, column: 6, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3849, file: !187, line: 947, column: 6)
!3888 = !DILocation(line: 947, column: 6, scope: !3849)
!3889 = !DILocation(line: 948, column: 15, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3887, file: !187, line: 947, column: 38)
!3891 = !DILocation(line: 948, column: 10, scope: !3890)
!3892 = !DILocation(line: 948, column: 8, scope: !3890)
!3893 = !DILocation(line: 949, column: 10, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3890, file: !187, line: 949, column: 10)
!3895 = !DILocation(line: 949, column: 12, scope: !3894)
!3896 = !DILocation(line: 949, column: 10, scope: !3890)
!3897 = !DILocation(line: 950, column: 7, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !187, line: 950, column: 7)
!3899 = distinct !DILexicalBlock(scope: !3894, file: !187, line: 949, column: 19)
!3900 = !DILocation(line: 950, column: 13, scope: !3898)
!3901 = !DILocation(line: 950, column: 22, scope: !3898)
!3902 = !DILocation(line: 950, column: 25, scope: !3898)
!3903 = !DILocation(line: 950, column: 31, scope: !3898)
!3904 = !DILocation(line: 950, column: 7, scope: !3899)
!3905 = !DILocation(line: 951, column: 7, scope: !3898)
!3906 = !DILocation(line: 952, column: 11, scope: !3899)
!3907 = !DILocation(line: 952, column: 3, scope: !3899)
!3908 = !DILocation(line: 953, column: 3, scope: !3899)
!3909 = !DILocation(line: 959, column: 10, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3890, file: !187, line: 959, column: 10)
!3911 = !DILocation(line: 959, column: 16, scope: !3910)
!3912 = !DILocation(line: 959, column: 10, scope: !3890)
!3913 = !DILocation(line: 960, column: 26, scope: !3910)
!3914 = !DILocation(line: 960, column: 11, scope: !3910)
!3915 = !DILocation(line: 960, column: 9, scope: !3910)
!3916 = !DILocation(line: 960, column: 3, scope: !3910)
!3917 = !DILocation(line: 962, column: 18, scope: !3910)
!3918 = !DILocation(line: 962, column: 25, scope: !3910)
!3919 = !DILocation(line: 962, column: 3, scope: !3910)
!3920 = !DILocation(line: 963, column: 6, scope: !3890)
!3921 = !DILocation(line: 965, column: 6, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3849, file: !187, line: 965, column: 6)
!3923 = !DILocation(line: 965, column: 17, scope: !3922)
!3924 = !DILocation(line: 965, column: 23, scope: !3922)
!3925 = !DILocation(line: 965, column: 26, scope: !3922)
!3926 = !DILocation(line: 965, column: 6, scope: !3849)
!3927 = !DILocation(line: 967, column: 15, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3922, file: !187, line: 965, column: 54)
!3929 = !DILocation(line: 967, column: 27, scope: !3928)
!3930 = !DILocation(line: 967, column: 10, scope: !3928)
!3931 = !DILocation(line: 967, column: 8, scope: !3928)
!3932 = !DILocation(line: 968, column: 10, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3928, file: !187, line: 968, column: 10)
!3934 = !DILocation(line: 968, column: 12, scope: !3933)
!3935 = !DILocation(line: 968, column: 10, scope: !3928)
!3936 = !DILocation(line: 969, column: 7, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !187, line: 969, column: 7)
!3938 = distinct !DILexicalBlock(scope: !3933, file: !187, line: 968, column: 19)
!3939 = !DILocation(line: 969, column: 13, scope: !3937)
!3940 = !DILocation(line: 969, column: 7, scope: !3938)
!3941 = !DILocation(line: 970, column: 7, scope: !3937)
!3942 = !DILocation(line: 971, column: 11, scope: !3938)
!3943 = !DILocation(line: 971, column: 3, scope: !3938)
!3944 = !DILocation(line: 972, column: 3, scope: !3938)
!3945 = !DILocation(line: 975, column: 6, scope: !3928)
!3946 = !DILocation(line: 976, column: 12, scope: !3928)
!3947 = !DILocation(line: 976, column: 6, scope: !3928)
!3948 = !DILocation(line: 977, column: 6, scope: !3928)
!3949 = !DILocation(line: 977, column: 17, scope: !3928)
!3950 = !DILocation(line: 978, column: 2, scope: !3928)
!3951 = !DILocation(line: 979, column: 6, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3849, file: !187, line: 979, column: 6)
!3953 = !DILocation(line: 979, column: 6, scope: !3849)
!3954 = !DILocalVariable(name: "cstmp", scope: !3955, file: !187, line: 980, type: !2682)
!3955 = distinct !DILexicalBlock(scope: !3952, file: !187, line: 979, column: 35)
!3956 = !DILocation(line: 980, column: 28, scope: !3955)
!3957 = !DILocation(line: 983, column: 15, scope: !3955)
!3958 = !DILocation(line: 983, column: 28, scope: !3955)
!3959 = !DILocation(line: 983, column: 10, scope: !3955)
!3960 = !DILocation(line: 983, column: 8, scope: !3955)
!3961 = !DILocation(line: 984, column: 10, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3955, file: !187, line: 984, column: 10)
!3963 = !DILocation(line: 984, column: 12, scope: !3962)
!3964 = !DILocation(line: 984, column: 10, scope: !3955)
!3965 = !DILocation(line: 985, column: 7, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !187, line: 985, column: 7)
!3967 = distinct !DILexicalBlock(scope: !3962, file: !187, line: 984, column: 19)
!3968 = !DILocation(line: 985, column: 13, scope: !3966)
!3969 = !DILocation(line: 985, column: 7, scope: !3967)
!3970 = !DILocation(line: 986, column: 7, scope: !3966)
!3971 = !DILocation(line: 987, column: 11, scope: !3967)
!3972 = !DILocation(line: 987, column: 3, scope: !3967)
!3973 = !DILocation(line: 988, column: 3, scope: !3967)
!3974 = !DILocation(line: 990, column: 16, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3955, file: !187, line: 990, column: 10)
!3976 = !DILocation(line: 990, column: 21, scope: !3975)
!3977 = !DILocation(line: 990, column: 10, scope: !3955)
!3978 = !DILocation(line: 991, column: 12, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3975, file: !187, line: 990, column: 35)
!3980 = !DILocation(line: 992, column: 13, scope: !3979)
!3981 = !DILocation(line: 991, column: 3, scope: !3979)
!3982 = !DILocation(line: 993, column: 3, scope: !3979)
!3983 = !DILocation(line: 995, column: 21, scope: !3955)
!3984 = !DILocation(line: 995, column: 34, scope: !3955)
!3985 = !DILocation(line: 995, column: 6, scope: !3955)
!3986 = !DILocation(line: 996, column: 2, scope: !3955)
!3987 = !DILocation(line: 929, column: 5, scope: !3850)
!3988 = !DILabel(scope: !3647, name: "done", file: !187, line: 999)
!3989 = !DILocation(line: 999, column: 1, scope: !3647)
!3990 = !DILocation(line: 1000, column: 9, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3647, file: !187, line: 1000, column: 9)
!3992 = !DILocation(line: 1000, column: 9, scope: !3647)
!3993 = !DILocation(line: 1002, column: 7, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3991, file: !187, line: 1000, column: 16)
!3995 = !DILocation(line: 1002, column: 2, scope: !3994)
!3996 = !DILocation(line: 1003, column: 5, scope: !3994)
!3997 = !DILocation(line: 1005, column: 14, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3991, file: !187, line: 1003, column: 12)
!3999 = !DILocation(line: 1005, column: 2, scope: !3998)
!4000 = !DILocation(line: 1007, column: 5, scope: !3647)
!4001 = !DILabel(scope: !3647, name: "bad", file: !187, line: 1009)
!4002 = !DILocation(line: 1009, column: 1, scope: !3647)
!4003 = !DILocation(line: 1010, column: 12, scope: !3647)
!4004 = !DILocation(line: 1010, column: 5, scope: !3647)
!4005 = distinct !DISubprogram(name: "exec_pty", scope: !187, file: !187, line: 1091, type: !4006, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{null, !2952}
!4008 = !DILocalVariable(name: "details", arg: 1, scope: !4005, file: !187, line: 1091, type: !2952)
!4009 = !DILocation(line: 1091, column: 34, scope: !4005)
!4010 = !DILocalVariable(name: "self", scope: !4005, file: !187, line: 1093, type: !35)
!4011 = !DILocation(line: 1093, column: 11, scope: !4005)
!4012 = !DILocation(line: 1093, column: 18, scope: !4005)
!4013 = !DILocation(line: 1096, column: 16, scope: !4005)
!4014 = !DILocation(line: 1096, column: 5, scope: !4005)
!4015 = !DILocation(line: 1099, column: 14, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4005, file: !187, line: 1099, column: 9)
!4017 = !DILocation(line: 1099, column: 9, scope: !4016)
!4018 = !DILocation(line: 1099, column: 47, scope: !4016)
!4019 = !DILocation(line: 1099, column: 53, scope: !4016)
!4020 = !DILocation(line: 1100, column: 7, scope: !4016)
!4021 = !DILocation(line: 1100, column: 2, scope: !4016)
!4022 = !DILocation(line: 1100, column: 42, scope: !4016)
!4023 = !DILocation(line: 1100, column: 48, scope: !4016)
!4024 = !DILocation(line: 1101, column: 7, scope: !4016)
!4025 = !DILocation(line: 1101, column: 2, scope: !4016)
!4026 = !DILocation(line: 1101, column: 42, scope: !4016)
!4027 = !DILocation(line: 1099, column: 9, scope: !4005)
!4028 = !DILocation(line: 1102, column: 2, scope: !4016)
!4029 = !DILocation(line: 1105, column: 9, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4005, file: !187, line: 1105, column: 9)
!4031 = !DILocation(line: 1105, column: 9, scope: !4005)
!4032 = !DILocation(line: 1106, column: 2, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4030, file: !187, line: 1105, column: 21)
!4034 = !DILocation(line: 1106, column: 19, scope: !4033)
!4035 = !DILocation(line: 1106, column: 9, scope: !4033)
!4036 = !DILocation(line: 1106, column: 41, scope: !4033)
!4037 = !DILocation(line: 1106, column: 38, scope: !4033)
!4038 = distinct !{!4038, !4032, !4039}
!4039 = !DILocation(line: 1107, column: 6, scope: !4033)
!4040 = !DILocation(line: 1108, column: 5, scope: !4033)
!4041 = !DILocation(line: 1111, column: 9, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4005, file: !187, line: 1111, column: 9)
!4043 = !DILocation(line: 1111, column: 27, scope: !4042)
!4044 = !DILocation(line: 1111, column: 9, scope: !4005)
!4045 = !DILocation(line: 1112, column: 8, scope: !4042)
!4046 = !DILocation(line: 1112, column: 2, scope: !4042)
!4047 = !DILocation(line: 1113, column: 9, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4005, file: !187, line: 1113, column: 9)
!4049 = !DILocation(line: 1113, column: 30, scope: !4048)
!4050 = !DILocation(line: 1113, column: 27, scope: !4048)
!4051 = !DILocation(line: 1113, column: 9, scope: !4005)
!4052 = !DILocation(line: 1114, column: 8, scope: !4048)
!4053 = !DILocation(line: 1114, column: 2, scope: !4048)
!4054 = !DILocation(line: 1115, column: 9, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4005, file: !187, line: 1115, column: 9)
!4056 = !DILocation(line: 1115, column: 31, scope: !4055)
!4057 = !DILocation(line: 1115, column: 28, scope: !4055)
!4058 = !DILocation(line: 1115, column: 9, scope: !4005)
!4059 = !DILocation(line: 1116, column: 8, scope: !4055)
!4060 = !DILocation(line: 1116, column: 2, scope: !4055)
!4061 = !DILocation(line: 1117, column: 9, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4005, file: !187, line: 1117, column: 9)
!4063 = !DILocation(line: 1117, column: 31, scope: !4062)
!4064 = !DILocation(line: 1117, column: 28, scope: !4062)
!4065 = !DILocation(line: 1117, column: 9, scope: !4005)
!4066 = !DILocation(line: 1118, column: 8, scope: !4062)
!4067 = !DILocation(line: 1118, column: 2, scope: !4062)
!4068 = !DILocation(line: 1120, column: 9, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4005, file: !187, line: 1120, column: 9)
!4070 = !DILocation(line: 1120, column: 18, scope: !4069)
!4071 = !DILocation(line: 1120, column: 28, scope: !4069)
!4072 = !DILocation(line: 1120, column: 9, scope: !4005)
!4073 = !DILocation(line: 1121, column: 12, scope: !4069)
!4074 = !DILocation(line: 1121, column: 21, scope: !4069)
!4075 = !DILocation(line: 1121, column: 2, scope: !4069)
!4076 = !DILocation(line: 1127, column: 12, scope: !4005)
!4077 = !DILocation(line: 1127, column: 21, scope: !4005)
!4078 = !DILocation(line: 1127, column: 30, scope: !4005)
!4079 = !DILocation(line: 1127, column: 39, scope: !4005)
!4080 = !DILocation(line: 1127, column: 45, scope: !4005)
!4081 = !DILocation(line: 1127, column: 54, scope: !4005)
!4082 = !DILocation(line: 1127, column: 2, scope: !4005)
!4083 = !DILocation(line: 1128, column: 1, scope: !4005)
!4084 = distinct !DISubprogram(name: "handle_sigchld", scope: !187, file: !187, line: 765, type: !4085, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{!33, !33, !2681}
!4087 = !DILocalVariable(name: "backchannel", arg: 1, scope: !4084, file: !187, line: 765, type: !33)
!4088 = !DILocation(line: 765, column: 20, scope: !4084)
!4089 = !DILocalVariable(name: "cstat", arg: 2, scope: !4084, file: !187, line: 765, type: !2681)
!4090 = !DILocation(line: 765, column: 56, scope: !4084)
!4091 = !DILocalVariable(name: "status", scope: !4084, file: !187, line: 767, type: !33)
!4092 = !DILocation(line: 767, column: 9, scope: !4084)
!4093 = !DILocalVariable(name: "alive", scope: !4084, file: !187, line: 767, type: !33)
!4094 = !DILocation(line: 767, column: 17, scope: !4084)
!4095 = !DILocalVariable(name: "pid", scope: !4084, file: !187, line: 768, type: !35)
!4096 = !DILocation(line: 768, column: 11, scope: !4084)
!4097 = !DILocation(line: 771, column: 5, scope: !4084)
!4098 = !DILocation(line: 772, column: 16, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4084, file: !187, line: 771, column: 8)
!4100 = !DILocation(line: 772, column: 8, scope: !4099)
!4101 = !DILocation(line: 772, column: 6, scope: !4099)
!4102 = !DILocation(line: 773, column: 5, scope: !4099)
!4103 = !DILocation(line: 773, column: 14, scope: !4084)
!4104 = !DILocation(line: 773, column: 18, scope: !4084)
!4105 = !DILocation(line: 773, column: 24, scope: !4084)
!4106 = !DILocation(line: 773, column: 27, scope: !4084)
!4107 = !DILocation(line: 773, column: 33, scope: !4084)
!4108 = !DILocation(line: 0, scope: !4084)
!4109 = distinct !{!4109, !4097, !4110}
!4110 = !DILocation(line: 773, column: 41, scope: !4084)
!4111 = !DILocation(line: 774, column: 9, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4084, file: !187, line: 774, column: 9)
!4113 = !DILocation(line: 774, column: 16, scope: !4112)
!4114 = !DILocation(line: 774, column: 13, scope: !4112)
!4115 = !DILocation(line: 774, column: 9, scope: !4084)
!4116 = !DILocation(line: 775, column: 6, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !187, line: 775, column: 6)
!4118 = distinct !DILexicalBlock(scope: !4112, file: !187, line: 774, column: 23)
!4119 = !DILocation(line: 775, column: 13, scope: !4117)
!4120 = !DILocation(line: 775, column: 18, scope: !4117)
!4121 = !DILocation(line: 775, column: 6, scope: !4118)
!4122 = !DILocation(line: 776, column: 6, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4117, file: !187, line: 775, column: 32)
!4124 = !DILocation(line: 776, column: 13, scope: !4123)
!4125 = !DILocation(line: 776, column: 18, scope: !4123)
!4126 = !DILocation(line: 777, column: 19, scope: !4123)
!4127 = !DILocation(line: 777, column: 6, scope: !4123)
!4128 = !DILocation(line: 777, column: 13, scope: !4123)
!4129 = !DILocation(line: 777, column: 17, scope: !4123)
!4130 = !DILocation(line: 778, column: 10, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4123, file: !187, line: 778, column: 10)
!4132 = !DILocation(line: 778, column: 10, scope: !4123)
!4133 = !DILocation(line: 779, column: 47, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4131, file: !187, line: 778, column: 30)
!4135 = !DILocation(line: 779, column: 3, scope: !4134)
!4136 = !DILocation(line: 780, column: 3, scope: !4134)
!4137 = !DILocation(line: 781, column: 30, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4134, file: !187, line: 780, column: 6)
!4139 = !DILocation(line: 781, column: 20, scope: !4138)
!4140 = !DILocation(line: 781, column: 18, scope: !4138)
!4141 = !DILocation(line: 782, column: 3, scope: !4138)
!4142 = !DILocation(line: 782, column: 12, scope: !4134)
!4143 = !DILocation(line: 782, column: 23, scope: !4134)
!4144 = !DILocation(line: 782, column: 29, scope: !4134)
!4145 = !DILocation(line: 782, column: 32, scope: !4134)
!4146 = !DILocation(line: 782, column: 38, scope: !4134)
!4147 = !DILocation(line: 0, scope: !4134)
!4148 = distinct !{!4148, !4136, !4149}
!4149 = !DILocation(line: 782, column: 46, scope: !4134)
!4150 = !DILocation(line: 783, column: 19, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4134, file: !187, line: 783, column: 7)
!4152 = !DILocation(line: 783, column: 32, scope: !4151)
!4153 = !DILocation(line: 783, column: 7, scope: !4151)
!4154 = !DILocation(line: 783, column: 39, scope: !4151)
!4155 = !DILocation(line: 783, column: 7, scope: !4134)
!4156 = !DILocation(line: 784, column: 14, scope: !4151)
!4157 = !DILocation(line: 784, column: 7, scope: !4151)
!4158 = !DILocation(line: 785, column: 6, scope: !4134)
!4159 = !DILocation(line: 785, column: 17, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4131, file: !187, line: 785, column: 17)
!4161 = !DILocation(line: 785, column: 17, scope: !4131)
!4162 = !DILocation(line: 786, column: 46, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4160, file: !187, line: 785, column: 38)
!4164 = !DILocation(line: 786, column: 3, scope: !4163)
!4165 = !DILocation(line: 787, column: 6, scope: !4163)
!4166 = !DILocation(line: 788, column: 39, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4160, file: !187, line: 787, column: 13)
!4168 = !DILocation(line: 788, column: 3, scope: !4167)
!4169 = !DILocation(line: 790, column: 2, scope: !4123)
!4170 = !DILocation(line: 791, column: 7, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4118, file: !187, line: 791, column: 6)
!4172 = !DILocation(line: 791, column: 6, scope: !4118)
!4173 = !DILocation(line: 792, column: 12, scope: !4171)
!4174 = !DILocation(line: 792, column: 6, scope: !4171)
!4175 = !DILocation(line: 793, column: 5, scope: !4118)
!4176 = !DILocation(line: 794, column: 12, scope: !4084)
!4177 = !DILocation(line: 794, column: 5, scope: !4084)
!4178 = !DILocation(line: 795, column: 1, scope: !4084)
!4179 = distinct !DISubprogram(name: "deliver_signal", scope: !187, file: !187, line: 700, type: !2888, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!4180 = !DILocalVariable(name: "pid", arg: 1, scope: !4179, file: !187, line: 700, type: !35)
!4181 = !DILocation(line: 700, column: 22, scope: !4179)
!4182 = !DILocalVariable(name: "signo", arg: 2, scope: !4179, file: !187, line: 700, type: !33)
!4183 = !DILocation(line: 700, column: 31, scope: !4179)
!4184 = !DILocalVariable(name: "status", scope: !4179, file: !187, line: 702, type: !33)
!4185 = !DILocation(line: 702, column: 9, scope: !4179)
!4186 = !DILocation(line: 705, column: 44, scope: !4179)
!4187 = !DILocation(line: 705, column: 5, scope: !4179)
!4188 = !DILocation(line: 706, column: 13, scope: !4179)
!4189 = !DILocation(line: 706, column: 5, scope: !4179)
!4190 = !DILocation(line: 708, column: 18, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4179, file: !187, line: 706, column: 20)
!4192 = !DILocation(line: 708, column: 2, scope: !4191)
!4193 = !DILocation(line: 709, column: 2, scope: !4191)
!4194 = !DILocation(line: 712, column: 2, scope: !4191)
!4195 = !DILocation(line: 713, column: 25, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4191, file: !187, line: 712, column: 5)
!4197 = !DILocation(line: 713, column: 44, scope: !4196)
!4198 = !DILocation(line: 713, column: 15, scope: !4196)
!4199 = !DILocation(line: 713, column: 13, scope: !4196)
!4200 = !DILocation(line: 714, column: 2, scope: !4196)
!4201 = !DILocation(line: 714, column: 11, scope: !4191)
!4202 = !DILocation(line: 714, column: 18, scope: !4191)
!4203 = !DILocation(line: 714, column: 24, scope: !4191)
!4204 = !DILocation(line: 714, column: 27, scope: !4191)
!4205 = !DILocation(line: 714, column: 33, scope: !4191)
!4206 = !DILocation(line: 0, scope: !4191)
!4207 = distinct !{!4207, !4194, !4208}
!4208 = !DILocation(line: 714, column: 41, scope: !4191)
!4209 = !DILocation(line: 715, column: 9, scope: !4191)
!4210 = !DILocation(line: 715, column: 2, scope: !4191)
!4211 = !DILocation(line: 716, column: 2, scope: !4191)
!4212 = !DILocation(line: 719, column: 2, scope: !4191)
!4213 = !DILocation(line: 720, column: 25, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4191, file: !187, line: 719, column: 5)
!4215 = !DILocation(line: 720, column: 44, scope: !4214)
!4216 = !DILocation(line: 720, column: 15, scope: !4214)
!4217 = !DILocation(line: 720, column: 13, scope: !4214)
!4218 = !DILocation(line: 721, column: 2, scope: !4214)
!4219 = !DILocation(line: 721, column: 11, scope: !4191)
!4220 = !DILocation(line: 721, column: 18, scope: !4191)
!4221 = !DILocation(line: 721, column: 24, scope: !4191)
!4222 = !DILocation(line: 721, column: 27, scope: !4191)
!4223 = !DILocation(line: 721, column: 33, scope: !4191)
!4224 = distinct !{!4224, !4212, !4225}
!4225 = !DILocation(line: 721, column: 41, scope: !4191)
!4226 = !DILocation(line: 722, column: 9, scope: !4191)
!4227 = !DILocation(line: 722, column: 2, scope: !4191)
!4228 = !DILocation(line: 723, column: 2, scope: !4191)
!4229 = !DILocation(line: 725, column: 2, scope: !4191)
!4230 = !DILocation(line: 729, column: 9, scope: !4191)
!4231 = !DILocation(line: 729, column: 14, scope: !4191)
!4232 = !DILocation(line: 729, column: 2, scope: !4191)
!4233 = !DILocation(line: 730, column: 2, scope: !4191)
!4234 = !DILocation(line: 732, column: 1, scope: !4179)
!4235 = distinct !DISubprogram(name: "send_status", scope: !187, file: !187, line: 739, type: !4085, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !174, retainedNodes: !176)
!4236 = !DILocalVariable(name: "fd", arg: 1, scope: !4235, file: !187, line: 739, type: !33)
!4237 = !DILocation(line: 739, column: 17, scope: !4235)
!4238 = !DILocalVariable(name: "cstat", arg: 2, scope: !4235, file: !187, line: 739, type: !2681)
!4239 = !DILocation(line: 739, column: 44, scope: !4235)
!4240 = !DILocalVariable(name: "n", scope: !4235, file: !187, line: 741, type: !33)
!4241 = !DILocation(line: 741, column: 9, scope: !4235)
!4242 = !DILocation(line: 743, column: 9, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4235, file: !187, line: 743, column: 9)
!4244 = !DILocation(line: 743, column: 16, scope: !4243)
!4245 = !DILocation(line: 743, column: 21, scope: !4243)
!4246 = !DILocation(line: 743, column: 9, scope: !4235)
!4247 = !DILocation(line: 744, column: 2, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4243, file: !187, line: 743, column: 37)
!4249 = !DILocation(line: 745, column: 15, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4248, file: !187, line: 744, column: 5)
!4251 = !DILocation(line: 745, column: 19, scope: !4250)
!4252 = !DILocation(line: 745, column: 10, scope: !4250)
!4253 = !DILocation(line: 745, column: 8, scope: !4250)
!4254 = !DILocation(line: 746, column: 2, scope: !4250)
!4255 = !DILocation(line: 746, column: 11, scope: !4248)
!4256 = !DILocation(line: 746, column: 13, scope: !4248)
!4257 = !DILocation(line: 746, column: 19, scope: !4248)
!4258 = !DILocation(line: 746, column: 22, scope: !4248)
!4259 = !DILocation(line: 746, column: 28, scope: !4248)
!4260 = !DILocation(line: 0, scope: !4248)
!4261 = distinct !{!4261, !4247, !4262}
!4262 = !DILocation(line: 746, column: 36, scope: !4248)
!4263 = !DILocation(line: 747, column: 6, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4248, file: !187, line: 747, column: 6)
!4265 = !DILocation(line: 747, column: 8, scope: !4264)
!4266 = !DILocation(line: 747, column: 6, scope: !4248)
!4267 = !DILocation(line: 749, column: 12, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4264, file: !187, line: 747, column: 27)
!4269 = !DILocation(line: 749, column: 3, scope: !4268)
!4270 = !DILocation(line: 748, column: 6, scope: !4268)
!4271 = !DILocation(line: 750, column: 2, scope: !4268)
!4272 = !DILocation(line: 751, column: 6, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4264, file: !187, line: 750, column: 9)
!4274 = !DILocation(line: 753, column: 2, scope: !4248)
!4275 = !DILocation(line: 753, column: 9, scope: !4248)
!4276 = !DILocation(line: 753, column: 14, scope: !4248)
!4277 = !DILocation(line: 754, column: 5, scope: !4248)
!4278 = !DILocation(line: 755, column: 12, scope: !4235)
!4279 = !DILocation(line: 755, column: 5, scope: !4235)
!4280 = distinct !DISubprogram(name: "pty_close", scope: !187, file: !187, line: 625, type: !4281, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !174, retainedNodes: !176)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{null, !2681}
!4283 = !DILocalVariable(name: "cstat", arg: 1, scope: !4280, file: !187, line: 625, type: !2681)
!4284 = !DILocation(line: 625, column: 34, scope: !4280)
!4285 = !DILocalVariable(name: "n", scope: !4280, file: !187, line: 627, type: !33)
!4286 = !DILocation(line: 627, column: 9, scope: !4280)
!4287 = !DILocation(line: 630, column: 9, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4280, file: !187, line: 630, column: 9)
!4289 = !DILocation(line: 630, column: 29, scope: !4288)
!4290 = !DILocation(line: 630, column: 9, scope: !4280)
!4291 = !DILocation(line: 631, column: 12, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4288, file: !187, line: 630, column: 36)
!4293 = !DILocation(line: 631, column: 6, scope: !4292)
!4294 = !DILocation(line: 631, column: 4, scope: !4292)
!4295 = !DILocation(line: 632, column: 6, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4292, file: !187, line: 632, column: 6)
!4297 = !DILocation(line: 632, column: 8, scope: !4296)
!4298 = !DILocation(line: 632, column: 14, scope: !4296)
!4299 = !DILocation(line: 632, column: 17, scope: !4296)
!4300 = !DILocation(line: 632, column: 6, scope: !4292)
!4301 = !DILocation(line: 633, column: 6, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4296, file: !187, line: 632, column: 39)
!4303 = !DILocation(line: 634, column: 19, scope: !4302)
!4304 = !DILocation(line: 634, column: 49, scope: !4302)
!4305 = !DILocation(line: 634, column: 13, scope: !4302)
!4306 = !DILocation(line: 635, column: 2, scope: !4302)
!4307 = !DILocation(line: 636, column: 5, scope: !4292)
!4308 = !DILocation(line: 637, column: 5, scope: !4280)
!4309 = !DILocation(line: 639, column: 9, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4280, file: !187, line: 639, column: 9)
!4311 = !DILocation(line: 639, column: 29, scope: !4310)
!4312 = !DILocation(line: 639, column: 9, scope: !4280)
!4313 = !DILocation(line: 640, column: 2, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4310, file: !187, line: 639, column: 36)
!4315 = !DILocation(line: 641, column: 23, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4314, file: !187, line: 640, column: 5)
!4317 = !DILocation(line: 641, column: 10, scope: !4316)
!4318 = !DILocation(line: 641, column: 8, scope: !4316)
!4319 = !DILocation(line: 642, column: 2, scope: !4316)
!4320 = !DILocation(line: 642, column: 12, scope: !4314)
!4321 = !DILocation(line: 642, column: 14, scope: !4314)
!4322 = !DILocation(line: 642, column: 17, scope: !4314)
!4323 = !DILocation(line: 642, column: 23, scope: !4314)
!4324 = !DILocation(line: 0, scope: !4314)
!4325 = distinct !{!4325, !4313, !4326}
!4326 = !DILocation(line: 642, column: 31, scope: !4314)
!4327 = !DILocation(line: 643, column: 5, scope: !4314)
!4328 = !DILocation(line: 646, column: 9, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4280, file: !187, line: 646, column: 9)
!4330 = !DILocation(line: 646, column: 16, scope: !4329)
!4331 = !DILocation(line: 646, column: 21, scope: !4329)
!4332 = !DILocation(line: 646, column: 36, scope: !4329)
!4333 = !DILocation(line: 646, column: 39, scope: !4329)
!4334 = !DILocation(line: 646, column: 9, scope: !4280)
!4335 = !DILocalVariable(name: "signo", scope: !4336, file: !187, line: 647, type: !33)
!4336 = distinct !DILexicalBlock(scope: !4329, file: !187, line: 646, column: 64)
!4337 = !DILocation(line: 647, column: 6, scope: !4336)
!4338 = !DILocation(line: 647, column: 14, scope: !4336)
!4339 = !DILocation(line: 648, column: 6, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4336, file: !187, line: 648, column: 6)
!4341 = !DILocation(line: 648, column: 12, scope: !4340)
!4342 = !DILocation(line: 648, column: 15, scope: !4340)
!4343 = !DILocation(line: 648, column: 21, scope: !4340)
!4344 = !DILocation(line: 648, column: 31, scope: !4340)
!4345 = !DILocation(line: 648, column: 34, scope: !4340)
!4346 = !DILocation(line: 648, column: 40, scope: !4340)
!4347 = !DILocation(line: 648, column: 6, scope: !4336)
!4348 = !DILocalVariable(name: "reason", scope: !4349, file: !187, line: 649, type: !221)
!4349 = distinct !DILexicalBlock(scope: !4340, file: !187, line: 648, column: 52)
!4350 = !DILocation(line: 649, column: 18, scope: !4349)
!4351 = !DILocation(line: 649, column: 37, scope: !4349)
!4352 = !DILocation(line: 649, column: 27, scope: !4349)
!4353 = !DILocation(line: 650, column: 10, scope: !4349)
!4354 = !DILocation(line: 650, column: 30, scope: !4349)
!4355 = !DILocation(line: 651, column: 3, scope: !4349)
!4356 = !DILocation(line: 650, column: 8, scope: !4349)
!4357 = !DILocation(line: 652, column: 16, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4349, file: !187, line: 652, column: 10)
!4359 = !DILocation(line: 652, column: 19, scope: !4358)
!4360 = !DILocation(line: 652, column: 34, scope: !4358)
!4361 = !DILocation(line: 652, column: 27, scope: !4358)
!4362 = !DILocation(line: 652, column: 10, scope: !4358)
!4363 = !DILocation(line: 652, column: 43, scope: !4358)
!4364 = !DILocation(line: 652, column: 10, scope: !4349)
!4365 = !DILocation(line: 653, column: 7, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !187, line: 653, column: 7)
!4367 = distinct !DILexicalBlock(scope: !4358, file: !187, line: 652, column: 50)
!4368 = !DILocation(line: 653, column: 7, scope: !4367)
!4369 = !DILocation(line: 654, column: 17, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4371, file: !187, line: 654, column: 11)
!4371 = distinct !DILexicalBlock(scope: !4366, file: !187, line: 653, column: 30)
!4372 = !DILocation(line: 654, column: 11, scope: !4370)
!4373 = !DILocation(line: 654, column: 42, scope: !4370)
!4374 = !DILocation(line: 654, column: 11, scope: !4371)
!4375 = !DILocation(line: 656, column: 3, scope: !4371)
!4376 = !DILocation(line: 657, column: 13, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4367, file: !187, line: 657, column: 7)
!4378 = !DILocation(line: 657, column: 7, scope: !4377)
!4379 = !DILocation(line: 657, column: 25, scope: !4377)
!4380 = !DILocation(line: 657, column: 7, scope: !4367)
!4381 = !DILocation(line: 659, column: 6, scope: !4367)
!4382 = !DILocation(line: 660, column: 2, scope: !4349)
!4383 = !DILocation(line: 661, column: 5, scope: !4336)
!4384 = !DILocation(line: 662, column: 28, scope: !4280)
!4385 = !DILocation(line: 662, column: 35, scope: !4280)
!4386 = !DILocation(line: 662, column: 40, scope: !4280)
!4387 = !DILocation(line: 662, column: 57, scope: !4280)
!4388 = !DILocation(line: 662, column: 64, scope: !4280)
!4389 = !DILocation(line: 662, column: 5, scope: !4280)
!4390 = !DILocation(line: 663, column: 1, scope: !4280)
!4391 = distinct !DISubprogram(name: "fd_set_iobs", scope: !187, file: !187, line: 670, type: !4392, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !174, retainedNodes: !176)
!4392 = !DISubroutineType(types: !4393)
!4393 = !{null, !179, !179}
!4394 = !DILocalVariable(name: "fdsr", arg: 1, scope: !4391, file: !187, line: 670, type: !179)
!4395 = !DILocation(line: 670, column: 21, scope: !4391)
!4396 = !DILocalVariable(name: "fdsw", arg: 2, scope: !4391, file: !187, line: 670, type: !179)
!4397 = !DILocation(line: 670, column: 35, scope: !4391)
!4398 = !DILocalVariable(name: "iob", scope: !4391, file: !187, line: 672, type: !209)
!4399 = !DILocation(line: 672, column: 23, scope: !4391)
!4400 = !DILocation(line: 674, column: 16, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4391, file: !187, line: 674, column: 5)
!4402 = !DILocation(line: 674, column: 14, scope: !4401)
!4403 = !DILocation(line: 674, column: 10, scope: !4401)
!4404 = !DILocation(line: 674, column: 24, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4401, file: !187, line: 674, column: 5)
!4406 = !DILocation(line: 674, column: 5, scope: !4401)
!4407 = !DILocation(line: 675, column: 6, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4409, file: !187, line: 675, column: 6)
!4409 = distinct !DILexicalBlock(scope: !4405, file: !187, line: 674, column: 46)
!4410 = !DILocation(line: 675, column: 11, scope: !4408)
!4411 = !DILocation(line: 675, column: 15, scope: !4408)
!4412 = !DILocation(line: 675, column: 21, scope: !4408)
!4413 = !DILocation(line: 675, column: 24, scope: !4408)
!4414 = !DILocation(line: 675, column: 29, scope: !4408)
!4415 = !DILocation(line: 675, column: 33, scope: !4408)
!4416 = !DILocation(line: 675, column: 6, scope: !4409)
!4417 = !DILocation(line: 676, column: 6, scope: !4408)
!4418 = !DILocation(line: 677, column: 6, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4409, file: !187, line: 677, column: 6)
!4420 = !DILocation(line: 677, column: 11, scope: !4419)
!4421 = !DILocation(line: 677, column: 18, scope: !4419)
!4422 = !DILocation(line: 677, column: 23, scope: !4419)
!4423 = !DILocation(line: 677, column: 15, scope: !4419)
!4424 = !DILocation(line: 677, column: 6, scope: !4409)
!4425 = !DILocation(line: 678, column: 17, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4419, file: !187, line: 677, column: 28)
!4427 = !DILocation(line: 678, column: 22, scope: !4426)
!4428 = !DILocation(line: 678, column: 26, scope: !4426)
!4429 = !DILocation(line: 678, column: 6, scope: !4426)
!4430 = !DILocation(line: 678, column: 11, scope: !4426)
!4431 = !DILocation(line: 678, column: 15, scope: !4426)
!4432 = !DILocation(line: 680, column: 10, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4426, file: !187, line: 680, column: 10)
!4434 = !DILocation(line: 680, column: 15, scope: !4433)
!4435 = !DILocation(line: 680, column: 19, scope: !4433)
!4436 = !DILocation(line: 680, column: 10, scope: !4426)
!4437 = !DILocation(line: 681, column: 14, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4433, file: !187, line: 680, column: 26)
!4439 = !DILocation(line: 681, column: 19, scope: !4438)
!4440 = !DILocation(line: 681, column: 3, scope: !4438)
!4441 = !DILocation(line: 682, column: 3, scope: !4438)
!4442 = !DILocation(line: 682, column: 8, scope: !4438)
!4443 = !DILocation(line: 682, column: 12, scope: !4438)
!4444 = !DILocation(line: 683, column: 6, scope: !4438)
!4445 = !DILocation(line: 684, column: 2, scope: !4426)
!4446 = !DILocation(line: 686, column: 6, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4409, file: !187, line: 686, column: 6)
!4448 = !DILocation(line: 686, column: 11, scope: !4447)
!4449 = !DILocation(line: 686, column: 15, scope: !4447)
!4450 = !DILocation(line: 686, column: 21, scope: !4447)
!4451 = !DILocation(line: 687, column: 7, scope: !4447)
!4452 = !DILocation(line: 687, column: 15, scope: !4447)
!4453 = !DILocation(line: 687, column: 27, scope: !4447)
!4454 = !DILocation(line: 687, column: 30, scope: !4447)
!4455 = !DILocation(line: 687, column: 35, scope: !4447)
!4456 = !DILocation(line: 687, column: 42, scope: !4447)
!4457 = !DILocation(line: 687, column: 39, scope: !4447)
!4458 = !DILocation(line: 686, column: 6, scope: !4409)
!4459 = !DILocation(line: 688, column: 10, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !187, line: 688, column: 10)
!4461 = distinct !DILexicalBlock(scope: !4447, file: !187, line: 687, column: 64)
!4462 = !DILocation(line: 688, column: 15, scope: !4460)
!4463 = !DILocation(line: 688, column: 19, scope: !4460)
!4464 = !DILocation(line: 688, column: 10, scope: !4461)
!4465 = !DILocation(line: 689, column: 3, scope: !4460)
!4466 = !DILocation(line: 690, column: 2, scope: !4461)
!4467 = !DILocation(line: 691, column: 6, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4409, file: !187, line: 691, column: 6)
!4469 = !DILocation(line: 691, column: 11, scope: !4468)
!4470 = !DILocation(line: 691, column: 15, scope: !4468)
!4471 = !DILocation(line: 691, column: 21, scope: !4468)
!4472 = !DILocation(line: 692, column: 7, scope: !4468)
!4473 = !DILocation(line: 692, column: 18, scope: !4468)
!4474 = !DILocation(line: 692, column: 21, scope: !4468)
!4475 = !DILocation(line: 692, column: 26, scope: !4468)
!4476 = !DILocation(line: 692, column: 33, scope: !4468)
!4477 = !DILocation(line: 692, column: 30, scope: !4468)
!4478 = !DILocation(line: 691, column: 6, scope: !4409)
!4479 = !DILocation(line: 693, column: 10, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4481, file: !187, line: 693, column: 10)
!4481 = distinct !DILexicalBlock(scope: !4468, file: !187, line: 692, column: 55)
!4482 = !DILocation(line: 693, column: 15, scope: !4480)
!4483 = !DILocation(line: 693, column: 21, scope: !4480)
!4484 = !DILocation(line: 693, column: 26, scope: !4480)
!4485 = !DILocation(line: 693, column: 19, scope: !4480)
!4486 = !DILocation(line: 693, column: 10, scope: !4481)
!4487 = !DILocation(line: 694, column: 3, scope: !4480)
!4488 = !DILocation(line: 695, column: 2, scope: !4481)
!4489 = !DILocation(line: 696, column: 5, scope: !4409)
!4490 = !DILocation(line: 674, column: 35, scope: !4405)
!4491 = !DILocation(line: 674, column: 40, scope: !4405)
!4492 = !DILocation(line: 674, column: 33, scope: !4405)
!4493 = !DILocation(line: 674, column: 5, scope: !4405)
!4494 = distinct !{!4494, !4406, !4495}
!4495 = !DILocation(line: 696, column: 5, scope: !4401)
!4496 = !DILocation(line: 697, column: 1, scope: !4391)
!4497 = distinct !DISubprogram(name: "get_pty", scope: !4498, file: !4498, line: 62, type: !4499, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !849, retainedNodes: !176)
!4498 = !DIFile(filename: "./get_pty.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!4499 = !DISubroutineType(types: !4500)
!4500 = !{!33, !1744, !1744, !20, !282, !550}
!4501 = !DILocalVariable(name: "master", arg: 1, scope: !4497, file: !4498, line: 62, type: !1744)
!4502 = !DILocation(line: 62, column: 14, scope: !4497)
!4503 = !DILocalVariable(name: "slave", arg: 2, scope: !4497, file: !4498, line: 62, type: !1744)
!4504 = !DILocation(line: 62, column: 27, scope: !4497)
!4505 = !DILocalVariable(name: "name", arg: 3, scope: !4497, file: !4498, line: 62, type: !20)
!4506 = !DILocation(line: 62, column: 40, scope: !4497)
!4507 = !DILocalVariable(name: "namesz", arg: 4, scope: !4497, file: !4498, line: 62, type: !282)
!4508 = !DILocation(line: 62, column: 53, scope: !4497)
!4509 = !DILocalVariable(name: "ttyuid", arg: 5, scope: !4497, file: !4498, line: 62, type: !550)
!4510 = !DILocation(line: 62, column: 67, scope: !4497)
!4511 = !DILocalVariable(name: "gr", scope: !4497, file: !4498, line: 64, type: !4512)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !4514, line: 42, size: 256, elements: !4515)
!4514 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!4515 = !{!4516, !4517, !4518, !4519}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !4513, file: !4514, line: 44, baseType: !20, size: 64)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !4513, file: !4514, line: 45, baseType: !20, size: 64, offset: 64)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !4513, file: !4514, line: 46, baseType: !549, size: 32, offset: 128)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !4513, file: !4514, line: 47, baseType: !615, size: 64, offset: 192)
!4520 = !DILocation(line: 64, column: 19, scope: !4497)
!4521 = !DILocalVariable(name: "ttygid", scope: !4497, file: !4498, line: 65, type: !548)
!4522 = !DILocation(line: 65, column: 11, scope: !4497)
!4523 = !DILocation(line: 67, column: 15, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4497, file: !4498, line: 67, column: 9)
!4525 = !DILocation(line: 67, column: 13, scope: !4524)
!4526 = !DILocation(line: 67, column: 32, scope: !4524)
!4527 = !DILocation(line: 67, column: 9, scope: !4497)
!4528 = !DILocation(line: 68, column: 11, scope: !4524)
!4529 = !DILocation(line: 68, column: 15, scope: !4524)
!4530 = !DILocation(line: 68, column: 9, scope: !4524)
!4531 = !DILocation(line: 68, column: 2, scope: !4524)
!4532 = !DILocation(line: 70, column: 17, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4497, file: !4498, line: 70, column: 9)
!4534 = !DILocation(line: 70, column: 25, scope: !4533)
!4535 = !DILocation(line: 70, column: 32, scope: !4533)
!4536 = !DILocation(line: 70, column: 9, scope: !4533)
!4537 = !DILocation(line: 70, column: 50, scope: !4533)
!4538 = !DILocation(line: 70, column: 9, scope: !4497)
!4539 = !DILocation(line: 71, column: 2, scope: !4533)
!4540 = !DILocation(line: 72, column: 15, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4497, file: !4498, line: 72, column: 9)
!4542 = !DILocation(line: 72, column: 21, scope: !4541)
!4543 = !DILocation(line: 72, column: 29, scope: !4541)
!4544 = !DILocation(line: 72, column: 9, scope: !4541)
!4545 = !DILocation(line: 72, column: 37, scope: !4541)
!4546 = !DILocation(line: 72, column: 9, scope: !4497)
!4547 = !DILocation(line: 73, column: 2, scope: !4541)
!4548 = !DILocation(line: 74, column: 5, scope: !4497)
!4549 = !DILocation(line: 75, column: 1, scope: !4497)
!4550 = distinct !DISubprogram(name: "get_net_ifs", scope: !4551, file: !4551, line: 106, type: !4552, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !851, retainedNodes: !176)
!4551 = !DIFile(filename: "./net_ifs.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!4552 = !DISubroutineType(types: !4553)
!4553 = !{!33, !615}
!4554 = !DILocalVariable(name: "addrinfo", arg: 1, scope: !4550, file: !4551, line: 106, type: !615)
!4555 = !DILocation(line: 106, column: 20, scope: !4550)
!4556 = !DILocalVariable(name: "ifa", scope: !4550, file: !4551, line: 108, type: !4557)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifaddrs", file: !4559, line: 29, size: 448, elements: !4560)
!4559 = !DIFile(filename: "/usr/include/ifaddrs.h", directory: "")
!4560 = !{!4561, !4562, !4563, !4564, !4572, !4573, !4578}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_next", scope: !4558, file: !4559, line: 31, baseType: !4557, size: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_name", scope: !4558, file: !4559, line: 33, baseType: !20, size: 64, offset: 64)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_flags", scope: !4558, file: !4559, line: 34, baseType: !7, size: 32, offset: 128)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_addr", scope: !4558, file: !4559, line: 36, baseType: !4565, size: 64, offset: 192)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !4567, line: 178, size: 128, elements: !4568)
!4567 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "")
!4568 = !{!4569, !4570}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !4566, file: !4567, line: 180, baseType: !879, size: 16)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !4566, file: !4567, line: 181, baseType: !4571, size: 112, offset: 16)
!4571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 112, elements: !167)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_netmask", scope: !4558, file: !4559, line: 37, baseType: !4565, size: 64, offset: 256)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_ifu", scope: !4558, file: !4559, line: 46, baseType: !4574, size: 64, offset: 320)
!4574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4558, file: !4559, line: 38, size: 64, elements: !4575)
!4575 = !{!4576, !4577}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "ifu_broadaddr", scope: !4574, file: !4559, line: 44, baseType: !4565, size: 64)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "ifu_dstaddr", scope: !4574, file: !4559, line: 45, baseType: !4565, size: 64)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_data", scope: !4558, file: !4559, line: 56, baseType: !19, size: 64, offset: 384)
!4579 = !DILocation(line: 108, column: 21, scope: !4550)
!4580 = !DILocalVariable(name: "ifaddrs", scope: !4550, file: !4551, line: 108, type: !4557)
!4581 = !DILocation(line: 108, column: 27, scope: !4550)
!4582 = !DILocalVariable(name: "sin", scope: !4550, file: !4551, line: 109, type: !874)
!4583 = !DILocation(line: 109, column: 25, scope: !4550)
!4584 = !DILocalVariable(name: "sin6", scope: !4550, file: !4551, line: 111, type: !896)
!4585 = !DILocation(line: 111, column: 26, scope: !4550)
!4586 = !DILocalVariable(name: "addrbuf", scope: !4550, file: !4551, line: 112, type: !4587)
!4587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 368, elements: !4588)
!4588 = !{!4589}
!4589 = !DISubrange(count: 46, lowerBound: 0)
!4590 = !DILocation(line: 112, column: 10, scope: !4550)
!4591 = !DILocalVariable(name: "ailen", scope: !4550, file: !4551, line: 114, type: !33)
!4592 = !DILocation(line: 114, column: 9, scope: !4550)
!4593 = !DILocalVariable(name: "i", scope: !4550, file: !4551, line: 114, type: !33)
!4594 = !DILocation(line: 114, column: 16, scope: !4550)
!4595 = !DILocalVariable(name: "len", scope: !4550, file: !4551, line: 114, type: !33)
!4596 = !DILocation(line: 114, column: 19, scope: !4550)
!4597 = !DILocalVariable(name: "num_interfaces", scope: !4550, file: !4551, line: 114, type: !33)
!4598 = !DILocation(line: 114, column: 24, scope: !4550)
!4599 = !DILocalVariable(name: "cp", scope: !4550, file: !4551, line: 115, type: !20)
!4600 = !DILocation(line: 115, column: 11, scope: !4550)
!4601 = !DILocation(line: 117, column: 9, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4550, file: !4551, line: 117, column: 9)
!4603 = !DILocation(line: 117, column: 9, scope: !4550)
!4604 = !DILocation(line: 118, column: 2, scope: !4602)
!4605 = !DILocation(line: 121, column: 16, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4550, file: !4551, line: 121, column: 5)
!4607 = !DILocation(line: 121, column: 14, scope: !4606)
!4608 = !DILocation(line: 121, column: 10, scope: !4606)
!4609 = !DILocation(line: 121, column: 25, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4606, file: !4551, line: 121, column: 5)
!4611 = !DILocation(line: 121, column: 29, scope: !4610)
!4612 = !DILocation(line: 121, column: 5, scope: !4606)
!4613 = !DILocation(line: 123, column: 6, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !4551, line: 123, column: 6)
!4615 = distinct !DILexicalBlock(scope: !4610, file: !4551, line: 121, column: 61)
!4616 = !DILocation(line: 123, column: 11, scope: !4614)
!4617 = !DILocation(line: 123, column: 20, scope: !4614)
!4618 = !DILocation(line: 123, column: 28, scope: !4614)
!4619 = !DILocation(line: 123, column: 31, scope: !4614)
!4620 = !DILocation(line: 123, column: 36, scope: !4614)
!4621 = !DILocation(line: 123, column: 48, scope: !4614)
!4622 = !DILocation(line: 123, column: 56, scope: !4614)
!4623 = !DILocation(line: 124, column: 7, scope: !4614)
!4624 = !DILocation(line: 124, column: 37, scope: !4614)
!4625 = !DILocation(line: 124, column: 40, scope: !4614)
!4626 = !DILocation(line: 123, column: 6, scope: !4615)
!4627 = !DILocation(line: 125, column: 6, scope: !4614)
!4628 = !DILocation(line: 127, column: 10, scope: !4615)
!4629 = !DILocation(line: 127, column: 15, scope: !4615)
!4630 = !DILocation(line: 127, column: 25, scope: !4615)
!4631 = !DILocation(line: 127, column: 2, scope: !4615)
!4632 = !DILocation(line: 132, column: 17, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4615, file: !4551, line: 127, column: 36)
!4634 = !DILocation(line: 133, column: 3, scope: !4633)
!4635 = !DILocation(line: 135, column: 5, scope: !4615)
!4636 = !DILocation(line: 121, column: 44, scope: !4610)
!4637 = !DILocation(line: 121, column: 51, scope: !4610)
!4638 = !DILocation(line: 121, column: 42, scope: !4610)
!4639 = !DILocation(line: 121, column: 5, scope: !4610)
!4640 = distinct !{!4640, !4612, !4641}
!4641 = !DILocation(line: 135, column: 5, scope: !4606)
!4642 = !DILocation(line: 136, column: 9, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4550, file: !4551, line: 136, column: 9)
!4644 = !DILocation(line: 136, column: 24, scope: !4643)
!4645 = !DILocation(line: 136, column: 9, scope: !4550)
!4646 = !DILocation(line: 137, column: 2, scope: !4643)
!4647 = !DILocation(line: 138, column: 13, scope: !4550)
!4648 = !DILocation(line: 138, column: 28, scope: !4550)
!4649 = !DILocation(line: 138, column: 32, scope: !4550)
!4650 = !DILocation(line: 138, column: 11, scope: !4550)
!4651 = !DILocation(line: 139, column: 30, scope: !4550)
!4652 = !DILocation(line: 139, column: 22, scope: !4550)
!4653 = !DILocation(line: 139, column: 20, scope: !4550)
!4654 = !DILocation(line: 139, column: 6, scope: !4550)
!4655 = !DILocation(line: 139, column: 15, scope: !4550)
!4656 = !DILocation(line: 142, column: 16, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4550, file: !4551, line: 142, column: 5)
!4658 = !DILocation(line: 142, column: 14, scope: !4657)
!4659 = !DILocation(line: 142, column: 27, scope: !4657)
!4660 = !DILocation(line: 142, column: 10, scope: !4657)
!4661 = !DILocation(line: 142, column: 32, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4657, file: !4551, line: 142, column: 5)
!4663 = !DILocation(line: 142, column: 36, scope: !4662)
!4664 = !DILocation(line: 142, column: 5, scope: !4657)
!4665 = !DILocation(line: 144, column: 6, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !4551, line: 144, column: 6)
!4667 = distinct !DILexicalBlock(scope: !4662, file: !4551, line: 142, column: 68)
!4668 = !DILocation(line: 144, column: 11, scope: !4666)
!4669 = !DILocation(line: 144, column: 20, scope: !4666)
!4670 = !DILocation(line: 144, column: 28, scope: !4666)
!4671 = !DILocation(line: 144, column: 31, scope: !4666)
!4672 = !DILocation(line: 144, column: 36, scope: !4666)
!4673 = !DILocation(line: 144, column: 48, scope: !4666)
!4674 = !DILocation(line: 144, column: 56, scope: !4666)
!4675 = !DILocation(line: 145, column: 7, scope: !4666)
!4676 = !DILocation(line: 145, column: 37, scope: !4666)
!4677 = !DILocation(line: 145, column: 40, scope: !4666)
!4678 = !DILocation(line: 144, column: 6, scope: !4667)
!4679 = !DILocation(line: 146, column: 3, scope: !4666)
!4680 = !DILocation(line: 148, column: 10, scope: !4667)
!4681 = !DILocation(line: 148, column: 15, scope: !4667)
!4682 = !DILocation(line: 148, column: 25, scope: !4667)
!4683 = !DILocation(line: 148, column: 2, scope: !4667)
!4684 = !DILocation(line: 150, column: 31, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4667, file: !4551, line: 148, column: 36)
!4686 = !DILocation(line: 150, column: 36, scope: !4685)
!4687 = !DILocation(line: 150, column: 9, scope: !4685)
!4688 = !DILocation(line: 150, column: 7, scope: !4685)
!4689 = !DILocation(line: 151, column: 18, scope: !4685)
!4690 = !DILocation(line: 151, column: 22, scope: !4685)
!4691 = !DILocation(line: 151, column: 32, scope: !4685)
!4692 = !DILocation(line: 151, column: 31, scope: !4685)
!4693 = !DILocation(line: 151, column: 43, scope: !4685)
!4694 = !DILocation(line: 151, column: 41, scope: !4685)
!4695 = !DILocation(line: 151, column: 28, scope: !4685)
!4696 = !DILocation(line: 152, column: 16, scope: !4685)
!4697 = !DILocation(line: 152, column: 23, scope: !4685)
!4698 = !DILocation(line: 152, column: 22, scope: !4685)
!4699 = !DILocation(line: 152, column: 19, scope: !4685)
!4700 = !DILocation(line: 153, column: 17, scope: !4685)
!4701 = !DILocation(line: 153, column: 22, scope: !4685)
!4702 = !DILocation(line: 153, column: 7, scope: !4685)
!4703 = !DILocation(line: 151, column: 9, scope: !4685)
!4704 = !DILocation(line: 151, column: 7, scope: !4685)
!4705 = !DILocation(line: 154, column: 7, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4685, file: !4551, line: 154, column: 7)
!4707 = !DILocation(line: 154, column: 11, scope: !4706)
!4708 = !DILocation(line: 154, column: 16, scope: !4706)
!4709 = !DILocation(line: 154, column: 19, scope: !4706)
!4710 = !DILocation(line: 154, column: 26, scope: !4706)
!4711 = !DILocation(line: 154, column: 36, scope: !4706)
!4712 = !DILocation(line: 154, column: 35, scope: !4706)
!4713 = !DILocation(line: 154, column: 47, scope: !4706)
!4714 = !DILocation(line: 154, column: 45, scope: !4706)
!4715 = !DILocation(line: 154, column: 32, scope: !4706)
!4716 = !DILocation(line: 154, column: 23, scope: !4706)
!4717 = !DILocation(line: 154, column: 7, scope: !4685)
!4718 = !DILocation(line: 155, column: 16, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4706, file: !4551, line: 154, column: 52)
!4720 = !DILocation(line: 155, column: 7, scope: !4719)
!4721 = !DILocation(line: 156, column: 7, scope: !4719)
!4722 = !DILocation(line: 158, column: 9, scope: !4685)
!4723 = !DILocation(line: 158, column: 6, scope: !4685)
!4724 = !DILocation(line: 160, column: 31, scope: !4685)
!4725 = !DILocation(line: 160, column: 36, scope: !4685)
!4726 = !DILocation(line: 160, column: 9, scope: !4685)
!4727 = !DILocation(line: 160, column: 7, scope: !4685)
!4728 = !DILocation(line: 161, column: 18, scope: !4685)
!4729 = !DILocation(line: 161, column: 22, scope: !4685)
!4730 = !DILocation(line: 161, column: 32, scope: !4685)
!4731 = !DILocation(line: 161, column: 31, scope: !4685)
!4732 = !DILocation(line: 161, column: 43, scope: !4685)
!4733 = !DILocation(line: 161, column: 41, scope: !4685)
!4734 = !DILocation(line: 161, column: 28, scope: !4685)
!4735 = !DILocation(line: 162, column: 23, scope: !4685)
!4736 = !DILocation(line: 162, column: 28, scope: !4685)
!4737 = !DILocation(line: 162, column: 13, scope: !4685)
!4738 = !DILocation(line: 161, column: 9, scope: !4685)
!4739 = !DILocation(line: 161, column: 7, scope: !4685)
!4740 = !DILocation(line: 163, column: 7, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4685, file: !4551, line: 163, column: 7)
!4742 = !DILocation(line: 163, column: 11, scope: !4741)
!4743 = !DILocation(line: 163, column: 16, scope: !4741)
!4744 = !DILocation(line: 163, column: 19, scope: !4741)
!4745 = !DILocation(line: 163, column: 26, scope: !4741)
!4746 = !DILocation(line: 163, column: 36, scope: !4741)
!4747 = !DILocation(line: 163, column: 35, scope: !4741)
!4748 = !DILocation(line: 163, column: 47, scope: !4741)
!4749 = !DILocation(line: 163, column: 45, scope: !4741)
!4750 = !DILocation(line: 163, column: 32, scope: !4741)
!4751 = !DILocation(line: 163, column: 23, scope: !4741)
!4752 = !DILocation(line: 163, column: 7, scope: !4685)
!4753 = !DILocation(line: 164, column: 16, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4741, file: !4551, line: 163, column: 52)
!4755 = !DILocation(line: 164, column: 7, scope: !4754)
!4756 = !DILocation(line: 165, column: 7, scope: !4754)
!4757 = !DILocation(line: 167, column: 9, scope: !4685)
!4758 = !DILocation(line: 167, column: 6, scope: !4685)
!4759 = !DILocation(line: 168, column: 3, scope: !4685)
!4760 = !DILocation(line: 171, column: 33, scope: !4685)
!4761 = !DILocation(line: 171, column: 38, scope: !4685)
!4762 = !DILocation(line: 171, column: 10, scope: !4685)
!4763 = !DILocation(line: 171, column: 8, scope: !4685)
!4764 = !DILocation(line: 172, column: 24, scope: !4685)
!4765 = !DILocation(line: 172, column: 30, scope: !4685)
!4766 = !DILocation(line: 172, column: 23, scope: !4685)
!4767 = !DILocation(line: 172, column: 41, scope: !4685)
!4768 = !DILocation(line: 172, column: 3, scope: !4685)
!4769 = !DILocation(line: 173, column: 18, scope: !4685)
!4770 = !DILocation(line: 173, column: 22, scope: !4685)
!4771 = !DILocation(line: 173, column: 32, scope: !4685)
!4772 = !DILocation(line: 173, column: 31, scope: !4685)
!4773 = !DILocation(line: 173, column: 43, scope: !4685)
!4774 = !DILocation(line: 173, column: 41, scope: !4685)
!4775 = !DILocation(line: 173, column: 28, scope: !4685)
!4776 = !DILocation(line: 174, column: 16, scope: !4685)
!4777 = !DILocation(line: 174, column: 23, scope: !4685)
!4778 = !DILocation(line: 174, column: 22, scope: !4685)
!4779 = !DILocation(line: 174, column: 19, scope: !4685)
!4780 = !DILocation(line: 174, column: 44, scope: !4685)
!4781 = !DILocation(line: 173, column: 9, scope: !4685)
!4782 = !DILocation(line: 173, column: 7, scope: !4685)
!4783 = !DILocation(line: 175, column: 7, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4685, file: !4551, line: 175, column: 7)
!4785 = !DILocation(line: 175, column: 11, scope: !4784)
!4786 = !DILocation(line: 175, column: 16, scope: !4784)
!4787 = !DILocation(line: 175, column: 19, scope: !4784)
!4788 = !DILocation(line: 175, column: 26, scope: !4784)
!4789 = !DILocation(line: 175, column: 36, scope: !4784)
!4790 = !DILocation(line: 175, column: 35, scope: !4784)
!4791 = !DILocation(line: 175, column: 47, scope: !4784)
!4792 = !DILocation(line: 175, column: 45, scope: !4784)
!4793 = !DILocation(line: 175, column: 32, scope: !4784)
!4794 = !DILocation(line: 175, column: 23, scope: !4784)
!4795 = !DILocation(line: 175, column: 7, scope: !4685)
!4796 = !DILocation(line: 176, column: 16, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4784, file: !4551, line: 175, column: 52)
!4798 = !DILocation(line: 176, column: 7, scope: !4797)
!4799 = !DILocation(line: 177, column: 7, scope: !4797)
!4800 = !DILocation(line: 179, column: 9, scope: !4685)
!4801 = !DILocation(line: 179, column: 6, scope: !4685)
!4802 = !DILocation(line: 181, column: 33, scope: !4685)
!4803 = !DILocation(line: 181, column: 38, scope: !4685)
!4804 = !DILocation(line: 181, column: 10, scope: !4685)
!4805 = !DILocation(line: 181, column: 8, scope: !4685)
!4806 = !DILocation(line: 182, column: 24, scope: !4685)
!4807 = !DILocation(line: 182, column: 30, scope: !4685)
!4808 = !DILocation(line: 182, column: 23, scope: !4685)
!4809 = !DILocation(line: 182, column: 41, scope: !4685)
!4810 = !DILocation(line: 182, column: 3, scope: !4685)
!4811 = !DILocation(line: 183, column: 18, scope: !4685)
!4812 = !DILocation(line: 183, column: 22, scope: !4685)
!4813 = !DILocation(line: 183, column: 32, scope: !4685)
!4814 = !DILocation(line: 183, column: 31, scope: !4685)
!4815 = !DILocation(line: 183, column: 43, scope: !4685)
!4816 = !DILocation(line: 183, column: 41, scope: !4685)
!4817 = !DILocation(line: 183, column: 28, scope: !4685)
!4818 = !DILocation(line: 183, column: 54, scope: !4685)
!4819 = !DILocation(line: 183, column: 9, scope: !4685)
!4820 = !DILocation(line: 183, column: 7, scope: !4685)
!4821 = !DILocation(line: 184, column: 7, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4685, file: !4551, line: 184, column: 7)
!4823 = !DILocation(line: 184, column: 11, scope: !4822)
!4824 = !DILocation(line: 184, column: 16, scope: !4822)
!4825 = !DILocation(line: 184, column: 19, scope: !4822)
!4826 = !DILocation(line: 184, column: 26, scope: !4822)
!4827 = !DILocation(line: 184, column: 36, scope: !4822)
!4828 = !DILocation(line: 184, column: 35, scope: !4822)
!4829 = !DILocation(line: 184, column: 47, scope: !4822)
!4830 = !DILocation(line: 184, column: 45, scope: !4822)
!4831 = !DILocation(line: 184, column: 32, scope: !4822)
!4832 = !DILocation(line: 184, column: 23, scope: !4822)
!4833 = !DILocation(line: 184, column: 7, scope: !4685)
!4834 = !DILocation(line: 185, column: 16, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4822, file: !4551, line: 184, column: 52)
!4836 = !DILocation(line: 185, column: 7, scope: !4835)
!4837 = !DILocation(line: 186, column: 7, scope: !4835)
!4838 = !DILocation(line: 188, column: 9, scope: !4685)
!4839 = !DILocation(line: 188, column: 6, scope: !4685)
!4840 = !DILocation(line: 189, column: 3, scope: !4685)
!4841 = !DILocation(line: 192, column: 5, scope: !4667)
!4842 = !DILocation(line: 142, column: 51, scope: !4662)
!4843 = !DILocation(line: 142, column: 58, scope: !4662)
!4844 = !DILocation(line: 142, column: 49, scope: !4662)
!4845 = !DILocation(line: 142, column: 5, scope: !4662)
!4846 = distinct !{!4846, !4664, !4847}
!4847 = !DILocation(line: 192, column: 5, scope: !4657)
!4848 = !DILabel(scope: !4550, name: "done", file: !4551, line: 194)
!4849 = !DILocation(line: 194, column: 1, scope: !4550)
!4850 = !DILocation(line: 196, column: 17, scope: !4550)
!4851 = !DILocation(line: 196, column: 5, scope: !4550)
!4852 = !DILocation(line: 200, column: 12, scope: !4550)
!4853 = !DILocation(line: 200, column: 5, scope: !4550)
!4854 = !DILocation(line: 201, column: 1, scope: !4550)
!4855 = distinct !DISubprogram(name: "sudo_load_plugins", scope: !245, file: !245, line: 139, type: !4856, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !238, retainedNodes: !176)
!4856 = !DISubroutineType(types: !4857)
!4857 = !{!33, !221, !4858, !4940}
!4858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4859, size: 64)
!4859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plugin_container", file: !250, line: 60, size: 320, elements: !4860)
!4860 = !{!4861, !4862, !4863, !4864, !4865}
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4859, file: !250, line: 61, baseType: !4858, size: 64)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4859, file: !250, line: 62, baseType: !4858, size: 64, offset: 64)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4859, file: !250, line: 63, baseType: !221, size: 64, offset: 128)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4859, file: !250, line: 64, baseType: !19, size: 64, offset: 192)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !4859, file: !250, line: 70, baseType: !4866, size: 64, offset: 256)
!4866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4859, file: !250, line: 65, size: 64, elements: !4867)
!4867 = !{!4868, !4874, !4906, !4923}
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !4866, file: !250, line: 66, baseType: !4869, size: 64)
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4870, size: 64)
!4870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "generic_plugin", file: !250, line: 23, size: 64, elements: !4871)
!4871 = !{!4872, !4873}
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4870, file: !250, line: 24, baseType: !7, size: 32)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4870, file: !250, line: 25, baseType: !7, size: 32, offset: 32)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !4866, file: !250, line: 67, baseType: !4875, size: 64)
!4875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4876, size: 64)
!4876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "policy_plugin", file: !574, line: 59, size: 576, elements: !4877)
!4877 = !{!4878, !4879, !4880, !4899, !4900, !4901, !4902, !4903, !4904, !4905}
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4876, file: !574, line: 61, baseType: !7, size: 32)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4876, file: !574, line: 62, baseType: !7, size: 32, offset: 32)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4876, file: !574, line: 63, baseType: !4881, size: 64, offset: 64)
!4881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4882, size: 64)
!4882 = !DISubroutineType(types: !4883)
!4883 = !{!33, !7, !4884, !597, !601, !601, !601}
!4884 = !DIDerivedType(tag: DW_TAG_typedef, name: "sudo_conv_t", file: !574, line: 53, baseType: !4885)
!4885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4886, size: 64)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{!33, !33, !4888, !4895}
!4888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4889, size: 64)
!4889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4890)
!4890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sudo_conv_message", file: !574, line: 37, size: 128, elements: !4891)
!4891 = !{!4892, !4893, !4894}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "msg_type", scope: !4890, file: !574, line: 44, baseType: !33, size: 32)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4890, file: !574, line: 45, baseType: !33, size: 32, offset: 32)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4890, file: !574, line: 46, baseType: !221, size: 64, offset: 64)
!4895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4896, size: 64)
!4896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sudo_conv_reply", file: !574, line: 49, size: 64, elements: !4897)
!4897 = !{!4898}
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !4896, file: !574, line: 50, baseType: !20, size: 64)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4876, file: !574, line: 66, baseType: !604, size: 64, offset: 128)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !4876, file: !574, line: 67, baseType: !608, size: 64, offset: 192)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "check_policy", scope: !4876, file: !574, line: 68, baseType: !612, size: 64, offset: 256)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4876, file: !574, line: 71, baseType: !618, size: 64, offset: 320)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !4876, file: !574, line: 73, baseType: !622, size: 64, offset: 384)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "invalidate", scope: !4876, file: !574, line: 74, baseType: !71, size: 64, offset: 448)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "init_session", scope: !4876, file: !574, line: 75, baseType: !3369, size: 64, offset: 512)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !4866, file: !250, line: 68, baseType: !4907, size: 64)
!4907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4908, size: 64)
!4908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_plugin", file: !574, line: 79, size: 576, elements: !4909)
!4909 = !{!4910, !4911, !4912, !4916, !4917, !4918, !4919, !4920, !4921, !4922}
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4908, file: !574, line: 81, baseType: !7, size: 32)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4908, file: !574, line: 82, baseType: !7, size: 32, offset: 32)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4908, file: !574, line: 83, baseType: !4913, size: 64, offset: 64)
!4913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4914, size: 64)
!4914 = !DISubroutineType(types: !4915)
!4915 = !{!33, !7, !4884, !597, !601, !601, !601, !33, !601, !601}
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4908, file: !574, line: 87, baseType: !604, size: 64, offset: 128)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !4908, file: !574, line: 88, baseType: !608, size: 64, offset: 192)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyin", scope: !4908, file: !574, line: 89, baseType: !218, size: 64, offset: 256)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyout", scope: !4908, file: !574, line: 90, baseType: !218, size: 64, offset: 320)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdin", scope: !4908, file: !574, line: 91, baseType: !218, size: 64, offset: 384)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdout", scope: !4908, file: !574, line: 92, baseType: !218, size: 64, offset: 448)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "log_stderr", scope: !4908, file: !574, line: 93, baseType: !218, size: 64, offset: 512)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "io_1_0", scope: !4866, file: !250, line: 69, baseType: !4924, size: 64)
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4925, size: 64)
!4925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_plugin_1_0", file: !250, line: 32, size: 576, elements: !4926)
!4926 = !{!4927, !4928, !4929, !4933, !4934, !4935, !4936, !4937, !4938, !4939}
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4925, file: !250, line: 33, baseType: !7, size: 32)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4925, file: !250, line: 34, baseType: !7, size: 32, offset: 32)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4925, file: !250, line: 35, baseType: !4930, size: 64, offset: 64)
!4930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4931, size: 64)
!4931 = !DISubroutineType(types: !4932)
!4932 = !{!33, !7, !4884, !597, !601, !601, !33, !601, !601}
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4925, file: !250, line: 39, baseType: !604, size: 64, offset: 128)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "show_version", scope: !4925, file: !250, line: 40, baseType: !608, size: 64, offset: 192)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyin", scope: !4925, file: !250, line: 41, baseType: !218, size: 64, offset: 256)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "log_ttyout", scope: !4925, file: !250, line: 42, baseType: !218, size: 64, offset: 320)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdin", scope: !4925, file: !250, line: 43, baseType: !218, size: 64, offset: 384)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "log_stdout", scope: !4925, file: !250, line: 44, baseType: !218, size: 64, offset: 448)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "log_stderr", scope: !4925, file: !250, line: 45, baseType: !218, size: 64, offset: 512)
!4940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4941, size: 64)
!4941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plugin_container_list", file: !250, line: 72, size: 128, elements: !4942)
!4942 = !{!4943, !4944}
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4941, file: !250, line: 72, baseType: !4858, size: 64)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4941, file: !250, line: 72, baseType: !4858, size: 64, offset: 64)
!4945 = !DILocalVariable(name: "conf_file", arg: 1, scope: !4855, file: !245, line: 139, type: !221)
!4946 = !DILocation(line: 139, column: 31, scope: !4855)
!4947 = !DILocalVariable(name: "policy_plugin", arg: 2, scope: !4855, file: !245, line: 140, type: !4858)
!4948 = !DILocation(line: 140, column: 30, scope: !4855)
!4949 = !DILocalVariable(name: "io_plugins", arg: 3, scope: !4855, file: !245, line: 141, type: !4940)
!4950 = !DILocation(line: 141, column: 35, scope: !4855)
!4951 = !DILocalVariable(name: "plugin", scope: !4855, file: !245, line: 143, type: !4869)
!4952 = !DILocation(line: 143, column: 28, scope: !4855)
!4953 = !DILocalVariable(name: "container", scope: !4855, file: !245, line: 144, type: !4858)
!4954 = !DILocation(line: 144, column: 30, scope: !4855)
!4955 = !DILocalVariable(name: "info", scope: !4855, file: !245, line: 145, type: !253)
!4956 = !DILocation(line: 145, column: 25, scope: !4855)
!4957 = !DILocalVariable(name: "plugin_list", scope: !4855, file: !245, line: 146, type: !248)
!4958 = !DILocation(line: 146, column: 30, scope: !4855)
!4959 = !DILocalVariable(name: "sb", scope: !4855, file: !245, line: 147, type: !4960)
!4960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !4961, line: 46, size: 1152, elements: !4962)
!4961 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!4962 = !{!4963, !4965, !4967, !4969, !4970, !4971, !4972, !4973, !4974, !4975, !4977, !4979, !4986, !4987, !4988}
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4960, file: !4961, line: 48, baseType: !4964, size: 64)
!4964 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !38, line: 145, baseType: !161)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !4960, file: !4961, line: 53, baseType: !4966, size: 64, offset: 64)
!4966 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !38, line: 148, baseType: !161)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !4960, file: !4961, line: 61, baseType: !4968, size: 64, offset: 128)
!4968 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !38, line: 151, baseType: !161)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !4960, file: !4961, line: 62, baseType: !1412, size: 32, offset: 192)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !4960, file: !4961, line: 64, baseType: !99, size: 32, offset: 224)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !4960, file: !4961, line: 65, baseType: !549, size: 32, offset: 256)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !4960, file: !4961, line: 67, baseType: !33, size: 32, offset: 288)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !4960, file: !4961, line: 69, baseType: !4964, size: 64, offset: 320)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !4960, file: !4961, line: 74, baseType: !780, size: 64, offset: 384)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !4960, file: !4961, line: 78, baseType: !4976, size: 64, offset: 448)
!4976 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !38, line: 174, baseType: !30)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !4960, file: !4961, line: 80, baseType: !4978, size: 64, offset: 512)
!4978 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !38, line: 179, baseType: !30)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !4960, file: !4961, line: 91, baseType: !4980, size: 128, offset: 576)
!4980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !4981, line: 10, size: 128, elements: !4982)
!4981 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!4982 = !{!4983, !4984}
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4980, file: !4981, line: 12, baseType: !2446, size: 64)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4980, file: !4981, line: 16, baseType: !4985, size: 64, offset: 64)
!4985 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !38, line: 196, baseType: !30)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !4960, file: !4961, line: 92, baseType: !4980, size: 128, offset: 704)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !4960, file: !4961, line: 93, baseType: !4980, size: 128, offset: 832)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4960, file: !4961, line: 106, baseType: !4989, size: 192, offset: 960)
!4989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4985, size: 192, elements: !4990)
!4990 = !{!2988}
!4991 = !DILocation(line: 147, column: 17, scope: !4855)
!4992 = !DILocalVariable(name: "handle", scope: !4855, file: !245, line: 148, type: !19)
!4993 = !DILocation(line: 148, column: 11, scope: !4855)
!4994 = !DILocalVariable(name: "path", scope: !4855, file: !245, line: 149, type: !188)
!4995 = !DILocation(line: 149, column: 10, scope: !4855)
!4996 = !DILocalVariable(name: "rval", scope: !4855, file: !245, line: 150, type: !33)
!4997 = !DILocation(line: 150, column: 9, scope: !4855)
!4998 = !DILocation(line: 153, column: 34, scope: !4855)
!4999 = !DILocation(line: 153, column: 19, scope: !4855)
!5000 = !DILocation(line: 153, column: 17, scope: !4855)
!5001 = !DILocation(line: 155, column: 5, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4855, file: !245, line: 155, column: 5)
!5003 = !DILocation(line: 155, column: 5, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5002, file: !245, line: 155, column: 5)
!5005 = !DILocation(line: 156, column: 6, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5007, file: !245, line: 156, column: 6)
!5007 = distinct !DILexicalBlock(scope: !5004, file: !245, line: 155, column: 39)
!5008 = !DILocation(line: 156, column: 12, scope: !5006)
!5009 = !DILocation(line: 156, column: 20, scope: !5006)
!5010 = !DILocation(line: 156, column: 6, scope: !5007)
!5011 = !DILocation(line: 157, column: 18, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5013, file: !245, line: 157, column: 10)
!5013 = distinct !DILexicalBlock(scope: !5006, file: !245, line: 156, column: 28)
!5014 = !DILocation(line: 157, column: 24, scope: !5012)
!5015 = !DILocation(line: 157, column: 30, scope: !5012)
!5016 = !DILocation(line: 157, column: 10, scope: !5012)
!5017 = !DILocation(line: 157, column: 50, scope: !5012)
!5018 = !DILocation(line: 157, column: 10, scope: !5013)
!5019 = !DILocation(line: 158, column: 12, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5012, file: !245, line: 157, column: 67)
!5021 = !DILocation(line: 158, column: 25, scope: !5020)
!5022 = !DILocation(line: 158, column: 31, scope: !5020)
!5023 = !DILocation(line: 158, column: 37, scope: !5020)
!5024 = !DILocation(line: 158, column: 3, scope: !5020)
!5025 = !DILocation(line: 159, column: 3, scope: !5020)
!5026 = !DILocation(line: 161, column: 2, scope: !5013)
!5027 = !DILocation(line: 162, column: 19, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5029, file: !245, line: 162, column: 10)
!5029 = distinct !DILexicalBlock(scope: !5006, file: !245, line: 161, column: 9)
!5030 = !DILocation(line: 163, column: 3, scope: !5028)
!5031 = !DILocation(line: 163, column: 9, scope: !5028)
!5032 = !DILocation(line: 162, column: 10, scope: !5028)
!5033 = !DILocation(line: 163, column: 15, scope: !5028)
!5034 = !DILocation(line: 162, column: 10, scope: !5029)
!5035 = !DILocation(line: 164, column: 12, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5028, file: !245, line: 163, column: 32)
!5037 = !DILocation(line: 164, column: 50, scope: !5036)
!5038 = !DILocation(line: 164, column: 56, scope: !5036)
!5039 = !DILocation(line: 165, column: 7, scope: !5036)
!5040 = !DILocation(line: 164, column: 3, scope: !5036)
!5041 = !DILocation(line: 166, column: 3, scope: !5036)
!5042 = !DILocation(line: 169, column: 11, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5007, file: !245, line: 169, column: 6)
!5044 = !DILocation(line: 169, column: 6, scope: !5043)
!5045 = !DILocation(line: 169, column: 22, scope: !5043)
!5046 = !DILocation(line: 169, column: 6, scope: !5007)
!5047 = !DILocation(line: 170, column: 20, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5043, file: !245, line: 169, column: 28)
!5049 = !DILocation(line: 170, column: 6, scope: !5048)
!5050 = !DILocation(line: 171, column: 6, scope: !5048)
!5051 = !DILocation(line: 173, column: 9, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5007, file: !245, line: 173, column: 6)
!5053 = !DILocation(line: 173, column: 16, scope: !5052)
!5054 = !DILocation(line: 173, column: 6, scope: !5007)
!5055 = !DILocation(line: 174, column: 15, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5052, file: !245, line: 173, column: 29)
!5057 = !DILocation(line: 174, column: 48, scope: !5056)
!5058 = !DILocation(line: 174, column: 6, scope: !5056)
!5059 = !DILocation(line: 175, column: 6, scope: !5056)
!5060 = !DILocation(line: 177, column: 10, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5007, file: !245, line: 177, column: 6)
!5062 = !DILocation(line: 177, column: 18, scope: !5061)
!5063 = !DILocation(line: 177, column: 39, scope: !5061)
!5064 = !DILocation(line: 177, column: 6, scope: !5007)
!5065 = !DILocation(line: 178, column: 15, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5061, file: !245, line: 177, column: 45)
!5067 = !DILocation(line: 178, column: 58, scope: !5066)
!5068 = !DILocation(line: 178, column: 6, scope: !5066)
!5069 = !DILocation(line: 179, column: 6, scope: !5066)
!5070 = !DILocation(line: 183, column: 18, scope: !5007)
!5071 = !DILocation(line: 183, column: 11, scope: !5007)
!5072 = !DILocation(line: 183, column: 9, scope: !5007)
!5073 = !DILocation(line: 184, column: 7, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5007, file: !245, line: 184, column: 6)
!5075 = !DILocation(line: 184, column: 6, scope: !5007)
!5076 = !DILocation(line: 185, column: 15, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5074, file: !245, line: 184, column: 15)
!5078 = !DILocation(line: 185, column: 45, scope: !5077)
!5079 = !DILocation(line: 185, column: 51, scope: !5077)
!5080 = !DILocation(line: 185, column: 6, scope: !5077)
!5081 = !DILocation(line: 186, column: 6, scope: !5077)
!5082 = !DILocation(line: 188, column: 17, scope: !5007)
!5083 = !DILocation(line: 188, column: 25, scope: !5007)
!5084 = !DILocation(line: 188, column: 31, scope: !5007)
!5085 = !DILocation(line: 188, column: 11, scope: !5007)
!5086 = !DILocation(line: 188, column: 9, scope: !5007)
!5087 = !DILocation(line: 189, column: 7, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5007, file: !245, line: 189, column: 6)
!5089 = !DILocation(line: 189, column: 6, scope: !5007)
!5090 = !DILocation(line: 190, column: 15, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5088, file: !245, line: 189, column: 15)
!5092 = !DILocation(line: 190, column: 50, scope: !5091)
!5093 = !DILocation(line: 191, column: 3, scope: !5091)
!5094 = !DILocation(line: 191, column: 9, scope: !5091)
!5095 = !DILocation(line: 190, column: 6, scope: !5091)
!5096 = !DILocation(line: 192, column: 6, scope: !5091)
!5097 = !DILocation(line: 195, column: 6, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5007, file: !245, line: 195, column: 6)
!5099 = !DILocation(line: 195, column: 14, scope: !5098)
!5100 = !DILocation(line: 195, column: 19, scope: !5098)
!5101 = !DILocation(line: 195, column: 41, scope: !5098)
!5102 = !DILocation(line: 195, column: 44, scope: !5098)
!5103 = !DILocation(line: 195, column: 52, scope: !5098)
!5104 = !DILocation(line: 195, column: 57, scope: !5098)
!5105 = !DILocation(line: 195, column: 6, scope: !5007)
!5106 = !DILocation(line: 196, column: 15, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5098, file: !245, line: 195, column: 76)
!5108 = !DILocation(line: 196, column: 48, scope: !5107)
!5109 = !DILocation(line: 196, column: 54, scope: !5107)
!5110 = !DILocation(line: 196, column: 62, scope: !5107)
!5111 = !DILocation(line: 196, column: 6, scope: !5107)
!5112 = !DILocation(line: 197, column: 6, scope: !5107)
!5113 = !DILocation(line: 199, column: 6, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5007, file: !245, line: 199, column: 6)
!5115 = !DILocation(line: 199, column: 50, scope: !5114)
!5116 = !DILocation(line: 199, column: 6, scope: !5007)
!5117 = !DILocation(line: 200, column: 15, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5114, file: !245, line: 199, column: 77)
!5119 = !DILocation(line: 201, column: 3, scope: !5118)
!5120 = !DILocation(line: 201, column: 9, scope: !5118)
!5121 = !DILocation(line: 200, column: 6, scope: !5118)
!5122 = !DILocation(line: 203, column: 6, scope: !5118)
!5123 = !DILocation(line: 205, column: 6, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5007, file: !245, line: 205, column: 6)
!5125 = !DILocation(line: 205, column: 14, scope: !5124)
!5126 = !DILocation(line: 205, column: 19, scope: !5124)
!5127 = !DILocation(line: 205, column: 6, scope: !5007)
!5128 = !DILocation(line: 206, column: 10, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5130, file: !245, line: 206, column: 10)
!5130 = distinct !DILexicalBlock(scope: !5124, file: !245, line: 205, column: 42)
!5131 = !DILocation(line: 206, column: 25, scope: !5129)
!5132 = !DILocation(line: 206, column: 10, scope: !5130)
!5133 = !DILocation(line: 207, column: 12, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5129, file: !245, line: 206, column: 33)
!5135 = !DILocation(line: 208, column: 7, scope: !5134)
!5136 = !DILocation(line: 207, column: 3, scope: !5134)
!5137 = !DILocation(line: 209, column: 3, scope: !5134)
!5138 = !DILocation(line: 211, column: 30, scope: !5130)
!5139 = !DILocation(line: 211, column: 6, scope: !5130)
!5140 = !DILocation(line: 211, column: 21, scope: !5130)
!5141 = !DILocation(line: 211, column: 28, scope: !5130)
!5142 = !DILocation(line: 212, column: 28, scope: !5130)
!5143 = !DILocation(line: 212, column: 34, scope: !5130)
!5144 = !DILocation(line: 212, column: 6, scope: !5130)
!5145 = !DILocation(line: 212, column: 21, scope: !5130)
!5146 = !DILocation(line: 212, column: 26, scope: !5130)
!5147 = !DILocation(line: 213, column: 33, scope: !5130)
!5148 = !DILocation(line: 213, column: 6, scope: !5130)
!5149 = !DILocation(line: 213, column: 21, scope: !5130)
!5150 = !DILocation(line: 213, column: 23, scope: !5130)
!5151 = !DILocation(line: 213, column: 31, scope: !5130)
!5152 = !DILocation(line: 214, column: 2, scope: !5130)
!5153 = !DILocation(line: 214, column: 13, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5124, file: !245, line: 214, column: 13)
!5155 = !DILocation(line: 214, column: 21, scope: !5154)
!5156 = !DILocation(line: 214, column: 26, scope: !5154)
!5157 = !DILocation(line: 214, column: 13, scope: !5124)
!5158 = !DILocation(line: 215, column: 18, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5154, file: !245, line: 214, column: 45)
!5160 = !DILocation(line: 215, column: 16, scope: !5159)
!5161 = !DILocation(line: 216, column: 24, scope: !5159)
!5162 = !DILocation(line: 216, column: 6, scope: !5159)
!5163 = !DILocation(line: 216, column: 17, scope: !5159)
!5164 = !DILocation(line: 216, column: 22, scope: !5159)
!5165 = !DILocation(line: 217, column: 6, scope: !5159)
!5166 = !DILocation(line: 217, column: 17, scope: !5159)
!5167 = !DILocation(line: 217, column: 22, scope: !5159)
!5168 = !DILocation(line: 218, column: 26, scope: !5159)
!5169 = !DILocation(line: 218, column: 6, scope: !5159)
!5170 = !DILocation(line: 218, column: 17, scope: !5159)
!5171 = !DILocation(line: 218, column: 24, scope: !5159)
!5172 = !DILocation(line: 219, column: 24, scope: !5159)
!5173 = !DILocation(line: 219, column: 30, scope: !5159)
!5174 = !DILocation(line: 219, column: 6, scope: !5159)
!5175 = !DILocation(line: 219, column: 17, scope: !5159)
!5176 = !DILocation(line: 219, column: 22, scope: !5159)
!5177 = !DILocation(line: 220, column: 29, scope: !5159)
!5178 = !DILocation(line: 220, column: 6, scope: !5159)
!5179 = !DILocation(line: 220, column: 17, scope: !5159)
!5180 = !DILocation(line: 220, column: 19, scope: !5159)
!5181 = !DILocation(line: 220, column: 27, scope: !5159)
!5182 = !DILocation(line: 221, column: 16, scope: !5159)
!5183 = !DILocation(line: 221, column: 28, scope: !5159)
!5184 = !DILocation(line: 221, column: 6, scope: !5159)
!5185 = !DILocation(line: 222, column: 2, scope: !5159)
!5186 = !DILocation(line: 223, column: 5, scope: !5007)
!5187 = distinct !{!5187, !5001, !5188}
!5188 = !DILocation(line: 223, column: 5, scope: !5002)
!5189 = !DILocation(line: 224, column: 9, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !4855, file: !245, line: 224, column: 9)
!5191 = !DILocation(line: 224, column: 24, scope: !5190)
!5192 = !DILocation(line: 224, column: 31, scope: !5190)
!5193 = !DILocation(line: 224, column: 9, scope: !4855)
!5194 = !DILocation(line: 225, column: 11, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5190, file: !245, line: 224, column: 40)
!5196 = !DILocation(line: 226, column: 6, scope: !5195)
!5197 = !DILocation(line: 225, column: 2, scope: !5195)
!5198 = !DILocation(line: 227, column: 2, scope: !5195)
!5199 = !DILocation(line: 229, column: 9, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !4855, file: !245, line: 229, column: 9)
!5201 = !DILocation(line: 229, column: 24, scope: !5200)
!5202 = !DILocation(line: 229, column: 26, scope: !5200)
!5203 = !DILocation(line: 229, column: 34, scope: !5200)
!5204 = !DILocation(line: 229, column: 47, scope: !5200)
!5205 = !DILocation(line: 229, column: 9, scope: !4855)
!5206 = !DILocation(line: 230, column: 11, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5200, file: !245, line: 229, column: 56)
!5208 = !DILocation(line: 231, column: 6, scope: !5207)
!5209 = !DILocation(line: 231, column: 21, scope: !5207)
!5210 = !DILocation(line: 230, column: 2, scope: !5207)
!5211 = !DILocation(line: 232, column: 2, scope: !5207)
!5212 = !DILocation(line: 235, column: 10, scope: !4855)
!5213 = !DILocation(line: 235, column: 5, scope: !4855)
!5214 = !DILabel(scope: !4855, name: "done", file: !245, line: 237)
!5215 = !DILocation(line: 237, column: 1, scope: !4855)
!5216 = !DILocation(line: 238, column: 12, scope: !4855)
!5217 = !DILocation(line: 238, column: 5, scope: !4855)
!5218 = !DILocalVariable(name: "conf_file", arg: 1, scope: !244, file: !245, line: 64, type: !221)
!5219 = !DILocation(line: 64, column: 28, scope: !244)
!5220 = !DILocalVariable(name: "fp", scope: !244, file: !245, line: 66, type: !5221)
!5221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5222, size: 64)
!5222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !756, line: 7, baseType: !5223)
!5223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !758, line: 49, size: 1728, elements: !5224)
!5224 = !{!5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235, !5236, !5237, !5238, !5240, !5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254}
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5223, file: !758, line: 51, baseType: !33, size: 32)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5223, file: !758, line: 54, baseType: !20, size: 64, offset: 64)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5223, file: !758, line: 55, baseType: !20, size: 64, offset: 128)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5223, file: !758, line: 56, baseType: !20, size: 64, offset: 192)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5223, file: !758, line: 57, baseType: !20, size: 64, offset: 256)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5223, file: !758, line: 58, baseType: !20, size: 64, offset: 320)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5223, file: !758, line: 59, baseType: !20, size: 64, offset: 384)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5223, file: !758, line: 60, baseType: !20, size: 64, offset: 448)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5223, file: !758, line: 61, baseType: !20, size: 64, offset: 512)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5223, file: !758, line: 64, baseType: !20, size: 64, offset: 576)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5223, file: !758, line: 65, baseType: !20, size: 64, offset: 640)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5223, file: !758, line: 66, baseType: !20, size: 64, offset: 704)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5223, file: !758, line: 68, baseType: !773, size: 64, offset: 768)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5223, file: !758, line: 70, baseType: !5239, size: 64, offset: 832)
!5239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5223, size: 64)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5223, file: !758, line: 72, baseType: !33, size: 32, offset: 896)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5223, file: !758, line: 73, baseType: !33, size: 32, offset: 928)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5223, file: !758, line: 74, baseType: !780, size: 64, offset: 960)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5223, file: !758, line: 77, baseType: !284, size: 16, offset: 1024)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5223, file: !758, line: 78, baseType: !178, size: 8, offset: 1040)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5223, file: !758, line: 79, baseType: !784, size: 8, offset: 1048)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5223, file: !758, line: 81, baseType: !788, size: 64, offset: 1088)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5223, file: !758, line: 89, baseType: !791, size: 64, offset: 1152)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !5223, file: !758, line: 91, baseType: !793, size: 64, offset: 1216)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !5223, file: !758, line: 92, baseType: !796, size: 64, offset: 1280)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !5223, file: !758, line: 93, baseType: !5239, size: 64, offset: 1344)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !5223, file: !758, line: 94, baseType: !19, size: 64, offset: 1408)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5223, file: !758, line: 95, baseType: !282, size: 64, offset: 1472)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5223, file: !758, line: 96, baseType: !33, size: 32, offset: 1536)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5223, file: !758, line: 98, baseType: !803, size: 160, offset: 1568)
!5255 = !DILocation(line: 66, column: 11, scope: !244)
!5256 = !DILocalVariable(name: "cp", scope: !244, file: !245, line: 67, type: !20)
!5257 = !DILocation(line: 67, column: 11, scope: !244)
!5258 = !DILocalVariable(name: "name", scope: !244, file: !245, line: 67, type: !20)
!5259 = !DILocation(line: 67, column: 16, scope: !244)
!5260 = !DILocalVariable(name: "path", scope: !244, file: !245, line: 67, type: !20)
!5261 = !DILocation(line: 67, column: 23, scope: !244)
!5262 = !DILocalVariable(name: "info", scope: !244, file: !245, line: 68, type: !253)
!5263 = !DILocation(line: 68, column: 25, scope: !244)
!5264 = !DILocation(line: 71, column: 21, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !244, file: !245, line: 71, column: 9)
!5266 = !DILocation(line: 71, column: 15, scope: !5265)
!5267 = !DILocation(line: 71, column: 13, scope: !5265)
!5268 = !DILocation(line: 71, column: 38, scope: !5265)
!5269 = !DILocation(line: 71, column: 9, scope: !244)
!5270 = !DILocation(line: 72, column: 2, scope: !5265)
!5271 = !DILocation(line: 74, column: 5, scope: !244)
!5272 = !DILocation(line: 74, column: 31, scope: !244)
!5273 = !DILocation(line: 74, column: 18, scope: !244)
!5274 = !DILocation(line: 74, column: 16, scope: !244)
!5275 = !DILocation(line: 74, column: 36, scope: !244)
!5276 = !DILocation(line: 76, column: 7, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5278, file: !245, line: 76, column: 6)
!5278 = distinct !DILexicalBlock(scope: !244, file: !245, line: 74, column: 45)
!5279 = !DILocation(line: 76, column: 6, scope: !5277)
!5280 = !DILocation(line: 76, column: 10, scope: !5277)
!5281 = !DILocation(line: 76, column: 6, scope: !5278)
!5282 = !DILocation(line: 77, column: 6, scope: !5277)
!5283 = distinct !{!5283, !5271, !5284}
!5284 = !DILocation(line: 110, column: 5, scope: !244)
!5285 = !DILocation(line: 80, column: 18, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5278, file: !245, line: 80, column: 6)
!5287 = !DILocation(line: 80, column: 6, scope: !5286)
!5288 = !DILocation(line: 80, column: 33, scope: !5286)
!5289 = !DILocation(line: 80, column: 6, scope: !5278)
!5290 = !DILocation(line: 82, column: 25, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5292, file: !245, line: 82, column: 10)
!5292 = distinct !DILexicalBlock(scope: !5286, file: !245, line: 80, column: 39)
!5293 = !DILocation(line: 82, column: 28, scope: !5291)
!5294 = !DILocation(line: 82, column: 18, scope: !5291)
!5295 = !DILocation(line: 82, column: 16, scope: !5291)
!5296 = !DILocation(line: 82, column: 41, scope: !5291)
!5297 = !DILocation(line: 82, column: 49, scope: !5291)
!5298 = !DILocation(line: 83, column: 11, scope: !5291)
!5299 = !DILocation(line: 83, column: 9, scope: !5291)
!5300 = !DILocation(line: 83, column: 32, scope: !5291)
!5301 = !DILocation(line: 82, column: 10, scope: !5292)
!5302 = !DILocation(line: 84, column: 3, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5291, file: !245, line: 83, column: 41)
!5304 = !DILocation(line: 86, column: 21, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5292, file: !245, line: 86, column: 10)
!5306 = !DILocation(line: 86, column: 10, scope: !5305)
!5307 = !DILocation(line: 86, column: 38, scope: !5305)
!5308 = !DILocation(line: 86, column: 10, scope: !5292)
!5309 = !DILocation(line: 87, column: 26, scope: !5305)
!5310 = !DILocation(line: 87, column: 18, scope: !5305)
!5311 = !DILocation(line: 87, column: 16, scope: !5305)
!5312 = !DILocation(line: 87, column: 3, scope: !5305)
!5313 = !DILocation(line: 89, column: 26, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5305, file: !245, line: 89, column: 15)
!5315 = !DILocation(line: 89, column: 15, scope: !5314)
!5316 = !DILocation(line: 89, column: 42, scope: !5314)
!5317 = !DILocation(line: 89, column: 15, scope: !5305)
!5318 = !DILocation(line: 90, column: 25, scope: !5314)
!5319 = !DILocation(line: 90, column: 17, scope: !5314)
!5320 = !DILocation(line: 90, column: 15, scope: !5314)
!5321 = !DILocation(line: 90, column: 3, scope: !5314)
!5322 = !DILocation(line: 92, column: 6, scope: !5292)
!5323 = !DILocation(line: 96, column: 18, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5278, file: !245, line: 96, column: 6)
!5325 = !DILocation(line: 96, column: 6, scope: !5324)
!5326 = !DILocation(line: 96, column: 35, scope: !5324)
!5327 = !DILocation(line: 96, column: 6, scope: !5278)
!5328 = !DILocation(line: 98, column: 25, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5330, file: !245, line: 98, column: 10)
!5330 = distinct !DILexicalBlock(scope: !5324, file: !245, line: 96, column: 41)
!5331 = !DILocation(line: 98, column: 28, scope: !5329)
!5332 = !DILocation(line: 98, column: 18, scope: !5329)
!5333 = !DILocation(line: 98, column: 16, scope: !5329)
!5334 = !DILocation(line: 98, column: 41, scope: !5329)
!5335 = !DILocation(line: 98, column: 49, scope: !5329)
!5336 = !DILocation(line: 99, column: 11, scope: !5329)
!5337 = !DILocation(line: 99, column: 9, scope: !5329)
!5338 = !DILocation(line: 99, column: 32, scope: !5329)
!5339 = !DILocation(line: 98, column: 10, scope: !5330)
!5340 = !DILocation(line: 100, column: 3, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5329, file: !245, line: 99, column: 41)
!5342 = !DILocation(line: 102, column: 13, scope: !5330)
!5343 = !DILocation(line: 102, column: 11, scope: !5330)
!5344 = !DILocation(line: 103, column: 34, scope: !5330)
!5345 = !DILocation(line: 103, column: 26, scope: !5330)
!5346 = !DILocation(line: 103, column: 6, scope: !5330)
!5347 = !DILocation(line: 103, column: 12, scope: !5330)
!5348 = !DILocation(line: 103, column: 24, scope: !5330)
!5349 = !DILocation(line: 104, column: 27, scope: !5330)
!5350 = !DILocation(line: 104, column: 19, scope: !5330)
!5351 = !DILocation(line: 104, column: 6, scope: !5330)
!5352 = !DILocation(line: 104, column: 12, scope: !5330)
!5353 = !DILocation(line: 104, column: 17, scope: !5330)
!5354 = !DILocation(line: 105, column: 19, scope: !5330)
!5355 = !DILocation(line: 105, column: 6, scope: !5330)
!5356 = !DILocation(line: 105, column: 12, scope: !5330)
!5357 = !DILocation(line: 105, column: 17, scope: !5330)
!5358 = !DILocation(line: 106, column: 6, scope: !5330)
!5359 = !DILocation(line: 106, column: 12, scope: !5330)
!5360 = !DILocation(line: 106, column: 17, scope: !5330)
!5361 = !DILocation(line: 107, column: 22, scope: !5330)
!5362 = !DILocation(line: 107, column: 6, scope: !5330)
!5363 = !DILocation(line: 108, column: 6, scope: !5330)
!5364 = !DILocation(line: 111, column: 12, scope: !244)
!5365 = !DILocation(line: 111, column: 5, scope: !244)
!5366 = !DILabel(scope: !244, name: "done", file: !245, line: 113)
!5367 = !DILocation(line: 113, column: 1, scope: !244)
!5368 = !DILocation(line: 114, column: 9, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !244, file: !245, line: 114, column: 9)
!5370 = !DILocation(line: 114, column: 9, scope: !244)
!5371 = !DILocation(line: 116, column: 9, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5369, file: !245, line: 114, column: 25)
!5373 = !DILocation(line: 116, column: 7, scope: !5372)
!5374 = !DILocation(line: 117, column: 2, scope: !5372)
!5375 = !DILocation(line: 117, column: 8, scope: !5372)
!5376 = !DILocation(line: 117, column: 20, scope: !5372)
!5377 = !DILocation(line: 118, column: 2, scope: !5372)
!5378 = !DILocation(line: 118, column: 8, scope: !5372)
!5379 = !DILocation(line: 118, column: 13, scope: !5372)
!5380 = !DILocation(line: 119, column: 15, scope: !5372)
!5381 = !DILocation(line: 119, column: 2, scope: !5372)
!5382 = !DILocation(line: 119, column: 8, scope: !5372)
!5383 = !DILocation(line: 119, column: 13, scope: !5372)
!5384 = !DILocation(line: 120, column: 2, scope: !5372)
!5385 = !DILocation(line: 120, column: 8, scope: !5372)
!5386 = !DILocation(line: 120, column: 13, scope: !5372)
!5387 = !DILocation(line: 121, column: 18, scope: !5372)
!5388 = !DILocation(line: 121, column: 2, scope: !5372)
!5389 = !DILocation(line: 124, column: 9, scope: !5372)
!5390 = !DILocation(line: 124, column: 7, scope: !5372)
!5391 = !DILocation(line: 125, column: 2, scope: !5372)
!5392 = !DILocation(line: 125, column: 8, scope: !5372)
!5393 = !DILocation(line: 125, column: 20, scope: !5372)
!5394 = !DILocation(line: 126, column: 2, scope: !5372)
!5395 = !DILocation(line: 126, column: 8, scope: !5372)
!5396 = !DILocation(line: 126, column: 13, scope: !5372)
!5397 = !DILocation(line: 127, column: 15, scope: !5372)
!5398 = !DILocation(line: 127, column: 2, scope: !5372)
!5399 = !DILocation(line: 127, column: 8, scope: !5372)
!5400 = !DILocation(line: 127, column: 13, scope: !5372)
!5401 = !DILocation(line: 128, column: 2, scope: !5372)
!5402 = !DILocation(line: 128, column: 8, scope: !5372)
!5403 = !DILocation(line: 128, column: 13, scope: !5372)
!5404 = !DILocation(line: 129, column: 18, scope: !5372)
!5405 = !DILocation(line: 129, column: 2, scope: !5372)
!5406 = !DILocation(line: 130, column: 5, scope: !5372)
!5407 = !DILocation(line: 132, column: 5, scope: !244)
!5408 = distinct !DISubprogram(name: "parse_args", scope: !288, file: !288, line: 121, type: !5409, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !263, retainedNodes: !176)
!5409 = !DISubroutineType(types: !5410)
!5410 = !{!33, !33, !615, !1744, !616, !616, !616}
!5411 = !DILocalVariable(name: "argc", arg: 1, scope: !5408, file: !288, line: 121, type: !33)
!5412 = !DILocation(line: 121, column: 16, scope: !5408)
!5413 = !DILocalVariable(name: "argv", arg: 2, scope: !5408, file: !288, line: 121, type: !615)
!5414 = !DILocation(line: 121, column: 29, scope: !5408)
!5415 = !DILocalVariable(name: "nargc", arg: 3, scope: !5408, file: !288, line: 121, type: !1744)
!5416 = !DILocation(line: 121, column: 40, scope: !5408)
!5417 = !DILocalVariable(name: "nargv", arg: 4, scope: !5408, file: !288, line: 121, type: !616)
!5418 = !DILocation(line: 121, column: 55, scope: !5408)
!5419 = !DILocalVariable(name: "settingsp", arg: 5, scope: !5408, file: !288, line: 121, type: !616)
!5420 = !DILocation(line: 121, column: 70, scope: !5408)
!5421 = !DILocalVariable(name: "env_addp", arg: 6, scope: !5408, file: !288, line: 122, type: !616)
!5422 = !DILocation(line: 122, column: 13, scope: !5408)
!5423 = !DILocalVariable(name: "mode", scope: !5408, file: !288, line: 124, type: !33)
!5424 = !DILocation(line: 124, column: 9, scope: !5408)
!5425 = !DILocalVariable(name: "flags", scope: !5408, file: !288, line: 125, type: !33)
!5426 = !DILocation(line: 125, column: 9, scope: !5408)
!5427 = !DILocalVariable(name: "valid_flags", scope: !5408, file: !288, line: 126, type: !33)
!5428 = !DILocation(line: 126, column: 9, scope: !5408)
!5429 = !DILocalVariable(name: "ch", scope: !5408, file: !288, line: 126, type: !33)
!5430 = !DILocation(line: 126, column: 22, scope: !5408)
!5431 = !DILocalVariable(name: "i", scope: !5408, file: !288, line: 127, type: !33)
!5432 = !DILocation(line: 127, column: 9, scope: !5408)
!5433 = !DILocalVariable(name: "j", scope: !5408, file: !288, line: 127, type: !33)
!5434 = !DILocation(line: 127, column: 12, scope: !5408)
!5435 = !DILocalVariable(name: "cp", scope: !5408, file: !288, line: 128, type: !20)
!5436 = !DILocation(line: 128, column: 11, scope: !5408)
!5437 = !DILocalVariable(name: "env_add", scope: !5408, file: !288, line: 128, type: !615)
!5438 = !DILocation(line: 128, column: 17, scope: !5408)
!5439 = !DILocalVariable(name: "settings", scope: !5408, file: !288, line: 128, type: !615)
!5440 = !DILocation(line: 128, column: 28, scope: !5408)
!5441 = !DILocalVariable(name: "nenv", scope: !5408, file: !288, line: 129, type: !33)
!5442 = !DILocation(line: 129, column: 9, scope: !5408)
!5443 = !DILocalVariable(name: "env_size", scope: !5408, file: !288, line: 130, type: !33)
!5444 = !DILocation(line: 130, column: 9, scope: !5408)
!5445 = !DILocation(line: 132, column: 24, scope: !5408)
!5446 = !DILocation(line: 132, column: 15, scope: !5408)
!5447 = !DILocation(line: 132, column: 13, scope: !5408)
!5448 = !DILocation(line: 135, column: 41, scope: !5408)
!5449 = !DILocation(line: 135, column: 39, scope: !5408)
!5450 = !DILocation(line: 138, column: 16, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 138, column: 9)
!5452 = !DILocation(line: 138, column: 9, scope: !5451)
!5453 = !DILocation(line: 138, column: 43, scope: !5451)
!5454 = !DILocation(line: 138, column: 9, scope: !5408)
!5455 = !DILocation(line: 139, column: 7, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5451, file: !288, line: 138, column: 49)
!5457 = !DILocation(line: 140, column: 36, scope: !5456)
!5458 = !DILocation(line: 141, column: 5, scope: !5456)
!5459 = !DILocation(line: 144, column: 9, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 144, column: 9)
!5461 = !DILocation(line: 144, column: 26, scope: !5460)
!5462 = !DILocation(line: 144, column: 9, scope: !5408)
!5463 = !DILocation(line: 145, column: 39, scope: !5460)
!5464 = !DILocation(line: 145, column: 37, scope: !5460)
!5465 = !DILocation(line: 145, column: 2, scope: !5460)
!5466 = !DILocation(line: 156, column: 17, scope: !5408)
!5467 = !DILocation(line: 159, column: 5, scope: !5408)
!5468 = !DILocation(line: 165, column: 19, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !288, line: 165, column: 6)
!5470 = distinct !DILexicalBlock(scope: !5471, file: !288, line: 159, column: 14)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !288, line: 159, column: 5)
!5472 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 159, column: 5)
!5473 = !DILocation(line: 165, column: 25, scope: !5469)
!5474 = !DILocation(line: 165, column: 12, scope: !5469)
!5475 = !DILocation(line: 165, column: 10, scope: !5469)
!5476 = !DILocation(line: 165, column: 73, scope: !5469)
!5477 = !DILocation(line: 165, column: 6, scope: !5470)
!5478 = !DILocation(line: 166, column: 14, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5469, file: !288, line: 165, column: 80)
!5480 = !DILocation(line: 166, column: 6, scope: !5479)
!5481 = !DILocation(line: 168, column: 7, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5479, file: !288, line: 166, column: 18)
!5483 = !DILocation(line: 169, column: 7, scope: !5482)
!5484 = !DILocation(line: 176, column: 7, scope: !5482)
!5485 = !DILocation(line: 177, column: 7, scope: !5482)
!5486 = !DILocation(line: 179, column: 16, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5482, file: !288, line: 179, column: 11)
!5488 = !DILocation(line: 179, column: 11, scope: !5487)
!5489 = !DILocation(line: 179, column: 24, scope: !5487)
!5490 = !DILocation(line: 179, column: 11, scope: !5482)
!5491 = !DILocation(line: 180, column: 13, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5487, file: !288, line: 179, column: 29)
!5493 = !DILocation(line: 180, column: 4, scope: !5492)
!5494 = !DILocation(line: 181, column: 4, scope: !5492)
!5495 = !DILocation(line: 182, column: 7, scope: !5492)
!5496 = !DILocation(line: 183, column: 44, scope: !5482)
!5497 = !DILocation(line: 183, column: 42, scope: !5482)
!5498 = !DILocation(line: 184, column: 7, scope: !5482)
!5499 = !DILocation(line: 191, column: 31, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5482, file: !288, line: 191, column: 11)
!5501 = !DILocation(line: 191, column: 26, scope: !5500)
!5502 = !DILocation(line: 191, column: 24, scope: !5500)
!5503 = !DILocation(line: 191, column: 40, scope: !5500)
!5504 = !DILocation(line: 191, column: 44, scope: !5500)
!5505 = !DILocation(line: 191, column: 47, scope: !5500)
!5506 = !DILocation(line: 191, column: 59, scope: !5500)
!5507 = !DILocation(line: 191, column: 11, scope: !5482)
!5508 = !DILocation(line: 192, column: 13, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5500, file: !288, line: 191, column: 64)
!5510 = !DILocation(line: 192, column: 4, scope: !5509)
!5511 = !DILocation(line: 193, column: 4, scope: !5509)
!5512 = !DILocation(line: 194, column: 7, scope: !5509)
!5513 = !DILocation(line: 195, column: 46, scope: !5482)
!5514 = !DILocation(line: 195, column: 44, scope: !5482)
!5515 = !DILocation(line: 196, column: 7, scope: !5482)
!5516 = !DILocation(line: 198, column: 53, scope: !5482)
!5517 = !DILocation(line: 199, column: 7, scope: !5482)
!5518 = !DILocation(line: 201, column: 11, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5482, file: !288, line: 201, column: 11)
!5520 = !DILocation(line: 201, column: 16, scope: !5519)
!5521 = !DILocation(line: 201, column: 19, scope: !5519)
!5522 = !DILocation(line: 201, column: 24, scope: !5519)
!5523 = !DILocation(line: 201, column: 11, scope: !5482)
!5524 = !DILocation(line: 202, column: 4, scope: !5519)
!5525 = !DILocation(line: 203, column: 12, scope: !5482)
!5526 = !DILocation(line: 204, column: 41, scope: !5482)
!5527 = !DILocation(line: 205, column: 19, scope: !5482)
!5528 = !DILocation(line: 206, column: 7, scope: !5482)
!5529 = !DILocation(line: 208, column: 21, scope: !5482)
!5530 = !DILocation(line: 208, column: 19, scope: !5482)
!5531 = !DILocation(line: 209, column: 46, scope: !5482)
!5532 = !DILocation(line: 209, column: 44, scope: !5482)
!5533 = !DILocation(line: 210, column: 7, scope: !5482)
!5534 = !DILocation(line: 212, column: 41, scope: !5482)
!5535 = !DILocation(line: 213, column: 7, scope: !5482)
!5536 = !DILocation(line: 215, column: 11, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5482, file: !288, line: 215, column: 11)
!5538 = !DILocation(line: 215, column: 16, scope: !5537)
!5539 = !DILocation(line: 215, column: 19, scope: !5537)
!5540 = !DILocation(line: 215, column: 24, scope: !5537)
!5541 = !DILocation(line: 215, column: 11, scope: !5482)
!5542 = !DILocation(line: 216, column: 15, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !288, line: 216, column: 8)
!5544 = distinct !DILexicalBlock(scope: !5537, file: !288, line: 215, column: 38)
!5545 = !DILocation(line: 216, column: 8, scope: !5543)
!5546 = !DILocation(line: 216, column: 42, scope: !5543)
!5547 = !DILocation(line: 216, column: 8, scope: !5544)
!5548 = !DILocation(line: 217, column: 8, scope: !5543)
!5549 = !DILocation(line: 218, column: 7, scope: !5544)
!5550 = !DILocation(line: 219, column: 12, scope: !5482)
!5551 = !DILocation(line: 220, column: 19, scope: !5482)
!5552 = !DILocation(line: 221, column: 7, scope: !5482)
!5553 = !DILocation(line: 223, column: 44, scope: !5482)
!5554 = !DILocation(line: 224, column: 7, scope: !5482)
!5555 = !DILocation(line: 225, column: 7, scope: !5482)
!5556 = !DILocation(line: 227, column: 46, scope: !5482)
!5557 = !DILocation(line: 228, column: 7, scope: !5482)
!5558 = !DILocation(line: 230, column: 46, scope: !5482)
!5559 = !DILocation(line: 231, column: 11, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5482, file: !288, line: 231, column: 11)
!5561 = !DILocation(line: 231, column: 16, scope: !5560)
!5562 = !DILocation(line: 231, column: 19, scope: !5560)
!5563 = !DILocation(line: 231, column: 24, scope: !5560)
!5564 = !DILocation(line: 231, column: 11, scope: !5482)
!5565 = !DILocation(line: 232, column: 4, scope: !5560)
!5566 = !DILocation(line: 233, column: 12, scope: !5482)
!5567 = !DILocation(line: 234, column: 19, scope: !5482)
!5568 = !DILocation(line: 235, column: 7, scope: !5482)
!5569 = !DILocation(line: 237, column: 11, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5482, file: !288, line: 237, column: 11)
!5571 = !DILocation(line: 237, column: 11, scope: !5482)
!5572 = !DILocation(line: 238, column: 8, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5574, file: !288, line: 238, column: 8)
!5574 = distinct !DILexicalBlock(scope: !5570, file: !288, line: 237, column: 17)
!5575 = !DILocation(line: 238, column: 13, scope: !5573)
!5576 = !DILocation(line: 238, column: 8, scope: !5574)
!5577 = !DILocation(line: 239, column: 8, scope: !5573)
!5578 = !DILocation(line: 241, column: 8, scope: !5573)
!5579 = !DILocation(line: 242, column: 7, scope: !5574)
!5580 = !DILocation(line: 243, column: 12, scope: !5482)
!5581 = !DILocation(line: 244, column: 19, scope: !5482)
!5582 = !DILocation(line: 245, column: 7, scope: !5482)
!5583 = !DILocation(line: 247, column: 7, scope: !5482)
!5584 = !DILocation(line: 248, column: 47, scope: !5482)
!5585 = !DILocation(line: 249, column: 7, scope: !5482)
!5586 = !DILocation(line: 251, column: 48, scope: !5482)
!5587 = !DILocation(line: 252, column: 7, scope: !5482)
!5588 = !DILocation(line: 254, column: 41, scope: !5482)
!5589 = !DILocation(line: 254, column: 39, scope: !5482)
!5590 = !DILocation(line: 255, column: 7, scope: !5482)
!5591 = !DILocation(line: 265, column: 7, scope: !5482)
!5592 = !DILocation(line: 266, column: 7, scope: !5482)
!5593 = !DILocation(line: 268, column: 43, scope: !5482)
!5594 = !DILocation(line: 269, column: 7, scope: !5482)
!5595 = !DILocation(line: 270, column: 7, scope: !5482)
!5596 = !DILocation(line: 272, column: 21, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5482, file: !288, line: 272, column: 11)
!5598 = !DILocation(line: 272, column: 12, scope: !5597)
!5599 = !DILocation(line: 272, column: 30, scope: !5597)
!5600 = !DILocation(line: 272, column: 11, scope: !5482)
!5601 = !DILocation(line: 273, column: 14, scope: !5597)
!5602 = !DILocation(line: 273, column: 37, scope: !5597)
!5603 = !DILocation(line: 273, column: 4, scope: !5597)
!5604 = !DILocation(line: 274, column: 19, scope: !5482)
!5605 = !DILocation(line: 274, column: 17, scope: !5482)
!5606 = !DILocation(line: 275, column: 7, scope: !5482)
!5607 = !DILocation(line: 277, column: 20, scope: !5482)
!5608 = !DILocation(line: 277, column: 18, scope: !5482)
!5609 = !DILocation(line: 278, column: 45, scope: !5482)
!5610 = !DILocation(line: 278, column: 43, scope: !5482)
!5611 = !DILocation(line: 279, column: 7, scope: !5482)
!5612 = !DILocation(line: 281, column: 11, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5482, file: !288, line: 281, column: 11)
!5614 = !DILocation(line: 281, column: 16, scope: !5613)
!5615 = !DILocation(line: 281, column: 19, scope: !5613)
!5616 = !DILocation(line: 281, column: 24, scope: !5613)
!5617 = !DILocation(line: 281, column: 11, scope: !5482)
!5618 = !DILocation(line: 282, column: 4, scope: !5613)
!5619 = !DILocation(line: 283, column: 12, scope: !5482)
!5620 = !DILocation(line: 284, column: 19, scope: !5482)
!5621 = !DILocation(line: 285, column: 7, scope: !5482)
!5622 = !DILocation(line: 287, column: 11, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5482, file: !288, line: 287, column: 11)
!5624 = !DILocation(line: 287, column: 16, scope: !5623)
!5625 = !DILocation(line: 287, column: 19, scope: !5623)
!5626 = !DILocation(line: 287, column: 24, scope: !5623)
!5627 = !DILocation(line: 287, column: 11, scope: !5482)
!5628 = !DILocation(line: 288, column: 4, scope: !5623)
!5629 = !DILocation(line: 289, column: 12, scope: !5482)
!5630 = !DILocation(line: 290, column: 19, scope: !5482)
!5631 = !DILocation(line: 291, column: 7, scope: !5482)
!5632 = !DILocation(line: 293, column: 7, scope: !5482)
!5633 = !DILocation(line: 294, column: 6, scope: !5482)
!5634 = !DILocation(line: 295, column: 2, scope: !5479)
!5635 = !DILocation(line: 295, column: 14, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5469, file: !288, line: 295, column: 13)
!5637 = !DILocation(line: 295, column: 30, scope: !5636)
!5638 = !DILocation(line: 295, column: 33, scope: !5636)
!5639 = !DILocation(line: 295, column: 13, scope: !5469)
!5640 = !DILocation(line: 296, column: 10, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5642, file: !288, line: 296, column: 10)
!5642 = distinct !DILexicalBlock(scope: !5636, file: !288, line: 295, column: 43)
!5643 = !DILocation(line: 296, column: 18, scope: !5641)
!5644 = !DILocation(line: 296, column: 27, scope: !5641)
!5645 = !DILocation(line: 296, column: 15, scope: !5641)
!5646 = !DILocation(line: 296, column: 10, scope: !5642)
!5647 = !DILocation(line: 297, column: 12, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5641, file: !288, line: 296, column: 32)
!5649 = !DILocation(line: 298, column: 23, scope: !5648)
!5650 = !DILocation(line: 298, column: 32, scope: !5648)
!5651 = !DILocation(line: 298, column: 13, scope: !5648)
!5652 = !DILocation(line: 298, column: 11, scope: !5648)
!5653 = !DILocation(line: 299, column: 6, scope: !5648)
!5654 = !DILocation(line: 300, column: 24, scope: !5642)
!5655 = !DILocation(line: 300, column: 29, scope: !5642)
!5656 = !DILocation(line: 300, column: 6, scope: !5642)
!5657 = !DILocation(line: 300, column: 18, scope: !5642)
!5658 = !DILocation(line: 300, column: 22, scope: !5642)
!5659 = !DILocation(line: 303, column: 12, scope: !5642)
!5660 = !DILocation(line: 304, column: 2, scope: !5642)
!5661 = !DILocation(line: 306, column: 6, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5636, file: !288, line: 304, column: 9)
!5663 = !DILocation(line: 159, column: 5, scope: !5471)
!5664 = distinct !{!5664, !5665, !5666}
!5665 = !DILocation(line: 159, column: 5, scope: !5472)
!5666 = !DILocation(line: 308, column: 5, scope: !5472)
!5667 = !DILocation(line: 309, column: 5, scope: !5408)
!5668 = !DILocation(line: 309, column: 13, scope: !5408)
!5669 = !DILocation(line: 309, column: 19, scope: !5408)
!5670 = !DILocation(line: 311, column: 13, scope: !5408)
!5671 = !DILocation(line: 311, column: 10, scope: !5408)
!5672 = !DILocation(line: 312, column: 13, scope: !5408)
!5673 = !DILocation(line: 312, column: 10, scope: !5408)
!5674 = !DILocation(line: 314, column: 10, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 314, column: 9)
!5676 = !DILocation(line: 314, column: 9, scope: !5408)
!5677 = !DILocation(line: 316, column: 39, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !288, line: 316, column: 6)
!5679 = distinct !DILexicalBlock(scope: !5675, file: !288, line: 314, column: 16)
!5680 = !DILocation(line: 316, column: 45, scope: !5678)
!5681 = !DILocation(line: 316, column: 6, scope: !5679)
!5682 = !DILocation(line: 317, column: 10, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !288, line: 317, column: 10)
!5684 = distinct !DILexicalBlock(scope: !5678, file: !288, line: 316, column: 54)
!5685 = !DILocation(line: 317, column: 15, scope: !5683)
!5686 = !DILocation(line: 317, column: 10, scope: !5684)
!5687 = !DILocation(line: 318, column: 8, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5683, file: !288, line: 317, column: 21)
!5689 = !DILocation(line: 319, column: 42, scope: !5688)
!5690 = !DILocation(line: 320, column: 15, scope: !5688)
!5691 = !DILocation(line: 321, column: 6, scope: !5688)
!5692 = !DILocation(line: 322, column: 2, scope: !5684)
!5693 = !DILocation(line: 323, column: 7, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5679, file: !288, line: 323, column: 6)
!5695 = !DILocation(line: 323, column: 6, scope: !5679)
!5696 = !DILocation(line: 324, column: 11, scope: !5694)
!5697 = !DILocation(line: 324, column: 6, scope: !5694)
!5698 = !DILocation(line: 325, column: 5, scope: !5679)
!5699 = !DILocation(line: 327, column: 9, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 327, column: 9)
!5701 = !DILocation(line: 327, column: 14, scope: !5700)
!5702 = !DILocation(line: 327, column: 18, scope: !5700)
!5703 = !DILocation(line: 327, column: 21, scope: !5700)
!5704 = !DILocation(line: 327, column: 26, scope: !5700)
!5705 = !DILocation(line: 327, column: 9, scope: !5408)
!5706 = !DILocation(line: 328, column: 7, scope: !5700)
!5707 = !DILocation(line: 328, column: 2, scope: !5700)
!5708 = !DILocation(line: 330, column: 9, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 330, column: 9)
!5710 = !DILocation(line: 330, column: 9, scope: !5408)
!5711 = !DILocation(line: 331, column: 6, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5713, file: !288, line: 331, column: 6)
!5713 = distinct !DILexicalBlock(scope: !5709, file: !288, line: 330, column: 41)
!5714 = !DILocation(line: 331, column: 6, scope: !5713)
!5715 = !DILocation(line: 332, column: 15, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5712, file: !288, line: 331, column: 32)
!5717 = !DILocation(line: 332, column: 6, scope: !5716)
!5718 = !DILocation(line: 333, column: 6, scope: !5716)
!5719 = !DILocation(line: 334, column: 2, scope: !5716)
!5720 = !DILocation(line: 335, column: 6, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5713, file: !288, line: 335, column: 6)
!5722 = !DILocation(line: 335, column: 6, scope: !5713)
!5723 = !DILocation(line: 336, column: 15, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5721, file: !288, line: 335, column: 39)
!5725 = !DILocation(line: 336, column: 6, scope: !5724)
!5726 = !DILocation(line: 337, column: 6, scope: !5724)
!5727 = !DILocation(line: 338, column: 2, scope: !5724)
!5728 = !DILocation(line: 339, column: 2, scope: !5713)
!5729 = !DILocation(line: 340, column: 5, scope: !5713)
!5730 = !DILocation(line: 341, column: 10, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 341, column: 9)
!5732 = !DILocation(line: 341, column: 18, scope: !5731)
!5733 = !DILocation(line: 341, column: 16, scope: !5731)
!5734 = !DILocation(line: 341, column: 34, scope: !5731)
!5735 = !DILocation(line: 341, column: 31, scope: !5731)
!5736 = !DILocation(line: 341, column: 9, scope: !5408)
!5737 = !DILocation(line: 342, column: 2, scope: !5731)
!5738 = !DILocation(line: 343, column: 9, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 343, column: 9)
!5740 = !DILocation(line: 343, column: 14, scope: !5739)
!5741 = !DILocation(line: 343, column: 27, scope: !5739)
!5742 = !DILocation(line: 344, column: 9, scope: !5739)
!5743 = !DILocation(line: 344, column: 41, scope: !5739)
!5744 = !DILocation(line: 344, column: 44, scope: !5739)
!5745 = !DILocation(line: 344, column: 55, scope: !5739)
!5746 = !DILocation(line: 343, column: 9, scope: !5408)
!5747 = !DILocation(line: 345, column: 6, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5749, file: !288, line: 345, column: 6)
!5749 = distinct !DILexicalBlock(scope: !5739, file: !288, line: 344, column: 65)
!5750 = !DILocation(line: 345, column: 6, scope: !5749)
!5751 = !DILocation(line: 346, column: 15, scope: !5748)
!5752 = !DILocation(line: 346, column: 6, scope: !5748)
!5753 = !DILocation(line: 347, column: 6, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5749, file: !288, line: 347, column: 6)
!5755 = !DILocation(line: 347, column: 17, scope: !5754)
!5756 = !DILocation(line: 347, column: 6, scope: !5749)
!5757 = !DILocation(line: 348, column: 15, scope: !5754)
!5758 = !DILocation(line: 348, column: 6, scope: !5754)
!5759 = !DILocation(line: 349, column: 2, scope: !5749)
!5760 = !DILocation(line: 350, column: 5, scope: !5749)
!5761 = !DILocation(line: 351, column: 10, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 351, column: 9)
!5763 = !DILocation(line: 351, column: 21, scope: !5762)
!5764 = !DILocation(line: 351, column: 29, scope: !5762)
!5765 = !DILocation(line: 351, column: 32, scope: !5762)
!5766 = !DILocation(line: 351, column: 44, scope: !5762)
!5767 = !DILocation(line: 351, column: 53, scope: !5762)
!5768 = !DILocation(line: 352, column: 3, scope: !5762)
!5769 = !DILocation(line: 351, column: 9, scope: !5408)
!5770 = !DILocation(line: 353, column: 2, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5762, file: !288, line: 352, column: 67)
!5772 = !DILocation(line: 354, column: 5, scope: !5771)
!5773 = !DILocation(line: 355, column: 9, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 355, column: 9)
!5775 = !DILocation(line: 355, column: 19, scope: !5774)
!5776 = !DILocation(line: 355, column: 27, scope: !5774)
!5777 = !DILocation(line: 355, column: 30, scope: !5774)
!5778 = !DILocation(line: 355, column: 35, scope: !5774)
!5779 = !DILocation(line: 355, column: 48, scope: !5774)
!5780 = !DILocation(line: 355, column: 51, scope: !5774)
!5781 = !DILocation(line: 355, column: 56, scope: !5774)
!5782 = !DILocation(line: 355, column: 9, scope: !5408)
!5783 = !DILocation(line: 356, column: 11, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5774, file: !288, line: 355, column: 71)
!5785 = !DILocation(line: 356, column: 2, scope: !5784)
!5786 = !DILocation(line: 357, column: 2, scope: !5784)
!5787 = !DILocation(line: 358, column: 5, scope: !5784)
!5788 = !DILocation(line: 359, column: 9, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 359, column: 9)
!5790 = !DILocation(line: 359, column: 42, scope: !5789)
!5791 = !DILocation(line: 359, column: 45, scope: !5789)
!5792 = !DILocation(line: 359, column: 9, scope: !5408)
!5793 = !DILocation(line: 360, column: 11, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5789, file: !288, line: 359, column: 81)
!5795 = !DILocation(line: 360, column: 2, scope: !5794)
!5796 = !DILocation(line: 361, column: 2, scope: !5794)
!5797 = !DILocation(line: 362, column: 5, scope: !5794)
!5798 = !DILocation(line: 363, column: 10, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 363, column: 9)
!5800 = !DILocation(line: 363, column: 15, scope: !5799)
!5801 = !DILocation(line: 363, column: 20, scope: !5799)
!5802 = !DILocation(line: 363, column: 23, scope: !5799)
!5803 = !DILocation(line: 363, column: 28, scope: !5799)
!5804 = !DILocation(line: 363, column: 42, scope: !5799)
!5805 = !DILocation(line: 364, column: 3, scope: !5799)
!5806 = !DILocation(line: 364, column: 8, scope: !5799)
!5807 = !DILocation(line: 364, column: 12, scope: !5799)
!5808 = !DILocation(line: 364, column: 16, scope: !5799)
!5809 = !DILocation(line: 363, column: 9, scope: !5408)
!5810 = !DILocation(line: 365, column: 2, scope: !5799)
!5811 = !DILocation(line: 366, column: 9, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 366, column: 9)
!5813 = !DILocation(line: 366, column: 14, scope: !5812)
!5814 = !DILocation(line: 366, column: 19, scope: !5812)
!5815 = !DILocation(line: 366, column: 22, scope: !5812)
!5816 = !DILocation(line: 366, column: 27, scope: !5812)
!5817 = !DILocation(line: 366, column: 39, scope: !5812)
!5818 = !DILocation(line: 366, column: 43, scope: !5812)
!5819 = !DILocation(line: 366, column: 9, scope: !5408)
!5820 = !DILocation(line: 367, column: 2, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5812, file: !288, line: 366, column: 69)
!5822 = !DILocation(line: 368, column: 41, scope: !5821)
!5823 = !DILocation(line: 369, column: 5, scope: !5821)
!5824 = !DILocation(line: 371, column: 9, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 371, column: 9)
!5826 = !DILocation(line: 371, column: 14, scope: !5825)
!5827 = !DILocation(line: 371, column: 9, scope: !5408)
!5828 = !DILocation(line: 372, column: 2, scope: !5825)
!5829 = !DILocation(line: 377, column: 9, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 377, column: 9)
!5831 = !DILocation(line: 377, column: 31, scope: !5830)
!5832 = !DILocation(line: 377, column: 34, scope: !5830)
!5833 = !DILocation(line: 377, column: 9, scope: !5408)
!5834 = !DILocalVariable(name: "av", scope: !5835, file: !288, line: 378, type: !615)
!5835 = distinct !DILexicalBlock(scope: !5830, file: !288, line: 377, column: 60)
!5836 = !DILocation(line: 378, column: 9, scope: !5835)
!5837 = !DILocalVariable(name: "ac", scope: !5835, file: !288, line: 379, type: !33)
!5838 = !DILocation(line: 379, column: 6, scope: !5835)
!5839 = !DILocation(line: 381, column: 6, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5835, file: !288, line: 381, column: 6)
!5841 = !DILocation(line: 381, column: 11, scope: !5840)
!5842 = !DILocation(line: 381, column: 6, scope: !5835)
!5843 = !DILocation(line: 383, column: 11, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5840, file: !288, line: 381, column: 17)
!5845 = !DILocation(line: 383, column: 16, scope: !5844)
!5846 = !DILocation(line: 383, column: 9, scope: !5844)
!5847 = !DILocation(line: 384, column: 20, scope: !5844)
!5848 = !DILocation(line: 384, column: 23, scope: !5844)
!5849 = !DILocation(line: 384, column: 11, scope: !5844)
!5850 = !DILocation(line: 384, column: 9, scope: !5844)
!5851 = !DILocation(line: 385, column: 13, scope: !5844)
!5852 = !DILocation(line: 385, column: 16, scope: !5844)
!5853 = !DILocation(line: 385, column: 6, scope: !5844)
!5854 = !DILocation(line: 385, column: 21, scope: !5844)
!5855 = !DILocation(line: 385, column: 27, scope: !5844)
!5856 = !DILocation(line: 385, column: 32, scope: !5844)
!5857 = !DILocation(line: 386, column: 2, scope: !5844)
!5858 = !DILocalVariable(name: "cmnd", scope: !5859, file: !288, line: 388, type: !20)
!5859 = distinct !DILexicalBlock(scope: !5840, file: !288, line: 386, column: 9)
!5860 = !DILocation(line: 388, column: 12, scope: !5859)
!5861 = !DILocalVariable(name: "src", scope: !5859, file: !288, line: 388, type: !20)
!5862 = !DILocation(line: 388, column: 19, scope: !5859)
!5863 = !DILocalVariable(name: "dst", scope: !5859, file: !288, line: 388, type: !20)
!5864 = !DILocation(line: 388, column: 25, scope: !5859)
!5865 = !DILocalVariable(name: "cmnd_size", scope: !5859, file: !288, line: 389, type: !282)
!5866 = !DILocation(line: 389, column: 13, scope: !5859)
!5867 = !DILocation(line: 389, column: 35, scope: !5859)
!5868 = !DILocation(line: 389, column: 40, scope: !5859)
!5869 = !DILocation(line: 389, column: 45, scope: !5859)
!5870 = !DILocation(line: 389, column: 52, scope: !5859)
!5871 = !DILocation(line: 389, column: 50, scope: !5859)
!5872 = !DILocation(line: 390, column: 10, scope: !5859)
!5873 = !DILocation(line: 390, column: 15, scope: !5859)
!5874 = !DILocation(line: 390, column: 20, scope: !5859)
!5875 = !DILocation(line: 390, column: 3, scope: !5859)
!5876 = !DILocation(line: 389, column: 61, scope: !5859)
!5877 = !DILocation(line: 390, column: 26, scope: !5859)
!5878 = !DILocation(line: 392, column: 28, scope: !5859)
!5879 = !DILocation(line: 392, column: 19, scope: !5859)
!5880 = !DILocation(line: 392, column: 17, scope: !5859)
!5881 = !DILocation(line: 392, column: 11, scope: !5859)
!5882 = !DILocation(line: 393, column: 16, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5859, file: !288, line: 393, column: 6)
!5884 = !DILocation(line: 393, column: 14, scope: !5883)
!5885 = !DILocation(line: 393, column: 11, scope: !5883)
!5886 = !DILocation(line: 393, column: 23, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5883, file: !288, line: 393, column: 6)
!5888 = !DILocation(line: 393, column: 22, scope: !5887)
!5889 = !DILocation(line: 393, column: 26, scope: !5887)
!5890 = !DILocation(line: 393, column: 6, scope: !5883)
!5891 = !DILocation(line: 394, column: 15, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5893, file: !288, line: 394, column: 3)
!5893 = distinct !DILexicalBlock(scope: !5887, file: !288, line: 393, column: 41)
!5894 = !DILocation(line: 394, column: 14, scope: !5892)
!5895 = !DILocation(line: 394, column: 12, scope: !5892)
!5896 = !DILocation(line: 394, column: 8, scope: !5892)
!5897 = !DILocation(line: 394, column: 20, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5892, file: !288, line: 394, column: 3)
!5899 = !DILocation(line: 394, column: 19, scope: !5898)
!5900 = !DILocation(line: 394, column: 24, scope: !5898)
!5901 = !DILocation(line: 394, column: 3, scope: !5892)
!5902 = !DILocation(line: 396, column: 12, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !288, line: 396, column: 11)
!5904 = distinct !DILexicalBlock(scope: !5898, file: !288, line: 394, column: 40)
!5905 = !DILocation(line: 396, column: 41, scope: !5903)
!5906 = !DILocation(line: 396, column: 45, scope: !5903)
!5907 = !DILocation(line: 396, column: 44, scope: !5903)
!5908 = !DILocation(line: 396, column: 49, scope: !5903)
!5909 = !DILocation(line: 396, column: 56, scope: !5903)
!5910 = !DILocation(line: 396, column: 60, scope: !5903)
!5911 = !DILocation(line: 396, column: 59, scope: !5903)
!5912 = !DILocation(line: 396, column: 64, scope: !5903)
!5913 = !DILocation(line: 396, column: 11, scope: !5904)
!5914 = !DILocation(line: 397, column: 8, scope: !5903)
!5915 = !DILocation(line: 397, column: 11, scope: !5903)
!5916 = !DILocation(line: 397, column: 4, scope: !5903)
!5917 = !DILocation(line: 398, column: 17, scope: !5904)
!5918 = !DILocation(line: 398, column: 16, scope: !5904)
!5919 = !DILocation(line: 398, column: 11, scope: !5904)
!5920 = !DILocation(line: 398, column: 14, scope: !5904)
!5921 = !DILocation(line: 399, column: 3, scope: !5904)
!5922 = !DILocation(line: 394, column: 36, scope: !5898)
!5923 = !DILocation(line: 394, column: 3, scope: !5898)
!5924 = distinct !{!5924, !5901, !5925}
!5925 = !DILocation(line: 399, column: 3, scope: !5892)
!5926 = !DILocation(line: 400, column: 7, scope: !5893)
!5927 = !DILocation(line: 400, column: 10, scope: !5893)
!5928 = !DILocation(line: 401, column: 6, scope: !5893)
!5929 = !DILocation(line: 393, column: 37, scope: !5887)
!5930 = !DILocation(line: 393, column: 6, scope: !5887)
!5931 = distinct !{!5931, !5890, !5932}
!5932 = !DILocation(line: 401, column: 6, scope: !5883)
!5933 = !DILocation(line: 402, column: 10, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5859, file: !288, line: 402, column: 10)
!5935 = !DILocation(line: 402, column: 18, scope: !5934)
!5936 = !DILocation(line: 402, column: 15, scope: !5934)
!5937 = !DILocation(line: 402, column: 10, scope: !5859)
!5938 = !DILocation(line: 403, column: 6, scope: !5934)
!5939 = !DILocation(line: 403, column: 3, scope: !5934)
!5940 = !DILocation(line: 404, column: 7, scope: !5859)
!5941 = !DILocation(line: 404, column: 11, scope: !5859)
!5942 = !DILocation(line: 406, column: 9, scope: !5859)
!5943 = !DILocation(line: 407, column: 20, scope: !5859)
!5944 = !DILocation(line: 407, column: 23, scope: !5859)
!5945 = !DILocation(line: 407, column: 11, scope: !5859)
!5946 = !DILocation(line: 407, column: 9, scope: !5859)
!5947 = !DILocation(line: 408, column: 6, scope: !5859)
!5948 = !DILocation(line: 408, column: 12, scope: !5859)
!5949 = !DILocation(line: 409, column: 14, scope: !5859)
!5950 = !DILocation(line: 409, column: 6, scope: !5859)
!5951 = !DILocation(line: 409, column: 12, scope: !5859)
!5952 = !DILocation(line: 411, column: 31, scope: !5835)
!5953 = !DILocation(line: 411, column: 2, scope: !5835)
!5954 = !DILocation(line: 411, column: 8, scope: !5835)
!5955 = !DILocation(line: 412, column: 2, scope: !5835)
!5956 = !DILocation(line: 412, column: 5, scope: !5835)
!5957 = !DILocation(line: 412, column: 9, scope: !5835)
!5958 = !DILocation(line: 414, column: 9, scope: !5835)
!5959 = !DILocation(line: 414, column: 7, scope: !5835)
!5960 = !DILocation(line: 415, column: 9, scope: !5835)
!5961 = !DILocation(line: 415, column: 7, scope: !5835)
!5962 = !DILocation(line: 416, column: 5, scope: !5835)
!5963 = !DILocation(line: 421, column: 16, scope: !5408)
!5964 = !DILocation(line: 421, column: 14, scope: !5408)
!5965 = !DILocation(line: 422, column: 12, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 422, column: 5)
!5967 = !DILocation(line: 422, column: 19, scope: !5966)
!5968 = !DILocation(line: 422, column: 10, scope: !5966)
!5969 = !DILocation(line: 422, column: 24, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5966, file: !288, line: 422, column: 5)
!5971 = !DILocation(line: 422, column: 26, scope: !5970)
!5972 = !DILocation(line: 422, column: 5, scope: !5966)
!5973 = !DILocation(line: 423, column: 20, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !288, line: 423, column: 6)
!5975 = distinct !DILexicalBlock(scope: !5970, file: !288, line: 422, column: 47)
!5976 = !DILocation(line: 423, column: 6, scope: !5974)
!5977 = !DILocation(line: 423, column: 23, scope: !5974)
!5978 = !DILocation(line: 423, column: 6, scope: !5975)
!5979 = !DILocation(line: 424, column: 53, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5974, file: !288, line: 423, column: 30)
!5981 = !DILocation(line: 424, column: 39, scope: !5980)
!5982 = !DILocation(line: 424, column: 56, scope: !5980)
!5983 = !DILocation(line: 425, column: 17, scope: !5980)
!5984 = !DILocation(line: 425, column: 3, scope: !5980)
!5985 = !DILocation(line: 425, column: 20, scope: !5980)
!5986 = !DILocation(line: 424, column: 6, scope: !5980)
!5987 = !DILocation(line: 426, column: 45, scope: !5980)
!5988 = !DILocation(line: 426, column: 31, scope: !5980)
!5989 = !DILocation(line: 426, column: 48, scope: !5980)
!5990 = !DILocation(line: 427, column: 17, scope: !5980)
!5991 = !DILocation(line: 427, column: 3, scope: !5980)
!5992 = !DILocation(line: 427, column: 20, scope: !5980)
!5993 = !DILocation(line: 426, column: 20, scope: !5980)
!5994 = !DILocation(line: 426, column: 6, scope: !5980)
!5995 = !DILocation(line: 426, column: 15, scope: !5980)
!5996 = !DILocation(line: 426, column: 18, scope: !5980)
!5997 = !DILocation(line: 428, column: 10, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5980, file: !288, line: 428, column: 10)
!5999 = !DILocation(line: 428, column: 19, scope: !5998)
!6000 = !DILocation(line: 428, column: 22, scope: !5998)
!6001 = !DILocation(line: 428, column: 10, scope: !5980)
!6002 = !DILocation(line: 429, column: 13, scope: !5998)
!6003 = !DILocation(line: 429, column: 3, scope: !5998)
!6004 = !DILocation(line: 430, column: 7, scope: !5980)
!6005 = !DILocation(line: 431, column: 2, scope: !5980)
!6006 = !DILocation(line: 432, column: 5, scope: !5975)
!6007 = !DILocation(line: 422, column: 43, scope: !5970)
!6008 = !DILocation(line: 422, column: 5, scope: !5970)
!6009 = distinct !{!6009, !5972, !6010}
!6010 = !DILocation(line: 432, column: 5, scope: !5966)
!6011 = !DILocation(line: 433, column: 5, scope: !5408)
!6012 = !DILocation(line: 433, column: 14, scope: !5408)
!6013 = !DILocation(line: 433, column: 17, scope: !5408)
!6014 = !DILocation(line: 435, column: 9, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !5408, file: !288, line: 435, column: 9)
!6016 = !DILocation(line: 435, column: 14, scope: !6015)
!6017 = !DILocation(line: 435, column: 9, scope: !5408)
!6018 = !DILocation(line: 438, column: 6, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6015, file: !288, line: 435, column: 28)
!6020 = !DILocation(line: 439, column: 6, scope: !6019)
!6021 = !DILocation(line: 440, column: 2, scope: !6019)
!6022 = !DILocation(line: 440, column: 10, scope: !6019)
!6023 = !DILocation(line: 444, column: 5, scope: !6019)
!6024 = !DILocation(line: 446, column: 18, scope: !5408)
!6025 = !DILocation(line: 446, column: 6, scope: !5408)
!6026 = !DILocation(line: 446, column: 16, scope: !5408)
!6027 = !DILocation(line: 447, column: 17, scope: !5408)
!6028 = !DILocation(line: 447, column: 6, scope: !5408)
!6029 = !DILocation(line: 447, column: 15, scope: !5408)
!6030 = !DILocation(line: 448, column: 14, scope: !5408)
!6031 = !DILocation(line: 448, column: 6, scope: !5408)
!6032 = !DILocation(line: 448, column: 12, scope: !5408)
!6033 = !DILocation(line: 449, column: 14, scope: !5408)
!6034 = !DILocation(line: 449, column: 6, scope: !5408)
!6035 = !DILocation(line: 449, column: 12, scope: !5408)
!6036 = !DILocation(line: 450, column: 12, scope: !5408)
!6037 = !DILocation(line: 450, column: 19, scope: !5408)
!6038 = !DILocation(line: 450, column: 17, scope: !5408)
!6039 = !DILocation(line: 450, column: 5, scope: !5408)
!6040 = distinct !DISubprogram(name: "usage", scope: !288, file: !288, line: 470, type: !72, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !263, retainedNodes: !176)
!6041 = !DILocalVariable(name: "fatal", arg: 1, scope: !6040, file: !288, line: 470, type: !33)
!6042 = !DILocation(line: 470, column: 11, scope: !6040)
!6043 = !DILocalVariable(name: "lbuf", scope: !6040, file: !288, line: 472, type: !6044)
!6044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lbuf", file: !6045, line: 25, size: 320, elements: !6046)
!6045 = !DIFile(filename: "../include/lbuf.h", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!6046 = !{!6047, !6051, !6052, !6053, !6054, !6055, !6056}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !6044, file: !6045, line: 26, baseType: !6048, size: 64)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6049, size: 64)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{!33, !221}
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6044, file: !6045, line: 27, baseType: !20, size: 64, offset: 64)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "continuation", scope: !6044, file: !6045, line: 28, baseType: !221, size: 64, offset: 128)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "indent", scope: !6044, file: !6045, line: 29, baseType: !33, size: 32, offset: 192)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6044, file: !6045, line: 30, baseType: !33, size: 32, offset: 224)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6044, file: !6045, line: 31, baseType: !33, size: 32, offset: 256)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "cols", scope: !6044, file: !6045, line: 32, baseType: !33, size: 32, offset: 288)
!6057 = !DILocation(line: 472, column: 17, scope: !6040)
!6058 = !DILocalVariable(name: "uvec", scope: !6040, file: !288, line: 473, type: !6059)
!6059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 384, elements: !234)
!6060 = !DILocation(line: 473, column: 11, scope: !6040)
!6061 = !DILocalVariable(name: "i", scope: !6040, file: !288, line: 474, type: !33)
!6062 = !DILocation(line: 474, column: 9, scope: !6040)
!6063 = !DILocalVariable(name: "ulen", scope: !6040, file: !288, line: 474, type: !33)
!6064 = !DILocation(line: 474, column: 12, scope: !6040)
!6065 = !DILocation(line: 479, column: 16, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6040, file: !288, line: 479, column: 9)
!6067 = !DILocation(line: 479, column: 9, scope: !6066)
!6068 = !DILocation(line: 479, column: 43, scope: !6066)
!6069 = !DILocation(line: 479, column: 9, scope: !6040)
!6070 = !DILocation(line: 480, column: 2, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6066, file: !288, line: 479, column: 49)
!6072 = !DILocation(line: 480, column: 10, scope: !6071)
!6073 = !DILocation(line: 481, column: 2, scope: !6071)
!6074 = !DILocation(line: 481, column: 10, scope: !6071)
!6075 = !DILocation(line: 482, column: 5, scope: !6071)
!6076 = !DILocation(line: 483, column: 2, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6066, file: !288, line: 482, column: 12)
!6078 = !DILocation(line: 483, column: 10, scope: !6077)
!6079 = !DILocation(line: 484, column: 2, scope: !6077)
!6080 = !DILocation(line: 484, column: 10, scope: !6077)
!6081 = !DILocation(line: 485, column: 2, scope: !6077)
!6082 = !DILocation(line: 485, column: 10, scope: !6077)
!6083 = !DILocation(line: 486, column: 2, scope: !6077)
!6084 = !DILocation(line: 486, column: 10, scope: !6077)
!6085 = !DILocation(line: 487, column: 2, scope: !6077)
!6086 = !DILocation(line: 487, column: 10, scope: !6077)
!6087 = !DILocation(line: 488, column: 2, scope: !6077)
!6088 = !DILocation(line: 488, column: 10, scope: !6077)
!6089 = !DILocation(line: 495, column: 24, scope: !6040)
!6090 = !DILocation(line: 495, column: 17, scope: !6040)
!6091 = !DILocation(line: 495, column: 12, scope: !6040)
!6092 = !DILocation(line: 495, column: 39, scope: !6040)
!6093 = !DILocation(line: 495, column: 10, scope: !6040)
!6094 = !DILocation(line: 496, column: 22, scope: !6040)
!6095 = !DILocation(line: 496, column: 53, scope: !6040)
!6096 = !DILocation(line: 497, column: 15, scope: !6040)
!6097 = !DILocation(line: 496, column: 5, scope: !6040)
!6098 = !DILocation(line: 498, column: 12, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6040, file: !288, line: 498, column: 5)
!6100 = !DILocation(line: 498, column: 10, scope: !6099)
!6101 = !DILocation(line: 498, column: 22, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6099, file: !288, line: 498, column: 5)
!6103 = !DILocation(line: 498, column: 17, scope: !6102)
!6104 = !DILocation(line: 498, column: 25, scope: !6102)
!6105 = !DILocation(line: 498, column: 5, scope: !6099)
!6106 = !DILocation(line: 499, column: 36, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6102, file: !288, line: 498, column: 39)
!6108 = !DILocation(line: 499, column: 56, scope: !6107)
!6109 = !DILocation(line: 499, column: 51, scope: !6107)
!6110 = !DILocation(line: 499, column: 2, scope: !6107)
!6111 = !DILocation(line: 500, column: 2, scope: !6107)
!6112 = !DILocation(line: 501, column: 5, scope: !6107)
!6113 = !DILocation(line: 498, column: 35, scope: !6102)
!6114 = !DILocation(line: 498, column: 5, scope: !6102)
!6115 = distinct !{!6115, !6105, !6116}
!6116 = !DILocation(line: 501, column: 5, scope: !6099)
!6117 = !DILocation(line: 502, column: 5, scope: !6040)
!6118 = !DILocation(line: 503, column: 9, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6040, file: !288, line: 503, column: 9)
!6120 = !DILocation(line: 503, column: 9, scope: !6040)
!6121 = !DILocation(line: 504, column: 2, scope: !6119)
!6122 = !DILocation(line: 505, column: 1, scope: !6040)
!6123 = distinct !DISubprogram(name: "usage_excl", scope: !288, file: !288, line: 511, type: !72, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !263, retainedNodes: !176)
!6124 = !DILocalVariable(name: "fatal", arg: 1, scope: !6123, file: !288, line: 511, type: !33)
!6125 = !DILocation(line: 511, column: 16, scope: !6123)
!6126 = !DILocation(line: 513, column: 14, scope: !6123)
!6127 = !DILocation(line: 513, column: 5, scope: !6123)
!6128 = !DILocation(line: 514, column: 11, scope: !6123)
!6129 = !DILocation(line: 514, column: 5, scope: !6123)
!6130 = !DILocation(line: 515, column: 1, scope: !6123)
!6131 = distinct !DISubprogram(name: "help", scope: !288, file: !288, line: 518, type: !165, scopeLine: 519, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !263, retainedNodes: !176)
!6132 = !DILocalVariable(name: "lbuf", scope: !6131, file: !288, line: 520, type: !6044)
!6133 = !DILocation(line: 520, column: 17, scope: !6131)
!6134 = !DILocalVariable(name: "indent", scope: !6131, file: !288, line: 521, type: !33)
!6135 = !DILocation(line: 521, column: 9, scope: !6131)
!6136 = !DILocalVariable(name: "pname", scope: !6131, file: !288, line: 522, type: !221)
!6137 = !DILocation(line: 522, column: 17, scope: !6131)
!6138 = !DILocation(line: 522, column: 25, scope: !6131)
!6139 = !DILocation(line: 524, column: 33, scope: !6131)
!6140 = !DILocation(line: 524, column: 60, scope: !6131)
!6141 = !DILocation(line: 524, column: 5, scope: !6131)
!6142 = !DILocation(line: 525, column: 16, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6131, file: !288, line: 525, column: 9)
!6144 = !DILocation(line: 525, column: 9, scope: !6143)
!6145 = !DILocation(line: 525, column: 35, scope: !6143)
!6146 = !DILocation(line: 525, column: 9, scope: !6131)
!6147 = !DILocation(line: 526, column: 21, scope: !6143)
!6148 = !DILocation(line: 526, column: 63, scope: !6143)
!6149 = !DILocation(line: 526, column: 2, scope: !6143)
!6150 = !DILocation(line: 528, column: 21, scope: !6143)
!6151 = !DILocation(line: 528, column: 70, scope: !6143)
!6152 = !DILocation(line: 528, column: 2, scope: !6143)
!6153 = !DILocation(line: 529, column: 5, scope: !6131)
!6154 = !DILocation(line: 531, column: 5, scope: !6131)
!6155 = !DILocation(line: 533, column: 24, scope: !6131)
!6156 = !DILocation(line: 533, column: 5, scope: !6131)
!6157 = !DILocation(line: 539, column: 2, scope: !6131)
!6158 = !DILocation(line: 538, column: 5, scope: !6131)
!6159 = !DILocation(line: 541, column: 2, scope: !6131)
!6160 = !DILocation(line: 540, column: 5, scope: !6131)
!6161 = !DILocation(line: 543, column: 2, scope: !6131)
!6162 = !DILocation(line: 542, column: 5, scope: !6131)
!6163 = !DILocation(line: 549, column: 2, scope: !6131)
!6164 = !DILocation(line: 548, column: 5, scope: !6131)
!6165 = !DILocation(line: 551, column: 2, scope: !6131)
!6166 = !DILocation(line: 550, column: 5, scope: !6131)
!6167 = !DILocation(line: 553, column: 2, scope: !6131)
!6168 = !DILocation(line: 552, column: 5, scope: !6131)
!6169 = !DILocation(line: 555, column: 2, scope: !6131)
!6170 = !DILocation(line: 554, column: 5, scope: !6131)
!6171 = !DILocation(line: 557, column: 2, scope: !6131)
!6172 = !DILocation(line: 556, column: 5, scope: !6131)
!6173 = !DILocation(line: 559, column: 2, scope: !6131)
!6174 = !DILocation(line: 558, column: 5, scope: !6131)
!6175 = !DILocation(line: 561, column: 2, scope: !6131)
!6176 = !DILocation(line: 560, column: 5, scope: !6131)
!6177 = !DILocation(line: 563, column: 2, scope: !6131)
!6178 = !DILocation(line: 562, column: 5, scope: !6131)
!6179 = !DILocation(line: 565, column: 2, scope: !6131)
!6180 = !DILocation(line: 564, column: 5, scope: !6131)
!6181 = !DILocation(line: 567, column: 2, scope: !6131)
!6182 = !DILocation(line: 566, column: 5, scope: !6131)
!6183 = !DILocation(line: 569, column: 2, scope: !6131)
!6184 = !DILocation(line: 568, column: 5, scope: !6131)
!6185 = !DILocation(line: 571, column: 2, scope: !6131)
!6186 = !DILocation(line: 570, column: 5, scope: !6131)
!6187 = !DILocation(line: 577, column: 2, scope: !6131)
!6188 = !DILocation(line: 576, column: 5, scope: !6131)
!6189 = !DILocation(line: 579, column: 24, scope: !6131)
!6190 = !DILocation(line: 578, column: 5, scope: !6131)
!6191 = !DILocation(line: 585, column: 2, scope: !6131)
!6192 = !DILocation(line: 584, column: 5, scope: !6131)
!6193 = !DILocation(line: 587, column: 2, scope: !6131)
!6194 = !DILocation(line: 586, column: 5, scope: !6131)
!6195 = !DILocation(line: 589, column: 2, scope: !6131)
!6196 = !DILocation(line: 588, column: 5, scope: !6131)
!6197 = !DILocation(line: 591, column: 2, scope: !6131)
!6198 = !DILocation(line: 590, column: 5, scope: !6131)
!6199 = !DILocation(line: 593, column: 2, scope: !6131)
!6200 = !DILocation(line: 592, column: 5, scope: !6131)
!6201 = !DILocation(line: 594, column: 5, scope: !6131)
!6202 = !DILocation(line: 595, column: 5, scope: !6131)
!6203 = !DILocation(line: 596, column: 5, scope: !6131)
!6204 = distinct !DISubprogram(name: "usage_out", scope: !288, file: !288, line: 460, type: !6049, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !263, retainedNodes: !176)
!6205 = !DILocalVariable(name: "buf", arg: 1, scope: !6204, file: !288, line: 460, type: !221)
!6206 = !DILocation(line: 460, column: 23, scope: !6204)
!6207 = !DILocation(line: 462, column: 18, scope: !6204)
!6208 = !DILocation(line: 462, column: 23, scope: !6204)
!6209 = !DILocation(line: 462, column: 12, scope: !6204)
!6210 = !DILocation(line: 462, column: 5, scope: !6204)
!6211 = distinct !DISubprogram(name: "usage_err", scope: !288, file: !288, line: 454, type: !6049, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !263, retainedNodes: !176)
!6212 = !DILocalVariable(name: "buf", arg: 1, scope: !6211, file: !288, line: 454, type: !221)
!6213 = !DILocation(line: 454, column: 23, scope: !6211)
!6214 = !DILocation(line: 456, column: 18, scope: !6211)
!6215 = !DILocation(line: 456, column: 23, scope: !6211)
!6216 = !DILocation(line: 456, column: 12, scope: !6211)
!6217 = !DILocation(line: 456, column: 5, scope: !6211)
!6218 = distinct !DISubprogram(name: "main", scope: !554, file: !554, line: 157, type: !6219, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6219 = !DISubroutineType(types: !6220)
!6220 = !{!33, !33, !615, !615}
!6221 = !DILocalVariable(name: "argc", arg: 1, scope: !6218, file: !554, line: 157, type: !33)
!6222 = !DILocation(line: 157, column: 10, scope: !6218)
!6223 = !DILocalVariable(name: "argv", arg: 2, scope: !6218, file: !554, line: 157, type: !615)
!6224 = !DILocation(line: 157, column: 22, scope: !6218)
!6225 = !DILocalVariable(name: "envp", arg: 3, scope: !6218, file: !554, line: 157, type: !615)
!6226 = !DILocation(line: 157, column: 36, scope: !6218)
!6227 = !DILocalVariable(name: "nargc", scope: !6218, file: !554, line: 159, type: !33)
!6228 = !DILocation(line: 159, column: 9, scope: !6218)
!6229 = !DILocalVariable(name: "sudo_mode", scope: !6218, file: !554, line: 159, type: !33)
!6230 = !DILocation(line: 159, column: 16, scope: !6218)
!6231 = !DILocalVariable(name: "exitcode", scope: !6218, file: !554, line: 159, type: !33)
!6232 = !DILocation(line: 159, column: 27, scope: !6218)
!6233 = !DILocalVariable(name: "nargv", scope: !6218, file: !554, line: 160, type: !615)
!6234 = !DILocation(line: 160, column: 12, scope: !6218)
!6235 = !DILocalVariable(name: "settings", scope: !6218, file: !554, line: 160, type: !615)
!6236 = !DILocation(line: 160, column: 21, scope: !6218)
!6237 = !DILocalVariable(name: "env_add", scope: !6218, file: !554, line: 160, type: !615)
!6238 = !DILocation(line: 160, column: 33, scope: !6218)
!6239 = !DILocalVariable(name: "user_info", scope: !6218, file: !554, line: 161, type: !615)
!6240 = !DILocation(line: 161, column: 12, scope: !6218)
!6241 = !DILocalVariable(name: "command_info", scope: !6218, file: !554, line: 161, type: !615)
!6242 = !DILocation(line: 161, column: 25, scope: !6218)
!6243 = !DILocalVariable(name: "argv_out", scope: !6218, file: !554, line: 161, type: !615)
!6244 = !DILocation(line: 161, column: 41, scope: !6218)
!6245 = !DILocalVariable(name: "user_env_out", scope: !6218, file: !554, line: 161, type: !615)
!6246 = !DILocation(line: 161, column: 53, scope: !6218)
!6247 = !DILocalVariable(name: "plugin", scope: !6218, file: !554, line: 162, type: !558)
!6248 = !DILocation(line: 162, column: 30, scope: !6218)
!6249 = !DILocalVariable(name: "next", scope: !6218, file: !554, line: 162, type: !558)
!6250 = !DILocation(line: 162, column: 39, scope: !6218)
!6251 = !DILocalVariable(name: "command_details", scope: !6218, file: !554, line: 163, type: !6252)
!6252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "command_details", file: !699, line: 126, size: 960, elements: !6253)
!6253 = !{!6254, !6255, !6256, !6257, !6258, !6259, !6260, !6261, !6262, !6263, !6264, !6265, !6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273}
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6252, file: !699, line: 127, baseType: !550, size: 32)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6252, file: !699, line: 128, baseType: !550, size: 32, offset: 32)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6252, file: !699, line: 129, baseType: !548, size: 32, offset: 64)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !6252, file: !699, line: 130, baseType: !548, size: 32, offset: 96)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "umask", scope: !6252, file: !699, line: 131, baseType: !1411, size: 32, offset: 128)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !6252, file: !699, line: 132, baseType: !33, size: 32, offset: 160)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6252, file: !699, line: 133, baseType: !33, size: 32, offset: 192)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !6252, file: !699, line: 134, baseType: !33, size: 32, offset: 224)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "closefrom", scope: !6252, file: !699, line: 135, baseType: !33, size: 32, offset: 256)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6252, file: !699, line: 136, baseType: !33, size: 32, offset: 288)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6252, file: !699, line: 137, baseType: !711, size: 64, offset: 320)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !6252, file: !699, line: 138, baseType: !221, size: 64, offset: 384)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6252, file: !699, line: 139, baseType: !221, size: 64, offset: 448)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "login_class", scope: !6252, file: !699, line: 140, baseType: !221, size: 64, offset: 512)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "chroot", scope: !6252, file: !699, line: 141, baseType: !221, size: 64, offset: 576)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "selinux_role", scope: !6252, file: !699, line: 142, baseType: !221, size: 64, offset: 640)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "selinux_type", scope: !6252, file: !699, line: 143, baseType: !221, size: 64, offset: 704)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "utmp_user", scope: !6252, file: !699, line: 144, baseType: !221, size: 64, offset: 768)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !6252, file: !699, line: 145, baseType: !615, size: 64, offset: 832)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !6252, file: !699, line: 146, baseType: !615, size: 64, offset: 896)
!6274 = !DILocation(line: 163, column: 28, scope: !6218)
!6275 = !DILocalVariable(name: "mask", scope: !6218, file: !554, line: 164, type: !6276)
!6276 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !202, line: 7, baseType: !6277)
!6277 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !156, line: 8, baseType: !6278)
!6278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !156, line: 5, size: 1024, elements: !6279)
!6279 = !{!6280}
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !6278, file: !156, line: 7, baseType: !160, size: 1024)
!6281 = !DILocation(line: 164, column: 14, scope: !6218)
!6282 = !DILocalVariable(name: "ok", scope: !6218, file: !554, line: 165, type: !33)
!6283 = !DILocation(line: 165, column: 9, scope: !6218)
!6284 = !DILocation(line: 177, column: 5, scope: !6218)
!6285 = !DILocation(line: 179, column: 5, scope: !6218)
!6286 = !DILocation(line: 180, column: 5, scope: !6218)
!6287 = !DILocation(line: 190, column: 9, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6218, file: !554, line: 190, column: 9)
!6289 = !DILocation(line: 190, column: 19, scope: !6288)
!6290 = !DILocation(line: 190, column: 9, scope: !6218)
!6291 = !DILocation(line: 191, column: 12, scope: !6288)
!6292 = !DILocation(line: 191, column: 2, scope: !6288)
!6293 = !DILocation(line: 194, column: 12, scope: !6218)
!6294 = !DILocation(line: 195, column: 12, scope: !6218)
!6295 = !DILocation(line: 196, column: 5, scope: !6218)
!6296 = !DILocation(line: 197, column: 5, scope: !6218)
!6297 = !DILocation(line: 200, column: 5, scope: !6218)
!6298 = !DILocation(line: 201, column: 17, scope: !6218)
!6299 = !DILocation(line: 201, column: 15, scope: !6218)
!6300 = !DILocation(line: 204, column: 5, scope: !6218)
!6301 = !DILocation(line: 206, column: 28, scope: !6218)
!6302 = !DILocation(line: 206, column: 34, scope: !6218)
!6303 = !DILocation(line: 206, column: 17, scope: !6218)
!6304 = !DILocation(line: 206, column: 15, scope: !6218)
!6305 = !DILocation(line: 207, column: 35, scope: !6218)
!6306 = !DILocation(line: 207, column: 5, scope: !6218)
!6307 = !DILocation(line: 210, column: 9, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6218, file: !554, line: 210, column: 9)
!6309 = !DILocation(line: 210, column: 9, scope: !6218)
!6310 = !DILocation(line: 211, column: 9, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6308, file: !554, line: 210, column: 41)
!6312 = !DILocation(line: 211, column: 2, scope: !6311)
!6313 = !DILocation(line: 212, column: 19, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6311, file: !554, line: 212, column: 6)
!6315 = !DILocation(line: 212, column: 23, scope: !6314)
!6316 = !DILocation(line: 212, column: 6, scope: !6311)
!6317 = !DILocation(line: 213, column: 20, scope: !6314)
!6318 = !DILocation(line: 213, column: 13, scope: !6314)
!6319 = !DILocation(line: 213, column: 6, scope: !6314)
!6320 = !DILocation(line: 214, column: 5, scope: !6311)
!6321 = !DILocation(line: 217, column: 10, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6218, file: !554, line: 217, column: 9)
!6323 = !DILocation(line: 217, column: 9, scope: !6218)
!6324 = !DILocation(line: 218, column: 12, scope: !6322)
!6325 = !DILocation(line: 218, column: 2, scope: !6322)
!6326 = !DILocation(line: 221, column: 38, scope: !6218)
!6327 = !DILocation(line: 221, column: 48, scope: !6218)
!6328 = !DILocation(line: 221, column: 59, scope: !6218)
!6329 = !DILocation(line: 221, column: 10, scope: !6218)
!6330 = !DILocation(line: 221, column: 8, scope: !6218)
!6331 = !DILocation(line: 222, column: 9, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6218, file: !554, line: 222, column: 9)
!6333 = !DILocation(line: 222, column: 12, scope: !6332)
!6334 = !DILocation(line: 222, column: 9, scope: !6218)
!6335 = !DILocation(line: 223, column: 6, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6337, file: !554, line: 223, column: 6)
!6337 = distinct !DILexicalBlock(scope: !6332, file: !554, line: 222, column: 21)
!6338 = !DILocation(line: 223, column: 9, scope: !6336)
!6339 = !DILocation(line: 223, column: 6, scope: !6337)
!6340 = !DILocation(line: 224, column: 6, scope: !6336)
!6341 = !DILocation(line: 226, column: 16, scope: !6336)
!6342 = !DILocation(line: 226, column: 6, scope: !6336)
!6343 = !DILocation(line: 227, column: 5, scope: !6337)
!6344 = !DILocation(line: 229, column: 13, scope: !6218)
!6345 = !DILocation(line: 229, column: 23, scope: !6218)
!6346 = !DILocation(line: 229, column: 5, scope: !6218)
!6347 = !DILocation(line: 231, column: 56, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6218, file: !554, line: 229, column: 36)
!6349 = !DILocation(line: 231, column: 42, scope: !6348)
!6350 = !DILocation(line: 231, column: 6, scope: !6348)
!6351 = !DILocation(line: 232, column: 6, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6348, file: !554, line: 232, column: 6)
!6353 = !DILocation(line: 232, column: 6, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6352, file: !554, line: 232, column: 6)
!6355 = !DILocation(line: 233, column: 19, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6354, file: !554, line: 232, column: 42)
!6357 = !DILocation(line: 233, column: 27, scope: !6356)
!6358 = !DILocation(line: 233, column: 37, scope: !6356)
!6359 = !DILocation(line: 234, column: 7, scope: !6356)
!6360 = !DILocation(line: 234, column: 14, scope: !6356)
!6361 = !DILocation(line: 234, column: 21, scope: !6356)
!6362 = !DILocation(line: 233, column: 8, scope: !6356)
!6363 = !DILocation(line: 233, column: 6, scope: !6356)
!6364 = !DILocation(line: 235, column: 7, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6356, file: !554, line: 235, column: 7)
!6366 = !DILocation(line: 235, column: 10, scope: !6365)
!6367 = !DILocation(line: 235, column: 7, scope: !6356)
!6368 = !DILocation(line: 236, column: 26, scope: !6365)
!6369 = !DILocation(line: 236, column: 48, scope: !6365)
!6370 = !DILocation(line: 236, column: 34, scope: !6365)
!6371 = !DILocation(line: 236, column: 7, scope: !6365)
!6372 = !DILocation(line: 237, column: 6, scope: !6356)
!6373 = distinct !{!6373, !6351, !6374}
!6374 = !DILocation(line: 237, column: 6, scope: !6352)
!6375 = !DILocation(line: 238, column: 6, scope: !6348)
!6376 = !DILocation(line: 241, column: 11, scope: !6348)
!6377 = !DILocation(line: 241, column: 9, scope: !6348)
!6378 = !DILocation(line: 242, column: 11, scope: !6348)
!6379 = !DILocation(line: 242, column: 14, scope: !6348)
!6380 = !DILocation(line: 242, column: 6, scope: !6348)
!6381 = !DILocation(line: 245, column: 40, scope: !6348)
!6382 = !DILocation(line: 245, column: 50, scope: !6348)
!6383 = !DILocation(line: 245, column: 6, scope: !6348)
!6384 = !DILocation(line: 246, column: 6, scope: !6348)
!6385 = !DILocation(line: 252, column: 39, scope: !6348)
!6386 = !DILocation(line: 252, column: 46, scope: !6348)
!6387 = !DILocation(line: 253, column: 3, scope: !6348)
!6388 = !DILocation(line: 253, column: 37, scope: !6348)
!6389 = !DILocation(line: 252, column: 11, scope: !6348)
!6390 = !DILocation(line: 252, column: 9, scope: !6348)
!6391 = !DILocation(line: 254, column: 11, scope: !6348)
!6392 = !DILocation(line: 254, column: 14, scope: !6348)
!6393 = !DILocation(line: 254, column: 6, scope: !6348)
!6394 = !DILocation(line: 257, column: 40, scope: !6348)
!6395 = !DILocation(line: 257, column: 47, scope: !6348)
!6396 = !DILocation(line: 257, column: 54, scope: !6348)
!6397 = !DILocation(line: 257, column: 11, scope: !6348)
!6398 = !DILocation(line: 257, column: 9, scope: !6348)
!6399 = !DILocation(line: 259, column: 48, scope: !6348)
!6400 = !DILocation(line: 259, column: 6, scope: !6348)
!6401 = !DILocation(line: 260, column: 10, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6348, file: !554, line: 260, column: 10)
!6403 = !DILocation(line: 260, column: 13, scope: !6402)
!6404 = !DILocation(line: 260, column: 10, scope: !6348)
!6405 = !DILocation(line: 261, column: 7, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6407, file: !554, line: 261, column: 7)
!6407 = distinct !DILexicalBlock(scope: !6402, file: !554, line: 260, column: 22)
!6408 = !DILocation(line: 261, column: 10, scope: !6406)
!6409 = !DILocation(line: 261, column: 7, scope: !6407)
!6410 = !DILocation(line: 262, column: 7, scope: !6406)
!6411 = !DILocation(line: 263, column: 3, scope: !6407)
!6412 = !DILocation(line: 266, column: 31, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6348, file: !554, line: 266, column: 6)
!6414 = !DILocation(line: 266, column: 18, scope: !6413)
!6415 = !DILocation(line: 266, column: 11, scope: !6413)
!6416 = !DILocation(line: 266, column: 38, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6413, file: !554, line: 266, column: 6)
!6418 = !DILocation(line: 266, column: 45, scope: !6417)
!6419 = !DILocation(line: 266, column: 6, scope: !6413)
!6420 = !DILocation(line: 267, column: 10, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6417, file: !554, line: 266, column: 69)
!6422 = !DILocation(line: 267, column: 18, scope: !6421)
!6423 = !DILocation(line: 267, column: 8, scope: !6421)
!6424 = !DILocation(line: 268, column: 19, scope: !6421)
!6425 = !DILocation(line: 268, column: 27, scope: !6421)
!6426 = !DILocation(line: 268, column: 37, scope: !6421)
!6427 = !DILocation(line: 269, column: 7, scope: !6421)
!6428 = !DILocation(line: 269, column: 21, scope: !6421)
!6429 = !DILocation(line: 269, column: 28, scope: !6421)
!6430 = !DILocation(line: 269, column: 35, scope: !6421)
!6431 = !DILocation(line: 268, column: 8, scope: !6421)
!6432 = !DILocation(line: 268, column: 6, scope: !6421)
!6433 = !DILocation(line: 270, column: 11, scope: !6421)
!6434 = !DILocation(line: 270, column: 3, scope: !6421)
!6435 = !DILocation(line: 272, column: 7, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6421, file: !554, line: 270, column: 15)
!6437 = !DILocation(line: 275, column: 30, scope: !6436)
!6438 = !DILocation(line: 275, column: 7, scope: !6436)
!6439 = !DILocation(line: 276, column: 7, scope: !6436)
!6440 = !DILocation(line: 278, column: 7, scope: !6436)
!6441 = !DILocation(line: 279, column: 7, scope: !6436)
!6442 = !DILocation(line: 281, column: 17, scope: !6436)
!6443 = !DILocation(line: 282, column: 4, scope: !6436)
!6444 = !DILocation(line: 282, column: 12, scope: !6436)
!6445 = !DILocation(line: 281, column: 7, scope: !6436)
!6446 = !DILocation(line: 284, column: 6, scope: !6421)
!6447 = !DILocation(line: 266, column: 63, scope: !6417)
!6448 = !DILocation(line: 266, column: 61, scope: !6417)
!6449 = !DILocation(line: 266, column: 6, scope: !6417)
!6450 = distinct !{!6450, !6419, !6451}
!6451 = !DILocation(line: 284, column: 6, scope: !6413)
!6452 = !DILocation(line: 285, column: 30, scope: !6348)
!6453 = !DILocation(line: 285, column: 6, scope: !6348)
!6454 = !DILocation(line: 286, column: 29, scope: !6348)
!6455 = !DILocation(line: 286, column: 22, scope: !6348)
!6456 = !DILocation(line: 286, column: 27, scope: !6348)
!6457 = !DILocation(line: 287, column: 29, scope: !6348)
!6458 = !DILocation(line: 287, column: 22, scope: !6348)
!6459 = !DILocation(line: 287, column: 27, scope: !6348)
!6460 = !DILocation(line: 288, column: 10, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6348, file: !554, line: 288, column: 10)
!6462 = !DILocation(line: 288, column: 10, scope: !6348)
!6463 = !DILocation(line: 289, column: 3, scope: !6461)
!6464 = !DILocation(line: 292, column: 13, scope: !6348)
!6465 = !DILocation(line: 294, column: 10, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6348, file: !554, line: 294, column: 10)
!6467 = !DILocation(line: 294, column: 10, scope: !6348)
!6468 = !DILocation(line: 295, column: 14, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6466, file: !554, line: 294, column: 53)
!6470 = !DILocation(line: 295, column: 12, scope: !6469)
!6471 = !DILocation(line: 296, column: 6, scope: !6469)
!6472 = !DILocation(line: 297, column: 14, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6466, file: !554, line: 296, column: 13)
!6474 = !DILocation(line: 297, column: 12, scope: !6473)
!6475 = !DILocation(line: 300, column: 6, scope: !6348)
!6476 = !DILocation(line: 302, column: 16, scope: !6348)
!6477 = !DILocation(line: 302, column: 48, scope: !6348)
!6478 = !DILocation(line: 302, column: 6, scope: !6348)
!6479 = !DILocation(line: 304, column: 10, scope: !6218)
!6480 = !DILocation(line: 304, column: 5, scope: !6218)
!6481 = distinct !DISubprogram(name: "disable_coredumps", scope: !554, file: !554, line: 724, type: !165, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6482 = !DILocalVariable(name: "rl", scope: !6481, file: !554, line: 727, type: !691)
!6483 = !DILocation(line: 727, column: 19, scope: !6481)
!6484 = !DILocation(line: 736, column: 12, scope: !6481)
!6485 = !DILocation(line: 737, column: 22, scope: !6481)
!6486 = !DILocation(line: 737, column: 31, scope: !6481)
!6487 = !DILocation(line: 737, column: 8, scope: !6481)
!6488 = !DILocation(line: 737, column: 17, scope: !6481)
!6489 = !DILocation(line: 738, column: 9, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6481, file: !554, line: 738, column: 9)
!6491 = !DILocation(line: 738, column: 9, scope: !6481)
!6492 = !DILocation(line: 739, column: 2, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6490, file: !554, line: 738, column: 39)
!6494 = !DILocation(line: 740, column: 19, scope: !6493)
!6495 = !DILocation(line: 740, column: 5, scope: !6493)
!6496 = !DILocation(line: 740, column: 14, scope: !6493)
!6497 = !DILocation(line: 741, column: 8, scope: !6493)
!6498 = !DILocation(line: 742, column: 5, scope: !6493)
!6499 = !DILocation(line: 748, column: 12, scope: !6481)
!6500 = !DILocation(line: 749, column: 5, scope: !6481)
!6501 = !DILocation(line: 750, column: 8, scope: !6481)
!6502 = !DILocation(line: 750, column: 17, scope: !6481)
!6503 = !DILocation(line: 751, column: 12, scope: !6481)
!6504 = !DILocation(line: 753, column: 1, scope: !6481)
!6505 = distinct !DISubprogram(name: "fix_fds", scope: !554, file: !554, line: 312, type: !165, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6506 = !DILocalVariable(name: "miss", scope: !6505, file: !554, line: 314, type: !6507)
!6507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 96, elements: !4990)
!6508 = !DILocation(line: 314, column: 9, scope: !6505)
!6509 = !DILocalVariable(name: "devnull", scope: !6505, file: !554, line: 314, type: !33)
!6510 = !DILocation(line: 314, column: 18, scope: !6505)
!6511 = !DILocation(line: 320, column: 26, scope: !6505)
!6512 = !DILocation(line: 320, column: 58, scope: !6505)
!6513 = !DILocation(line: 320, column: 5, scope: !6505)
!6514 = !DILocation(line: 320, column: 24, scope: !6505)
!6515 = !DILocation(line: 321, column: 27, scope: !6505)
!6516 = !DILocation(line: 321, column: 60, scope: !6505)
!6517 = !DILocation(line: 321, column: 5, scope: !6505)
!6518 = !DILocation(line: 321, column: 25, scope: !6505)
!6519 = !DILocation(line: 322, column: 27, scope: !6505)
!6520 = !DILocation(line: 322, column: 60, scope: !6505)
!6521 = !DILocation(line: 322, column: 5, scope: !6505)
!6522 = !DILocation(line: 322, column: 25, scope: !6505)
!6523 = !DILocation(line: 323, column: 9, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6505, file: !554, line: 323, column: 9)
!6525 = !DILocation(line: 323, column: 28, scope: !6524)
!6526 = !DILocation(line: 323, column: 31, scope: !6524)
!6527 = !DILocation(line: 323, column: 51, scope: !6524)
!6528 = !DILocation(line: 323, column: 54, scope: !6524)
!6529 = !DILocation(line: 323, column: 9, scope: !6505)
!6530 = !DILocation(line: 324, column: 17, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6532, file: !554, line: 324, column: 6)
!6532 = distinct !DILexicalBlock(scope: !6524, file: !554, line: 323, column: 75)
!6533 = !DILocation(line: 324, column: 15, scope: !6531)
!6534 = !DILocation(line: 324, column: 52, scope: !6531)
!6535 = !DILocation(line: 324, column: 6, scope: !6532)
!6536 = !DILocation(line: 325, column: 15, scope: !6531)
!6537 = !DILocation(line: 325, column: 6, scope: !6531)
!6538 = !DILocation(line: 326, column: 6, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6532, file: !554, line: 326, column: 6)
!6540 = !DILocation(line: 326, column: 25, scope: !6539)
!6541 = !DILocation(line: 326, column: 33, scope: !6539)
!6542 = !DILocation(line: 326, column: 28, scope: !6539)
!6543 = !DILocation(line: 326, column: 56, scope: !6539)
!6544 = !DILocation(line: 326, column: 6, scope: !6532)
!6545 = !DILocation(line: 327, column: 6, scope: !6539)
!6546 = !DILocation(line: 328, column: 6, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6532, file: !554, line: 328, column: 6)
!6548 = !DILocation(line: 328, column: 26, scope: !6547)
!6549 = !DILocation(line: 328, column: 34, scope: !6547)
!6550 = !DILocation(line: 328, column: 29, scope: !6547)
!6551 = !DILocation(line: 328, column: 58, scope: !6547)
!6552 = !DILocation(line: 328, column: 6, scope: !6532)
!6553 = !DILocation(line: 329, column: 6, scope: !6547)
!6554 = !DILocation(line: 330, column: 6, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6532, file: !554, line: 330, column: 6)
!6556 = !DILocation(line: 330, column: 26, scope: !6555)
!6557 = !DILocation(line: 330, column: 34, scope: !6555)
!6558 = !DILocation(line: 330, column: 29, scope: !6555)
!6559 = !DILocation(line: 330, column: 58, scope: !6555)
!6560 = !DILocation(line: 330, column: 6, scope: !6532)
!6561 = !DILocation(line: 331, column: 6, scope: !6555)
!6562 = !DILocation(line: 332, column: 6, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6532, file: !554, line: 332, column: 6)
!6564 = !DILocation(line: 332, column: 14, scope: !6563)
!6565 = !DILocation(line: 332, column: 6, scope: !6532)
!6566 = !DILocation(line: 333, column: 12, scope: !6563)
!6567 = !DILocation(line: 333, column: 6, scope: !6563)
!6568 = !DILocation(line: 334, column: 5, scope: !6532)
!6569 = !DILocation(line: 335, column: 1, scope: !6505)
!6570 = distinct !DISubprogram(name: "get_user_info", scope: !554, file: !554, line: 415, type: !6571, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6571 = !DISubroutineType(types: !6572)
!6572 = !{!615, !6573}
!6573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!6574 = !DILocalVariable(name: "ud", arg: 1, scope: !6570, file: !554, line: 415, type: !6573)
!6575 = !DILocation(line: 415, column: 36, scope: !6570)
!6576 = !DILocalVariable(name: "cwd", scope: !6570, file: !554, line: 417, type: !188)
!6577 = !DILocation(line: 417, column: 10, scope: !6570)
!6578 = !DILocalVariable(name: "host", scope: !6570, file: !554, line: 418, type: !6579)
!6579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 512, elements: !6580)
!6580 = !{!6581}
!6581 = !DISubrange(count: 64, lowerBound: 0)
!6582 = !DILocation(line: 418, column: 10, scope: !6570)
!6583 = !DILocalVariable(name: "user_info", scope: !6570, file: !554, line: 419, type: !615)
!6584 = !DILocation(line: 419, column: 12, scope: !6570)
!6585 = !DILocalVariable(name: "cp", scope: !6570, file: !554, line: 419, type: !20)
!6586 = !DILocation(line: 419, column: 24, scope: !6570)
!6587 = !DILocalVariable(name: "pw", scope: !6570, file: !554, line: 420, type: !630)
!6588 = !DILocation(line: 420, column: 20, scope: !6570)
!6589 = !DILocalVariable(name: "i", scope: !6570, file: !554, line: 421, type: !33)
!6590 = !DILocation(line: 421, column: 9, scope: !6570)
!6591 = !DILocation(line: 424, column: 17, scope: !6570)
!6592 = !DILocation(line: 424, column: 15, scope: !6570)
!6593 = !DILocation(line: 426, column: 15, scope: !6570)
!6594 = !DILocation(line: 426, column: 5, scope: !6570)
!6595 = !DILocation(line: 426, column: 9, scope: !6570)
!6596 = !DILocation(line: 426, column: 13, scope: !6570)
!6597 = !DILocation(line: 427, column: 16, scope: !6570)
!6598 = !DILocation(line: 427, column: 5, scope: !6570)
!6599 = !DILocation(line: 427, column: 9, scope: !6570)
!6600 = !DILocation(line: 427, column: 14, scope: !6570)
!6601 = !DILocation(line: 428, column: 15, scope: !6570)
!6602 = !DILocation(line: 428, column: 5, scope: !6570)
!6603 = !DILocation(line: 428, column: 9, scope: !6570)
!6604 = !DILocation(line: 428, column: 13, scope: !6570)
!6605 = !DILocation(line: 429, column: 16, scope: !6570)
!6606 = !DILocation(line: 429, column: 5, scope: !6570)
!6607 = !DILocation(line: 429, column: 9, scope: !6570)
!6608 = !DILocation(line: 429, column: 14, scope: !6570)
!6609 = !DILocation(line: 431, column: 19, scope: !6570)
!6610 = !DILocation(line: 431, column: 23, scope: !6570)
!6611 = !DILocation(line: 431, column: 10, scope: !6570)
!6612 = !DILocation(line: 431, column: 8, scope: !6570)
!6613 = !DILocation(line: 432, column: 9, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6570, file: !554, line: 432, column: 9)
!6615 = !DILocation(line: 432, column: 12, scope: !6614)
!6616 = !DILocation(line: 432, column: 9, scope: !6570)
!6617 = !DILocation(line: 433, column: 12, scope: !6614)
!6618 = !DILocation(line: 433, column: 61, scope: !6614)
!6619 = !DILocation(line: 433, column: 65, scope: !6614)
!6620 = !DILocation(line: 433, column: 2, scope: !6614)
!6621 = !DILocation(line: 435, column: 39, scope: !6570)
!6622 = !DILocation(line: 435, column: 43, scope: !6570)
!6623 = !DILocation(line: 435, column: 20, scope: !6570)
!6624 = !DILocation(line: 435, column: 5, scope: !6570)
!6625 = !DILocation(line: 435, column: 15, scope: !6570)
!6626 = !DILocation(line: 435, column: 18, scope: !6570)
!6627 = !DILocation(line: 436, column: 9, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6570, file: !554, line: 436, column: 9)
!6629 = !DILocation(line: 436, column: 19, scope: !6628)
!6630 = !DILocation(line: 436, column: 22, scope: !6628)
!6631 = !DILocation(line: 436, column: 9, scope: !6570)
!6632 = !DILocation(line: 437, column: 12, scope: !6628)
!6633 = !DILocation(line: 437, column: 2, scope: !6628)
!6634 = !DILocation(line: 438, column: 20, scope: !6570)
!6635 = !DILocation(line: 438, column: 30, scope: !6570)
!6636 = !DILocation(line: 438, column: 33, scope: !6570)
!6637 = !DILocation(line: 438, column: 51, scope: !6570)
!6638 = !DILocation(line: 438, column: 5, scope: !6570)
!6639 = !DILocation(line: 438, column: 9, scope: !6570)
!6640 = !DILocation(line: 438, column: 18, scope: !6570)
!6641 = !DILocation(line: 441, column: 22, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6570, file: !554, line: 441, column: 9)
!6643 = !DILocation(line: 441, column: 10, scope: !6642)
!6644 = !DILocation(line: 441, column: 14, scope: !6642)
!6645 = !DILocation(line: 441, column: 20, scope: !6642)
!6646 = !DILocation(line: 441, column: 39, scope: !6642)
!6647 = !DILocation(line: 441, column: 47, scope: !6642)
!6648 = !DILocation(line: 441, column: 50, scope: !6642)
!6649 = !DILocation(line: 441, column: 54, scope: !6642)
!6650 = !DILocation(line: 441, column: 63, scope: !6642)
!6651 = !DILocation(line: 441, column: 9, scope: !6570)
!6652 = !DILocation(line: 442, column: 14, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6642, file: !554, line: 441, column: 72)
!6654 = !DILocation(line: 442, column: 18, scope: !6653)
!6655 = !DILocation(line: 442, column: 32, scope: !6653)
!6656 = !DILocation(line: 442, column: 36, scope: !6653)
!6657 = !DILocation(line: 442, column: 2, scope: !6653)
!6658 = !DILocation(line: 442, column: 6, scope: !6653)
!6659 = !DILocation(line: 442, column: 12, scope: !6653)
!6660 = !DILocation(line: 443, column: 5, scope: !6653)
!6661 = !DILocation(line: 444, column: 25, scope: !6570)
!6662 = !DILocation(line: 444, column: 29, scope: !6570)
!6663 = !DILocation(line: 444, column: 17, scope: !6570)
!6664 = !DILocation(line: 444, column: 5, scope: !6570)
!6665 = !DILocation(line: 444, column: 9, scope: !6570)
!6666 = !DILocation(line: 444, column: 15, scope: !6570)
!6667 = !DILocation(line: 446, column: 16, scope: !6570)
!6668 = !DILocation(line: 446, column: 26, scope: !6570)
!6669 = !DILocation(line: 446, column: 56, scope: !6570)
!6670 = !DILocation(line: 446, column: 60, scope: !6570)
!6671 = !DILocation(line: 446, column: 5, scope: !6570)
!6672 = !DILocation(line: 447, column: 16, scope: !6570)
!6673 = !DILocation(line: 447, column: 26, scope: !6570)
!6674 = !DILocation(line: 447, column: 57, scope: !6570)
!6675 = !DILocation(line: 447, column: 61, scope: !6570)
!6676 = !DILocation(line: 447, column: 5, scope: !6570)
!6677 = !DILocation(line: 448, column: 16, scope: !6570)
!6678 = !DILocation(line: 448, column: 26, scope: !6570)
!6679 = !DILocation(line: 448, column: 56, scope: !6570)
!6680 = !DILocation(line: 448, column: 60, scope: !6570)
!6681 = !DILocation(line: 448, column: 5, scope: !6570)
!6682 = !DILocation(line: 449, column: 16, scope: !6570)
!6683 = !DILocation(line: 449, column: 26, scope: !6570)
!6684 = !DILocation(line: 449, column: 57, scope: !6570)
!6685 = !DILocation(line: 449, column: 61, scope: !6570)
!6686 = !DILocation(line: 449, column: 5, scope: !6570)
!6687 = !DILocation(line: 451, column: 31, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6570, file: !554, line: 451, column: 9)
!6689 = !DILocation(line: 451, column: 15, scope: !6688)
!6690 = !DILocation(line: 451, column: 13, scope: !6688)
!6691 = !DILocation(line: 451, column: 36, scope: !6688)
!6692 = !DILocation(line: 451, column: 9, scope: !6570)
!6693 = !DILocation(line: 452, column: 19, scope: !6688)
!6694 = !DILocation(line: 452, column: 2, scope: !6688)
!6695 = !DILocation(line: 452, column: 12, scope: !6688)
!6696 = !DILocation(line: 452, column: 17, scope: !6688)
!6697 = !DILocation(line: 454, column: 16, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6570, file: !554, line: 454, column: 9)
!6699 = !DILocation(line: 454, column: 9, scope: !6698)
!6700 = !DILocation(line: 454, column: 34, scope: !6698)
!6701 = !DILocation(line: 454, column: 9, scope: !6570)
!6702 = !DILocation(line: 455, column: 37, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6698, file: !554, line: 454, column: 43)
!6704 = !DILocation(line: 455, column: 19, scope: !6703)
!6705 = !DILocation(line: 455, column: 2, scope: !6703)
!6706 = !DILocation(line: 455, column: 12, scope: !6703)
!6707 = !DILocation(line: 455, column: 17, scope: !6703)
!6708 = !DILocation(line: 456, column: 6, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6703, file: !554, line: 456, column: 6)
!6710 = !DILocation(line: 456, column: 16, scope: !6709)
!6711 = !DILocation(line: 456, column: 19, scope: !6709)
!6712 = !DILocation(line: 456, column: 6, scope: !6703)
!6713 = !DILocation(line: 457, column: 16, scope: !6709)
!6714 = !DILocation(line: 457, column: 6, scope: !6709)
!6715 = !DILocation(line: 458, column: 12, scope: !6703)
!6716 = !DILocation(line: 458, column: 22, scope: !6703)
!6717 = !DILocation(line: 458, column: 25, scope: !6703)
!6718 = !DILocation(line: 458, column: 42, scope: !6703)
!6719 = !DILocation(line: 458, column: 2, scope: !6703)
!6720 = !DILocation(line: 458, column: 6, scope: !6703)
!6721 = !DILocation(line: 458, column: 10, scope: !6703)
!6722 = !DILocation(line: 459, column: 5, scope: !6703)
!6723 = !DILocation(line: 461, column: 15, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6570, file: !554, line: 461, column: 9)
!6725 = !DILocation(line: 461, column: 13, scope: !6724)
!6726 = !DILocation(line: 461, column: 38, scope: !6724)
!6727 = !DILocation(line: 461, column: 47, scope: !6724)
!6728 = !DILocation(line: 461, column: 45, scope: !6724)
!6729 = !DILocation(line: 461, column: 71, scope: !6724)
!6730 = !DILocation(line: 462, column: 8, scope: !6724)
!6731 = !DILocation(line: 462, column: 6, scope: !6724)
!6732 = !DILocation(line: 461, column: 9, scope: !6570)
!6733 = !DILocation(line: 463, column: 37, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6724, file: !554, line: 462, column: 33)
!6735 = !DILocation(line: 463, column: 19, scope: !6734)
!6736 = !DILocation(line: 463, column: 2, scope: !6734)
!6737 = !DILocation(line: 463, column: 12, scope: !6734)
!6738 = !DILocation(line: 463, column: 17, scope: !6734)
!6739 = !DILocation(line: 464, column: 6, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6734, file: !554, line: 464, column: 6)
!6741 = !DILocation(line: 464, column: 16, scope: !6740)
!6742 = !DILocation(line: 464, column: 19, scope: !6740)
!6743 = !DILocation(line: 464, column: 6, scope: !6734)
!6744 = !DILocation(line: 465, column: 16, scope: !6740)
!6745 = !DILocation(line: 465, column: 6, scope: !6740)
!6746 = !DILocation(line: 466, column: 12, scope: !6734)
!6747 = !DILocation(line: 466, column: 22, scope: !6734)
!6748 = !DILocation(line: 466, column: 25, scope: !6734)
!6749 = !DILocation(line: 466, column: 42, scope: !6734)
!6750 = !DILocation(line: 466, column: 2, scope: !6734)
!6751 = !DILocation(line: 466, column: 6, scope: !6734)
!6752 = !DILocation(line: 466, column: 10, scope: !6734)
!6753 = !DILocation(line: 467, column: 5, scope: !6734)
!6754 = !DILocation(line: 469, column: 21, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6570, file: !554, line: 469, column: 9)
!6756 = !DILocation(line: 469, column: 9, scope: !6755)
!6757 = !DILocation(line: 469, column: 41, scope: !6755)
!6758 = !DILocation(line: 469, column: 9, scope: !6570)
!6759 = !DILocation(line: 470, column: 2, scope: !6755)
!6760 = !DILocation(line: 470, column: 25, scope: !6755)
!6761 = !DILocation(line: 472, column: 10, scope: !6755)
!6762 = !DILocation(line: 472, column: 2, scope: !6755)
!6763 = !DILocation(line: 473, column: 41, scope: !6570)
!6764 = !DILocation(line: 473, column: 22, scope: !6570)
!6765 = !DILocation(line: 473, column: 5, scope: !6570)
!6766 = !DILocation(line: 473, column: 15, scope: !6570)
!6767 = !DILocation(line: 473, column: 20, scope: !6570)
!6768 = !DILocation(line: 474, column: 9, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6570, file: !554, line: 474, column: 9)
!6770 = !DILocation(line: 474, column: 19, scope: !6769)
!6771 = !DILocation(line: 474, column: 22, scope: !6769)
!6772 = !DILocation(line: 474, column: 9, scope: !6570)
!6773 = !DILocation(line: 475, column: 12, scope: !6769)
!6774 = !DILocation(line: 475, column: 2, scope: !6769)
!6775 = !DILocation(line: 476, column: 16, scope: !6570)
!6776 = !DILocation(line: 476, column: 26, scope: !6570)
!6777 = !DILocation(line: 476, column: 29, scope: !6570)
!6778 = !DILocation(line: 476, column: 47, scope: !6570)
!6779 = !DILocation(line: 476, column: 5, scope: !6570)
!6780 = !DILocation(line: 476, column: 9, scope: !6570)
!6781 = !DILocation(line: 476, column: 14, scope: !6570)
!6782 = !DILocation(line: 478, column: 18, scope: !6570)
!6783 = !DILocation(line: 478, column: 22, scope: !6570)
!6784 = !DILocation(line: 478, column: 33, scope: !6570)
!6785 = !DILocation(line: 478, column: 37, scope: !6570)
!6786 = !DILocation(line: 478, column: 5, scope: !6570)
!6787 = !DILocation(line: 479, column: 16, scope: !6570)
!6788 = !DILocation(line: 479, column: 26, scope: !6570)
!6789 = !DILocation(line: 479, column: 44, scope: !6570)
!6790 = !DILocation(line: 479, column: 48, scope: !6570)
!6791 = !DILocation(line: 479, column: 5, scope: !6570)
!6792 = !DILocation(line: 480, column: 16, scope: !6570)
!6793 = !DILocation(line: 480, column: 26, scope: !6570)
!6794 = !DILocation(line: 480, column: 43, scope: !6570)
!6795 = !DILocation(line: 480, column: 47, scope: !6570)
!6796 = !DILocation(line: 480, column: 5, scope: !6570)
!6797 = !DILocation(line: 482, column: 5, scope: !6570)
!6798 = !DILocation(line: 482, column: 15, scope: !6570)
!6799 = !DILocation(line: 482, column: 20, scope: !6570)
!6800 = !DILocation(line: 484, column: 12, scope: !6570)
!6801 = !DILocation(line: 484, column: 5, scope: !6570)
!6802 = distinct !DISubprogram(name: "sudo_debug", scope: !554, file: !554, line: 1210, type: !1190, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6803 = !DILocalVariable(name: "level", arg: 1, scope: !6802, file: !554, line: 1210, type: !33)
!6804 = !DILocation(line: 1210, column: 16, scope: !6802)
!6805 = !DILocalVariable(name: "fmt", arg: 2, scope: !6802, file: !554, line: 1210, type: !221)
!6806 = !DILocation(line: 1210, column: 35, scope: !6802)
!6807 = !DILocalVariable(name: "ap", scope: !6802, file: !554, line: 1212, type: !6808)
!6808 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1116, line: 52, baseType: !6809)
!6809 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1118, line: 32, baseType: !6810)
!6810 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !299, line: 1212, baseType: !6811)
!6811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6812, size: 192, elements: !785)
!6812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !299, line: 1212, size: 192, elements: !6813)
!6813 = !{!6814, !6815, !6816, !6817}
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !6812, file: !299, line: 1212, baseType: !7, size: 32)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !6812, file: !299, line: 1212, baseType: !7, size: 32, offset: 32)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !6812, file: !299, line: 1212, baseType: !19, size: 64, offset: 64)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !6812, file: !299, line: 1212, baseType: !19, size: 64, offset: 128)
!6818 = !DILocation(line: 1212, column: 13, scope: !6802)
!6819 = !DILocalVariable(name: "fmt2", scope: !6802, file: !554, line: 1213, type: !20)
!6820 = !DILocation(line: 1213, column: 11, scope: !6802)
!6821 = !DILocation(line: 1215, column: 9, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6802, file: !554, line: 1215, column: 9)
!6823 = !DILocation(line: 1215, column: 17, scope: !6822)
!6824 = !DILocation(line: 1215, column: 15, scope: !6822)
!6825 = !DILocation(line: 1215, column: 9, scope: !6802)
!6826 = !DILocation(line: 1216, column: 2, scope: !6822)
!6827 = !DILocation(line: 1219, column: 34, scope: !6802)
!6828 = !DILocation(line: 1219, column: 49, scope: !6802)
!6829 = !DILocation(line: 1219, column: 5, scope: !6802)
!6830 = !DILocation(line: 1220, column: 5, scope: !6802)
!6831 = !DILocation(line: 1221, column: 14, scope: !6802)
!6832 = !DILocation(line: 1221, column: 22, scope: !6802)
!6833 = !DILocation(line: 1221, column: 28, scope: !6802)
!6834 = !DILocation(line: 1221, column: 5, scope: !6802)
!6835 = !DILocation(line: 1222, column: 5, scope: !6802)
!6836 = !DILocation(line: 1223, column: 11, scope: !6802)
!6837 = !DILocation(line: 1223, column: 5, scope: !6802)
!6838 = !DILocation(line: 1224, column: 1, scope: !6802)
!6839 = distinct !DISubprogram(name: "policy_open", scope: !554, file: !554, line: 1101, type: !6840, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6840 = !DISubroutineType(types: !6841)
!6841 = !{!33, !558, !601, !601, !601}
!6842 = !DILocalVariable(name: "plugin", arg: 1, scope: !6839, file: !554, line: 1101, type: !558)
!6843 = !DILocation(line: 1101, column: 38, scope: !6839)
!6844 = !DILocalVariable(name: "settings", arg: 2, scope: !6839, file: !554, line: 1101, type: !601)
!6845 = !DILocation(line: 1101, column: 59, scope: !6839)
!6846 = !DILocalVariable(name: "user_info", arg: 3, scope: !6839, file: !554, line: 1102, type: !601)
!6847 = !DILocation(line: 1102, column: 18, scope: !6839)
!6848 = !DILocalVariable(name: "user_env", arg: 4, scope: !6839, file: !554, line: 1102, type: !601)
!6849 = !DILocation(line: 1102, column: 44, scope: !6839)
!6850 = !DILocation(line: 1104, column: 12, scope: !6839)
!6851 = !DILocation(line: 1104, column: 20, scope: !6839)
!6852 = !DILocation(line: 1104, column: 22, scope: !6839)
!6853 = !DILocation(line: 1104, column: 30, scope: !6839)
!6854 = !DILocation(line: 1105, column: 16, scope: !6839)
!6855 = !DILocation(line: 1105, column: 26, scope: !6839)
!6856 = !DILocation(line: 1105, column: 37, scope: !6839)
!6857 = !DILocation(line: 1104, column: 5, scope: !6839)
!6858 = distinct !DISubprogram(name: "policy_show_version", scope: !554, file: !554, line: 1115, type: !6859, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6859 = !DISubroutineType(types: !6860)
!6860 = !{!33, !558, !33}
!6861 = !DILocalVariable(name: "plugin", arg: 1, scope: !6858, file: !554, line: 1115, type: !558)
!6862 = !DILocation(line: 1115, column: 46, scope: !6858)
!6863 = !DILocalVariable(name: "verbose", arg: 2, scope: !6858, file: !554, line: 1115, type: !33)
!6864 = !DILocation(line: 1115, column: 58, scope: !6858)
!6865 = !DILocation(line: 1117, column: 12, scope: !6858)
!6866 = !DILocation(line: 1117, column: 20, scope: !6858)
!6867 = !DILocation(line: 1117, column: 22, scope: !6858)
!6868 = !DILocation(line: 1117, column: 30, scope: !6858)
!6869 = !DILocation(line: 1117, column: 43, scope: !6858)
!6870 = !DILocation(line: 1117, column: 5, scope: !6858)
!6871 = distinct !DISubprogram(name: "iolog_open", scope: !554, file: !554, line: 1171, type: !6872, scopeLine: 1174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6872 = !DISubroutineType(types: !6873)
!6873 = !{!33, !558, !601, !601, !601, !33, !601, !601}
!6874 = !DILocalVariable(name: "plugin", arg: 1, scope: !6871, file: !554, line: 1171, type: !558)
!6875 = !DILocation(line: 1171, column: 37, scope: !6871)
!6876 = !DILocalVariable(name: "settings", arg: 2, scope: !6871, file: !554, line: 1171, type: !601)
!6877 = !DILocation(line: 1171, column: 58, scope: !6871)
!6878 = !DILocalVariable(name: "user_info", arg: 3, scope: !6871, file: !554, line: 1172, type: !601)
!6879 = !DILocation(line: 1172, column: 18, scope: !6871)
!6880 = !DILocalVariable(name: "command_info", arg: 4, scope: !6871, file: !554, line: 1172, type: !601)
!6881 = !DILocation(line: 1172, column: 44, scope: !6871)
!6882 = !DILocalVariable(name: "argc", arg: 5, scope: !6871, file: !554, line: 1173, type: !33)
!6883 = !DILocation(line: 1173, column: 9, scope: !6871)
!6884 = !DILocalVariable(name: "argv", arg: 6, scope: !6871, file: !554, line: 1173, type: !601)
!6885 = !DILocation(line: 1173, column: 28, scope: !6871)
!6886 = !DILocalVariable(name: "user_env", arg: 7, scope: !6871, file: !554, line: 1173, type: !601)
!6887 = !DILocation(line: 1173, column: 49, scope: !6871)
!6888 = !DILocalVariable(name: "rval", scope: !6871, file: !554, line: 1175, type: !33)
!6889 = !DILocation(line: 1175, column: 9, scope: !6871)
!6890 = !DILocation(line: 1180, column: 13, scope: !6871)
!6891 = !DILocation(line: 1180, column: 21, scope: !6871)
!6892 = !DILocation(line: 1180, column: 23, scope: !6871)
!6893 = !DILocation(line: 1180, column: 32, scope: !6871)
!6894 = !DILocation(line: 1180, column: 5, scope: !6871)
!6895 = !DILocation(line: 1182, column: 9, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6871, file: !554, line: 1180, column: 41)
!6897 = !DILocation(line: 1182, column: 17, scope: !6896)
!6898 = !DILocation(line: 1182, column: 19, scope: !6896)
!6899 = !DILocation(line: 1182, column: 27, scope: !6896)
!6900 = !DILocation(line: 1182, column: 32, scope: !6896)
!6901 = !DILocation(line: 1182, column: 40, scope: !6896)
!6902 = !DILocation(line: 1182, column: 42, scope: !6896)
!6903 = !DILocation(line: 1182, column: 50, scope: !6896)
!6904 = !DILocation(line: 1183, column: 39, scope: !6896)
!6905 = !DILocation(line: 1183, column: 49, scope: !6896)
!6906 = !DILocation(line: 1183, column: 60, scope: !6896)
!6907 = !DILocation(line: 1183, column: 66, scope: !6896)
!6908 = !DILocation(line: 1184, column: 6, scope: !6896)
!6909 = !DILocation(line: 1182, column: 7, scope: !6896)
!6910 = !DILocation(line: 1185, column: 2, scope: !6896)
!6911 = !DILocation(line: 1187, column: 9, scope: !6896)
!6912 = !DILocation(line: 1187, column: 17, scope: !6896)
!6913 = !DILocation(line: 1187, column: 19, scope: !6896)
!6914 = !DILocation(line: 1187, column: 23, scope: !6896)
!6915 = !DILocation(line: 1188, column: 20, scope: !6896)
!6916 = !DILocation(line: 1188, column: 30, scope: !6896)
!6917 = !DILocation(line: 1188, column: 41, scope: !6896)
!6918 = !DILocation(line: 1188, column: 55, scope: !6896)
!6919 = !DILocation(line: 1188, column: 61, scope: !6896)
!6920 = !DILocation(line: 1189, column: 6, scope: !6896)
!6921 = !DILocation(line: 1187, column: 7, scope: !6896)
!6922 = !DILocation(line: 1190, column: 5, scope: !6896)
!6923 = !DILocation(line: 1191, column: 12, scope: !6871)
!6924 = !DILocation(line: 1191, column: 5, scope: !6871)
!6925 = distinct !DISubprogram(name: "iolog_show_version", scope: !554, file: !554, line: 1201, type: !6859, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6926 = !DILocalVariable(name: "plugin", arg: 1, scope: !6925, file: !554, line: 1201, type: !558)
!6927 = !DILocation(line: 1201, column: 45, scope: !6925)
!6928 = !DILocalVariable(name: "verbose", arg: 2, scope: !6925, file: !554, line: 1201, type: !33)
!6929 = !DILocation(line: 1201, column: 57, scope: !6925)
!6930 = !DILocation(line: 1203, column: 12, scope: !6925)
!6931 = !DILocation(line: 1203, column: 20, scope: !6925)
!6932 = !DILocation(line: 1203, column: 22, scope: !6925)
!6933 = !DILocation(line: 1203, column: 26, scope: !6925)
!6934 = !DILocation(line: 1203, column: 39, scope: !6925)
!6935 = !DILocation(line: 1203, column: 5, scope: !6925)
!6936 = distinct !DISubprogram(name: "policy_validate", scope: !554, file: !554, line: 1142, type: !6937, scopeLine: 1143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6937 = !DISubroutineType(types: !6938)
!6938 = !{!33, !558}
!6939 = !DILocalVariable(name: "plugin", arg: 1, scope: !6936, file: !554, line: 1142, type: !558)
!6940 = !DILocation(line: 1142, column: 42, scope: !6936)
!6941 = !DILocation(line: 1144, column: 9, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6936, file: !554, line: 1144, column: 9)
!6943 = !DILocation(line: 1144, column: 17, scope: !6942)
!6944 = !DILocation(line: 1144, column: 19, scope: !6942)
!6945 = !DILocation(line: 1144, column: 27, scope: !6942)
!6946 = !DILocation(line: 1144, column: 36, scope: !6942)
!6947 = !DILocation(line: 1144, column: 9, scope: !6936)
!6948 = !DILocation(line: 1145, column: 11, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6942, file: !554, line: 1144, column: 45)
!6950 = !DILocation(line: 1146, column: 6, scope: !6949)
!6951 = !DILocation(line: 1146, column: 14, scope: !6949)
!6952 = !DILocation(line: 1145, column: 2, scope: !6949)
!6953 = !DILocation(line: 1147, column: 2, scope: !6949)
!6954 = !DILocation(line: 1149, column: 12, scope: !6936)
!6955 = !DILocation(line: 1149, column: 20, scope: !6936)
!6956 = !DILocation(line: 1149, column: 22, scope: !6936)
!6957 = !DILocation(line: 1149, column: 30, scope: !6936)
!6958 = !DILocation(line: 1149, column: 5, scope: !6936)
!6959 = !DILocation(line: 1150, column: 1, scope: !6936)
!6960 = distinct !DISubprogram(name: "policy_invalidate", scope: !554, file: !554, line: 1153, type: !6961, scopeLine: 1154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6961 = !DISubroutineType(types: !6962)
!6962 = !{null, !558, !33}
!6963 = !DILocalVariable(name: "plugin", arg: 1, scope: !6960, file: !554, line: 1153, type: !558)
!6964 = !DILocation(line: 1153, column: 44, scope: !6960)
!6965 = !DILocalVariable(name: "remove", arg: 2, scope: !6960, file: !554, line: 1153, type: !33)
!6966 = !DILocation(line: 1153, column: 56, scope: !6960)
!6967 = !DILocation(line: 1155, column: 9, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6960, file: !554, line: 1155, column: 9)
!6969 = !DILocation(line: 1155, column: 17, scope: !6968)
!6970 = !DILocation(line: 1155, column: 19, scope: !6968)
!6971 = !DILocation(line: 1155, column: 27, scope: !6968)
!6972 = !DILocation(line: 1155, column: 38, scope: !6968)
!6973 = !DILocation(line: 1155, column: 9, scope: !6960)
!6974 = !DILocation(line: 1156, column: 12, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6968, file: !554, line: 1155, column: 47)
!6976 = !DILocation(line: 1157, column: 6, scope: !6975)
!6977 = !DILocation(line: 1157, column: 14, scope: !6975)
!6978 = !DILocation(line: 1156, column: 2, scope: !6975)
!6979 = !DILocation(line: 1159, column: 5, scope: !6960)
!6980 = !DILocation(line: 1159, column: 13, scope: !6960)
!6981 = !DILocation(line: 1159, column: 15, scope: !6960)
!6982 = !DILocation(line: 1159, column: 23, scope: !6960)
!6983 = !DILocation(line: 1159, column: 34, scope: !6960)
!6984 = !DILocation(line: 1160, column: 1, scope: !6960)
!6985 = distinct !DISubprogram(name: "policy_list", scope: !554, file: !554, line: 1130, type: !6986, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{!33, !558, !33, !601, !33, !221}
!6988 = !DILocalVariable(name: "plugin", arg: 1, scope: !6985, file: !554, line: 1130, type: !558)
!6989 = !DILocation(line: 1130, column: 38, scope: !6985)
!6990 = !DILocalVariable(name: "argc", arg: 2, scope: !6985, file: !554, line: 1130, type: !33)
!6991 = !DILocation(line: 1130, column: 50, scope: !6985)
!6992 = !DILocalVariable(name: "argv", arg: 3, scope: !6985, file: !554, line: 1130, type: !601)
!6993 = !DILocation(line: 1130, column: 69, scope: !6985)
!6994 = !DILocalVariable(name: "verbose", arg: 4, scope: !6985, file: !554, line: 1131, type: !33)
!6995 = !DILocation(line: 1131, column: 9, scope: !6985)
!6996 = !DILocalVariable(name: "list_user", arg: 5, scope: !6985, file: !554, line: 1131, type: !221)
!6997 = !DILocation(line: 1131, column: 30, scope: !6985)
!6998 = !DILocation(line: 1133, column: 9, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6985, file: !554, line: 1133, column: 9)
!7000 = !DILocation(line: 1133, column: 17, scope: !6999)
!7001 = !DILocation(line: 1133, column: 19, scope: !6999)
!7002 = !DILocation(line: 1133, column: 27, scope: !6999)
!7003 = !DILocation(line: 1133, column: 32, scope: !6999)
!7004 = !DILocation(line: 1133, column: 9, scope: !6985)
!7005 = !DILocation(line: 1134, column: 11, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6999, file: !554, line: 1133, column: 41)
!7007 = !DILocation(line: 1135, column: 6, scope: !7006)
!7008 = !DILocation(line: 1135, column: 14, scope: !7006)
!7009 = !DILocation(line: 1134, column: 2, scope: !7006)
!7010 = !DILocation(line: 1136, column: 2, scope: !7006)
!7011 = !DILocation(line: 1138, column: 12, scope: !6985)
!7012 = !DILocation(line: 1138, column: 20, scope: !6985)
!7013 = !DILocation(line: 1138, column: 22, scope: !6985)
!7014 = !DILocation(line: 1138, column: 30, scope: !6985)
!7015 = !DILocation(line: 1138, column: 35, scope: !6985)
!7016 = !DILocation(line: 1138, column: 41, scope: !6985)
!7017 = !DILocation(line: 1138, column: 47, scope: !6985)
!7018 = !DILocation(line: 1138, column: 56, scope: !6985)
!7019 = !DILocation(line: 1138, column: 5, scope: !6985)
!7020 = !DILocation(line: 1139, column: 1, scope: !6985)
!7021 = distinct !DISubprogram(name: "policy_check", scope: !554, file: !554, line: 1121, type: !7022, scopeLine: 1124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!7022 = !DISubroutineType(types: !7023)
!7023 = !{!33, !558, !33, !601, !615, !616, !616, !616}
!7024 = !DILocalVariable(name: "plugin", arg: 1, scope: !7021, file: !554, line: 1121, type: !558)
!7025 = !DILocation(line: 1121, column: 39, scope: !7021)
!7026 = !DILocalVariable(name: "argc", arg: 2, scope: !7021, file: !554, line: 1121, type: !33)
!7027 = !DILocation(line: 1121, column: 51, scope: !7021)
!7028 = !DILocalVariable(name: "argv", arg: 3, scope: !7021, file: !554, line: 1121, type: !601)
!7029 = !DILocation(line: 1121, column: 70, scope: !7021)
!7030 = !DILocalVariable(name: "env_add", arg: 4, scope: !7021, file: !554, line: 1122, type: !615)
!7031 = !DILocation(line: 1122, column: 11, scope: !7021)
!7032 = !DILocalVariable(name: "command_info", arg: 5, scope: !7021, file: !554, line: 1122, type: !616)
!7033 = !DILocation(line: 1122, column: 29, scope: !7021)
!7034 = !DILocalVariable(name: "argv_out", arg: 6, scope: !7021, file: !554, line: 1122, type: !616)
!7035 = !DILocation(line: 1122, column: 52, scope: !7021)
!7036 = !DILocalVariable(name: "user_env_out", arg: 7, scope: !7021, file: !554, line: 1123, type: !616)
!7037 = !DILocation(line: 1123, column: 12, scope: !7021)
!7038 = !DILocation(line: 1125, column: 12, scope: !7021)
!7039 = !DILocation(line: 1125, column: 20, scope: !7021)
!7040 = !DILocation(line: 1125, column: 22, scope: !7021)
!7041 = !DILocation(line: 1125, column: 30, scope: !7021)
!7042 = !DILocation(line: 1125, column: 43, scope: !7021)
!7043 = !DILocation(line: 1125, column: 49, scope: !7021)
!7044 = !DILocation(line: 1125, column: 55, scope: !7021)
!7045 = !DILocation(line: 1125, column: 64, scope: !7021)
!7046 = !DILocation(line: 1126, column: 2, scope: !7021)
!7047 = !DILocation(line: 1126, column: 12, scope: !7021)
!7048 = !DILocation(line: 1125, column: 5, scope: !7021)
!7049 = distinct !DISubprogram(name: "command_info_to_details", scope: !554, file: !554, line: 491, type: !7050, scopeLine: 492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!7050 = !DISubroutineType(types: !7051)
!7051 = !{null, !601, !7052}
!7052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6252, size: 64)
!7053 = !DILocalVariable(name: "info", arg: 1, scope: !7049, file: !554, line: 491, type: !601)
!7054 = !DILocation(line: 491, column: 38, scope: !7049)
!7055 = !DILocalVariable(name: "details", arg: 2, scope: !7049, file: !554, line: 491, type: !7052)
!7056 = !DILocation(line: 491, column: 70, scope: !7049)
!7057 = !DILocalVariable(name: "i", scope: !7049, file: !554, line: 493, type: !33)
!7058 = !DILocation(line: 493, column: 9, scope: !7049)
!7059 = !DILocalVariable(name: "lval", scope: !7049, file: !554, line: 494, type: !30)
!7060 = !DILocation(line: 494, column: 10, scope: !7049)
!7061 = !DILocalVariable(name: "ulval", scope: !7049, file: !554, line: 495, type: !161)
!7062 = !DILocation(line: 495, column: 19, scope: !7049)
!7063 = !DILocalVariable(name: "cp", scope: !7049, file: !554, line: 496, type: !20)
!7064 = !DILocation(line: 496, column: 11, scope: !7049)
!7065 = !DILocalVariable(name: "ep", scope: !7049, file: !554, line: 496, type: !20)
!7066 = !DILocation(line: 496, column: 16, scope: !7049)
!7067 = !DILocation(line: 498, column: 12, scope: !7049)
!7068 = !DILocation(line: 498, column: 5, scope: !7049)
!7069 = !DILocation(line: 499, column: 5, scope: !7049)
!7070 = !DILocation(line: 499, column: 14, scope: !7049)
!7071 = !DILocation(line: 499, column: 24, scope: !7049)
!7072 = !DILocation(line: 507, column: 12, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7049, file: !554, line: 507, column: 5)
!7074 = !DILocation(line: 507, column: 10, scope: !7073)
!7075 = !DILocation(line: 507, column: 17, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7073, file: !554, line: 507, column: 5)
!7077 = !DILocation(line: 507, column: 22, scope: !7076)
!7078 = !DILocation(line: 507, column: 25, scope: !7076)
!7079 = !DILocation(line: 507, column: 5, scope: !7073)
!7080 = !DILocation(line: 508, column: 36, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7076, file: !554, line: 507, column: 39)
!7082 = !DILocation(line: 508, column: 41, scope: !7081)
!7083 = !DILocation(line: 508, column: 2, scope: !7081)
!7084 = !DILocation(line: 509, column: 10, scope: !7081)
!7085 = !DILocation(line: 509, column: 15, scope: !7081)
!7086 = !DILocation(line: 509, column: 2, scope: !7081)
!7087 = !DILocation(line: 511, column: 3, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 511, column: 3)
!7089 = distinct !DILexicalBlock(scope: !7081, file: !554, line: 509, column: 22)
!7090 = !DILocation(line: 511, column: 3, scope: !7089)
!7091 = !DILocation(line: 511, column: 3, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7088, file: !554, line: 511, column: 3)
!7093 = !DILocation(line: 512, column: 3, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 512, column: 3)
!7095 = !DILocation(line: 512, column: 3, scope: !7089)
!7096 = !DILocation(line: 512, column: 3, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7094, file: !554, line: 512, column: 3)
!7098 = !DILocation(line: 513, column: 3, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 513, column: 3)
!7100 = !DILocation(line: 513, column: 3, scope: !7089)
!7101 = !DILocation(line: 513, column: 3, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7099, file: !554, line: 513, column: 3)
!7103 = !DILocation(line: 514, column: 29, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 514, column: 7)
!7105 = !DILocation(line: 514, column: 34, scope: !7104)
!7106 = !DILocation(line: 514, column: 7, scope: !7104)
!7107 = !DILocation(line: 514, column: 64, scope: !7104)
!7108 = !DILocation(line: 514, column: 7, scope: !7089)
!7109 = !DILocation(line: 515, column: 12, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7104, file: !554, line: 514, column: 70)
!7111 = !DILocation(line: 515, column: 17, scope: !7110)
!7112 = !DILocation(line: 515, column: 20, scope: !7110)
!7113 = !DILocation(line: 515, column: 43, scope: !7110)
!7114 = !DILocation(line: 515, column: 10, scope: !7110)
!7115 = !DILocation(line: 516, column: 12, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7110, file: !554, line: 516, column: 11)
!7117 = !DILocation(line: 516, column: 11, scope: !7116)
!7118 = !DILocation(line: 516, column: 15, scope: !7116)
!7119 = !DILocation(line: 516, column: 11, scope: !7110)
!7120 = !DILocation(line: 517, column: 4, scope: !7116)
!7121 = !DILocation(line: 518, column: 7, scope: !7110)
!7122 = !DILocation(line: 518, column: 13, scope: !7110)
!7123 = !DILocation(line: 519, column: 21, scope: !7110)
!7124 = !DILocation(line: 519, column: 14, scope: !7110)
!7125 = !DILocation(line: 519, column: 12, scope: !7110)
!7126 = !DILocation(line: 520, column: 12, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7110, file: !554, line: 520, column: 11)
!7128 = !DILocation(line: 520, column: 11, scope: !7127)
!7129 = !DILocation(line: 520, column: 15, scope: !7127)
!7130 = !DILocation(line: 520, column: 23, scope: !7127)
!7131 = !DILocation(line: 520, column: 27, scope: !7127)
!7132 = !DILocation(line: 520, column: 26, scope: !7127)
!7133 = !DILocation(line: 520, column: 30, scope: !7127)
!7134 = !DILocation(line: 520, column: 38, scope: !7127)
!7135 = !DILocation(line: 521, column: 6, scope: !7127)
!7136 = !DILocation(line: 521, column: 12, scope: !7127)
!7137 = !DILocation(line: 521, column: 22, scope: !7127)
!7138 = !DILocation(line: 522, column: 5, scope: !7127)
!7139 = !DILocation(line: 522, column: 10, scope: !7127)
!7140 = !DILocation(line: 522, column: 22, scope: !7127)
!7141 = !DILocation(line: 522, column: 25, scope: !7127)
!7142 = !DILocation(line: 522, column: 30, scope: !7127)
!7143 = !DILocation(line: 522, column: 44, scope: !7127)
!7144 = !DILocation(line: 523, column: 4, scope: !7127)
!7145 = !DILocation(line: 523, column: 9, scope: !7127)
!7146 = !DILocation(line: 523, column: 19, scope: !7127)
!7147 = !DILocation(line: 523, column: 22, scope: !7127)
!7148 = !DILocation(line: 523, column: 27, scope: !7127)
!7149 = !DILocation(line: 520, column: 11, scope: !7110)
!7150 = !DILocation(line: 524, column: 30, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7127, file: !554, line: 523, column: 38)
!7152 = !DILocation(line: 524, column: 25, scope: !7151)
!7153 = !DILocation(line: 524, column: 4, scope: !7151)
!7154 = !DILocation(line: 524, column: 13, scope: !7151)
!7155 = !DILocation(line: 524, column: 23, scope: !7151)
!7156 = !DILocation(line: 525, column: 7, scope: !7151)
!7157 = !DILocation(line: 526, column: 7, scope: !7110)
!7158 = !DILocation(line: 528, column: 3, scope: !7089)
!7159 = !DILocation(line: 530, column: 3, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 530, column: 3)
!7161 = !DILocation(line: 530, column: 3, scope: !7089)
!7162 = !DILocation(line: 530, column: 3, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7160, file: !554, line: 530, column: 3)
!7164 = !DILocation(line: 531, column: 3, scope: !7089)
!7165 = !DILocation(line: 534, column: 24, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 534, column: 7)
!7167 = !DILocation(line: 534, column: 29, scope: !7166)
!7168 = !DILocation(line: 534, column: 7, scope: !7166)
!7169 = !DILocation(line: 534, column: 54, scope: !7166)
!7170 = !DILocation(line: 534, column: 7, scope: !7089)
!7171 = !DILocation(line: 535, column: 12, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7166, file: !554, line: 534, column: 60)
!7173 = !DILocation(line: 535, column: 17, scope: !7172)
!7174 = !DILocation(line: 535, column: 20, scope: !7172)
!7175 = !DILocation(line: 535, column: 38, scope: !7172)
!7176 = !DILocation(line: 535, column: 10, scope: !7172)
!7177 = !DILocation(line: 536, column: 12, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7172, file: !554, line: 536, column: 11)
!7179 = !DILocation(line: 536, column: 11, scope: !7178)
!7180 = !DILocation(line: 536, column: 15, scope: !7178)
!7181 = !DILocation(line: 536, column: 11, scope: !7172)
!7182 = !DILocation(line: 537, column: 4, scope: !7178)
!7183 = !DILocation(line: 538, column: 7, scope: !7172)
!7184 = !DILocation(line: 538, column: 13, scope: !7172)
!7185 = !DILocation(line: 539, column: 21, scope: !7172)
!7186 = !DILocation(line: 539, column: 14, scope: !7172)
!7187 = !DILocation(line: 539, column: 12, scope: !7172)
!7188 = !DILocation(line: 540, column: 12, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7172, file: !554, line: 540, column: 11)
!7190 = !DILocation(line: 540, column: 11, scope: !7189)
!7191 = !DILocation(line: 540, column: 15, scope: !7189)
!7192 = !DILocation(line: 540, column: 23, scope: !7189)
!7193 = !DILocation(line: 540, column: 27, scope: !7189)
!7194 = !DILocation(line: 540, column: 26, scope: !7189)
!7195 = !DILocation(line: 540, column: 30, scope: !7189)
!7196 = !DILocation(line: 540, column: 38, scope: !7189)
!7197 = !DILocation(line: 541, column: 6, scope: !7189)
!7198 = !DILocation(line: 541, column: 12, scope: !7189)
!7199 = !DILocation(line: 541, column: 22, scope: !7189)
!7200 = !DILocation(line: 542, column: 5, scope: !7189)
!7201 = !DILocation(line: 542, column: 10, scope: !7189)
!7202 = !DILocation(line: 542, column: 22, scope: !7189)
!7203 = !DILocation(line: 542, column: 25, scope: !7189)
!7204 = !DILocation(line: 542, column: 30, scope: !7189)
!7205 = !DILocation(line: 542, column: 44, scope: !7189)
!7206 = !DILocation(line: 543, column: 4, scope: !7189)
!7207 = !DILocation(line: 543, column: 9, scope: !7189)
!7208 = !DILocation(line: 543, column: 19, scope: !7189)
!7209 = !DILocation(line: 543, column: 22, scope: !7189)
!7210 = !DILocation(line: 543, column: 27, scope: !7189)
!7211 = !DILocation(line: 540, column: 11, scope: !7172)
!7212 = !DILocation(line: 544, column: 29, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7189, file: !554, line: 543, column: 38)
!7214 = !DILocation(line: 544, column: 24, scope: !7213)
!7215 = !DILocation(line: 544, column: 4, scope: !7213)
!7216 = !DILocation(line: 544, column: 13, scope: !7213)
!7217 = !DILocation(line: 544, column: 22, scope: !7213)
!7218 = !DILocation(line: 545, column: 4, scope: !7213)
!7219 = !DILocation(line: 546, column: 7, scope: !7213)
!7220 = !DILocation(line: 547, column: 7, scope: !7172)
!7221 = !DILocation(line: 549, column: 26, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 549, column: 7)
!7223 = !DILocation(line: 549, column: 31, scope: !7222)
!7224 = !DILocation(line: 549, column: 7, scope: !7222)
!7225 = !DILocation(line: 549, column: 58, scope: !7222)
!7226 = !DILocation(line: 549, column: 7, scope: !7089)
!7227 = !DILocation(line: 550, column: 19, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !554, line: 550, column: 11)
!7229 = distinct !DILexicalBlock(scope: !7222, file: !554, line: 549, column: 64)
!7230 = !DILocation(line: 550, column: 24, scope: !7228)
!7231 = !DILocation(line: 550, column: 27, scope: !7228)
!7232 = !DILocation(line: 550, column: 47, scope: !7228)
!7233 = !DILocation(line: 550, column: 11, scope: !7228)
!7234 = !DILocation(line: 550, column: 52, scope: !7228)
!7235 = !DILocation(line: 550, column: 11, scope: !7229)
!7236 = !DILocation(line: 551, column: 4, scope: !7228)
!7237 = !DILocation(line: 552, column: 7, scope: !7229)
!7238 = !DILocation(line: 556, column: 31, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 556, column: 7)
!7240 = !DILocation(line: 556, column: 36, scope: !7239)
!7241 = !DILocation(line: 556, column: 7, scope: !7239)
!7242 = !DILocation(line: 556, column: 68, scope: !7239)
!7243 = !DILocation(line: 556, column: 7, scope: !7089)
!7244 = !DILocation(line: 557, column: 21, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7239, file: !554, line: 556, column: 74)
!7246 = !DILocation(line: 557, column: 26, scope: !7245)
!7247 = !DILocation(line: 557, column: 29, scope: !7245)
!7248 = !DILocation(line: 557, column: 54, scope: !7245)
!7249 = !DILocation(line: 557, column: 19, scope: !7245)
!7250 = !DILocation(line: 558, column: 7, scope: !7245)
!7251 = !DILocation(line: 561, column: 3, scope: !7089)
!7252 = !DILocation(line: 563, column: 35, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 563, column: 7)
!7254 = !DILocation(line: 563, column: 40, scope: !7253)
!7255 = !DILocation(line: 563, column: 7, scope: !7253)
!7256 = !DILocation(line: 563, column: 76, scope: !7253)
!7257 = !DILocation(line: 563, column: 7, scope: !7089)
!7258 = !DILocation(line: 564, column: 19, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !554, line: 564, column: 11)
!7260 = distinct !DILexicalBlock(scope: !7253, file: !554, line: 563, column: 82)
!7261 = !DILocation(line: 564, column: 24, scope: !7259)
!7262 = !DILocation(line: 564, column: 27, scope: !7259)
!7263 = !DILocation(line: 564, column: 56, scope: !7259)
!7264 = !DILocation(line: 564, column: 11, scope: !7259)
!7265 = !DILocation(line: 564, column: 61, scope: !7259)
!7266 = !DILocation(line: 564, column: 11, scope: !7260)
!7267 = !DILocation(line: 565, column: 4, scope: !7259)
!7268 = !DILocation(line: 566, column: 7, scope: !7260)
!7269 = !DILocation(line: 568, column: 3, scope: !7089)
!7270 = !DILocation(line: 570, column: 30, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 570, column: 7)
!7272 = !DILocation(line: 570, column: 35, scope: !7271)
!7273 = !DILocation(line: 570, column: 7, scope: !7271)
!7274 = !DILocation(line: 570, column: 66, scope: !7271)
!7275 = !DILocation(line: 570, column: 7, scope: !7089)
!7276 = !DILocation(line: 571, column: 12, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7271, file: !554, line: 570, column: 72)
!7278 = !DILocation(line: 571, column: 17, scope: !7277)
!7279 = !DILocation(line: 571, column: 20, scope: !7277)
!7280 = !DILocation(line: 571, column: 44, scope: !7277)
!7281 = !DILocation(line: 571, column: 10, scope: !7277)
!7282 = !DILocation(line: 572, column: 12, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7277, file: !554, line: 572, column: 11)
!7284 = !DILocation(line: 572, column: 11, scope: !7283)
!7285 = !DILocation(line: 572, column: 15, scope: !7283)
!7286 = !DILocation(line: 572, column: 11, scope: !7277)
!7287 = !DILocation(line: 573, column: 4, scope: !7283)
!7288 = !DILocation(line: 574, column: 7, scope: !7277)
!7289 = !DILocation(line: 574, column: 13, scope: !7277)
!7290 = !DILocation(line: 575, column: 23, scope: !7277)
!7291 = !DILocation(line: 575, column: 15, scope: !7277)
!7292 = !DILocation(line: 575, column: 13, scope: !7277)
!7293 = !DILocation(line: 576, column: 12, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7277, file: !554, line: 576, column: 11)
!7295 = !DILocation(line: 576, column: 11, scope: !7294)
!7296 = !DILocation(line: 576, column: 15, scope: !7294)
!7297 = !DILocation(line: 576, column: 23, scope: !7294)
!7298 = !DILocation(line: 576, column: 27, scope: !7294)
!7299 = !DILocation(line: 576, column: 26, scope: !7294)
!7300 = !DILocation(line: 576, column: 30, scope: !7294)
!7301 = !DILocation(line: 576, column: 38, scope: !7294)
!7302 = !DILocation(line: 577, column: 5, scope: !7294)
!7303 = !DILocation(line: 577, column: 11, scope: !7294)
!7304 = !DILocation(line: 577, column: 21, scope: !7294)
!7305 = !DILocation(line: 577, column: 24, scope: !7294)
!7306 = !DILocation(line: 577, column: 30, scope: !7294)
!7307 = !DILocation(line: 576, column: 11, scope: !7277)
!7308 = !DILocation(line: 578, column: 27, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7294, file: !554, line: 577, column: 45)
!7310 = !DILocation(line: 578, column: 20, scope: !7309)
!7311 = !DILocation(line: 578, column: 4, scope: !7309)
!7312 = !DILocation(line: 578, column: 13, scope: !7309)
!7313 = !DILocation(line: 578, column: 18, scope: !7309)
!7314 = !DILocation(line: 579, column: 4, scope: !7309)
!7315 = !DILocation(line: 580, column: 7, scope: !7309)
!7316 = !DILocation(line: 581, column: 7, scope: !7277)
!7317 = !DILocation(line: 583, column: 30, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 583, column: 7)
!7319 = !DILocation(line: 583, column: 35, scope: !7318)
!7320 = !DILocation(line: 583, column: 7, scope: !7318)
!7321 = !DILocation(line: 583, column: 66, scope: !7318)
!7322 = !DILocation(line: 583, column: 7, scope: !7089)
!7323 = !DILocation(line: 584, column: 12, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7318, file: !554, line: 583, column: 72)
!7325 = !DILocation(line: 584, column: 17, scope: !7324)
!7326 = !DILocation(line: 584, column: 20, scope: !7324)
!7327 = !DILocation(line: 584, column: 44, scope: !7324)
!7328 = !DILocation(line: 584, column: 10, scope: !7324)
!7329 = !DILocation(line: 585, column: 12, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7324, file: !554, line: 585, column: 11)
!7331 = !DILocation(line: 585, column: 11, scope: !7330)
!7332 = !DILocation(line: 585, column: 15, scope: !7330)
!7333 = !DILocation(line: 585, column: 11, scope: !7324)
!7334 = !DILocation(line: 586, column: 4, scope: !7330)
!7335 = !DILocation(line: 587, column: 7, scope: !7324)
!7336 = !DILocation(line: 587, column: 13, scope: !7324)
!7337 = !DILocation(line: 588, column: 23, scope: !7324)
!7338 = !DILocation(line: 588, column: 15, scope: !7324)
!7339 = !DILocation(line: 588, column: 13, scope: !7324)
!7340 = !DILocation(line: 589, column: 12, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7324, file: !554, line: 589, column: 11)
!7342 = !DILocation(line: 589, column: 11, scope: !7341)
!7343 = !DILocation(line: 589, column: 15, scope: !7341)
!7344 = !DILocation(line: 589, column: 23, scope: !7341)
!7345 = !DILocation(line: 589, column: 27, scope: !7341)
!7346 = !DILocation(line: 589, column: 26, scope: !7341)
!7347 = !DILocation(line: 589, column: 30, scope: !7341)
!7348 = !DILocation(line: 589, column: 38, scope: !7341)
!7349 = !DILocation(line: 590, column: 5, scope: !7341)
!7350 = !DILocation(line: 590, column: 11, scope: !7341)
!7351 = !DILocation(line: 590, column: 21, scope: !7341)
!7352 = !DILocation(line: 590, column: 24, scope: !7341)
!7353 = !DILocation(line: 590, column: 30, scope: !7341)
!7354 = !DILocation(line: 589, column: 11, scope: !7324)
!7355 = !DILocation(line: 591, column: 27, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7341, file: !554, line: 590, column: 45)
!7357 = !DILocation(line: 591, column: 20, scope: !7356)
!7358 = !DILocation(line: 591, column: 4, scope: !7356)
!7359 = !DILocation(line: 591, column: 13, scope: !7356)
!7360 = !DILocation(line: 591, column: 18, scope: !7356)
!7361 = !DILocation(line: 592, column: 4, scope: !7356)
!7362 = !DILocation(line: 593, column: 7, scope: !7356)
!7363 = !DILocation(line: 594, column: 7, scope: !7324)
!7364 = !DILocation(line: 596, column: 29, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 596, column: 7)
!7366 = !DILocation(line: 596, column: 34, scope: !7365)
!7367 = !DILocation(line: 596, column: 7, scope: !7365)
!7368 = !DILocation(line: 596, column: 64, scope: !7365)
!7369 = !DILocation(line: 596, column: 7, scope: !7089)
!7370 = !DILocation(line: 597, column: 12, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7365, file: !554, line: 596, column: 70)
!7372 = !DILocation(line: 597, column: 17, scope: !7371)
!7373 = !DILocation(line: 597, column: 20, scope: !7371)
!7374 = !DILocation(line: 597, column: 43, scope: !7371)
!7375 = !DILocation(line: 597, column: 10, scope: !7371)
!7376 = !DILocation(line: 598, column: 12, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7371, file: !554, line: 598, column: 11)
!7378 = !DILocation(line: 598, column: 11, scope: !7377)
!7379 = !DILocation(line: 598, column: 15, scope: !7377)
!7380 = !DILocation(line: 598, column: 11, scope: !7371)
!7381 = !DILocation(line: 599, column: 4, scope: !7377)
!7382 = !DILocation(line: 600, column: 7, scope: !7371)
!7383 = !DILocation(line: 600, column: 13, scope: !7371)
!7384 = !DILocation(line: 601, column: 23, scope: !7371)
!7385 = !DILocation(line: 601, column: 15, scope: !7371)
!7386 = !DILocation(line: 601, column: 13, scope: !7371)
!7387 = !DILocation(line: 602, column: 12, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7371, file: !554, line: 602, column: 11)
!7389 = !DILocation(line: 602, column: 11, scope: !7388)
!7390 = !DILocation(line: 602, column: 15, scope: !7388)
!7391 = !DILocation(line: 602, column: 23, scope: !7388)
!7392 = !DILocation(line: 602, column: 27, scope: !7388)
!7393 = !DILocation(line: 602, column: 26, scope: !7388)
!7394 = !DILocation(line: 602, column: 30, scope: !7388)
!7395 = !DILocation(line: 602, column: 38, scope: !7388)
!7396 = !DILocation(line: 603, column: 5, scope: !7388)
!7397 = !DILocation(line: 603, column: 11, scope: !7388)
!7398 = !DILocation(line: 603, column: 21, scope: !7388)
!7399 = !DILocation(line: 603, column: 24, scope: !7388)
!7400 = !DILocation(line: 603, column: 30, scope: !7388)
!7401 = !DILocation(line: 602, column: 11, scope: !7371)
!7402 = !DILocation(line: 604, column: 26, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7388, file: !554, line: 603, column: 45)
!7404 = !DILocation(line: 604, column: 19, scope: !7403)
!7405 = !DILocation(line: 604, column: 4, scope: !7403)
!7406 = !DILocation(line: 604, column: 13, scope: !7403)
!7407 = !DILocation(line: 604, column: 17, scope: !7403)
!7408 = !DILocation(line: 605, column: 4, scope: !7403)
!7409 = !DILocation(line: 606, column: 7, scope: !7403)
!7410 = !DILocation(line: 607, column: 7, scope: !7371)
!7411 = !DILocation(line: 609, column: 32, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 609, column: 7)
!7413 = !DILocation(line: 609, column: 37, scope: !7412)
!7414 = !DILocation(line: 609, column: 7, scope: !7412)
!7415 = !DILocation(line: 609, column: 70, scope: !7412)
!7416 = !DILocation(line: 609, column: 7, scope: !7089)
!7417 = !DILocalVariable(name: "j", scope: !7418, file: !554, line: 610, type: !33)
!7418 = distinct !DILexicalBlock(scope: !7412, file: !554, line: 609, column: 76)
!7419 = !DILocation(line: 610, column: 11, scope: !7418)
!7420 = !DILocation(line: 613, column: 12, scope: !7418)
!7421 = !DILocation(line: 613, column: 17, scope: !7418)
!7422 = !DILocation(line: 613, column: 20, scope: !7418)
!7423 = !DILocation(line: 613, column: 46, scope: !7418)
!7424 = !DILocation(line: 613, column: 10, scope: !7418)
!7425 = !DILocation(line: 614, column: 12, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7418, file: !554, line: 614, column: 11)
!7427 = !DILocation(line: 614, column: 11, scope: !7426)
!7428 = !DILocation(line: 614, column: 15, scope: !7426)
!7429 = !DILocation(line: 614, column: 11, scope: !7418)
!7430 = !DILocation(line: 615, column: 4, scope: !7426)
!7431 = !DILocation(line: 616, column: 7, scope: !7418)
!7432 = !DILocation(line: 617, column: 4, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7434, file: !554, line: 616, column: 16)
!7434 = distinct !DILexicalBlock(scope: !7435, file: !554, line: 616, column: 7)
!7435 = distinct !DILexicalBlock(scope: !7418, file: !554, line: 616, column: 7)
!7436 = !DILocation(line: 617, column: 13, scope: !7433)
!7437 = !DILocation(line: 617, column: 20, scope: !7433)
!7438 = !DILocation(line: 618, column: 21, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7433, file: !554, line: 618, column: 8)
!7440 = !DILocation(line: 618, column: 14, scope: !7439)
!7441 = !DILocation(line: 618, column: 12, scope: !7439)
!7442 = !DILocation(line: 618, column: 31, scope: !7439)
!7443 = !DILocation(line: 618, column: 8, scope: !7433)
!7444 = !DILocation(line: 619, column: 8, scope: !7439)
!7445 = !DILocation(line: 620, column: 6, scope: !7433)
!7446 = !DILocation(line: 616, column: 7, scope: !7434)
!7447 = distinct !{!7447, !7448, !7449}
!7448 = !DILocation(line: 616, column: 7, scope: !7435)
!7449 = !DILocation(line: 621, column: 7, scope: !7435)
!7450 = !DILocation(line: 622, column: 11, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7418, file: !554, line: 622, column: 11)
!7452 = !DILocation(line: 622, column: 20, scope: !7451)
!7453 = !DILocation(line: 622, column: 28, scope: !7451)
!7454 = !DILocation(line: 622, column: 11, scope: !7418)
!7455 = !DILocation(line: 624, column: 17, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7451, file: !554, line: 622, column: 34)
!7457 = !DILocation(line: 624, column: 26, scope: !7456)
!7458 = !DILocation(line: 624, column: 8, scope: !7456)
!7459 = !DILocation(line: 623, column: 4, scope: !7456)
!7460 = !DILocation(line: 623, column: 13, scope: !7456)
!7461 = !DILocation(line: 623, column: 20, scope: !7456)
!7462 = !DILocation(line: 625, column: 9, scope: !7456)
!7463 = !DILocation(line: 625, column: 14, scope: !7456)
!7464 = !DILocation(line: 625, column: 17, scope: !7456)
!7465 = !DILocation(line: 625, column: 43, scope: !7456)
!7466 = !DILocation(line: 625, column: 7, scope: !7456)
!7467 = !DILocation(line: 626, column: 11, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7456, file: !554, line: 626, column: 4)
!7469 = !DILocation(line: 626, column: 9, scope: !7468)
!7470 = !DILocation(line: 626, column: 16, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7468, file: !554, line: 626, column: 4)
!7472 = !DILocation(line: 626, column: 20, scope: !7471)
!7473 = !DILocation(line: 626, column: 29, scope: !7471)
!7474 = !DILocation(line: 626, column: 18, scope: !7471)
!7475 = !DILocation(line: 626, column: 4, scope: !7468)
!7476 = !DILocation(line: 627, column: 8, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7471, file: !554, line: 626, column: 39)
!7478 = !DILocation(line: 627, column: 14, scope: !7477)
!7479 = !DILocation(line: 628, column: 24, scope: !7477)
!7480 = !DILocation(line: 628, column: 16, scope: !7477)
!7481 = !DILocation(line: 628, column: 14, scope: !7477)
!7482 = !DILocation(line: 629, column: 13, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7477, file: !554, line: 629, column: 12)
!7484 = !DILocation(line: 629, column: 12, scope: !7483)
!7485 = !DILocation(line: 629, column: 16, scope: !7483)
!7486 = !DILocation(line: 629, column: 24, scope: !7483)
!7487 = !DILocation(line: 629, column: 29, scope: !7483)
!7488 = !DILocation(line: 629, column: 28, scope: !7483)
!7489 = !DILocation(line: 629, column: 32, scope: !7483)
!7490 = !DILocation(line: 629, column: 39, scope: !7483)
!7491 = !DILocation(line: 629, column: 43, scope: !7483)
!7492 = !DILocation(line: 629, column: 42, scope: !7483)
!7493 = !DILocation(line: 629, column: 46, scope: !7483)
!7494 = !DILocation(line: 629, column: 55, scope: !7483)
!7495 = !DILocation(line: 630, column: 6, scope: !7483)
!7496 = !DILocation(line: 630, column: 12, scope: !7483)
!7497 = !DILocation(line: 630, column: 25, scope: !7483)
!7498 = !DILocation(line: 630, column: 28, scope: !7483)
!7499 = !DILocation(line: 630, column: 34, scope: !7483)
!7500 = !DILocation(line: 629, column: 12, scope: !7477)
!7501 = !DILocation(line: 631, column: 5, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7483, file: !554, line: 630, column: 46)
!7503 = !DILocation(line: 633, column: 38, scope: !7477)
!7504 = !DILocation(line: 633, column: 31, scope: !7477)
!7505 = !DILocation(line: 633, column: 8, scope: !7477)
!7506 = !DILocation(line: 633, column: 17, scope: !7477)
!7507 = !DILocation(line: 633, column: 25, scope: !7477)
!7508 = !DILocation(line: 633, column: 29, scope: !7477)
!7509 = !DILocation(line: 634, column: 13, scope: !7477)
!7510 = !DILocation(line: 634, column: 16, scope: !7477)
!7511 = !DILocation(line: 634, column: 11, scope: !7477)
!7512 = !DILocation(line: 626, column: 4, scope: !7471)
!7513 = distinct !{!7513, !7475, !7514}
!7514 = !DILocation(line: 635, column: 4, scope: !7468)
!7515 = !DILocation(line: 636, column: 23, scope: !7456)
!7516 = !DILocation(line: 636, column: 4, scope: !7456)
!7517 = !DILocation(line: 636, column: 13, scope: !7456)
!7518 = !DILocation(line: 636, column: 21, scope: !7456)
!7519 = !DILocation(line: 637, column: 7, scope: !7456)
!7520 = !DILocation(line: 638, column: 7, scope: !7418)
!7521 = !DILocation(line: 640, column: 29, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 640, column: 7)
!7523 = !DILocation(line: 640, column: 34, scope: !7522)
!7524 = !DILocation(line: 640, column: 7, scope: !7522)
!7525 = !DILocation(line: 640, column: 64, scope: !7522)
!7526 = !DILocation(line: 640, column: 7, scope: !7089)
!7527 = !DILocation(line: 641, column: 12, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7522, file: !554, line: 640, column: 70)
!7529 = !DILocation(line: 641, column: 17, scope: !7528)
!7530 = !DILocation(line: 641, column: 20, scope: !7528)
!7531 = !DILocation(line: 641, column: 43, scope: !7528)
!7532 = !DILocation(line: 641, column: 10, scope: !7528)
!7533 = !DILocation(line: 642, column: 12, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7528, file: !554, line: 642, column: 11)
!7535 = !DILocation(line: 642, column: 11, scope: !7534)
!7536 = !DILocation(line: 642, column: 15, scope: !7534)
!7537 = !DILocation(line: 642, column: 11, scope: !7528)
!7538 = !DILocation(line: 643, column: 4, scope: !7534)
!7539 = !DILocation(line: 644, column: 7, scope: !7528)
!7540 = !DILocation(line: 644, column: 13, scope: !7528)
!7541 = !DILocation(line: 645, column: 23, scope: !7528)
!7542 = !DILocation(line: 645, column: 15, scope: !7528)
!7543 = !DILocation(line: 645, column: 13, scope: !7528)
!7544 = !DILocation(line: 646, column: 12, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7528, file: !554, line: 646, column: 11)
!7546 = !DILocation(line: 646, column: 11, scope: !7545)
!7547 = !DILocation(line: 646, column: 15, scope: !7545)
!7548 = !DILocation(line: 646, column: 23, scope: !7545)
!7549 = !DILocation(line: 646, column: 27, scope: !7545)
!7550 = !DILocation(line: 646, column: 26, scope: !7545)
!7551 = !DILocation(line: 646, column: 30, scope: !7545)
!7552 = !DILocation(line: 646, column: 38, scope: !7545)
!7553 = !DILocation(line: 647, column: 5, scope: !7545)
!7554 = !DILocation(line: 647, column: 11, scope: !7545)
!7555 = !DILocation(line: 647, column: 21, scope: !7545)
!7556 = !DILocation(line: 647, column: 24, scope: !7545)
!7557 = !DILocation(line: 647, column: 30, scope: !7545)
!7558 = !DILocation(line: 646, column: 11, scope: !7528)
!7559 = !DILocation(line: 648, column: 26, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7545, file: !554, line: 647, column: 45)
!7561 = !DILocation(line: 648, column: 19, scope: !7560)
!7562 = !DILocation(line: 648, column: 4, scope: !7560)
!7563 = !DILocation(line: 648, column: 13, scope: !7560)
!7564 = !DILocation(line: 648, column: 17, scope: !7560)
!7565 = !DILocation(line: 649, column: 4, scope: !7560)
!7566 = !DILocation(line: 650, column: 7, scope: !7560)
!7567 = !DILocation(line: 651, column: 7, scope: !7528)
!7568 = !DILocation(line: 653, column: 3, scope: !7089)
!7569 = !DILocation(line: 655, column: 3, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 655, column: 3)
!7571 = !DILocation(line: 655, column: 3, scope: !7089)
!7572 = !DILocation(line: 655, column: 3, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7570, file: !554, line: 655, column: 3)
!7574 = !DILocation(line: 656, column: 3, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 656, column: 3)
!7576 = !DILocation(line: 656, column: 3, scope: !7089)
!7577 = !DILocation(line: 656, column: 3, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7575, file: !554, line: 656, column: 3)
!7579 = !DILocation(line: 657, column: 28, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 657, column: 7)
!7581 = !DILocation(line: 657, column: 33, scope: !7580)
!7582 = !DILocation(line: 657, column: 7, scope: !7580)
!7583 = !DILocation(line: 657, column: 62, scope: !7580)
!7584 = !DILocation(line: 657, column: 7, scope: !7089)
!7585 = !DILocation(line: 658, column: 19, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7587, file: !554, line: 658, column: 11)
!7587 = distinct !DILexicalBlock(scope: !7580, file: !554, line: 657, column: 68)
!7588 = !DILocation(line: 658, column: 24, scope: !7586)
!7589 = !DILocation(line: 658, column: 27, scope: !7586)
!7590 = !DILocation(line: 658, column: 49, scope: !7586)
!7591 = !DILocation(line: 658, column: 11, scope: !7586)
!7592 = !DILocation(line: 658, column: 54, scope: !7586)
!7593 = !DILocation(line: 658, column: 11, scope: !7587)
!7594 = !DILocation(line: 659, column: 4, scope: !7586)
!7595 = !DILocation(line: 660, column: 7, scope: !7587)
!7596 = !DILocation(line: 662, column: 28, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 662, column: 7)
!7598 = !DILocation(line: 662, column: 33, scope: !7597)
!7599 = !DILocation(line: 662, column: 7, scope: !7597)
!7600 = !DILocation(line: 662, column: 62, scope: !7597)
!7601 = !DILocation(line: 662, column: 7, scope: !7089)
!7602 = !DILocation(line: 663, column: 19, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7604, file: !554, line: 663, column: 11)
!7604 = distinct !DILexicalBlock(scope: !7597, file: !554, line: 662, column: 68)
!7605 = !DILocation(line: 663, column: 24, scope: !7603)
!7606 = !DILocation(line: 663, column: 27, scope: !7603)
!7607 = !DILocation(line: 663, column: 49, scope: !7603)
!7608 = !DILocation(line: 663, column: 11, scope: !7603)
!7609 = !DILocation(line: 663, column: 54, scope: !7603)
!7610 = !DILocation(line: 663, column: 11, scope: !7604)
!7611 = !DILocation(line: 664, column: 4, scope: !7603)
!7612 = !DILocation(line: 665, column: 7, scope: !7604)
!7613 = !DILocation(line: 667, column: 3, scope: !7089)
!7614 = !DILocation(line: 669, column: 27, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 669, column: 7)
!7616 = !DILocation(line: 669, column: 32, scope: !7615)
!7617 = !DILocation(line: 669, column: 7, scope: !7615)
!7618 = !DILocation(line: 669, column: 60, scope: !7615)
!7619 = !DILocation(line: 669, column: 7, scope: !7089)
!7620 = !DILocation(line: 670, column: 12, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7615, file: !554, line: 669, column: 66)
!7622 = !DILocation(line: 670, column: 17, scope: !7621)
!7623 = !DILocation(line: 670, column: 20, scope: !7621)
!7624 = !DILocation(line: 670, column: 41, scope: !7621)
!7625 = !DILocation(line: 670, column: 10, scope: !7621)
!7626 = !DILocation(line: 671, column: 12, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7621, file: !554, line: 671, column: 11)
!7628 = !DILocation(line: 671, column: 11, scope: !7627)
!7629 = !DILocation(line: 671, column: 15, scope: !7627)
!7630 = !DILocation(line: 671, column: 11, scope: !7621)
!7631 = !DILocation(line: 672, column: 4, scope: !7627)
!7632 = !DILocation(line: 673, column: 7, scope: !7621)
!7633 = !DILocation(line: 673, column: 13, scope: !7621)
!7634 = !DILocation(line: 674, column: 21, scope: !7621)
!7635 = !DILocation(line: 674, column: 14, scope: !7621)
!7636 = !DILocation(line: 674, column: 12, scope: !7621)
!7637 = !DILocation(line: 675, column: 12, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7621, file: !554, line: 675, column: 11)
!7639 = !DILocation(line: 675, column: 11, scope: !7638)
!7640 = !DILocation(line: 675, column: 15, scope: !7638)
!7641 = !DILocation(line: 675, column: 23, scope: !7638)
!7642 = !DILocation(line: 675, column: 27, scope: !7638)
!7643 = !DILocation(line: 675, column: 26, scope: !7638)
!7644 = !DILocation(line: 675, column: 30, scope: !7638)
!7645 = !DILocation(line: 675, column: 38, scope: !7638)
!7646 = !DILocation(line: 676, column: 6, scope: !7638)
!7647 = !DILocation(line: 676, column: 12, scope: !7638)
!7648 = !DILocation(line: 676, column: 22, scope: !7638)
!7649 = !DILocation(line: 677, column: 5, scope: !7638)
!7650 = !DILocation(line: 677, column: 10, scope: !7638)
!7651 = !DILocation(line: 677, column: 22, scope: !7638)
!7652 = !DILocation(line: 677, column: 25, scope: !7638)
!7653 = !DILocation(line: 677, column: 30, scope: !7638)
!7654 = !DILocation(line: 677, column: 44, scope: !7638)
!7655 = !DILocation(line: 678, column: 4, scope: !7638)
!7656 = !DILocation(line: 678, column: 9, scope: !7638)
!7657 = !DILocation(line: 678, column: 20, scope: !7638)
!7658 = !DILocation(line: 678, column: 23, scope: !7638)
!7659 = !DILocation(line: 678, column: 28, scope: !7638)
!7660 = !DILocation(line: 675, column: 11, scope: !7621)
!7661 = !DILocation(line: 679, column: 28, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7638, file: !554, line: 678, column: 34)
!7663 = !DILocation(line: 679, column: 23, scope: !7662)
!7664 = !DILocation(line: 679, column: 4, scope: !7662)
!7665 = !DILocation(line: 679, column: 13, scope: !7662)
!7666 = !DILocation(line: 679, column: 21, scope: !7662)
!7667 = !DILocation(line: 680, column: 4, scope: !7662)
!7668 = !DILocation(line: 681, column: 7, scope: !7662)
!7669 = !DILocation(line: 682, column: 7, scope: !7621)
!7670 = !DILocation(line: 684, column: 3, scope: !7089)
!7671 = !DILocation(line: 686, column: 25, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 686, column: 7)
!7673 = !DILocation(line: 686, column: 30, scope: !7672)
!7674 = !DILocation(line: 686, column: 7, scope: !7672)
!7675 = !DILocation(line: 686, column: 56, scope: !7672)
!7676 = !DILocation(line: 686, column: 7, scope: !7089)
!7677 = !DILocation(line: 687, column: 12, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7672, file: !554, line: 686, column: 62)
!7679 = !DILocation(line: 687, column: 17, scope: !7678)
!7680 = !DILocation(line: 687, column: 20, scope: !7678)
!7681 = !DILocation(line: 687, column: 39, scope: !7678)
!7682 = !DILocation(line: 687, column: 10, scope: !7678)
!7683 = !DILocation(line: 688, column: 12, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7678, file: !554, line: 688, column: 11)
!7685 = !DILocation(line: 688, column: 11, scope: !7684)
!7686 = !DILocation(line: 688, column: 15, scope: !7684)
!7687 = !DILocation(line: 688, column: 11, scope: !7678)
!7688 = !DILocation(line: 689, column: 4, scope: !7684)
!7689 = !DILocation(line: 690, column: 7, scope: !7678)
!7690 = !DILocation(line: 690, column: 13, scope: !7678)
!7691 = !DILocation(line: 691, column: 23, scope: !7678)
!7692 = !DILocation(line: 691, column: 15, scope: !7678)
!7693 = !DILocation(line: 691, column: 13, scope: !7678)
!7694 = !DILocation(line: 692, column: 12, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7678, file: !554, line: 692, column: 11)
!7696 = !DILocation(line: 692, column: 11, scope: !7695)
!7697 = !DILocation(line: 692, column: 15, scope: !7695)
!7698 = !DILocation(line: 692, column: 23, scope: !7695)
!7699 = !DILocation(line: 692, column: 27, scope: !7695)
!7700 = !DILocation(line: 692, column: 26, scope: !7695)
!7701 = !DILocation(line: 692, column: 30, scope: !7695)
!7702 = !DILocation(line: 692, column: 38, scope: !7695)
!7703 = !DILocation(line: 693, column: 5, scope: !7695)
!7704 = !DILocation(line: 693, column: 11, scope: !7695)
!7705 = !DILocation(line: 693, column: 21, scope: !7695)
!7706 = !DILocation(line: 693, column: 24, scope: !7695)
!7707 = !DILocation(line: 693, column: 30, scope: !7695)
!7708 = !DILocation(line: 692, column: 11, scope: !7678)
!7709 = !DILocation(line: 694, column: 28, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7695, file: !554, line: 693, column: 45)
!7711 = !DILocation(line: 694, column: 21, scope: !7710)
!7712 = !DILocation(line: 694, column: 4, scope: !7710)
!7713 = !DILocation(line: 694, column: 13, scope: !7710)
!7714 = !DILocation(line: 694, column: 19, scope: !7710)
!7715 = !DILocation(line: 695, column: 4, scope: !7710)
!7716 = !DILocation(line: 696, column: 7, scope: !7710)
!7717 = !DILocation(line: 697, column: 7, scope: !7678)
!7718 = !DILocation(line: 699, column: 27, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 699, column: 7)
!7720 = !DILocation(line: 699, column: 32, scope: !7719)
!7721 = !DILocation(line: 699, column: 7, scope: !7719)
!7722 = !DILocation(line: 699, column: 60, scope: !7719)
!7723 = !DILocation(line: 699, column: 7, scope: !7089)
!7724 = !DILocation(line: 700, column: 19, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !554, line: 700, column: 11)
!7726 = distinct !DILexicalBlock(scope: !7719, file: !554, line: 699, column: 66)
!7727 = !DILocation(line: 700, column: 24, scope: !7725)
!7728 = !DILocation(line: 700, column: 27, scope: !7725)
!7729 = !DILocation(line: 700, column: 48, scope: !7725)
!7730 = !DILocation(line: 700, column: 11, scope: !7725)
!7731 = !DILocation(line: 700, column: 53, scope: !7725)
!7732 = !DILocation(line: 700, column: 11, scope: !7726)
!7733 = !DILocation(line: 701, column: 4, scope: !7725)
!7734 = !DILocation(line: 702, column: 7, scope: !7726)
!7735 = !DILocation(line: 704, column: 3, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7089, file: !554, line: 704, column: 3)
!7737 = !DILocation(line: 704, column: 3, scope: !7089)
!7738 = !DILocation(line: 704, column: 3, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7736, file: !554, line: 704, column: 3)
!7740 = !DILocation(line: 705, column: 3, scope: !7089)
!7741 = !DILocation(line: 707, column: 5, scope: !7081)
!7742 = !DILocation(line: 507, column: 35, scope: !7076)
!7743 = !DILocation(line: 507, column: 5, scope: !7076)
!7744 = distinct !{!7744, !7079, !7745}
!7745 = !DILocation(line: 707, column: 5, scope: !7073)
!7746 = !DILocation(line: 709, column: 10, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7049, file: !554, line: 709, column: 9)
!7748 = !DILocation(line: 709, column: 9, scope: !7049)
!7749 = !DILocation(line: 710, column: 18, scope: !7747)
!7750 = !DILocation(line: 710, column: 27, scope: !7747)
!7751 = !DILocation(line: 710, column: 2, scope: !7747)
!7752 = !DILocation(line: 710, column: 11, scope: !7747)
!7753 = !DILocation(line: 710, column: 16, scope: !7747)
!7754 = !DILocation(line: 716, column: 1, scope: !7049)
!7755 = distinct !DISubprogram(name: "run_command", scope: !554, file: !554, line: 1058, type: !7756, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !298, retainedNodes: !176)
!7756 = !DISubroutineType(types: !7757)
!7757 = !{!33, !7052}
!7758 = !DILocalVariable(name: "details", arg: 1, scope: !7755, file: !554, line: 1058, type: !7052)
!7759 = !DILocation(line: 1058, column: 37, scope: !7755)
!7760 = !DILocalVariable(name: "plugin", scope: !7755, file: !554, line: 1060, type: !558)
!7761 = !DILocation(line: 1060, column: 30, scope: !7755)
!7762 = !DILocalVariable(name: "cstat", scope: !7755, file: !554, line: 1061, type: !7763)
!7763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "command_status", file: !699, line: 150, size: 64, elements: !7764)
!7764 = !{!7765, !7766}
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7763, file: !699, line: 155, baseType: !33, size: 32)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !7763, file: !699, line: 156, baseType: !33, size: 32, offset: 32)
!7767 = !DILocation(line: 1061, column: 27, scope: !7755)
!7768 = !DILocalVariable(name: "exitcode", scope: !7755, file: !554, line: 1062, type: !33)
!7769 = !DILocation(line: 1062, column: 9, scope: !7755)
!7770 = !DILocation(line: 1064, column: 11, scope: !7755)
!7771 = !DILocation(line: 1064, column: 16, scope: !7755)
!7772 = !DILocation(line: 1065, column: 11, scope: !7755)
!7773 = !DILocation(line: 1065, column: 15, scope: !7755)
!7774 = !DILocation(line: 1067, column: 17, scope: !7755)
!7775 = !DILocation(line: 1067, column: 5, scope: !7755)
!7776 = !DILocation(line: 1069, column: 19, scope: !7755)
!7777 = !DILocation(line: 1069, column: 5, scope: !7755)
!7778 = !DILocation(line: 1072, column: 2, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7755, file: !554, line: 1069, column: 25)
!7780 = !DILocation(line: 1073, column: 40, scope: !7779)
!7781 = !DILocation(line: 1073, column: 2, scope: !7779)
!7782 = !DILocation(line: 1074, column: 2, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7779, file: !554, line: 1074, column: 2)
!7784 = !DILocation(line: 1074, column: 2, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7783, file: !554, line: 1074, column: 2)
!7786 = !DILocation(line: 1075, column: 6, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7785, file: !554, line: 1074, column: 38)
!7788 = !DILocation(line: 1076, column: 18, scope: !7787)
!7789 = !DILocation(line: 1076, column: 35, scope: !7787)
!7790 = !DILocation(line: 1076, column: 6, scope: !7787)
!7791 = !DILocation(line: 1077, column: 2, scope: !7787)
!7792 = distinct !{!7792, !7782, !7793}
!7793 = !DILocation(line: 1077, column: 2, scope: !7783)
!7794 = !DILocation(line: 1078, column: 11, scope: !7779)
!7795 = !DILocation(line: 1079, column: 2, scope: !7779)
!7796 = !DILocation(line: 1082, column: 2, scope: !7779)
!7797 = !DILocation(line: 1083, column: 37, scope: !7779)
!7798 = !DILocation(line: 1083, column: 2, scope: !7779)
!7799 = !DILocation(line: 1084, column: 2, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7779, file: !554, line: 1084, column: 2)
!7801 = !DILocation(line: 1084, column: 2, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7800, file: !554, line: 1084, column: 2)
!7803 = !DILocation(line: 1085, column: 6, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7802, file: !554, line: 1084, column: 38)
!7805 = !DILocation(line: 1086, column: 18, scope: !7804)
!7806 = !DILocation(line: 1086, column: 32, scope: !7804)
!7807 = !DILocation(line: 1086, column: 6, scope: !7804)
!7808 = !DILocation(line: 1087, column: 2, scope: !7804)
!7809 = distinct !{!7809, !7799, !7810}
!7810 = !DILocation(line: 1087, column: 2, scope: !7800)
!7811 = !DILocation(line: 1088, column: 6, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7779, file: !554, line: 1088, column: 6)
!7813 = !DILocation(line: 1088, column: 6, scope: !7779)
!7814 = !DILocation(line: 1089, column: 17, scope: !7812)
!7815 = !DILocation(line: 1089, column: 15, scope: !7812)
!7816 = !DILocation(line: 1089, column: 6, scope: !7812)
!7817 = !DILocation(line: 1090, column: 11, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7812, file: !554, line: 1090, column: 11)
!7819 = !DILocation(line: 1090, column: 11, scope: !7812)
!7820 = !DILocation(line: 1091, column: 17, scope: !7818)
!7821 = !DILocation(line: 1091, column: 37, scope: !7818)
!7822 = !DILocation(line: 1091, column: 15, scope: !7818)
!7823 = !DILocation(line: 1091, column: 6, scope: !7818)
!7824 = !DILocation(line: 1092, column: 2, scope: !7779)
!7825 = !DILocation(line: 1094, column: 11, scope: !7779)
!7826 = !DILocation(line: 1094, column: 66, scope: !7779)
!7827 = !DILocation(line: 1094, column: 2, scope: !7779)
!7828 = !DILocation(line: 1095, column: 2, scope: !7779)
!7829 = !DILocation(line: 1097, column: 12, scope: !7755)
!7830 = !DILocation(line: 1097, column: 5, scope: !7755)
!7831 = distinct !DISubprogram(name: "policy_close", scope: !554, file: !554, line: 1109, type: !7832, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!7832 = !DISubroutineType(types: !7833)
!7833 = !{null, !558, !33, !33}
!7834 = !DILocalVariable(name: "plugin", arg: 1, scope: !7831, file: !554, line: 1109, type: !558)
!7835 = !DILocation(line: 1109, column: 39, scope: !7831)
!7836 = !DILocalVariable(name: "exit_status", arg: 2, scope: !7831, file: !554, line: 1109, type: !33)
!7837 = !DILocation(line: 1109, column: 51, scope: !7831)
!7838 = !DILocalVariable(name: "error", arg: 3, scope: !7831, file: !554, line: 1109, type: !33)
!7839 = !DILocation(line: 1109, column: 68, scope: !7831)
!7840 = !DILocation(line: 1111, column: 5, scope: !7831)
!7841 = !DILocation(line: 1111, column: 13, scope: !7831)
!7842 = !DILocation(line: 1111, column: 15, scope: !7831)
!7843 = !DILocation(line: 1111, column: 23, scope: !7831)
!7844 = !DILocation(line: 1111, column: 29, scope: !7831)
!7845 = !DILocation(line: 1111, column: 42, scope: !7831)
!7846 = !DILocation(line: 1112, column: 1, scope: !7831)
!7847 = distinct !DISubprogram(name: "iolog_close", scope: !554, file: !554, line: 1195, type: !7832, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!7848 = !DILocalVariable(name: "plugin", arg: 1, scope: !7847, file: !554, line: 1195, type: !558)
!7849 = !DILocation(line: 1195, column: 38, scope: !7847)
!7850 = !DILocalVariable(name: "exit_status", arg: 2, scope: !7847, file: !554, line: 1195, type: !33)
!7851 = !DILocation(line: 1195, column: 50, scope: !7847)
!7852 = !DILocalVariable(name: "error", arg: 3, scope: !7847, file: !554, line: 1195, type: !33)
!7853 = !DILocation(line: 1195, column: 67, scope: !7847)
!7854 = !DILocation(line: 1197, column: 5, scope: !7847)
!7855 = !DILocation(line: 1197, column: 13, scope: !7847)
!7856 = !DILocation(line: 1197, column: 15, scope: !7847)
!7857 = !DILocation(line: 1197, column: 19, scope: !7847)
!7858 = !DILocation(line: 1197, column: 25, scope: !7847)
!7859 = !DILocation(line: 1197, column: 38, scope: !7847)
!7860 = !DILocation(line: 1198, column: 1, scope: !7847)
!7861 = distinct !DISubprogram(name: "get_user_groups", scope: !554, file: !554, line: 369, type: !7862, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!7862 = !DISubroutineType(types: !7863)
!7863 = !{!20, !6573}
!7864 = !DILocalVariable(name: "ud", arg: 1, scope: !7861, file: !554, line: 369, type: !6573)
!7865 = !DILocation(line: 369, column: 38, scope: !7861)
!7866 = !DILocalVariable(name: "cp", scope: !7861, file: !554, line: 371, type: !20)
!7867 = !DILocation(line: 371, column: 11, scope: !7861)
!7868 = !DILocalVariable(name: "gid_list", scope: !7861, file: !554, line: 371, type: !20)
!7869 = !DILocation(line: 371, column: 16, scope: !7861)
!7870 = !DILocalVariable(name: "glsize", scope: !7861, file: !554, line: 372, type: !282)
!7871 = !DILocation(line: 372, column: 12, scope: !7861)
!7872 = !DILocalVariable(name: "i", scope: !7861, file: !554, line: 373, type: !33)
!7873 = !DILocation(line: 373, column: 9, scope: !7861)
!7874 = !DILocalVariable(name: "len", scope: !7861, file: !554, line: 373, type: !33)
!7875 = !DILocation(line: 373, column: 12, scope: !7861)
!7876 = !DILocation(line: 379, column: 5, scope: !7861)
!7877 = !DILocation(line: 379, column: 9, scope: !7861)
!7878 = !DILocation(line: 379, column: 16, scope: !7861)
!7879 = !DILocation(line: 381, column: 24, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7861, file: !554, line: 381, column: 9)
!7881 = !DILocation(line: 381, column: 10, scope: !7880)
!7882 = !DILocation(line: 381, column: 14, scope: !7880)
!7883 = !DILocation(line: 381, column: 22, scope: !7880)
!7884 = !DILocation(line: 381, column: 44, scope: !7880)
!7885 = !DILocation(line: 381, column: 9, scope: !7861)
!7886 = !DILocation(line: 382, column: 24, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7880, file: !554, line: 381, column: 49)
!7888 = !DILocation(line: 382, column: 28, scope: !7887)
!7889 = !DILocation(line: 382, column: 15, scope: !7887)
!7890 = !DILocation(line: 382, column: 2, scope: !7887)
!7891 = !DILocation(line: 382, column: 6, scope: !7887)
!7892 = !DILocation(line: 382, column: 13, scope: !7887)
!7893 = !DILocation(line: 383, column: 16, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7887, file: !554, line: 383, column: 6)
!7895 = !DILocation(line: 383, column: 20, scope: !7894)
!7896 = !DILocation(line: 383, column: 29, scope: !7894)
!7897 = !DILocation(line: 383, column: 33, scope: !7894)
!7898 = !DILocation(line: 383, column: 6, scope: !7894)
!7899 = !DILocation(line: 383, column: 41, scope: !7894)
!7900 = !DILocation(line: 383, column: 6, scope: !7887)
!7901 = !DILocation(line: 384, column: 12, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7894, file: !554, line: 383, column: 46)
!7903 = !DILocation(line: 384, column: 16, scope: !7902)
!7904 = !DILocation(line: 384, column: 6, scope: !7902)
!7905 = !DILocation(line: 385, column: 6, scope: !7902)
!7906 = !DILocation(line: 385, column: 10, scope: !7902)
!7907 = !DILocation(line: 385, column: 17, scope: !7902)
!7908 = !DILocation(line: 386, column: 2, scope: !7902)
!7909 = !DILocation(line: 387, column: 5, scope: !7887)
!7910 = !DILocation(line: 389, column: 9, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7861, file: !554, line: 389, column: 9)
!7912 = !DILocation(line: 389, column: 13, scope: !7911)
!7913 = !DILocation(line: 389, column: 20, scope: !7911)
!7914 = !DILocation(line: 389, column: 9, scope: !7861)
!7915 = !DILocation(line: 390, column: 22, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7917, file: !554, line: 390, column: 6)
!7917 = distinct !DILexicalBlock(scope: !7911, file: !554, line: 389, column: 29)
!7918 = !DILocation(line: 390, column: 6, scope: !7916)
!7919 = !DILocation(line: 390, column: 26, scope: !7916)
!7920 = !DILocation(line: 390, column: 6, scope: !7917)
!7921 = !DILocation(line: 391, column: 15, scope: !7916)
!7922 = !DILocation(line: 391, column: 6, scope: !7916)
!7923 = !DILocation(line: 392, column: 5, scope: !7917)
!7924 = !DILocation(line: 397, column: 39, scope: !7861)
!7925 = !DILocation(line: 397, column: 43, scope: !7861)
!7926 = !DILocation(line: 397, column: 51, scope: !7861)
!7927 = !DILocation(line: 397, column: 38, scope: !7861)
!7928 = !DILocation(line: 397, column: 36, scope: !7861)
!7929 = !DILocation(line: 397, column: 12, scope: !7861)
!7930 = !DILocation(line: 398, column: 24, scope: !7861)
!7931 = !DILocation(line: 398, column: 16, scope: !7861)
!7932 = !DILocation(line: 398, column: 14, scope: !7861)
!7933 = !DILocation(line: 399, column: 12, scope: !7861)
!7934 = !DILocation(line: 399, column: 5, scope: !7861)
!7935 = !DILocation(line: 400, column: 10, scope: !7861)
!7936 = !DILocation(line: 400, column: 19, scope: !7861)
!7937 = !DILocation(line: 400, column: 39, scope: !7861)
!7938 = !DILocation(line: 400, column: 8, scope: !7861)
!7939 = !DILocation(line: 401, column: 12, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7861, file: !554, line: 401, column: 5)
!7941 = !DILocation(line: 401, column: 10, scope: !7940)
!7942 = !DILocation(line: 401, column: 17, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7940, file: !554, line: 401, column: 5)
!7944 = !DILocation(line: 401, column: 21, scope: !7943)
!7945 = !DILocation(line: 401, column: 25, scope: !7943)
!7946 = !DILocation(line: 401, column: 19, scope: !7943)
!7947 = !DILocation(line: 401, column: 5, scope: !7940)
!7948 = !DILocation(line: 403, column: 17, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7943, file: !554, line: 401, column: 39)
!7950 = !DILocation(line: 403, column: 21, scope: !7949)
!7951 = !DILocation(line: 403, column: 31, scope: !7949)
!7952 = !DILocation(line: 403, column: 36, scope: !7949)
!7953 = !DILocation(line: 403, column: 34, scope: !7949)
!7954 = !DILocation(line: 403, column: 28, scope: !7949)
!7955 = !DILocation(line: 404, column: 6, scope: !7949)
!7956 = !DILocation(line: 404, column: 34, scope: !7949)
!7957 = !DILocation(line: 404, column: 38, scope: !7949)
!7958 = !DILocation(line: 404, column: 45, scope: !7949)
!7959 = !DILocation(line: 403, column: 8, scope: !7949)
!7960 = !DILocation(line: 403, column: 6, scope: !7949)
!7961 = !DILocation(line: 405, column: 8, scope: !7949)
!7962 = !DILocation(line: 405, column: 5, scope: !7949)
!7963 = !DILocation(line: 406, column: 5, scope: !7949)
!7964 = !DILocation(line: 401, column: 35, scope: !7943)
!7965 = !DILocation(line: 401, column: 5, scope: !7943)
!7966 = distinct !{!7966, !7947, !7967}
!7967 = !DILocation(line: 406, column: 5, scope: !7940)
!7968 = !DILocation(line: 407, column: 12, scope: !7861)
!7969 = !DILocation(line: 407, column: 5, scope: !7861)
!7970 = distinct !DISubprogram(name: "fill_group_list", scope: !554, file: !554, line: 342, type: !7971, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!7971 = !DISubroutineType(types: !7972)
!7972 = !{!33, !6573}
!7973 = !DILocalVariable(name: "ud", arg: 1, scope: !7970, file: !554, line: 342, type: !6573)
!7974 = !DILocation(line: 342, column: 38, scope: !7970)
!7975 = !DILocalVariable(name: "maxgroups", scope: !7970, file: !554, line: 344, type: !33)
!7976 = !DILocation(line: 344, column: 9, scope: !7970)
!7977 = !DILocalVariable(name: "tries", scope: !7970, file: !554, line: 344, type: !33)
!7978 = !DILocation(line: 344, column: 20, scope: !7970)
!7979 = !DILocalVariable(name: "rval", scope: !7970, file: !554, line: 344, type: !33)
!7980 = !DILocation(line: 344, column: 27, scope: !7970)
!7981 = !DILocation(line: 347, column: 22, scope: !7970)
!7982 = !DILocation(line: 347, column: 17, scope: !7970)
!7983 = !DILocation(line: 347, column: 15, scope: !7970)
!7984 = !DILocation(line: 348, column: 9, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7970, file: !554, line: 348, column: 9)
!7986 = !DILocation(line: 348, column: 19, scope: !7985)
!7987 = !DILocation(line: 348, column: 9, scope: !7970)
!7988 = !DILocation(line: 350, column: 12, scope: !7985)
!7989 = !DILocation(line: 350, column: 2, scope: !7985)
!7990 = !DILocation(line: 357, column: 5, scope: !7970)
!7991 = !DILocation(line: 357, column: 9, scope: !7970)
!7992 = !DILocation(line: 357, column: 16, scope: !7970)
!7993 = !DILocation(line: 358, column: 19, scope: !7970)
!7994 = !DILocation(line: 358, column: 5, scope: !7970)
!7995 = !DILocation(line: 358, column: 9, scope: !7970)
!7996 = !DILocation(line: 358, column: 17, scope: !7970)
!7997 = !DILocation(line: 359, column: 16, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7970, file: !554, line: 359, column: 5)
!7999 = !DILocation(line: 359, column: 10, scope: !7998)
!8000 = !DILocation(line: 359, column: 21, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7998, file: !554, line: 359, column: 5)
!8002 = !DILocation(line: 359, column: 27, scope: !8001)
!8003 = !DILocation(line: 359, column: 32, scope: !8001)
!8004 = !DILocation(line: 359, column: 35, scope: !8001)
!8005 = !DILocation(line: 359, column: 40, scope: !8001)
!8006 = !DILocation(line: 0, scope: !8001)
!8007 = !DILocation(line: 359, column: 5, scope: !7998)
!8008 = !DILocation(line: 360, column: 2, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8001, file: !554, line: 359, column: 56)
!8010 = !DILocation(line: 360, column: 6, scope: !8009)
!8011 = !DILocation(line: 360, column: 14, scope: !8009)
!8012 = !DILocation(line: 361, column: 8, scope: !8009)
!8013 = !DILocation(line: 361, column: 12, scope: !8009)
!8014 = !DILocation(line: 361, column: 2, scope: !8009)
!8015 = !DILocation(line: 362, column: 24, scope: !8009)
!8016 = !DILocation(line: 362, column: 28, scope: !8009)
!8017 = !DILocation(line: 362, column: 15, scope: !8009)
!8018 = !DILocation(line: 362, column: 2, scope: !8009)
!8019 = !DILocation(line: 362, column: 6, scope: !8009)
!8020 = !DILocation(line: 362, column: 13, scope: !8009)
!8021 = !DILocation(line: 363, column: 22, scope: !8009)
!8022 = !DILocation(line: 363, column: 26, scope: !8009)
!8023 = !DILocation(line: 363, column: 36, scope: !8009)
!8024 = !DILocation(line: 363, column: 40, scope: !8009)
!8025 = !DILocation(line: 363, column: 45, scope: !8009)
!8026 = !DILocation(line: 363, column: 49, scope: !8009)
!8027 = !DILocation(line: 363, column: 58, scope: !8009)
!8028 = !DILocation(line: 363, column: 62, scope: !8009)
!8029 = !DILocation(line: 363, column: 9, scope: !8009)
!8030 = !DILocation(line: 363, column: 7, scope: !8009)
!8031 = !DILocation(line: 364, column: 5, scope: !8009)
!8032 = !DILocation(line: 359, column: 52, scope: !8001)
!8033 = !DILocation(line: 359, column: 5, scope: !8001)
!8034 = distinct !{!8034, !8007, !8035}
!8035 = !DILocation(line: 364, column: 5, scope: !7998)
!8036 = !DILocation(line: 365, column: 12, scope: !7970)
!8037 = !DILocation(line: 365, column: 5, scope: !7970)
!8038 = distinct !DISubprogram(name: "exec_setup", scope: !554, file: !554, line: 895, type: !8039, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !298, retainedNodes: !176)
!8039 = !DISubroutineType(types: !8040)
!8040 = !{!33, !7052, !221, !33}
!8041 = !DILocalVariable(name: "details", arg: 1, scope: !8038, file: !554, line: 895, type: !7052)
!8042 = !DILocation(line: 895, column: 36, scope: !8038)
!8043 = !DILocalVariable(name: "ptyname", arg: 2, scope: !8038, file: !554, line: 895, type: !221)
!8044 = !DILocation(line: 895, column: 57, scope: !8038)
!8045 = !DILocalVariable(name: "ptyfd", arg: 3, scope: !8038, file: !554, line: 895, type: !33)
!8046 = !DILocation(line: 895, column: 70, scope: !8038)
!8047 = !DILocalVariable(name: "rval", scope: !8038, file: !554, line: 897, type: !33)
!8048 = !DILocation(line: 897, column: 9, scope: !8038)
!8049 = !DILocalVariable(name: "pw", scope: !8038, file: !554, line: 898, type: !630)
!8050 = !DILocation(line: 898, column: 20, scope: !8038)
!8051 = !DILocation(line: 903, column: 19, scope: !8038)
!8052 = !DILocation(line: 903, column: 28, scope: !8038)
!8053 = !DILocation(line: 903, column: 10, scope: !8038)
!8054 = !DILocation(line: 903, column: 8, scope: !8038)
!8055 = !DILocation(line: 912, column: 45, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 912, column: 9)
!8057 = !DILocation(line: 912, column: 9, scope: !8056)
!8058 = !DILocation(line: 912, column: 49, scope: !8056)
!8059 = !DILocation(line: 912, column: 9, scope: !8038)
!8060 = !DILocation(line: 913, column: 2, scope: !8056)
!8061 = !DILocation(line: 923, column: 9, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 923, column: 9)
!8063 = !DILocation(line: 923, column: 12, scope: !8062)
!8064 = !DILocation(line: 923, column: 9, scope: !8038)
!8065 = !DILocation(line: 954, column: 5, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8062, file: !554, line: 923, column: 21)
!8067 = !DILocation(line: 960, column: 9, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 960, column: 9)
!8069 = !DILocation(line: 960, column: 44, scope: !8068)
!8070 = !DILocation(line: 960, column: 55, scope: !8068)
!8071 = !DILocation(line: 960, column: 64, scope: !8068)
!8072 = !DILocation(line: 960, column: 47, scope: !8068)
!8073 = !DILocation(line: 960, column: 9, scope: !8038)
!8074 = !DILocation(line: 961, column: 10, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8068, file: !554, line: 960, column: 71)
!8076 = !DILocation(line: 962, column: 20, scope: !8075)
!8077 = !DILocation(line: 962, column: 29, scope: !8075)
!8078 = !DILocation(line: 961, column: 2, scope: !8075)
!8079 = !DILocation(line: 963, column: 2, scope: !8075)
!8080 = !DILocation(line: 966, column: 9, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 966, column: 9)
!8082 = !DILocation(line: 966, column: 43, scope: !8081)
!8083 = !DILocation(line: 966, column: 53, scope: !8081)
!8084 = !DILocation(line: 966, column: 62, scope: !8081)
!8085 = !DILocation(line: 966, column: 46, scope: !8081)
!8086 = !DILocation(line: 966, column: 9, scope: !8038)
!8087 = !DILocation(line: 967, column: 10, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8081, file: !554, line: 966, column: 68)
!8089 = !DILocation(line: 968, column: 20, scope: !8088)
!8090 = !DILocation(line: 968, column: 29, scope: !8088)
!8091 = !DILocation(line: 967, column: 2, scope: !8088)
!8092 = !DILocation(line: 969, column: 2, scope: !8088)
!8093 = !DILocation(line: 972, column: 10, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 972, column: 9)
!8095 = !DILocation(line: 972, column: 9, scope: !8038)
!8096 = !DILocation(line: 973, column: 6, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8098, file: !554, line: 973, column: 6)
!8098 = distinct !DILexicalBlock(scope: !8094, file: !554, line: 972, column: 53)
!8099 = !DILocation(line: 973, column: 15, scope: !8097)
!8100 = !DILocation(line: 973, column: 23, scope: !8097)
!8101 = !DILocation(line: 973, column: 6, scope: !8098)
!8102 = !DILocation(line: 974, column: 25, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !554, line: 974, column: 10)
!8104 = distinct !DILexicalBlock(scope: !8097, file: !554, line: 973, column: 29)
!8105 = !DILocation(line: 974, column: 34, scope: !8103)
!8106 = !DILocation(line: 974, column: 43, scope: !8103)
!8107 = !DILocation(line: 974, column: 52, scope: !8103)
!8108 = !DILocation(line: 974, column: 10, scope: !8103)
!8109 = !DILocation(line: 974, column: 60, scope: !8103)
!8110 = !DILocation(line: 974, column: 10, scope: !8104)
!8111 = !DILocation(line: 975, column: 11, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8103, file: !554, line: 974, column: 65)
!8113 = !DILocation(line: 975, column: 3, scope: !8112)
!8114 = !DILocation(line: 976, column: 3, scope: !8112)
!8115 = !DILocation(line: 978, column: 2, scope: !8104)
!8116 = !DILocation(line: 979, column: 5, scope: !8098)
!8117 = !DILocation(line: 981, column: 9, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 981, column: 9)
!8119 = !DILocation(line: 981, column: 9, scope: !8038)
!8120 = !DILocation(line: 982, column: 35, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8122, file: !554, line: 982, column: 6)
!8122 = distinct !DILexicalBlock(scope: !8118, file: !554, line: 981, column: 49)
!8123 = !DILocation(line: 982, column: 44, scope: !8121)
!8124 = !DILocation(line: 982, column: 6, scope: !8121)
!8125 = !DILocation(line: 982, column: 54, scope: !8121)
!8126 = !DILocation(line: 982, column: 6, scope: !8122)
!8127 = !DILocation(line: 983, column: 14, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8121, file: !554, line: 982, column: 60)
!8129 = !DILocation(line: 983, column: 6, scope: !8128)
!8130 = !DILocation(line: 984, column: 6, scope: !8128)
!8131 = !DILocation(line: 986, column: 5, scope: !8122)
!8132 = !DILocation(line: 987, column: 9, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 987, column: 9)
!8134 = !DILocation(line: 987, column: 9, scope: !8038)
!8135 = !DILocation(line: 988, column: 15, scope: !8133)
!8136 = !DILocation(line: 988, column: 24, scope: !8133)
!8137 = !DILocation(line: 988, column: 9, scope: !8133)
!8138 = !DILocation(line: 988, column: 2, scope: !8133)
!8139 = !DILocation(line: 989, column: 9, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 989, column: 9)
!8141 = !DILocation(line: 989, column: 18, scope: !8140)
!8142 = !DILocation(line: 989, column: 9, scope: !8038)
!8143 = !DILocation(line: 990, column: 13, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8145, file: !554, line: 990, column: 6)
!8145 = distinct !DILexicalBlock(scope: !8140, file: !554, line: 989, column: 26)
!8146 = !DILocation(line: 990, column: 22, scope: !8144)
!8147 = !DILocation(line: 990, column: 6, scope: !8144)
!8148 = !DILocation(line: 990, column: 30, scope: !8144)
!8149 = !DILocation(line: 990, column: 35, scope: !8144)
!8150 = !DILocation(line: 990, column: 38, scope: !8144)
!8151 = !DILocation(line: 990, column: 49, scope: !8144)
!8152 = !DILocation(line: 990, column: 6, scope: !8145)
!8153 = !DILocation(line: 991, column: 14, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8144, file: !554, line: 990, column: 55)
!8155 = !DILocation(line: 991, column: 48, scope: !8154)
!8156 = !DILocation(line: 991, column: 57, scope: !8154)
!8157 = !DILocation(line: 991, column: 6, scope: !8154)
!8158 = !DILocation(line: 992, column: 6, scope: !8154)
!8159 = !DILocation(line: 994, column: 5, scope: !8145)
!8160 = !DILocation(line: 996, column: 9, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 996, column: 9)
!8162 = !DILocation(line: 996, column: 9, scope: !8038)
!8163 = !DILocation(line: 997, column: 18, scope: !8161)
!8164 = !DILocation(line: 997, column: 2, scope: !8161)
!8165 = !DILocation(line: 1000, column: 19, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 1000, column: 9)
!8167 = !DILocation(line: 1000, column: 28, scope: !8166)
!8168 = !DILocation(line: 1000, column: 33, scope: !8166)
!8169 = !DILocation(line: 1000, column: 42, scope: !8166)
!8170 = !DILocation(line: 1000, column: 48, scope: !8166)
!8171 = !DILocation(line: 1000, column: 57, scope: !8166)
!8172 = !DILocation(line: 1000, column: 9, scope: !8166)
!8173 = !DILocation(line: 1000, column: 63, scope: !8166)
!8174 = !DILocation(line: 1000, column: 9, scope: !8038)
!8175 = !DILocation(line: 1001, column: 10, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8166, file: !554, line: 1000, column: 69)
!8177 = !DILocation(line: 1001, column: 55, scope: !8176)
!8178 = !DILocation(line: 1001, column: 64, scope: !8176)
!8179 = !DILocation(line: 1002, column: 6, scope: !8176)
!8180 = !DILocation(line: 1002, column: 15, scope: !8176)
!8181 = !DILocation(line: 1001, column: 2, scope: !8176)
!8182 = !DILocation(line: 1003, column: 2, scope: !8176)
!8183 = !DILocation(line: 1023, column: 9, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 1023, column: 9)
!8185 = !DILocation(line: 1023, column: 18, scope: !8184)
!8186 = !DILocation(line: 1023, column: 9, scope: !8038)
!8187 = !DILocation(line: 1024, column: 6, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !554, line: 1024, column: 6)
!8189 = distinct !DILexicalBlock(scope: !8184, file: !554, line: 1023, column: 23)
!8190 = !DILocation(line: 1024, column: 15, scope: !8188)
!8191 = !DILocation(line: 1024, column: 22, scope: !8188)
!8192 = !DILocation(line: 1024, column: 32, scope: !8188)
!8193 = !DILocation(line: 1024, column: 41, scope: !8188)
!8194 = !DILocation(line: 1024, column: 59, scope: !8188)
!8195 = !DILocation(line: 1024, column: 25, scope: !8188)
!8196 = !DILocation(line: 1024, column: 64, scope: !8188)
!8197 = !DILocation(line: 1024, column: 6, scope: !8189)
!8198 = !DILocation(line: 1026, column: 16, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !554, line: 1026, column: 10)
!8200 = distinct !DILexicalBlock(scope: !8188, file: !554, line: 1024, column: 70)
!8201 = !DILocation(line: 1026, column: 25, scope: !8199)
!8202 = !DILocation(line: 1026, column: 10, scope: !8199)
!8203 = !DILocation(line: 1026, column: 30, scope: !8199)
!8204 = !DILocation(line: 1026, column: 10, scope: !8200)
!8205 = !DILocation(line: 1027, column: 11, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8199, file: !554, line: 1026, column: 36)
!8207 = !DILocation(line: 1027, column: 50, scope: !8206)
!8208 = !DILocation(line: 1027, column: 59, scope: !8206)
!8209 = !DILocation(line: 1027, column: 3, scope: !8206)
!8210 = !DILocation(line: 1028, column: 3, scope: !8206)
!8211 = !DILocation(line: 1030, column: 2, scope: !8200)
!8212 = !DILocation(line: 1031, column: 5, scope: !8189)
!8213 = !DILocalVariable(name: "rl", scope: !8214, file: !554, line: 1040, type: !691)
!8214 = distinct !DILexicalBlock(scope: !8038, file: !554, line: 1039, column: 5)
!8215 = !DILocation(line: 1040, column: 16, scope: !8214)
!8216 = !DILocation(line: 1041, column: 6, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8214, file: !554, line: 1041, column: 6)
!8218 = !DILocation(line: 1041, column: 35, scope: !8217)
!8219 = !DILocation(line: 1041, column: 6, scope: !8214)
!8220 = !DILocation(line: 1042, column: 13, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8222, file: !554, line: 1042, column: 10)
!8222 = distinct !DILexicalBlock(scope: !8217, file: !554, line: 1041, column: 41)
!8223 = !DILocation(line: 1042, column: 22, scope: !8221)
!8224 = !DILocation(line: 1042, column: 39, scope: !8221)
!8225 = !DILocation(line: 1042, column: 45, scope: !8221)
!8226 = !DILocation(line: 1042, column: 54, scope: !8221)
!8227 = !DILocation(line: 1042, column: 10, scope: !8222)
!8228 = !DILocation(line: 1043, column: 10, scope: !8221)
!8229 = !DILocation(line: 1043, column: 3, scope: !8221)
!8230 = !DILocation(line: 1044, column: 2, scope: !8222)
!8231 = !DILocation(line: 1048, column: 10, scope: !8038)
!8232 = !DILocation(line: 1048, column: 5, scope: !8038)
!8233 = !DILabel(scope: !8038, name: "done", file: !554, line: 1050)
!8234 = !DILocation(line: 1050, column: 1, scope: !8038)
!8235 = !DILocation(line: 1051, column: 12, scope: !8038)
!8236 = !DILocation(line: 1051, column: 5, scope: !8038)
!8237 = distinct !DISubprogram(name: "policy_init_session", scope: !554, file: !554, line: 1163, type: !8238, scopeLine: 1164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!8238 = !DISubroutineType(types: !8239)
!8239 = !{!33, !558, !630}
!8240 = !DILocalVariable(name: "plugin", arg: 1, scope: !8237, file: !554, line: 1163, type: !558)
!8241 = !DILocation(line: 1163, column: 46, scope: !8237)
!8242 = !DILocalVariable(name: "pwd", arg: 2, scope: !8237, file: !554, line: 1163, type: !630)
!8243 = !DILocation(line: 1163, column: 69, scope: !8237)
!8244 = !DILocation(line: 1165, column: 9, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8237, file: !554, line: 1165, column: 9)
!8246 = !DILocation(line: 1165, column: 17, scope: !8245)
!8247 = !DILocation(line: 1165, column: 19, scope: !8245)
!8248 = !DILocation(line: 1165, column: 27, scope: !8245)
!8249 = !DILocation(line: 1165, column: 9, scope: !8237)
!8250 = !DILocation(line: 1166, column: 9, scope: !8245)
!8251 = !DILocation(line: 1166, column: 17, scope: !8245)
!8252 = !DILocation(line: 1166, column: 19, scope: !8245)
!8253 = !DILocation(line: 1166, column: 27, scope: !8245)
!8254 = !DILocation(line: 1166, column: 40, scope: !8245)
!8255 = !DILocation(line: 1166, column: 2, scope: !8245)
!8256 = !DILocation(line: 1167, column: 5, scope: !8237)
!8257 = !DILocation(line: 1168, column: 1, scope: !8237)
!8258 = distinct !DISubprogram(name: "disable_execute", scope: !554, file: !554, line: 823, type: !8259, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !298, retainedNodes: !176)
!8259 = !DISubroutineType(types: !8260)
!8260 = !{null, !7052}
!8261 = !DILocalVariable(name: "details", arg: 1, scope: !8258, file: !554, line: 823, type: !7052)
!8262 = !DILocation(line: 823, column: 41, scope: !8258)
!8263 = !DILocalVariable(name: "cp", scope: !8258, file: !554, line: 826, type: !20)
!8264 = !DILocation(line: 826, column: 11, scope: !8258)
!8265 = !DILocalVariable(name: "ev", scope: !8258, file: !554, line: 826, type: !615)
!8266 = !DILocation(line: 826, column: 17, scope: !8258)
!8267 = !DILocalVariable(name: "nenvp", scope: !8258, file: !554, line: 826, type: !615)
!8268 = !DILocation(line: 826, column: 23, scope: !8258)
!8269 = !DILocalVariable(name: "env_len", scope: !8258, file: !554, line: 827, type: !33)
!8270 = !DILocation(line: 827, column: 9, scope: !8258)
!8271 = !DILocalVariable(name: "env_size", scope: !8258, file: !554, line: 827, type: !33)
!8272 = !DILocation(line: 827, column: 22, scope: !8258)
!8273 = !DILocation(line: 838, column: 22, scope: !8258)
!8274 = !DILocation(line: 838, column: 13, scope: !8258)
!8275 = !DILocation(line: 838, column: 11, scope: !8258)
!8276 = !DILocation(line: 839, column: 15, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8258, file: !554, line: 839, column: 5)
!8278 = !DILocation(line: 839, column: 24, scope: !8277)
!8279 = !DILocation(line: 839, column: 13, scope: !8277)
!8280 = !DILocation(line: 839, column: 10, scope: !8277)
!8281 = !DILocation(line: 839, column: 31, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8277, file: !554, line: 839, column: 5)
!8283 = !DILocation(line: 839, column: 30, scope: !8282)
!8284 = !DILocation(line: 839, column: 34, scope: !8282)
!8285 = !DILocation(line: 839, column: 5, scope: !8277)
!8286 = !DILocation(line: 840, column: 6, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8288, file: !554, line: 840, column: 6)
!8288 = distinct !DILexicalBlock(scope: !8282, file: !554, line: 839, column: 49)
!8289 = !DILocation(line: 840, column: 14, scope: !8287)
!8290 = !DILocation(line: 840, column: 20, scope: !8287)
!8291 = !DILocation(line: 840, column: 18, scope: !8287)
!8292 = !DILocation(line: 840, column: 6, scope: !8288)
!8293 = !DILocation(line: 841, column: 15, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8287, file: !554, line: 840, column: 30)
!8295 = !DILocation(line: 842, column: 24, scope: !8294)
!8296 = !DILocation(line: 842, column: 31, scope: !8294)
!8297 = !DILocation(line: 842, column: 14, scope: !8294)
!8298 = !DILocation(line: 842, column: 12, scope: !8294)
!8299 = !DILocation(line: 843, column: 2, scope: !8294)
!8300 = !DILocation(line: 860, column: 15, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8288, file: !554, line: 860, column: 6)
!8302 = !DILocation(line: 860, column: 14, scope: !8301)
!8303 = !DILocation(line: 860, column: 6, scope: !8301)
!8304 = !DILocation(line: 860, column: 61, scope: !8301)
!8305 = !DILocation(line: 860, column: 6, scope: !8288)
!8306 = !DILocation(line: 861, column: 6, scope: !8301)
!8307 = !DILocation(line: 863, column: 22, scope: !8288)
!8308 = !DILocation(line: 863, column: 21, scope: !8288)
!8309 = !DILocation(line: 863, column: 2, scope: !8288)
!8310 = !DILocation(line: 863, column: 15, scope: !8288)
!8311 = !DILocation(line: 863, column: 19, scope: !8288)
!8312 = !DILocation(line: 864, column: 5, scope: !8288)
!8313 = !DILocation(line: 839, column: 45, scope: !8282)
!8314 = !DILocation(line: 839, column: 5, scope: !8282)
!8315 = distinct !{!8315, !8285, !8316}
!8316 = !DILocation(line: 864, column: 5, scope: !8277)
!8317 = !DILocation(line: 879, column: 35, scope: !8258)
!8318 = !DILocation(line: 879, column: 10, scope: !8258)
!8319 = !DILocation(line: 879, column: 8, scope: !8258)
!8320 = !DILocation(line: 881, column: 9, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8258, file: !554, line: 881, column: 9)
!8322 = !DILocation(line: 881, column: 12, scope: !8321)
!8323 = !DILocation(line: 881, column: 9, scope: !8258)
!8324 = !DILocation(line: 882, column: 2, scope: !8321)
!8325 = !DILocation(line: 883, column: 24, scope: !8258)
!8326 = !DILocation(line: 883, column: 5, scope: !8258)
!8327 = !DILocation(line: 883, column: 18, scope: !8258)
!8328 = !DILocation(line: 883, column: 22, scope: !8258)
!8329 = !DILocation(line: 884, column: 5, scope: !8258)
!8330 = !DILocation(line: 884, column: 11, scope: !8258)
!8331 = !DILocation(line: 884, column: 20, scope: !8258)
!8332 = !DILocation(line: 886, column: 21, scope: !8258)
!8333 = !DILocation(line: 886, column: 5, scope: !8258)
!8334 = !DILocation(line: 886, column: 14, scope: !8258)
!8335 = !DILocation(line: 886, column: 19, scope: !8258)
!8336 = !DILocation(line: 888, column: 1, scope: !8258)
!8337 = distinct !DISubprogram(name: "sudo_edit", scope: !8338, file: !8338, line: 85, type: !8339, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !919, retainedNodes: !176)
!8338 = !DIFile(filename: "./sudo_edit.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!8339 = !DISubroutineType(types: !8340)
!8340 = !{!33, !8341}
!8341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8342, size: 64)
!8342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "command_details", file: !699, line: 126, size: 960, elements: !8343)
!8343 = !{!8344, !8345, !8346, !8347, !8348, !8349, !8350, !8351, !8352, !8353, !8354, !8355, !8356, !8357, !8358, !8359, !8360, !8361, !8362, !8363}
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !8342, file: !699, line: 127, baseType: !550, size: 32)
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !8342, file: !699, line: 128, baseType: !550, size: 32, offset: 32)
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !8342, file: !699, line: 129, baseType: !548, size: 32, offset: 64)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !8342, file: !699, line: 130, baseType: !548, size: 32, offset: 96)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "umask", scope: !8342, file: !699, line: 131, baseType: !1411, size: 32, offset: 128)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !8342, file: !699, line: 132, baseType: !33, size: 32, offset: 160)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8342, file: !699, line: 133, baseType: !33, size: 32, offset: 192)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !8342, file: !699, line: 134, baseType: !33, size: 32, offset: 224)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "closefrom", scope: !8342, file: !699, line: 135, baseType: !33, size: 32, offset: 256)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8342, file: !699, line: 136, baseType: !33, size: 32, offset: 288)
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !8342, file: !699, line: 137, baseType: !711, size: 64, offset: 320)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !8342, file: !699, line: 138, baseType: !221, size: 64, offset: 384)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !8342, file: !699, line: 139, baseType: !221, size: 64, offset: 448)
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "login_class", scope: !8342, file: !699, line: 140, baseType: !221, size: 64, offset: 512)
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "chroot", scope: !8342, file: !699, line: 141, baseType: !221, size: 64, offset: 576)
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "selinux_role", scope: !8342, file: !699, line: 142, baseType: !221, size: 64, offset: 640)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "selinux_type", scope: !8342, file: !699, line: 143, baseType: !221, size: 64, offset: 704)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "utmp_user", scope: !8342, file: !699, line: 144, baseType: !221, size: 64, offset: 768)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !8342, file: !699, line: 145, baseType: !615, size: 64, offset: 832)
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !8342, file: !699, line: 146, baseType: !615, size: 64, offset: 896)
!8364 = !DILocalVariable(name: "command_details", arg: 1, scope: !8337, file: !8338, line: 85, type: !8341)
!8365 = !DILocation(line: 85, column: 35, scope: !8337)
!8366 = !DILocalVariable(name: "editor_details", scope: !8337, file: !8338, line: 87, type: !8342)
!8367 = !DILocation(line: 87, column: 28, scope: !8337)
!8368 = !DILocalVariable(name: "nread", scope: !8337, file: !8338, line: 88, type: !1900)
!8369 = !DILocation(line: 88, column: 13, scope: !8337)
!8370 = !DILocalVariable(name: "nwritten", scope: !8337, file: !8338, line: 88, type: !1900)
!8371 = !DILocation(line: 88, column: 20, scope: !8337)
!8372 = !DILocalVariable(name: "tmpdir", scope: !8337, file: !8338, line: 89, type: !221)
!8373 = !DILocation(line: 89, column: 17, scope: !8337)
!8374 = !DILocalVariable(name: "cp", scope: !8337, file: !8338, line: 90, type: !20)
!8375 = !DILocation(line: 90, column: 11, scope: !8337)
!8376 = !DILocalVariable(name: "suff", scope: !8337, file: !8338, line: 90, type: !20)
!8377 = !DILocation(line: 90, column: 16, scope: !8337)
!8378 = !DILocalVariable(name: "nargv", scope: !8337, file: !8338, line: 90, type: !615)
!8379 = !DILocation(line: 90, column: 24, scope: !8337)
!8380 = !DILocalVariable(name: "ap", scope: !8337, file: !8338, line: 90, type: !615)
!8381 = !DILocation(line: 90, column: 33, scope: !8337)
!8382 = !DILocalVariable(name: "files", scope: !8337, file: !8338, line: 90, type: !615)
!8383 = !DILocation(line: 90, column: 39, scope: !8337)
!8384 = !DILocalVariable(name: "buf", scope: !8337, file: !8338, line: 91, type: !8385)
!8385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 65536, elements: !8386)
!8386 = !{!8387}
!8387 = !DISubrange(count: 8192, lowerBound: 0)
!8388 = !DILocation(line: 91, column: 10, scope: !8337)
!8389 = !DILocalVariable(name: "rc", scope: !8337, file: !8338, line: 92, type: !33)
!8390 = !DILocation(line: 92, column: 9, scope: !8337)
!8391 = !DILocalVariable(name: "i", scope: !8337, file: !8338, line: 92, type: !33)
!8392 = !DILocation(line: 92, column: 13, scope: !8337)
!8393 = !DILocalVariable(name: "j", scope: !8337, file: !8338, line: 92, type: !33)
!8394 = !DILocation(line: 92, column: 16, scope: !8337)
!8395 = !DILocalVariable(name: "ac", scope: !8337, file: !8338, line: 92, type: !33)
!8396 = !DILocation(line: 92, column: 19, scope: !8337)
!8397 = !DILocalVariable(name: "ofd", scope: !8337, file: !8338, line: 92, type: !33)
!8398 = !DILocation(line: 92, column: 23, scope: !8337)
!8399 = !DILocalVariable(name: "tfd", scope: !8337, file: !8338, line: 92, type: !33)
!8400 = !DILocation(line: 92, column: 28, scope: !8337)
!8401 = !DILocalVariable(name: "nargc", scope: !8337, file: !8338, line: 92, type: !33)
!8402 = !DILocation(line: 92, column: 33, scope: !8337)
!8403 = !DILocalVariable(name: "rval", scope: !8337, file: !8338, line: 92, type: !33)
!8404 = !DILocation(line: 92, column: 40, scope: !8337)
!8405 = !DILocalVariable(name: "tmplen", scope: !8337, file: !8338, line: 92, type: !33)
!8406 = !DILocation(line: 92, column: 46, scope: !8337)
!8407 = !DILocalVariable(name: "editor_argc", scope: !8337, file: !8338, line: 93, type: !33)
!8408 = !DILocation(line: 93, column: 9, scope: !8337)
!8409 = !DILocalVariable(name: "nfiles", scope: !8337, file: !8338, line: 93, type: !33)
!8410 = !DILocation(line: 93, column: 26, scope: !8337)
!8411 = !DILocalVariable(name: "sb", scope: !8337, file: !8338, line: 94, type: !8412)
!8412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !4961, line: 46, size: 1152, elements: !8413)
!8413 = !{!8414, !8415, !8416, !8417, !8418, !8419, !8420, !8421, !8422, !8423, !8424, !8425, !8430, !8431, !8432}
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !8412, file: !4961, line: 48, baseType: !4964, size: 64)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !8412, file: !4961, line: 53, baseType: !4966, size: 64, offset: 64)
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !8412, file: !4961, line: 61, baseType: !4968, size: 64, offset: 128)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !8412, file: !4961, line: 62, baseType: !1412, size: 32, offset: 192)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !8412, file: !4961, line: 64, baseType: !99, size: 32, offset: 224)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !8412, file: !4961, line: 65, baseType: !549, size: 32, offset: 256)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !8412, file: !4961, line: 67, baseType: !33, size: 32, offset: 288)
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !8412, file: !4961, line: 69, baseType: !4964, size: 64, offset: 320)
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !8412, file: !4961, line: 74, baseType: !780, size: 64, offset: 384)
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !8412, file: !4961, line: 78, baseType: !4976, size: 64, offset: 448)
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !8412, file: !4961, line: 80, baseType: !4978, size: 64, offset: 512)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !8412, file: !4961, line: 91, baseType: !8426, size: 128, offset: 576)
!8426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !4981, line: 10, size: 128, elements: !8427)
!8427 = !{!8428, !8429}
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !8426, file: !4981, line: 12, baseType: !2446, size: 64)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !8426, file: !4981, line: 16, baseType: !4985, size: 64, offset: 64)
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !8412, file: !4961, line: 92, baseType: !8426, size: 128, offset: 704)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !8412, file: !4961, line: 93, baseType: !8426, size: 128, offset: 832)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !8412, file: !4961, line: 106, baseType: !4989, size: 192, offset: 960)
!8433 = !DILocation(line: 94, column: 17, scope: !8337)
!8434 = !DILocalVariable(name: "tv", scope: !8337, file: !8338, line: 95, type: !8435)
!8435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !2443, line: 8, size: 128, elements: !8436)
!8436 = !{!8437, !8438}
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !8435, file: !2443, line: 10, baseType: !2446, size: 64)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !8435, file: !2443, line: 11, baseType: !2448, size: 64, offset: 64)
!8439 = !DILocation(line: 95, column: 20, scope: !8337)
!8440 = !DILocalVariable(name: "tv1", scope: !8337, file: !8338, line: 95, type: !8435)
!8441 = !DILocation(line: 95, column: 24, scope: !8337)
!8442 = !DILocalVariable(name: "tv2", scope: !8337, file: !8338, line: 95, type: !8435)
!8443 = !DILocation(line: 95, column: 29, scope: !8337)
!8444 = !DILocalVariable(name: "tf", scope: !8337, file: !8338, line: 101, type: !8445)
!8445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8446, size: 64)
!8446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tempfile", scope: !8337, file: !8338, line: 96, size: 320, elements: !8447)
!8447 = !{!8448, !8449, !8450, !8451}
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "tfile", scope: !8446, file: !8338, line: 97, baseType: !20, size: 64)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "ofile", scope: !8446, file: !8338, line: 98, baseType: !20, size: 64, offset: 64)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "omtim", scope: !8446, file: !8338, line: 99, baseType: !8435, size: 128, offset: 128)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "osize", scope: !8446, file: !8338, line: 100, baseType: !8452, size: 64, offset: 256)
!8452 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !36, line: 85, baseType: !780)
!8453 = !DILocation(line: 101, column: 8, scope: !8337)
!8454 = !DILocation(line: 107, column: 9, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8337, file: !8338, line: 107, column: 9)
!8456 = !DILocation(line: 107, column: 26, scope: !8455)
!8457 = !DILocation(line: 107, column: 9, scope: !8337)
!8458 = !DILocation(line: 108, column: 10, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8455, file: !8338, line: 107, column: 32)
!8460 = !DILocation(line: 108, column: 2, scope: !8459)
!8461 = !DILocation(line: 109, column: 2, scope: !8459)
!8462 = !DILocation(line: 115, column: 9, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8337, file: !8338, line: 115, column: 9)
!8464 = !DILocation(line: 115, column: 33, scope: !8463)
!8465 = !DILocation(line: 115, column: 38, scope: !8463)
!8466 = !DILocation(line: 115, column: 41, scope: !8463)
!8467 = !DILocation(line: 115, column: 9, scope: !8337)
!8468 = !DILocation(line: 116, column: 9, scope: !8463)
!8469 = !DILocation(line: 116, column: 2, scope: !8463)
!8470 = !DILocation(line: 118, column: 14, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8463, file: !8338, line: 118, column: 14)
!8472 = !DILocation(line: 118, column: 38, scope: !8471)
!8473 = !DILocation(line: 118, column: 43, scope: !8471)
!8474 = !DILocation(line: 118, column: 46, scope: !8471)
!8475 = !DILocation(line: 118, column: 14, scope: !8463)
!8476 = !DILocation(line: 119, column: 9, scope: !8471)
!8477 = !DILocation(line: 119, column: 2, scope: !8471)
!8478 = !DILocation(line: 122, column: 9, scope: !8471)
!8479 = !DILocation(line: 123, column: 21, scope: !8337)
!8480 = !DILocation(line: 123, column: 14, scope: !8337)
!8481 = !DILocation(line: 123, column: 12, scope: !8337)
!8482 = !DILocation(line: 124, column: 5, scope: !8337)
!8483 = !DILocation(line: 124, column: 12, scope: !8337)
!8484 = !DILocation(line: 124, column: 19, scope: !8337)
!8485 = !DILocation(line: 124, column: 23, scope: !8337)
!8486 = !DILocation(line: 124, column: 26, scope: !8337)
!8487 = !DILocation(line: 124, column: 33, scope: !8337)
!8488 = !DILocation(line: 124, column: 40, scope: !8337)
!8489 = !DILocation(line: 124, column: 45, scope: !8337)
!8490 = !DILocation(line: 0, scope: !8337)
!8491 = !DILocation(line: 125, column: 8, scope: !8337)
!8492 = distinct !{!8492, !8482, !8491}
!8493 = !DILocation(line: 131, column: 15, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8337, file: !8338, line: 131, column: 5)
!8495 = !DILocation(line: 131, column: 32, scope: !8494)
!8496 = !DILocation(line: 131, column: 13, scope: !8494)
!8497 = !DILocation(line: 131, column: 10, scope: !8494)
!8498 = !DILocation(line: 131, column: 39, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8494, file: !8338, line: 131, column: 5)
!8500 = !DILocation(line: 131, column: 38, scope: !8499)
!8501 = !DILocation(line: 131, column: 42, scope: !8499)
!8502 = !DILocation(line: 131, column: 5, scope: !8494)
!8503 = !DILocation(line: 132, column: 6, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8505, file: !8338, line: 132, column: 6)
!8505 = distinct !DILexicalBlock(scope: !8499, file: !8338, line: 131, column: 57)
!8506 = !DILocation(line: 132, column: 6, scope: !8505)
!8507 = !DILocation(line: 133, column: 12, scope: !8504)
!8508 = !DILocation(line: 133, column: 6, scope: !8504)
!8509 = !DILocation(line: 134, column: 19, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8504, file: !8338, line: 134, column: 11)
!8511 = !DILocation(line: 134, column: 18, scope: !8510)
!8512 = !DILocation(line: 134, column: 11, scope: !8510)
!8513 = !DILocation(line: 134, column: 29, scope: !8510)
!8514 = !DILocation(line: 134, column: 11, scope: !8504)
!8515 = !DILocation(line: 135, column: 14, scope: !8510)
!8516 = !DILocation(line: 135, column: 17, scope: !8510)
!8517 = !DILocation(line: 135, column: 12, scope: !8510)
!8518 = !DILocation(line: 135, column: 6, scope: !8510)
!8519 = !DILocation(line: 137, column: 17, scope: !8510)
!8520 = !DILocation(line: 138, column: 5, scope: !8505)
!8521 = !DILocation(line: 131, column: 53, scope: !8499)
!8522 = !DILocation(line: 131, column: 5, scope: !8499)
!8523 = distinct !{!8523, !8502, !8524}
!8524 = !DILocation(line: 138, column: 5, scope: !8494)
!8525 = !DILocation(line: 139, column: 9, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8337, file: !8338, line: 139, column: 9)
!8527 = !DILocation(line: 139, column: 16, scope: !8526)
!8528 = !DILocation(line: 139, column: 9, scope: !8337)
!8529 = !DILocation(line: 140, column: 11, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8526, file: !8338, line: 139, column: 22)
!8531 = !DILocation(line: 140, column: 2, scope: !8530)
!8532 = !DILocation(line: 141, column: 2, scope: !8530)
!8533 = !DILocation(line: 148, column: 19, scope: !8337)
!8534 = !DILocation(line: 148, column: 10, scope: !8337)
!8535 = !DILocation(line: 148, column: 8, scope: !8337)
!8536 = !DILocation(line: 149, column: 16, scope: !8337)
!8537 = !DILocation(line: 149, column: 20, scope: !8337)
!8538 = !DILocation(line: 149, column: 27, scope: !8337)
!8539 = !DILocation(line: 149, column: 5, scope: !8337)
!8540 = !DILocation(line: 150, column: 12, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8337, file: !8338, line: 150, column: 5)
!8542 = !DILocation(line: 150, column: 19, scope: !8541)
!8543 = !DILocation(line: 150, column: 10, scope: !8541)
!8544 = !DILocation(line: 150, column: 24, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8541, file: !8338, line: 150, column: 5)
!8546 = !DILocation(line: 150, column: 28, scope: !8545)
!8547 = !DILocation(line: 150, column: 26, scope: !8545)
!8548 = !DILocation(line: 150, column: 5, scope: !8541)
!8549 = !DILocation(line: 151, column: 5, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8545, file: !8338, line: 150, column: 41)
!8551 = !DILocation(line: 152, column: 14, scope: !8550)
!8552 = !DILocation(line: 152, column: 31, scope: !8550)
!8553 = !DILocation(line: 152, column: 37, scope: !8550)
!8554 = !DILocation(line: 152, column: 54, scope: !8550)
!8555 = !DILocation(line: 153, column: 6, scope: !8550)
!8556 = !DILocation(line: 153, column: 23, scope: !8550)
!8557 = !DILocation(line: 153, column: 32, scope: !8550)
!8558 = !DILocation(line: 153, column: 49, scope: !8550)
!8559 = !DILocation(line: 152, column: 2, scope: !8550)
!8560 = !DILocation(line: 154, column: 18, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8550, file: !8338, line: 154, column: 6)
!8562 = !DILocation(line: 154, column: 24, scope: !8561)
!8563 = !DILocation(line: 154, column: 13, scope: !8561)
!8564 = !DILocation(line: 154, column: 11, scope: !8561)
!8565 = !DILocation(line: 154, column: 45, scope: !8561)
!8566 = !DILocation(line: 154, column: 51, scope: !8561)
!8567 = !DILocation(line: 154, column: 54, scope: !8561)
!8568 = !DILocation(line: 154, column: 60, scope: !8561)
!8569 = !DILocation(line: 154, column: 6, scope: !8550)
!8570 = !DILocation(line: 155, column: 10, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8572, file: !8338, line: 155, column: 10)
!8572 = distinct !DILexicalBlock(scope: !8561, file: !8338, line: 154, column: 71)
!8573 = !DILocation(line: 155, column: 14, scope: !8571)
!8574 = !DILocation(line: 155, column: 10, scope: !8572)
!8575 = !DILocation(line: 156, column: 14, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8571, file: !8338, line: 155, column: 21)
!8577 = !DILocation(line: 156, column: 3, scope: !8576)
!8578 = !DILocation(line: 157, column: 6, scope: !8576)
!8579 = !DILocation(line: 158, column: 6, scope: !8576)
!8580 = !DILocation(line: 159, column: 14, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8571, file: !8338, line: 158, column: 13)
!8582 = !DILocation(line: 159, column: 8, scope: !8581)
!8583 = !DILocation(line: 159, column: 6, scope: !8581)
!8584 = !DILocation(line: 161, column: 2, scope: !8572)
!8585 = !DILocation(line: 162, column: 37, scope: !8550)
!8586 = !DILocation(line: 163, column: 19, scope: !8550)
!8587 = !DILocation(line: 163, column: 41, scope: !8550)
!8588 = !DILocation(line: 162, column: 2, scope: !8550)
!8589 = !DILocation(line: 164, column: 6, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8550, file: !8338, line: 164, column: 6)
!8591 = !DILocation(line: 164, column: 9, scope: !8590)
!8592 = !DILocation(line: 164, column: 13, scope: !8590)
!8593 = !DILocation(line: 164, column: 17, scope: !8590)
!8594 = !DILocation(line: 164, column: 23, scope: !8590)
!8595 = !DILocation(line: 164, column: 27, scope: !8590)
!8596 = !DILocation(line: 164, column: 6, scope: !8550)
!8597 = !DILocation(line: 165, column: 10, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8599, file: !8338, line: 165, column: 10)
!8599 = distinct !DILexicalBlock(scope: !8590, file: !8338, line: 164, column: 49)
!8600 = !DILocation(line: 165, column: 10, scope: !8599)
!8601 = !DILocation(line: 166, column: 17, scope: !8598)
!8602 = !DILocation(line: 166, column: 23, scope: !8598)
!8603 = !DILocation(line: 166, column: 3, scope: !8598)
!8604 = !DILocation(line: 168, column: 12, scope: !8598)
!8605 = !DILocation(line: 168, column: 41, scope: !8598)
!8606 = !DILocation(line: 168, column: 47, scope: !8598)
!8607 = !DILocation(line: 168, column: 3, scope: !8598)
!8608 = !DILocation(line: 169, column: 10, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8599, file: !8338, line: 169, column: 10)
!8610 = !DILocation(line: 169, column: 14, scope: !8609)
!8611 = !DILocation(line: 169, column: 10, scope: !8599)
!8612 = !DILocation(line: 170, column: 9, scope: !8609)
!8613 = !DILocation(line: 170, column: 3, scope: !8609)
!8614 = !DILocation(line: 171, column: 6, scope: !8599)
!8615 = !DILocation(line: 173, column: 16, scope: !8550)
!8616 = !DILocation(line: 173, column: 22, scope: !8550)
!8617 = !DILocation(line: 173, column: 2, scope: !8550)
!8618 = !DILocation(line: 173, column: 5, scope: !8550)
!8619 = !DILocation(line: 173, column: 8, scope: !8550)
!8620 = !DILocation(line: 173, column: 14, scope: !8550)
!8621 = !DILocation(line: 174, column: 19, scope: !8550)
!8622 = !DILocation(line: 174, column: 2, scope: !8550)
!8623 = !DILocation(line: 174, column: 5, scope: !8550)
!8624 = !DILocation(line: 174, column: 8, scope: !8550)
!8625 = !DILocation(line: 174, column: 14, scope: !8550)
!8626 = !DILocation(line: 175, column: 2, scope: !8550)
!8627 = !DILocation(line: 175, column: 2, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8550, file: !8338, line: 175, column: 2)
!8629 = !DILocation(line: 176, column: 20, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8550, file: !8338, line: 176, column: 6)
!8631 = !DILocation(line: 176, column: 23, scope: !8630)
!8632 = !DILocation(line: 176, column: 26, scope: !8630)
!8633 = !DILocation(line: 176, column: 12, scope: !8630)
!8634 = !DILocation(line: 176, column: 10, scope: !8630)
!8635 = !DILocation(line: 176, column: 39, scope: !8630)
!8636 = !DILocation(line: 176, column: 6, scope: !8550)
!8637 = !DILocation(line: 177, column: 8, scope: !8630)
!8638 = !DILocation(line: 177, column: 6, scope: !8630)
!8639 = !DILocation(line: 179, column: 11, scope: !8630)
!8640 = !DILocation(line: 179, column: 14, scope: !8630)
!8641 = !DILocation(line: 179, column: 17, scope: !8630)
!8642 = !DILocation(line: 179, column: 9, scope: !8630)
!8643 = !DILocation(line: 180, column: 17, scope: !8550)
!8644 = !DILocation(line: 180, column: 9, scope: !8550)
!8645 = !DILocation(line: 180, column: 7, scope: !8550)
!8646 = !DILocation(line: 181, column: 6, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8550, file: !8338, line: 181, column: 6)
!8648 = !DILocation(line: 181, column: 11, scope: !8647)
!8649 = !DILocation(line: 181, column: 6, scope: !8550)
!8650 = !DILocation(line: 182, column: 17, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8647, file: !8338, line: 181, column: 20)
!8652 = !DILocation(line: 182, column: 20, scope: !8651)
!8653 = !DILocation(line: 182, column: 23, scope: !8651)
!8654 = !DILocation(line: 182, column: 53, scope: !8651)
!8655 = !DILocation(line: 182, column: 61, scope: !8651)
!8656 = !DILocation(line: 183, column: 17, scope: !8651)
!8657 = !DILocation(line: 183, column: 24, scope: !8651)
!8658 = !DILocation(line: 183, column: 22, scope: !8651)
!8659 = !DILocation(line: 183, column: 3, scope: !8651)
!8660 = !DILocation(line: 183, column: 29, scope: !8651)
!8661 = !DILocation(line: 183, column: 33, scope: !8651)
!8662 = !DILocation(line: 182, column: 6, scope: !8651)
!8663 = !DILocation(line: 184, column: 2, scope: !8651)
!8664 = !DILocation(line: 185, column: 17, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8647, file: !8338, line: 184, column: 9)
!8666 = !DILocation(line: 185, column: 20, scope: !8665)
!8667 = !DILocation(line: 185, column: 23, scope: !8665)
!8668 = !DILocation(line: 185, column: 50, scope: !8665)
!8669 = !DILocation(line: 185, column: 58, scope: !8665)
!8670 = !DILocation(line: 185, column: 66, scope: !8665)
!8671 = !DILocation(line: 185, column: 6, scope: !8665)
!8672 = !DILocation(line: 187, column: 27, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8550, file: !8338, line: 187, column: 6)
!8674 = !DILocation(line: 187, column: 6, scope: !8673)
!8675 = !DILocation(line: 187, column: 32, scope: !8673)
!8676 = !DILocation(line: 187, column: 6, scope: !8550)
!8677 = !DILocation(line: 188, column: 48, scope: !8673)
!8678 = !DILocation(line: 188, column: 6, scope: !8673)
!8679 = !DILocation(line: 189, column: 17, scope: !8550)
!8680 = !DILocation(line: 189, column: 20, scope: !8550)
!8681 = !DILocation(line: 189, column: 23, scope: !8550)
!8682 = !DILocation(line: 189, column: 30, scope: !8550)
!8683 = !DILocation(line: 189, column: 44, scope: !8550)
!8684 = !DILocation(line: 189, column: 37, scope: !8550)
!8685 = !DILocation(line: 189, column: 8, scope: !8550)
!8686 = !DILocation(line: 189, column: 6, scope: !8550)
!8687 = !DILocation(line: 190, column: 6, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8550, file: !8338, line: 190, column: 6)
!8689 = !DILocation(line: 190, column: 24, scope: !8688)
!8690 = !DILocation(line: 190, column: 6, scope: !8550)
!8691 = !DILocation(line: 191, column: 6, scope: !8688)
!8692 = !DILocation(line: 192, column: 6, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8550, file: !8338, line: 192, column: 6)
!8694 = !DILocation(line: 192, column: 10, scope: !8693)
!8695 = !DILocation(line: 192, column: 6, scope: !8550)
!8696 = !DILocation(line: 193, column: 6, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8693, file: !8338, line: 192, column: 17)
!8698 = !DILocation(line: 194, column: 6, scope: !8697)
!8699 = !DILocation(line: 196, column: 6, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8550, file: !8338, line: 196, column: 6)
!8701 = !DILocation(line: 196, column: 10, scope: !8700)
!8702 = !DILocation(line: 196, column: 6, scope: !8550)
!8703 = !DILocation(line: 197, column: 6, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8700, file: !8338, line: 196, column: 17)
!8705 = !DILocation(line: 197, column: 27, scope: !8704)
!8706 = !DILocation(line: 197, column: 32, scope: !8704)
!8707 = !DILocation(line: 197, column: 22, scope: !8704)
!8708 = !DILocation(line: 197, column: 20, scope: !8704)
!8709 = !DILocation(line: 197, column: 51, scope: !8704)
!8710 = !DILocation(line: 198, column: 25, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8712, file: !8338, line: 198, column: 7)
!8712 = distinct !DILexicalBlock(scope: !8704, file: !8338, line: 197, column: 57)
!8713 = !DILocation(line: 198, column: 30, scope: !8711)
!8714 = !DILocation(line: 198, column: 35, scope: !8711)
!8715 = !DILocation(line: 198, column: 19, scope: !8711)
!8716 = !DILocation(line: 198, column: 17, scope: !8711)
!8717 = !DILocation(line: 198, column: 46, scope: !8711)
!8718 = !DILocation(line: 198, column: 43, scope: !8711)
!8719 = !DILocation(line: 198, column: 7, scope: !8712)
!8720 = !DILocation(line: 199, column: 11, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8722, file: !8338, line: 199, column: 11)
!8722 = distinct !DILexicalBlock(scope: !8711, file: !8338, line: 198, column: 53)
!8723 = !DILocation(line: 199, column: 20, scope: !8721)
!8724 = !DILocation(line: 199, column: 11, scope: !8722)
!8725 = !DILocation(line: 200, column: 18, scope: !8721)
!8726 = !DILocation(line: 200, column: 21, scope: !8721)
!8727 = !DILocation(line: 200, column: 24, scope: !8721)
!8728 = !DILocation(line: 200, column: 4, scope: !8721)
!8729 = !DILocation(line: 202, column: 13, scope: !8721)
!8730 = !DILocation(line: 202, column: 35, scope: !8721)
!8731 = !DILocation(line: 202, column: 38, scope: !8721)
!8732 = !DILocation(line: 202, column: 41, scope: !8721)
!8733 = !DILocation(line: 202, column: 4, scope: !8721)
!8734 = !DILocation(line: 203, column: 7, scope: !8722)
!8735 = distinct !{!8735, !8703, !8736}
!8736 = !DILocation(line: 205, column: 6, scope: !8704)
!8737 = !DILocation(line: 206, column: 12, scope: !8704)
!8738 = !DILocation(line: 206, column: 6, scope: !8704)
!8739 = !DILocation(line: 207, column: 2, scope: !8704)
!8740 = !DILocation(line: 215, column: 15, scope: !8550)
!8741 = !DILocation(line: 215, column: 27, scope: !8550)
!8742 = !DILocation(line: 215, column: 30, scope: !8550)
!8743 = !DILocation(line: 215, column: 33, scope: !8550)
!8744 = !DILocation(line: 215, column: 9, scope: !8550)
!8745 = !DILocation(line: 216, column: 13, scope: !8550)
!8746 = !DILocation(line: 216, column: 7, scope: !8550)
!8747 = !DILocation(line: 216, column: 5, scope: !8550)
!8748 = !DILocation(line: 217, column: 7, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8550, file: !8338, line: 217, column: 6)
!8750 = !DILocation(line: 217, column: 6, scope: !8550)
!8751 = !DILocation(line: 218, column: 6, scope: !8749)
!8752 = !DILocation(line: 218, column: 6, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8749, file: !8338, line: 218, column: 6)
!8754 = !DILocation(line: 219, column: 8, scope: !8550)
!8755 = !DILocation(line: 219, column: 2, scope: !8550)
!8756 = !DILocation(line: 220, column: 3, scope: !8550)
!8757 = !DILocation(line: 221, column: 5, scope: !8550)
!8758 = !DILocation(line: 150, column: 37, scope: !8545)
!8759 = !DILocation(line: 150, column: 5, scope: !8545)
!8760 = distinct !{!8760, !8548, !8761}
!8761 = !DILocation(line: 221, column: 5, scope: !8541)
!8762 = !DILocation(line: 222, column: 19, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8337, file: !8338, line: 222, column: 9)
!8764 = !DILocation(line: 222, column: 17, scope: !8763)
!8765 = !DILocation(line: 222, column: 22, scope: !8763)
!8766 = !DILocation(line: 222, column: 9, scope: !8337)
!8767 = !DILocation(line: 223, column: 2, scope: !8763)
!8768 = !DILocation(line: 230, column: 13, scope: !8337)
!8769 = !DILocation(line: 230, column: 27, scope: !8337)
!8770 = !DILocation(line: 230, column: 25, scope: !8337)
!8771 = !DILocation(line: 230, column: 11, scope: !8337)
!8772 = !DILocation(line: 231, column: 32, scope: !8337)
!8773 = !DILocation(line: 231, column: 38, scope: !8337)
!8774 = !DILocation(line: 231, column: 23, scope: !8337)
!8775 = !DILocation(line: 231, column: 13, scope: !8337)
!8776 = !DILocation(line: 231, column: 11, scope: !8337)
!8777 = !DILocation(line: 232, column: 13, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8337, file: !8338, line: 232, column: 5)
!8779 = !DILocation(line: 232, column: 10, scope: !8778)
!8780 = !DILocation(line: 232, column: 18, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8778, file: !8338, line: 232, column: 5)
!8782 = !DILocation(line: 232, column: 23, scope: !8781)
!8783 = !DILocation(line: 232, column: 21, scope: !8781)
!8784 = !DILocation(line: 232, column: 5, scope: !8778)
!8785 = !DILocation(line: 233, column: 14, scope: !8781)
!8786 = !DILocation(line: 233, column: 31, scope: !8781)
!8787 = !DILocation(line: 233, column: 36, scope: !8781)
!8788 = !DILocation(line: 233, column: 2, scope: !8781)
!8789 = !DILocation(line: 233, column: 8, scope: !8781)
!8790 = !DILocation(line: 233, column: 12, scope: !8781)
!8791 = !DILocation(line: 232, column: 38, scope: !8781)
!8792 = !DILocation(line: 232, column: 5, scope: !8781)
!8793 = distinct !{!8793, !8784, !8794}
!8794 = !DILocation(line: 233, column: 38, scope: !8778)
!8795 = !DILocation(line: 234, column: 12, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8337, file: !8338, line: 234, column: 5)
!8797 = !DILocation(line: 234, column: 10, scope: !8796)
!8798 = !DILocation(line: 234, column: 17, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8796, file: !8338, line: 234, column: 5)
!8800 = !DILocation(line: 234, column: 21, scope: !8799)
!8801 = !DILocation(line: 234, column: 19, scope: !8799)
!8802 = !DILocation(line: 234, column: 28, scope: !8799)
!8803 = !DILocation(line: 234, column: 31, scope: !8799)
!8804 = !DILocation(line: 234, column: 36, scope: !8799)
!8805 = !DILocation(line: 234, column: 34, scope: !8799)
!8806 = !DILocation(line: 0, scope: !8799)
!8807 = !DILocation(line: 234, column: 5, scope: !8796)
!8808 = !DILocation(line: 235, column: 16, scope: !8799)
!8809 = !DILocation(line: 235, column: 20, scope: !8799)
!8810 = !DILocation(line: 235, column: 24, scope: !8799)
!8811 = !DILocation(line: 235, column: 2, scope: !8799)
!8812 = !DILocation(line: 235, column: 10, scope: !8799)
!8813 = !DILocation(line: 235, column: 14, scope: !8799)
!8814 = !DILocation(line: 234, column: 5, scope: !8799)
!8815 = distinct !{!8815, !8807, !8816}
!8816 = !DILocation(line: 235, column: 24, scope: !8796)
!8817 = !DILocation(line: 236, column: 5, scope: !8337)
!8818 = !DILocation(line: 236, column: 11, scope: !8337)
!8819 = !DILocation(line: 236, column: 15, scope: !8337)
!8820 = !DILocation(line: 242, column: 5, scope: !8337)
!8821 = !DILocation(line: 243, column: 5, scope: !8337)
!8822 = !DILocation(line: 243, column: 29, scope: !8337)
!8823 = !DILocation(line: 244, column: 39, scope: !8337)
!8824 = !DILocation(line: 244, column: 20, scope: !8337)
!8825 = !DILocation(line: 244, column: 24, scope: !8337)
!8826 = !DILocation(line: 245, column: 40, scope: !8337)
!8827 = !DILocation(line: 245, column: 20, scope: !8337)
!8828 = !DILocation(line: 245, column: 25, scope: !8337)
!8829 = !DILocation(line: 246, column: 39, scope: !8337)
!8830 = !DILocation(line: 246, column: 20, scope: !8337)
!8831 = !DILocation(line: 246, column: 24, scope: !8337)
!8832 = !DILocation(line: 247, column: 40, scope: !8337)
!8833 = !DILocation(line: 247, column: 20, scope: !8337)
!8834 = !DILocation(line: 247, column: 25, scope: !8337)
!8835 = !DILocation(line: 248, column: 43, scope: !8337)
!8836 = !DILocation(line: 248, column: 20, scope: !8337)
!8837 = !DILocation(line: 248, column: 28, scope: !8337)
!8838 = !DILocation(line: 249, column: 42, scope: !8337)
!8839 = !DILocation(line: 249, column: 20, scope: !8337)
!8840 = !DILocation(line: 249, column: 27, scope: !8337)
!8841 = !DILocation(line: 250, column: 27, scope: !8337)
!8842 = !DILocation(line: 250, column: 20, scope: !8337)
!8843 = !DILocation(line: 250, column: 25, scope: !8337)
!8844 = !DILocation(line: 251, column: 12, scope: !8337)
!8845 = !DILocation(line: 251, column: 10, scope: !8337)
!8846 = !DILocation(line: 252, column: 5, scope: !8337)
!8847 = !DILocation(line: 255, column: 12, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8337, file: !8338, line: 255, column: 5)
!8849 = !DILocation(line: 255, column: 10, scope: !8848)
!8850 = !DILocation(line: 255, column: 17, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8848, file: !8338, line: 255, column: 5)
!8852 = !DILocation(line: 255, column: 21, scope: !8851)
!8853 = !DILocation(line: 255, column: 19, scope: !8851)
!8854 = !DILocation(line: 255, column: 5, scope: !8848)
!8855 = !DILocation(line: 256, column: 5, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8851, file: !8338, line: 255, column: 34)
!8857 = !DILocation(line: 257, column: 27, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8856, file: !8338, line: 257, column: 6)
!8859 = !DILocation(line: 257, column: 6, scope: !8858)
!8860 = !DILocation(line: 257, column: 32, scope: !8858)
!8861 = !DILocation(line: 257, column: 6, scope: !8856)
!8862 = !DILocation(line: 258, column: 48, scope: !8858)
!8863 = !DILocation(line: 258, column: 6, scope: !8858)
!8864 = !DILocation(line: 259, column: 18, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8856, file: !8338, line: 259, column: 6)
!8866 = !DILocation(line: 259, column: 21, scope: !8865)
!8867 = !DILocation(line: 259, column: 24, scope: !8865)
!8868 = !DILocation(line: 259, column: 13, scope: !8865)
!8869 = !DILocation(line: 259, column: 11, scope: !8865)
!8870 = !DILocation(line: 259, column: 48, scope: !8865)
!8871 = !DILocation(line: 259, column: 6, scope: !8856)
!8872 = !DILocation(line: 260, column: 17, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8865, file: !8338, line: 259, column: 55)
!8874 = !DILocation(line: 260, column: 11, scope: !8873)
!8875 = !DILocation(line: 260, column: 9, scope: !8873)
!8876 = !DILocation(line: 261, column: 2, scope: !8873)
!8877 = !DILocation(line: 262, column: 6, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8856, file: !8338, line: 262, column: 6)
!8879 = !DILocation(line: 262, column: 24, scope: !8878)
!8880 = !DILocation(line: 262, column: 6, scope: !8856)
!8881 = !DILocation(line: 263, column: 6, scope: !8878)
!8882 = !DILocation(line: 264, column: 6, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8856, file: !8338, line: 264, column: 6)
!8884 = !DILocation(line: 264, column: 9, scope: !8883)
!8885 = !DILocation(line: 264, column: 13, scope: !8883)
!8886 = !DILocation(line: 264, column: 6, scope: !8856)
!8887 = !DILocation(line: 265, column: 10, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !8338, line: 265, column: 10)
!8889 = distinct !DILexicalBlock(scope: !8883, file: !8338, line: 264, column: 34)
!8890 = !DILocation(line: 265, column: 10, scope: !8889)
!8891 = !DILocation(line: 266, column: 17, scope: !8888)
!8892 = !DILocation(line: 266, column: 20, scope: !8888)
!8893 = !DILocation(line: 266, column: 23, scope: !8888)
!8894 = !DILocation(line: 266, column: 3, scope: !8888)
!8895 = !DILocation(line: 268, column: 12, scope: !8888)
!8896 = !DILocation(line: 268, column: 41, scope: !8888)
!8897 = !DILocation(line: 268, column: 44, scope: !8888)
!8898 = !DILocation(line: 268, column: 47, scope: !8888)
!8899 = !DILocation(line: 268, column: 3, scope: !8888)
!8900 = !DILocation(line: 269, column: 15, scope: !8889)
!8901 = !DILocation(line: 269, column: 40, scope: !8889)
!8902 = !DILocation(line: 269, column: 43, scope: !8889)
!8903 = !DILocation(line: 269, column: 46, scope: !8889)
!8904 = !DILocation(line: 269, column: 6, scope: !8889)
!8905 = !DILocation(line: 270, column: 10, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8889, file: !8338, line: 270, column: 10)
!8907 = !DILocation(line: 270, column: 14, scope: !8906)
!8908 = !DILocation(line: 270, column: 10, scope: !8889)
!8909 = !DILocation(line: 271, column: 9, scope: !8906)
!8910 = !DILocation(line: 271, column: 3, scope: !8906)
!8911 = !DILocation(line: 272, column: 6, scope: !8889)
!8912 = !DILocation(line: 274, column: 2, scope: !8856)
!8913 = !DILocation(line: 274, column: 2, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8856, file: !8338, line: 274, column: 2)
!8915 = !DILocation(line: 275, column: 6, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8856, file: !8338, line: 275, column: 6)
!8917 = !DILocation(line: 275, column: 9, scope: !8916)
!8918 = !DILocation(line: 275, column: 12, scope: !8916)
!8919 = !DILocation(line: 275, column: 24, scope: !8916)
!8920 = !DILocation(line: 275, column: 18, scope: !8916)
!8921 = !DILocation(line: 275, column: 32, scope: !8916)
!8922 = !DILocation(line: 275, column: 35, scope: !8916)
!8923 = !DILocation(line: 275, column: 6, scope: !8856)
!8924 = !DILocation(line: 280, column: 6, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8916, file: !8338, line: 275, column: 70)
!8926 = !DILocation(line: 280, column: 6, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8925, file: !8338, line: 280, column: 6)
!8928 = !DILocation(line: 280, column: 6, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8927, file: !8338, line: 280, column: 6)
!8930 = !DILocation(line: 280, column: 6, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8929, file: !8338, line: 280, column: 6)
!8932 = !DILocation(line: 281, column: 10, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8925, file: !8338, line: 281, column: 10)
!8934 = !DILocation(line: 281, column: 10, scope: !8925)
!8935 = !DILocation(line: 282, column: 12, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8933, file: !8338, line: 281, column: 30)
!8937 = !DILocation(line: 282, column: 31, scope: !8936)
!8938 = !DILocation(line: 282, column: 34, scope: !8936)
!8939 = !DILocation(line: 282, column: 37, scope: !8936)
!8940 = !DILocation(line: 282, column: 3, scope: !8936)
!8941 = !DILocation(line: 283, column: 10, scope: !8936)
!8942 = !DILocation(line: 283, column: 13, scope: !8936)
!8943 = !DILocation(line: 283, column: 16, scope: !8936)
!8944 = !DILocation(line: 283, column: 3, scope: !8936)
!8945 = !DILocation(line: 284, column: 9, scope: !8936)
!8946 = !DILocation(line: 284, column: 3, scope: !8936)
!8947 = !DILocation(line: 285, column: 3, scope: !8936)
!8948 = !DILocation(line: 287, column: 2, scope: !8925)
!8949 = !DILocation(line: 288, column: 14, scope: !8856)
!8950 = !DILocation(line: 288, column: 31, scope: !8856)
!8951 = !DILocation(line: 288, column: 37, scope: !8856)
!8952 = !DILocation(line: 288, column: 54, scope: !8856)
!8953 = !DILocation(line: 289, column: 6, scope: !8856)
!8954 = !DILocation(line: 289, column: 23, scope: !8856)
!8955 = !DILocation(line: 289, column: 32, scope: !8856)
!8956 = !DILocation(line: 289, column: 49, scope: !8856)
!8957 = !DILocation(line: 288, column: 2, scope: !8856)
!8958 = !DILocation(line: 290, column: 13, scope: !8856)
!8959 = !DILocation(line: 290, column: 16, scope: !8856)
!8960 = !DILocation(line: 290, column: 19, scope: !8856)
!8961 = !DILocation(line: 290, column: 8, scope: !8856)
!8962 = !DILocation(line: 290, column: 6, scope: !8856)
!8963 = !DILocation(line: 291, column: 37, scope: !8856)
!8964 = !DILocation(line: 292, column: 19, scope: !8856)
!8965 = !DILocation(line: 292, column: 41, scope: !8856)
!8966 = !DILocation(line: 291, column: 2, scope: !8856)
!8967 = !DILocation(line: 293, column: 6, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8856, file: !8338, line: 293, column: 6)
!8969 = !DILocation(line: 293, column: 10, scope: !8968)
!8970 = !DILocation(line: 293, column: 6, scope: !8856)
!8971 = !DILocation(line: 294, column: 14, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8968, file: !8338, line: 293, column: 17)
!8973 = !DILocation(line: 294, column: 42, scope: !8972)
!8974 = !DILocation(line: 294, column: 45, scope: !8972)
!8975 = !DILocation(line: 294, column: 48, scope: !8972)
!8976 = !DILocation(line: 294, column: 6, scope: !8972)
!8977 = !DILocation(line: 295, column: 15, scope: !8972)
!8978 = !DILocation(line: 295, column: 57, scope: !8972)
!8979 = !DILocation(line: 295, column: 60, scope: !8972)
!8980 = !DILocation(line: 295, column: 63, scope: !8972)
!8981 = !DILocation(line: 295, column: 6, scope: !8972)
!8982 = !DILocation(line: 296, column: 12, scope: !8972)
!8983 = !DILocation(line: 296, column: 6, scope: !8972)
!8984 = !DILocation(line: 297, column: 6, scope: !8972)
!8985 = !DILocation(line: 299, column: 2, scope: !8856)
!8986 = !DILocation(line: 299, column: 23, scope: !8856)
!8987 = !DILocation(line: 299, column: 28, scope: !8856)
!8988 = !DILocation(line: 299, column: 18, scope: !8856)
!8989 = !DILocation(line: 299, column: 16, scope: !8856)
!8990 = !DILocation(line: 299, column: 47, scope: !8856)
!8991 = !DILocation(line: 300, column: 28, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !8338, line: 300, column: 10)
!8993 = distinct !DILexicalBlock(scope: !8856, file: !8338, line: 299, column: 52)
!8994 = !DILocation(line: 300, column: 33, scope: !8992)
!8995 = !DILocation(line: 300, column: 38, scope: !8992)
!8996 = !DILocation(line: 300, column: 22, scope: !8992)
!8997 = !DILocation(line: 300, column: 20, scope: !8992)
!8998 = !DILocation(line: 300, column: 49, scope: !8992)
!8999 = !DILocation(line: 300, column: 46, scope: !8992)
!9000 = !DILocation(line: 300, column: 10, scope: !8993)
!9001 = !DILocation(line: 301, column: 7, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !8338, line: 301, column: 7)
!9003 = distinct !DILexicalBlock(scope: !8992, file: !8338, line: 300, column: 56)
!9004 = !DILocation(line: 301, column: 16, scope: !9002)
!9005 = !DILocation(line: 301, column: 7, scope: !9003)
!9006 = !DILocation(line: 302, column: 21, scope: !9002)
!9007 = !DILocation(line: 302, column: 24, scope: !9002)
!9008 = !DILocation(line: 302, column: 27, scope: !9002)
!9009 = !DILocation(line: 302, column: 7, scope: !9002)
!9010 = !DILocation(line: 304, column: 16, scope: !9002)
!9011 = !DILocation(line: 304, column: 38, scope: !9002)
!9012 = !DILocation(line: 304, column: 41, scope: !9002)
!9013 = !DILocation(line: 304, column: 44, scope: !9002)
!9014 = !DILocation(line: 304, column: 7, scope: !9002)
!9015 = !DILocation(line: 305, column: 3, scope: !9003)
!9016 = distinct !{!9016, !8985, !9017}
!9017 = !DILocation(line: 307, column: 2, scope: !8856)
!9018 = !DILocation(line: 308, column: 6, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !8856, file: !8338, line: 308, column: 6)
!9020 = !DILocation(line: 308, column: 12, scope: !9019)
!9021 = !DILocation(line: 308, column: 6, scope: !8856)
!9022 = !DILocation(line: 310, column: 13, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9019, file: !8338, line: 308, column: 18)
!9024 = !DILocation(line: 310, column: 16, scope: !9023)
!9025 = !DILocation(line: 310, column: 19, scope: !9023)
!9026 = !DILocation(line: 310, column: 6, scope: !9023)
!9027 = !DILocation(line: 311, column: 2, scope: !9023)
!9028 = !DILocation(line: 311, column: 13, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9019, file: !8338, line: 311, column: 13)
!9030 = !DILocation(line: 311, column: 19, scope: !9029)
!9031 = !DILocation(line: 311, column: 13, scope: !9019)
!9032 = !DILocation(line: 312, column: 14, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9029, file: !8338, line: 311, column: 24)
!9034 = !DILocation(line: 312, column: 6, scope: !9033)
!9035 = !DILocation(line: 313, column: 15, scope: !9033)
!9036 = !DILocation(line: 313, column: 57, scope: !9033)
!9037 = !DILocation(line: 313, column: 60, scope: !9033)
!9038 = !DILocation(line: 313, column: 63, scope: !9033)
!9039 = !DILocation(line: 313, column: 6, scope: !9033)
!9040 = !DILocation(line: 314, column: 2, scope: !9033)
!9041 = !DILocation(line: 315, column: 14, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9029, file: !8338, line: 314, column: 9)
!9043 = !DILocation(line: 315, column: 42, scope: !9042)
!9044 = !DILocation(line: 315, column: 45, scope: !9042)
!9045 = !DILocation(line: 315, column: 48, scope: !9042)
!9046 = !DILocation(line: 315, column: 6, scope: !9042)
!9047 = !DILocation(line: 316, column: 15, scope: !9042)
!9048 = !DILocation(line: 316, column: 57, scope: !9042)
!9049 = !DILocation(line: 316, column: 60, scope: !9042)
!9050 = !DILocation(line: 316, column: 63, scope: !9042)
!9051 = !DILocation(line: 316, column: 6, scope: !9042)
!9052 = !DILocation(line: 318, column: 8, scope: !8856)
!9053 = !DILocation(line: 318, column: 2, scope: !8856)
!9054 = !DILocation(line: 319, column: 5, scope: !8856)
!9055 = !DILocation(line: 255, column: 30, scope: !8851)
!9056 = !DILocation(line: 255, column: 5, scope: !8851)
!9057 = distinct !{!9057, !8854, !9058}
!9058 = !DILocation(line: 319, column: 5, scope: !8848)
!9059 = !DILocation(line: 321, column: 12, scope: !8337)
!9060 = !DILocation(line: 321, column: 5, scope: !8337)
!9061 = !DILabel(scope: !8337, name: "cleanup", file: !8338, line: 322)
!9062 = !DILocation(line: 322, column: 1, scope: !8337)
!9063 = !DILocation(line: 324, column: 12, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !8337, file: !8338, line: 324, column: 5)
!9065 = !DILocation(line: 324, column: 10, scope: !9064)
!9066 = !DILocation(line: 324, column: 17, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9064, file: !8338, line: 324, column: 5)
!9068 = !DILocation(line: 324, column: 21, scope: !9067)
!9069 = !DILocation(line: 324, column: 19, scope: !9067)
!9070 = !DILocation(line: 324, column: 5, scope: !9064)
!9071 = !DILocation(line: 325, column: 6, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !8338, line: 325, column: 6)
!9073 = distinct !DILexicalBlock(scope: !9067, file: !8338, line: 324, column: 34)
!9074 = !DILocation(line: 325, column: 9, scope: !9072)
!9075 = !DILocation(line: 325, column: 12, scope: !9072)
!9076 = !DILocation(line: 325, column: 18, scope: !9072)
!9077 = !DILocation(line: 325, column: 6, scope: !9073)
!9078 = !DILocation(line: 326, column: 13, scope: !9072)
!9079 = !DILocation(line: 326, column: 16, scope: !9072)
!9080 = !DILocation(line: 326, column: 19, scope: !9072)
!9081 = !DILocation(line: 326, column: 6, scope: !9072)
!9082 = !DILocation(line: 327, column: 5, scope: !9073)
!9083 = !DILocation(line: 324, column: 30, scope: !9067)
!9084 = !DILocation(line: 324, column: 5, scope: !9067)
!9085 = distinct !{!9085, !9070, !9086}
!9086 = !DILocation(line: 327, column: 5, scope: !9064)
!9087 = !DILocation(line: 328, column: 5, scope: !8337)
!9088 = !DILocation(line: 329, column: 1, scope: !8337)
!9089 = distinct !DISubprogram(name: "switch_user", scope: !8338, file: !8338, line: 58, type: !9090, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !919, retainedNodes: !176)
!9090 = !DISubroutineType(types: !9091)
!9091 = !{null, !550, !548, !33, !711}
!9092 = !DILocalVariable(name: "euid", arg: 1, scope: !9089, file: !8338, line: 58, type: !550)
!9093 = !DILocation(line: 58, column: 19, scope: !9089)
!9094 = !DILocalVariable(name: "egid", arg: 2, scope: !9089, file: !8338, line: 58, type: !548)
!9095 = !DILocation(line: 58, column: 31, scope: !9089)
!9096 = !DILocalVariable(name: "ngroups", arg: 3, scope: !9089, file: !8338, line: 58, type: !33)
!9097 = !DILocation(line: 58, column: 41, scope: !9089)
!9098 = !DILocalVariable(name: "groups", arg: 4, scope: !9089, file: !8338, line: 58, type: !711)
!9099 = !DILocation(line: 58, column: 63, scope: !9089)
!9100 = !DILocalVariable(name: "serrno", scope: !9089, file: !8338, line: 60, type: !33)
!9101 = !DILocation(line: 60, column: 9, scope: !9089)
!9102 = !DILocation(line: 60, column: 18, scope: !9089)
!9103 = !DILocation(line: 63, column: 9, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9089, file: !8338, line: 63, column: 9)
!9105 = !DILocation(line: 63, column: 14, scope: !9104)
!9106 = !DILocation(line: 63, column: 9, scope: !9089)
!9107 = !DILocation(line: 64, column: 6, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9109, file: !8338, line: 64, column: 6)
!9109 = distinct !DILexicalBlock(scope: !9104, file: !8338, line: 63, column: 27)
!9110 = !DILocation(line: 64, column: 24, scope: !9108)
!9111 = !DILocation(line: 64, column: 6, scope: !9109)
!9112 = !DILocation(line: 65, column: 6, scope: !9108)
!9113 = !DILocation(line: 66, column: 5, scope: !9109)
!9114 = !DILocation(line: 67, column: 17, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9089, file: !8338, line: 67, column: 9)
!9116 = !DILocation(line: 67, column: 9, scope: !9115)
!9117 = !DILocation(line: 67, column: 23, scope: !9115)
!9118 = !DILocation(line: 67, column: 9, scope: !9089)
!9119 = !DILocation(line: 68, column: 31, scope: !9115)
!9120 = !DILocation(line: 68, column: 2, scope: !9115)
!9121 = !DILocation(line: 69, column: 9, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9089, file: !8338, line: 69, column: 9)
!9123 = !DILocation(line: 69, column: 17, scope: !9122)
!9124 = !DILocation(line: 69, column: 9, scope: !9089)
!9125 = !DILocation(line: 70, column: 21, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9127, file: !8338, line: 70, column: 6)
!9127 = distinct !DILexicalBlock(scope: !9122, file: !8338, line: 69, column: 24)
!9128 = !DILocation(line: 70, column: 30, scope: !9126)
!9129 = !DILocation(line: 70, column: 6, scope: !9126)
!9130 = !DILocation(line: 70, column: 38, scope: !9126)
!9131 = !DILocation(line: 70, column: 6, scope: !9127)
!9132 = !DILocation(line: 71, column: 6, scope: !9126)
!9133 = !DILocation(line: 72, column: 5, scope: !9127)
!9134 = !DILocation(line: 73, column: 9, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9089, file: !8338, line: 73, column: 9)
!9136 = !DILocation(line: 73, column: 14, scope: !9135)
!9137 = !DILocation(line: 73, column: 9, scope: !9089)
!9138 = !DILocation(line: 74, column: 14, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !8338, line: 74, column: 6)
!9140 = distinct !DILexicalBlock(scope: !9135, file: !8338, line: 73, column: 27)
!9141 = !DILocation(line: 74, column: 6, scope: !9139)
!9142 = !DILocation(line: 74, column: 20, scope: !9139)
!9143 = !DILocation(line: 74, column: 6, scope: !9140)
!9144 = !DILocation(line: 75, column: 35, scope: !9139)
!9145 = !DILocation(line: 75, column: 6, scope: !9139)
!9146 = !DILocation(line: 76, column: 5, scope: !9140)
!9147 = !DILocation(line: 78, column: 13, scope: !9089)
!9148 = !DILocation(line: 78, column: 5, scope: !9089)
!9149 = !DILocation(line: 78, column: 11, scope: !9089)
!9150 = !DILocation(line: 79, column: 1, scope: !9089)
!9151 = !DILocalVariable(name: "prompt", arg: 1, scope: !723, file: !724, line: 74, type: !221)
!9152 = !DILocation(line: 74, column: 22, scope: !723)
!9153 = !DILocalVariable(name: "timeout", arg: 2, scope: !723, file: !724, line: 74, type: !33)
!9154 = !DILocation(line: 74, column: 34, scope: !723)
!9155 = !DILocalVariable(name: "flags", arg: 3, scope: !723, file: !724, line: 74, type: !33)
!9156 = !DILocation(line: 74, column: 47, scope: !723)
!9157 = !DILocalVariable(name: "sa", scope: !723, file: !724, line: 76, type: !9158)
!9158 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigaction_t", file: !61, line: 162, baseType: !9159)
!9159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !63, line: 27, size: 1216, elements: !9160)
!9160 = !{!9161, !9236, !9241, !9242}
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !9159, file: !63, line: 38, baseType: !9162, size: 64)
!9162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9159, file: !63, line: 31, size: 64, elements: !9163)
!9163 = !{!9164, !9165}
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !9162, file: !63, line: 34, baseType: !69, size: 64)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !9162, file: !63, line: 36, baseType: !9166, size: 64)
!9166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9167, size: 64)
!9167 = !DISubroutineType(types: !9168)
!9168 = !{null, !33, !9169, !19}
!9169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9170, size: 64)
!9170 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !80, line: 124, baseType: !9171)
!9171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !80, line: 36, size: 1024, elements: !9172)
!9172 = !{!9173, !9174, !9175, !9176, !9177}
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !9171, file: !80, line: 38, baseType: !33, size: 32)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !9171, file: !80, line: 40, baseType: !33, size: 32, offset: 32)
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !9171, file: !80, line: 42, baseType: !33, size: 32, offset: 64)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !9171, file: !80, line: 48, baseType: !33, size: 32, offset: 96)
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !9171, file: !80, line: 123, baseType: !9178, size: 896, offset: 128)
!9178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9171, file: !80, line: 51, size: 896, elements: !9179)
!9179 = !{!9180, !9181, !9186, !9197, !9203, !9211, !9225, !9230}
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !9178, file: !80, line: 53, baseType: !91, size: 896)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !9178, file: !80, line: 60, baseType: !9182, size: 64)
!9182 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9178, file: !80, line: 56, size: 64, elements: !9183)
!9183 = !{!9184, !9185}
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !9182, file: !80, line: 58, baseType: !37, size: 32)
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !9182, file: !80, line: 59, baseType: !99, size: 32, offset: 32)
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !9178, file: !80, line: 68, baseType: !9187, size: 128)
!9187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9178, file: !80, line: 63, size: 128, elements: !9188)
!9188 = !{!9189, !9190, !9191}
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !9187, file: !80, line: 65, baseType: !33, size: 32)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !9187, file: !80, line: 66, baseType: !33, size: 32, offset: 32)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !9187, file: !80, line: 67, baseType: !9192, size: 64, offset: 64)
!9192 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigval_t", file: !107, line: 30, baseType: !9193)
!9193 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !107, line: 24, size: 64, elements: !9194)
!9194 = !{!9195, !9196}
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !9193, file: !107, line: 26, baseType: !33, size: 32)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !9193, file: !107, line: 27, baseType: !19, size: 64)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !9178, file: !80, line: 76, baseType: !9198, size: 128)
!9198 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9178, file: !80, line: 71, size: 128, elements: !9199)
!9199 = !{!9200, !9201, !9202}
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !9198, file: !80, line: 73, baseType: !37, size: 32)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !9198, file: !80, line: 74, baseType: !99, size: 32, offset: 32)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !9198, file: !80, line: 75, baseType: !9192, size: 64, offset: 64)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !9178, file: !80, line: 86, baseType: !9204, size: 256)
!9204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9178, file: !80, line: 79, size: 256, elements: !9205)
!9205 = !{!9206, !9207, !9208, !9209, !9210}
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !9204, file: !80, line: 81, baseType: !37, size: 32)
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !9204, file: !80, line: 82, baseType: !99, size: 32, offset: 32)
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !9204, file: !80, line: 83, baseType: !33, size: 32, offset: 64)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !9204, file: !80, line: 84, baseType: !125, size: 64, offset: 128)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !9204, file: !80, line: 85, baseType: !125, size: 64, offset: 192)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !9178, file: !80, line: 105, baseType: !9212, size: 256)
!9212 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9178, file: !80, line: 89, size: 256, elements: !9213)
!9213 = !{!9214, !9215, !9216}
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !9212, file: !80, line: 91, baseType: !19, size: 64)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !9212, file: !80, line: 93, baseType: !132, size: 16, offset: 64)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "_bounds", scope: !9212, file: !80, line: 104, baseType: !9217, size: 128, offset: 128)
!9217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9212, file: !80, line: 94, size: 128, elements: !9218)
!9218 = !{!9219, !9224}
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !9217, file: !80, line: 101, baseType: !9220, size: 128)
!9220 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9217, file: !80, line: 97, size: 128, elements: !9221)
!9221 = !{!9222, !9223}
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !9220, file: !80, line: 99, baseType: !19, size: 64)
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !9220, file: !80, line: 100, baseType: !19, size: 64, offset: 64)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !9217, file: !80, line: 103, baseType: !142, size: 32)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !9178, file: !80, line: 112, baseType: !9226, size: 128)
!9226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9178, file: !80, line: 108, size: 128, elements: !9227)
!9227 = !{!9228, !9229}
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !9226, file: !80, line: 110, baseType: !30, size: 64)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !9226, file: !80, line: 111, baseType: !33, size: 32, offset: 64)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !9178, file: !80, line: 121, baseType: !9231, size: 128)
!9231 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9178, file: !80, line: 116, size: 128, elements: !9232)
!9232 = !{!9233, !9234, !9235}
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !9231, file: !80, line: 118, baseType: !19, size: 64)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !9231, file: !80, line: 119, baseType: !33, size: 32, offset: 64)
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !9231, file: !80, line: 120, baseType: !7, size: 32, offset: 96)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !9159, file: !63, line: 46, baseType: !9237, size: 1024, offset: 64)
!9237 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !156, line: 8, baseType: !9238)
!9238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !156, line: 5, size: 1024, elements: !9239)
!9239 = !{!9240}
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !9238, file: !156, line: 7, baseType: !160, size: 1024)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !9159, file: !63, line: 49, baseType: !33, size: 32, offset: 1088)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !9159, file: !63, line: 52, baseType: !164, size: 64, offset: 1152)
!9243 = !DILocation(line: 76, column: 17, scope: !723)
!9244 = !DILocalVariable(name: "savealrm", scope: !723, file: !724, line: 76, type: !9158)
!9245 = !DILocation(line: 76, column: 21, scope: !723)
!9246 = !DILocalVariable(name: "saveint", scope: !723, file: !724, line: 76, type: !9158)
!9247 = !DILocation(line: 76, column: 31, scope: !723)
!9248 = !DILocalVariable(name: "savehup", scope: !723, file: !724, line: 76, type: !9158)
!9249 = !DILocation(line: 76, column: 40, scope: !723)
!9250 = !DILocalVariable(name: "savequit", scope: !723, file: !724, line: 76, type: !9158)
!9251 = !DILocation(line: 76, column: 49, scope: !723)
!9252 = !DILocalVariable(name: "saveterm", scope: !723, file: !724, line: 76, type: !9158)
!9253 = !DILocation(line: 76, column: 59, scope: !723)
!9254 = !DILocalVariable(name: "savetstp", scope: !723, file: !724, line: 77, type: !9158)
!9255 = !DILocation(line: 77, column: 17, scope: !723)
!9256 = !DILocalVariable(name: "savettin", scope: !723, file: !724, line: 77, type: !9158)
!9257 = !DILocation(line: 77, column: 27, scope: !723)
!9258 = !DILocalVariable(name: "savettou", scope: !723, file: !724, line: 77, type: !9158)
!9259 = !DILocation(line: 77, column: 37, scope: !723)
!9260 = !DILocalVariable(name: "savepipe", scope: !723, file: !724, line: 77, type: !9158)
!9261 = !DILocation(line: 77, column: 47, scope: !723)
!9262 = !DILocalVariable(name: "pass", scope: !723, file: !724, line: 78, type: !20)
!9263 = !DILocation(line: 78, column: 11, scope: !723)
!9264 = !DILocalVariable(name: "i", scope: !723, file: !724, line: 81, type: !33)
!9265 = !DILocation(line: 81, column: 9, scope: !723)
!9266 = !DILocalVariable(name: "input", scope: !723, file: !724, line: 81, type: !33)
!9267 = !DILocation(line: 81, column: 12, scope: !723)
!9268 = !DILocalVariable(name: "output", scope: !723, file: !724, line: 81, type: !33)
!9269 = !DILocation(line: 81, column: 19, scope: !723)
!9270 = !DILocalVariable(name: "save_errno", scope: !723, file: !724, line: 81, type: !33)
!9271 = !DILocation(line: 81, column: 27, scope: !723)
!9272 = !DILocalVariable(name: "neednl", scope: !723, file: !724, line: 81, type: !33)
!9273 = !DILocation(line: 81, column: 39, scope: !723)
!9274 = !DILocalVariable(name: "need_restart", scope: !723, file: !724, line: 81, type: !33)
!9275 = !DILocation(line: 81, column: 51, scope: !723)
!9276 = !DILocation(line: 83, column: 19, scope: !723)
!9277 = !DILocation(line: 83, column: 12, scope: !723)
!9278 = !DILocation(line: 85, column: 9, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !723, file: !724, line: 85, column: 9)
!9280 = !DILocation(line: 85, column: 17, scope: !9279)
!9281 = !DILocation(line: 85, column: 9, scope: !723)
!9282 = !DILocation(line: 86, column: 12, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9279, file: !724, line: 85, column: 26)
!9284 = !DILocation(line: 86, column: 10, scope: !9283)
!9285 = !DILocation(line: 87, column: 6, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9283, file: !724, line: 87, column: 6)
!9287 = !DILocation(line: 87, column: 14, scope: !9286)
!9288 = !DILocation(line: 87, column: 22, scope: !9286)
!9289 = !DILocation(line: 87, column: 26, scope: !9286)
!9290 = !DILocation(line: 87, column: 25, scope: !9286)
!9291 = !DILocation(line: 87, column: 34, scope: !9286)
!9292 = !DILocation(line: 87, column: 6, scope: !9283)
!9293 = !DILocation(line: 88, column: 16, scope: !9286)
!9294 = !DILocation(line: 88, column: 14, scope: !9286)
!9295 = !DILocation(line: 88, column: 6, scope: !9286)
!9296 = !DILocation(line: 89, column: 5, scope: !9283)
!9297 = !DILocation(line: 92, column: 10, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !723, file: !724, line: 92, column: 9)
!9299 = !DILocation(line: 92, column: 70, scope: !9298)
!9300 = !DILocation(line: 93, column: 3, scope: !9298)
!9301 = !DILocation(line: 92, column: 9, scope: !723)
!9302 = !DILocation(line: 94, column: 6, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9304, file: !724, line: 94, column: 6)
!9304 = distinct !DILexicalBlock(scope: !9298, file: !724, line: 93, column: 18)
!9305 = !DILocation(line: 94, column: 14, scope: !9303)
!9306 = !DILocation(line: 94, column: 22, scope: !9303)
!9307 = !DILocation(line: 94, column: 25, scope: !9303)
!9308 = !DILocation(line: 94, column: 43, scope: !9303)
!9309 = !DILocation(line: 94, column: 6, scope: !9304)
!9310 = !DILocation(line: 95, column: 15, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9303, file: !724, line: 94, column: 52)
!9312 = !DILocation(line: 95, column: 6, scope: !9311)
!9313 = !DILocation(line: 96, column: 6, scope: !9311)
!9314 = !DILocation(line: 98, column: 2, scope: !9304)
!9315 = !DILocation(line: 99, column: 5, scope: !9304)
!9316 = !DILocation(line: 102, column: 9, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !723, file: !724, line: 102, column: 9)
!9318 = !DILocation(line: 102, column: 9, scope: !723)
!9319 = !DILocation(line: 103, column: 6, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9321, file: !724, line: 103, column: 6)
!9321 = distinct !DILexicalBlock(scope: !9317, file: !724, line: 102, column: 36)
!9322 = !DILocation(line: 103, column: 14, scope: !9320)
!9323 = !DILocation(line: 103, column: 22, scope: !9320)
!9324 = !DILocation(line: 103, column: 26, scope: !9320)
!9325 = !DILocation(line: 103, column: 25, scope: !9320)
!9326 = !DILocation(line: 103, column: 34, scope: !9320)
!9327 = !DILocation(line: 103, column: 6, scope: !9321)
!9328 = !DILocation(line: 104, column: 16, scope: !9320)
!9329 = !DILocation(line: 104, column: 6, scope: !9320)
!9330 = !DILocation(line: 105, column: 22, scope: !9321)
!9331 = !DILocation(line: 105, column: 31, scope: !9321)
!9332 = !DILocation(line: 105, column: 9, scope: !9321)
!9333 = !DILocation(line: 105, column: 2, scope: !9321)
!9334 = !DILabel(scope: !723, name: "restart", file: !724, line: 108)
!9335 = !DILocation(line: 108, column: 1, scope: !723)
!9336 = !DILocation(line: 109, column: 12, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !723, file: !724, line: 109, column: 5)
!9338 = !DILocation(line: 109, column: 10, scope: !9337)
!9339 = !DILocation(line: 109, column: 17, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9337, file: !724, line: 109, column: 5)
!9341 = !DILocation(line: 109, column: 19, scope: !9340)
!9342 = !DILocation(line: 109, column: 5, scope: !9337)
!9343 = !DILocation(line: 110, column: 8, scope: !9340)
!9344 = !DILocation(line: 110, column: 2, scope: !9340)
!9345 = !DILocation(line: 110, column: 11, scope: !9340)
!9346 = !DILocation(line: 109, column: 28, scope: !9340)
!9347 = !DILocation(line: 109, column: 5, scope: !9340)
!9348 = distinct !{!9348, !9342, !9349}
!9349 = !DILocation(line: 110, column: 13, scope: !9337)
!9350 = !DILocation(line: 111, column: 10, scope: !723)
!9351 = !DILocation(line: 112, column: 16, scope: !723)
!9352 = !DILocation(line: 113, column: 18, scope: !723)
!9353 = !DILocation(line: 115, column: 9, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !723, file: !724, line: 115, column: 9)
!9355 = !DILocation(line: 115, column: 33, scope: !9354)
!9356 = !DILocation(line: 116, column: 20, scope: !9354)
!9357 = !DILocation(line: 116, column: 18, scope: !9354)
!9358 = !DILocation(line: 116, column: 9, scope: !9354)
!9359 = !DILocation(line: 116, column: 54, scope: !9354)
!9360 = !DILocation(line: 115, column: 9, scope: !723)
!9361 = !DILocation(line: 117, column: 8, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9354, file: !724, line: 116, column: 61)
!9363 = !DILocation(line: 118, column: 9, scope: !9362)
!9364 = !DILocation(line: 119, column: 5, scope: !9362)
!9365 = !DILocation(line: 125, column: 10, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !723, file: !724, line: 125, column: 9)
!9367 = !DILocation(line: 125, column: 9, scope: !723)
!9368 = !DILocation(line: 126, column: 6, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !724, line: 126, column: 6)
!9370 = distinct !DILexicalBlock(scope: !9366, file: !724, line: 125, column: 34)
!9371 = !DILocation(line: 126, column: 6, scope: !9370)
!9372 = !DILocation(line: 127, column: 27, scope: !9369)
!9373 = !DILocation(line: 127, column: 15, scope: !9369)
!9374 = !DILocation(line: 127, column: 13, scope: !9369)
!9375 = !DILocation(line: 127, column: 6, scope: !9369)
!9376 = !DILocation(line: 129, column: 27, scope: !9369)
!9377 = !DILocation(line: 129, column: 15, scope: !9369)
!9378 = !DILocation(line: 129, column: 13, scope: !9369)
!9379 = !DILocation(line: 130, column: 5, scope: !9370)
!9380 = !DILocation(line: 136, column: 16, scope: !723)
!9381 = !DILocation(line: 136, column: 5, scope: !723)
!9382 = !DILocation(line: 137, column: 21, scope: !723)
!9383 = !DILocation(line: 137, column: 5, scope: !723)
!9384 = !DILocation(line: 138, column: 8, scope: !723)
!9385 = !DILocation(line: 138, column: 17, scope: !723)
!9386 = !DILocation(line: 139, column: 8, scope: !723)
!9387 = !DILocation(line: 139, column: 19, scope: !723)
!9388 = !DILocation(line: 140, column: 12, scope: !723)
!9389 = !DILocation(line: 141, column: 12, scope: !723)
!9390 = !DILocation(line: 142, column: 12, scope: !723)
!9391 = !DILocation(line: 143, column: 12, scope: !723)
!9392 = !DILocation(line: 144, column: 12, scope: !723)
!9393 = !DILocation(line: 145, column: 12, scope: !723)
!9394 = !DILocation(line: 146, column: 12, scope: !723)
!9395 = !DILocation(line: 147, column: 12, scope: !723)
!9396 = !DILocation(line: 150, column: 8, scope: !723)
!9397 = !DILocation(line: 150, column: 19, scope: !723)
!9398 = !DILocation(line: 151, column: 12, scope: !723)
!9399 = !DILocation(line: 153, column: 9, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !723, file: !724, line: 153, column: 9)
!9401 = !DILocation(line: 153, column: 9, scope: !723)
!9402 = !DILocation(line: 154, column: 12, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !724, line: 154, column: 6)
!9404 = distinct !DILexicalBlock(scope: !9400, file: !724, line: 153, column: 17)
!9405 = !DILocation(line: 154, column: 20, scope: !9403)
!9406 = !DILocation(line: 154, column: 35, scope: !9403)
!9407 = !DILocation(line: 154, column: 28, scope: !9403)
!9408 = !DILocation(line: 154, column: 6, scope: !9403)
!9409 = !DILocation(line: 154, column: 44, scope: !9403)
!9410 = !DILocation(line: 154, column: 6, scope: !9404)
!9411 = !DILocation(line: 155, column: 6, scope: !9403)
!9412 = !DILocation(line: 156, column: 5, scope: !9404)
!9413 = !DILocation(line: 158, column: 9, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !723, file: !724, line: 158, column: 9)
!9415 = !DILocation(line: 158, column: 17, scope: !9414)
!9416 = !DILocation(line: 158, column: 9, scope: !723)
!9417 = !DILocation(line: 159, column: 8, scope: !9414)
!9418 = !DILocation(line: 159, column: 2, scope: !9414)
!9419 = !DILocation(line: 160, column: 18, scope: !723)
!9420 = !DILocation(line: 160, column: 43, scope: !723)
!9421 = !DILocation(line: 160, column: 12, scope: !723)
!9422 = !DILocation(line: 160, column: 10, scope: !723)
!9423 = !DILocation(line: 161, column: 5, scope: !723)
!9424 = !DILocation(line: 162, column: 18, scope: !723)
!9425 = !DILocation(line: 162, column: 16, scope: !723)
!9426 = !DILocation(line: 164, column: 9, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !723, file: !724, line: 164, column: 9)
!9428 = !DILocation(line: 164, column: 16, scope: !9427)
!9429 = !DILocation(line: 164, column: 19, scope: !9427)
!9430 = !DILocation(line: 164, column: 24, scope: !9427)
!9431 = !DILocation(line: 164, column: 9, scope: !723)
!9432 = !DILocation(line: 165, column: 12, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9434, file: !724, line: 165, column: 6)
!9434 = distinct !DILexicalBlock(scope: !9427, file: !724, line: 164, column: 33)
!9435 = !DILocation(line: 165, column: 6, scope: !9433)
!9436 = !DILocation(line: 165, column: 29, scope: !9433)
!9437 = !DILocation(line: 165, column: 6, scope: !9434)
!9438 = !DILocation(line: 166, column: 6, scope: !9433)
!9439 = !DILocation(line: 167, column: 5, scope: !9434)
!9440 = !DILocation(line: 164, column: 27, scope: !9427)
!9441 = !DILabel(scope: !723, name: "restore", file: !724, line: 169)
!9442 = !DILocation(line: 169, column: 1, scope: !723)
!9443 = !DILocation(line: 171, column: 10, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !723, file: !724, line: 171, column: 9)
!9445 = !DILocation(line: 171, column: 9, scope: !723)
!9446 = !DILocation(line: 172, column: 15, scope: !9444)
!9447 = !DILocation(line: 172, column: 2, scope: !9444)
!9448 = !DILocation(line: 173, column: 12, scope: !723)
!9449 = !DILocation(line: 174, column: 12, scope: !723)
!9450 = !DILocation(line: 175, column: 12, scope: !723)
!9451 = !DILocation(line: 176, column: 12, scope: !723)
!9452 = !DILocation(line: 177, column: 12, scope: !723)
!9453 = !DILocation(line: 178, column: 12, scope: !723)
!9454 = !DILocation(line: 179, column: 12, scope: !723)
!9455 = !DILocation(line: 180, column: 12, scope: !723)
!9456 = !DILocation(line: 181, column: 12, scope: !723)
!9457 = !DILocation(line: 182, column: 9, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !723, file: !724, line: 182, column: 9)
!9459 = !DILocation(line: 182, column: 15, scope: !9458)
!9460 = !DILocation(line: 182, column: 9, scope: !723)
!9461 = !DILocation(line: 183, column: 15, scope: !9458)
!9462 = !DILocation(line: 183, column: 9, scope: !9458)
!9463 = !DILocation(line: 183, column: 2, scope: !9458)
!9464 = !DILocation(line: 189, column: 12, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !723, file: !724, line: 189, column: 5)
!9466 = !DILocation(line: 189, column: 10, scope: !9465)
!9467 = !DILocation(line: 189, column: 17, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9465, file: !724, line: 189, column: 5)
!9469 = !DILocation(line: 189, column: 19, scope: !9468)
!9470 = !DILocation(line: 189, column: 5, scope: !9465)
!9471 = !DILocation(line: 190, column: 12, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9473, file: !724, line: 190, column: 6)
!9473 = distinct !DILexicalBlock(scope: !9468, file: !724, line: 189, column: 32)
!9474 = !DILocation(line: 190, column: 6, scope: !9472)
!9475 = !DILocation(line: 190, column: 6, scope: !9473)
!9476 = !DILocation(line: 191, column: 11, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9472, file: !724, line: 190, column: 16)
!9478 = !DILocation(line: 191, column: 21, scope: !9477)
!9479 = !DILocation(line: 191, column: 6, scope: !9477)
!9480 = !DILocation(line: 192, column: 14, scope: !9477)
!9481 = !DILocation(line: 192, column: 6, scope: !9477)
!9482 = !DILocation(line: 196, column: 20, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9477, file: !724, line: 192, column: 17)
!9484 = !DILocation(line: 197, column: 7, scope: !9483)
!9485 = !DILocation(line: 199, column: 2, scope: !9477)
!9486 = !DILocation(line: 200, column: 5, scope: !9473)
!9487 = !DILocation(line: 189, column: 28, scope: !9468)
!9488 = !DILocation(line: 189, column: 5, scope: !9468)
!9489 = distinct !{!9489, !9470, !9490}
!9490 = !DILocation(line: 200, column: 5, scope: !9465)
!9491 = !DILocation(line: 201, column: 9, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !723, file: !724, line: 201, column: 9)
!9493 = !DILocation(line: 201, column: 9, scope: !723)
!9494 = !DILocation(line: 202, column: 2, scope: !9492)
!9495 = !DILocation(line: 204, column: 9, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !723, file: !724, line: 204, column: 9)
!9497 = !DILocation(line: 204, column: 9, scope: !723)
!9498 = !DILocation(line: 205, column: 10, scope: !9496)
!9499 = !DILocation(line: 205, column: 2, scope: !9496)
!9500 = !DILocation(line: 205, column: 8, scope: !9496)
!9501 = !DILocation(line: 206, column: 12, scope: !723)
!9502 = !DILocation(line: 206, column: 5, scope: !723)
!9503 = !DILocation(line: 207, column: 1, scope: !723)
!9504 = distinct !DISubprogram(name: "tty_present", scope: !724, file: !724, line: 326, type: !623, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !717, retainedNodes: !176)
!9505 = !DILocalVariable(name: "fd", scope: !9504, file: !724, line: 328, type: !33)
!9506 = !DILocation(line: 328, column: 9, scope: !9504)
!9507 = !DILocation(line: 330, column: 15, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9504, file: !724, line: 330, column: 9)
!9509 = !DILocation(line: 330, column: 13, scope: !9508)
!9510 = !DILocation(line: 330, column: 49, scope: !9508)
!9511 = !DILocation(line: 330, column: 9, scope: !9504)
!9512 = !DILocation(line: 331, column: 8, scope: !9508)
!9513 = !DILocation(line: 331, column: 2, scope: !9508)
!9514 = !DILocation(line: 332, column: 12, scope: !9504)
!9515 = !DILocation(line: 332, column: 15, scope: !9504)
!9516 = !DILocation(line: 332, column: 5, scope: !9504)
!9517 = !DILocalVariable(name: "askpass", arg: 1, scope: !743, file: !724, line: 213, type: !221)
!9518 = !DILocation(line: 213, column: 26, scope: !743)
!9519 = !DILocalVariable(name: "prompt", arg: 2, scope: !743, file: !724, line: 213, type: !221)
!9520 = !DILocation(line: 213, column: 47, scope: !743)
!9521 = !DILocalVariable(name: "sa", scope: !743, file: !724, line: 216, type: !9158)
!9522 = !DILocation(line: 216, column: 17, scope: !743)
!9523 = !DILocalVariable(name: "saved_sa_pipe", scope: !743, file: !724, line: 216, type: !9158)
!9524 = !DILocation(line: 216, column: 21, scope: !743)
!9525 = !DILocalVariable(name: "pfd", scope: !743, file: !724, line: 217, type: !169)
!9526 = !DILocation(line: 217, column: 9, scope: !743)
!9527 = !DILocalVariable(name: "pid", scope: !743, file: !724, line: 218, type: !35)
!9528 = !DILocation(line: 218, column: 11, scope: !743)
!9529 = !DILocation(line: 220, column: 14, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !743, file: !724, line: 220, column: 9)
!9531 = !DILocation(line: 220, column: 9, scope: !9530)
!9532 = !DILocation(line: 220, column: 19, scope: !9530)
!9533 = !DILocation(line: 220, column: 9, scope: !743)
!9534 = !DILocation(line: 221, column: 11, scope: !9530)
!9535 = !DILocation(line: 221, column: 2, scope: !9530)
!9536 = !DILocation(line: 223, column: 16, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !743, file: !724, line: 223, column: 9)
!9538 = !DILocation(line: 223, column: 14, scope: !9537)
!9539 = !DILocation(line: 223, column: 24, scope: !9537)
!9540 = !DILocation(line: 223, column: 9, scope: !743)
!9541 = !DILocation(line: 224, column: 11, scope: !9537)
!9542 = !DILocation(line: 224, column: 2, scope: !9537)
!9543 = !DILocation(line: 226, column: 9, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !743, file: !724, line: 226, column: 9)
!9545 = !DILocation(line: 226, column: 13, scope: !9544)
!9546 = !DILocation(line: 226, column: 9, scope: !743)
!9547 = !DILocation(line: 228, column: 11, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9549, file: !724, line: 228, column: 6)
!9549 = distinct !DILexicalBlock(scope: !9544, file: !724, line: 226, column: 19)
!9550 = !DILocation(line: 228, column: 6, scope: !9548)
!9551 = !DILocation(line: 228, column: 34, scope: !9548)
!9552 = !DILocation(line: 228, column: 6, scope: !9549)
!9553 = !DILocation(line: 229, column: 6, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9548, file: !724, line: 228, column: 41)
!9555 = !DILocation(line: 230, column: 6, scope: !9554)
!9556 = !DILocation(line: 232, column: 9, scope: !9549)
!9557 = !DILocation(line: 233, column: 26, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9549, file: !724, line: 233, column: 6)
!9559 = !DILocation(line: 233, column: 6, scope: !9558)
!9560 = !DILocation(line: 233, column: 6, scope: !9549)
!9561 = !DILocation(line: 234, column: 14, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9558, file: !724, line: 233, column: 32)
!9563 = !DILocation(line: 234, column: 71, scope: !9562)
!9564 = !DILocation(line: 234, column: 6, scope: !9562)
!9565 = !DILocation(line: 235, column: 6, scope: !9562)
!9566 = !DILocation(line: 237, column: 26, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9549, file: !724, line: 237, column: 6)
!9568 = !DILocation(line: 237, column: 6, scope: !9567)
!9569 = !DILocation(line: 237, column: 6, scope: !9549)
!9570 = !DILocation(line: 238, column: 14, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9567, file: !724, line: 237, column: 32)
!9572 = !DILocation(line: 238, column: 71, scope: !9571)
!9573 = !DILocation(line: 238, column: 6, scope: !9571)
!9574 = !DILocation(line: 239, column: 6, scope: !9571)
!9575 = !DILocation(line: 241, column: 2, scope: !9549)
!9576 = !DILocation(line: 242, column: 8, scope: !9549)
!9577 = !DILocation(line: 242, column: 17, scope: !9549)
!9578 = !DILocation(line: 242, column: 26, scope: !9549)
!9579 = !DILocation(line: 242, column: 2, scope: !9549)
!9580 = !DILocation(line: 243, column: 10, scope: !9549)
!9581 = !DILocation(line: 243, column: 33, scope: !9549)
!9582 = !DILocation(line: 243, column: 2, scope: !9549)
!9583 = !DILocation(line: 244, column: 2, scope: !9549)
!9584 = !DILocation(line: 248, column: 16, scope: !743)
!9585 = !DILocation(line: 248, column: 5, scope: !743)
!9586 = !DILocation(line: 249, column: 21, scope: !743)
!9587 = !DILocation(line: 249, column: 5, scope: !743)
!9588 = !DILocation(line: 250, column: 8, scope: !743)
!9589 = !DILocation(line: 250, column: 17, scope: !743)
!9590 = !DILocation(line: 251, column: 8, scope: !743)
!9591 = !DILocation(line: 251, column: 19, scope: !743)
!9592 = !DILocation(line: 252, column: 12, scope: !743)
!9593 = !DILocation(line: 255, column: 18, scope: !743)
!9594 = !DILocation(line: 255, column: 12, scope: !743)
!9595 = !DILocation(line: 256, column: 18, scope: !743)
!9596 = !DILocation(line: 256, column: 12, scope: !743)
!9597 = !DILocation(line: 256, column: 10, scope: !743)
!9598 = !DILocation(line: 257, column: 18, scope: !743)
!9599 = !DILocation(line: 257, column: 12, scope: !743)
!9600 = !DILocation(line: 258, column: 12, scope: !743)
!9601 = !DILocation(line: 260, column: 12, scope: !743)
!9602 = !DILocation(line: 260, column: 5, scope: !743)
!9603 = distinct !DISubprogram(name: "handler", scope: !724, file: !724, line: 319, type: !72, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !717, retainedNodes: !176)
!9604 = !DILocalVariable(name: "s", arg: 1, scope: !9603, file: !724, line: 319, type: !33)
!9605 = !DILocation(line: 319, column: 13, scope: !9603)
!9606 = !DILocation(line: 321, column: 9, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9603, file: !724, line: 321, column: 9)
!9608 = !DILocation(line: 321, column: 11, scope: !9607)
!9609 = !DILocation(line: 321, column: 9, scope: !9603)
!9610 = !DILocation(line: 322, column: 8, scope: !9607)
!9611 = !DILocation(line: 322, column: 2, scope: !9607)
!9612 = !DILocation(line: 322, column: 11, scope: !9607)
!9613 = !DILocation(line: 323, column: 1, scope: !9603)
!9614 = distinct !DISubprogram(name: "getln", scope: !724, file: !724, line: 266, type: !9615, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !717, retainedNodes: !176)
!9615 = !DISubroutineType(types: !9616)
!9616 = !{!20, !33, !20, !282, !33}
!9617 = !DILocalVariable(name: "fd", arg: 1, scope: !9614, file: !724, line: 266, type: !33)
!9618 = !DILocation(line: 266, column: 11, scope: !9614)
!9619 = !DILocalVariable(name: "buf", arg: 2, scope: !9614, file: !724, line: 266, type: !20)
!9620 = !DILocation(line: 266, column: 21, scope: !9614)
!9621 = !DILocalVariable(name: "bufsiz", arg: 3, scope: !9614, file: !724, line: 266, type: !282)
!9622 = !DILocation(line: 266, column: 33, scope: !9614)
!9623 = !DILocalVariable(name: "feedback", arg: 4, scope: !9614, file: !724, line: 266, type: !33)
!9624 = !DILocation(line: 266, column: 45, scope: !9614)
!9625 = !DILocalVariable(name: "left", scope: !9614, file: !724, line: 268, type: !282)
!9626 = !DILocation(line: 268, column: 12, scope: !9614)
!9627 = !DILocation(line: 268, column: 19, scope: !9614)
!9628 = !DILocalVariable(name: "nr", scope: !9614, file: !724, line: 269, type: !1900)
!9629 = !DILocation(line: 269, column: 13, scope: !9614)
!9630 = !DILocalVariable(name: "cp", scope: !9614, file: !724, line: 270, type: !20)
!9631 = !DILocation(line: 270, column: 11, scope: !9614)
!9632 = !DILocation(line: 270, column: 16, scope: !9614)
!9633 = !DILocalVariable(name: "c", scope: !9614, file: !724, line: 271, type: !21)
!9634 = !DILocation(line: 271, column: 10, scope: !9614)
!9635 = !DILocation(line: 273, column: 9, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9614, file: !724, line: 273, column: 9)
!9637 = !DILocation(line: 273, column: 14, scope: !9636)
!9638 = !DILocation(line: 273, column: 9, scope: !9614)
!9639 = !DILocation(line: 274, column: 2, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9636, file: !724, line: 273, column: 20)
!9641 = !DILocation(line: 274, column: 8, scope: !9640)
!9642 = !DILocation(line: 275, column: 2, scope: !9640)
!9643 = !DILocation(line: 278, column: 5, scope: !9614)
!9644 = !DILocation(line: 278, column: 12, scope: !9614)
!9645 = !DILocation(line: 279, column: 12, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9614, file: !724, line: 278, column: 20)
!9647 = !DILocation(line: 279, column: 7, scope: !9646)
!9648 = !DILocation(line: 279, column: 5, scope: !9646)
!9649 = !DILocation(line: 280, column: 6, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9646, file: !724, line: 280, column: 6)
!9651 = !DILocation(line: 280, column: 9, scope: !9650)
!9652 = !DILocation(line: 280, column: 14, scope: !9650)
!9653 = !DILocation(line: 280, column: 17, scope: !9650)
!9654 = !DILocation(line: 280, column: 19, scope: !9650)
!9655 = !DILocation(line: 280, column: 27, scope: !9650)
!9656 = !DILocation(line: 280, column: 30, scope: !9650)
!9657 = !DILocation(line: 280, column: 32, scope: !9650)
!9658 = !DILocation(line: 280, column: 6, scope: !9646)
!9659 = !DILocation(line: 281, column: 6, scope: !9650)
!9660 = !DILocation(line: 282, column: 6, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9646, file: !724, line: 282, column: 6)
!9662 = !DILocation(line: 282, column: 6, scope: !9646)
!9663 = !DILocation(line: 283, column: 10, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9665, file: !724, line: 283, column: 10)
!9665 = distinct !DILexicalBlock(scope: !9661, file: !724, line: 282, column: 16)
!9666 = !DILocation(line: 283, column: 15, scope: !9664)
!9667 = !DILocation(line: 283, column: 12, scope: !9664)
!9668 = !DILocation(line: 283, column: 10, scope: !9665)
!9669 = !DILocation(line: 284, column: 3, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9664, file: !724, line: 283, column: 26)
!9671 = !DILocation(line: 284, column: 10, scope: !9670)
!9672 = !DILocation(line: 284, column: 15, scope: !9670)
!9673 = !DILocation(line: 284, column: 13, scope: !9670)
!9674 = !DILocation(line: 285, column: 17, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9676, file: !724, line: 285, column: 11)
!9676 = distinct !DILexicalBlock(scope: !9670, file: !724, line: 284, column: 20)
!9677 = !DILocation(line: 285, column: 11, scope: !9675)
!9678 = !DILocation(line: 285, column: 33, scope: !9675)
!9679 = !DILocation(line: 285, column: 11, scope: !9676)
!9680 = !DILocation(line: 286, column: 4, scope: !9675)
!9681 = !DILocation(line: 287, column: 7, scope: !9676)
!9682 = distinct !{!9682, !9669, !9683}
!9683 = !DILocation(line: 288, column: 3, scope: !9670)
!9684 = !DILocation(line: 289, column: 10, scope: !9670)
!9685 = !DILocation(line: 289, column: 8, scope: !9670)
!9686 = !DILocation(line: 290, column: 3, scope: !9670)
!9687 = distinct !{!9687, !9643, !9688}
!9688 = !DILocation(line: 304, column: 5, scope: !9614)
!9689 = !DILocation(line: 291, column: 17, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9664, file: !724, line: 291, column: 17)
!9691 = !DILocation(line: 291, column: 22, scope: !9690)
!9692 = !DILocation(line: 291, column: 19, scope: !9690)
!9693 = !DILocation(line: 291, column: 17, scope: !9664)
!9694 = !DILocation(line: 292, column: 7, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9696, file: !724, line: 292, column: 7)
!9696 = distinct !DILexicalBlock(scope: !9690, file: !724, line: 291, column: 34)
!9697 = !DILocation(line: 292, column: 12, scope: !9695)
!9698 = !DILocation(line: 292, column: 10, scope: !9695)
!9699 = !DILocation(line: 292, column: 7, scope: !9696)
!9700 = !DILocation(line: 293, column: 17, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9702, file: !724, line: 293, column: 11)
!9702 = distinct !DILexicalBlock(scope: !9695, file: !724, line: 292, column: 17)
!9703 = !DILocation(line: 293, column: 11, scope: !9701)
!9704 = !DILocation(line: 293, column: 33, scope: !9701)
!9705 = !DILocation(line: 293, column: 11, scope: !9702)
!9706 = !DILocation(line: 294, column: 4, scope: !9701)
!9707 = !DILocation(line: 295, column: 7, scope: !9702)
!9708 = !DILocation(line: 296, column: 11, scope: !9702)
!9709 = !DILocation(line: 297, column: 3, scope: !9702)
!9710 = !DILocation(line: 298, column: 3, scope: !9696)
!9711 = !DILocation(line: 300, column: 16, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9665, file: !724, line: 300, column: 10)
!9713 = !DILocation(line: 300, column: 10, scope: !9712)
!9714 = !DILocation(line: 300, column: 28, scope: !9712)
!9715 = !DILocation(line: 300, column: 10, scope: !9665)
!9716 = !DILocation(line: 302, column: 2, scope: !9665)
!9717 = !DILocation(line: 303, column: 10, scope: !9646)
!9718 = !DILocation(line: 303, column: 5, scope: !9646)
!9719 = !DILocation(line: 303, column: 8, scope: !9646)
!9720 = !DILocation(line: 305, column: 6, scope: !9614)
!9721 = !DILocation(line: 305, column: 9, scope: !9614)
!9722 = !DILocation(line: 306, column: 9, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9614, file: !724, line: 306, column: 9)
!9724 = !DILocation(line: 306, column: 9, scope: !9614)
!9725 = !DILocation(line: 308, column: 2, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9723, file: !724, line: 306, column: 19)
!9727 = !DILocation(line: 308, column: 9, scope: !9726)
!9728 = !DILocation(line: 308, column: 14, scope: !9726)
!9729 = !DILocation(line: 308, column: 12, scope: !9726)
!9730 = !DILocation(line: 309, column: 16, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9732, file: !724, line: 309, column: 10)
!9732 = distinct !DILexicalBlock(scope: !9726, file: !724, line: 308, column: 19)
!9733 = !DILocation(line: 309, column: 10, scope: !9731)
!9734 = !DILocation(line: 309, column: 32, scope: !9731)
!9735 = !DILocation(line: 309, column: 10, scope: !9732)
!9736 = !DILocation(line: 310, column: 3, scope: !9731)
!9737 = !DILocation(line: 311, column: 6, scope: !9732)
!9738 = distinct !{!9738, !9725, !9739}
!9739 = !DILocation(line: 312, column: 2, scope: !9726)
!9740 = !DILocation(line: 313, column: 5, scope: !9726)
!9741 = !DILocation(line: 315, column: 12, scope: !9614)
!9742 = !DILocation(line: 315, column: 15, scope: !9614)
!9743 = !DILocation(line: 315, column: 22, scope: !9614)
!9744 = !DILocation(line: 315, column: 5, scope: !9614)
!9745 = !DILocation(line: 316, column: 1, scope: !9614)
!9746 = distinct !DISubprogram(name: "get_ttysize", scope: !9747, file: !9747, line: 48, type: !9748, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !922, retainedNodes: !176)
!9747 = !DIFile(filename: "./ttysize.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!9748 = !DISubroutineType(types: !9749)
!9749 = !{null, !1744, !1744}
!9750 = !DILocalVariable(name: "rowp", arg: 1, scope: !9746, file: !9747, line: 48, type: !1744)
!9751 = !DILocation(line: 48, column: 18, scope: !9746)
!9752 = !DILocalVariable(name: "colp", arg: 2, scope: !9746, file: !9747, line: 48, type: !1744)
!9753 = !DILocation(line: 48, column: 29, scope: !9746)
!9754 = !DILocalVariable(name: "p", scope: !9746, file: !9747, line: 50, type: !20)
!9755 = !DILocation(line: 50, column: 11, scope: !9746)
!9756 = !DILocalVariable(name: "wsize", scope: !9746, file: !9747, line: 52, type: !9757)
!9757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !2922, line: 27, size: 64, elements: !9758)
!9758 = !{!9759, !9760, !9761, !9762}
!9759 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !9757, file: !2922, line: 29, baseType: !284, size: 16)
!9760 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !9757, file: !2922, line: 30, baseType: !284, size: 16, offset: 16)
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !9757, file: !2922, line: 31, baseType: !284, size: 16, offset: 32)
!9762 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !9757, file: !2922, line: 32, baseType: !284, size: 16, offset: 48)
!9763 = !DILocation(line: 52, column: 20, scope: !9746)
!9764 = !DILocation(line: 54, column: 9, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9746, file: !9747, line: 54, column: 9)
!9766 = !DILocation(line: 54, column: 50, scope: !9765)
!9767 = !DILocation(line: 54, column: 55, scope: !9765)
!9768 = !DILocation(line: 55, column: 8, scope: !9765)
!9769 = !DILocation(line: 55, column: 2, scope: !9765)
!9770 = !DILocation(line: 55, column: 15, scope: !9765)
!9771 = !DILocation(line: 55, column: 20, scope: !9765)
!9772 = !DILocation(line: 55, column: 29, scope: !9765)
!9773 = !DILocation(line: 55, column: 23, scope: !9765)
!9774 = !DILocation(line: 55, column: 37, scope: !9765)
!9775 = !DILocation(line: 54, column: 9, scope: !9746)
!9776 = !DILocation(line: 56, column: 16, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9765, file: !9747, line: 55, column: 43)
!9778 = !DILocation(line: 56, column: 10, scope: !9777)
!9779 = !DILocation(line: 56, column: 3, scope: !9777)
!9780 = !DILocation(line: 56, column: 8, scope: !9777)
!9781 = !DILocation(line: 57, column: 16, scope: !9777)
!9782 = !DILocation(line: 57, column: 10, scope: !9777)
!9783 = !DILocation(line: 57, column: 3, scope: !9777)
!9784 = !DILocation(line: 57, column: 8, scope: !9777)
!9785 = !DILocation(line: 58, column: 2, scope: !9777)
!9786 = !DILocation(line: 63, column: 14, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9746, file: !9747, line: 63, column: 9)
!9788 = !DILocation(line: 63, column: 12, scope: !9787)
!9789 = !DILocation(line: 63, column: 31, scope: !9787)
!9790 = !DILocation(line: 63, column: 39, scope: !9787)
!9791 = !DILocation(line: 63, column: 56, scope: !9787)
!9792 = !DILocation(line: 63, column: 51, scope: !9787)
!9793 = !DILocation(line: 63, column: 44, scope: !9787)
!9794 = !DILocation(line: 63, column: 49, scope: !9787)
!9795 = !DILocation(line: 63, column: 60, scope: !9787)
!9796 = !DILocation(line: 63, column: 9, scope: !9746)
!9797 = !DILocation(line: 64, column: 3, scope: !9787)
!9798 = !DILocation(line: 64, column: 8, scope: !9787)
!9799 = !DILocation(line: 64, column: 2, scope: !9787)
!9800 = !DILocation(line: 65, column: 14, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9746, file: !9747, line: 65, column: 9)
!9802 = !DILocation(line: 65, column: 12, scope: !9801)
!9803 = !DILocation(line: 65, column: 33, scope: !9801)
!9804 = !DILocation(line: 65, column: 41, scope: !9801)
!9805 = !DILocation(line: 65, column: 58, scope: !9801)
!9806 = !DILocation(line: 65, column: 53, scope: !9801)
!9807 = !DILocation(line: 65, column: 46, scope: !9801)
!9808 = !DILocation(line: 65, column: 51, scope: !9801)
!9809 = !DILocation(line: 65, column: 62, scope: !9801)
!9810 = !DILocation(line: 65, column: 9, scope: !9746)
!9811 = !DILocation(line: 66, column: 3, scope: !9801)
!9812 = !DILocation(line: 66, column: 8, scope: !9801)
!9813 = !DILocation(line: 66, column: 2, scope: !9801)
!9814 = !DILocation(line: 67, column: 1, scope: !9746)
!9815 = distinct !DISubprogram(name: "utmp_login", scope: !9816, file: !9816, line: 176, type: !9817, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !924, retainedNodes: !176)
!9816 = !DIFile(filename: "./utmp.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/src")
!9817 = !DISubroutineType(types: !9818)
!9818 = !{!33, !221, !221, !33, !221}
!9819 = !DILocalVariable(name: "from_line", arg: 1, scope: !9815, file: !9816, line: 176, type: !221)
!9820 = !DILocation(line: 176, column: 24, scope: !9815)
!9821 = !DILocalVariable(name: "to_line", arg: 2, scope: !9815, file: !9816, line: 176, type: !221)
!9822 = !DILocation(line: 176, column: 47, scope: !9815)
!9823 = !DILocalVariable(name: "ttyfd", arg: 3, scope: !9815, file: !9816, line: 176, type: !33)
!9824 = !DILocation(line: 176, column: 60, scope: !9815)
!9825 = !DILocalVariable(name: "user", arg: 4, scope: !9815, file: !9816, line: 177, type: !221)
!9826 = !DILocation(line: 177, column: 17, scope: !9815)
!9827 = !DILocalVariable(name: "utbuf", scope: !9815, file: !9816, line: 179, type: !9828)
!9828 = !DIDerivedType(tag: DW_TAG_typedef, name: "sudo_utmp_t", file: !9816, line: 71, baseType: !9829)
!9829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utmpx", file: !9830, line: 55, size: 3072, elements: !9831)
!9830 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/utmpx.h", directory: "")
!9831 = !{!9832, !9833, !9834, !9836, !9838, !9839, !9843, !9848, !9850, !9855, !9857}
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "ut_type", scope: !9829, file: !9830, line: 57, baseType: !132, size: 16)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "ut_pid", scope: !9829, file: !9830, line: 58, baseType: !37, size: 32, offset: 32)
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "ut_line", scope: !9829, file: !9830, line: 59, baseType: !9835, size: 256, offset: 64)
!9835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 256, elements: !834)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "ut_id", scope: !9829, file: !9830, line: 61, baseType: !9837, size: 32, offset: 320)
!9837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 32, elements: !916)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "ut_user", scope: !9829, file: !9830, line: 63, baseType: !9835, size: 256, offset: 352)
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "ut_host", scope: !9829, file: !9830, line: 65, baseType: !9840, size: 2048, offset: 608)
!9840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 2048, elements: !9841)
!9841 = !{!9842}
!9842 = !DISubrange(count: 256, lowerBound: 0)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "ut_exit", scope: !9829, file: !9830, line: 67, baseType: !9844, size: 32, offset: 2656)
!9844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exit_status", file: !9830, line: 42, size: 32, elements: !9845)
!9845 = !{!9846, !9847}
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "e_termination", scope: !9844, file: !9830, line: 45, baseType: !132, size: 16)
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "e_exit", scope: !9844, file: !9830, line: 46, baseType: !132, size: 16, offset: 16)
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "ut_session", scope: !9829, file: !9830, line: 74, baseType: !9849, size: 32, offset: 2688)
!9849 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !38, line: 41, baseType: !33)
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "ut_tv", scope: !9829, file: !9830, line: 79, baseType: !9851, size: 64, offset: 2720)
!9851 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9829, file: !9830, line: 75, size: 64, elements: !9852)
!9852 = !{!9853, !9854}
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !9851, file: !9830, line: 77, baseType: !9849, size: 32)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !9851, file: !9830, line: 78, baseType: !9849, size: 32, offset: 32)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "ut_addr_v6", scope: !9829, file: !9830, line: 84, baseType: !9856, size: 128, offset: 2784)
!9856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9849, size: 128, elements: !916)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !9829, file: !9830, line: 85, baseType: !803, size: 160, offset: 2912)
!9858 = !DILocation(line: 179, column: 17, scope: !9815)
!9859 = !DILocalVariable(name: "ut_old", scope: !9815, file: !9816, line: 179, type: !9860)
!9860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9828, size: 64)
!9861 = !DILocation(line: 179, column: 25, scope: !9815)
!9862 = !DILocalVariable(name: "rval", scope: !9815, file: !9816, line: 180, type: !33)
!9863 = !DILocation(line: 180, column: 9, scope: !9815)
!9864 = !DILocation(line: 183, column: 17, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9815, file: !9816, line: 183, column: 9)
!9866 = !DILocation(line: 183, column: 9, scope: !9865)
!9867 = !DILocation(line: 183, column: 60, scope: !9865)
!9868 = !DILocation(line: 183, column: 9, scope: !9815)
!9869 = !DILocation(line: 184, column: 10, scope: !9865)
!9870 = !DILocation(line: 184, column: 2, scope: !9865)
!9871 = !DILocation(line: 185, column: 5, scope: !9815)
!9872 = !DILocation(line: 186, column: 9, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9815, file: !9816, line: 186, column: 9)
!9874 = !DILocation(line: 186, column: 19, scope: !9873)
!9875 = !DILocation(line: 186, column: 9, scope: !9815)
!9876 = !DILocation(line: 187, column: 14, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9878, file: !9816, line: 187, column: 6)
!9878 = distinct !DILexicalBlock(scope: !9873, file: !9816, line: 186, column: 28)
!9879 = !DILocation(line: 187, column: 6, scope: !9877)
!9880 = !DILocation(line: 187, column: 59, scope: !9877)
!9881 = !DILocation(line: 187, column: 6, scope: !9878)
!9882 = !DILocation(line: 188, column: 16, scope: !9877)
!9883 = !DILocation(line: 188, column: 6, scope: !9877)
!9884 = !DILocation(line: 191, column: 2, scope: !9878)
!9885 = !DILocation(line: 192, column: 16, scope: !9878)
!9886 = !DILocation(line: 192, column: 10, scope: !9878)
!9887 = !DILocation(line: 192, column: 25, scope: !9878)
!9888 = !DILocation(line: 192, column: 2, scope: !9878)
!9889 = !DILocation(line: 193, column: 11, scope: !9878)
!9890 = !DILocation(line: 193, column: 9, scope: !9878)
!9891 = !DILocation(line: 194, column: 5, scope: !9878)
!9892 = !DILocation(line: 195, column: 15, scope: !9815)
!9893 = !DILocation(line: 195, column: 24, scope: !9815)
!9894 = !DILocation(line: 195, column: 30, scope: !9815)
!9895 = !DILocation(line: 195, column: 5, scope: !9815)
!9896 = !DILocation(line: 196, column: 9, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9815, file: !9816, line: 196, column: 9)
!9898 = !DILocation(line: 196, column: 28, scope: !9897)
!9899 = !DILocation(line: 196, column: 9, scope: !9815)
!9900 = !DILocation(line: 197, column: 7, scope: !9897)
!9901 = !DILocation(line: 197, column: 2, scope: !9897)
!9902 = !DILocation(line: 198, column: 5, scope: !9815)
!9903 = !DILocation(line: 200, column: 12, scope: !9815)
!9904 = !DILocation(line: 200, column: 5, scope: !9815)
!9905 = distinct !DISubprogram(name: "utmp_fill", scope: !9816, file: !9816, line: 139, type: !9906, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !924, retainedNodes: !176)
!9906 = !DISubroutineType(types: !9907)
!9907 = !{null, !221, !221, !9860, !9860}
!9908 = !DILocalVariable(name: "line", arg: 1, scope: !9905, file: !9816, line: 139, type: !221)
!9909 = !DILocation(line: 139, column: 23, scope: !9905)
!9910 = !DILocalVariable(name: "user", arg: 2, scope: !9905, file: !9816, line: 139, type: !221)
!9911 = !DILocation(line: 139, column: 41, scope: !9905)
!9912 = !DILocalVariable(name: "ut_old", arg: 3, scope: !9905, file: !9816, line: 139, type: !9860)
!9913 = !DILocation(line: 139, column: 60, scope: !9905)
!9914 = !DILocalVariable(name: "ut_new", arg: 4, scope: !9905, file: !9816, line: 140, type: !9860)
!9915 = !DILocation(line: 140, column: 18, scope: !9905)
!9916 = !DILocation(line: 142, column: 9, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9905, file: !9816, line: 142, column: 9)
!9918 = !DILocation(line: 142, column: 16, scope: !9917)
!9919 = !DILocation(line: 142, column: 9, scope: !9905)
!9920 = !DILocation(line: 143, column: 9, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9917, file: !9816, line: 142, column: 25)
!9922 = !DILocation(line: 143, column: 2, scope: !9921)
!9923 = !DILocation(line: 144, column: 6, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9921, file: !9816, line: 144, column: 6)
!9925 = !DILocation(line: 144, column: 11, scope: !9924)
!9926 = !DILocation(line: 144, column: 6, scope: !9921)
!9927 = !DILocation(line: 145, column: 14, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9924, file: !9816, line: 144, column: 20)
!9929 = !DILocation(line: 145, column: 22, scope: !9928)
!9930 = !DILocation(line: 145, column: 44, scope: !9928)
!9931 = !DILocation(line: 145, column: 6, scope: !9928)
!9932 = !DILocation(line: 147, column: 2, scope: !9928)
!9933 = !DILocation(line: 148, column: 5, scope: !9921)
!9934 = !DILocation(line: 148, column: 16, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9917, file: !9816, line: 148, column: 16)
!9936 = !DILocation(line: 148, column: 26, scope: !9935)
!9937 = !DILocation(line: 148, column: 23, scope: !9935)
!9938 = !DILocation(line: 148, column: 16, scope: !9917)
!9939 = !DILocation(line: 149, column: 9, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9935, file: !9816, line: 148, column: 34)
!9941 = !DILocation(line: 149, column: 2, scope: !9940)
!9942 = !DILocation(line: 149, column: 17, scope: !9940)
!9943 = !DILocation(line: 150, column: 5, scope: !9940)
!9944 = !DILocation(line: 151, column: 9, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9905, file: !9816, line: 151, column: 9)
!9946 = !DILocation(line: 151, column: 14, scope: !9945)
!9947 = !DILocation(line: 151, column: 9, scope: !9905)
!9948 = !DILocation(line: 152, column: 10, scope: !9945)
!9949 = !DILocation(line: 152, column: 18, scope: !9945)
!9950 = !DILocation(line: 152, column: 27, scope: !9945)
!9951 = !DILocation(line: 152, column: 2, scope: !9945)
!9952 = !DILocation(line: 153, column: 13, scope: !9905)
!9953 = !DILocation(line: 153, column: 21, scope: !9905)
!9954 = !DILocation(line: 153, column: 30, scope: !9905)
!9955 = !DILocation(line: 153, column: 5, scope: !9905)
!9956 = !DILocation(line: 155, column: 16, scope: !9905)
!9957 = !DILocation(line: 155, column: 24, scope: !9905)
!9958 = !DILocation(line: 155, column: 5, scope: !9905)
!9959 = !DILocation(line: 158, column: 22, scope: !9905)
!9960 = !DILocation(line: 158, column: 5, scope: !9905)
!9961 = !DILocation(line: 158, column: 13, scope: !9905)
!9962 = !DILocation(line: 158, column: 20, scope: !9905)
!9963 = !DILocation(line: 160, column: 18, scope: !9905)
!9964 = !DILocation(line: 160, column: 5, scope: !9905)
!9965 = !DILocation(line: 162, column: 5, scope: !9905)
!9966 = !DILocation(line: 162, column: 13, scope: !9905)
!9967 = !DILocation(line: 162, column: 21, scope: !9905)
!9968 = !DILocation(line: 164, column: 1, scope: !9905)
!9969 = distinct !DISubprogram(name: "utmp_setid", scope: !9816, file: !9816, line: 93, type: !9970, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !924, retainedNodes: !176)
!9970 = !DISubroutineType(types: !9971)
!9971 = !{null, !9860, !9860}
!9972 = !DILocalVariable(name: "old", arg: 1, scope: !9969, file: !9816, line: 93, type: !9860)
!9973 = !DILocation(line: 93, column: 25, scope: !9969)
!9974 = !DILocalVariable(name: "new", arg: 2, scope: !9969, file: !9816, line: 93, type: !9860)
!9975 = !DILocation(line: 93, column: 43, scope: !9969)
!9976 = !DILocalVariable(name: "line", scope: !9969, file: !9816, line: 95, type: !221)
!9977 = !DILocation(line: 95, column: 17, scope: !9969)
!9978 = !DILocation(line: 95, column: 24, scope: !9969)
!9979 = !DILocation(line: 95, column: 29, scope: !9969)
!9980 = !DILocalVariable(name: "idlen", scope: !9969, file: !9816, line: 96, type: !282)
!9981 = !DILocation(line: 96, column: 12, scope: !9969)
!9982 = !DILocation(line: 99, column: 9, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9969, file: !9816, line: 99, column: 9)
!9984 = !DILocation(line: 99, column: 13, scope: !9983)
!9985 = !DILocation(line: 99, column: 9, scope: !9969)
!9986 = !DILocation(line: 100, column: 14, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9988, file: !9816, line: 100, column: 6)
!9988 = distinct !DILexicalBlock(scope: !9983, file: !9816, line: 99, column: 22)
!9989 = !DILocation(line: 100, column: 6, scope: !9987)
!9990 = !DILocation(line: 100, column: 30, scope: !9987)
!9991 = !DILocation(line: 100, column: 6, scope: !9988)
!9992 = !DILocation(line: 101, column: 12, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9987, file: !9816, line: 100, column: 36)
!9994 = !DILocation(line: 102, column: 18, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9993, file: !9816, line: 102, column: 10)
!9996 = !DILocation(line: 102, column: 23, scope: !9995)
!9997 = !DILocation(line: 102, column: 37, scope: !9995)
!9998 = !DILocation(line: 102, column: 10, scope: !9995)
!9999 = !DILocation(line: 102, column: 44, scope: !9995)
!10000 = !DILocation(line: 102, column: 10, scope: !9993)
!10001 = !DILocation(line: 103, column: 8, scope: !9995)
!10002 = !DILocation(line: 103, column: 3, scope: !9995)
!10003 = !DILocation(line: 104, column: 2, scope: !9993)
!10004 = !DILocation(line: 105, column: 5, scope: !9988)
!10005 = !DILocation(line: 108, column: 20, scope: !9969)
!10006 = !DILocation(line: 108, column: 13, scope: !9969)
!10007 = !DILocation(line: 108, column: 11, scope: !9969)
!10008 = !DILocation(line: 109, column: 9, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !9969, file: !9816, line: 109, column: 9)
!10010 = !DILocation(line: 109, column: 15, scope: !10009)
!10011 = !DILocation(line: 109, column: 9, scope: !9969)
!10012 = !DILocation(line: 110, column: 10, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10009, file: !9816, line: 109, column: 37)
!10014 = !DILocation(line: 110, column: 16, scope: !10013)
!10015 = !DILocation(line: 110, column: 7, scope: !10013)
!10016 = !DILocation(line: 111, column: 8, scope: !10013)
!10017 = !DILocation(line: 112, column: 5, scope: !10013)
!10018 = !DILocation(line: 113, column: 13, scope: !9969)
!10019 = !DILocation(line: 113, column: 18, scope: !9969)
!10020 = !DILocation(line: 113, column: 25, scope: !9969)
!10021 = !DILocation(line: 113, column: 31, scope: !9969)
!10022 = !DILocation(line: 113, column: 5, scope: !9969)
!10023 = !DILocation(line: 114, column: 1, scope: !9969)
!10024 = distinct !DISubprogram(name: "utmp_settime", scope: !9816, file: !9816, line: 121, type: !10025, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !924, retainedNodes: !176)
!10025 = !DISubroutineType(types: !10026)
!10026 = !{null, !9860}
!10027 = !DILocalVariable(name: "ut", arg: 1, scope: !10024, file: !9816, line: 121, type: !9860)
!10028 = !DILocation(line: 121, column: 27, scope: !10024)
!10029 = !DILocalVariable(name: "tv", scope: !10024, file: !9816, line: 123, type: !10030)
!10030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !2443, line: 8, size: 128, elements: !10031)
!10031 = !{!10032, !10033}
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10030, file: !2443, line: 10, baseType: !2446, size: 64)
!10033 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !10030, file: !2443, line: 11, baseType: !2448, size: 64, offset: 64)
!10034 = !DILocation(line: 123, column: 20, scope: !10024)
!10035 = !DILocation(line: 125, column: 5, scope: !10024)
!10036 = !DILocation(line: 128, column: 27, scope: !10024)
!10037 = !DILocation(line: 128, column: 24, scope: !10024)
!10038 = !DILocation(line: 128, column: 5, scope: !10024)
!10039 = !DILocation(line: 128, column: 9, scope: !10024)
!10040 = !DILocation(line: 128, column: 15, scope: !10024)
!10041 = !DILocation(line: 128, column: 22, scope: !10024)
!10042 = !DILocation(line: 129, column: 28, scope: !10024)
!10043 = !DILocation(line: 129, column: 25, scope: !10024)
!10044 = !DILocation(line: 129, column: 5, scope: !10024)
!10045 = !DILocation(line: 129, column: 9, scope: !10024)
!10046 = !DILocation(line: 129, column: 15, scope: !10024)
!10047 = !DILocation(line: 129, column: 23, scope: !10024)
!10048 = !DILocation(line: 133, column: 1, scope: !10024)
!10049 = distinct !DISubprogram(name: "utmp_logout", scope: !9816, file: !9816, line: 204, type: !10050, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !924, retainedNodes: !176)
!10050 = !DISubroutineType(types: !10051)
!10051 = !{!33, !221, !33}
!10052 = !DILocalVariable(name: "line", arg: 1, scope: !10049, file: !9816, line: 204, type: !221)
!10053 = !DILocation(line: 204, column: 25, scope: !10049)
!10054 = !DILocalVariable(name: "status", arg: 2, scope: !10049, file: !9816, line: 204, type: !33)
!10055 = !DILocation(line: 204, column: 35, scope: !10049)
!10056 = !DILocalVariable(name: "rval", scope: !10049, file: !9816, line: 206, type: !33)
!10057 = !DILocation(line: 206, column: 9, scope: !10049)
!10058 = !DILocalVariable(name: "ut", scope: !10049, file: !9816, line: 207, type: !9860)
!10059 = !DILocation(line: 207, column: 18, scope: !10049)
!10060 = !DILocalVariable(name: "utbuf", scope: !10049, file: !9816, line: 207, type: !9828)
!10061 = !DILocation(line: 207, column: 22, scope: !10049)
!10062 = !DILocation(line: 210, column: 17, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10049, file: !9816, line: 210, column: 9)
!10064 = !DILocation(line: 210, column: 9, scope: !10063)
!10065 = !DILocation(line: 210, column: 57, scope: !10063)
!10066 = !DILocation(line: 210, column: 9, scope: !10049)
!10067 = !DILocation(line: 211, column: 7, scope: !10063)
!10068 = !DILocation(line: 211, column: 2, scope: !10063)
!10069 = !DILocation(line: 213, column: 5, scope: !10049)
!10070 = !DILocation(line: 214, column: 19, scope: !10049)
!10071 = !DILocation(line: 214, column: 13, scope: !10049)
!10072 = !DILocation(line: 214, column: 28, scope: !10049)
!10073 = !DILocation(line: 214, column: 5, scope: !10049)
!10074 = !DILocation(line: 215, column: 15, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10049, file: !9816, line: 215, column: 9)
!10076 = !DILocation(line: 215, column: 13, scope: !10075)
!10077 = !DILocation(line: 215, column: 35, scope: !10075)
!10078 = !DILocation(line: 215, column: 9, scope: !10049)
!10079 = !DILocation(line: 216, column: 9, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10075, file: !9816, line: 215, column: 44)
!10081 = !DILocation(line: 216, column: 13, scope: !10080)
!10082 = !DILocation(line: 216, column: 2, scope: !10080)
!10083 = !DILocation(line: 218, column: 2, scope: !10080)
!10084 = !DILocation(line: 218, column: 6, scope: !10080)
!10085 = !DILocation(line: 218, column: 14, scope: !10080)
!10086 = !DILocation(line: 221, column: 25, scope: !10080)
!10087 = !DILocation(line: 221, column: 2, scope: !10080)
!10088 = !DILocation(line: 221, column: 6, scope: !10080)
!10089 = !DILocation(line: 221, column: 14, scope: !10080)
!10090 = !DILocation(line: 221, column: 23, scope: !10080)
!10091 = !DILocation(line: 222, column: 32, scope: !10080)
!10092 = !DILocation(line: 222, column: 52, scope: !10080)
!10093 = !DILocation(line: 222, column: 2, scope: !10080)
!10094 = !DILocation(line: 222, column: 6, scope: !10080)
!10095 = !DILocation(line: 222, column: 14, scope: !10080)
!10096 = !DILocation(line: 222, column: 30, scope: !10080)
!10097 = !DILocation(line: 224, column: 15, scope: !10080)
!10098 = !DILocation(line: 224, column: 2, scope: !10080)
!10099 = !DILocation(line: 225, column: 17, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10080, file: !9816, line: 225, column: 6)
!10101 = !DILocation(line: 225, column: 6, scope: !10100)
!10102 = !DILocation(line: 225, column: 21, scope: !10100)
!10103 = !DILocation(line: 225, column: 6, scope: !10080)
!10104 = !DILocation(line: 226, column: 11, scope: !10100)
!10105 = !DILocation(line: 226, column: 6, scope: !10100)
!10106 = !DILocation(line: 227, column: 5, scope: !10080)
!10107 = !DILocation(line: 228, column: 12, scope: !10049)
!10108 = !DILocation(line: 228, column: 5, scope: !10049)
!10109 = distinct !DISubprogram(name: "emalloc", scope: !10110, file: !10110, line: 77, type: !10111, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !926, retainedNodes: !176)
!10110 = !DIFile(filename: "./alloc.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!10111 = !DISubroutineType(types: !10112)
!10112 = !{!19, !282}
!10113 = !DILocalVariable(name: "size", arg: 1, scope: !10109, file: !10110, line: 77, type: !282)
!10114 = !DILocation(line: 77, column: 16, scope: !10109)
!10115 = !DILocalVariable(name: "ptr", scope: !10109, file: !10110, line: 79, type: !19)
!10116 = !DILocation(line: 79, column: 11, scope: !10109)
!10117 = !DILocation(line: 81, column: 9, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10109, file: !10110, line: 81, column: 9)
!10119 = !DILocation(line: 81, column: 14, scope: !10118)
!10120 = !DILocation(line: 81, column: 9, scope: !10109)
!10121 = !DILocation(line: 82, column: 12, scope: !10118)
!10122 = !DILocation(line: 82, column: 2, scope: !10118)
!10123 = !DILocation(line: 84, column: 23, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10109, file: !10110, line: 84, column: 9)
!10125 = !DILocation(line: 84, column: 16, scope: !10124)
!10126 = !DILocation(line: 84, column: 14, scope: !10124)
!10127 = !DILocation(line: 84, column: 30, scope: !10124)
!10128 = !DILocation(line: 84, column: 9, scope: !10109)
!10129 = !DILocation(line: 85, column: 12, scope: !10124)
!10130 = !DILocation(line: 85, column: 2, scope: !10124)
!10131 = !DILocation(line: 86, column: 12, scope: !10109)
!10132 = !DILocation(line: 86, column: 5, scope: !10109)
!10133 = distinct !DISubprogram(name: "emalloc2", scope: !10110, file: !10110, line: 94, type: !10134, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !926, retainedNodes: !176)
!10134 = !DISubroutineType(types: !10135)
!10135 = !{!19, !282, !282}
!10136 = !DILocalVariable(name: "nmemb", arg: 1, scope: !10133, file: !10110, line: 94, type: !282)
!10137 = !DILocation(line: 94, column: 17, scope: !10133)
!10138 = !DILocalVariable(name: "size", arg: 2, scope: !10133, file: !10110, line: 94, type: !282)
!10139 = !DILocation(line: 94, column: 31, scope: !10133)
!10140 = !DILocalVariable(name: "ptr", scope: !10133, file: !10110, line: 96, type: !19)
!10141 = !DILocation(line: 96, column: 11, scope: !10133)
!10142 = !DILocation(line: 98, column: 9, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10133, file: !10110, line: 98, column: 9)
!10144 = !DILocation(line: 98, column: 15, scope: !10143)
!10145 = !DILocation(line: 98, column: 20, scope: !10143)
!10146 = !DILocation(line: 98, column: 23, scope: !10143)
!10147 = !DILocation(line: 98, column: 28, scope: !10143)
!10148 = !DILocation(line: 98, column: 9, scope: !10133)
!10149 = !DILocation(line: 99, column: 12, scope: !10143)
!10150 = !DILocation(line: 99, column: 2, scope: !10143)
!10151 = !DILocation(line: 100, column: 9, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10133, file: !10110, line: 100, column: 9)
!10153 = !DILocation(line: 100, column: 28, scope: !10152)
!10154 = !DILocation(line: 100, column: 26, scope: !10152)
!10155 = !DILocation(line: 100, column: 15, scope: !10152)
!10156 = !DILocation(line: 100, column: 9, scope: !10133)
!10157 = !DILocation(line: 101, column: 12, scope: !10152)
!10158 = !DILocation(line: 101, column: 2, scope: !10152)
!10159 = !DILocation(line: 103, column: 13, scope: !10133)
!10160 = !DILocation(line: 103, column: 10, scope: !10133)
!10161 = !DILocation(line: 104, column: 23, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10133, file: !10110, line: 104, column: 9)
!10163 = !DILocation(line: 104, column: 16, scope: !10162)
!10164 = !DILocation(line: 104, column: 14, scope: !10162)
!10165 = !DILocation(line: 104, column: 30, scope: !10162)
!10166 = !DILocation(line: 104, column: 9, scope: !10133)
!10167 = !DILocation(line: 105, column: 12, scope: !10162)
!10168 = !DILocation(line: 105, column: 2, scope: !10162)
!10169 = !DILocation(line: 106, column: 12, scope: !10133)
!10170 = !DILocation(line: 106, column: 5, scope: !10133)
!10171 = distinct !DISubprogram(name: "erealloc", scope: !10110, file: !10110, line: 115, type: !10172, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !926, retainedNodes: !176)
!10172 = !DISubroutineType(types: !10173)
!10173 = !{!19, !19, !282}
!10174 = !DILocalVariable(name: "ptr", arg: 1, scope: !10171, file: !10110, line: 115, type: !19)
!10175 = !DILocation(line: 115, column: 16, scope: !10171)
!10176 = !DILocalVariable(name: "size", arg: 2, scope: !10171, file: !10110, line: 115, type: !282)
!10177 = !DILocation(line: 115, column: 28, scope: !10171)
!10178 = !DILocation(line: 118, column: 9, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10171, file: !10110, line: 118, column: 9)
!10180 = !DILocation(line: 118, column: 14, scope: !10179)
!10181 = !DILocation(line: 118, column: 9, scope: !10171)
!10182 = !DILocation(line: 119, column: 12, scope: !10179)
!10183 = !DILocation(line: 119, column: 2, scope: !10179)
!10184 = !DILocation(line: 121, column: 11, scope: !10171)
!10185 = !DILocation(line: 121, column: 25, scope: !10171)
!10186 = !DILocation(line: 121, column: 30, scope: !10171)
!10187 = !DILocation(line: 121, column: 17, scope: !10171)
!10188 = !DILocation(line: 121, column: 45, scope: !10171)
!10189 = !DILocation(line: 121, column: 38, scope: !10171)
!10190 = !DILocation(line: 121, column: 9, scope: !10171)
!10191 = !DILocation(line: 122, column: 9, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10171, file: !10110, line: 122, column: 9)
!10193 = !DILocation(line: 122, column: 13, scope: !10192)
!10194 = !DILocation(line: 122, column: 9, scope: !10171)
!10195 = !DILocation(line: 123, column: 12, scope: !10192)
!10196 = !DILocation(line: 123, column: 2, scope: !10192)
!10197 = !DILocation(line: 124, column: 12, scope: !10171)
!10198 = !DILocation(line: 124, column: 5, scope: !10171)
!10199 = distinct !DISubprogram(name: "erealloc3", scope: !10110, file: !10110, line: 134, type: !10200, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !926, retainedNodes: !176)
!10200 = !DISubroutineType(types: !10201)
!10201 = !{!19, !19, !282, !282}
!10202 = !DILocalVariable(name: "ptr", arg: 1, scope: !10199, file: !10110, line: 134, type: !19)
!10203 = !DILocation(line: 134, column: 17, scope: !10199)
!10204 = !DILocalVariable(name: "nmemb", arg: 2, scope: !10199, file: !10110, line: 134, type: !282)
!10205 = !DILocation(line: 134, column: 29, scope: !10199)
!10206 = !DILocalVariable(name: "size", arg: 3, scope: !10199, file: !10110, line: 134, type: !282)
!10207 = !DILocation(line: 134, column: 43, scope: !10199)
!10208 = !DILocation(line: 137, column: 9, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10199, file: !10110, line: 137, column: 9)
!10210 = !DILocation(line: 137, column: 15, scope: !10209)
!10211 = !DILocation(line: 137, column: 20, scope: !10209)
!10212 = !DILocation(line: 137, column: 23, scope: !10209)
!10213 = !DILocation(line: 137, column: 28, scope: !10209)
!10214 = !DILocation(line: 137, column: 9, scope: !10199)
!10215 = !DILocation(line: 138, column: 12, scope: !10209)
!10216 = !DILocation(line: 138, column: 2, scope: !10209)
!10217 = !DILocation(line: 139, column: 9, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10199, file: !10110, line: 139, column: 9)
!10219 = !DILocation(line: 139, column: 28, scope: !10218)
!10220 = !DILocation(line: 139, column: 26, scope: !10218)
!10221 = !DILocation(line: 139, column: 15, scope: !10218)
!10222 = !DILocation(line: 139, column: 9, scope: !10199)
!10223 = !DILocation(line: 140, column: 12, scope: !10218)
!10224 = !DILocation(line: 140, column: 2, scope: !10218)
!10225 = !DILocation(line: 142, column: 13, scope: !10199)
!10226 = !DILocation(line: 142, column: 10, scope: !10199)
!10227 = !DILocation(line: 143, column: 11, scope: !10199)
!10228 = !DILocation(line: 143, column: 25, scope: !10199)
!10229 = !DILocation(line: 143, column: 30, scope: !10199)
!10230 = !DILocation(line: 143, column: 17, scope: !10199)
!10231 = !DILocation(line: 143, column: 45, scope: !10199)
!10232 = !DILocation(line: 143, column: 38, scope: !10199)
!10233 = !DILocation(line: 143, column: 9, scope: !10199)
!10234 = !DILocation(line: 144, column: 9, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10199, file: !10110, line: 144, column: 9)
!10236 = !DILocation(line: 144, column: 13, scope: !10235)
!10237 = !DILocation(line: 144, column: 9, scope: !10199)
!10238 = !DILocation(line: 145, column: 12, scope: !10235)
!10239 = !DILocation(line: 145, column: 2, scope: !10235)
!10240 = !DILocation(line: 146, column: 12, scope: !10199)
!10241 = !DILocation(line: 146, column: 5, scope: !10199)
!10242 = distinct !DISubprogram(name: "estrdup", scope: !10110, file: !10110, line: 154, type: !10243, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !926, retainedNodes: !176)
!10243 = !DISubroutineType(types: !10244)
!10244 = !{!20, !221}
!10245 = !DILocalVariable(name: "src", arg: 1, scope: !10242, file: !10110, line: 154, type: !221)
!10246 = !DILocation(line: 154, column: 21, scope: !10242)
!10247 = !DILocalVariable(name: "dst", scope: !10242, file: !10110, line: 156, type: !20)
!10248 = !DILocation(line: 156, column: 11, scope: !10242)
!10249 = !DILocalVariable(name: "len", scope: !10242, file: !10110, line: 157, type: !282)
!10250 = !DILocation(line: 157, column: 12, scope: !10242)
!10251 = !DILocation(line: 159, column: 9, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10242, file: !10110, line: 159, column: 9)
!10253 = !DILocation(line: 159, column: 13, scope: !10252)
!10254 = !DILocation(line: 159, column: 9, scope: !10242)
!10255 = !DILocation(line: 160, column: 15, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10252, file: !10110, line: 159, column: 22)
!10257 = !DILocation(line: 160, column: 8, scope: !10256)
!10258 = !DILocation(line: 160, column: 6, scope: !10256)
!10259 = !DILocation(line: 161, column: 25, scope: !10256)
!10260 = !DILocation(line: 161, column: 29, scope: !10256)
!10261 = !DILocation(line: 161, column: 17, scope: !10256)
!10262 = !DILocation(line: 161, column: 6, scope: !10256)
!10263 = !DILocation(line: 162, column: 16, scope: !10256)
!10264 = !DILocation(line: 162, column: 21, scope: !10256)
!10265 = !DILocation(line: 162, column: 26, scope: !10256)
!10266 = !DILocation(line: 162, column: 9, scope: !10256)
!10267 = !DILocation(line: 163, column: 2, scope: !10256)
!10268 = !DILocation(line: 163, column: 6, scope: !10256)
!10269 = !DILocation(line: 163, column: 11, scope: !10256)
!10270 = !DILocation(line: 164, column: 5, scope: !10256)
!10271 = !DILocation(line: 165, column: 12, scope: !10242)
!10272 = !DILocation(line: 165, column: 5, scope: !10242)
!10273 = distinct !DISubprogram(name: "estrndup", scope: !10110, file: !10110, line: 173, type: !10274, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !926, retainedNodes: !176)
!10274 = !DISubroutineType(types: !10275)
!10275 = !{!20, !221, !282}
!10276 = !DILocalVariable(name: "src", arg: 1, scope: !10273, file: !10110, line: 173, type: !221)
!10277 = !DILocation(line: 173, column: 22, scope: !10273)
!10278 = !DILocalVariable(name: "maxlen", arg: 2, scope: !10273, file: !10110, line: 173, type: !282)
!10279 = !DILocation(line: 173, column: 34, scope: !10273)
!10280 = !DILocalVariable(name: "dst", scope: !10273, file: !10110, line: 175, type: !20)
!10281 = !DILocation(line: 175, column: 11, scope: !10273)
!10282 = !DILocalVariable(name: "len", scope: !10273, file: !10110, line: 176, type: !282)
!10283 = !DILocation(line: 176, column: 12, scope: !10273)
!10284 = !DILocation(line: 178, column: 9, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10273, file: !10110, line: 178, column: 9)
!10286 = !DILocation(line: 178, column: 13, scope: !10285)
!10287 = !DILocation(line: 178, column: 9, scope: !10273)
!10288 = !DILocation(line: 179, column: 15, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10285, file: !10110, line: 178, column: 22)
!10290 = !DILocation(line: 179, column: 8, scope: !10289)
!10291 = !DILocation(line: 179, column: 6, scope: !10289)
!10292 = !DILocation(line: 180, column: 6, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10289, file: !10110, line: 180, column: 6)
!10294 = !DILocation(line: 180, column: 12, scope: !10293)
!10295 = !DILocation(line: 180, column: 10, scope: !10293)
!10296 = !DILocation(line: 180, column: 6, scope: !10289)
!10297 = !DILocation(line: 181, column: 12, scope: !10293)
!10298 = !DILocation(line: 181, column: 10, scope: !10293)
!10299 = !DILocation(line: 181, column: 6, scope: !10293)
!10300 = !DILocation(line: 182, column: 25, scope: !10289)
!10301 = !DILocation(line: 182, column: 29, scope: !10289)
!10302 = !DILocation(line: 182, column: 17, scope: !10289)
!10303 = !DILocation(line: 182, column: 6, scope: !10289)
!10304 = !DILocation(line: 183, column: 16, scope: !10289)
!10305 = !DILocation(line: 183, column: 21, scope: !10289)
!10306 = !DILocation(line: 183, column: 26, scope: !10289)
!10307 = !DILocation(line: 183, column: 9, scope: !10289)
!10308 = !DILocation(line: 184, column: 2, scope: !10289)
!10309 = !DILocation(line: 184, column: 6, scope: !10289)
!10310 = !DILocation(line: 184, column: 11, scope: !10289)
!10311 = !DILocation(line: 185, column: 5, scope: !10289)
!10312 = !DILocation(line: 186, column: 12, scope: !10273)
!10313 = !DILocation(line: 186, column: 5, scope: !10273)
!10314 = distinct !DISubprogram(name: "easprintf", scope: !10110, file: !10110, line: 194, type: !10315, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !926, retainedNodes: !176)
!10315 = !DISubroutineType(types: !10316)
!10316 = !{!33, !615, !221, null}
!10317 = !DILocalVariable(name: "ret", arg: 1, scope: !10314, file: !10110, line: 194, type: !615)
!10318 = !DILocation(line: 194, column: 18, scope: !10314)
!10319 = !DILocalVariable(name: "fmt", arg: 2, scope: !10314, file: !10110, line: 194, type: !221)
!10320 = !DILocation(line: 194, column: 35, scope: !10314)
!10321 = !DILocalVariable(name: "len", scope: !10314, file: !10110, line: 196, type: !33)
!10322 = !DILocation(line: 196, column: 9, scope: !10314)
!10323 = !DILocalVariable(name: "ap", scope: !10314, file: !10110, line: 197, type: !10324)
!10324 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1116, line: 52, baseType: !10325)
!10325 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1118, line: 32, baseType: !10326)
!10326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !927, line: 197, baseType: !10327)
!10327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10328, size: 192, elements: !785)
!10328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !927, line: 197, size: 192, elements: !10329)
!10329 = !{!10330, !10331, !10332, !10333}
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !10328, file: !927, line: 197, baseType: !7, size: 32)
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !10328, file: !927, line: 197, baseType: !7, size: 32, offset: 32)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !10328, file: !927, line: 197, baseType: !19, size: 64, offset: 64)
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !10328, file: !927, line: 197, baseType: !19, size: 64, offset: 128)
!10334 = !DILocation(line: 197, column: 13, scope: !10314)
!10335 = !DILocation(line: 198, column: 5, scope: !10314)
!10336 = !DILocation(line: 199, column: 21, scope: !10314)
!10337 = !DILocation(line: 199, column: 26, scope: !10314)
!10338 = !DILocation(line: 199, column: 31, scope: !10314)
!10339 = !DILocation(line: 199, column: 11, scope: !10314)
!10340 = !DILocation(line: 199, column: 9, scope: !10314)
!10341 = !DILocation(line: 200, column: 5, scope: !10314)
!10342 = !DILocation(line: 202, column: 9, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10314, file: !10110, line: 202, column: 9)
!10344 = !DILocation(line: 202, column: 13, scope: !10343)
!10345 = !DILocation(line: 202, column: 9, scope: !10314)
!10346 = !DILocation(line: 203, column: 12, scope: !10343)
!10347 = !DILocation(line: 203, column: 2, scope: !10343)
!10348 = !DILocation(line: 204, column: 12, scope: !10314)
!10349 = !DILocation(line: 204, column: 5, scope: !10314)
!10350 = distinct !DISubprogram(name: "evasprintf", scope: !10110, file: !10110, line: 212, type: !10351, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !926, retainedNodes: !176)
!10351 = !DISubroutineType(types: !10352)
!10352 = !{!33, !615, !221, !10353}
!10353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10328, size: 64)
!10354 = !DILocalVariable(name: "ret", arg: 1, scope: !10350, file: !10110, line: 212, type: !615)
!10355 = !DILocation(line: 212, column: 19, scope: !10350)
!10356 = !DILocalVariable(name: "format", arg: 2, scope: !10350, file: !10110, line: 212, type: !221)
!10357 = !DILocation(line: 212, column: 36, scope: !10350)
!10358 = !DILocalVariable(name: "args", arg: 3, scope: !10350, file: !10110, line: 212, type: !10353)
!10359 = !DILocation(line: 212, column: 52, scope: !10350)
!10360 = !DILocalVariable(name: "len", scope: !10350, file: !10110, line: 214, type: !33)
!10361 = !DILocation(line: 214, column: 9, scope: !10350)
!10362 = !DILocation(line: 216, column: 26, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10350, file: !10110, line: 216, column: 9)
!10364 = !DILocation(line: 216, column: 31, scope: !10363)
!10365 = !DILocation(line: 216, column: 39, scope: !10363)
!10366 = !DILocation(line: 216, column: 16, scope: !10363)
!10367 = !DILocation(line: 216, column: 14, scope: !10363)
!10368 = !DILocation(line: 216, column: 46, scope: !10363)
!10369 = !DILocation(line: 216, column: 9, scope: !10350)
!10370 = !DILocation(line: 217, column: 12, scope: !10363)
!10371 = !DILocation(line: 217, column: 2, scope: !10363)
!10372 = !DILocation(line: 218, column: 12, scope: !10350)
!10373 = !DILocation(line: 218, column: 5, scope: !10350)
!10374 = distinct !DISubprogram(name: "efree", scope: !10110, file: !10110, line: 225, type: !10375, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !926, retainedNodes: !176)
!10375 = !DISubroutineType(types: !10376)
!10376 = !{null, !19}
!10377 = !DILocalVariable(name: "ptr", arg: 1, scope: !10374, file: !10110, line: 225, type: !19)
!10378 = !DILocation(line: 225, column: 13, scope: !10374)
!10379 = !DILocation(line: 227, column: 9, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10374, file: !10110, line: 227, column: 9)
!10381 = !DILocation(line: 227, column: 13, scope: !10380)
!10382 = !DILocation(line: 227, column: 9, scope: !10374)
!10383 = !DILocation(line: 228, column: 7, scope: !10380)
!10384 = !DILocation(line: 228, column: 2, scope: !10380)
!10385 = !DILocation(line: 229, column: 1, scope: !10374)
!10386 = distinct !DISubprogram(name: "atobool", scope: !10387, file: !10387, line: 44, type: !6049, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !929, retainedNodes: !176)
!10387 = !DIFile(filename: "./atobool.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!10388 = !DILocalVariable(name: "str", arg: 1, scope: !10386, file: !10387, line: 44, type: !221)
!10389 = !DILocation(line: 44, column: 21, scope: !10386)
!10390 = !DILocation(line: 46, column: 14, scope: !10386)
!10391 = !DILocation(line: 46, column: 13, scope: !10386)
!10392 = !DILocation(line: 46, column: 5, scope: !10386)
!10393 = !DILocation(line: 49, column: 10, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10395, file: !10387, line: 49, column: 10)
!10395 = distinct !DILexicalBlock(scope: !10386, file: !10387, line: 46, column: 19)
!10396 = !DILocation(line: 49, column: 17, scope: !10394)
!10397 = !DILocation(line: 49, column: 10, scope: !10395)
!10398 = !DILocation(line: 50, column: 11, scope: !10394)
!10399 = !DILocation(line: 50, column: 10, scope: !10394)
!10400 = !DILocation(line: 50, column: 15, scope: !10394)
!10401 = !DILocation(line: 50, column: 3, scope: !10394)
!10402 = !DILocation(line: 51, column: 6, scope: !10395)
!10403 = !DILocation(line: 54, column: 21, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10395, file: !10387, line: 54, column: 10)
!10405 = !DILocation(line: 54, column: 10, scope: !10404)
!10406 = !DILocation(line: 54, column: 33, scope: !10404)
!10407 = !DILocation(line: 54, column: 10, scope: !10395)
!10408 = !DILocation(line: 55, column: 3, scope: !10404)
!10409 = !DILocation(line: 56, column: 6, scope: !10395)
!10410 = !DILocation(line: 59, column: 21, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10395, file: !10387, line: 59, column: 10)
!10412 = !DILocation(line: 59, column: 10, scope: !10411)
!10413 = !DILocation(line: 59, column: 34, scope: !10411)
!10414 = !DILocation(line: 59, column: 10, scope: !10395)
!10415 = !DILocation(line: 60, column: 3, scope: !10411)
!10416 = !DILocation(line: 61, column: 6, scope: !10395)
!10417 = !DILocation(line: 64, column: 21, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10395, file: !10387, line: 64, column: 10)
!10419 = !DILocation(line: 64, column: 10, scope: !10418)
!10420 = !DILocation(line: 64, column: 32, scope: !10418)
!10421 = !DILocation(line: 64, column: 10, scope: !10395)
!10422 = !DILocation(line: 65, column: 3, scope: !10418)
!10423 = !DILocation(line: 66, column: 21, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10395, file: !10387, line: 66, column: 10)
!10425 = !DILocation(line: 66, column: 10, scope: !10424)
!10426 = !DILocation(line: 66, column: 33, scope: !10424)
!10427 = !DILocation(line: 66, column: 10, scope: !10395)
!10428 = !DILocation(line: 67, column: 3, scope: !10424)
!10429 = !DILocation(line: 68, column: 6, scope: !10395)
!10430 = !DILocation(line: 71, column: 21, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10395, file: !10387, line: 71, column: 10)
!10432 = !DILocation(line: 71, column: 10, scope: !10431)
!10433 = !DILocation(line: 71, column: 32, scope: !10431)
!10434 = !DILocation(line: 71, column: 10, scope: !10395)
!10435 = !DILocation(line: 72, column: 3, scope: !10431)
!10436 = !DILocation(line: 73, column: 6, scope: !10395)
!10437 = !DILocation(line: 76, column: 21, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10395, file: !10387, line: 76, column: 10)
!10439 = !DILocation(line: 76, column: 10, scope: !10438)
!10440 = !DILocation(line: 76, column: 35, scope: !10438)
!10441 = !DILocation(line: 76, column: 10, scope: !10395)
!10442 = !DILocation(line: 77, column: 3, scope: !10438)
!10443 = !DILocation(line: 78, column: 6, scope: !10395)
!10444 = !DILocation(line: 80, column: 5, scope: !10386)
!10445 = !DILocation(line: 81, column: 1, scope: !10386)
!10446 = distinct !DISubprogram(name: "touch", scope: !751, file: !751, line: 61, type: !10447, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !806, retainedNodes: !176)
!10447 = !DISubroutineType(types: !10448)
!10448 = !{!33, !33, !20, !10449}
!10449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10450, size: 64)
!10450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !2443, line: 8, size: 128, elements: !10451)
!10451 = !{!10452, !10453}
!10452 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10450, file: !2443, line: 10, baseType: !2446, size: 64)
!10453 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !10450, file: !2443, line: 11, baseType: !2448, size: 64, offset: 64)
!10454 = !DILocalVariable(name: "fd", arg: 1, scope: !10446, file: !751, line: 61, type: !33)
!10455 = !DILocation(line: 61, column: 11, scope: !10446)
!10456 = !DILocalVariable(name: "path", arg: 2, scope: !10446, file: !751, line: 61, type: !20)
!10457 = !DILocation(line: 61, column: 21, scope: !10446)
!10458 = !DILocalVariable(name: "tvp", arg: 3, scope: !10446, file: !751, line: 61, type: !10449)
!10459 = !DILocation(line: 61, column: 43, scope: !10446)
!10460 = !DILocalVariable(name: "times", scope: !10446, file: !751, line: 63, type: !10461)
!10461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10450, size: 256, elements: !170)
!10462 = !DILocation(line: 63, column: 20, scope: !10446)
!10463 = !DILocation(line: 65, column: 9, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10446, file: !751, line: 65, column: 9)
!10465 = !DILocation(line: 65, column: 13, scope: !10464)
!10466 = !DILocation(line: 65, column: 9, scope: !10446)
!10467 = !DILocation(line: 66, column: 38, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10464, file: !751, line: 65, column: 22)
!10469 = !DILocation(line: 66, column: 43, scope: !10468)
!10470 = !DILocation(line: 66, column: 20, scope: !10468)
!10471 = !DILocation(line: 66, column: 29, scope: !10468)
!10472 = !DILocation(line: 66, column: 36, scope: !10468)
!10473 = !DILocation(line: 66, column: 2, scope: !10468)
!10474 = !DILocation(line: 66, column: 11, scope: !10468)
!10475 = !DILocation(line: 66, column: 18, scope: !10468)
!10476 = !DILocation(line: 67, column: 40, scope: !10468)
!10477 = !DILocation(line: 67, column: 45, scope: !10468)
!10478 = !DILocation(line: 67, column: 21, scope: !10468)
!10479 = !DILocation(line: 67, column: 30, scope: !10468)
!10480 = !DILocation(line: 67, column: 38, scope: !10468)
!10481 = !DILocation(line: 67, column: 2, scope: !10468)
!10482 = !DILocation(line: 67, column: 11, scope: !10468)
!10483 = !DILocation(line: 67, column: 19, scope: !10468)
!10484 = !DILocation(line: 68, column: 5, scope: !10468)
!10485 = !DILocation(line: 71, column: 9, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10446, file: !751, line: 71, column: 9)
!10487 = !DILocation(line: 71, column: 12, scope: !10486)
!10488 = !DILocation(line: 71, column: 9, scope: !10446)
!10489 = !DILocation(line: 72, column: 17, scope: !10486)
!10490 = !DILocation(line: 72, column: 21, scope: !10486)
!10491 = !DILocation(line: 72, column: 27, scope: !10486)
!10492 = !DILocation(line: 72, column: 9, scope: !10486)
!10493 = !DILocation(line: 72, column: 2, scope: !10486)
!10494 = !DILocation(line: 75, column: 9, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10486, file: !751, line: 75, column: 9)
!10496 = !DILocation(line: 75, column: 14, scope: !10495)
!10497 = !DILocation(line: 75, column: 9, scope: !10486)
!10498 = !DILocation(line: 76, column: 16, scope: !10495)
!10499 = !DILocation(line: 76, column: 22, scope: !10495)
!10500 = !DILocation(line: 76, column: 28, scope: !10495)
!10501 = !DILocation(line: 76, column: 9, scope: !10495)
!10502 = !DILocation(line: 76, column: 2, scope: !10495)
!10503 = !DILocation(line: 78, column: 2, scope: !10495)
!10504 = !DILocation(line: 79, column: 1, scope: !10446)
!10505 = distinct !DISubprogram(name: "lock_file", scope: !751, file: !751, line: 86, type: !10506, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !806, retainedNodes: !176)
!10506 = !DISubroutineType(types: !10507)
!10507 = !{!33, !33, !33}
!10508 = !DILocalVariable(name: "fd", arg: 1, scope: !10505, file: !751, line: 86, type: !33)
!10509 = !DILocation(line: 86, column: 15, scope: !10505)
!10510 = !DILocalVariable(name: "lockit", arg: 2, scope: !10505, file: !751, line: 86, type: !33)
!10511 = !DILocation(line: 86, column: 23, scope: !10505)
!10512 = !DILocalVariable(name: "op", scope: !10505, file: !751, line: 88, type: !33)
!10513 = !DILocation(line: 88, column: 9, scope: !10505)
!10514 = !DILocation(line: 90, column: 13, scope: !10505)
!10515 = !DILocation(line: 90, column: 5, scope: !10505)
!10516 = !DILocation(line: 92, column: 9, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10505, file: !751, line: 90, column: 21)
!10518 = !DILocation(line: 93, column: 6, scope: !10517)
!10519 = !DILocation(line: 95, column: 9, scope: !10517)
!10520 = !DILocation(line: 96, column: 6, scope: !10517)
!10521 = !DILocation(line: 98, column: 9, scope: !10517)
!10522 = !DILocation(line: 99, column: 6, scope: !10517)
!10523 = !DILocation(line: 101, column: 18, scope: !10505)
!10524 = !DILocation(line: 101, column: 22, scope: !10505)
!10525 = !DILocation(line: 101, column: 12, scope: !10505)
!10526 = !DILocation(line: 101, column: 29, scope: !10505)
!10527 = !DILocation(line: 101, column: 5, scope: !10505)
!10528 = !DILocalVariable(name: "fp", arg: 1, scope: !750, file: !751, line: 149, type: !754)
!10529 = !DILocation(line: 149, column: 20, scope: !750)
!10530 = !DILocalVariable(name: "len", scope: !750, file: !751, line: 151, type: !282)
!10531 = !DILocation(line: 151, column: 12, scope: !750)
!10532 = !DILocalVariable(name: "cp", scope: !750, file: !751, line: 152, type: !20)
!10533 = !DILocation(line: 152, column: 11, scope: !750)
!10534 = !DILocation(line: 155, column: 33, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !750, file: !751, line: 155, column: 9)
!10536 = !DILocation(line: 155, column: 9, scope: !10535)
!10537 = !DILocation(line: 155, column: 37, scope: !10535)
!10538 = !DILocation(line: 155, column: 9, scope: !750)
!10539 = !DILocation(line: 157, column: 12, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10541, file: !751, line: 157, column: 6)
!10541 = distinct !DILexicalBlock(scope: !10535, file: !751, line: 155, column: 46)
!10542 = !DILocation(line: 157, column: 10, scope: !10540)
!10543 = !DILocation(line: 157, column: 30, scope: !10540)
!10544 = !DILocation(line: 157, column: 6, scope: !10541)
!10545 = !DILocation(line: 158, column: 7, scope: !10540)
!10546 = !DILocation(line: 158, column: 10, scope: !10540)
!10547 = !DILocation(line: 158, column: 6, scope: !10540)
!10548 = !DILocation(line: 161, column: 8, scope: !10541)
!10549 = !DILocation(line: 161, column: 6, scope: !10541)
!10550 = !DILocation(line: 162, column: 2, scope: !10541)
!10551 = !DILocation(line: 162, column: 9, scope: !10541)
!10552 = !DILocation(line: 162, column: 13, scope: !10541)
!10553 = !DILocation(line: 162, column: 17, scope: !10541)
!10554 = !DILocation(line: 162, column: 20, scope: !10541)
!10555 = !DILocation(line: 0, scope: !10541)
!10556 = !DILocation(line: 163, column: 10, scope: !10541)
!10557 = !DILocation(line: 163, column: 6, scope: !10541)
!10558 = !DILocation(line: 163, column: 17, scope: !10541)
!10559 = distinct !{!10559, !10550, !10560}
!10560 = !DILocation(line: 163, column: 19, scope: !10541)
!10561 = !DILocation(line: 164, column: 10, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10541, file: !751, line: 164, column: 2)
!10563 = !DILocation(line: 164, column: 7, scope: !10562)
!10564 = !DILocation(line: 164, column: 17, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10562, file: !751, line: 164, column: 2)
!10566 = !DILocation(line: 164, column: 2, scope: !10562)
!10567 = !DILocation(line: 165, column: 6, scope: !10565)
!10568 = !DILocation(line: 164, column: 48, scope: !10565)
!10569 = !DILocation(line: 164, column: 2, scope: !10565)
!10570 = distinct !{!10570, !10566, !10571}
!10571 = !DILocation(line: 165, column: 6, scope: !10562)
!10572 = !DILocation(line: 166, column: 5, scope: !10541)
!10573 = !DILocation(line: 167, column: 12, scope: !750)
!10574 = !DILocation(line: 167, column: 5, scope: !750)
!10575 = distinct !DISubprogram(name: "fmt_string", scope: !10576, file: !10576, line: 47, type: !744, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !931, retainedNodes: !176)
!10576 = !DIFile(filename: "./fmt_string.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!10577 = !DILocalVariable(name: "var", arg: 1, scope: !10575, file: !10576, line: 47, type: !221)
!10578 = !DILocation(line: 47, column: 24, scope: !10575)
!10579 = !DILocalVariable(name: "val", arg: 2, scope: !10575, file: !10576, line: 47, type: !221)
!10580 = !DILocation(line: 47, column: 41, scope: !10575)
!10581 = !DILocalVariable(name: "var_len", scope: !10575, file: !10576, line: 49, type: !282)
!10582 = !DILocation(line: 49, column: 12, scope: !10575)
!10583 = !DILocation(line: 49, column: 29, scope: !10575)
!10584 = !DILocation(line: 49, column: 22, scope: !10575)
!10585 = !DILocalVariable(name: "val_len", scope: !10575, file: !10576, line: 50, type: !282)
!10586 = !DILocation(line: 50, column: 12, scope: !10575)
!10587 = !DILocation(line: 50, column: 29, scope: !10575)
!10588 = !DILocation(line: 50, column: 22, scope: !10575)
!10589 = !DILocalVariable(name: "cp", scope: !10575, file: !10576, line: 51, type: !20)
!10590 = !DILocation(line: 51, column: 11, scope: !10575)
!10591 = !DILocalVariable(name: "str", scope: !10575, file: !10576, line: 51, type: !20)
!10592 = !DILocation(line: 51, column: 16, scope: !10575)
!10593 = !DILocation(line: 53, column: 23, scope: !10575)
!10594 = !DILocation(line: 53, column: 31, scope: !10575)
!10595 = !DILocation(line: 53, column: 37, scope: !10575)
!10596 = !DILocation(line: 53, column: 35, scope: !10575)
!10597 = !DILocation(line: 53, column: 45, scope: !10575)
!10598 = !DILocation(line: 53, column: 16, scope: !10575)
!10599 = !DILocation(line: 53, column: 14, scope: !10575)
!10600 = !DILocation(line: 53, column: 8, scope: !10575)
!10601 = !DILocation(line: 54, column: 6, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10575, file: !10576, line: 54, column: 6)
!10603 = !DILocation(line: 54, column: 10, scope: !10602)
!10604 = !DILocation(line: 54, column: 6, scope: !10575)
!10605 = !DILocation(line: 55, column: 9, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10602, file: !10576, line: 54, column: 19)
!10607 = !DILocation(line: 55, column: 13, scope: !10606)
!10608 = !DILocation(line: 55, column: 18, scope: !10606)
!10609 = !DILocation(line: 55, column: 2, scope: !10606)
!10610 = !DILocation(line: 56, column: 8, scope: !10606)
!10611 = !DILocation(line: 56, column: 5, scope: !10606)
!10612 = !DILocation(line: 57, column: 5, scope: !10606)
!10613 = !DILocation(line: 57, column: 8, scope: !10606)
!10614 = !DILocation(line: 58, column: 9, scope: !10606)
!10615 = !DILocation(line: 58, column: 13, scope: !10606)
!10616 = !DILocation(line: 58, column: 18, scope: !10606)
!10617 = !DILocation(line: 58, column: 2, scope: !10606)
!10618 = !DILocation(line: 59, column: 8, scope: !10606)
!10619 = !DILocation(line: 59, column: 5, scope: !10606)
!10620 = !DILocation(line: 60, column: 3, scope: !10606)
!10621 = !DILocation(line: 60, column: 6, scope: !10606)
!10622 = !DILocation(line: 61, column: 5, scope: !10606)
!10623 = !DILocation(line: 63, column: 12, scope: !10575)
!10624 = !DILocation(line: 63, column: 5, scope: !10575)
!10625 = distinct !DISubprogram(name: "lbuf_init", scope: !10626, file: !10626, line: 52, type: !10627, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !933, retainedNodes: !176)
!10626 = !DIFile(filename: "./lbuf.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!10627 = !DISubroutineType(types: !10628)
!10628 = !{null, !10629, !6048, !33, !221, !33}
!10629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10630, size: 64)
!10630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lbuf", file: !10631, line: 25, size: 320, elements: !10632)
!10631 = !DIFile(filename: "../include/lbuf.h", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!10632 = !{!10633, !10634, !10635, !10636, !10637, !10638, !10639}
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !10630, file: !10631, line: 26, baseType: !6048, size: 64)
!10634 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !10630, file: !10631, line: 27, baseType: !20, size: 64, offset: 64)
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "continuation", scope: !10630, file: !10631, line: 28, baseType: !221, size: 64, offset: 128)
!10636 = !DIDerivedType(tag: DW_TAG_member, name: "indent", scope: !10630, file: !10631, line: 29, baseType: !33, size: 32, offset: 192)
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !10630, file: !10631, line: 30, baseType: !33, size: 32, offset: 224)
!10638 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10630, file: !10631, line: 31, baseType: !33, size: 32, offset: 256)
!10639 = !DIDerivedType(tag: DW_TAG_member, name: "cols", scope: !10630, file: !10631, line: 32, baseType: !33, size: 32, offset: 288)
!10640 = !DILocalVariable(name: "lbuf", arg: 1, scope: !10625, file: !10626, line: 52, type: !10629)
!10641 = !DILocation(line: 52, column: 24, scope: !10625)
!10642 = !DILocalVariable(name: "output", arg: 2, scope: !10625, file: !10626, line: 52, type: !6048)
!10643 = !DILocation(line: 52, column: 36, scope: !10625)
!10644 = !DILocalVariable(name: "indent", arg: 3, scope: !10625, file: !10626, line: 53, type: !33)
!10645 = !DILocation(line: 53, column: 9, scope: !10625)
!10646 = !DILocalVariable(name: "continuation", arg: 4, scope: !10625, file: !10626, line: 53, type: !221)
!10647 = !DILocation(line: 53, column: 29, scope: !10625)
!10648 = !DILocalVariable(name: "cols", arg: 5, scope: !10625, file: !10626, line: 53, type: !33)
!10649 = !DILocation(line: 53, column: 47, scope: !10625)
!10650 = !DILocation(line: 55, column: 20, scope: !10625)
!10651 = !DILocation(line: 55, column: 5, scope: !10625)
!10652 = !DILocation(line: 55, column: 11, scope: !10625)
!10653 = !DILocation(line: 55, column: 18, scope: !10625)
!10654 = !DILocation(line: 56, column: 26, scope: !10625)
!10655 = !DILocation(line: 56, column: 5, scope: !10625)
!10656 = !DILocation(line: 56, column: 11, scope: !10625)
!10657 = !DILocation(line: 56, column: 24, scope: !10625)
!10658 = !DILocation(line: 57, column: 20, scope: !10625)
!10659 = !DILocation(line: 57, column: 5, scope: !10625)
!10660 = !DILocation(line: 57, column: 11, scope: !10625)
!10661 = !DILocation(line: 57, column: 18, scope: !10625)
!10662 = !DILocation(line: 58, column: 18, scope: !10625)
!10663 = !DILocation(line: 58, column: 5, scope: !10625)
!10664 = !DILocation(line: 58, column: 11, scope: !10625)
!10665 = !DILocation(line: 58, column: 16, scope: !10625)
!10666 = !DILocation(line: 59, column: 5, scope: !10625)
!10667 = !DILocation(line: 59, column: 11, scope: !10625)
!10668 = !DILocation(line: 59, column: 15, scope: !10625)
!10669 = !DILocation(line: 60, column: 5, scope: !10625)
!10670 = !DILocation(line: 60, column: 11, scope: !10625)
!10671 = !DILocation(line: 60, column: 16, scope: !10625)
!10672 = !DILocation(line: 61, column: 5, scope: !10625)
!10673 = !DILocation(line: 61, column: 11, scope: !10625)
!10674 = !DILocation(line: 61, column: 15, scope: !10625)
!10675 = !DILocation(line: 62, column: 1, scope: !10625)
!10676 = distinct !DISubprogram(name: "lbuf_destroy", scope: !10626, file: !10626, line: 65, type: !10677, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !933, retainedNodes: !176)
!10677 = !DISubroutineType(types: !10678)
!10678 = !{null, !10629}
!10679 = !DILocalVariable(name: "lbuf", arg: 1, scope: !10676, file: !10626, line: 65, type: !10629)
!10680 = !DILocation(line: 65, column: 27, scope: !10676)
!10681 = !DILocation(line: 67, column: 11, scope: !10676)
!10682 = !DILocation(line: 67, column: 17, scope: !10676)
!10683 = !DILocation(line: 67, column: 5, scope: !10676)
!10684 = !DILocation(line: 68, column: 5, scope: !10676)
!10685 = !DILocation(line: 68, column: 11, scope: !10676)
!10686 = !DILocation(line: 68, column: 15, scope: !10676)
!10687 = !DILocation(line: 69, column: 1, scope: !10676)
!10688 = distinct !DISubprogram(name: "lbuf_append_quoted", scope: !10626, file: !10626, line: 76, type: !10689, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !933, retainedNodes: !176)
!10689 = !DISubroutineType(types: !10690)
!10690 = !{null, !10629, !221, !221, null}
!10691 = !DILocalVariable(name: "lbuf", arg: 1, scope: !10688, file: !10626, line: 76, type: !10629)
!10692 = !DILocation(line: 76, column: 33, scope: !10688)
!10693 = !DILocalVariable(name: "set", arg: 2, scope: !10688, file: !10626, line: 76, type: !221)
!10694 = !DILocation(line: 76, column: 51, scope: !10688)
!10695 = !DILocalVariable(name: "fmt", arg: 3, scope: !10688, file: !10626, line: 76, type: !221)
!10696 = !DILocation(line: 76, column: 68, scope: !10688)
!10697 = !DILocalVariable(name: "ap", scope: !10688, file: !10626, line: 78, type: !10698)
!10698 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1116, line: 52, baseType: !10699)
!10699 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1118, line: 32, baseType: !10700)
!10700 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !934, line: 78, baseType: !10701)
!10701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10702, size: 192, elements: !785)
!10702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !934, line: 78, size: 192, elements: !10703)
!10703 = !{!10704, !10705, !10706, !10707}
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !10702, file: !934, line: 78, baseType: !7, size: 32)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !10702, file: !934, line: 78, baseType: !7, size: 32, offset: 32)
!10706 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !10702, file: !934, line: 78, baseType: !19, size: 64, offset: 64)
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !10702, file: !934, line: 78, baseType: !19, size: 64, offset: 128)
!10708 = !DILocation(line: 78, column: 13, scope: !10688)
!10709 = !DILocalVariable(name: "len", scope: !10688, file: !10626, line: 79, type: !33)
!10710 = !DILocation(line: 79, column: 9, scope: !10688)
!10711 = !DILocalVariable(name: "cp", scope: !10688, file: !10626, line: 80, type: !20)
!10712 = !DILocation(line: 80, column: 11, scope: !10688)
!10713 = !DILocalVariable(name: "s", scope: !10688, file: !10626, line: 80, type: !20)
!10714 = !DILocation(line: 80, column: 16, scope: !10688)
!10715 = !DILocation(line: 82, column: 5, scope: !10688)
!10716 = !DILocation(line: 83, column: 5, scope: !10688)
!10717 = !DILocation(line: 83, column: 13, scope: !10688)
!10718 = !DILocation(line: 83, column: 12, scope: !10688)
!10719 = !DILocation(line: 83, column: 17, scope: !10688)
!10720 = !DILocation(line: 84, column: 6, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10688, file: !10626, line: 83, column: 26)
!10722 = !DILocation(line: 85, column: 6, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10721, file: !10626, line: 85, column: 6)
!10724 = !DILocation(line: 85, column: 13, scope: !10723)
!10725 = !DILocation(line: 85, column: 20, scope: !10723)
!10726 = !DILocation(line: 85, column: 23, scope: !10723)
!10727 = !DILocation(line: 85, column: 30, scope: !10723)
!10728 = !DILocation(line: 85, column: 6, scope: !10721)
!10729 = !DILocation(line: 86, column: 10, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10723, file: !10626, line: 85, column: 38)
!10731 = !DILocation(line: 86, column: 8, scope: !10730)
!10732 = !DILocation(line: 87, column: 19, scope: !10730)
!10733 = !DILocation(line: 87, column: 12, scope: !10730)
!10734 = !DILocation(line: 87, column: 10, scope: !10730)
!10735 = !DILocation(line: 88, column: 2, scope: !10730)
!10736 = !DILocation(line: 90, column: 6, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10721, file: !10626, line: 90, column: 6)
!10738 = !DILocation(line: 90, column: 12, scope: !10737)
!10739 = !DILocation(line: 90, column: 19, scope: !10737)
!10740 = !DILocation(line: 90, column: 23, scope: !10737)
!10741 = !DILocation(line: 90, column: 16, scope: !10737)
!10742 = !DILocation(line: 90, column: 28, scope: !10737)
!10743 = !DILocation(line: 90, column: 35, scope: !10737)
!10744 = !DILocation(line: 90, column: 41, scope: !10737)
!10745 = !DILocation(line: 90, column: 32, scope: !10737)
!10746 = !DILocation(line: 90, column: 6, scope: !10721)
!10747 = !DILocation(line: 91, column: 6, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10737, file: !10626, line: 90, column: 47)
!10749 = !DILocation(line: 92, column: 3, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10748, file: !10626, line: 91, column: 9)
!10751 = !DILocation(line: 92, column: 9, scope: !10750)
!10752 = !DILocation(line: 92, column: 14, scope: !10750)
!10753 = !DILocation(line: 93, column: 6, scope: !10750)
!10754 = !DILocation(line: 93, column: 15, scope: !10748)
!10755 = !DILocation(line: 93, column: 21, scope: !10748)
!10756 = !DILocation(line: 93, column: 27, scope: !10748)
!10757 = !DILocation(line: 93, column: 25, scope: !10748)
!10758 = !DILocation(line: 93, column: 31, scope: !10748)
!10759 = !DILocation(line: 93, column: 38, scope: !10748)
!10760 = !DILocation(line: 93, column: 44, scope: !10748)
!10761 = !DILocation(line: 93, column: 35, scope: !10748)
!10762 = distinct !{!10762, !10747, !10763}
!10763 = !DILocation(line: 93, column: 48, scope: !10748)
!10764 = !DILocation(line: 94, column: 27, scope: !10748)
!10765 = !DILocation(line: 94, column: 33, scope: !10748)
!10766 = !DILocation(line: 94, column: 38, scope: !10748)
!10767 = !DILocation(line: 94, column: 44, scope: !10748)
!10768 = !DILocation(line: 94, column: 18, scope: !10748)
!10769 = !DILocation(line: 94, column: 6, scope: !10748)
!10770 = !DILocation(line: 94, column: 12, scope: !10748)
!10771 = !DILocation(line: 94, column: 16, scope: !10748)
!10772 = !DILocation(line: 95, column: 2, scope: !10748)
!10773 = !DILocation(line: 96, column: 7, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10721, file: !10626, line: 96, column: 6)
!10775 = !DILocation(line: 96, column: 6, scope: !10774)
!10776 = !DILocation(line: 96, column: 11, scope: !10774)
!10777 = !DILocation(line: 96, column: 6, scope: !10721)
!10778 = !DILocation(line: 97, column: 12, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10780, file: !10626, line: 97, column: 10)
!10780 = distinct !DILexicalBlock(scope: !10774, file: !10626, line: 96, column: 19)
!10781 = !DILocation(line: 97, column: 10, scope: !10779)
!10782 = !DILocation(line: 97, column: 19, scope: !10779)
!10783 = !DILocation(line: 97, column: 10, scope: !10780)
!10784 = !DILocation(line: 98, column: 3, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10779, file: !10626, line: 97, column: 27)
!10786 = !DILocation(line: 98, column: 24, scope: !10785)
!10787 = !DILocation(line: 98, column: 27, scope: !10785)
!10788 = !DILocation(line: 98, column: 16, scope: !10785)
!10789 = !DILocation(line: 98, column: 14, scope: !10785)
!10790 = !DILocation(line: 98, column: 33, scope: !10785)
!10791 = !DILocation(line: 99, column: 19, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10785, file: !10626, line: 98, column: 42)
!10793 = !DILocation(line: 99, column: 24, scope: !10792)
!10794 = !DILocation(line: 99, column: 22, scope: !10792)
!10795 = !DILocation(line: 99, column: 13, scope: !10792)
!10796 = !DILocation(line: 99, column: 11, scope: !10792)
!10797 = !DILocation(line: 100, column: 14, scope: !10792)
!10798 = !DILocation(line: 100, column: 20, scope: !10792)
!10799 = !DILocation(line: 100, column: 26, scope: !10792)
!10800 = !DILocation(line: 100, column: 32, scope: !10792)
!10801 = !DILocation(line: 100, column: 24, scope: !10792)
!10802 = !DILocation(line: 100, column: 37, scope: !10792)
!10803 = !DILocation(line: 100, column: 40, scope: !10792)
!10804 = !DILocation(line: 100, column: 7, scope: !10792)
!10805 = !DILocation(line: 101, column: 20, scope: !10792)
!10806 = !DILocation(line: 101, column: 7, scope: !10792)
!10807 = !DILocation(line: 101, column: 13, scope: !10792)
!10808 = !DILocation(line: 101, column: 17, scope: !10792)
!10809 = !DILocation(line: 102, column: 7, scope: !10792)
!10810 = !DILocation(line: 102, column: 13, scope: !10792)
!10811 = !DILocation(line: 102, column: 17, scope: !10792)
!10812 = !DILocation(line: 102, column: 23, scope: !10792)
!10813 = !DILocation(line: 102, column: 26, scope: !10792)
!10814 = !DILocation(line: 102, column: 30, scope: !10792)
!10815 = !DILocation(line: 103, column: 33, scope: !10792)
!10816 = !DILocation(line: 103, column: 32, scope: !10792)
!10817 = !DILocation(line: 103, column: 7, scope: !10792)
!10818 = !DILocation(line: 103, column: 13, scope: !10792)
!10819 = !DILocation(line: 103, column: 17, scope: !10792)
!10820 = !DILocation(line: 103, column: 23, scope: !10792)
!10821 = !DILocation(line: 103, column: 26, scope: !10792)
!10822 = !DILocation(line: 103, column: 30, scope: !10792)
!10823 = !DILocation(line: 104, column: 11, scope: !10792)
!10824 = !DILocation(line: 104, column: 14, scope: !10792)
!10825 = !DILocation(line: 104, column: 9, scope: !10792)
!10826 = distinct !{!10826, !10784, !10827}
!10827 = !DILocation(line: 105, column: 3, scope: !10785)
!10828 = !DILocation(line: 106, column: 8, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10785, file: !10626, line: 106, column: 7)
!10830 = !DILocation(line: 106, column: 7, scope: !10829)
!10831 = !DILocation(line: 106, column: 10, scope: !10829)
!10832 = !DILocation(line: 106, column: 7, scope: !10785)
!10833 = !DILocation(line: 107, column: 20, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10829, file: !10626, line: 106, column: 19)
!10835 = !DILocation(line: 107, column: 13, scope: !10834)
!10836 = !DILocation(line: 107, column: 11, scope: !10834)
!10837 = !DILocation(line: 108, column: 14, scope: !10834)
!10838 = !DILocation(line: 108, column: 20, scope: !10834)
!10839 = !DILocation(line: 108, column: 26, scope: !10834)
!10840 = !DILocation(line: 108, column: 32, scope: !10834)
!10841 = !DILocation(line: 108, column: 24, scope: !10834)
!10842 = !DILocation(line: 108, column: 37, scope: !10834)
!10843 = !DILocation(line: 108, column: 40, scope: !10834)
!10844 = !DILocation(line: 108, column: 7, scope: !10834)
!10845 = !DILocation(line: 109, column: 20, scope: !10834)
!10846 = !DILocation(line: 109, column: 7, scope: !10834)
!10847 = !DILocation(line: 109, column: 13, scope: !10834)
!10848 = !DILocation(line: 109, column: 17, scope: !10834)
!10849 = !DILocation(line: 110, column: 3, scope: !10834)
!10850 = !DILocation(line: 111, column: 6, scope: !10785)
!10851 = !DILocation(line: 112, column: 3, scope: !10785)
!10852 = distinct !{!10852, !10716, !10853}
!10853 = !DILocation(line: 118, column: 5, scope: !10688)
!10854 = !DILocation(line: 114, column: 2, scope: !10780)
!10855 = !DILocation(line: 115, column: 13, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10721, file: !10626, line: 115, column: 6)
!10857 = !DILocation(line: 115, column: 19, scope: !10856)
!10858 = !DILocation(line: 115, column: 18, scope: !10856)
!10859 = !DILocation(line: 115, column: 6, scope: !10856)
!10860 = !DILocation(line: 115, column: 24, scope: !10856)
!10861 = !DILocation(line: 115, column: 6, scope: !10721)
!10862 = !DILocation(line: 116, column: 6, scope: !10856)
!10863 = !DILocation(line: 116, column: 12, scope: !10856)
!10864 = !DILocation(line: 116, column: 16, scope: !10856)
!10865 = !DILocation(line: 116, column: 22, scope: !10856)
!10866 = !DILocation(line: 116, column: 25, scope: !10856)
!10867 = !DILocation(line: 116, column: 29, scope: !10856)
!10868 = !DILocation(line: 117, column: 31, scope: !10721)
!10869 = !DILocation(line: 117, column: 27, scope: !10721)
!10870 = !DILocation(line: 117, column: 2, scope: !10721)
!10871 = !DILocation(line: 117, column: 8, scope: !10721)
!10872 = !DILocation(line: 117, column: 12, scope: !10721)
!10873 = !DILocation(line: 117, column: 18, scope: !10721)
!10874 = !DILocation(line: 117, column: 21, scope: !10721)
!10875 = !DILocation(line: 117, column: 25, scope: !10721)
!10876 = !DILocation(line: 119, column: 5, scope: !10688)
!10877 = !DILocation(line: 119, column: 11, scope: !10688)
!10878 = !DILocation(line: 119, column: 15, scope: !10688)
!10879 = !DILocation(line: 119, column: 21, scope: !10688)
!10880 = !DILocation(line: 119, column: 26, scope: !10688)
!10881 = !DILocation(line: 120, column: 5, scope: !10688)
!10882 = !DILocation(line: 121, column: 1, scope: !10688)
!10883 = distinct !DISubprogram(name: "lbuf_append", scope: !10626, file: !10626, line: 127, type: !10884, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !933, retainedNodes: !176)
!10884 = !DISubroutineType(types: !10885)
!10885 = !{null, !10629, !221, null}
!10886 = !DILocalVariable(name: "lbuf", arg: 1, scope: !10883, file: !10626, line: 127, type: !10629)
!10887 = !DILocation(line: 127, column: 26, scope: !10883)
!10888 = !DILocalVariable(name: "fmt", arg: 2, scope: !10883, file: !10626, line: 127, type: !221)
!10889 = !DILocation(line: 127, column: 44, scope: !10883)
!10890 = !DILocalVariable(name: "ap", scope: !10883, file: !10626, line: 129, type: !10698)
!10891 = !DILocation(line: 129, column: 13, scope: !10883)
!10892 = !DILocalVariable(name: "len", scope: !10883, file: !10626, line: 130, type: !33)
!10893 = !DILocation(line: 130, column: 9, scope: !10883)
!10894 = !DILocalVariable(name: "s", scope: !10883, file: !10626, line: 131, type: !20)
!10895 = !DILocation(line: 131, column: 11, scope: !10883)
!10896 = !DILocation(line: 133, column: 5, scope: !10883)
!10897 = !DILocation(line: 134, column: 5, scope: !10883)
!10898 = !DILocation(line: 134, column: 13, scope: !10883)
!10899 = !DILocation(line: 134, column: 12, scope: !10883)
!10900 = !DILocation(line: 134, column: 17, scope: !10883)
!10901 = !DILocation(line: 135, column: 6, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10883, file: !10626, line: 134, column: 26)
!10903 = !DILocation(line: 136, column: 6, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10902, file: !10626, line: 136, column: 6)
!10905 = !DILocation(line: 136, column: 13, scope: !10904)
!10906 = !DILocation(line: 136, column: 20, scope: !10904)
!10907 = !DILocation(line: 136, column: 23, scope: !10904)
!10908 = !DILocation(line: 136, column: 30, scope: !10904)
!10909 = !DILocation(line: 136, column: 6, scope: !10902)
!10910 = !DILocation(line: 137, column: 10, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10904, file: !10626, line: 136, column: 38)
!10912 = !DILocation(line: 137, column: 8, scope: !10911)
!10913 = !DILocation(line: 138, column: 19, scope: !10911)
!10914 = !DILocation(line: 138, column: 12, scope: !10911)
!10915 = !DILocation(line: 138, column: 10, scope: !10911)
!10916 = !DILocation(line: 139, column: 2, scope: !10911)
!10917 = !DILocation(line: 140, column: 6, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10902, file: !10626, line: 140, column: 6)
!10919 = !DILocation(line: 140, column: 12, scope: !10918)
!10920 = !DILocation(line: 140, column: 18, scope: !10918)
!10921 = !DILocation(line: 140, column: 16, scope: !10918)
!10922 = !DILocation(line: 140, column: 22, scope: !10918)
!10923 = !DILocation(line: 140, column: 29, scope: !10918)
!10924 = !DILocation(line: 140, column: 35, scope: !10918)
!10925 = !DILocation(line: 140, column: 26, scope: !10918)
!10926 = !DILocation(line: 140, column: 6, scope: !10902)
!10927 = !DILocation(line: 141, column: 6, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10918, file: !10626, line: 140, column: 41)
!10929 = !DILocation(line: 142, column: 3, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10928, file: !10626, line: 141, column: 9)
!10931 = !DILocation(line: 142, column: 9, scope: !10930)
!10932 = !DILocation(line: 142, column: 14, scope: !10930)
!10933 = !DILocation(line: 143, column: 6, scope: !10930)
!10934 = !DILocation(line: 143, column: 15, scope: !10928)
!10935 = !DILocation(line: 143, column: 21, scope: !10928)
!10936 = !DILocation(line: 143, column: 27, scope: !10928)
!10937 = !DILocation(line: 143, column: 25, scope: !10928)
!10938 = !DILocation(line: 143, column: 31, scope: !10928)
!10939 = !DILocation(line: 143, column: 38, scope: !10928)
!10940 = !DILocation(line: 143, column: 44, scope: !10928)
!10941 = !DILocation(line: 143, column: 35, scope: !10928)
!10942 = distinct !{!10942, !10927, !10943}
!10943 = !DILocation(line: 143, column: 48, scope: !10928)
!10944 = !DILocation(line: 144, column: 27, scope: !10928)
!10945 = !DILocation(line: 144, column: 33, scope: !10928)
!10946 = !DILocation(line: 144, column: 38, scope: !10928)
!10947 = !DILocation(line: 144, column: 44, scope: !10928)
!10948 = !DILocation(line: 144, column: 18, scope: !10928)
!10949 = !DILocation(line: 144, column: 6, scope: !10928)
!10950 = !DILocation(line: 144, column: 12, scope: !10928)
!10951 = !DILocation(line: 144, column: 16, scope: !10928)
!10952 = !DILocation(line: 145, column: 2, scope: !10928)
!10953 = !DILocation(line: 146, column: 7, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10902, file: !10626, line: 146, column: 6)
!10955 = !DILocation(line: 146, column: 6, scope: !10954)
!10956 = !DILocation(line: 146, column: 11, scope: !10954)
!10957 = !DILocation(line: 146, column: 6, scope: !10902)
!10958 = !DILocation(line: 147, column: 12, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10960, file: !10626, line: 147, column: 10)
!10960 = distinct !DILexicalBlock(scope: !10954, file: !10626, line: 146, column: 19)
!10961 = !DILocation(line: 147, column: 10, scope: !10959)
!10962 = !DILocation(line: 147, column: 19, scope: !10959)
!10963 = !DILocation(line: 147, column: 10, scope: !10960)
!10964 = !DILocation(line: 148, column: 10, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10959, file: !10626, line: 147, column: 27)
!10966 = !DILocation(line: 148, column: 16, scope: !10965)
!10967 = !DILocation(line: 148, column: 22, scope: !10965)
!10968 = !DILocation(line: 148, column: 28, scope: !10965)
!10969 = !DILocation(line: 148, column: 20, scope: !10965)
!10970 = !DILocation(line: 148, column: 33, scope: !10965)
!10971 = !DILocation(line: 148, column: 36, scope: !10965)
!10972 = !DILocation(line: 148, column: 3, scope: !10965)
!10973 = !DILocation(line: 149, column: 16, scope: !10965)
!10974 = !DILocation(line: 149, column: 3, scope: !10965)
!10975 = !DILocation(line: 149, column: 9, scope: !10965)
!10976 = !DILocation(line: 149, column: 13, scope: !10965)
!10977 = !DILocation(line: 150, column: 6, scope: !10965)
!10978 = !DILocation(line: 151, column: 3, scope: !10965)
!10979 = distinct !{!10979, !10897, !10980}
!10980 = !DILocation(line: 155, column: 5, scope: !10883)
!10981 = !DILocation(line: 153, column: 2, scope: !10960)
!10982 = !DILocation(line: 154, column: 31, scope: !10902)
!10983 = !DILocation(line: 154, column: 27, scope: !10902)
!10984 = !DILocation(line: 154, column: 2, scope: !10902)
!10985 = !DILocation(line: 154, column: 8, scope: !10902)
!10986 = !DILocation(line: 154, column: 12, scope: !10902)
!10987 = !DILocation(line: 154, column: 18, scope: !10902)
!10988 = !DILocation(line: 154, column: 21, scope: !10902)
!10989 = !DILocation(line: 154, column: 25, scope: !10902)
!10990 = !DILocation(line: 156, column: 5, scope: !10883)
!10991 = !DILocation(line: 156, column: 11, scope: !10883)
!10992 = !DILocation(line: 156, column: 15, scope: !10883)
!10993 = !DILocation(line: 156, column: 21, scope: !10883)
!10994 = !DILocation(line: 156, column: 26, scope: !10883)
!10995 = !DILocation(line: 157, column: 5, scope: !10883)
!10996 = !DILocation(line: 158, column: 1, scope: !10883)
!10997 = distinct !DISubprogram(name: "lbuf_print", scope: !10626, file: !10626, line: 220, type: !10677, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !933, retainedNodes: !176)
!10998 = !DILocalVariable(name: "lbuf", arg: 1, scope: !10997, file: !10626, line: 220, type: !10629)
!10999 = !DILocation(line: 220, column: 25, scope: !10997)
!11000 = !DILocalVariable(name: "cp", scope: !10997, file: !10626, line: 222, type: !20)
!11001 = !DILocation(line: 222, column: 11, scope: !10997)
!11002 = !DILocalVariable(name: "ep", scope: !10997, file: !10626, line: 222, type: !20)
!11003 = !DILocation(line: 222, column: 16, scope: !10997)
!11004 = !DILocalVariable(name: "len", scope: !10997, file: !10626, line: 223, type: !33)
!11005 = !DILocation(line: 223, column: 9, scope: !10997)
!11006 = !DILocation(line: 225, column: 9, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10997, file: !10626, line: 225, column: 9)
!11008 = !DILocation(line: 225, column: 15, scope: !11007)
!11009 = !DILocation(line: 225, column: 19, scope: !11007)
!11010 = !DILocation(line: 225, column: 27, scope: !11007)
!11011 = !DILocation(line: 225, column: 30, scope: !11007)
!11012 = !DILocation(line: 225, column: 36, scope: !11007)
!11013 = !DILocation(line: 225, column: 40, scope: !11007)
!11014 = !DILocation(line: 225, column: 9, scope: !10997)
!11015 = !DILocation(line: 226, column: 2, scope: !11007)
!11016 = !DILocation(line: 229, column: 11, scope: !10997)
!11017 = !DILocation(line: 229, column: 17, scope: !10997)
!11018 = !DILocation(line: 229, column: 39, scope: !10997)
!11019 = !DILocation(line: 229, column: 45, scope: !10997)
!11020 = !DILocation(line: 229, column: 32, scope: !10997)
!11021 = !DILocation(line: 229, column: 9, scope: !10997)
!11022 = !DILocation(line: 230, column: 9, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !10997, file: !10626, line: 230, column: 9)
!11024 = !DILocation(line: 230, column: 15, scope: !11023)
!11025 = !DILocation(line: 230, column: 23, scope: !11023)
!11026 = !DILocation(line: 230, column: 29, scope: !11023)
!11027 = !DILocation(line: 230, column: 38, scope: !11023)
!11028 = !DILocation(line: 230, column: 36, scope: !11023)
!11029 = !DILocation(line: 230, column: 42, scope: !11023)
!11030 = !DILocation(line: 230, column: 20, scope: !11023)
!11031 = !DILocation(line: 230, column: 9, scope: !10997)
!11032 = !DILocation(line: 231, column: 2, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11023, file: !10626, line: 230, column: 48)
!11034 = !DILocation(line: 231, column: 8, scope: !11033)
!11035 = !DILocation(line: 231, column: 12, scope: !11033)
!11036 = !DILocation(line: 231, column: 18, scope: !11033)
!11037 = !DILocation(line: 231, column: 23, scope: !11033)
!11038 = !DILocation(line: 232, column: 2, scope: !11033)
!11039 = !DILocation(line: 232, column: 8, scope: !11033)
!11040 = !DILocation(line: 232, column: 15, scope: !11033)
!11041 = !DILocation(line: 232, column: 21, scope: !11033)
!11042 = !DILocation(line: 233, column: 2, scope: !11033)
!11043 = !DILocation(line: 237, column: 15, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !10997, file: !10626, line: 237, column: 5)
!11045 = !DILocation(line: 237, column: 21, scope: !11044)
!11046 = !DILocation(line: 237, column: 13, scope: !11044)
!11047 = !DILocation(line: 237, column: 10, scope: !11044)
!11048 = !DILocation(line: 237, column: 26, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11044, file: !10626, line: 237, column: 5)
!11050 = !DILocation(line: 237, column: 29, scope: !11049)
!11051 = !DILocation(line: 237, column: 37, scope: !11049)
!11052 = !DILocation(line: 237, column: 41, scope: !11049)
!11053 = !DILocation(line: 237, column: 40, scope: !11049)
!11054 = !DILocation(line: 237, column: 44, scope: !11049)
!11055 = !DILocation(line: 0, scope: !11049)
!11056 = !DILocation(line: 237, column: 5, scope: !11044)
!11057 = !DILocation(line: 238, column: 7, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11059, file: !10626, line: 238, column: 6)
!11059 = distinct !DILexicalBlock(scope: !11049, file: !10626, line: 237, column: 55)
!11060 = !DILocation(line: 238, column: 6, scope: !11058)
!11061 = !DILocation(line: 238, column: 10, scope: !11058)
!11062 = !DILocation(line: 238, column: 6, scope: !11059)
!11063 = !DILocation(line: 239, column: 6, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11058, file: !10626, line: 238, column: 19)
!11065 = !DILocation(line: 239, column: 12, scope: !11064)
!11066 = !DILocation(line: 240, column: 8, scope: !11064)
!11067 = !DILocation(line: 241, column: 2, scope: !11064)
!11068 = !DILocation(line: 242, column: 12, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11058, file: !10626, line: 241, column: 9)
!11070 = !DILocation(line: 242, column: 18, scope: !11069)
!11071 = !DILocation(line: 242, column: 25, scope: !11069)
!11072 = !DILocation(line: 242, column: 30, scope: !11069)
!11073 = !DILocation(line: 242, column: 36, scope: !11069)
!11074 = !DILocation(line: 242, column: 28, scope: !11069)
!11075 = !DILocation(line: 242, column: 22, scope: !11069)
!11076 = !DILocation(line: 242, column: 10, scope: !11069)
!11077 = !DILocation(line: 243, column: 23, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11069, file: !10626, line: 243, column: 10)
!11079 = !DILocation(line: 243, column: 33, scope: !11078)
!11080 = !DILocation(line: 243, column: 16, scope: !11078)
!11081 = !DILocation(line: 243, column: 14, scope: !11078)
!11082 = !DILocation(line: 243, column: 39, scope: !11078)
!11083 = !DILocation(line: 243, column: 10, scope: !11069)
!11084 = !DILocation(line: 244, column: 15, scope: !11078)
!11085 = !DILocation(line: 244, column: 20, scope: !11078)
!11086 = !DILocation(line: 244, column: 18, scope: !11078)
!11087 = !DILocation(line: 244, column: 9, scope: !11078)
!11088 = !DILocation(line: 244, column: 7, scope: !11078)
!11089 = !DILocation(line: 244, column: 3, scope: !11078)
!11090 = !DILocation(line: 245, column: 10, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11069, file: !10626, line: 245, column: 10)
!11092 = !DILocation(line: 245, column: 10, scope: !11069)
!11093 = !DILocation(line: 246, column: 16, scope: !11091)
!11094 = !DILocation(line: 246, column: 22, scope: !11091)
!11095 = !DILocation(line: 246, column: 26, scope: !11091)
!11096 = !DILocation(line: 246, column: 3, scope: !11091)
!11097 = !DILocation(line: 247, column: 11, scope: !11069)
!11098 = !DILocation(line: 247, column: 16, scope: !11069)
!11099 = !DILocation(line: 247, column: 19, scope: !11069)
!11100 = !DILocation(line: 247, column: 9, scope: !11069)
!11101 = !DILocation(line: 237, column: 5, scope: !11049)
!11102 = distinct !{!11102, !11056, !11103}
!11103 = !DILocation(line: 249, column: 5, scope: !11044)
!11104 = !DILabel(scope: !10997, name: "done", file: !10626, line: 251)
!11105 = !DILocation(line: 251, column: 1, scope: !10997)
!11106 = !DILocation(line: 252, column: 5, scope: !10997)
!11107 = !DILocation(line: 252, column: 11, scope: !10997)
!11108 = !DILocation(line: 252, column: 15, scope: !10997)
!11109 = !DILocation(line: 253, column: 1, scope: !10997)
!11110 = distinct !DISubprogram(name: "lbuf_println", scope: !10626, file: !10626, line: 161, type: !11111, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !933, retainedNodes: !176)
!11111 = !DISubroutineType(types: !11112)
!11112 = !{null, !10629, !20, !33}
!11113 = !DILocalVariable(name: "lbuf", arg: 1, scope: !11110, file: !10626, line: 161, type: !10629)
!11114 = !DILocation(line: 161, column: 27, scope: !11110)
!11115 = !DILocalVariable(name: "line", arg: 2, scope: !11110, file: !10626, line: 161, type: !20)
!11116 = !DILocation(line: 161, column: 39, scope: !11110)
!11117 = !DILocalVariable(name: "len", arg: 3, scope: !11110, file: !10626, line: 161, type: !33)
!11118 = !DILocation(line: 161, column: 49, scope: !11110)
!11119 = !DILocalVariable(name: "cp", scope: !11110, file: !10626, line: 163, type: !20)
!11120 = !DILocation(line: 163, column: 11, scope: !11110)
!11121 = !DILocalVariable(name: "save", scope: !11110, file: !10626, line: 163, type: !21)
!11122 = !DILocation(line: 163, column: 15, scope: !11110)
!11123 = !DILocalVariable(name: "i", scope: !11110, file: !10626, line: 164, type: !33)
!11124 = !DILocation(line: 164, column: 9, scope: !11110)
!11125 = !DILocalVariable(name: "have", scope: !11110, file: !10626, line: 164, type: !33)
!11126 = !DILocation(line: 164, column: 12, scope: !11110)
!11127 = !DILocalVariable(name: "contlen", scope: !11110, file: !10626, line: 164, type: !33)
!11128 = !DILocation(line: 164, column: 18, scope: !11110)
!11129 = !DILocation(line: 166, column: 15, scope: !11110)
!11130 = !DILocation(line: 166, column: 21, scope: !11110)
!11131 = !DILocation(line: 166, column: 43, scope: !11110)
!11132 = !DILocation(line: 166, column: 49, scope: !11110)
!11133 = !DILocation(line: 166, column: 36, scope: !11110)
!11134 = !DILocation(line: 166, column: 13, scope: !11110)
!11135 = !DILocation(line: 172, column: 10, scope: !11110)
!11136 = !DILocation(line: 172, column: 8, scope: !11110)
!11137 = !DILocation(line: 173, column: 12, scope: !11110)
!11138 = !DILocation(line: 173, column: 18, scope: !11110)
!11139 = !DILocation(line: 173, column: 10, scope: !11110)
!11140 = !DILocation(line: 174, column: 5, scope: !11110)
!11141 = !DILocation(line: 174, column: 12, scope: !11110)
!11142 = !DILocation(line: 174, column: 15, scope: !11110)
!11143 = !DILocation(line: 174, column: 23, scope: !11110)
!11144 = !DILocation(line: 174, column: 27, scope: !11110)
!11145 = !DILocation(line: 174, column: 26, scope: !11110)
!11146 = !DILocation(line: 174, column: 30, scope: !11110)
!11147 = !DILocation(line: 0, scope: !11110)
!11148 = !DILocalVariable(name: "ep", scope: !11149, file: !10626, line: 175, type: !20)
!11149 = distinct !DILexicalBlock(scope: !11110, file: !10626, line: 174, column: 39)
!11150 = !DILocation(line: 175, column: 8, scope: !11149)
!11151 = !DILocalVariable(name: "need", scope: !11149, file: !10626, line: 176, type: !33)
!11152 = !DILocation(line: 176, column: 6, scope: !11149)
!11153 = !DILocation(line: 176, column: 13, scope: !11149)
!11154 = !DILocation(line: 176, column: 25, scope: !11149)
!11155 = !DILocation(line: 176, column: 30, scope: !11149)
!11156 = !DILocation(line: 176, column: 28, scope: !11149)
!11157 = !DILocation(line: 176, column: 19, scope: !11149)
!11158 = !DILocation(line: 176, column: 17, scope: !11149)
!11159 = !DILocation(line: 178, column: 6, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11149, file: !10626, line: 178, column: 6)
!11161 = !DILocation(line: 178, column: 13, scope: !11160)
!11162 = !DILocation(line: 178, column: 11, scope: !11160)
!11163 = !DILocation(line: 178, column: 6, scope: !11149)
!11164 = !DILocation(line: 179, column: 14, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11160, file: !10626, line: 178, column: 19)
!11166 = !DILocation(line: 179, column: 11, scope: !11165)
!11167 = !DILocation(line: 180, column: 24, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11165, file: !10626, line: 180, column: 10)
!11169 = !DILocation(line: 180, column: 33, scope: !11168)
!11170 = !DILocation(line: 180, column: 16, scope: !11168)
!11171 = !DILocation(line: 180, column: 14, scope: !11168)
!11172 = !DILocation(line: 180, column: 40, scope: !11168)
!11173 = !DILocation(line: 180, column: 10, scope: !11165)
!11174 = !DILocation(line: 181, column: 15, scope: !11168)
!11175 = !DILocation(line: 181, column: 20, scope: !11168)
!11176 = !DILocation(line: 181, column: 18, scope: !11168)
!11177 = !DILocation(line: 181, column: 31, scope: !11168)
!11178 = !DILocation(line: 181, column: 38, scope: !11168)
!11179 = !DILocation(line: 181, column: 36, scope: !11168)
!11180 = !DILocation(line: 181, column: 8, scope: !11168)
!11181 = !DILocation(line: 181, column: 6, scope: !11168)
!11182 = !DILocation(line: 181, column: 3, scope: !11168)
!11183 = !DILocation(line: 182, column: 10, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11165, file: !10626, line: 182, column: 10)
!11185 = !DILocation(line: 182, column: 13, scope: !11184)
!11186 = !DILocation(line: 182, column: 10, scope: !11165)
!11187 = !DILocation(line: 183, column: 16, scope: !11184)
!11188 = !DILocation(line: 183, column: 21, scope: !11184)
!11189 = !DILocation(line: 183, column: 19, scope: !11184)
!11190 = !DILocation(line: 183, column: 10, scope: !11184)
!11191 = !DILocation(line: 183, column: 8, scope: !11184)
!11192 = !DILocation(line: 183, column: 3, scope: !11184)
!11193 = !DILocation(line: 184, column: 2, scope: !11165)
!11194 = !DILocation(line: 185, column: 6, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11149, file: !10626, line: 185, column: 6)
!11196 = !DILocation(line: 185, column: 12, scope: !11195)
!11197 = !DILocation(line: 185, column: 9, scope: !11195)
!11198 = !DILocation(line: 185, column: 6, scope: !11149)
!11199 = !DILocation(line: 188, column: 13, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11201, file: !10626, line: 188, column: 6)
!11201 = distinct !DILexicalBlock(scope: !11195, file: !10626, line: 185, column: 18)
!11202 = !DILocation(line: 188, column: 11, scope: !11200)
!11203 = !DILocation(line: 188, column: 18, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11200, file: !10626, line: 188, column: 6)
!11205 = !DILocation(line: 188, column: 22, scope: !11204)
!11206 = !DILocation(line: 188, column: 28, scope: !11204)
!11207 = !DILocation(line: 188, column: 20, scope: !11204)
!11208 = !DILocation(line: 188, column: 6, scope: !11200)
!11209 = !DILocation(line: 189, column: 3, scope: !11204)
!11210 = !DILocation(line: 189, column: 9, scope: !11204)
!11211 = !DILocation(line: 188, column: 37, scope: !11204)
!11212 = !DILocation(line: 188, column: 6, scope: !11204)
!11213 = distinct !{!11213, !11208, !11214}
!11214 = !DILocation(line: 189, column: 19, scope: !11200)
!11215 = !DILocation(line: 190, column: 2, scope: !11201)
!11216 = !DILocation(line: 192, column: 9, scope: !11149)
!11217 = !DILocation(line: 192, column: 12, scope: !11149)
!11218 = !DILocation(line: 192, column: 7, scope: !11149)
!11219 = !DILocation(line: 193, column: 2, scope: !11149)
!11220 = !DILocation(line: 193, column: 5, scope: !11149)
!11221 = !DILocation(line: 193, column: 11, scope: !11149)
!11222 = !DILocation(line: 194, column: 2, scope: !11149)
!11223 = !DILocation(line: 194, column: 8, scope: !11149)
!11224 = !DILocation(line: 194, column: 15, scope: !11149)
!11225 = !DILocation(line: 195, column: 13, scope: !11149)
!11226 = !DILocation(line: 195, column: 2, scope: !11149)
!11227 = !DILocation(line: 195, column: 5, scope: !11149)
!11228 = !DILocation(line: 195, column: 11, scope: !11149)
!11229 = !DILocation(line: 196, column: 7, scope: !11149)
!11230 = !DILocation(line: 196, column: 5, scope: !11149)
!11231 = !DILocation(line: 202, column: 6, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11149, file: !10626, line: 202, column: 6)
!11233 = !DILocation(line: 202, column: 9, scope: !11232)
!11234 = !DILocation(line: 202, column: 6, scope: !11149)
!11235 = !DILocation(line: 203, column: 13, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11232, file: !10626, line: 202, column: 18)
!11237 = !DILocation(line: 203, column: 19, scope: !11236)
!11238 = !DILocation(line: 203, column: 26, scope: !11236)
!11239 = !DILocation(line: 203, column: 32, scope: !11236)
!11240 = !DILocation(line: 203, column: 24, scope: !11236)
!11241 = !DILocation(line: 203, column: 11, scope: !11236)
!11242 = !DILocation(line: 204, column: 11, scope: !11236)
!11243 = !DILocation(line: 204, column: 18, scope: !11236)
!11244 = !DILocation(line: 204, column: 16, scope: !11236)
!11245 = !DILocation(line: 204, column: 9, scope: !11236)
!11246 = !DILocation(line: 205, column: 6, scope: !11236)
!11247 = !DILocation(line: 205, column: 13, scope: !11236)
!11248 = !DILocation(line: 205, column: 18, scope: !11236)
!11249 = !DILocation(line: 205, column: 16, scope: !11236)
!11250 = !DILocation(line: 205, column: 21, scope: !11236)
!11251 = !DILocation(line: 205, column: 24, scope: !11236)
!11252 = !DILocation(line: 0, scope: !11236)
!11253 = !DILocation(line: 206, column: 5, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11236, file: !10626, line: 205, column: 53)
!11255 = distinct !{!11255, !11246, !11256}
!11256 = !DILocation(line: 207, column: 6, scope: !11236)
!11257 = !DILocation(line: 208, column: 10, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11236, file: !10626, line: 208, column: 10)
!11259 = !DILocation(line: 208, column: 10, scope: !11236)
!11260 = !DILocation(line: 209, column: 3, scope: !11258)
!11261 = !DILocation(line: 209, column: 9, scope: !11258)
!11262 = !DILocation(line: 209, column: 16, scope: !11258)
!11263 = !DILocation(line: 209, column: 22, scope: !11258)
!11264 = !DILocation(line: 210, column: 2, scope: !11236)
!11265 = !DILocation(line: 211, column: 2, scope: !11149)
!11266 = !DILocation(line: 211, column: 8, scope: !11149)
!11267 = distinct !{!11267, !11140, !11268}
!11268 = !DILocation(line: 212, column: 5, scope: !11110)
!11269 = !DILocation(line: 213, column: 1, scope: !11110)
!11270 = distinct !DISubprogram(name: "tq_pop", scope: !940, file: !940, line: 53, type: !11271, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !935, retainedNodes: !176)
!11271 = !DISubroutineType(types: !11272)
!11272 = !{!19, !19}
!11273 = !DILocalVariable(name: "vh", arg: 1, scope: !11270, file: !940, line: 53, type: !19)
!11274 = !DILocation(line: 53, column: 14, scope: !11270)
!11275 = !DILocalVariable(name: "h", scope: !11270, file: !940, line: 55, type: !938)
!11276 = !DILocation(line: 55, column: 29, scope: !11270)
!11277 = !DILocation(line: 55, column: 59, scope: !11270)
!11278 = !DILocation(line: 55, column: 33, scope: !11270)
!11279 = !DILocalVariable(name: "last", scope: !11270, file: !940, line: 56, type: !19)
!11280 = !DILocation(line: 56, column: 11, scope: !11270)
!11281 = !DILocation(line: 58, column: 10, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11270, file: !940, line: 58, column: 9)
!11283 = !DILocation(line: 58, column: 9, scope: !11270)
!11284 = !DILocation(line: 59, column: 17, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11282, file: !940, line: 58, column: 23)
!11286 = !DILocation(line: 59, column: 20, scope: !11285)
!11287 = !DILocation(line: 59, column: 9, scope: !11285)
!11288 = !DILocation(line: 59, column: 7, scope: !11285)
!11289 = !DILocation(line: 60, column: 6, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11285, file: !940, line: 60, column: 6)
!11291 = !DILocation(line: 60, column: 9, scope: !11290)
!11292 = !DILocation(line: 60, column: 18, scope: !11290)
!11293 = !DILocation(line: 60, column: 21, scope: !11290)
!11294 = !DILocation(line: 60, column: 15, scope: !11290)
!11295 = !DILocation(line: 60, column: 6, scope: !11285)
!11296 = !DILocation(line: 61, column: 6, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11290, file: !940, line: 60, column: 27)
!11298 = !DILocation(line: 61, column: 9, scope: !11297)
!11299 = !DILocation(line: 61, column: 15, scope: !11297)
!11300 = !DILocation(line: 62, column: 6, scope: !11297)
!11301 = !DILocation(line: 62, column: 9, scope: !11297)
!11302 = !DILocation(line: 62, column: 14, scope: !11297)
!11303 = !DILocation(line: 63, column: 2, scope: !11297)
!11304 = !DILocation(line: 64, column: 16, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11290, file: !940, line: 63, column: 9)
!11306 = !DILocation(line: 64, column: 19, scope: !11305)
!11307 = !DILocation(line: 64, column: 25, scope: !11305)
!11308 = !DILocation(line: 64, column: 6, scope: !11305)
!11309 = !DILocation(line: 64, column: 9, scope: !11305)
!11310 = !DILocation(line: 64, column: 14, scope: !11305)
!11311 = !DILocation(line: 65, column: 6, scope: !11305)
!11312 = !DILocation(line: 65, column: 9, scope: !11305)
!11313 = !DILocation(line: 65, column: 15, scope: !11305)
!11314 = !DILocation(line: 65, column: 20, scope: !11305)
!11315 = !DILocation(line: 67, column: 5, scope: !11285)
!11316 = !DILocation(line: 68, column: 12, scope: !11270)
!11317 = !DILocation(line: 68, column: 5, scope: !11270)
!11318 = distinct !DISubprogram(name: "list2tq", scope: !940, file: !940, line: 76, type: !11319, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !935, retainedNodes: !176)
!11319 = !DISubroutineType(types: !11320)
!11320 = !{null, !19, !19}
!11321 = !DILocalVariable(name: "vh", arg: 1, scope: !11318, file: !940, line: 76, type: !19)
!11322 = !DILocation(line: 76, column: 15, scope: !11318)
!11323 = !DILocalVariable(name: "vl", arg: 2, scope: !11318, file: !940, line: 76, type: !19)
!11324 = !DILocation(line: 76, column: 25, scope: !11318)
!11325 = !DILocalVariable(name: "h", scope: !11318, file: !940, line: 78, type: !938)
!11326 = !DILocation(line: 78, column: 29, scope: !11318)
!11327 = !DILocation(line: 78, column: 59, scope: !11318)
!11328 = !DILocation(line: 78, column: 33, scope: !11318)
!11329 = !DILocalVariable(name: "l", scope: !11318, file: !940, line: 79, type: !943)
!11330 = !DILocation(line: 79, column: 24, scope: !11318)
!11331 = !DILocation(line: 79, column: 49, scope: !11318)
!11332 = !DILocation(line: 79, column: 28, scope: !11318)
!11333 = !DILocation(line: 81, column: 9, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11318, file: !940, line: 81, column: 9)
!11335 = !DILocation(line: 81, column: 11, scope: !11334)
!11336 = !DILocation(line: 81, column: 9, scope: !11318)
!11337 = !DILocation(line: 88, column: 13, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11334, file: !940, line: 81, column: 20)
!11339 = !DILocation(line: 88, column: 2, scope: !11338)
!11340 = !DILocation(line: 88, column: 5, scope: !11338)
!11341 = !DILocation(line: 88, column: 11, scope: !11338)
!11342 = !DILocation(line: 89, column: 12, scope: !11338)
!11343 = !DILocation(line: 89, column: 15, scope: !11338)
!11344 = !DILocation(line: 89, column: 2, scope: !11338)
!11345 = !DILocation(line: 89, column: 5, scope: !11338)
!11346 = !DILocation(line: 89, column: 10, scope: !11338)
!11347 = !DILocation(line: 90, column: 2, scope: !11338)
!11348 = !DILocation(line: 90, column: 5, scope: !11338)
!11349 = !DILocation(line: 90, column: 10, scope: !11338)
!11350 = !DILocation(line: 91, column: 5, scope: !11338)
!11351 = !DILocation(line: 92, column: 2, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11334, file: !940, line: 91, column: 12)
!11353 = !DILocation(line: 92, column: 5, scope: !11352)
!11354 = !DILocation(line: 92, column: 11, scope: !11352)
!11355 = !DILocation(line: 93, column: 2, scope: !11352)
!11356 = !DILocation(line: 93, column: 5, scope: !11352)
!11357 = !DILocation(line: 93, column: 10, scope: !11352)
!11358 = !DILocation(line: 95, column: 1, scope: !11318)
!11359 = distinct !DISubprogram(name: "list_append", scope: !940, file: !940, line: 102, type: !11319, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !935, retainedNodes: !176)
!11360 = !DILocalVariable(name: "vl1", arg: 1, scope: !11359, file: !940, line: 102, type: !19)
!11361 = !DILocation(line: 102, column: 19, scope: !11359)
!11362 = !DILocalVariable(name: "vl2", arg: 2, scope: !11359, file: !940, line: 102, type: !19)
!11363 = !DILocation(line: 102, column: 30, scope: !11359)
!11364 = !DILocalVariable(name: "l1", scope: !11359, file: !940, line: 104, type: !943)
!11365 = !DILocation(line: 104, column: 24, scope: !11359)
!11366 = !DILocation(line: 104, column: 50, scope: !11359)
!11367 = !DILocation(line: 104, column: 29, scope: !11359)
!11368 = !DILocalVariable(name: "l2", scope: !11359, file: !940, line: 105, type: !943)
!11369 = !DILocation(line: 105, column: 24, scope: !11359)
!11370 = !DILocation(line: 105, column: 50, scope: !11359)
!11371 = !DILocation(line: 105, column: 29, scope: !11359)
!11372 = !DILocalVariable(name: "tail", scope: !11359, file: !940, line: 106, type: !19)
!11373 = !DILocation(line: 106, column: 11, scope: !11359)
!11374 = !DILocation(line: 106, column: 18, scope: !11359)
!11375 = !DILocation(line: 106, column: 22, scope: !11359)
!11376 = !DILocation(line: 108, column: 22, scope: !11359)
!11377 = !DILocation(line: 108, column: 5, scope: !11359)
!11378 = !DILocation(line: 108, column: 9, scope: !11359)
!11379 = !DILocation(line: 108, column: 15, scope: !11359)
!11380 = !DILocation(line: 108, column: 20, scope: !11359)
!11381 = !DILocation(line: 109, column: 16, scope: !11359)
!11382 = !DILocation(line: 109, column: 20, scope: !11359)
!11383 = !DILocation(line: 109, column: 5, scope: !11359)
!11384 = !DILocation(line: 109, column: 9, scope: !11359)
!11385 = !DILocation(line: 109, column: 14, scope: !11359)
!11386 = !DILocation(line: 110, column: 16, scope: !11359)
!11387 = !DILocation(line: 110, column: 5, scope: !11359)
!11388 = !DILocation(line: 110, column: 9, scope: !11359)
!11389 = !DILocation(line: 110, column: 14, scope: !11359)
!11390 = !DILocation(line: 111, column: 1, scope: !11359)
!11391 = distinct !DISubprogram(name: "tq_append", scope: !940, file: !940, line: 118, type: !11319, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !935, retainedNodes: !176)
!11392 = !DILocalVariable(name: "vh", arg: 1, scope: !11391, file: !940, line: 118, type: !19)
!11393 = !DILocation(line: 118, column: 17, scope: !11391)
!11394 = !DILocalVariable(name: "vl", arg: 2, scope: !11391, file: !940, line: 118, type: !19)
!11395 = !DILocation(line: 118, column: 27, scope: !11391)
!11396 = !DILocalVariable(name: "h", scope: !11391, file: !940, line: 120, type: !938)
!11397 = !DILocation(line: 120, column: 29, scope: !11391)
!11398 = !DILocation(line: 120, column: 59, scope: !11391)
!11399 = !DILocation(line: 120, column: 33, scope: !11391)
!11400 = !DILocalVariable(name: "l", scope: !11391, file: !940, line: 121, type: !943)
!11401 = !DILocation(line: 121, column: 24, scope: !11391)
!11402 = !DILocation(line: 121, column: 49, scope: !11391)
!11403 = !DILocation(line: 121, column: 28, scope: !11391)
!11404 = !DILocalVariable(name: "tail", scope: !11391, file: !940, line: 122, type: !19)
!11405 = !DILocation(line: 122, column: 11, scope: !11391)
!11406 = !DILocation(line: 122, column: 18, scope: !11391)
!11407 = !DILocation(line: 122, column: 21, scope: !11391)
!11408 = !DILocation(line: 124, column: 9, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11391, file: !940, line: 124, column: 9)
!11410 = !DILocation(line: 124, column: 12, scope: !11409)
!11411 = !DILocation(line: 124, column: 18, scope: !11409)
!11412 = !DILocation(line: 124, column: 9, scope: !11391)
!11413 = !DILocation(line: 125, column: 13, scope: !11409)
!11414 = !DILocation(line: 125, column: 2, scope: !11409)
!11415 = !DILocation(line: 125, column: 5, scope: !11409)
!11416 = !DILocation(line: 125, column: 11, scope: !11409)
!11417 = !DILocation(line: 127, column: 18, scope: !11409)
!11418 = !DILocation(line: 127, column: 2, scope: !11409)
!11419 = !DILocation(line: 127, column: 5, scope: !11409)
!11420 = !DILocation(line: 127, column: 11, scope: !11409)
!11421 = !DILocation(line: 127, column: 16, scope: !11409)
!11422 = !DILocation(line: 128, column: 15, scope: !11391)
!11423 = !DILocation(line: 128, column: 18, scope: !11391)
!11424 = !DILocation(line: 128, column: 5, scope: !11391)
!11425 = !DILocation(line: 128, column: 8, scope: !11391)
!11426 = !DILocation(line: 128, column: 13, scope: !11391)
!11427 = !DILocation(line: 129, column: 15, scope: !11391)
!11428 = !DILocation(line: 129, column: 5, scope: !11391)
!11429 = !DILocation(line: 129, column: 8, scope: !11391)
!11430 = !DILocation(line: 129, column: 13, scope: !11391)
!11431 = !DILocation(line: 130, column: 1, scope: !11391)
!11432 = distinct !DISubprogram(name: "tq_remove", scope: !940, file: !940, line: 136, type: !11319, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !935, retainedNodes: !176)
!11433 = !DILocalVariable(name: "vh", arg: 1, scope: !11432, file: !940, line: 136, type: !19)
!11434 = !DILocation(line: 136, column: 17, scope: !11432)
!11435 = !DILocalVariable(name: "vl", arg: 2, scope: !11432, file: !940, line: 136, type: !19)
!11436 = !DILocation(line: 136, column: 27, scope: !11432)
!11437 = !DILocalVariable(name: "h", scope: !11432, file: !940, line: 138, type: !938)
!11438 = !DILocation(line: 138, column: 29, scope: !11432)
!11439 = !DILocation(line: 138, column: 59, scope: !11432)
!11440 = !DILocation(line: 138, column: 33, scope: !11432)
!11441 = !DILocalVariable(name: "l", scope: !11432, file: !940, line: 139, type: !943)
!11442 = !DILocation(line: 139, column: 24, scope: !11432)
!11443 = !DILocation(line: 139, column: 49, scope: !11432)
!11444 = !DILocation(line: 139, column: 28, scope: !11432)
!11445 = !DILocation(line: 141, column: 9, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11432, file: !940, line: 141, column: 9)
!11447 = !DILocation(line: 141, column: 12, scope: !11446)
!11448 = !DILocation(line: 141, column: 21, scope: !11446)
!11449 = !DILocation(line: 141, column: 18, scope: !11446)
!11450 = !DILocation(line: 141, column: 23, scope: !11446)
!11451 = !DILocation(line: 141, column: 26, scope: !11446)
!11452 = !DILocation(line: 141, column: 29, scope: !11446)
!11453 = !DILocation(line: 141, column: 37, scope: !11446)
!11454 = !DILocation(line: 141, column: 34, scope: !11446)
!11455 = !DILocation(line: 141, column: 9, scope: !11432)
!11456 = !DILocation(line: 143, column: 2, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11446, file: !940, line: 141, column: 40)
!11458 = !DILocation(line: 143, column: 5, scope: !11457)
!11459 = !DILocation(line: 143, column: 11, scope: !11457)
!11460 = !DILocation(line: 144, column: 2, scope: !11457)
!11461 = !DILocation(line: 144, column: 5, scope: !11457)
!11462 = !DILocation(line: 144, column: 10, scope: !11457)
!11463 = !DILocation(line: 145, column: 5, scope: !11457)
!11464 = !DILocation(line: 147, column: 6, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11466, file: !940, line: 147, column: 6)
!11466 = distinct !DILexicalBlock(scope: !11446, file: !940, line: 145, column: 12)
!11467 = !DILocation(line: 147, column: 9, scope: !11465)
!11468 = !DILocation(line: 147, column: 18, scope: !11465)
!11469 = !DILocation(line: 147, column: 15, scope: !11465)
!11470 = !DILocation(line: 147, column: 6, scope: !11466)
!11471 = !DILocation(line: 148, column: 17, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11465, file: !940, line: 147, column: 21)
!11473 = !DILocation(line: 148, column: 20, scope: !11472)
!11474 = !DILocation(line: 148, column: 6, scope: !11472)
!11475 = !DILocation(line: 148, column: 9, scope: !11472)
!11476 = !DILocation(line: 148, column: 15, scope: !11472)
!11477 = !DILocation(line: 149, column: 23, scope: !11472)
!11478 = !DILocation(line: 149, column: 26, scope: !11472)
!11479 = !DILocation(line: 149, column: 6, scope: !11472)
!11480 = !DILocation(line: 149, column: 9, scope: !11472)
!11481 = !DILocation(line: 149, column: 16, scope: !11472)
!11482 = !DILocation(line: 149, column: 21, scope: !11472)
!11483 = !DILocation(line: 150, column: 2, scope: !11472)
!11484 = !DILocation(line: 150, column: 13, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11465, file: !940, line: 150, column: 13)
!11486 = !DILocation(line: 150, column: 16, scope: !11485)
!11487 = !DILocation(line: 150, column: 24, scope: !11485)
!11488 = !DILocation(line: 150, column: 21, scope: !11485)
!11489 = !DILocation(line: 150, column: 13, scope: !11465)
!11490 = !DILocation(line: 151, column: 16, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11485, file: !940, line: 150, column: 27)
!11492 = !DILocation(line: 151, column: 19, scope: !11491)
!11493 = !DILocation(line: 151, column: 6, scope: !11491)
!11494 = !DILocation(line: 151, column: 9, scope: !11491)
!11495 = !DILocation(line: 151, column: 14, scope: !11491)
!11496 = !DILocation(line: 152, column: 6, scope: !11491)
!11497 = !DILocation(line: 152, column: 9, scope: !11491)
!11498 = !DILocation(line: 152, column: 15, scope: !11491)
!11499 = !DILocation(line: 152, column: 20, scope: !11491)
!11500 = !DILocation(line: 153, column: 2, scope: !11491)
!11501 = !DILocation(line: 154, column: 22, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11485, file: !940, line: 153, column: 9)
!11503 = !DILocation(line: 154, column: 25, scope: !11502)
!11504 = !DILocation(line: 154, column: 6, scope: !11502)
!11505 = !DILocation(line: 154, column: 9, scope: !11502)
!11506 = !DILocation(line: 154, column: 15, scope: !11502)
!11507 = !DILocation(line: 154, column: 20, scope: !11502)
!11508 = !DILocation(line: 155, column: 22, scope: !11502)
!11509 = !DILocation(line: 155, column: 25, scope: !11502)
!11510 = !DILocation(line: 155, column: 6, scope: !11502)
!11511 = !DILocation(line: 155, column: 9, scope: !11502)
!11512 = !DILocation(line: 155, column: 15, scope: !11502)
!11513 = !DILocation(line: 155, column: 20, scope: !11502)
!11514 = !DILocation(line: 158, column: 1, scope: !11432)
!11515 = distinct !DISubprogram(name: "sudo_setgroups", scope: !11516, file: !11516, line: 41, type: !11517, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !949, retainedNodes: !176)
!11516 = !DIFile(filename: "./setgroups.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!11517 = !DISubroutineType(types: !11518)
!11518 = !{!33, !33, !11519}
!11519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11520, size: 64)
!11520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !548)
!11521 = !DILocalVariable(name: "ngids", arg: 1, scope: !11515, file: !11516, line: 41, type: !33)
!11522 = !DILocation(line: 41, column: 20, scope: !11515)
!11523 = !DILocalVariable(name: "gids", arg: 2, scope: !11515, file: !11516, line: 41, type: !11519)
!11524 = !DILocation(line: 41, column: 46, scope: !11515)
!11525 = !DILocalVariable(name: "maxgids", scope: !11515, file: !11516, line: 43, type: !33)
!11526 = !DILocation(line: 43, column: 9, scope: !11515)
!11527 = !DILocalVariable(name: "rval", scope: !11515, file: !11516, line: 43, type: !33)
!11528 = !DILocation(line: 43, column: 18, scope: !11515)
!11529 = !DILocation(line: 45, column: 22, scope: !11515)
!11530 = !DILocation(line: 45, column: 29, scope: !11515)
!11531 = !DILocation(line: 45, column: 12, scope: !11515)
!11532 = !DILocation(line: 45, column: 10, scope: !11515)
!11533 = !DILocation(line: 46, column: 9, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11515, file: !11516, line: 46, column: 9)
!11535 = !DILocation(line: 46, column: 14, scope: !11534)
!11536 = !DILocation(line: 46, column: 20, scope: !11534)
!11537 = !DILocation(line: 46, column: 23, scope: !11534)
!11538 = !DILocation(line: 46, column: 29, scope: !11534)
!11539 = !DILocation(line: 46, column: 9, scope: !11515)
!11540 = !DILocation(line: 49, column: 17, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11534, file: !11516, line: 46, column: 40)
!11542 = !DILocation(line: 49, column: 12, scope: !11541)
!11543 = !DILocation(line: 49, column: 10, scope: !11541)
!11544 = !DILocation(line: 50, column: 6, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11541, file: !11516, line: 50, column: 6)
!11546 = !DILocation(line: 50, column: 14, scope: !11545)
!11547 = !DILocation(line: 50, column: 6, scope: !11541)
!11548 = !DILocation(line: 52, column: 14, scope: !11545)
!11549 = !DILocation(line: 52, column: 6, scope: !11545)
!11550 = !DILocation(line: 53, column: 6, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11541, file: !11516, line: 53, column: 6)
!11552 = !DILocation(line: 53, column: 14, scope: !11551)
!11553 = !DILocation(line: 53, column: 12, scope: !11551)
!11554 = !DILocation(line: 53, column: 6, scope: !11541)
!11555 = !DILocation(line: 54, column: 23, scope: !11551)
!11556 = !DILocation(line: 54, column: 32, scope: !11551)
!11557 = !DILocation(line: 54, column: 13, scope: !11551)
!11558 = !DILocation(line: 54, column: 11, scope: !11551)
!11559 = !DILocation(line: 54, column: 6, scope: !11551)
!11560 = !DILocation(line: 55, column: 5, scope: !11541)
!11561 = !DILocation(line: 56, column: 12, scope: !11515)
!11562 = !DILocation(line: 56, column: 5, scope: !11515)
!11563 = distinct !DISubprogram(name: "term_restore", scope: !820, file: !820, line: 70, type: !10506, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !815, retainedNodes: !176)
!11564 = !DILocalVariable(name: "fd", arg: 1, scope: !11563, file: !820, line: 70, type: !33)
!11565 = !DILocation(line: 70, column: 18, scope: !11563)
!11566 = !DILocalVariable(name: "flush", arg: 2, scope: !11563, file: !820, line: 70, type: !33)
!11567 = !DILocation(line: 70, column: 26, scope: !11563)
!11568 = !DILocation(line: 72, column: 9, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11563, file: !820, line: 72, column: 9)
!11570 = !DILocation(line: 72, column: 9, scope: !11563)
!11571 = !DILocalVariable(name: "flags", scope: !11572, file: !820, line: 73, type: !33)
!11572 = distinct !DILexicalBlock(scope: !11569, file: !820, line: 72, column: 18)
!11573 = !DILocation(line: 73, column: 6, scope: !11572)
!11574 = !DILocation(line: 74, column: 11, scope: !11572)
!11575 = !DILocation(line: 74, column: 8, scope: !11572)
!11576 = !DILocation(line: 75, column: 16, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11572, file: !820, line: 75, column: 6)
!11578 = !DILocation(line: 75, column: 20, scope: !11577)
!11579 = !DILocation(line: 75, column: 6, scope: !11577)
!11580 = !DILocation(line: 75, column: 35, scope: !11577)
!11581 = !DILocation(line: 75, column: 6, scope: !11572)
!11582 = !DILocation(line: 76, column: 6, scope: !11577)
!11583 = !DILocation(line: 77, column: 10, scope: !11572)
!11584 = !DILocation(line: 78, column: 5, scope: !11572)
!11585 = !DILocation(line: 79, column: 5, scope: !11563)
!11586 = !DILocation(line: 80, column: 1, scope: !11563)
!11587 = distinct !DISubprogram(name: "term_noecho", scope: !820, file: !820, line: 83, type: !609, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !815, retainedNodes: !176)
!11588 = !DILocalVariable(name: "fd", arg: 1, scope: !11587, file: !820, line: 83, type: !33)
!11589 = !DILocation(line: 83, column: 17, scope: !11587)
!11590 = !DILocation(line: 85, column: 10, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11587, file: !820, line: 85, column: 9)
!11592 = !DILocation(line: 85, column: 18, scope: !11591)
!11593 = !DILocation(line: 85, column: 31, scope: !11591)
!11594 = !DILocation(line: 85, column: 21, scope: !11591)
!11595 = !DILocation(line: 85, column: 43, scope: !11591)
!11596 = !DILocation(line: 85, column: 9, scope: !11587)
!11597 = !DILocation(line: 86, column: 2, scope: !11591)
!11598 = !DILocation(line: 87, column: 12, scope: !11587)
!11599 = !DILocation(line: 88, column: 5, scope: !11587)
!11600 = !DILocation(line: 92, column: 19, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11587, file: !820, line: 92, column: 9)
!11602 = !DILocation(line: 92, column: 9, scope: !11601)
!11603 = !DILocation(line: 92, column: 50, scope: !11601)
!11604 = !DILocation(line: 92, column: 9, scope: !11587)
!11605 = !DILocation(line: 93, column: 10, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11601, file: !820, line: 92, column: 56)
!11607 = !DILocation(line: 94, column: 2, scope: !11606)
!11608 = !DILocation(line: 96, column: 5, scope: !11587)
!11609 = !DILocation(line: 97, column: 1, scope: !11587)
!11610 = distinct !DISubprogram(name: "term_raw", scope: !820, file: !820, line: 100, type: !10506, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !815, retainedNodes: !176)
!11611 = !DILocalVariable(name: "fd", arg: 1, scope: !11610, file: !820, line: 100, type: !33)
!11612 = !DILocation(line: 100, column: 14, scope: !11610)
!11613 = !DILocalVariable(name: "isig", arg: 2, scope: !11610, file: !820, line: 100, type: !33)
!11614 = !DILocation(line: 100, column: 22, scope: !11610)
!11615 = !DILocalVariable(name: "term", scope: !11610, file: !820, line: 102, type: !821)
!11616 = !DILocation(line: 102, column: 20, scope: !11610)
!11617 = !DILocation(line: 104, column: 10, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11610, file: !820, line: 104, column: 9)
!11619 = !DILocation(line: 104, column: 18, scope: !11618)
!11620 = !DILocation(line: 104, column: 31, scope: !11618)
!11621 = !DILocation(line: 104, column: 21, scope: !11618)
!11622 = !DILocation(line: 104, column: 43, scope: !11618)
!11623 = !DILocation(line: 104, column: 9, scope: !11610)
!11624 = !DILocation(line: 105, column: 2, scope: !11618)
!11625 = !DILocation(line: 106, column: 12, scope: !11610)
!11626 = !DILocation(line: 108, column: 10, scope: !11610)
!11627 = !DILocation(line: 108, column: 5, scope: !11610)
!11628 = !DILocation(line: 108, column: 21, scope: !11610)
!11629 = !DILocation(line: 109, column: 10, scope: !11610)
!11630 = !DILocation(line: 109, column: 5, scope: !11610)
!11631 = !DILocation(line: 109, column: 22, scope: !11610)
!11632 = !DILocation(line: 110, column: 5, scope: !11610)
!11633 = !DILocation(line: 111, column: 5, scope: !11610)
!11634 = !DILocation(line: 112, column: 5, scope: !11610)
!11635 = !DILocation(line: 113, column: 9, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11610, file: !820, line: 113, column: 9)
!11637 = !DILocation(line: 113, column: 9, scope: !11610)
!11638 = !DILocation(line: 114, column: 2, scope: !11636)
!11639 = !DILocation(line: 115, column: 19, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11610, file: !820, line: 115, column: 9)
!11641 = !DILocation(line: 115, column: 9, scope: !11640)
!11642 = !DILocation(line: 115, column: 50, scope: !11640)
!11643 = !DILocation(line: 115, column: 9, scope: !11610)
!11644 = !DILocation(line: 116, column: 10, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11640, file: !820, line: 115, column: 56)
!11646 = !DILocation(line: 117, column: 6, scope: !11645)
!11647 = !DILocation(line: 119, column: 5, scope: !11610)
!11648 = !DILocation(line: 120, column: 1, scope: !11610)
!11649 = distinct !DISubprogram(name: "term_cbreak", scope: !820, file: !820, line: 123, type: !609, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !815, retainedNodes: !176)
!11650 = !DILocalVariable(name: "fd", arg: 1, scope: !11649, file: !820, line: 123, type: !33)
!11651 = !DILocation(line: 123, column: 17, scope: !11649)
!11652 = !DILocation(line: 125, column: 10, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11649, file: !820, line: 125, column: 9)
!11654 = !DILocation(line: 125, column: 18, scope: !11653)
!11655 = !DILocation(line: 125, column: 31, scope: !11653)
!11656 = !DILocation(line: 125, column: 21, scope: !11653)
!11657 = !DILocation(line: 125, column: 43, scope: !11653)
!11658 = !DILocation(line: 125, column: 9, scope: !11649)
!11659 = !DILocation(line: 126, column: 2, scope: !11653)
!11660 = !DILocation(line: 127, column: 12, scope: !11649)
!11661 = !DILocation(line: 129, column: 21, scope: !11649)
!11662 = !DILocation(line: 130, column: 22, scope: !11649)
!11663 = !DILocation(line: 131, column: 5, scope: !11649)
!11664 = !DILocation(line: 132, column: 5, scope: !11649)
!11665 = !DILocation(line: 136, column: 19, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11649, file: !820, line: 136, column: 9)
!11667 = !DILocation(line: 136, column: 9, scope: !11666)
!11668 = !DILocation(line: 136, column: 50, scope: !11666)
!11669 = !DILocation(line: 136, column: 9, scope: !11649)
!11670 = !DILocation(line: 137, column: 15, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11666, file: !820, line: 136, column: 56)
!11672 = !DILocation(line: 137, column: 13, scope: !11671)
!11673 = !DILocation(line: 138, column: 14, scope: !11671)
!11674 = !DILocation(line: 138, column: 12, scope: !11671)
!11675 = !DILocation(line: 139, column: 10, scope: !11671)
!11676 = !DILocation(line: 140, column: 2, scope: !11671)
!11677 = !DILocation(line: 142, column: 5, scope: !11649)
!11678 = !DILocation(line: 143, column: 1, scope: !11649)
!11679 = distinct !DISubprogram(name: "term_copy", scope: !820, file: !820, line: 146, type: !10506, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !815, retainedNodes: !176)
!11680 = !DILocalVariable(name: "src", arg: 1, scope: !11679, file: !820, line: 146, type: !33)
!11681 = !DILocation(line: 146, column: 15, scope: !11679)
!11682 = !DILocalVariable(name: "dst", arg: 2, scope: !11679, file: !820, line: 146, type: !33)
!11683 = !DILocation(line: 146, column: 24, scope: !11679)
!11684 = !DILocalVariable(name: "tt", scope: !11679, file: !820, line: 148, type: !821)
!11685 = !DILocation(line: 148, column: 20, scope: !11679)
!11686 = !DILocation(line: 150, column: 19, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11679, file: !820, line: 150, column: 9)
!11688 = !DILocation(line: 150, column: 9, scope: !11687)
!11689 = !DILocation(line: 150, column: 29, scope: !11687)
!11690 = !DILocation(line: 150, column: 9, scope: !11679)
!11691 = !DILocation(line: 151, column: 2, scope: !11687)
!11692 = !DILocation(line: 152, column: 19, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11679, file: !820, line: 152, column: 9)
!11694 = !DILocation(line: 152, column: 9, scope: !11693)
!11695 = !DILocation(line: 152, column: 47, scope: !11693)
!11696 = !DILocation(line: 152, column: 9, scope: !11679)
!11697 = !DILocation(line: 153, column: 2, scope: !11693)
!11698 = !DILocation(line: 154, column: 5, scope: !11679)
!11699 = !DILocation(line: 155, column: 1, scope: !11679)
!11700 = distinct !DISubprogram(name: "zero_bytes", scope: !11701, file: !11701, line: 29, type: !11702, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !952, retainedNodes: !176)
!11701 = !DIFile(filename: "./zero_bytes.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/common")
!11702 = !DISubroutineType(types: !11703)
!11703 = !{null, !11704, !282}
!11704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11705, size: 64)
!11705 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!11706 = !DILocalVariable(name: "v", arg: 1, scope: !11700, file: !11701, line: 29, type: !11704)
!11707 = !DILocation(line: 29, column: 27, scope: !11700)
!11708 = !DILocalVariable(name: "n", arg: 2, scope: !11700, file: !11701, line: 29, type: !282)
!11709 = !DILocation(line: 29, column: 37, scope: !11700)
!11710 = !DILocalVariable(name: "p", scope: !11700, file: !11701, line: 31, type: !11711)
!11711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11712, size: 64)
!11712 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !21)
!11713 = !DILocation(line: 31, column: 20, scope: !11700)
!11714 = !DILocalVariable(name: "ep", scope: !11700, file: !11701, line: 31, type: !11711)
!11715 = !DILocation(line: 31, column: 24, scope: !11700)
!11716 = !DILocation(line: 33, column: 14, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11700, file: !11701, line: 33, column: 5)
!11718 = !DILocation(line: 33, column: 12, scope: !11717)
!11719 = !DILocation(line: 33, column: 22, scope: !11717)
!11720 = !DILocation(line: 33, column: 26, scope: !11717)
!11721 = !DILocation(line: 33, column: 24, scope: !11717)
!11722 = !DILocation(line: 33, column: 20, scope: !11717)
!11723 = !DILocation(line: 33, column: 10, scope: !11717)
!11724 = !DILocation(line: 33, column: 29, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11717, file: !11701, line: 33, column: 5)
!11726 = !DILocation(line: 33, column: 33, scope: !11725)
!11727 = !DILocation(line: 33, column: 31, scope: !11725)
!11728 = !DILocation(line: 33, column: 5, scope: !11717)
!11729 = !DILocation(line: 34, column: 3, scope: !11725)
!11730 = !DILocation(line: 34, column: 5, scope: !11725)
!11731 = !DILocation(line: 34, column: 2, scope: !11725)
!11732 = !DILocation(line: 33, column: 38, scope: !11725)
!11733 = !DILocation(line: 33, column: 5, scope: !11725)
!11734 = distinct !{!11734, !11728, !11735}
!11735 = !DILocation(line: 34, column: 7, scope: !11717)
!11736 = !DILocation(line: 35, column: 5, scope: !11700)
!11737 = distinct !DISubprogram(name: "strlcpy", scope: !11738, file: !11738, line: 32, type: !11739, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !954, retainedNodes: !176)
!11738 = !DIFile(filename: "./strlcpy.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/compat")
!11739 = !DISubroutineType(types: !11740)
!11740 = !{!282, !20, !221, !282}
!11741 = !DILocalVariable(name: "dst", arg: 1, scope: !11737, file: !11738, line: 32, type: !20)
!11742 = !DILocation(line: 32, column: 15, scope: !11737)
!11743 = !DILocalVariable(name: "src", arg: 2, scope: !11737, file: !11738, line: 32, type: !221)
!11744 = !DILocation(line: 32, column: 32, scope: !11737)
!11745 = !DILocalVariable(name: "siz", arg: 3, scope: !11737, file: !11738, line: 32, type: !282)
!11746 = !DILocation(line: 32, column: 44, scope: !11737)
!11747 = !DILocalVariable(name: "d", scope: !11737, file: !11738, line: 34, type: !20)
!11748 = !DILocation(line: 34, column: 8, scope: !11737)
!11749 = !DILocation(line: 34, column: 12, scope: !11737)
!11750 = !DILocalVariable(name: "s", scope: !11737, file: !11738, line: 35, type: !221)
!11751 = !DILocation(line: 35, column: 14, scope: !11737)
!11752 = !DILocation(line: 35, column: 18, scope: !11737)
!11753 = !DILocalVariable(name: "n", scope: !11737, file: !11738, line: 36, type: !282)
!11754 = !DILocation(line: 36, column: 9, scope: !11737)
!11755 = !DILocation(line: 36, column: 13, scope: !11737)
!11756 = !DILocation(line: 39, column: 6, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11737, file: !11738, line: 39, column: 6)
!11758 = !DILocation(line: 39, column: 8, scope: !11757)
!11759 = !DILocation(line: 39, column: 13, scope: !11757)
!11760 = !DILocation(line: 39, column: 16, scope: !11757)
!11761 = !DILocation(line: 39, column: 20, scope: !11757)
!11762 = !DILocation(line: 39, column: 6, scope: !11737)
!11763 = !DILocation(line: 40, column: 3, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11757, file: !11738, line: 39, column: 26)
!11765 = !DILocation(line: 41, column: 18, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11767, file: !11738, line: 41, column: 8)
!11767 = distinct !DILexicalBlock(scope: !11764, file: !11738, line: 40, column: 6)
!11768 = !DILocation(line: 41, column: 16, scope: !11766)
!11769 = !DILocation(line: 41, column: 11, scope: !11766)
!11770 = !DILocation(line: 41, column: 14, scope: !11766)
!11771 = !DILocation(line: 41, column: 8, scope: !11766)
!11772 = !DILocation(line: 41, column: 22, scope: !11766)
!11773 = !DILocation(line: 41, column: 8, scope: !11767)
!11774 = !DILocation(line: 42, column: 5, scope: !11766)
!11775 = !DILocation(line: 43, column: 3, scope: !11767)
!11776 = !DILocation(line: 43, column: 12, scope: !11764)
!11777 = !DILocation(line: 43, column: 16, scope: !11764)
!11778 = distinct !{!11778, !11763, !11779}
!11779 = !DILocation(line: 43, column: 20, scope: !11764)
!11780 = !DILocation(line: 44, column: 2, scope: !11764)
!11781 = !DILocation(line: 47, column: 6, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11737, file: !11738, line: 47, column: 6)
!11783 = !DILocation(line: 47, column: 8, scope: !11782)
!11784 = !DILocation(line: 47, column: 6, scope: !11737)
!11785 = !DILocation(line: 48, column: 7, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11787, file: !11738, line: 48, column: 7)
!11787 = distinct !DILexicalBlock(scope: !11782, file: !11738, line: 47, column: 14)
!11788 = !DILocation(line: 48, column: 11, scope: !11786)
!11789 = !DILocation(line: 48, column: 7, scope: !11787)
!11790 = !DILocation(line: 49, column: 5, scope: !11786)
!11791 = !DILocation(line: 49, column: 7, scope: !11786)
!11792 = !DILocation(line: 49, column: 4, scope: !11786)
!11793 = !DILocation(line: 50, column: 3, scope: !11787)
!11794 = !DILocation(line: 50, column: 12, scope: !11787)
!11795 = !DILocation(line: 50, column: 10, scope: !11787)
!11796 = distinct !{!11796, !11793, !11797}
!11797 = !DILocation(line: 51, column: 4, scope: !11787)
!11798 = !DILocation(line: 52, column: 2, scope: !11787)
!11799 = !DILocation(line: 54, column: 9, scope: !11737)
!11800 = !DILocation(line: 54, column: 13, scope: !11737)
!11801 = !DILocation(line: 54, column: 11, scope: !11737)
!11802 = !DILocation(line: 54, column: 17, scope: !11737)
!11803 = !DILocation(line: 54, column: 2, scope: !11737)
!11804 = distinct !DISubprogram(name: "closefrom_fallback", scope: !11805, file: !11805, line: 63, type: !72, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !956, retainedNodes: !176)
!11805 = !DIFile(filename: "./closefrom.c", directory: "/home/salman/DPP/data/sudo-1.8.3p1/compat")
!11806 = !DILocalVariable(name: "lowfd", arg: 1, scope: !11804, file: !11805, line: 63, type: !33)
!11807 = !DILocation(line: 63, column: 24, scope: !11804)
!11808 = !DILocalVariable(name: "fd", scope: !11804, file: !11805, line: 65, type: !30)
!11809 = !DILocation(line: 65, column: 10, scope: !11804)
!11810 = !DILocalVariable(name: "maxfd", scope: !11804, file: !11805, line: 65, type: !30)
!11811 = !DILocation(line: 65, column: 14, scope: !11804)
!11812 = !DILocation(line: 73, column: 13, scope: !11804)
!11813 = !DILocation(line: 73, column: 11, scope: !11804)
!11814 = !DILocation(line: 77, column: 9, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11804, file: !11805, line: 77, column: 9)
!11816 = !DILocation(line: 77, column: 15, scope: !11815)
!11817 = !DILocation(line: 77, column: 9, scope: !11804)
!11818 = !DILocation(line: 78, column: 8, scope: !11815)
!11819 = !DILocation(line: 78, column: 2, scope: !11815)
!11820 = !DILocation(line: 80, column: 15, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11804, file: !11805, line: 80, column: 5)
!11822 = !DILocation(line: 80, column: 13, scope: !11821)
!11823 = !DILocation(line: 80, column: 10, scope: !11821)
!11824 = !DILocation(line: 80, column: 22, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11821, file: !11805, line: 80, column: 5)
!11826 = !DILocation(line: 80, column: 27, scope: !11825)
!11827 = !DILocation(line: 80, column: 25, scope: !11825)
!11828 = !DILocation(line: 80, column: 5, scope: !11821)
!11829 = !DILocation(line: 81, column: 21, scope: !11825)
!11830 = !DILocation(line: 81, column: 15, scope: !11825)
!11831 = !DILocation(line: 81, column: 9, scope: !11825)
!11832 = !DILocation(line: 81, column: 2, scope: !11825)
!11833 = !DILocation(line: 80, column: 36, scope: !11825)
!11834 = !DILocation(line: 80, column: 5, scope: !11825)
!11835 = distinct !{!11835, !11828, !11836}
!11836 = !DILocation(line: 81, column: 23, scope: !11821)
!11837 = !DILocation(line: 82, column: 1, scope: !11804)
!11838 = distinct !DISubprogram(name: "closefrom", scope: !11805, file: !11805, line: 98, type: !72, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !956, retainedNodes: !176)
!11839 = !DILocalVariable(name: "lowfd", arg: 1, scope: !11838, file: !11805, line: 98, type: !33)
!11840 = !DILocation(line: 98, column: 15, scope: !11838)
!11841 = !DILocalVariable(name: "dent", scope: !11838, file: !11805, line: 100, type: !11842)
!11842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11843, size: 64)
!11843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !11844, line: 22, size: 2240, elements: !11845)
!11844 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!11845 = !{!11846, !11847, !11848, !11849, !11850}
!11846 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !11843, file: !11844, line: 25, baseType: !4966, size: 64)
!11847 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !11843, file: !11844, line: 26, baseType: !780, size: 64, offset: 64)
!11848 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !11843, file: !11844, line: 31, baseType: !284, size: 16, offset: 128)
!11849 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !11843, file: !11844, line: 32, baseType: !34, size: 8, offset: 144)
!11850 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !11843, file: !11844, line: 33, baseType: !9840, size: 2048, offset: 152)
!11851 = !DILocation(line: 100, column: 20, scope: !11838)
!11852 = !DILocalVariable(name: "dirp", scope: !11838, file: !11805, line: 101, type: !11853)
!11853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11854, size: 64)
!11854 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !11855, line: 127, baseType: !11856)
!11855 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!11856 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !11855, line: 127, flags: DIFlagFwdDecl)
!11857 = !DILocation(line: 101, column: 10, scope: !11838)
!11858 = !DILocalVariable(name: "endp", scope: !11838, file: !11805, line: 102, type: !20)
!11859 = !DILocation(line: 102, column: 11, scope: !11838)
!11860 = !DILocalVariable(name: "fd", scope: !11838, file: !11805, line: 103, type: !30)
!11861 = !DILocation(line: 103, column: 10, scope: !11838)
!11862 = !DILocation(line: 106, column: 17, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11838, file: !11805, line: 106, column: 9)
!11864 = !DILocation(line: 106, column: 15, scope: !11863)
!11865 = !DILocation(line: 106, column: 43, scope: !11863)
!11866 = !DILocation(line: 106, column: 9, scope: !11838)
!11867 = !DILocation(line: 107, column: 2, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11863, file: !11805, line: 106, column: 52)
!11869 = !DILocation(line: 107, column: 25, scope: !11868)
!11870 = !DILocation(line: 107, column: 17, scope: !11868)
!11871 = !DILocation(line: 107, column: 15, scope: !11868)
!11872 = !DILocation(line: 107, column: 32, scope: !11868)
!11873 = !DILocation(line: 108, column: 18, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11868, file: !11805, line: 107, column: 41)
!11875 = !DILocation(line: 108, column: 24, scope: !11874)
!11876 = !DILocation(line: 108, column: 11, scope: !11874)
!11877 = !DILocation(line: 108, column: 9, scope: !11874)
!11878 = !DILocation(line: 109, column: 10, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11874, file: !11805, line: 109, column: 10)
!11880 = !DILocation(line: 109, column: 16, scope: !11879)
!11881 = !DILocation(line: 109, column: 26, scope: !11879)
!11882 = !DILocation(line: 109, column: 23, scope: !11879)
!11883 = !DILocation(line: 109, column: 31, scope: !11879)
!11884 = !DILocation(line: 109, column: 35, scope: !11879)
!11885 = !DILocation(line: 109, column: 34, scope: !11879)
!11886 = !DILocation(line: 109, column: 40, scope: !11879)
!11887 = !DILocation(line: 109, column: 48, scope: !11879)
!11888 = !DILocation(line: 110, column: 3, scope: !11879)
!11889 = !DILocation(line: 110, column: 6, scope: !11879)
!11890 = !DILocation(line: 110, column: 11, scope: !11879)
!11891 = !DILocation(line: 110, column: 14, scope: !11879)
!11892 = !DILocation(line: 110, column: 17, scope: !11879)
!11893 = !DILocation(line: 110, column: 27, scope: !11879)
!11894 = !DILocation(line: 110, column: 30, scope: !11879)
!11895 = !DILocation(line: 110, column: 36, scope: !11879)
!11896 = !DILocation(line: 110, column: 33, scope: !11879)
!11897 = !DILocation(line: 110, column: 42, scope: !11879)
!11898 = !DILocation(line: 110, column: 45, scope: !11879)
!11899 = !DILocation(line: 110, column: 57, scope: !11879)
!11900 = !DILocation(line: 110, column: 51, scope: !11879)
!11901 = !DILocation(line: 110, column: 48, scope: !11879)
!11902 = !DILocation(line: 109, column: 10, scope: !11874)
!11903 = !DILocation(line: 111, column: 22, scope: !11879)
!11904 = !DILocation(line: 111, column: 16, scope: !11879)
!11905 = !DILocation(line: 111, column: 10, scope: !11879)
!11906 = !DILocation(line: 111, column: 3, scope: !11879)
!11907 = distinct !{!11907, !11867, !11908}
!11908 = !DILocation(line: 112, column: 2, scope: !11868)
!11909 = !DILocation(line: 113, column: 18, scope: !11868)
!11910 = !DILocation(line: 113, column: 9, scope: !11868)
!11911 = !DILocation(line: 114, column: 5, scope: !11868)
!11912 = !DILocation(line: 115, column: 21, scope: !11863)
!11913 = !DILocation(line: 115, column: 2, scope: !11863)
!11914 = !DILocation(line: 116, column: 1, scope: !11838)
