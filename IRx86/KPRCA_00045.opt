; ModuleID = './main.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.dict = type { i8*, i8*, %struct.dict* }
%struct.sadface_ctx_t = type { %struct.faces_t, i8*, i64, i64, %struct.dict** }
%struct.faces_t = type { i8*, i8* }
%struct.sad_var_t = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.sad_node = type { i32, %struct.sad_node*, i64, i64, %union.anon.0 }
%union.anon.0 = type { %struct.sad_var_t* }
%struct.stack_t = type { i32, i32, i8** }

@.str = private unnamed_addr constant [3 x i8] c":(\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"):\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c".%02d\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@g_context = dso_local local_unnamed_addr global %struct.dict** null, align 8, !dbg !0
@banner = dso_local local_unnamed_addr global i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0), align 8, !dbg !100
@.str.13 = private unnamed_addr constant [35 x i8] c"# Sad Face Template Engine - v0.1\0A\00", align 1
@.str.1.14 = private unnamed_addr constant [21 x i8] c"1. Define variables\0A\00", align 1
@.str.2.15 = private unnamed_addr constant [19 x i8] c"2. View variables\0A\00", align 1
@.str.3.16 = private unnamed_addr constant [26 x i8] c"3. Submit templated text\0A\00", align 1
@.str.4.17 = private unnamed_addr constant [16 x i8] c"4. Render text\0A\00", align 1
@.str.5.18 = private unnamed_addr constant [9 x i8] c"5. Quit\0A\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"-- Empty variable name will exit this menu\0A\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"-- Empty value will undefine the variable (if exists)\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"var name: \00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"-- Available types\0A\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"    0 - String (default)\0A\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"    1 - Integer\0A\00", align 1
@.str.13.19 = private unnamed_addr constant [15 x i8] c"    2 - Float\0A\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"    3 - Bool [true/false]\0A\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"var type: \00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"var value: \00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"-- Current variables:\0A\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c" > %s : %s\0A\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"-- Total %d variable(s)\0A\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"-- None\0A\00", align 1
@.str.22 = private unnamed_addr constant [36 x i8] c"-- Submit a null-terminated string\0A\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"error.\0A\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"-- Render start.\0A\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"-- Render complete (%d bytes).\0A\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"# Bye.\0A\0A\00", align 1
@.str.30 = private unnamed_addr constant [26 x i8] c"Invalid menu. Try again.\0A\00", align 1

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i8* @strstr(i8* readonly %0, i8* readonly %1) local_unnamed_addr #0 !dbg !221 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !225, metadata !DIExpression()), !dbg !232
  call void @llvm.dbg.value(metadata i8* %1, metadata !226, metadata !DIExpression()), !dbg !232
  %3 = icmp ne i8* %0, null, !dbg !233
  %4 = icmp ne i8* %1, null, !dbg !234
  %5 = and i1 %3, %4, !dbg !235
  br i1 %5, label %6, label %30, !dbg !235

6:                                                ; preds = %2, %23
  %7 = phi i8* [ %28, %23 ], [ %0, %2 ]
  %8 = phi i8* [ %29, %23 ], [ undef, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !225, metadata !DIExpression()), !dbg !232
  %9 = load i8, i8* %7, align 1, !dbg !236, !tbaa !237
  %10 = icmp eq i8 %9, 0, !dbg !240
  br i1 %10, label %30, label %11, !dbg !240

11:                                               ; preds = %6, %19
  %12 = phi i8* [ %20, %19 ], [ %7, %6 ], !dbg !241
  %13 = phi i8* [ %21, %19 ], [ %1, %6 ], !dbg !241
  call void @llvm.dbg.value(metadata i8* %13, metadata !231, metadata !DIExpression()), !dbg !241
  call void @llvm.dbg.value(metadata i8* %12, metadata !227, metadata !DIExpression()), !dbg !241
  %14 = load i8, i8* %12, align 1, !dbg !242, !tbaa !237
  %15 = icmp eq i8 %14, 0, !dbg !242
  br i1 %15, label %23, label %16, !dbg !243

16:                                               ; preds = %11
  %17 = load i8, i8* %13, align 1, !dbg !244, !tbaa !237
  %18 = icmp eq i8 %17, 0, !dbg !244
  br i1 %18, label %23, label %19, !dbg !245

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !246
  call void @llvm.dbg.value(metadata i8* %20, metadata !227, metadata !DIExpression()), !dbg !241
  %21 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !247
  call void @llvm.dbg.value(metadata i8* %21, metadata !231, metadata !DIExpression()), !dbg !241
  %22 = icmp eq i8 %14, %17, !dbg !248
  br i1 %22, label %11, label %23, !dbg !249, !llvm.loop !250

23:                                               ; preds = %16, %11, %19
  %24 = phi i8* [ %21, %19 ], [ %13, %16 ], [ %13, %11 ], !dbg !241
  call void @llvm.dbg.value(metadata i8* %24, metadata !231, metadata !DIExpression()), !dbg !241
  %25 = load i8, i8* %24, align 1, !dbg !252, !tbaa !237
  %26 = icmp eq i8 %25, 0, !dbg !252
  %27 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !254
  %28 = select i1 %26, i8* %7, i8* %27, !dbg !254
  %29 = select i1 %26, i8* %7, i8* %8, !dbg !254
  call void @llvm.dbg.value(metadata i8* %28, metadata !225, metadata !DIExpression()), !dbg !232
  br i1 %26, label %30, label %6, !llvm.loop !255

30:                                               ; preds = %23, %6, %2
  %31 = phi i8* [ null, %2 ], [ %29, %23 ], [ null, %6 ]
  ret i8* %31, !dbg !257
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define dso_local i32 @sadface_init(%struct.sadface_ctx_t** %0, %struct.faces_t* readonly %1, i8* nocapture readonly %2, %struct.dict** %3) local_unnamed_addr #2 !dbg !258 {
  call void @llvm.dbg.value(metadata %struct.sadface_ctx_t** %0, metadata !264, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata %struct.faces_t* %1, metadata !265, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i8* %2, metadata !266, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata %struct.dict** %3, metadata !267, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata %struct.sadface_ctx_t* null, metadata !268, metadata !DIExpression()), !dbg !270
  %5 = icmp eq %struct.sadface_ctx_t** %0, null, !dbg !271
  br i1 %5, label %43, label %6, !dbg !273

6:                                                ; preds = %4
  %7 = call dereferenceable_or_null(48) i8* @malloc(i64 48), !dbg !274
  %8 = bitcast i8* %7 to %struct.sadface_ctx_t*, !dbg !276
  call void @llvm.dbg.value(metadata %struct.sadface_ctx_t* %8, metadata !268, metadata !DIExpression()), !dbg !270
  %9 = icmp eq i8* %7, null, !dbg !277
  br i1 %9, label %43, label %10, !dbg !279

10:                                               ; preds = %6
  %11 = icmp eq %struct.faces_t* %1, null, !dbg !280
  br i1 %11, label %12, label %16, !dbg !283

12:                                               ; preds = %10
  %13 = bitcast i8* %7 to i8**, !dbg !284
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %13, align 8, !dbg !286, !tbaa !287
  %14 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !292
  %15 = bitcast i8* %14 to i8**, !dbg !292
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %15, align 8, !dbg !293, !tbaa !294
  br label %29, !dbg !295

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.faces_t, %struct.faces_t* %1, i64 0, i32 0, !dbg !296
  %18 = load i8*, i8** %17, align 8, !dbg !296, !tbaa !299
  %19 = icmp eq i8* %18, null, !dbg !300
  %20 = bitcast i8* %7 to i8**, !dbg !301
  %21 = select i1 %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %18
  store i8* %21, i8** %20, align 8, !dbg !301, !tbaa !287
  %22 = getelementptr inbounds %struct.faces_t, %struct.faces_t* %1, i64 0, i32 1, !dbg !302
  %23 = load i8*, i8** %22, align 8, !dbg !302, !tbaa !304
  %24 = icmp eq i8* %23, null, !dbg !305
  %25 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !306
  %26 = bitcast i8* %25 to i8**, !dbg !306
  br i1 %24, label %27, label %28, !dbg !307

27:                                               ; preds = %16
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %26, align 8, !dbg !308, !tbaa !294
  br label %29, !dbg !309

28:                                               ; preds = %16
  store i8* %23, i8** %26, align 8, !dbg !310, !tbaa !294
  br label %29

29:                                               ; preds = %27, %28, %12
  %30 = call i8* @strdup(i8* %2), !dbg !311
  %31 = getelementptr inbounds i8, i8* %7, i64 16, !dbg !312
  %32 = bitcast i8* %31 to i8**, !dbg !312
  store i8* %30, i8** %32, align 8, !dbg !313, !tbaa !314
  %33 = icmp eq i8* %30, null, !dbg !315
  br i1 %33, label %43, label %34, !dbg !317

34:                                               ; preds = %29
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2), !dbg !318
  %36 = getelementptr inbounds i8, i8* %7, i64 24, !dbg !319
  %37 = bitcast i8* %36 to i64*, !dbg !319
  store i64 %35, i64* %37, align 8, !dbg !320, !tbaa !321
  %38 = getelementptr inbounds i8, i8* %7, i64 32, !dbg !322
  %39 = bitcast i8* %38 to i64*, !dbg !322
  store i64 0, i64* %39, align 8, !dbg !323, !tbaa !324
  %40 = getelementptr inbounds i8, i8* %7, i64 40, !dbg !325
  %41 = bitcast i8* %40 to %struct.dict***, !dbg !325
  store %struct.dict** %3, %struct.dict*** %41, align 8, !dbg !326, !tbaa !327
  %42 = bitcast %struct.sadface_ctx_t** %0 to i8**, !dbg !328
  store i8* %7, i8** %42, align 8, !dbg !328, !tbaa !329
  br label %53, !dbg !330

43:                                               ; preds = %6, %4, %29
  %44 = phi %struct.sadface_ctx_t* [ %8, %29 ], [ null, %6 ], [ null, %4 ], !dbg !270
  call void @llvm.dbg.value(metadata %struct.sadface_ctx_t* %44, metadata !268, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.label(metadata !269), !dbg !331
  %45 = icmp eq %struct.sadface_ctx_t* %44, null, !dbg !332
  br i1 %45, label %53, label %46, !dbg !334

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %44, i64 0, i32 1, !dbg !335
  %48 = load i8*, i8** %47, align 8, !dbg !335, !tbaa !314
  %49 = icmp eq i8* %48, null, !dbg !338
  br i1 %49, label %51, label %50, !dbg !339

50:                                               ; preds = %46
  call void @free(i8* %48), !dbg !340
  br label %51, !dbg !340

51:                                               ; preds = %46, %50
  %52 = bitcast %struct.sadface_ctx_t* %44 to i8*, !dbg !341
  call void @free(i8* %52), !dbg !342
  br label %53, !dbg !343

53:                                               ; preds = %51, %43, %34
  %54 = phi i32 [ 0, %34 ], [ -1, %43 ], [ -1, %51 ], !dbg !270
  ret i32 %54, !dbg !344
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare !dbg !56 dso_local void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i8* @sadface_var2str(%struct.sad_var_t* nocapture readonly %0) local_unnamed_addr #2 !dbg !345 {
  call void @llvm.dbg.value(metadata %struct.sad_var_t* %0, metadata !349, metadata !DIExpression()), !dbg !357
  %2 = call dereferenceable_or_null(256) i8* @calloc(i64 1, i64 256), !dbg !358
  call void @llvm.dbg.value(metadata i8* %2, metadata !356, metadata !DIExpression()), !dbg !357
  %3 = icmp eq i8* %2, null, !dbg !359
  br i1 %3, label %39, label %4, !dbg !361

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.sad_var_t, %struct.sad_var_t* %0, i64 0, i32 0, !dbg !362
  %6 = load i32, i32* %5, align 8, !dbg !362, !tbaa !364
  switch i32 %6, label %39 [
    i32 0, label %7
    i32 1, label %10
    i32 2, label %15
    i32 3, label %32
  ], !dbg !366

7:                                                ; preds = %4
  call void @free(i8* %2), !dbg !367
  %8 = getelementptr inbounds %struct.sad_var_t, %struct.sad_var_t* %0, i64 0, i32 1, i32 0, !dbg !369
  %9 = load i8*, i8** %8, align 8, !dbg !369, !tbaa !237
  br label %39, !dbg !370

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.sad_var_t, %struct.sad_var_t* %0, i64 0, i32 1, !dbg !371
  %12 = bitcast %union.anon* %11 to i32*, !dbg !372
  %13 = load i32, i32* %12, align 8, !dbg !372, !tbaa !237
  call void @llvm.dbg.value(metadata i32 %13, metadata !351, metadata !DIExpression()), !dbg !357
  %14 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 %13), !dbg !373
  br label %39, !dbg !374

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.sad_var_t, %struct.sad_var_t* %0, i64 0, i32 1, !dbg !375
  %17 = bitcast %union.anon* %16 to float*, !dbg !376
  %18 = load float, float* %17, align 8, !dbg !376, !tbaa !237
  %19 = fptosi float %18 to i32, !dbg !377
  call void @llvm.dbg.value(metadata i32 %19, metadata !352, metadata !DIExpression()), !dbg !357
  %20 = sitofp i32 %19 to float, !dbg !378
  %21 = fsub float %18, %20, !dbg !379
  call void @llvm.dbg.value(metadata float %21, metadata !354, metadata !DIExpression()), !dbg !357
  %22 = fmul float %21, 1.000000e+02, !dbg !380
  %23 = fptosi float %22 to i32, !dbg !381
  %24 = srem i32 %23, 100, !dbg !382
  call void @llvm.dbg.value(metadata i32 %24, metadata !353, metadata !DIExpression()), !dbg !357
  %25 = icmp slt i32 %24, 0, !dbg !383
  %26 = sub nsw i32 0, %24, !dbg !385
  %27 = select i1 %25, i32 %26, i32 %24, !dbg !386
  call void @llvm.dbg.value(metadata i32 %27, metadata !353, metadata !DIExpression()), !dbg !357
  %28 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 %19), !dbg !387
  %29 = sext i32 %28 to i64, !dbg !387
  call void @llvm.dbg.value(metadata i64 %29, metadata !350, metadata !DIExpression()), !dbg !357
  %30 = getelementptr inbounds i8, i8* %2, i64 %29, !dbg !388
  %31 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %30, i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 %27), !dbg !389
  br label %39, !dbg !390

32:                                               ; preds = %4
  %33 = getelementptr inbounds %struct.sad_var_t, %struct.sad_var_t* %0, i64 0, i32 1, !dbg !391
  %34 = bitcast %union.anon* %33 to i8*, !dbg !392
  %35 = load i8, i8* %34, align 8, !dbg !392, !tbaa !237
  call void @llvm.dbg.value(metadata i8 %35, metadata !355, metadata !DIExpression()), !dbg !357
  %36 = icmp eq i8 %35, 0, !dbg !393
  br i1 %36, label %38, label %37, !dbg !395

37:                                               ; preds = %32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(5) %2, i8* nonnull align 1 dereferenceable(5) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 5, i1 false), !dbg !396
  br label %39, !dbg !396

38:                                               ; preds = %32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(6) %2, i8* nonnull align 1 dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 6, i1 false), !dbg !397
  br label %39

39:                                               ; preds = %4, %37, %38, %15, %10, %1, %7
  %40 = phi i8* [ %9, %7 ], [ %2, %1 ], [ %2, %10 ], [ %2, %15 ], [ %2, %38 ], [ %2, %37 ], [ %2, %4 ], !dbg !357
  ret i8* %40, !dbg !398
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @calloc(i64, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare dso_local i32 @sprintf(i8* noalias nocapture, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree nounwind uwtable
define dso_local i32 @_find_sadface(%struct.sadface_ctx_t* nocapture readonly %0, i64* nocapture %1, i64* nocapture %2) local_unnamed_addr #7 !dbg !399 {
  call void @llvm.dbg.value(metadata %struct.sadface_ctx_t* %0, metadata !404, metadata !DIExpression()), !dbg !409
  call void @llvm.dbg.value(metadata i64* %1, metadata !405, metadata !DIExpression()), !dbg !409
  call void @llvm.dbg.value(metadata i64* %2, metadata !406, metadata !DIExpression()), !dbg !409
  %4 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 1, !dbg !410
  %5 = load i8*, i8** %4, align 8, !dbg !410, !tbaa !314
  %6 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 3, !dbg !411
  %7 = load i64, i64* %6, align 8, !dbg !411, !tbaa !324
  %8 = getelementptr inbounds i8, i8* %5, i64 %7, !dbg !412
  %9 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 0, i32 0, !dbg !413
  %10 = load i8*, i8** %9, align 8, !dbg !413, !tbaa !287
  %11 = call i8* @strstr(i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %10), !dbg !414
  call void @llvm.dbg.value(metadata i8* %11, metadata !407, metadata !DIExpression()), !dbg !409
  %12 = icmp eq i8* %11, null, !dbg !415
  br i1 %12, label %29, label %13, !dbg !417

13:                                               ; preds = %3
  %14 = call i64 @strlen(i8* nonnull dereferenceable(1) %10), !dbg !418
  %15 = getelementptr inbounds i8, i8* %11, i64 %14, !dbg !419
  %16 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 0, i32 1, !dbg !420
  %17 = load i8*, i8** %16, align 8, !dbg !420, !tbaa !294
  %18 = call i8* @strstr(i8* nonnull %15, i8* nonnull dereferenceable(1) %17), !dbg !421
  call void @llvm.dbg.value(metadata i8* %18, metadata !408, metadata !DIExpression()), !dbg !409
  %19 = icmp eq i8* %18, null, !dbg !422
  br i1 %19, label %29, label %20, !dbg !424

20:                                               ; preds = %13
  %21 = bitcast i8** %4 to i64*, !dbg !425
  %22 = load i64, i64* %21, align 8, !dbg !425, !tbaa !314
  %23 = ptrtoint i8* %11 to i64, !dbg !426
  %24 = sub i64 %23, %22, !dbg !426
  store i64 %24, i64* %1, align 8, !dbg !427, !tbaa !428
  %25 = ptrtoint i8* %18 to i64, !dbg !429
  %26 = sub i64 %25, %22, !dbg !429
  %27 = call i64 @strlen(i8* nonnull dereferenceable(1) %17), !dbg !430
  %28 = add i64 %26, %27, !dbg !431
  store i64 %28, i64* %2, align 8, !dbg !432, !tbaa !428
  br label %29, !dbg !433

29:                                               ; preds = %13, %3, %20
  %30 = phi i32 [ 1, %20 ], [ 0, %3 ], [ -1, %13 ], !dbg !409
  ret i32 %30, !dbg !434
}

; Function Attrs: nounwind uwtable
define dso_local %struct.sad_node* @parse_sadface(%struct.sadface_ctx_t* %0) local_unnamed_addr #2 !dbg !435 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.sadface_ctx_t* %0, metadata !439, metadata !DIExpression()), !dbg !470
  %4 = bitcast i64* %2 to i8*, !dbg !471
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15, !dbg !471
  call void @llvm.dbg.value(metadata i64 0, metadata !440, metadata !DIExpression()), !dbg !470
  store i64 0, i64* %2, align 8, !dbg !472, !tbaa !428
  %5 = bitcast i64* %3 to i8*, !dbg !471
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15, !dbg !471
  call void @llvm.dbg.value(metadata i64 0, metadata !441, metadata !DIExpression()), !dbg !470
  store i64 0, i64* %3, align 8, !dbg !473, !tbaa !428
  %6 = call %struct.stack_t* @stack_new(i32 64) #15, !dbg !474
  call void @llvm.dbg.value(metadata %struct.stack_t* %6, metadata !444, metadata !DIExpression()), !dbg !470
  %7 = call dereferenceable_or_null(40) i8* @malloc(i64 40), !dbg !475
  %8 = bitcast i8* %7 to %struct.sad_node*, !dbg !476
  call void @llvm.dbg.value(metadata %struct.sad_node* %8, metadata !442, metadata !DIExpression()), !dbg !470
  %9 = icmp eq %struct.stack_t* %6, null, !dbg !477
  %10 = icmp eq i8* %7, null, !dbg !479
  %11 = or i1 %9, %10, !dbg !480
  br i1 %11, label %160, label %12, !dbg !480

12:                                               ; preds = %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(40) %7, i8 0, i64 40, i1 false), !dbg !481
  call void @stack_push(%struct.stack_t* %6, i8* %7) #15, !dbg !482
  %13 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 3, !dbg !470
  %14 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 2, !dbg !470
  %15 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 0, i32 0, !dbg !483
  %16 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 0, i32 1, !dbg !483
  %17 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 1, !dbg !483
  %18 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 4, !dbg !484
  br label %19, !dbg !485

19:                                               ; preds = %157, %12
  %20 = load i64, i64* %13, align 8, !dbg !486, !tbaa !324
  %21 = load i64, i64* %14, align 8, !dbg !487, !tbaa !321
  %22 = icmp ult i64 %20, %21, !dbg !488
  br i1 %22, label %23, label %159, !dbg !485

23:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i64* %2, metadata !440, metadata !DIExpression(DW_OP_deref)), !dbg !470
  call void @llvm.dbg.value(metadata i64* %3, metadata !441, metadata !DIExpression(DW_OP_deref)), !dbg !470
  %24 = call i32 @_find_sadface(%struct.sadface_ctx_t* %0, i64* nonnull %2, i64* nonnull %3), !dbg !489
  %25 = icmp slt i32 %24, 1, !dbg !490
  br i1 %25, label %26, label %47, !dbg !491

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 2, !dbg !487
  %28 = call dereferenceable_or_null(40) i8* @malloc(i64 40), !dbg !492
  call void @llvm.dbg.value(metadata i8* %28, metadata !447, metadata !DIExpression()), !dbg !493
  %29 = icmp eq i8* %28, null, !dbg !494
  br i1 %29, label %45, label %30, !dbg !496

30:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i8* %28, metadata !447, metadata !DIExpression()), !dbg !493
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(40) %28, i8 0, i64 40, i1 false), !dbg !497
  %31 = bitcast i8* %28 to i32*, !dbg !498
  store i32 1, i32* %31, align 8, !dbg !499, !tbaa !500
  %32 = getelementptr inbounds i8, i8* %28, i64 8, !dbg !502
  %33 = bitcast i8* %32 to %struct.sad_node**, !dbg !502
  store %struct.sad_node* null, %struct.sad_node** %33, align 8, !dbg !503, !tbaa !504
  %34 = load i64, i64* %13, align 8, !dbg !505, !tbaa !324
  %35 = getelementptr inbounds i8, i8* %28, i64 16, !dbg !506
  %36 = bitcast i8* %35 to i64*, !dbg !506
  store i64 %34, i64* %36, align 8, !dbg !507, !tbaa !508
  %37 = load i64, i64* %27, align 8, !dbg !509, !tbaa !321
  %38 = sub i64 %37, %34, !dbg !510
  %39 = getelementptr inbounds i8, i8* %28, i64 24, !dbg !511
  %40 = bitcast i8* %39 to i64*, !dbg !511
  store i64 %38, i64* %40, align 8, !dbg !512, !tbaa !513
  %41 = call i8* @stack_pop(%struct.stack_t* %6) #15, !dbg !514
  call void @llvm.dbg.value(metadata i8* %41, metadata !443, metadata !DIExpression()), !dbg !470
  %42 = getelementptr inbounds i8, i8* %41, i64 8, !dbg !515
  %43 = bitcast i8* %42 to i8**, !dbg !516
  store i8* %28, i8** %43, align 8, !dbg !516, !tbaa !504
  call void @stack_push(%struct.stack_t* %6, i8* nonnull %28) #15, !dbg !517
  %44 = load i64, i64* %27, align 8, !dbg !518, !tbaa !321
  store i64 %44, i64* %13, align 8, !dbg !519, !tbaa !324
  br label %45, !dbg !520

45:                                               ; preds = %26, %30
  %46 = phi i32 [ 4, %30 ], [ 2, %26 ]
  switch i32 %46, label %163 [
    i32 4, label %159
    i32 2, label %160
  ]

47:                                               ; preds = %23
  %48 = load i64, i64* %13, align 8, !dbg !521, !tbaa !324
  %49 = load i64, i64* %2, align 8, !dbg !522, !tbaa !428
  call void @llvm.dbg.value(metadata i64 %49, metadata !440, metadata !DIExpression()), !dbg !470
  %50 = icmp eq i64 %49, %48, !dbg !523
  br i1 %50, label %66, label %51, !dbg !524

51:                                               ; preds = %47
  %52 = call dereferenceable_or_null(40) i8* @malloc(i64 40), !dbg !525
  call void @llvm.dbg.value(metadata i8* %52, metadata !451, metadata !DIExpression()), !dbg !526
  %53 = icmp eq i8* %52, null, !dbg !527
  br i1 %53, label %160, label %54, !dbg !529

54:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8* %52, metadata !451, metadata !DIExpression()), !dbg !526
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(40) %52, i8 0, i64 40, i1 false), !dbg !530
  %55 = bitcast i8* %52 to i32*, !dbg !531
  store i32 1, i32* %55, align 8, !dbg !532, !tbaa !500
  %56 = getelementptr inbounds i8, i8* %52, i64 8, !dbg !533
  %57 = bitcast i8* %56 to %struct.sad_node**, !dbg !533
  store %struct.sad_node* null, %struct.sad_node** %57, align 8, !dbg !534, !tbaa !504
  %58 = getelementptr inbounds i8, i8* %52, i64 16, !dbg !535
  %59 = bitcast i8* %58 to i64*, !dbg !535
  store i64 %48, i64* %59, align 8, !dbg !536, !tbaa !508
  call void @llvm.dbg.value(metadata i64 %49, metadata !440, metadata !DIExpression()), !dbg !470
  %60 = sub i64 %49, %48, !dbg !537
  %61 = getelementptr inbounds i8, i8* %52, i64 24, !dbg !538
  %62 = bitcast i8* %61 to i64*, !dbg !538
  store i64 %60, i64* %62, align 8, !dbg !539, !tbaa !513
  %63 = call i8* @stack_pop(%struct.stack_t* %6) #15, !dbg !540
  call void @llvm.dbg.value(metadata i8* %63, metadata !443, metadata !DIExpression()), !dbg !470
  %64 = getelementptr inbounds i8, i8* %63, i64 8, !dbg !541
  %65 = bitcast i8* %64 to i8**, !dbg !542
  store i8* %52, i8** %65, align 8, !dbg !542, !tbaa !504
  call void @stack_push(%struct.stack_t* %6, i8* nonnull %52) #15, !dbg !543
  store i64 %49, i64* %13, align 8, !dbg !544, !tbaa !324
  br label %66

66:                                               ; preds = %54, %47
  %67 = load i64, i64* %3, align 8, !dbg !545, !tbaa !428
  call void @llvm.dbg.value(metadata i64 %67, metadata !441, metadata !DIExpression()), !dbg !470
  call void @llvm.dbg.value(metadata i64 %49, metadata !440, metadata !DIExpression()), !dbg !470
  %68 = sub i64 %67, %49, !dbg !546
  %69 = load i8*, i8** %15, align 8, !dbg !547, !tbaa !287
  %70 = call i64 @strlen(i8* nonnull dereferenceable(1) %69), !dbg !548
  %71 = sub i64 %68, %70, !dbg !549
  %72 = load i8*, i8** %16, align 8, !dbg !550, !tbaa !294
  %73 = call i64 @strlen(i8* nonnull dereferenceable(1) %72), !dbg !551
  %74 = sub i64 %71, %73, !dbg !552
  call void @llvm.dbg.value(metadata i64 %74, metadata !454, metadata !DIExpression()), !dbg !483
  %75 = load i8*, i8** %17, align 8, !dbg !553, !tbaa !314
  call void @llvm.dbg.value(metadata i64 %49, metadata !440, metadata !DIExpression()), !dbg !470
  %76 = add i64 %70, %49, !dbg !554
  %77 = getelementptr inbounds i8, i8* %75, i64 %76, !dbg !555
  call void @llvm.dbg.value(metadata i8* %77, metadata !455, metadata !DIExpression()), !dbg !483
  %78 = load i8, i8* %77, align 1, !dbg !556, !tbaa !237
  %79 = sext i8 %78 to i32, !dbg !556
  switch i32 %79, label %129 [
    i32 64, label %80
    i32 47, label %104
    i32 35, label %128
  ], !dbg !557

80:                                               ; preds = %66
  %81 = call dereferenceable_or_null(40) i8* @malloc(i64 40), !dbg !558
  call void @llvm.dbg.value(metadata i8* %81, metadata !460, metadata !DIExpression()), !dbg !559
  %82 = call dereferenceable_or_null(40) i8* @malloc(i64 40), !dbg !560
  call void @llvm.dbg.value(metadata i8* %82, metadata !456, metadata !DIExpression()), !dbg !559
  %83 = icmp eq i8* %81, null, !dbg !561
  %84 = icmp eq i8* %82, null, !dbg !563
  %85 = or i1 %83, %84, !dbg !564
  br i1 %85, label %101, label %86, !dbg !564

86:                                               ; preds = %80
  call void @llvm.dbg.value(metadata i8* %82, metadata !456, metadata !DIExpression()), !dbg !559
  call void @llvm.dbg.value(metadata i8* %81, metadata !460, metadata !DIExpression()), !dbg !559
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(40) %81, i8 0, i64 40, i1 false), !dbg !565
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(40) %82, i8 0, i64 40, i1 false), !dbg !566
  %87 = bitcast i8* %82 to i32*, !dbg !567
  store i32 3, i32* %87, align 8, !dbg !568, !tbaa !500
  call void @llvm.dbg.value(metadata i64 %49, metadata !440, metadata !DIExpression()), !dbg !470
  %88 = call i64 @strlen(i8* nonnull dereferenceable(1) %69), !dbg !569
  %89 = add i64 %49, 1, !dbg !570
  %90 = add i64 %89, %88, !dbg !571
  %91 = getelementptr inbounds i8, i8* %82, i64 16, !dbg !572
  %92 = bitcast i8* %91 to i64*, !dbg !572
  store i64 %90, i64* %92, align 8, !dbg !573, !tbaa !508
  %93 = add i64 %74, -1, !dbg !574
  %94 = getelementptr inbounds i8, i8* %82, i64 24, !dbg !575
  %95 = bitcast i8* %94 to i64*, !dbg !575
  store i64 %93, i64* %95, align 8, !dbg !576, !tbaa !513
  %96 = getelementptr inbounds i8, i8* %82, i64 32, !dbg !577
  %97 = bitcast i8* %96 to i8**, !dbg !578
  store i8* %81, i8** %97, align 8, !dbg !578, !tbaa !237
  %98 = call i8* @stack_pop(%struct.stack_t* %6) #15, !dbg !579
  call void @llvm.dbg.value(metadata i8* %98, metadata !459, metadata !DIExpression()), !dbg !559
  %99 = getelementptr inbounds i8, i8* %98, i64 8, !dbg !580
  %100 = bitcast i8* %99 to i8**, !dbg !581
  store i8* %82, i8** %100, align 8, !dbg !581, !tbaa !504
  call void @stack_push(%struct.stack_t* %6, i8* %82) #15, !dbg !582
  call void @stack_push(%struct.stack_t* %6, i8* %81) #15, !dbg !583
  call void @llvm.dbg.value(metadata i64 %67, metadata !441, metadata !DIExpression()), !dbg !470
  store i64 %67, i64* %13, align 8, !dbg !584, !tbaa !324
  br label %101, !dbg !585

101:                                              ; preds = %80, %86
  %102 = phi i32 [ 0, %86 ], [ 2, %80 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %156, label %157

104:                                              ; preds = %66
  %105 = call i8* @stack_pop(%struct.stack_t* %6) #15, !dbg !586
  call void @llvm.dbg.value(metadata i8* %105, metadata !463, metadata !DIExpression()), !dbg !587
  %106 = call i8* @stack_peek(%struct.stack_t* %6) #15, !dbg !588
  call void @llvm.dbg.value(metadata i8* %106, metadata !461, metadata !DIExpression()), !dbg !587
  %107 = icmp eq i8* %106, null, !dbg !589
  br i1 %107, label %125, label %108, !dbg !591

108:                                              ; preds = %104
  %109 = bitcast i8* %106 to i32*, !dbg !592
  %110 = load i32, i32* %109, align 8, !dbg !592, !tbaa !500
  %111 = icmp eq i32 %110, 3, !dbg !593
  br i1 %111, label %112, label %125, !dbg !594

112:                                              ; preds = %108
  %113 = load i8*, i8** %17, align 8, !dbg !595, !tbaa !314
  %114 = getelementptr inbounds i8, i8* %106, i64 16, !dbg !597
  %115 = bitcast i8* %114 to i64*, !dbg !597
  %116 = load i64, i64* %115, align 8, !dbg !597, !tbaa !508
  %117 = getelementptr inbounds i8, i8* %113, i64 %116, !dbg !598
  %118 = getelementptr inbounds i8, i8* %77, i64 1, !dbg !599
  %119 = getelementptr inbounds i8, i8* %106, i64 24, !dbg !600
  %120 = bitcast i8* %119 to i64*, !dbg !600
  %121 = load i64, i64* %120, align 8, !dbg !600, !tbaa !513
  %122 = call i32 @strncmp(i8* %117, i8* nonnull %118, i64 %121), !dbg !601
  %123 = icmp eq i32 %122, 0, !dbg !602
  br i1 %123, label %124, label %125, !dbg !603

124:                                              ; preds = %112
  call void @llvm.dbg.value(metadata i64 %67, metadata !441, metadata !DIExpression()), !dbg !470
  store i64 %67, i64* %13, align 8, !dbg !604, !tbaa !324
  br label %125, !dbg !605

125:                                              ; preds = %112, %104, %108, %124
  %126 = phi i32 [ 0, %124 ], [ 2, %108 ], [ 2, %104 ], [ 2, %112 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %156, label %157

128:                                              ; preds = %66
  call void @llvm.dbg.value(metadata i64 %67, metadata !441, metadata !DIExpression()), !dbg !470
  store i64 %67, i64* %13, align 8, !dbg !606, !tbaa !324
  br label %156, !dbg !607

129:                                              ; preds = %66
  %130 = add i64 %74, 1, !dbg !608
  %131 = call i8* @calloc(i64 %130, i64 1), !dbg !609
  call void @llvm.dbg.value(metadata i8* %131, metadata !466, metadata !DIExpression()), !dbg !484
  %132 = icmp eq i8* %131, null, !dbg !610
  br i1 %132, label %153, label %133, !dbg !612

133:                                              ; preds = %129
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %131, i8 0, i64 %130, i1 false), !dbg !613
  call void @llvm.dbg.value(metadata i64 %49, metadata !440, metadata !DIExpression()), !dbg !470
  %134 = call i64 @strlen(i8* nonnull dereferenceable(1) %69), !dbg !614
  %135 = add i64 %134, %49, !dbg !615
  call void @llvm.dbg.value(metadata i64 %135, metadata !464, metadata !DIExpression()), !dbg !484
  %136 = getelementptr inbounds i8, i8* %75, i64 %135, !dbg !616
  %137 = call i8* @strncpy(i8* nonnull %131, i8* %136, i64 %74), !dbg !617
  %138 = call dereferenceable_or_null(40) i8* @malloc(i64 40), !dbg !618
  call void @llvm.dbg.value(metadata i8* %138, metadata !467, metadata !DIExpression()), !dbg !484
  %139 = icmp eq i8* %138, null, !dbg !619
  br i1 %139, label %153, label %140, !dbg !621

140:                                              ; preds = %133
  call void @llvm.dbg.value(metadata i8* %138, metadata !467, metadata !DIExpression()), !dbg !484
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(40) %138, i8 0, i64 40, i1 false), !dbg !622
  %141 = bitcast i8* %138 to i32*, !dbg !623
  store i32 2, i32* %141, align 8, !dbg !624, !tbaa !500
  %142 = getelementptr inbounds i8, i8* %138, i64 16, !dbg !625
  %143 = bitcast i8* %142 to i64*, !dbg !625
  store i64 %135, i64* %143, align 8, !dbg !626, !tbaa !508
  %144 = getelementptr inbounds i8, i8* %138, i64 24, !dbg !627
  %145 = bitcast i8* %144 to i64*, !dbg !627
  store i64 %74, i64* %145, align 8, !dbg !628, !tbaa !513
  %146 = load %struct.dict**, %struct.dict*** %18, align 8, !dbg !629, !tbaa !327
  %147 = call i8* @dict_find(%struct.dict** %146, i8* nonnull %131) #15, !dbg !630
  %148 = getelementptr inbounds i8, i8* %138, i64 32, !dbg !631
  %149 = bitcast i8* %148 to i8**, !dbg !632
  store i8* %147, i8** %149, align 8, !dbg !632, !tbaa !237
  call void @free(i8* %131), !dbg !633
  %150 = call i8* @stack_pop(%struct.stack_t* %6) #15, !dbg !634
  call void @llvm.dbg.value(metadata i8* %150, metadata !468, metadata !DIExpression()), !dbg !484
  %151 = getelementptr inbounds i8, i8* %150, i64 8, !dbg !635
  %152 = bitcast i8* %151 to i8**, !dbg !636
  store i8* %138, i8** %152, align 8, !dbg !636, !tbaa !504
  call void @stack_push(%struct.stack_t* %6, i8* nonnull %138) #15, !dbg !637
  call void @llvm.dbg.value(metadata i64 %67, metadata !441, metadata !DIExpression()), !dbg !470
  store i64 %67, i64* %13, align 8, !dbg !638, !tbaa !324
  br label %153, !dbg !639

153:                                              ; preds = %133, %129, %140
  %154 = phi i32 [ 0, %140 ], [ 2, %129 ], [ 2, %133 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153, %125, %101, %128
  br label %157, !dbg !640

157:                                              ; preds = %153, %101, %125, %156
  %158 = phi i32 [ 0, %156 ], [ %154, %153 ], [ %126, %125 ], [ %102, %101 ]
  switch i32 %158, label %163 [
    i32 0, label %19
    i32 2, label %160
  ], !llvm.loop !641

159:                                              ; preds = %19, %45
  call void @stack_destroy(%struct.stack_t* %6) #15, !dbg !642
  br label %163, !dbg !643

160:                                              ; preds = %51, %157, %1, %45
  call void @llvm.dbg.label(metadata !469), !dbg !644
  br i1 %9, label %162, label %161, !dbg !645

161:                                              ; preds = %160
  call void @stack_destroy(%struct.stack_t* nonnull %6) #15, !dbg !646
  br label %162, !dbg !646

162:                                              ; preds = %160, %161
  call void @sadface_destroy(%struct.sadface_ctx_t* %0), !dbg !648
  br label %163, !dbg !649

163:                                              ; preds = %157, %162, %159, %45
  %164 = phi %struct.sad_node* [ null, %162 ], [ undef, %45 ], [ %8, %159 ], [ undef, %157 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15, !dbg !650
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15, !dbg !650
  ret %struct.sad_node* %164, !dbg !650
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: nofree nounwind readonly
declare dso_local i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare dso_local i8* @strncpy(i8* noalias returned, i8* noalias nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local void @sadface_destroy(%struct.sadface_ctx_t* %0) local_unnamed_addr #2 !dbg !651 {
  call void @llvm.dbg.value(metadata %struct.sadface_ctx_t* %0, metadata !655, metadata !DIExpression()), !dbg !656
  %2 = icmp eq %struct.sadface_ctx_t* %0, null, !dbg !657
  br i1 %2, label %10, label %3, !dbg !659

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 1, !dbg !660
  %5 = load i8*, i8** %4, align 8, !dbg !660, !tbaa !314
  %6 = icmp eq i8* %5, null, !dbg !663
  br i1 %6, label %8, label %7, !dbg !664

7:                                                ; preds = %3
  call void @free(i8* %5), !dbg !665
  br label %8, !dbg !665

8:                                                ; preds = %3, %7
  %9 = bitcast %struct.sadface_ctx_t* %0 to i8*, !dbg !666
  call void @free(i8* %9), !dbg !667
  br label %10, !dbg !668

10:                                               ; preds = %1, %8
  ret void, !dbg !669
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind uwtable
define dso_local i32 @sadface_render(%struct.sadface_ctx_t* %0, i8* nocapture %1, i64* nocapture %2) local_unnamed_addr #2 !dbg !670 {
  call void @llvm.dbg.value(metadata %struct.sadface_ctx_t* %0, metadata !674, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i8* %1, metadata !675, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64* %2, metadata !676, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata %struct.sad_node* null, metadata !678, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata %struct.sad_node* null, metadata !679, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64 0, metadata !680, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64 0, metadata !681, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64 0, metadata !682, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64 0, metadata !683, metadata !DIExpression()), !dbg !694
  %4 = call %struct.sad_node* @parse_sadface(%struct.sadface_ctx_t* %0), !dbg !695
  call void @llvm.dbg.value(metadata %struct.sad_node* %4, metadata !678, metadata !DIExpression()), !dbg !694
  %5 = icmp eq %struct.sad_node* %4, null, !dbg !696
  br i1 %5, label %97, label %6, !dbg !698

6:                                                ; preds = %3
  %7 = call %struct.stack_t* @stack_new(i32 64) #15, !dbg !699
  call void @llvm.dbg.value(metadata %struct.stack_t* %7, metadata !677, metadata !DIExpression()), !dbg !694
  %8 = icmp eq %struct.stack_t* %7, null, !dbg !700
  br i1 %8, label %97, label %9, !dbg !702

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.sad_node* %4, metadata !679, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64 0, metadata !680, metadata !DIExpression()), !dbg !694
  %10 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 1, !dbg !703
  %11 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 1, !dbg !704
  %12 = getelementptr inbounds %struct.sadface_ctx_t, %struct.sadface_ctx_t* %0, i64 0, i32 4, !dbg !704
  %13 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %7, i64 0, i32 0, !dbg !705
  br label %14, !dbg !707

14:                                               ; preds = %9, %91
  %15 = phi %struct.sad_node* [ %4, %9 ], [ %94, %91 ]
  %16 = phi i64 [ 0, %9 ], [ %80, %91 ]
  call void @llvm.dbg.value(metadata %struct.sad_node* %15, metadata !679, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64 %16, metadata !680, metadata !DIExpression()), !dbg !694
  %17 = getelementptr inbounds %struct.sad_node, %struct.sad_node* %15, i64 0, i32 0, !dbg !708
  %18 = load i32, i32* %17, align 8, !dbg !708, !tbaa !500
  switch i32 %18, label %79 [
    i32 3, label %45
    i32 1, label %19
    i32 2, label %29
  ], !dbg !709

19:                                               ; preds = %14
  %20 = getelementptr inbounds i8, i8* %1, i64 %16, !dbg !710
  %21 = load i8*, i8** %10, align 8, !dbg !711, !tbaa !314
  %22 = getelementptr inbounds %struct.sad_node, %struct.sad_node* %15, i64 0, i32 2, !dbg !712
  %23 = load i64, i64* %22, align 8, !dbg !712, !tbaa !508
  %24 = getelementptr inbounds i8, i8* %21, i64 %23, !dbg !713
  %25 = getelementptr inbounds %struct.sad_node, %struct.sad_node* %15, i64 0, i32 3, !dbg !714
  %26 = load i64, i64* %25, align 8, !dbg !714, !tbaa !513
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %24, i64 %26, i1 false), !dbg !715
  %27 = load i64, i64* %25, align 8, !dbg !716, !tbaa !513
  %28 = add i64 %27, %16, !dbg !717
  call void @llvm.dbg.value(metadata i64 %28, metadata !680, metadata !DIExpression()), !dbg !694
  br label %79, !dbg !718

29:                                               ; preds = %14
  %30 = getelementptr inbounds %struct.sad_node, %struct.sad_node* %15, i64 0, i32 4, i32 0, !dbg !719
  %31 = load %struct.sad_var_t*, %struct.sad_var_t** %30, align 8, !dbg !719, !tbaa !237
  call void @llvm.dbg.value(metadata %struct.sad_var_t* %31, metadata !685, metadata !DIExpression()), !dbg !720
  %32 = icmp eq %struct.sad_var_t* %31, null, !dbg !721
  br i1 %32, label %79, label %33, !dbg !723

33:                                               ; preds = %29
  %34 = call i8* @sadface_var2str(%struct.sad_var_t* nonnull %31), !dbg !724
  call void @llvm.dbg.value(metadata i8* %34, metadata !689, metadata !DIExpression()), !dbg !720
  %35 = icmp eq i8* %34, null, !dbg !725
  br i1 %35, label %79, label %36, !dbg !727

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %1, i64 %16, !dbg !728
  %38 = call i64 @strlen(i8* nonnull %34), !dbg !730
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* nonnull align 1 %34, i64 %38, i1 false), !dbg !731
  %39 = call i64 @strlen(i8* nonnull %34), !dbg !732
  %40 = add i64 %39, %16, !dbg !733
  call void @llvm.dbg.value(metadata i64 %40, metadata !680, metadata !DIExpression()), !dbg !694
  %41 = getelementptr inbounds %struct.sad_var_t, %struct.sad_var_t* %31, i64 0, i32 0, !dbg !734
  %42 = load i32, i32* %41, align 8, !dbg !734, !tbaa !364
  %43 = icmp eq i32 %42, 0, !dbg !736
  br i1 %43, label %79, label %44, !dbg !737

44:                                               ; preds = %36
  call void @free(i8* %34), !dbg !738
  br label %79, !dbg !738

45:                                               ; preds = %14
  %46 = getelementptr inbounds %struct.sad_node, %struct.sad_node* %15, i64 0, i32 3, !dbg !739
  %47 = load i64, i64* %46, align 8, !dbg !739, !tbaa !513
  %48 = add i64 %47, 1, !dbg !740
  %49 = call i8* @calloc(i64 %48, i64 1), !dbg !741
  call void @llvm.dbg.value(metadata i8* %49, metadata !690, metadata !DIExpression()), !dbg !704
  %50 = icmp eq i8* %49, null, !dbg !742
  br i1 %50, label %76, label %51, !dbg !744

51:                                               ; preds = %45
  %52 = load i64, i64* %46, align 8, !dbg !745, !tbaa !513
  %53 = add i64 %52, 1, !dbg !746
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 0, i64 %53, i1 false), !dbg !747
  %54 = load i8*, i8** %11, align 8, !dbg !748, !tbaa !314
  %55 = getelementptr inbounds %struct.sad_node, %struct.sad_node* %15, i64 0, i32 2, !dbg !749
  %56 = load i64, i64* %55, align 8, !dbg !749, !tbaa !508
  %57 = getelementptr inbounds i8, i8* %54, i64 %56, !dbg !750
  %58 = load i64, i64* %46, align 8, !dbg !751, !tbaa !513
  %59 = call i8* @strncpy(i8* nonnull %49, i8* %57, i64 %58), !dbg !752
  %60 = load %struct.dict**, %struct.dict*** %12, align 8, !dbg !753, !tbaa !327
  %61 = call i8* @dict_find(%struct.dict** %60, i8* nonnull %49) #15, !dbg !754
  call void @llvm.dbg.value(metadata i8* %61, metadata !692, metadata !DIExpression()), !dbg !704
  call void @free(i8* %49), !dbg !755
  %62 = icmp eq i8* %61, null, !dbg !756
  br i1 %62, label %76, label %63, !dbg !758

63:                                               ; preds = %51
  %64 = bitcast i8* %61 to i32*, !dbg !759
  %65 = load i32, i32* %64, align 8, !dbg !759, !tbaa !364
  %66 = icmp eq i32 %65, 3, !dbg !760
  br i1 %66, label %67, label %71, !dbg !761

67:                                               ; preds = %63
  %68 = getelementptr inbounds i8, i8* %61, i64 8, !dbg !762
  %69 = load i8, i8* %68, align 8, !dbg !763, !tbaa !237
  %70 = icmp eq i8 %69, 0, !dbg !764
  br i1 %70, label %76, label %71, !dbg !765

71:                                               ; preds = %67, %63
  %72 = bitcast %struct.sad_node* %15 to i8*, !dbg !766
  call void @stack_push(%struct.stack_t* nonnull %7, i8* nonnull %72) #15, !dbg !767
  %73 = getelementptr inbounds %struct.sad_node, %struct.sad_node* %15, i64 0, i32 4, !dbg !768
  %74 = bitcast %union.anon.0* %73 to %struct.sad_node**, !dbg !768
  %75 = load %struct.sad_node*, %struct.sad_node** %74, align 8, !dbg !768, !tbaa !237
  call void @llvm.dbg.value(metadata %struct.sad_node* %75, metadata !679, metadata !DIExpression()), !dbg !694
  br label %76, !dbg !769

76:                                               ; preds = %51, %67, %45, %71
  %77 = phi %struct.sad_node* [ %75, %71 ], [ %15, %45 ], [ %15, %67 ], [ %15, %51 ], !dbg !694
  %78 = phi i32 [ 0, %71 ], [ 2, %45 ], [ 5, %67 ], [ 5, %51 ]
  call void @llvm.dbg.value(metadata %struct.sad_node* %77, metadata !679, metadata !DIExpression()), !dbg !694
  switch i32 %78, label %101 [
    i32 0, label %79
    i32 5, label %79
    i32 2, label %97
  ]

79:                                               ; preds = %29, %36, %33, %44, %76, %14, %76, %19
  %80 = phi i64 [ %16, %14 ], [ %28, %19 ], [ %16, %76 ], [ %16, %76 ], [ %16, %29 ], [ %40, %44 ], [ %40, %36 ], [ %16, %33 ], !dbg !694
  %81 = phi %struct.sad_node* [ %15, %14 ], [ %15, %19 ], [ %77, %76 ], [ %77, %76 ], [ %15, %29 ], [ %15, %44 ], [ %15, %36 ], [ %15, %33 ], !dbg !770
  call void @llvm.dbg.value(metadata %struct.sad_node* %81, metadata !679, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64 %80, metadata !680, metadata !DIExpression()), !dbg !694
  %82 = getelementptr inbounds %struct.sad_node, %struct.sad_node* %81, i64 0, i32 1, !dbg !771
  %83 = load %struct.sad_node*, %struct.sad_node** %82, align 8, !dbg !771, !tbaa !504
  %84 = icmp eq %struct.sad_node* %83, null, !dbg !772
  br i1 %84, label %85, label %91, !dbg !773

85:                                               ; preds = %79
  %86 = load i32, i32* %13, align 8, !dbg !774, !tbaa !775
  %87 = icmp eq i32 %86, 0, !dbg !778
  br i1 %87, label %91, label %88, !dbg !779

88:                                               ; preds = %85
  %89 = call i8* @stack_pop(%struct.stack_t* nonnull %7) #15, !dbg !780
  %90 = bitcast i8* %89 to %struct.sad_node*, !dbg !780
  call void @llvm.dbg.value(metadata %struct.sad_node* %90, metadata !679, metadata !DIExpression()), !dbg !694
  br label %91, !dbg !781

91:                                               ; preds = %85, %88, %79
  %92 = phi %struct.sad_node* [ %90, %88 ], [ %81, %85 ], [ %81, %79 ], !dbg !694
  call void @llvm.dbg.value(metadata %struct.sad_node* %92, metadata !679, metadata !DIExpression()), !dbg !694
  %93 = getelementptr inbounds %struct.sad_node, %struct.sad_node* %92, i64 0, i32 1, !dbg !782
  %94 = load %struct.sad_node*, %struct.sad_node** %93, align 8, !dbg !782, !tbaa !504
  call void @llvm.dbg.value(metadata %struct.sad_node* %94, metadata !679, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64 %80, metadata !680, metadata !DIExpression()), !dbg !694
  %95 = icmp eq %struct.sad_node* %94, null, !dbg !707
  br i1 %95, label %96, label %14, !dbg !707, !llvm.loop !783

96:                                               ; preds = %91
  call void @llvm.dbg.value(metadata i64 %80, metadata !680, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64 %80, metadata !680, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64 %80, metadata !680, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.value(metadata i64 %80, metadata !680, metadata !DIExpression()), !dbg !694
  store i64 %80, i64* %2, align 8, !dbg !785, !tbaa !428
  br label %101, !dbg !786

97:                                               ; preds = %76, %6, %3
  %98 = phi %struct.stack_t* [ undef, %3 ], [ null, %6 ], [ %7, %76 ]
  call void @llvm.dbg.value(metadata %struct.stack_t* %98, metadata !677, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.label(metadata !693), !dbg !787
  %99 = icmp eq %struct.stack_t* %98, null, !dbg !788
  br i1 %99, label %101, label %100, !dbg !790

100:                                              ; preds = %97
  call void @stack_destroy(%struct.stack_t* nonnull %98) #15, !dbg !791
  br label %101, !dbg !791

101:                                              ; preds = %76, %100, %97, %96
  %102 = phi i32 [ 0, %96 ], [ -1, %97 ], [ -1, %100 ], [ undef, %76 ]
  ret i32 %102, !dbg !792
}

; Function Attrs: nofree nounwind uwtable
define dso_local noalias %struct.stack_t* @stack_new(i32 %0) local_unnamed_addr #7 !dbg !793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !804, metadata !DIExpression()), !dbg !806
  %2 = call dereferenceable_or_null(16) i8* @malloc(i64 16), !dbg !807
  call void @llvm.dbg.value(metadata i8* %2, metadata !805, metadata !DIExpression()), !dbg !806
  %3 = icmp eq i8* %2, null, !dbg !808
  br i1 %3, label %14, label %4, !dbg !810

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %struct.stack_t*, !dbg !807
  call void @llvm.dbg.value(metadata %struct.stack_t* %5, metadata !805, metadata !DIExpression()), !dbg !806
  %6 = bitcast i8* %2 to i32*, !dbg !811
  store i32 0, i32* %6, align 8, !dbg !812, !tbaa !775
  %7 = getelementptr inbounds i8, i8* %2, i64 4, !dbg !813
  %8 = bitcast i8* %7 to i32*, !dbg !813
  store i32 %0, i32* %8, align 4, !dbg !814, !tbaa !815
  %9 = zext i32 %0 to i64, !dbg !816
  %10 = shl nuw nsw i64 %9, 3, !dbg !817
  %11 = call i8* @malloc(i64 %10), !dbg !818
  %12 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !819
  %13 = bitcast i8* %12 to i8**, !dbg !820
  store i8* %11, i8** %13, align 8, !dbg !820, !tbaa !821
  br label %14, !dbg !822

14:                                               ; preds = %1, %4
  %15 = phi %struct.stack_t* [ %5, %4 ], [ null, %1 ], !dbg !806
  ret %struct.stack_t* %15, !dbg !823
}

; Function Attrs: nounwind uwtable
define dso_local void @_stack_resize(%struct.stack_t* nocapture %0, i32 %1) local_unnamed_addr #2 !dbg !824 {
  call void @llvm.dbg.value(metadata %struct.stack_t* %0, metadata !828, metadata !DIExpression()), !dbg !831
  call void @llvm.dbg.value(metadata i32 %1, metadata !829, metadata !DIExpression()), !dbg !831
  %3 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %0, i64 0, i32 2, !dbg !832
  %4 = bitcast i8*** %3 to i8**, !dbg !832
  %5 = load i8*, i8** %4, align 8, !dbg !832, !tbaa !821
  %6 = zext i32 %1 to i64, !dbg !833
  %7 = shl nuw nsw i64 %6, 3, !dbg !834
  %8 = call i8* @realloc(i8* %5, i64 %7), !dbg !835
  call void @llvm.dbg.value(metadata i8* %8, metadata !830, metadata !DIExpression()), !dbg !831
  %9 = icmp eq i8* %8, null, !dbg !836
  br i1 %9, label %12, label %10, !dbg !838

10:                                               ; preds = %2
  store i8* %8, i8** %4, align 8, !dbg !839, !tbaa !821
  %11 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %0, i64 0, i32 1, !dbg !841
  store i32 %1, i32* %11, align 4, !dbg !842, !tbaa !815
  br label %12, !dbg !843

12:                                               ; preds = %2, %10
  ret void, !dbg !844
}

; Function Attrs: nounwind
declare dso_local noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local void @stack_push(%struct.stack_t* nocapture %0, i8* %1) local_unnamed_addr #2 !dbg !845 {
  call void @llvm.dbg.value(metadata %struct.stack_t* %0, metadata !849, metadata !DIExpression()), !dbg !851
  call void @llvm.dbg.value(metadata i8* %1, metadata !850, metadata !DIExpression()), !dbg !851
  %3 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %0, i64 0, i32 0, !dbg !852
  %4 = load i32, i32* %3, align 8, !dbg !852, !tbaa !775
  %5 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %0, i64 0, i32 1, !dbg !854
  %6 = load i32, i32* %5, align 4, !dbg !854, !tbaa !815
  %7 = icmp eq i32 %4, %6, !dbg !855
  br i1 %7, label %8, label %10, !dbg !856

8:                                                ; preds = %2
  %9 = shl i32 %6, 1, !dbg !857
  call void @_stack_resize(%struct.stack_t* %0, i32 %9), !dbg !858
  br label %10, !dbg !858

10:                                               ; preds = %8, %2
  %11 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %0, i64 0, i32 2, !dbg !859
  %12 = load i8**, i8*** %11, align 8, !dbg !859, !tbaa !821
  %13 = load i32, i32* %3, align 8, !dbg !860, !tbaa !775
  %14 = zext i32 %13 to i64, !dbg !861
  %15 = getelementptr inbounds i8*, i8** %12, i64 %14, !dbg !861
  store i8* %1, i8** %15, align 8, !dbg !862, !tbaa !329
  %16 = add i32 %13, 1, !dbg !863
  store i32 %16, i32* %3, align 8, !dbg !863, !tbaa !775
  ret void, !dbg !864
}

; Function Attrs: nounwind uwtable
define dso_local i8* @stack_pop(%struct.stack_t* nocapture %0) local_unnamed_addr #2 !dbg !865 {
  call void @llvm.dbg.value(metadata %struct.stack_t* %0, metadata !869, metadata !DIExpression()), !dbg !870
  %2 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %0, i64 0, i32 0, !dbg !871
  %3 = load i32, i32* %2, align 8, !dbg !871, !tbaa !775
  %4 = icmp eq i32 %3, 0, !dbg !873
  br i1 %4, label %19, label %5, !dbg !874

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %0, i64 0, i32 1, !dbg !875
  %7 = load i32, i32* %6, align 4, !dbg !875, !tbaa !815
  %8 = lshr i32 %7, 1, !dbg !878
  %9 = icmp eq i32 %3, %8, !dbg !879
  br i1 %9, label %10, label %11, !dbg !880

10:                                               ; preds = %5
  call void @_stack_resize(%struct.stack_t* %0, i32 %8), !dbg !881
  br label %11, !dbg !881

11:                                               ; preds = %10, %5
  %12 = load i32, i32* %2, align 8, !dbg !882, !tbaa !775
  %13 = add i32 %12, -1, !dbg !882
  store i32 %13, i32* %2, align 8, !dbg !882, !tbaa !775
  %14 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %0, i64 0, i32 2, !dbg !883
  %15 = load i8**, i8*** %14, align 8, !dbg !883, !tbaa !821
  %16 = zext i32 %13 to i64, !dbg !884
  %17 = getelementptr inbounds i8*, i8** %15, i64 %16, !dbg !884
  %18 = load i8*, i8** %17, align 8, !dbg !884, !tbaa !329
  br label %19, !dbg !885

19:                                               ; preds = %1, %11
  %20 = phi i8* [ %18, %11 ], [ null, %1 ], !dbg !870
  ret i8* %20, !dbg !886
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i8* @stack_peek(%struct.stack_t* nocapture readonly %0) local_unnamed_addr #0 !dbg !887 {
  call void @llvm.dbg.value(metadata %struct.stack_t* %0, metadata !889, metadata !DIExpression()), !dbg !890
  %2 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %0, i64 0, i32 0, !dbg !891
  %3 = load i32, i32* %2, align 8, !dbg !891, !tbaa !775
  %4 = icmp eq i32 %3, 0, !dbg !893
  br i1 %4, label %12, label %5, !dbg !894

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %0, i64 0, i32 2, !dbg !895
  %7 = load i8**, i8*** %6, align 8, !dbg !895, !tbaa !821
  %8 = add i32 %3, -1, !dbg !896
  %9 = zext i32 %8 to i64, !dbg !897
  %10 = getelementptr inbounds i8*, i8** %7, i64 %9, !dbg !897
  %11 = load i8*, i8** %10, align 8, !dbg !897, !tbaa !329
  br label %12, !dbg !898

12:                                               ; preds = %1, %5
  %13 = phi i8* [ %11, %5 ], [ null, %1 ], !dbg !890
  ret i8* %13, !dbg !899
}

; Function Attrs: nounwind uwtable
define dso_local void @stack_destroy(%struct.stack_t* %0) local_unnamed_addr #2 !dbg !900 {
  call void @llvm.dbg.value(metadata %struct.stack_t* %0, metadata !904, metadata !DIExpression()), !dbg !905
  %2 = icmp eq %struct.stack_t* %0, null, !dbg !906
  br i1 %2, label %11, label %3, !dbg !908

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.stack_t, %struct.stack_t* %0, i64 0, i32 2, !dbg !909
  %5 = load i8**, i8*** %4, align 8, !dbg !909, !tbaa !821
  %6 = icmp eq i8** %5, null, !dbg !912
  br i1 %6, label %9, label %7, !dbg !913

7:                                                ; preds = %3
  %8 = bitcast i8** %5 to i8*, !dbg !914
  call void @free(i8* %8), !dbg !915
  br label %9, !dbg !915

9:                                                ; preds = %3, %7
  %10 = bitcast %struct.stack_t* %0 to i8*, !dbg !916
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %10, i8 0, i64 16, i1 false), !dbg !917
  br label %11, !dbg !916

11:                                               ; preds = %1, %9
  ret void, !dbg !918
}

; Function Attrs: nofree nounwind uwtable
define dso_local noalias %struct.dict** @dict_new() local_unnamed_addr #7 !dbg !919 {
  %1 = call noalias dereferenceable_or_null(2048) i8* @calloc(i64 8, i64 256) #15, !dbg !923
  %2 = bitcast i8* %1 to %struct.dict**, !dbg !923
  ret %struct.dict** %2, !dbg !924
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i32 @_hash(i8* readonly %0) local_unnamed_addr #0 !dbg !925 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !929, metadata !DIExpression()), !dbg !931
  call void @llvm.dbg.value(metadata i32 5419, metadata !930, metadata !DIExpression()), !dbg !931
  %2 = icmp eq i8* %0, null, !dbg !932
  br i1 %2, label %18, label %3, !dbg !934

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 5419, metadata !930, metadata !DIExpression()), !dbg !931
  call void @llvm.dbg.value(metadata i8* %0, metadata !929, metadata !DIExpression()), !dbg !931
  %4 = load i8, i8* %0, align 1, !dbg !935, !tbaa !237
  %5 = icmp eq i8 %4, 0, !dbg !937
  br i1 %5, label %18, label %6, !dbg !937

6:                                                ; preds = %3, %6
  %7 = phi i8 [ %14, %6 ], [ %4, %3 ]
  %8 = phi i32 [ %13, %6 ], [ 5419, %3 ]
  %9 = phi i8* [ %11, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !930, metadata !DIExpression()), !dbg !931
  call void @llvm.dbg.value(metadata i8* %9, metadata !929, metadata !DIExpression()), !dbg !931
  %10 = mul i32 %8, 37, !dbg !938
  %11 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !939
  call void @llvm.dbg.value(metadata i8* %11, metadata !929, metadata !DIExpression()), !dbg !931
  %12 = sext i8 %7 to i32, !dbg !940
  %13 = add i32 %10, %12, !dbg !941
  call void @llvm.dbg.value(metadata i32 %13, metadata !930, metadata !DIExpression()), !dbg !931
  %14 = load i8, i8* %11, align 1, !dbg !935, !tbaa !237
  %15 = icmp eq i8 %14, 0, !dbg !937
  br i1 %15, label %16, label %6, !dbg !937, !llvm.loop !942

16:                                               ; preds = %6
  %17 = and i32 %13, 255, !dbg !943
  br label %18, !dbg !943

18:                                               ; preds = %16, %3, %1
  %19 = phi i32 [ 43, %1 ], [ 43, %3 ], [ %17, %16 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !930, metadata !DIExpression()), !dbg !931
  ret i32 %19, !dbg !944
}

; Function Attrs: nounwind readonly uwtable
define dso_local i8* @dict_find(%struct.dict** nocapture readonly %0, i8* %1) local_unnamed_addr #10 !dbg !945 {
  call void @llvm.dbg.value(metadata %struct.dict** %0, metadata !949, metadata !DIExpression()), !dbg !952
  call void @llvm.dbg.value(metadata i8* %1, metadata !950, metadata !DIExpression()), !dbg !952
  %3 = call i32 @_hash(i8* %1), !dbg !953
  %4 = zext i32 %3 to i64, !dbg !954
  %5 = getelementptr inbounds %struct.dict*, %struct.dict** %0, i64 %4, !dbg !954
  call void @llvm.dbg.value(metadata %struct.dict* undef, metadata !951, metadata !DIExpression()), !dbg !952
  %6 = load %struct.dict*, %struct.dict** %5, align 8, !dbg !952, !tbaa !329
  call void @llvm.dbg.value(metadata %struct.dict* %6, metadata !951, metadata !DIExpression()), !dbg !952
  %7 = icmp eq %struct.dict* %6, null, !dbg !955
  br i1 %7, label %21, label %8, !dbg !955

8:                                                ; preds = %2, %17
  %9 = phi %struct.dict* [ %19, %17 ], [ %6, %2 ]
  %10 = getelementptr inbounds %struct.dict, %struct.dict* %9, i64 0, i32 0, !dbg !956
  %11 = load i8*, i8** %10, align 8, !dbg !956, !tbaa !959
  %12 = call i32 @strcmp(i8* nonnull dereferenceable(1) %11, i8* nonnull dereferenceable(1) %1) #16, !dbg !961
  %13 = icmp eq i32 %12, 0, !dbg !962
  br i1 %13, label %14, label %17, !dbg !963

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.dict, %struct.dict* %9, i64 0, i32 1, !dbg !964
  %16 = load i8*, i8** %15, align 8, !dbg !964, !tbaa !965
  br label %21, !dbg !966

17:                                               ; preds = %8
  %18 = getelementptr inbounds %struct.dict, %struct.dict* %9, i64 0, i32 2, !dbg !967
  call void @llvm.dbg.value(metadata %struct.dict* undef, metadata !951, metadata !DIExpression()), !dbg !952
  %19 = load %struct.dict*, %struct.dict** %18, align 8, !dbg !952, !tbaa !329
  call void @llvm.dbg.value(metadata %struct.dict* %19, metadata !951, metadata !DIExpression()), !dbg !952
  %20 = icmp eq %struct.dict* %19, null, !dbg !955
  br i1 %20, label %21, label %8, !dbg !955, !llvm.loop !968

21:                                               ; preds = %17, %2, %14
  %22 = phi i8* [ %16, %14 ], [ null, %2 ], [ null, %17 ], !dbg !952
  ret i8* %22, !dbg !970
}

; Function Attrs: nofree nounwind readonly
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind uwtable
define dso_local void @dict_insert(%struct.dict** nocapture %0, i8* %1, i8* %2) local_unnamed_addr #2 !dbg !971 {
  call void @llvm.dbg.value(metadata %struct.dict** %0, metadata !975, metadata !DIExpression()), !dbg !981
  call void @llvm.dbg.value(metadata i8* %1, metadata !976, metadata !DIExpression()), !dbg !981
  call void @llvm.dbg.value(metadata i8* %2, metadata !977, metadata !DIExpression()), !dbg !981
  %4 = call i8* @dict_find(%struct.dict** %0, i8* %1), !dbg !982
  call void @llvm.dbg.value(metadata i8* %4, metadata !979, metadata !DIExpression()), !dbg !981
  %5 = icmp eq i8* %4, null, !dbg !983
  br i1 %5, label %6, label %25, !dbg !985

6:                                                ; preds = %3
  %7 = call noalias dereferenceable_or_null(24) i8* @malloc(i64 24) #15, !dbg !986
  call void @llvm.dbg.value(metadata i8* %7, metadata !979, metadata !DIExpression()), !dbg !981
  %8 = icmp eq i8* %7, null, !dbg !988
  br i1 %8, label %25, label %9, !dbg !988

9:                                                ; preds = %6
  %10 = call noalias i8* @strdup(i8* %1) #15, !dbg !989
  %11 = bitcast i8* %7 to i8**, !dbg !990
  store i8* %10, i8** %11, align 8, !dbg !991, !tbaa !959
  %12 = icmp eq i8* %10, null, !dbg !992
  br i1 %12, label %24, label %13, !dbg !994

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !995
  %15 = bitcast i8* %14 to i8**, !dbg !995
  store i8* %2, i8** %15, align 8, !dbg !996, !tbaa !965
  %16 = call i32 @_hash(i8* %1), !dbg !997
  call void @llvm.dbg.value(metadata i32 %16, metadata !978, metadata !DIExpression()), !dbg !981
  %17 = zext i32 %16 to i64, !dbg !998
  %18 = getelementptr inbounds %struct.dict*, %struct.dict** %0, i64 %17, !dbg !998
  %19 = bitcast %struct.dict** %18 to i64*, !dbg !998
  %20 = load i64, i64* %19, align 8, !dbg !998, !tbaa !329
  %21 = getelementptr inbounds i8, i8* %7, i64 16, !dbg !999
  %22 = bitcast i8* %21 to i64*, !dbg !1000
  store i64 %20, i64* %22, align 8, !dbg !1000, !tbaa !1001
  %23 = bitcast %struct.dict** %18 to i8**, !dbg !1002
  store i8* %7, i8** %23, align 8, !dbg !1002, !tbaa !329
  br label %25, !dbg !1003

24:                                               ; preds = %9
  call void @llvm.dbg.label(metadata !980), !dbg !1004
  call void @free(i8* %7) #15, !dbg !1005
  br label %25, !dbg !1008

25:                                               ; preds = %6, %24, %3, %13
  ret void, !dbg !1009
}

; Function Attrs: nounwind uwtable
define dso_local i8* @dict_remove(%struct.dict** nocapture %0, i8* %1) local_unnamed_addr #2 !dbg !1010 {
  call void @llvm.dbg.value(metadata %struct.dict** %0, metadata !1012, metadata !DIExpression()), !dbg !1018
  call void @llvm.dbg.value(metadata i8* %1, metadata !1013, metadata !DIExpression()), !dbg !1018
  call void @llvm.dbg.value(metadata i8* null, metadata !1014, metadata !DIExpression()), !dbg !1018
  %3 = call i32 @_hash(i8* %1), !dbg !1019
  call void @llvm.dbg.value(metadata i32 %3, metadata !1015, metadata !DIExpression()), !dbg !1018
  %4 = zext i32 %3 to i64, !dbg !1020
  %5 = getelementptr inbounds %struct.dict*, %struct.dict** %0, i64 %4, !dbg !1020
  call void @llvm.dbg.value(metadata %struct.dict* undef, metadata !1016, metadata !DIExpression()), !dbg !1018
  call void @llvm.dbg.value(metadata %struct.dict* null, metadata !1017, metadata !DIExpression()), !dbg !1018
  %6 = load %struct.dict*, %struct.dict** %5, align 8, !dbg !1018, !tbaa !329
  call void @llvm.dbg.value(metadata %struct.dict* %6, metadata !1016, metadata !DIExpression()), !dbg !1018
  %7 = icmp eq %struct.dict* %6, null, !dbg !1021
  br i1 %7, label %38, label %8, !dbg !1021

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.dict* null, metadata !1017, metadata !DIExpression()), !dbg !1018
  %9 = getelementptr inbounds %struct.dict, %struct.dict* %6, i64 0, i32 0, !dbg !1022
  %10 = load i8*, i8** %9, align 8, !dbg !1022, !tbaa !959
  %11 = call i32 @strcmp(i8* nonnull dereferenceable(1) %10, i8* nonnull dereferenceable(1) %1) #16, !dbg !1025
  %12 = icmp eq i32 %11, 0, !dbg !1026
  br i1 %12, label %18, label %33, !dbg !1027

13:                                               ; preds = %33
  call void @llvm.dbg.value(metadata %struct.dict* %34, metadata !1017, metadata !DIExpression()), !dbg !1018
  %14 = getelementptr inbounds %struct.dict, %struct.dict* %36, i64 0, i32 0, !dbg !1022
  %15 = load i8*, i8** %14, align 8, !dbg !1022, !tbaa !959
  %16 = call i32 @strcmp(i8* nonnull dereferenceable(1) %15, i8* nonnull dereferenceable(1) %1) #16, !dbg !1025
  %17 = icmp eq i32 %16, 0, !dbg !1026
  br i1 %17, label %18, label %33, !dbg !1027, !llvm.loop !1028

18:                                               ; preds = %13, %8
  %19 = phi %struct.dict* [ %6, %8 ], [ %36, %13 ]
  %20 = phi %struct.dict* [ null, %8 ], [ %34, %13 ]
  call void @llvm.dbg.value(metadata %struct.dict* %20, metadata !1017, metadata !DIExpression()), !dbg !1018
  %21 = getelementptr inbounds %struct.dict, %struct.dict* %19, i64 0, i32 0, !dbg !1022
  %22 = icmp eq %struct.dict* %20, null, !dbg !1030
  %23 = getelementptr inbounds %struct.dict, %struct.dict* %19, i64 0, i32 2, !dbg !1033
  %24 = bitcast %struct.dict** %23 to i64*, !dbg !1033
  %25 = load i64, i64* %24, align 8, !dbg !1033, !tbaa !1001
  %26 = getelementptr inbounds %struct.dict, %struct.dict* %20, i64 0, i32 2, !dbg !1034
  %27 = select i1 %22, %struct.dict** %5, %struct.dict** %26, !dbg !1034
  %28 = bitcast %struct.dict** %27 to i64*, !dbg !1033
  store i64 %25, i64* %28, align 8, !dbg !1033, !tbaa !329
  %29 = getelementptr inbounds %struct.dict, %struct.dict* %19, i64 0, i32 1, !dbg !1035
  %30 = load i8*, i8** %29, align 8, !dbg !1035, !tbaa !965
  call void @llvm.dbg.value(metadata i8* %30, metadata !1014, metadata !DIExpression()), !dbg !1018
  %31 = load i8*, i8** %21, align 8, !dbg !1036, !tbaa !959
  call void @free(i8* %31) #15, !dbg !1037
  %32 = bitcast %struct.dict* %19 to i8*, !dbg !1038
  call void @free(i8* %32) #15, !dbg !1039
  br label %38, !dbg !1040

33:                                               ; preds = %8, %13
  %34 = phi %struct.dict* [ %36, %13 ], [ %6, %8 ]
  call void @llvm.dbg.value(metadata %struct.dict* %34, metadata !1017, metadata !DIExpression()), !dbg !1018
  %35 = getelementptr inbounds %struct.dict, %struct.dict* %34, i64 0, i32 2, !dbg !1041
  call void @llvm.dbg.value(metadata %struct.dict* undef, metadata !1016, metadata !DIExpression()), !dbg !1018
  %36 = load %struct.dict*, %struct.dict** %35, align 8, !dbg !1018, !tbaa !329
  call void @llvm.dbg.value(metadata %struct.dict* %36, metadata !1016, metadata !DIExpression()), !dbg !1018
  %37 = icmp eq %struct.dict* %36, null, !dbg !1021
  br i1 %37, label %38, label %13, !dbg !1021, !llvm.loop !1028

38:                                               ; preds = %33, %2, %18
  %39 = phi i8* [ %30, %18 ], [ null, %2 ], [ null, %33 ], !dbg !1018
  call void @llvm.dbg.value(metadata i8* %39, metadata !1014, metadata !DIExpression()), !dbg !1018
  ret i8* %39, !dbg !1042
}

; Function Attrs: nounwind uwtable
define dso_local i32 @read_until(i32 %0, i8* %1, i64 %2, i8 signext %3) local_unnamed_addr #2 !dbg !1043 {
  %5 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !1047, metadata !DIExpression()), !dbg !1057
  call void @llvm.dbg.value(metadata i8* %1, metadata !1048, metadata !DIExpression()), !dbg !1057
  call void @llvm.dbg.value(metadata i64 %2, metadata !1049, metadata !DIExpression()), !dbg !1057
  call void @llvm.dbg.value(metadata i8 %3, metadata !1050, metadata !DIExpression()), !dbg !1057
  call void @llvm.dbg.value(metadata i8* %1, metadata !1052, metadata !DIExpression()), !dbg !1057
  call void @llvm.dbg.value(metadata i64 0, metadata !1051, metadata !DIExpression()), !dbg !1057
  %6 = icmp eq i64 %2, 0, !dbg !1058
  br i1 %6, label %28, label %7, !dbg !1059

7:                                                ; preds = %4
  %8 = bitcast i64* %5 to i8*, !dbg !1060
  br label %9, !dbg !1059

9:                                                ; preds = %25, %7
  %10 = phi i8* [ %1, %7 ], [ %23, %25 ]
  %11 = phi i64 [ 0, %7 ], [ %26, %25 ]
  call void @llvm.dbg.value(metadata i8* %10, metadata !1052, metadata !DIExpression()), !dbg !1057
  call void @llvm.dbg.value(metadata i64 %11, metadata !1051, metadata !DIExpression()), !dbg !1057
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15, !dbg !1061
  call void @llvm.dbg.value(metadata i64* %5, metadata !1053, metadata !DIExpression(DW_OP_deref)), !dbg !1060
  %12 = call i32 @receive(i32 %0, i8* %10, i64 1, i64* nonnull %5) #15, !dbg !1062
  %13 = icmp ne i32 %12, 0, !dbg !1064
  %14 = load i64, i64* %5, align 8, !dbg !1065
  call void @llvm.dbg.value(metadata i64 %14, metadata !1053, metadata !DIExpression()), !dbg !1060
  %15 = icmp eq i64 %14, 0, !dbg !1066
  %16 = or i1 %13, %15, !dbg !1067
  br i1 %16, label %22, label %17, !dbg !1067

17:                                               ; preds = %9
  %18 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !1068
  call void @llvm.dbg.value(metadata i8* %18, metadata !1052, metadata !DIExpression()), !dbg !1057
  %19 = load i8, i8* %10, align 1, !dbg !1070, !tbaa !237
  %20 = icmp eq i8 %19, %3, !dbg !1071
  %21 = select i1 %20, i32 2, i32 0, !dbg !1072
  br label %22, !dbg !1072

22:                                               ; preds = %17, %9
  %23 = phi i8* [ %10, %9 ], [ %18, %17 ], !dbg !1057
  %24 = phi i32 [ 1, %9 ], [ %21, %17 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !1052, metadata !DIExpression()), !dbg !1057
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15, !dbg !1073
  switch i32 %24, label %35 [
    i32 0, label %25
    i32 2, label %28
  ]

25:                                               ; preds = %22
  %26 = add nuw i64 %11, 1, !dbg !1074
  call void @llvm.dbg.value(metadata i8* %23, metadata !1052, metadata !DIExpression()), !dbg !1057
  call void @llvm.dbg.value(metadata i64 %26, metadata !1051, metadata !DIExpression()), !dbg !1057
  %27 = icmp eq i64 %26, %2, !dbg !1058
  br i1 %27, label %28, label %9, !dbg !1059, !llvm.loop !1075

28:                                               ; preds = %22, %25, %4
  %29 = phi i8* [ %1, %4 ], [ %23, %25 ], [ %23, %22 ], !dbg !1077
  call void @llvm.dbg.value(metadata i8* %29, metadata !1052, metadata !DIExpression()), !dbg !1057
  %30 = getelementptr inbounds i8, i8* %29, i64 -1, !dbg !1078
  store i8 0, i8* %30, align 1, !dbg !1079, !tbaa !237
  %31 = ptrtoint i8* %29 to i64, !dbg !1080
  %32 = ptrtoint i8* %1 to i64, !dbg !1080
  %33 = sub i64 %31, %32, !dbg !1080
  %34 = trunc i64 %33 to i32, !dbg !1081
  br label %35, !dbg !1082

35:                                               ; preds = %22, %28
  %36 = phi i32 [ %34, %28 ], [ -1, %22 ], !dbg !1057
  ret i32 %36, !dbg !1083
}

declare !dbg !210 dso_local i32 @receive(i32, i8*, i64, i64*) local_unnamed_addr #11

; Function Attrs: nounwind uwtable
define dso_local i32 @read_n(i32 %0, i8* %1, i64 %2) local_unnamed_addr #2 !dbg !1084 {
  %4 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !1088, metadata !DIExpression()), !dbg !1097
  call void @llvm.dbg.value(metadata i8* %1, metadata !1089, metadata !DIExpression()), !dbg !1097
  call void @llvm.dbg.value(metadata i64 %2, metadata !1090, metadata !DIExpression()), !dbg !1097
  call void @llvm.dbg.value(metadata i8* %1, metadata !1092, metadata !DIExpression()), !dbg !1097
  call void @llvm.dbg.value(metadata i64 0, metadata !1091, metadata !DIExpression()), !dbg !1097
  %5 = icmp eq i64 %2, 0, !dbg !1098
  br i1 %5, label %23, label %6, !dbg !1099

6:                                                ; preds = %3
  %7 = bitcast i64* %4 to i8*, !dbg !1100
  br label %8, !dbg !1099

8:                                                ; preds = %8, %6
  %9 = phi i8* [ %1, %6 ], [ %17, %8 ]
  %10 = phi i64 [ 0, %6 ], [ %19, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !1092, metadata !DIExpression()), !dbg !1097
  call void @llvm.dbg.value(metadata i64 %10, metadata !1091, metadata !DIExpression()), !dbg !1097
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15, !dbg !1101
  call void @llvm.dbg.value(metadata i64* %4, metadata !1093, metadata !DIExpression(DW_OP_deref)), !dbg !1100
  %11 = call i32 @receive(i32 %0, i8* %9, i64 1, i64* nonnull %4) #15, !dbg !1102
  %12 = icmp ne i32 %11, 0, !dbg !1104
  %13 = load i64, i64* %4, align 8, !dbg !1105
  call void @llvm.dbg.value(metadata i64 %13, metadata !1093, metadata !DIExpression()), !dbg !1100
  %14 = icmp eq i64 %13, 0, !dbg !1106
  %15 = or i1 %12, %14, !dbg !1107
  %16 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !1107
  %17 = select i1 %15, i8* %9, i8* %16, !dbg !1107
  %18 = or i1 %12, %14, !dbg !1107
  call void @llvm.dbg.value(metadata i8* %17, metadata !1092, metadata !DIExpression()), !dbg !1097
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15, !dbg !1108
  %19 = add nuw i64 %10, 1, !dbg !1109
  call void @llvm.dbg.value(metadata i64 %19, metadata !1091, metadata !DIExpression()), !dbg !1097
  %20 = xor i1 %18, true
  %21 = icmp ult i64 %19, %2, !dbg !1098
  %22 = and i1 %21, %20
  call void @llvm.dbg.value(metadata i8* %17, metadata !1092, metadata !DIExpression()), !dbg !1097
  call void @llvm.dbg.value(metadata i64 %19, metadata !1091, metadata !DIExpression()), !dbg !1097
  br i1 %22, label %8, label %23, !llvm.loop !1110

23:                                               ; preds = %8, %3
  %24 = phi i8* [ %1, %3 ], [ %17, %8 ], !dbg !1112
  call void @llvm.dbg.value(metadata i8* %24, metadata !1092, metadata !DIExpression()), !dbg !1097
  %25 = ptrtoint i8* %24 to i64, !dbg !1113
  %26 = ptrtoint i8* %1 to i64, !dbg !1113
  %27 = sub i64 %25, %26, !dbg !1113
  %28 = trunc i64 %27 to i32, !dbg !1114
  ret i32 %28, !dbg !1115
}

; Function Attrs: nofree nounwind uwtable
define dso_local float @strtof(i8* %0, i8** %1) local_unnamed_addr #7 !dbg !1116 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8** %1, metadata !1122, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %0, metadata !1123, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i32 -1, metadata !1126, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i32 0, metadata !1127, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !1128, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double 1.000000e+00, metadata !1129, metadata !DIExpression()), !dbg !1131
  %3 = load i8, i8* %0, align 1, !dbg !1132, !tbaa !237
  %4 = icmp eq i8 %3, 0, !dbg !1135
  br i1 %4, label %20, label %5, !dbg !1135

5:                                                ; preds = %2, %11
  %6 = phi i8 [ %13, %11 ], [ %3, %2 ]
  %7 = phi i8* [ %12, %11 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !1121, metadata !DIExpression()), !dbg !1131
  %8 = sext i8 %6 to i32, !dbg !1132
  %9 = call i32 @isspace(i32 %8) #16, !dbg !1136
  %10 = icmp eq i32 %9, 0, !dbg !1135
  br i1 %10, label %15, label %11, !dbg !1137

11:                                               ; preds = %5
  %12 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !1138
  call void @llvm.dbg.value(metadata i8* %12, metadata !1121, metadata !DIExpression()), !dbg !1131
  %13 = load i8, i8* %12, align 1, !dbg !1132, !tbaa !237
  %14 = icmp eq i8 %13, 0, !dbg !1135
  br i1 %14, label %20, label %5, !dbg !1135, !llvm.loop !1139

15:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* %7, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %7, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %7, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %7, metadata !1121, metadata !DIExpression()), !dbg !1131
  switch i8 %6, label %20 [
    i8 45, label %16
    i8 43, label %16
  ], !dbg !1141

16:                                               ; preds = %15, %15
  %17 = icmp eq i8 %6, 45, !dbg !1143
  call void @llvm.dbg.value(metadata i32 undef, metadata !1126, metadata !DIExpression()), !dbg !1131
  %18 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !1146
  call void @llvm.dbg.value(metadata i8* %18, metadata !1121, metadata !DIExpression()), !dbg !1131
  %19 = select i1 %17, double -1.000000e+00, double 1.000000e+00, !dbg !1147
  br label %20, !dbg !1147

20:                                               ; preds = %11, %2, %15, %16
  %21 = phi i8* [ %18, %16 ], [ %7, %15 ], [ %0, %2 ], [ %12, %11 ]
  %22 = phi double [ %19, %16 ], [ 1.000000e+00, %15 ], [ 1.000000e+00, %2 ], [ 1.000000e+00, %11 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !1126, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %21, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %21, metadata !1130, metadata !DIExpression()), !dbg !1131
  br label %23, !dbg !1148

23:                                               ; preds = %45, %20
  %24 = phi i8* [ %21, %20 ], [ %49, %45 ], !dbg !1131
  %25 = phi i32 [ 0, %20 ], [ %46, %45 ], !dbg !1131
  %26 = phi double [ 0.000000e+00, %20 ], [ %47, %45 ], !dbg !1149
  %27 = phi double [ 1.000000e+00, %20 ], [ %48, %45 ], !dbg !1150
  call void @llvm.dbg.value(metadata double %27, metadata !1129, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double %26, metadata !1128, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i32 %25, metadata !1127, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %24, metadata !1121, metadata !DIExpression()), !dbg !1131
  %28 = load i8, i8* %24, align 1, !dbg !1151, !tbaa !237
  call void @llvm.dbg.value(metadata i8 %28, metadata !1124, metadata !DIExpression()), !dbg !1131
  %29 = sext i8 %28 to i32, !dbg !1153
  switch i8 %28, label %30 [
    i8 0, label %50
    i8 46, label %45
  ], !dbg !1155

30:                                               ; preds = %23
  %31 = add i8 %28, -48, !dbg !1156
  %32 = icmp ult i8 %31, 10, !dbg !1156
  br i1 %32, label %33, label %50, !dbg !1156

33:                                               ; preds = %30
  %34 = add nsw i32 %29, -48, !dbg !1159
  call void @llvm.dbg.value(metadata i32 %34, metadata !1125, metadata !DIExpression()), !dbg !1131
  %35 = icmp eq i32 %25, 0, !dbg !1161
  br i1 %35, label %41, label %36, !dbg !1163

36:                                               ; preds = %33
  %37 = fdiv double %27, 1.000000e+01, !dbg !1164
  call void @llvm.dbg.value(metadata double %37, metadata !1129, metadata !DIExpression()), !dbg !1131
  %38 = sitofp i32 %34 to double, !dbg !1166
  %39 = fmul double %37, %38, !dbg !1167
  %40 = fadd double %26, %39, !dbg !1168
  call void @llvm.dbg.value(metadata double %40, metadata !1128, metadata !DIExpression()), !dbg !1131
  br label %45, !dbg !1169

41:                                               ; preds = %33
  %42 = fmul double %26, 1.000000e+01, !dbg !1170
  %43 = sitofp i32 %34 to double, !dbg !1171
  %44 = fadd double %42, %43, !dbg !1172
  call void @llvm.dbg.value(metadata double %44, metadata !1128, metadata !DIExpression()), !dbg !1131
  br label %45

45:                                               ; preds = %23, %36, %41
  %46 = phi i32 [ %25, %36 ], [ 0, %41 ], [ 1, %23 ], !dbg !1131
  %47 = phi double [ %40, %36 ], [ %44, %41 ], [ %26, %23 ], !dbg !1131
  %48 = phi double [ %37, %36 ], [ %27, %41 ], [ %27, %23 ], !dbg !1131
  call void @llvm.dbg.value(metadata double %48, metadata !1129, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double %47, metadata !1128, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i32 %46, metadata !1127, metadata !DIExpression()), !dbg !1131
  %49 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !1173
  call void @llvm.dbg.value(metadata i8* %49, metadata !1121, metadata !DIExpression()), !dbg !1131
  br label %23, !dbg !1148, !llvm.loop !1174

50:                                               ; preds = %23, %30
  call void @llvm.dbg.value(metadata i8* %24, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %24, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double %26, metadata !1128, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double %26, metadata !1128, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %24, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %24, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double %26, metadata !1128, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double %26, metadata !1128, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %24, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %24, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double %26, metadata !1128, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double %26, metadata !1128, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %24, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata i8* %24, metadata !1121, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double %26, metadata !1128, metadata !DIExpression()), !dbg !1131
  call void @llvm.dbg.value(metadata double %26, metadata !1128, metadata !DIExpression()), !dbg !1131
  %51 = icmp eq i8* %21, %24, !dbg !1176
  %52 = icmp ne i8** %1, null, !dbg !1131
  br i1 %51, label %53, label %55, !dbg !1178

53:                                               ; preds = %50
  br i1 %52, label %54, label %61, !dbg !1179

54:                                               ; preds = %53
  store i8* %0, i8** %1, align 8, !dbg !1181, !tbaa !329
  br label %61, !dbg !1183

55:                                               ; preds = %50
  br i1 %52, label %56, label %57, !dbg !1184

56:                                               ; preds = %55
  store i8* %24, i8** %1, align 8, !dbg !1185, !tbaa !329
  br label %57, !dbg !1187

57:                                               ; preds = %56, %55
  %58 = fadd double %26, 1.000000e-03, !dbg !1188
  %59 = fmul double %22, %58, !dbg !1189
  %60 = fptrunc double %59 to float, !dbg !1190
  br label %61, !dbg !1191

61:                                               ; preds = %53, %54, %57
  %62 = phi float [ %60, %57 ], [ 0.000000e+00, %54 ], [ 0.000000e+00, %53 ], !dbg !1131
  ret float %62, !dbg !1192
}

; Function Attrs: nounwind readonly
declare dso_local i32 @isspace(i32) local_unnamed_addr #12

; Function Attrs: nounwind uwtable
define dso_local void @print_menu() local_unnamed_addr #2 !dbg !1193 {
  %1 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.14, i64 0, i64 0)) #15, !dbg !1196
  %2 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.15, i64 0, i64 0)) #15, !dbg !1197
  %3 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.16, i64 0, i64 0)) #15, !dbg !1198
  %4 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.17, i64 0, i64 0)) #15, !dbg !1199
  %5 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.18, i64 0, i64 0)) #15, !dbg !1200
  %6 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #15, !dbg !1201
  ret void, !dbg !1202
}

declare !dbg !14 dso_local i32 @fdprintf(i32, i8*, ...) local_unnamed_addr #11

; Function Attrs: nounwind uwtable
define dso_local void @define_vars(%struct.dict** %0) local_unnamed_addr #2 !dbg !1203 {
  %2 = alloca [4096 x i8], align 16
  %3 = alloca [4096 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.dict** %0, metadata !1207, metadata !DIExpression()), !dbg !1219
  %4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i64 0, !dbg !1220
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %4) #15, !dbg !1220
  call void @llvm.dbg.declare(metadata [4096 x i8]* %2, metadata !1209, metadata !DIExpression()), !dbg !1221
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0, !dbg !1222
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %5) #15, !dbg !1222
  call void @llvm.dbg.declare(metadata [4096 x i8]* %3, metadata !1213, metadata !DIExpression()), !dbg !1223
  %6 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0)) #15, !dbg !1224
  %7 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0)) #15, !dbg !1225
  %8 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)) #15, !dbg !1226
  %9 = call i32 @read_until(i32 0, i8* nonnull %4, i64 4096, i8 signext 10) #15, !dbg !1227
  %10 = icmp slt i32 %9, 0, !dbg !1229
  %11 = load i8, i8* %4, align 16, !dbg !1230
  %12 = icmp eq i8 %11, 0, !dbg !1232
  %13 = or i1 %10, %12, !dbg !1233
  br i1 %13, label %81, label %14, !dbg !1233

14:                                               ; preds = %1, %50
  %15 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0)) #15, !dbg !1234
  %16 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)) #15, !dbg !1235
  %17 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #15, !dbg !1236
  %18 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13.19, i64 0, i64 0)) #15, !dbg !1237
  %19 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0)) #15, !dbg !1238
  %20 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #15, !dbg !1239
  %21 = call i32 @read_until(i32 0, i8* nonnull %5, i64 4096, i8 signext 10) #15, !dbg !1240
  %22 = icmp slt i32 %21, 0, !dbg !1242
  br i1 %22, label %81, label %23, !dbg !1243

23:                                               ; preds = %14
  %24 = call i64 @strtoul(i8* nocapture nonnull %5, i8** null, i32 10), !dbg !1244
  %25 = add i64 %24, -1, !dbg !1245
  %26 = icmp ult i64 %25, 3, !dbg !1245
  %27 = trunc i64 %25 to i32, !dbg !1245
  %28 = add i32 %27, 1, !dbg !1245
  %29 = select i1 %26, i32 %28, i32 0, !dbg !1245
  call void @llvm.dbg.value(metadata i32 %29, metadata !1208, metadata !DIExpression()), !dbg !1219
  %30 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0)) #15, !dbg !1246
  %31 = call i32 @read_until(i32 0, i8* nonnull %5, i64 4096, i8 signext 10) #15, !dbg !1247
  %32 = icmp slt i32 %31, 0, !dbg !1249
  br i1 %32, label %81, label %33, !dbg !1250

33:                                               ; preds = %23
  %34 = load i8, i8* %5, align 16, !dbg !1251, !tbaa !237
  %35 = icmp eq i8 %34, 0, !dbg !1252
  br i1 %35, label %36, label %57, !dbg !1253

36:                                               ; preds = %33
  %37 = call i8* @dict_remove(%struct.dict** %0, i8* nonnull %4) #15, !dbg !1254
  call void @llvm.dbg.value(metadata i8* %37, metadata !1214, metadata !DIExpression()), !dbg !1255
  %38 = icmp eq i8* %37, null, !dbg !1256
  br i1 %38, label %50, label %39, !dbg !1258

39:                                               ; preds = %36
  %40 = bitcast i8* %37 to i32*, !dbg !1259
  %41 = load i32, i32* %40, align 8, !dbg !1259, !tbaa !364
  %42 = icmp eq i32 %41, 0, !dbg !1262
  br i1 %42, label %43, label %49, !dbg !1263

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %37, i64 8, !dbg !1264
  %45 = bitcast i8* %44 to i8**, !dbg !1265
  %46 = load i8*, i8** %45, align 8, !dbg !1265, !tbaa !237
  %47 = icmp eq i8* %46, null, !dbg !1266
  br i1 %47, label %49, label %48, !dbg !1267

48:                                               ; preds = %43
  call void @free(i8* %46), !dbg !1268
  br label %49, !dbg !1268

49:                                               ; preds = %43, %48, %39
  call void @free(i8* %37), !dbg !1269
  br label %50, !dbg !1270

50:                                               ; preds = %80, %57, %49, %36
  %51 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)) #15, !dbg !1226
  %52 = call i32 @read_until(i32 0, i8* nonnull %4, i64 4096, i8 signext 10) #15, !dbg !1227
  %53 = icmp slt i32 %52, 0, !dbg !1229
  %54 = load i8, i8* %4, align 16, !dbg !1230
  %55 = icmp eq i8 %54, 0, !dbg !1232
  %56 = or i1 %53, %55, !dbg !1233
  br i1 %56, label %81, label %14, !dbg !1233, !llvm.loop !1271

57:                                               ; preds = %33
  %58 = call dereferenceable_or_null(16) i8* @malloc(i64 16), !dbg !1274
  call void @llvm.dbg.value(metadata i8* %58, metadata !1218, metadata !DIExpression()), !dbg !1275
  %59 = icmp eq i8* %58, null, !dbg !1276
  br i1 %59, label %50, label %60, !dbg !1278

60:                                               ; preds = %57
  %61 = bitcast i8* %58 to i32*, !dbg !1279
  store i32 %29, i32* %61, align 8, !dbg !1281, !tbaa !364
  switch i32 %29, label %79 [
    i32 0, label %62
    i32 1, label %66
    i32 2, label %71
    i32 3, label %75
  ], !dbg !1282

62:                                               ; preds = %60
  %63 = call i8* @strdup(i8* nonnull %5), !dbg !1283
  %64 = getelementptr inbounds i8, i8* %58, i64 8, !dbg !1285
  %65 = bitcast i8* %64 to i8**, !dbg !1286
  store i8* %63, i8** %65, align 8, !dbg !1287, !tbaa !237
  br label %80, !dbg !1288

66:                                               ; preds = %60
  %67 = call i64 @strtoul(i8* nocapture nonnull %5, i8** null, i32 10), !dbg !1289
  %68 = trunc i64 %67 to i32, !dbg !1289
  %69 = getelementptr inbounds i8, i8* %58, i64 8, !dbg !1290
  %70 = bitcast i8* %69 to i32*, !dbg !1291
  store i32 %68, i32* %70, align 8, !dbg !1292, !tbaa !237
  br label %80, !dbg !1293

71:                                               ; preds = %60
  %72 = call float @strtof(i8* nocapture nonnull %5, i8** null), !dbg !1294
  %73 = getelementptr inbounds i8, i8* %58, i64 8, !dbg !1295
  %74 = bitcast i8* %73 to float*, !dbg !1296
  store float %72, float* %74, align 8, !dbg !1297, !tbaa !237
  br label %80, !dbg !1298

75:                                               ; preds = %60
  %76 = call i32 @strcmp(i8* nonnull %5, i8* nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)), !dbg !1299
  %77 = trunc i32 %76 to i8, !dbg !1299
  %78 = getelementptr inbounds i8, i8* %58, i64 8, !dbg !1300
  store i8 %77, i8* %78, align 8, !dbg !1301, !tbaa !237
  br label %80, !dbg !1302

79:                                               ; preds = %60
  unreachable

80:                                               ; preds = %75, %71, %66, %62
  call void @dict_insert(%struct.dict** %0, i8* nonnull %4, i8* nonnull %58) #15, !dbg !1303
  br label %50, !dbg !1304

81:                                               ; preds = %50, %14, %23, %1
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %5) #15, !dbg !1305
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %4) #15, !dbg !1305
  ret void, !dbg !1305
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nofree nounwind
declare dso_local i64 @strtoul(i8* readonly, i8** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local void @view_vars(%struct.dict** nocapture readonly %0) local_unnamed_addr #2 !dbg !1306 {
  call void @llvm.dbg.value(metadata %struct.dict** %0, metadata !1308, metadata !DIExpression()), !dbg !1318
  call void @llvm.dbg.value(metadata i32 0, metadata !1310, metadata !DIExpression()), !dbg !1318
  %2 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0)) #15, !dbg !1319
  call void @llvm.dbg.value(metadata i32 0, metadata !1309, metadata !DIExpression()), !dbg !1318
  call void @llvm.dbg.value(metadata i32 0, metadata !1310, metadata !DIExpression()), !dbg !1318
  br label %3, !dbg !1320

3:                                                ; preds = %32, %1
  %4 = phi i64 [ 0, %1 ], [ %34, %32 ]
  %5 = phi i32 [ 0, %1 ], [ %33, %32 ]
  call void @llvm.dbg.value(metadata i64 %4, metadata !1309, metadata !DIExpression()), !dbg !1318
  call void @llvm.dbg.value(metadata i32 %5, metadata !1310, metadata !DIExpression()), !dbg !1318
  %6 = getelementptr inbounds %struct.dict*, %struct.dict** %0, i64 %4, !dbg !1321
  call void @llvm.dbg.value(metadata %struct.dict* undef, metadata !1311, metadata !DIExpression()), !dbg !1322
  %7 = load %struct.dict*, %struct.dict** %6, align 8, !dbg !1322, !tbaa !329
  call void @llvm.dbg.value(metadata i32 %5, metadata !1310, metadata !DIExpression()), !dbg !1318
  call void @llvm.dbg.value(metadata %struct.dict* %7, metadata !1311, metadata !DIExpression()), !dbg !1322
  %8 = icmp eq %struct.dict* %7, null, !dbg !1323
  br i1 %8, label %32, label %9, !dbg !1323

9:                                                ; preds = %3, %27
  %10 = phi %struct.dict* [ %30, %27 ], [ %7, %3 ]
  %11 = phi i32 [ %28, %27 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !1310, metadata !DIExpression()), !dbg !1318
  %12 = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 1, !dbg !1324
  %13 = bitcast i8** %12 to %struct.sad_var_t**, !dbg !1324
  %14 = load %struct.sad_var_t*, %struct.sad_var_t** %13, align 8, !dbg !1324, !tbaa !965
  call void @llvm.dbg.value(metadata %struct.sad_var_t* %14, metadata !1315, metadata !DIExpression()), !dbg !1325
  %15 = call i8* @sadface_var2str(%struct.sad_var_t* %14) #15, !dbg !1326
  call void @llvm.dbg.value(metadata i8* %15, metadata !1317, metadata !DIExpression()), !dbg !1325
  %16 = icmp eq i8* %15, null, !dbg !1327
  br i1 %16, label %27, label %17, !dbg !1329

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 0, !dbg !1330
  %19 = load i8*, i8** %18, align 8, !dbg !1330, !tbaa !959
  %20 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i8* %19, i8* nonnull %15) #15, !dbg !1330
  %21 = getelementptr inbounds %struct.sad_var_t, %struct.sad_var_t* %14, i64 0, i32 0, !dbg !1332
  %22 = load i32, i32* %21, align 8, !dbg !1332, !tbaa !364
  %23 = icmp eq i32 %22, 0, !dbg !1334
  br i1 %23, label %25, label %24, !dbg !1335

24:                                               ; preds = %17
  call void @free(i8* %15), !dbg !1336
  br label %25, !dbg !1336

25:                                               ; preds = %17, %24
  %26 = add nsw i32 %11, 1, !dbg !1337
  call void @llvm.dbg.value(metadata i32 %26, metadata !1310, metadata !DIExpression()), !dbg !1318
  br label %27, !dbg !1338

27:                                               ; preds = %9, %25
  %28 = phi i32 [ %26, %25 ], [ %11, %9 ], !dbg !1318
  call void @llvm.dbg.value(metadata i32 %28, metadata !1310, metadata !DIExpression()), !dbg !1318
  %29 = getelementptr inbounds %struct.dict, %struct.dict* %10, i64 0, i32 2, !dbg !1339
  call void @llvm.dbg.value(metadata %struct.dict* undef, metadata !1311, metadata !DIExpression()), !dbg !1322
  %30 = load %struct.dict*, %struct.dict** %29, align 8, !dbg !1322, !tbaa !329
  call void @llvm.dbg.value(metadata %struct.dict* %30, metadata !1311, metadata !DIExpression()), !dbg !1322
  %31 = icmp eq %struct.dict* %30, null, !dbg !1323
  br i1 %31, label %32, label %9, !dbg !1323, !llvm.loop !1340

32:                                               ; preds = %27, %3
  %33 = phi i32 [ %5, %3 ], [ %28, %27 ], !dbg !1318
  call void @llvm.dbg.value(metadata i32 %33, metadata !1310, metadata !DIExpression()), !dbg !1318
  %34 = add nuw nsw i64 %4, 1, !dbg !1342
  call void @llvm.dbg.value(metadata i64 %34, metadata !1309, metadata !DIExpression()), !dbg !1318
  %35 = icmp eq i64 %34, 256, !dbg !1343
  br i1 %35, label %36, label %3, !dbg !1320, !llvm.loop !1344

36:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %33, metadata !1310, metadata !DIExpression()), !dbg !1318
  call void @llvm.dbg.value(metadata i32 %33, metadata !1310, metadata !DIExpression()), !dbg !1318
  call void @llvm.dbg.value(metadata i32 %33, metadata !1310, metadata !DIExpression()), !dbg !1318
  call void @llvm.dbg.value(metadata i32 %33, metadata !1310, metadata !DIExpression()), !dbg !1318
  %37 = icmp eq i32 %33, 0, !dbg !1346
  br i1 %37, label %40, label %38, !dbg !1348

38:                                               ; preds = %36
  %39 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i32 %33) #15, !dbg !1349
  br label %42, !dbg !1349

40:                                               ; preds = %36
  %41 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0)) #15, !dbg !1350
  br label %42

42:                                               ; preds = %40, %38
  ret void, !dbg !1351
}

; Function Attrs: nounwind uwtable
define dso_local void @submit_text(i8* %0, i64 %1) local_unnamed_addr #2 !dbg !1352 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1356, metadata !DIExpression()), !dbg !1358
  call void @llvm.dbg.value(metadata i64 %1, metadata !1357, metadata !DIExpression()), !dbg !1358
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %1, i1 false), !dbg !1359
  %3 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i64 0, i64 0)) #15, !dbg !1360
  %4 = call i32 @read_until(i32 0, i8* %0, i64 %1, i8 signext 0) #15, !dbg !1361
  %5 = icmp slt i32 %4, 0, !dbg !1363
  br i1 %5, label %6, label %8, !dbg !1364

6:                                                ; preds = %2
  %7 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #15, !dbg !1365
  br label %8, !dbg !1365

8:                                                ; preds = %6, %2
  ret void, !dbg !1366
}

; Function Attrs: nounwind uwtable
define dso_local void @render_text(i8* %0, %struct.dict** %1) local_unnamed_addr #2 !dbg !1367 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.sadface_ctx_t*, align 8
  call void @llvm.dbg.value(metadata i8* %0, metadata !1371, metadata !DIExpression()), !dbg !1378
  call void @llvm.dbg.value(metadata %struct.dict** %1, metadata !1372, metadata !DIExpression()), !dbg !1378
  %5 = bitcast i64* %3 to i8*, !dbg !1379
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15, !dbg !1379
  %6 = bitcast %struct.sadface_ctx_t** %4 to i8*, !dbg !1380
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15, !dbg !1380
  call void @llvm.dbg.value(metadata %struct.sadface_ctx_t* null, metadata !1375, metadata !DIExpression()), !dbg !1378
  store %struct.sadface_ctx_t* null, %struct.sadface_ctx_t** %4, align 8, !dbg !1381, !tbaa !329
  call void @llvm.dbg.value(metadata %struct.sadface_ctx_t** %4, metadata !1375, metadata !DIExpression(DW_OP_deref)), !dbg !1378
  %7 = call i32 @sadface_init(%struct.sadface_ctx_t** nonnull %4, %struct.faces_t* null, i8* %0, %struct.dict** %1) #15, !dbg !1382
  %8 = icmp slt i32 %7, 0, !dbg !1384
  br i1 %8, label %9, label %11, !dbg !1385

9:                                                ; preds = %2
  %10 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #15, !dbg !1386
  br label %25, !dbg !1388

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i64 4096, metadata !1374, metadata !DIExpression()), !dbg !1378
  store i64 4096, i64* %3, align 8, !dbg !1389, !tbaa !428
  %12 = call dereferenceable_or_null(4096) i8* @calloc(i64 1, i64 4096), !dbg !1390
  call void @llvm.dbg.value(metadata i8* %12, metadata !1373, metadata !DIExpression()), !dbg !1378
  %13 = icmp eq i8* %12, null, !dbg !1391
  br i1 %13, label %18, label %14, !dbg !1393

14:                                               ; preds = %11
  %15 = load %struct.sadface_ctx_t*, %struct.sadface_ctx_t** %4, align 8, !dbg !1394, !tbaa !329
  call void @llvm.dbg.value(metadata %struct.sadface_ctx_t* %15, metadata !1375, metadata !DIExpression()), !dbg !1378
  call void @llvm.dbg.value(metadata i64* %3, metadata !1374, metadata !DIExpression(DW_OP_deref)), !dbg !1378
  %16 = call i32 @sadface_render(%struct.sadface_ctx_t* %15, i8* nonnull %12, i64* nonnull %3) #15, !dbg !1395
  %17 = icmp slt i32 %16, 0, !dbg !1396
  br i1 %17, label %18, label %20, !dbg !1397

18:                                               ; preds = %14, %11
  %19 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #15, !dbg !1398
  br label %25, !dbg !1398

20:                                               ; preds = %14
  %21 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0)) #15, !dbg !1399
  %22 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0), i8* nonnull %12) #15, !dbg !1401
  %23 = load i64, i64* %3, align 8, !dbg !1402, !tbaa !428
  call void @llvm.dbg.value(metadata i64 %23, metadata !1374, metadata !DIExpression()), !dbg !1378
  %24 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i64 %23) #15, !dbg !1402
  br label %25

25:                                               ; preds = %18, %20, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15, !dbg !1403
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15, !dbg !1403
  ret void, !dbg !1403
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #2 !dbg !1404 {
  %1 = alloca [4096 x i8], align 16
  %2 = alloca [4096 x i8], align 16
  %3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %1, i64 0, i64 0, !dbg !1413
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %3) #15, !dbg !1413
  call void @llvm.dbg.declare(metadata [4096 x i8]* %1, metadata !1409, metadata !DIExpression()), !dbg !1414
  %4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i64 0, !dbg !1413
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %4) #15, !dbg !1413
  call void @llvm.dbg.declare(metadata [4096 x i8]* %2, metadata !1410, metadata !DIExpression()), !dbg !1415
  %5 = call %struct.dict** (...) bitcast (%struct.dict** ()* @dict_new to %struct.dict** (...)*)() #15, !dbg !1416
  call void @llvm.dbg.value(metadata %struct.dict** %5, metadata !1411, metadata !DIExpression()), !dbg !1417
  %6 = load i8*, i8** @banner, align 8, !dbg !1418, !tbaa !329
  %7 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i8* %6) #15, !dbg !1418
  call void @print_menu(), !dbg !1419
  %8 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0)) #15, !dbg !1421
  %9 = call i32 @read_until(i32 0, i8* nonnull %3, i64 4096, i8 signext 10) #15, !dbg !1422
  %10 = icmp slt i32 %9, 0, !dbg !1424
  br i1 %10, label %26, label %11, !dbg !1425

11:                                               ; preds = %0, %21
  %12 = call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10), !dbg !1426
  switch i64 %12, label %19 [
    i64 1, label %13
    i64 2, label %14
    i64 3, label %15
    i64 4, label %16
    i64 5, label %17
  ], !dbg !1427

13:                                               ; preds = %11
  call void @define_vars(%struct.dict** %5), !dbg !1428
  br label %21, !dbg !1430

14:                                               ; preds = %11
  call void @view_vars(%struct.dict** %5), !dbg !1431
  br label %21, !dbg !1432

15:                                               ; preds = %11
  call void @submit_text(i8* nonnull %4, i64 4096), !dbg !1433
  br label %21, !dbg !1434

16:                                               ; preds = %11
  call void @render_text(i8* nonnull %4, %struct.dict** %5), !dbg !1435
  br label %21, !dbg !1436

17:                                               ; preds = %11
  %18 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0)) #15, !dbg !1437
  call fastcc void @exit(), !dbg !1438
  unreachable

19:                                               ; preds = %11
  %20 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i64 0, i64 0)) #15, !dbg !1439
  br label %21, !dbg !1440

21:                                               ; preds = %19, %16, %15, %14, %13
  %22 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #15, !dbg !1441
  call void @print_menu(), !dbg !1419
  %23 = call i32 (i32, i8*, ...) @fdprintf(i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0)) #15, !dbg !1421
  %24 = call i32 @read_until(i32 0, i8* nonnull %3, i64 4096, i8 signext 10) #15, !dbg !1422
  %25 = icmp slt i32 %24, 0, !dbg !1424
  br i1 %25, label %26, label %11, !dbg !1425, !llvm.loop !1442

26:                                               ; preds = %21, %0
  call void @llvm.dbg.label(metadata !1412), !dbg !1445
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %4) #15, !dbg !1446
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %3) #15, !dbg !1446
  ret i32 -1, !dbg !1447
}

; Function Attrs: nofree nounwind
declare dso_local i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #3

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @exit() unnamed_addr #13 !dbg !1448 {
  call void @llvm.dbg.value(metadata i32 0, metadata !1452, metadata !DIExpression()), !dbg !1453
  call void @_terminate(i32 0) #17, !dbg !1454
  unreachable, !dbg !1454
}

; Function Attrs: noreturn
declare !dbg !96 dso_local void @_terminate(i32) local_unnamed_addr #14

attributes #0 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { noreturn nounwind }

!llvm.dbg.cu = !{!102, !191, !194, !207, !213, !2}
!llvm.ident = !{!217, !217, !217, !217, !217, !217}
!llvm.module.flags = !{!218, !219, !220}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_context", scope: !2, file: !3, line: 35, type: !85, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !13, globals: !99, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "main.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 29, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./sadface.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "SAD_VAR_STR", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "SAD_VAR_INT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "SAD_VAR_FLOAT", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "SAD_VAR_BOOL", value: 3, isUnsigned: true)
!13 = !{!14, !23, !29, !44, !56, !59, !62, !66, !48, !89, !93, !96}
!14 = !DISubprogram(name: "fdprintf", scope: !15, file: !15, line: 11, type: !16, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!15 = !DIFile(filename: "./stdlib.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!16 = !DISubroutineType(types: !17)
!17 = !{!18, !18, !19, null}
!18 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!20 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!21 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!22 = !{}
!23 = !DISubprogram(name: "read_until", scope: !24, file: !24, line: 29, type: !25, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!24 = !DIFile(filename: "./readuntil.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!25 = !DISubroutineType(types: !26)
!26 = !{!18, !18, !27, !28, !21}
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!28 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "sad_var_t", file: !6, line: 44, baseType: !31)
!31 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 36, size: 128, elements: !32)
!32 = !{!33, !35}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !31, file: !6, line: 37, baseType: !34, size: 32)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "sad_var_type_t", file: !6, line: 34, baseType: !5)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !31, file: !6, line: 43, baseType: !36, size: 64, offset: 64)
!36 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !31, file: !6, line: 38, size: 64, elements: !37)
!37 = !{!38, !39, !40, !42}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !36, file: !6, line: 39, baseType: !27, size: 64)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !36, file: !6, line: 40, baseType: !18, size: 32)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !36, file: !6, line: 41, baseType: !41, size: 32)
!41 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !36, file: !6, line: 42, baseType: !43, size: 8)
!43 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!44 = !DISubprogram(name: "dict_remove", scope: !45, file: !45, line: 38, type: !46, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!45 = !DIFile(filename: "./dict.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!46 = !DISubroutineType(types: !47)
!47 = !{!48, !49, !19}
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 64)
!51 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dict", file: !45, line: 29, size: 192, elements: !52)
!52 = !{!53, !54, !55}
!53 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !51, file: !45, line: 30, baseType: !27, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !51, file: !45, line: 31, baseType: !48, size: 64, offset: 64)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !51, file: !45, line: 32, baseType: !50, size: 64, offset: 128)
!56 = !DISubprogram(name: "free", scope: !15, file: !15, line: 21, type: !57, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!57 = !DISubroutineType(types: !58)
!58 = !{null, !48}
!59 = !DISubprogram(name: "dict_insert", scope: !45, file: !45, line: 37, type: !60, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!60 = !DISubroutineType(types: !61)
!61 = !{null, !49, !19, !48}
!62 = !DISubprogram(name: "sadface_var2str", scope: !6, file: !6, line: 77, type: !63, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!63 = !DISubroutineType(types: !64)
!64 = !{!27, !65}
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64)
!66 = !DISubprogram(name: "sadface_init", scope: !6, file: !6, line: 78, type: !67, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!67 = !DISubroutineType(types: !68)
!68 = !{!18, !69, !88, !27, !49}
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 51, size: 384, elements: !72)
!72 = !{!73, !79, !80, !83, !84}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "faces", scope: !71, file: !6, line: 52, baseType: !74, size: 128)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "faces_t", file: !6, line: 49, baseType: !75)
!75 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 46, size: 128, elements: !76)
!76 = !{!77, !78}
!77 = !DIDerivedType(tag: DW_TAG_member, name: "open_face", scope: !75, file: !6, line: 47, baseType: !19, size: 64)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "close_face", scope: !75, file: !6, line: 48, baseType: !19, size: 64, offset: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "content", scope: !71, file: !6, line: 53, baseType: !27, size: 64, offset: 128)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "content_len", scope: !71, file: !6, line: 54, baseType: !81, size: 64, offset: 192)
!81 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !82, line: 10, baseType: !28)
!82 = !DIFile(filename: "./libcgc.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!83 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !71, file: !6, line: 55, baseType: !81, size: 64, offset: 256)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !71, file: !6, line: 56, baseType: !85, size: 64, offset: 320)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict_t", file: !45, line: 33, baseType: !51)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !75, size: 64)
!89 = !DISubprogram(name: "sadface_render", scope: !6, file: !6, line: 79, type: !90, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!90 = !DISubroutineType(types: !91)
!91 = !{!18, !70, !27, !92}
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!93 = !DISubprogram(name: "dict_new", scope: !45, file: !45, line: 35, type: !94, spFlags: DISPFlagOptimized, retainedNodes: !22)
!94 = !DISubroutineType(types: !95)
!95 = !{!49, null}
!96 = !DISubprogram(name: "_terminate", scope: !82, file: !82, line: 50, type: !97, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized, retainedNodes: !22)
!97 = !DISubroutineType(types: !98)
!98 = !{null, !7}
!99 = !{!0, !100}
!100 = !DIGlobalVariableExpression(var: !101, expr: !DIExpression())
!101 = distinct !DIGlobalVariable(name: "banner", scope: !2, file: !3, line: 37, type: !19, isLocal: false, isDefinition: true)
!102 = distinct !DICompileUnit(language: DW_LANG_C99, file: !103, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !104, retainedTypes: !111, splitDebugInlining: false, nameTableKind: None)
!103 = !DIFile(filename: "sadface.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!104 = !{!5, !105}
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 59, baseType: !7, size: 32, elements: !106)
!106 = !{!107, !108, !109, !110}
!107 = !DIEnumerator(name: "SAD_NODE_ROOT", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "SAD_NODE_NORMAL", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "SAD_NODE_VAR", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "SAD_NODE_SECTION", value: 3, isUnsigned: true)
!111 = !{!112, !48, !56, !18, !41, !135, !146, !173, !176, !179, !160, !180, !184, !187}
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "sadface_ctx_t", file: !6, line: 57, baseType: !114)
!114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 51, size: 384, elements: !115)
!115 = !{!116, !122, !123, !124, !125}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "faces", scope: !114, file: !6, line: 52, baseType: !117, size: 128)
!117 = !DIDerivedType(tag: DW_TAG_typedef, name: "faces_t", file: !6, line: 49, baseType: !118)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 46, size: 128, elements: !119)
!119 = !{!120, !121}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "open_face", scope: !118, file: !6, line: 47, baseType: !19, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "close_face", scope: !118, file: !6, line: 48, baseType: !19, size: 64, offset: 64)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "content", scope: !114, file: !6, line: 53, baseType: !27, size: 64, offset: 128)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "content_len", scope: !114, file: !6, line: 54, baseType: !81, size: 64, offset: 192)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !114, file: !6, line: 55, baseType: !81, size: 64, offset: 256)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !114, file: !6, line: 56, baseType: !126, size: 64, offset: 320)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict_t", file: !45, line: 33, baseType: !129)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dict", file: !45, line: 29, size: 192, elements: !130)
!130 = !{!131, !132, !133}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !129, file: !45, line: 30, baseType: !27, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !129, file: !45, line: 31, baseType: !48, size: 64, offset: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !129, file: !45, line: 32, baseType: !134, size: 64, offset: 128)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!135 = !DISubprogram(name: "stack_new", scope: !136, file: !136, line: 33, type: !137, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!136 = !DIFile(filename: "./stack.h", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!137 = !DISubroutineType(types: !138)
!138 = !{!139, !7}
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !136, line: 27, size: 128, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !140, file: !136, line: 28, baseType: !7, size: 32)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !140, file: !136, line: 29, baseType: !7, size: 32, offset: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !140, file: !136, line: 30, baseType: !145, size: 64, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "sad_node_t", file: !6, line: 75, baseType: !148)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sad_node", file: !6, line: 66, size: 320, elements: !149)
!149 = !{!150, !152, !154, !155, !156}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !148, file: !6, line: 67, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "sad_node_type_t", file: !6, line: 64, baseType: !105)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !148, file: !6, line: 68, baseType: !153, size: 64, offset: 64)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !148, file: !6, line: 69, baseType: !81, size: 64, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !148, file: !6, line: 70, baseType: !81, size: 64, offset: 192)
!156 = !DIDerivedType(tag: DW_TAG_member, scope: !148, file: !6, line: 71, baseType: !157, size: 64, offset: 256)
!157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !148, file: !6, line: 71, size: 64, elements: !158)
!158 = !{!159, !172}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !157, file: !6, line: 72, baseType: !160, size: 64)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "sad_var_t", file: !6, line: 44, baseType: !162)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 36, size: 128, elements: !163)
!163 = !{!164, !165}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !162, file: !6, line: 37, baseType: !34, size: 32)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !162, file: !6, line: 43, baseType: !166, size: 64, offset: 64)
!166 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !162, file: !6, line: 38, size: 64, elements: !167)
!167 = !{!168, !169, !170, !171}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !166, file: !6, line: 39, baseType: !27, size: 64)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !166, file: !6, line: 40, baseType: !18, size: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !166, file: !6, line: 41, baseType: !41, size: 32)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !166, file: !6, line: 42, baseType: !43, size: 8)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !157, file: !6, line: 73, baseType: !153, size: 64)
!173 = !DISubprogram(name: "stack_push", scope: !136, file: !136, line: 34, type: !174, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!174 = !DISubroutineType(types: !175)
!175 = !{null, !139, !48}
!176 = !DISubprogram(name: "stack_pop", scope: !136, file: !136, line: 35, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!177 = !DISubroutineType(types: !178)
!178 = !{!48, !139}
!179 = !DISubprogram(name: "stack_peek", scope: !136, file: !136, line: 36, type: !177, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!180 = !DISubprogram(name: "dict_find", scope: !45, file: !45, line: 36, type: !181, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!181 = !DISubroutineType(types: !182)
!182 = !{!48, !183, !19}
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!184 = !DISubprogram(name: "stack_destroy", scope: !136, file: !136, line: 37, type: !185, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!185 = !DISubroutineType(types: !186)
!186 = !{null, !139}
!187 = !DISubprogram(name: "sadface_destroy", scope: !6, file: !6, line: 80, type: !188, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!188 = !DISubroutineType(types: !189)
!189 = !{null, !190}
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!191 = distinct !DICompileUnit(language: DW_LANG_C99, file: !192, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !22, retainedTypes: !193, splitDebugInlining: false, nameTableKind: None)
!192 = !DIFile(filename: "stack.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!193 = !{!48, !145, !56}
!194 = distinct !DICompileUnit(language: DW_LANG_C99, file: !195, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !22, retainedTypes: !196, splitDebugInlining: false, nameTableKind: None)
!195 = !DIFile(filename: "dict.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!196 = !{!48, !197, !205}
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict_t", file: !45, line: 33, baseType: !199)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dict", file: !45, line: 29, size: 192, elements: !200)
!200 = !{!201, !202, !203}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !199, file: !45, line: 30, baseType: !27, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !199, file: !45, line: 31, baseType: !48, size: 64, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !199, file: !45, line: 32, baseType: !204, size: 64, offset: 128)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!205 = !DISubprogram(name: "free", scope: !206, file: !206, line: 565, type: !57, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!206 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!207 = distinct !DICompileUnit(language: DW_LANG_C99, file: !208, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !22, retainedTypes: !209, splitDebugInlining: false, nameTableKind: None)
!208 = !DIFile(filename: "readuntil.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!209 = !{!210}
!210 = !DISubprogram(name: "receive", scope: !82, file: !82, line: 52, type: !211, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !22)
!211 = !DISubroutineType(types: !212)
!212 = !{!18, !18, !48, !28, !92}
!213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !214, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !22, retainedTypes: !215, splitDebugInlining: false, nameTableKind: None)
!214 = !DIFile(filename: "strtof.c", directory: "/home/salman/DPP/data/DARPA/KPRCA_00045/src")
!215 = !{!216, !27, !41}
!216 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!217 = !{!"clang version 10.0.0-4ubuntu1 "}
!218 = !{i32 7, !"Dwarf Version", i32 4}
!219 = !{i32 2, !"Debug Info Version", i32 3}
!220 = !{i32 1, !"wchar_size", i32 4}
!221 = distinct !DISubprogram(name: "strstr", scope: !103, file: !103, line: 36, type: !222, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !102, retainedNodes: !224)
!222 = !DISubroutineType(types: !223)
!223 = !{!19, !19, !19}
!224 = !{!225, !226, !227, !231}
!225 = !DILocalVariable(name: "s1", arg: 1, scope: !221, file: !103, line: 36, type: !19)
!226 = !DILocalVariable(name: "s2", arg: 2, scope: !221, file: !103, line: 36, type: !19)
!227 = !DILocalVariable(name: "ss1", scope: !228, file: !103, line: 42, type: !19)
!228 = distinct !DILexicalBlock(scope: !229, file: !103, line: 41, column: 5)
!229 = distinct !DILexicalBlock(scope: !230, file: !103, line: 39, column: 3)
!230 = distinct !DILexicalBlock(scope: !221, file: !103, line: 38, column: 7)
!231 = !DILocalVariable(name: "ss2", scope: !228, file: !103, line: 43, type: !19)
!232 = !DILocation(line: 0, scope: !221)
!233 = !DILocation(line: 38, column: 7, scope: !230)
!234 = !DILocation(line: 38, column: 13, scope: !230)
!235 = !DILocation(line: 38, column: 10, scope: !230)
!236 = !DILocation(line: 40, column: 12, scope: !229)
!237 = !{!238, !238, i64 0}
!238 = !{!"omnipotent char", !239, i64 0}
!239 = !{!"Simple C/C++ TBAA"}
!240 = !DILocation(line: 40, column: 5, scope: !229)
!241 = !DILocation(line: 0, scope: !228)
!242 = !DILocation(line: 44, column: 14, scope: !228)
!243 = !DILocation(line: 44, column: 19, scope: !228)
!244 = !DILocation(line: 44, column: 22, scope: !228)
!245 = !DILocation(line: 44, column: 27, scope: !228)
!246 = !DILocation(line: 44, column: 35, scope: !228)
!247 = !DILocation(line: 44, column: 45, scope: !228)
!248 = !DILocation(line: 44, column: 38, scope: !228)
!249 = !DILocation(line: 44, column: 7, scope: !228)
!250 = distinct !{!250, !249, !251}
!251 = !DILocation(line: 44, column: 49, scope: !228)
!252 = !DILocation(line: 45, column: 12, scope: !253)
!253 = distinct !DILexicalBlock(scope: !228, file: !103, line: 45, column: 11)
!254 = !DILocation(line: 45, column: 11, scope: !228)
!255 = distinct !{!255, !240, !256}
!256 = !DILocation(line: 48, column: 5, scope: !229)
!257 = !DILocation(line: 51, column: 1, scope: !221)
!258 = distinct !DISubprogram(name: "sadface_init", scope: !103, file: !103, line: 53, type: !259, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !102, retainedNodes: !263)
!259 = !DISubroutineType(types: !260)
!260 = !{!18, !261, !262, !27, !126}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!263 = !{!264, !265, !266, !267, !268, !269}
!264 = !DILocalVariable(name: "ctx", arg: 1, scope: !258, file: !103, line: 53, type: !261)
!265 = !DILocalVariable(name: "faces", arg: 2, scope: !258, file: !103, line: 53, type: !262)
!266 = !DILocalVariable(name: "content", arg: 3, scope: !258, file: !103, line: 53, type: !27)
!267 = !DILocalVariable(name: "vars", arg: 4, scope: !258, file: !103, line: 53, type: !126)
!268 = !DILocalVariable(name: "sctx", scope: !258, file: !103, line: 55, type: !112)
!269 = !DILabel(scope: !258, name: "fail", file: !103, line: 91)
!270 = !DILocation(line: 0, scope: !258)
!271 = !DILocation(line: 56, column: 7, scope: !272)
!272 = distinct !DILexicalBlock(scope: !258, file: !103, line: 56, column: 7)
!273 = !DILocation(line: 56, column: 7, scope: !258)
!274 = !DILocation(line: 58, column: 30, scope: !275)
!275 = distinct !DILexicalBlock(scope: !272, file: !103, line: 57, column: 3)
!276 = !DILocation(line: 58, column: 12, scope: !275)
!277 = !DILocation(line: 59, column: 9, scope: !278)
!278 = distinct !DILexicalBlock(scope: !275, file: !103, line: 59, column: 9)
!279 = !DILocation(line: 59, column: 9, scope: !275)
!280 = !DILocation(line: 61, column: 17, scope: !281)
!281 = distinct !DILexicalBlock(scope: !282, file: !103, line: 61, column: 11)
!282 = distinct !DILexicalBlock(scope: !278, file: !103, line: 60, column: 5)
!283 = !DILocation(line: 61, column: 11, scope: !282)
!284 = !DILocation(line: 63, column: 21, scope: !285)
!285 = distinct !DILexicalBlock(scope: !281, file: !103, line: 62, column: 7)
!286 = !DILocation(line: 63, column: 31, scope: !285)
!287 = !{!288, !290, i64 0}
!288 = !{!"", !289, i64 0, !290, i64 16, !291, i64 24, !291, i64 32, !290, i64 40}
!289 = !{!"", !290, i64 0, !290, i64 8}
!290 = !{!"any pointer", !238, i64 0}
!291 = !{!"long", !238, i64 0}
!292 = !DILocation(line: 64, column: 21, scope: !285)
!293 = !DILocation(line: 64, column: 32, scope: !285)
!294 = !{!288, !290, i64 8}
!295 = !DILocation(line: 65, column: 7, scope: !285)
!296 = !DILocation(line: 68, column: 20, scope: !297)
!297 = distinct !DILexicalBlock(scope: !298, file: !103, line: 68, column: 13)
!298 = distinct !DILexicalBlock(scope: !281, file: !103, line: 67, column: 7)
!299 = !{!289, !290, i64 0}
!300 = !DILocation(line: 68, column: 30, scope: !297)
!301 = !DILocation(line: 0, scope: !297)
!302 = !DILocation(line: 72, column: 20, scope: !303)
!303 = distinct !DILexicalBlock(scope: !298, file: !103, line: 72, column: 13)
!304 = !{!289, !290, i64 8}
!305 = !DILocation(line: 72, column: 31, scope: !303)
!306 = !DILocation(line: 0, scope: !303)
!307 = !DILocation(line: 72, column: 13, scope: !298)
!308 = !DILocation(line: 73, column: 34, scope: !303)
!309 = !DILocation(line: 73, column: 11, scope: !303)
!310 = !DILocation(line: 75, column: 34, scope: !303)
!311 = !DILocation(line: 78, column: 23, scope: !282)
!312 = !DILocation(line: 78, column: 13, scope: !282)
!313 = !DILocation(line: 78, column: 21, scope: !282)
!314 = !{!288, !290, i64 16}
!315 = !DILocation(line: 79, column: 25, scope: !316)
!316 = distinct !DILexicalBlock(scope: !282, file: !103, line: 79, column: 11)
!317 = !DILocation(line: 79, column: 11, scope: !282)
!318 = !DILocation(line: 81, column: 27, scope: !282)
!319 = !DILocation(line: 81, column: 13, scope: !282)
!320 = !DILocation(line: 81, column: 25, scope: !282)
!321 = !{!288, !291, i64 24}
!322 = !DILocation(line: 83, column: 13, scope: !282)
!323 = !DILocation(line: 83, column: 17, scope: !282)
!324 = !{!288, !291, i64 32}
!325 = !DILocation(line: 84, column: 13, scope: !282)
!326 = !DILocation(line: 84, column: 18, scope: !282)
!327 = !{!288, !290, i64 40}
!328 = !DILocation(line: 86, column: 12, scope: !282)
!329 = !{!290, !290, i64 0}
!330 = !DILocation(line: 87, column: 7, scope: !282)
!331 = !DILocation(line: 91, column: 1, scope: !258)
!332 = !DILocation(line: 92, column: 7, scope: !333)
!333 = distinct !DILexicalBlock(scope: !258, file: !103, line: 92, column: 7)
!334 = !DILocation(line: 92, column: 7, scope: !258)
!335 = !DILocation(line: 94, column: 15, scope: !336)
!336 = distinct !DILexicalBlock(scope: !337, file: !103, line: 94, column: 9)
!337 = distinct !DILexicalBlock(scope: !333, file: !103, line: 93, column: 3)
!338 = !DILocation(line: 94, column: 9, scope: !336)
!339 = !DILocation(line: 94, column: 9, scope: !337)
!340 = !DILocation(line: 95, column: 7, scope: !336)
!341 = !DILocation(line: 96, column: 10, scope: !337)
!342 = !DILocation(line: 96, column: 5, scope: !337)
!343 = !DILocation(line: 97, column: 3, scope: !337)
!344 = !DILocation(line: 99, column: 1, scope: !258)
!345 = distinct !DISubprogram(name: "sadface_var2str", scope: !103, file: !103, line: 101, type: !346, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !102, retainedNodes: !348)
!346 = !DISubroutineType(types: !347)
!347 = !{!27, !160}
!348 = !{!349, !350, !351, !352, !353, !354, !355, !356}
!349 = !DILocalVariable(name: "var", arg: 1, scope: !345, file: !103, line: 101, type: !160)
!350 = !DILocalVariable(name: "n", scope: !345, file: !103, line: 103, type: !81)
!351 = !DILocalVariable(name: "i", scope: !345, file: !103, line: 104, type: !18)
!352 = !DILocalVariable(name: "f1", scope: !345, file: !103, line: 105, type: !18)
!353 = !DILocalVariable(name: "f2", scope: !345, file: !103, line: 105, type: !18)
!354 = !DILocalVariable(name: "fp", scope: !345, file: !103, line: 106, type: !41)
!355 = !DILocalVariable(name: "b", scope: !345, file: !103, line: 107, type: !43)
!356 = !DILocalVariable(name: "ret", scope: !345, file: !103, line: 108, type: !27)
!357 = !DILocation(line: 0, scope: !345)
!358 = !DILocation(line: 108, column: 15, scope: !345)
!359 = !DILocation(line: 109, column: 7, scope: !360)
!360 = distinct !DILexicalBlock(scope: !345, file: !103, line: 109, column: 7)
!361 = !DILocation(line: 109, column: 7, scope: !345)
!362 = !DILocation(line: 111, column: 18, scope: !363)
!363 = distinct !DILexicalBlock(scope: !360, file: !103, line: 110, column: 3)
!364 = !{!365, !238, i64 0}
!365 = !{!"", !238, i64 0, !238, i64 8}
!366 = !DILocation(line: 111, column: 5, scope: !363)
!367 = !DILocation(line: 114, column: 9, scope: !368)
!368 = distinct !DILexicalBlock(scope: !363, file: !103, line: 112, column: 5)
!369 = !DILocation(line: 115, column: 27, scope: !368)
!370 = !DILocation(line: 115, column: 9, scope: !368)
!371 = !DILocation(line: 117, column: 18, scope: !368)
!372 = !DILocation(line: 117, column: 24, scope: !368)
!373 = !DILocation(line: 118, column: 9, scope: !368)
!374 = !DILocation(line: 119, column: 9, scope: !368)
!375 = !DILocation(line: 121, column: 25, scope: !368)
!376 = !DILocation(line: 121, column: 31, scope: !368)
!377 = !DILocation(line: 121, column: 14, scope: !368)
!378 = !DILocation(line: 122, column: 29, scope: !368)
!379 = !DILocation(line: 122, column: 27, scope: !368)
!380 = !DILocation(line: 123, column: 25, scope: !368)
!381 = !DILocation(line: 123, column: 15, scope: !368)
!382 = !DILocation(line: 123, column: 33, scope: !368)
!383 = !DILocation(line: 124, column: 16, scope: !384)
!384 = distinct !DILexicalBlock(scope: !368, file: !103, line: 124, column: 13)
!385 = !DILocation(line: 125, column: 16, scope: !384)
!386 = !DILocation(line: 124, column: 13, scope: !368)
!387 = !DILocation(line: 126, column: 13, scope: !368)
!388 = !DILocation(line: 127, column: 21, scope: !368)
!389 = !DILocation(line: 127, column: 9, scope: !368)
!390 = !DILocation(line: 128, column: 9, scope: !368)
!391 = !DILocation(line: 130, column: 18, scope: !368)
!392 = !DILocation(line: 130, column: 24, scope: !368)
!393 = !DILocation(line: 131, column: 13, scope: !394)
!394 = distinct !DILexicalBlock(scope: !368, file: !103, line: 131, column: 13)
!395 = !DILocation(line: 131, column: 13, scope: !368)
!396 = !DILocation(line: 132, column: 11, scope: !394)
!397 = !DILocation(line: 134, column: 11, scope: !394)
!398 = !DILocation(line: 141, column: 1, scope: !345)
!399 = distinct !DISubprogram(name: "_find_sadface", scope: !103, file: !103, line: 143, type: !400, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !102, retainedNodes: !403)
!400 = !DISubroutineType(types: !401)
!401 = !{!18, !112, !402, !402}
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!403 = !{!404, !405, !406, !407, !408}
!404 = !DILocalVariable(name: "ctx", arg: 1, scope: !399, file: !103, line: 143, type: !112)
!405 = !DILocalVariable(name: "sf_start", arg: 2, scope: !399, file: !103, line: 143, type: !402)
!406 = !DILocalVariable(name: "sf_end", arg: 3, scope: !399, file: !103, line: 143, type: !402)
!407 = !DILocalVariable(name: "start", scope: !399, file: !103, line: 145, type: !19)
!408 = !DILocalVariable(name: "end", scope: !399, file: !103, line: 145, type: !19)
!409 = !DILocation(line: 0, scope: !399)
!410 = !DILocation(line: 147, column: 23, scope: !399)
!411 = !DILocation(line: 147, column: 38, scope: !399)
!412 = !DILocation(line: 147, column: 31, scope: !399)
!413 = !DILocation(line: 147, column: 54, scope: !399)
!414 = !DILocation(line: 147, column: 11, scope: !399)
!415 = !DILocation(line: 148, column: 13, scope: !416)
!416 = distinct !DILexicalBlock(scope: !399, file: !103, line: 148, column: 7)
!417 = !DILocation(line: 148, column: 7, scope: !399)
!418 = !DILocation(line: 150, column: 24, scope: !399)
!419 = !DILocation(line: 150, column: 22, scope: !399)
!420 = !DILocation(line: 150, column: 65, scope: !399)
!421 = !DILocation(line: 150, column: 9, scope: !399)
!422 = !DILocation(line: 151, column: 11, scope: !423)
!423 = distinct !DILexicalBlock(scope: !399, file: !103, line: 151, column: 7)
!424 = !DILocation(line: 151, column: 7, scope: !399)
!425 = !DILocation(line: 154, column: 28, scope: !399)
!426 = !DILocation(line: 154, column: 21, scope: !399)
!427 = !DILocation(line: 154, column: 13, scope: !399)
!428 = !{!291, !291, i64 0}
!429 = !DILocation(line: 155, column: 17, scope: !399)
!430 = !DILocation(line: 155, column: 34, scope: !399)
!431 = !DILocation(line: 155, column: 32, scope: !399)
!432 = !DILocation(line: 155, column: 11, scope: !399)
!433 = !DILocation(line: 156, column: 3, scope: !399)
!434 = !DILocation(line: 157, column: 1, scope: !399)
!435 = distinct !DISubprogram(name: "parse_sadface", scope: !103, file: !103, line: 159, type: !436, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !102, retainedNodes: !438)
!436 = !DISubroutineType(types: !437)
!437 = !{!146, !112}
!438 = !{!439, !440, !441, !442, !443, !444, !447, !451, !454, !455, !456, !459, !460, !461, !463, !464, !466, !467, !468, !469}
!439 = !DILocalVariable(name: "ctx", arg: 1, scope: !435, file: !103, line: 159, type: !112)
!440 = !DILocalVariable(name: "start", scope: !435, file: !103, line: 161, type: !81)
!441 = !DILocalVariable(name: "end", scope: !435, file: !103, line: 161, type: !81)
!442 = !DILocalVariable(name: "root", scope: !435, file: !103, line: 162, type: !146)
!443 = !DILocalVariable(name: "tmp", scope: !435, file: !103, line: 162, type: !146)
!444 = !DILocalVariable(name: "stack", scope: !435, file: !103, line: 163, type: !445)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "stack_t", file: !136, line: 31, baseType: !140)
!447 = !DILocalVariable(name: "node", scope: !448, file: !103, line: 177, type: !146)
!448 = distinct !DILexicalBlock(scope: !449, file: !103, line: 176, column: 5)
!449 = distinct !DILexicalBlock(scope: !450, file: !103, line: 175, column: 9)
!450 = distinct !DILexicalBlock(scope: !435, file: !103, line: 174, column: 3)
!451 = !DILocalVariable(name: "node", scope: !452, file: !103, line: 196, type: !146)
!452 = distinct !DILexicalBlock(scope: !453, file: !103, line: 195, column: 5)
!453 = distinct !DILexicalBlock(scope: !450, file: !103, line: 194, column: 9)
!454 = !DILocalVariable(name: "var_len", scope: !450, file: !103, line: 212, type: !81)
!455 = !DILocalVariable(name: "var_name", scope: !450, file: !103, line: 213, type: !27)
!456 = !DILocalVariable(name: "section", scope: !457, file: !103, line: 220, type: !146)
!457 = distinct !DILexicalBlock(scope: !458, file: !103, line: 219, column: 9)
!458 = distinct !DILexicalBlock(scope: !450, file: !103, line: 216, column: 5)
!459 = !DILocalVariable(name: "tmp", scope: !457, file: !103, line: 220, type: !146)
!460 = !DILocalVariable(name: "child", scope: !457, file: !103, line: 220, type: !146)
!461 = !DILocalVariable(name: "section", scope: !462, file: !103, line: 246, type: !146)
!462 = distinct !DILexicalBlock(scope: !458, file: !103, line: 245, column: 9)
!463 = !DILocalVariable(name: "child", scope: !462, file: !103, line: 246, type: !146)
!464 = !DILocalVariable(name: "idx", scope: !465, file: !103, line: 266, type: !81)
!465 = distinct !DILexicalBlock(scope: !458, file: !103, line: 265, column: 9)
!466 = !DILocalVariable(name: "tmp_name", scope: !465, file: !103, line: 267, type: !27)
!467 = !DILocalVariable(name: "variable", scope: !465, file: !103, line: 268, type: !146)
!468 = !DILocalVariable(name: "tmp", scope: !465, file: !103, line: 268, type: !146)
!469 = !DILabel(scope: !435, name: "fail", file: !103, line: 302)
!470 = !DILocation(line: 0, scope: !435)
!471 = !DILocation(line: 161, column: 3, scope: !435)
!472 = !DILocation(line: 161, column: 10, scope: !435)
!473 = !DILocation(line: 161, column: 21, scope: !435)
!474 = !DILocation(line: 165, column: 11, scope: !435)
!475 = !DILocation(line: 166, column: 25, scope: !435)
!476 = !DILocation(line: 166, column: 10, scope: !435)
!477 = !DILocation(line: 167, column: 13, scope: !478)
!478 = distinct !DILexicalBlock(scope: !435, file: !103, line: 167, column: 7)
!479 = !DILocation(line: 167, column: 29, scope: !478)
!480 = !DILocation(line: 167, column: 21, scope: !478)
!481 = !DILocation(line: 170, column: 14, scope: !435)
!482 = !DILocation(line: 171, column: 3, scope: !435)
!483 = !DILocation(line: 0, scope: !450)
!484 = !DILocation(line: 0, scope: !465)
!485 = !DILocation(line: 173, column: 3, scope: !435)
!486 = !DILocation(line: 173, column: 15, scope: !435)
!487 = !DILocation(line: 173, column: 26, scope: !435)
!488 = !DILocation(line: 173, column: 19, scope: !435)
!489 = !DILocation(line: 175, column: 9, scope: !449)
!490 = !DILocation(line: 175, column: 42, scope: !449)
!491 = !DILocation(line: 175, column: 9, scope: !450)
!492 = !DILocation(line: 177, column: 41, scope: !448)
!493 = !DILocation(line: 0, scope: !448)
!494 = !DILocation(line: 178, column: 16, scope: !495)
!495 = distinct !DILexicalBlock(scope: !448, file: !103, line: 178, column: 11)
!496 = !DILocation(line: 178, column: 11, scope: !448)
!497 = !DILocation(line: 180, column: 7, scope: !448)
!498 = !DILocation(line: 181, column: 13, scope: !448)
!499 = !DILocation(line: 181, column: 18, scope: !448)
!500 = !{!501, !238, i64 0}
!501 = !{!"sad_node", !238, i64 0, !290, i64 8, !291, i64 16, !291, i64 24, !238, i64 32}
!502 = !DILocation(line: 182, column: 13, scope: !448)
!503 = !DILocation(line: 182, column: 18, scope: !448)
!504 = !{!501, !290, i64 8}
!505 = !DILocation(line: 183, column: 24, scope: !448)
!506 = !DILocation(line: 183, column: 13, scope: !448)
!507 = !DILocation(line: 183, column: 17, scope: !448)
!508 = !{!501, !291, i64 16}
!509 = !DILocation(line: 184, column: 24, scope: !448)
!510 = !DILocation(line: 184, column: 36, scope: !448)
!511 = !DILocation(line: 184, column: 13, scope: !448)
!512 = !DILocation(line: 184, column: 17, scope: !448)
!513 = !{!501, !291, i64 24}
!514 = !DILocation(line: 186, column: 13, scope: !448)
!515 = !DILocation(line: 187, column: 12, scope: !448)
!516 = !DILocation(line: 187, column: 17, scope: !448)
!517 = !DILocation(line: 188, column: 7, scope: !448)
!518 = !DILocation(line: 190, column: 23, scope: !448)
!519 = !DILocation(line: 190, column: 16, scope: !448)
!520 = !DILocation(line: 191, column: 7, scope: !448)
!521 = !DILocation(line: 194, column: 14, scope: !453)
!522 = !DILocation(line: 194, column: 21, scope: !453)
!523 = !DILocation(line: 194, column: 18, scope: !453)
!524 = !DILocation(line: 194, column: 9, scope: !450)
!525 = !DILocation(line: 196, column: 41, scope: !452)
!526 = !DILocation(line: 0, scope: !452)
!527 = !DILocation(line: 197, column: 16, scope: !528)
!528 = distinct !DILexicalBlock(scope: !452, file: !103, line: 197, column: 11)
!529 = !DILocation(line: 197, column: 11, scope: !452)
!530 = !DILocation(line: 199, column: 7, scope: !452)
!531 = !DILocation(line: 200, column: 13, scope: !452)
!532 = !DILocation(line: 200, column: 18, scope: !452)
!533 = !DILocation(line: 201, column: 13, scope: !452)
!534 = !DILocation(line: 201, column: 18, scope: !452)
!535 = !DILocation(line: 202, column: 13, scope: !452)
!536 = !DILocation(line: 202, column: 17, scope: !452)
!537 = !DILocation(line: 203, column: 25, scope: !452)
!538 = !DILocation(line: 203, column: 13, scope: !452)
!539 = !DILocation(line: 203, column: 17, scope: !452)
!540 = !DILocation(line: 205, column: 13, scope: !452)
!541 = !DILocation(line: 206, column: 12, scope: !452)
!542 = !DILocation(line: 206, column: 17, scope: !452)
!543 = !DILocation(line: 207, column: 7, scope: !452)
!544 = !DILocation(line: 209, column: 16, scope: !452)
!545 = !DILocation(line: 212, column: 23, scope: !450)
!546 = !DILocation(line: 212, column: 27, scope: !450)
!547 = !DILocation(line: 212, column: 56, scope: !450)
!548 = !DILocation(line: 212, column: 38, scope: !450)
!549 = !DILocation(line: 212, column: 36, scope: !450)
!550 = !DILocation(line: 212, column: 87, scope: !450)
!551 = !DILocation(line: 212, column: 69, scope: !450)
!552 = !DILocation(line: 212, column: 67, scope: !450)
!553 = !DILocation(line: 213, column: 28, scope: !450)
!554 = !DILocation(line: 213, column: 42, scope: !450)
!555 = !DILocation(line: 213, column: 23, scope: !450)
!556 = !DILocation(line: 215, column: 13, scope: !450)
!557 = !DILocation(line: 215, column: 5, scope: !450)
!558 = !DILocation(line: 222, column: 34, scope: !457)
!559 = !DILocation(line: 0, scope: !457)
!560 = !DILocation(line: 223, column: 36, scope: !457)
!561 = !DILocation(line: 224, column: 21, scope: !562)
!562 = distinct !DILexicalBlock(scope: !457, file: !103, line: 224, column: 15)
!563 = !DILocation(line: 224, column: 40, scope: !562)
!564 = !DILocation(line: 224, column: 29, scope: !562)
!565 = !DILocation(line: 227, column: 23, scope: !457)
!566 = !DILocation(line: 228, column: 11, scope: !457)
!567 = !DILocation(line: 229, column: 20, scope: !457)
!568 = !DILocation(line: 229, column: 25, scope: !457)
!569 = !DILocation(line: 231, column: 34, scope: !457)
!570 = !DILocation(line: 231, column: 32, scope: !457)
!571 = !DILocation(line: 231, column: 63, scope: !457)
!572 = !DILocation(line: 231, column: 20, scope: !457)
!573 = !DILocation(line: 231, column: 24, scope: !457)
!574 = !DILocation(line: 232, column: 34, scope: !457)
!575 = !DILocation(line: 232, column: 20, scope: !457)
!576 = !DILocation(line: 232, column: 24, scope: !457)
!577 = !DILocation(line: 233, column: 20, scope: !457)
!578 = !DILocation(line: 233, column: 26, scope: !457)
!579 = !DILocation(line: 235, column: 17, scope: !457)
!580 = !DILocation(line: 236, column: 16, scope: !457)
!581 = !DILocation(line: 236, column: 21, scope: !457)
!582 = !DILocation(line: 237, column: 11, scope: !457)
!583 = !DILocation(line: 238, column: 11, scope: !457)
!584 = !DILocation(line: 240, column: 20, scope: !457)
!585 = !DILocation(line: 241, column: 9, scope: !458)
!586 = !DILocation(line: 248, column: 19, scope: !462)
!587 = !DILocation(line: 0, scope: !462)
!588 = !DILocation(line: 249, column: 21, scope: !462)
!589 = !DILocation(line: 251, column: 23, scope: !590)
!590 = distinct !DILexicalBlock(scope: !462, file: !103, line: 251, column: 15)
!591 = !DILocation(line: 251, column: 31, scope: !590)
!592 = !DILocation(line: 251, column: 43, scope: !590)
!593 = !DILocation(line: 251, column: 48, scope: !590)
!594 = !DILocation(line: 251, column: 15, scope: !462)
!595 = !DILocation(line: 253, column: 29, scope: !596)
!596 = distinct !DILexicalBlock(scope: !462, file: !103, line: 253, column: 15)
!597 = !DILocation(line: 253, column: 46, scope: !596)
!598 = !DILocation(line: 253, column: 24, scope: !596)
!599 = !DILocation(line: 253, column: 53, scope: !596)
!600 = !DILocation(line: 253, column: 75, scope: !596)
!601 = !DILocation(line: 253, column: 15, scope: !596)
!602 = !DILocation(line: 253, column: 80, scope: !596)
!603 = !DILocation(line: 253, column: 15, scope: !462)
!604 = !DILocation(line: 256, column: 20, scope: !462)
!605 = !DILocation(line: 257, column: 9, scope: !458)
!606 = !DILocation(line: 261, column: 18, scope: !458)
!607 = !DILocation(line: 262, column: 9, scope: !458)
!608 = !DILocation(line: 270, column: 37, scope: !465)
!609 = !DILocation(line: 270, column: 22, scope: !465)
!610 = !DILocation(line: 271, column: 24, scope: !611)
!611 = distinct !DILexicalBlock(scope: !465, file: !103, line: 271, column: 15)
!612 = !DILocation(line: 271, column: 15, scope: !465)
!613 = !DILocation(line: 273, column: 11, scope: !465)
!614 = !DILocation(line: 274, column: 25, scope: !465)
!615 = !DILocation(line: 274, column: 23, scope: !465)
!616 = !DILocation(line: 275, column: 30, scope: !465)
!617 = !DILocation(line: 275, column: 11, scope: !465)
!618 = !DILocation(line: 277, column: 37, scope: !465)
!619 = !DILocation(line: 278, column: 24, scope: !620)
!620 = distinct !DILexicalBlock(scope: !465, file: !103, line: 278, column: 15)
!621 = !DILocation(line: 278, column: 15, scope: !465)
!622 = !DILocation(line: 280, column: 11, scope: !465)
!623 = !DILocation(line: 281, column: 21, scope: !465)
!624 = !DILocation(line: 281, column: 26, scope: !465)
!625 = !DILocation(line: 283, column: 21, scope: !465)
!626 = !DILocation(line: 283, column: 25, scope: !465)
!627 = !DILocation(line: 284, column: 21, scope: !465)
!628 = !DILocation(line: 284, column: 25, scope: !465)
!629 = !DILocation(line: 285, column: 56, scope: !465)
!630 = !DILocation(line: 285, column: 41, scope: !465)
!631 = !DILocation(line: 285, column: 21, scope: !465)
!632 = !DILocation(line: 285, column: 25, scope: !465)
!633 = !DILocation(line: 286, column: 11, scope: !465)
!634 = !DILocation(line: 288, column: 17, scope: !465)
!635 = !DILocation(line: 289, column: 16, scope: !465)
!636 = !DILocation(line: 289, column: 21, scope: !465)
!637 = !DILocation(line: 290, column: 11, scope: !465)
!638 = !DILocation(line: 292, column: 20, scope: !465)
!639 = !DILocation(line: 293, column: 9, scope: !458)
!640 = !DILocation(line: 297, column: 3, scope: !435)
!641 = distinct !{!641, !485, !640}
!642 = !DILocation(line: 298, column: 3, scope: !435)
!643 = !DILocation(line: 300, column: 3, scope: !435)
!644 = !DILocation(line: 302, column: 1, scope: !435)
!645 = !DILocation(line: 303, column: 7, scope: !435)
!646 = !DILocation(line: 304, column: 5, scope: !647)
!647 = distinct !DILexicalBlock(scope: !435, file: !103, line: 303, column: 7)
!648 = !DILocation(line: 305, column: 3, scope: !435)
!649 = !DILocation(line: 306, column: 3, scope: !435)
!650 = !DILocation(line: 307, column: 1, scope: !435)
!651 = distinct !DISubprogram(name: "sadface_destroy", scope: !103, file: !103, line: 391, type: !652, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !102, retainedNodes: !654)
!652 = !DISubroutineType(types: !653)
!653 = !{null, !112}
!654 = !{!655}
!655 = !DILocalVariable(name: "ctx", arg: 1, scope: !651, file: !103, line: 391, type: !112)
!656 = !DILocation(line: 0, scope: !651)
!657 = !DILocation(line: 393, column: 7, scope: !658)
!658 = distinct !DILexicalBlock(scope: !651, file: !103, line: 393, column: 7)
!659 = !DILocation(line: 393, column: 7, scope: !651)
!660 = !DILocation(line: 395, column: 14, scope: !661)
!661 = distinct !DILexicalBlock(scope: !662, file: !103, line: 395, column: 9)
!662 = distinct !DILexicalBlock(scope: !658, file: !103, line: 394, column: 3)
!663 = !DILocation(line: 395, column: 9, scope: !661)
!664 = !DILocation(line: 395, column: 9, scope: !662)
!665 = !DILocation(line: 396, column: 7, scope: !661)
!666 = !DILocation(line: 397, column: 10, scope: !662)
!667 = !DILocation(line: 397, column: 5, scope: !662)
!668 = !DILocation(line: 398, column: 3, scope: !662)
!669 = !DILocation(line: 399, column: 1, scope: !651)
!670 = distinct !DISubprogram(name: "sadface_render", scope: !103, file: !103, line: 310, type: !671, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !102, retainedNodes: !673)
!671 = !DISubroutineType(types: !672)
!672 = !{!18, !112, !27, !402}
!673 = !{!674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !689, !690, !692, !693}
!674 = !DILocalVariable(name: "ctx", arg: 1, scope: !670, file: !103, line: 310, type: !112)
!675 = !DILocalVariable(name: "out", arg: 2, scope: !670, file: !103, line: 310, type: !27)
!676 = !DILocalVariable(name: "out_len", arg: 3, scope: !670, file: !103, line: 310, type: !402)
!677 = !DILocalVariable(name: "stack", scope: !670, file: !103, line: 312, type: !445)
!678 = !DILocalVariable(name: "root", scope: !670, file: !103, line: 313, type: !146)
!679 = !DILocalVariable(name: "cur", scope: !670, file: !103, line: 313, type: !146)
!680 = !DILocalVariable(name: "total_len", scope: !670, file: !103, line: 314, type: !81)
!681 = !DILocalVariable(name: "sadness", scope: !670, file: !103, line: 314, type: !81)
!682 = !DILocalVariable(name: "start", scope: !670, file: !103, line: 315, type: !81)
!683 = !DILocalVariable(name: "end", scope: !670, file: !103, line: 315, type: !81)
!684 = !DILocalVariable(name: "size", scope: !670, file: !103, line: 315, type: !81)
!685 = !DILocalVariable(name: "var", scope: !686, file: !103, line: 341, type: !160)
!686 = distinct !DILexicalBlock(scope: !687, file: !103, line: 340, column: 9)
!687 = distinct !DILexicalBlock(scope: !688, file: !103, line: 328, column: 5)
!688 = distinct !DILexicalBlock(scope: !670, file: !103, line: 326, column: 3)
!689 = !DILocalVariable(name: "var_s", scope: !686, file: !103, line: 344, type: !27)
!690 = !DILocalVariable(name: "tmp_name", scope: !691, file: !103, line: 360, type: !27)
!691 = distinct !DILexicalBlock(scope: !687, file: !103, line: 359, column: 9)
!692 = !DILocalVariable(name: "var", scope: !691, file: !103, line: 361, type: !160)
!693 = !DILabel(scope: !670, name: "fail", file: !103, line: 385)
!694 = !DILocation(line: 0, scope: !670)
!695 = !DILocation(line: 317, column: 10, scope: !670)
!696 = !DILocation(line: 318, column: 12, scope: !697)
!697 = distinct !DILexicalBlock(scope: !670, file: !103, line: 318, column: 7)
!698 = !DILocation(line: 318, column: 7, scope: !670)
!699 = !DILocation(line: 321, column: 11, scope: !670)
!700 = !DILocation(line: 322, column: 13, scope: !701)
!701 = distinct !DILexicalBlock(scope: !670, file: !103, line: 322, column: 7)
!702 = !DILocation(line: 322, column: 7, scope: !670)
!703 = !DILocation(line: 0, scope: !687)
!704 = !DILocation(line: 0, scope: !691)
!705 = !DILocation(line: 0, scope: !706)
!706 = distinct !DILexicalBlock(scope: !688, file: !103, line: 378, column: 9)
!707 = !DILocation(line: 325, column: 3, scope: !670)
!708 = !DILocation(line: 327, column: 18, scope: !688)
!709 = !DILocation(line: 327, column: 5, scope: !688)
!710 = !DILocation(line: 336, column: 17, scope: !687)
!711 = !DILocation(line: 336, column: 39, scope: !687)
!712 = !DILocation(line: 336, column: 52, scope: !687)
!713 = !DILocation(line: 336, column: 34, scope: !687)
!714 = !DILocation(line: 336, column: 63, scope: !687)
!715 = !DILocation(line: 336, column: 9, scope: !687)
!716 = !DILocation(line: 337, column: 27, scope: !687)
!717 = !DILocation(line: 337, column: 19, scope: !687)
!718 = !DILocation(line: 338, column: 9, scope: !687)
!719 = !DILocation(line: 341, column: 33, scope: !686)
!720 = !DILocation(line: 0, scope: !686)
!721 = !DILocation(line: 342, column: 19, scope: !722)
!722 = distinct !DILexicalBlock(scope: !686, file: !103, line: 342, column: 15)
!723 = !DILocation(line: 342, column: 15, scope: !686)
!724 = !DILocation(line: 344, column: 25, scope: !686)
!725 = !DILocation(line: 345, column: 15, scope: !726)
!726 = distinct !DILexicalBlock(scope: !686, file: !103, line: 345, column: 15)
!727 = !DILocation(line: 345, column: 15, scope: !686)
!728 = !DILocation(line: 351, column: 21, scope: !729)
!729 = distinct !DILexicalBlock(scope: !726, file: !103, line: 346, column: 11)
!730 = !DILocation(line: 351, column: 44, scope: !729)
!731 = !DILocation(line: 351, column: 13, scope: !729)
!732 = !DILocation(line: 352, column: 26, scope: !729)
!733 = !DILocation(line: 352, column: 23, scope: !729)
!734 = !DILocation(line: 353, column: 22, scope: !735)
!735 = distinct !DILexicalBlock(scope: !729, file: !103, line: 353, column: 17)
!736 = !DILocation(line: 353, column: 27, scope: !735)
!737 = !DILocation(line: 353, column: 17, scope: !729)
!738 = !DILocation(line: 354, column: 15, scope: !735)
!739 = !DILocation(line: 363, column: 34, scope: !691)
!740 = !DILocation(line: 363, column: 38, scope: !691)
!741 = !DILocation(line: 363, column: 22, scope: !691)
!742 = !DILocation(line: 364, column: 24, scope: !743)
!743 = distinct !DILexicalBlock(scope: !691, file: !103, line: 364, column: 15)
!744 = !DILocation(line: 364, column: 15, scope: !691)
!745 = !DILocation(line: 366, column: 36, scope: !691)
!746 = !DILocation(line: 366, column: 40, scope: !691)
!747 = !DILocation(line: 366, column: 11, scope: !691)
!748 = !DILocation(line: 367, column: 35, scope: !691)
!749 = !DILocation(line: 367, column: 48, scope: !691)
!750 = !DILocation(line: 367, column: 30, scope: !691)
!751 = !DILocation(line: 367, column: 59, scope: !691)
!752 = !DILocation(line: 367, column: 11, scope: !691)
!753 = !DILocation(line: 368, column: 46, scope: !691)
!754 = !DILocation(line: 368, column: 31, scope: !691)
!755 = !DILocation(line: 369, column: 11, scope: !691)
!756 = !DILocation(line: 371, column: 19, scope: !757)
!757 = distinct !DILexicalBlock(scope: !691, file: !103, line: 371, column: 15)
!758 = !DILocation(line: 371, column: 27, scope: !757)
!759 = !DILocation(line: 371, column: 36, scope: !757)
!760 = !DILocation(line: 371, column: 41, scope: !757)
!761 = !DILocation(line: 371, column: 57, scope: !757)
!762 = !DILocation(line: 371, column: 66, scope: !757)
!763 = !DILocation(line: 371, column: 72, scope: !757)
!764 = !DILocation(line: 371, column: 61, scope: !757)
!765 = !DILocation(line: 371, column: 15, scope: !691)
!766 = !DILocation(line: 373, column: 29, scope: !691)
!767 = !DILocation(line: 373, column: 11, scope: !691)
!768 = !DILocation(line: 374, column: 22, scope: !691)
!769 = !DILocation(line: 375, column: 9, scope: !687)
!770 = !DILocation(line: 324, column: 7, scope: !670)
!771 = !DILocation(line: 378, column: 14, scope: !706)
!772 = !DILocation(line: 378, column: 19, scope: !706)
!773 = !DILocation(line: 378, column: 27, scope: !706)
!774 = !DILocation(line: 378, column: 37, scope: !706)
!775 = !{!776, !777, i64 0}
!776 = !{!"", !777, i64 0, !777, i64 4, !290, i64 8}
!777 = !{!"int", !238, i64 0}
!778 = !DILocation(line: 378, column: 44, scope: !706)
!779 = !DILocation(line: 378, column: 9, scope: !688)
!780 = !DILocation(line: 379, column: 13, scope: !706)
!781 = !DILocation(line: 379, column: 7, scope: !706)
!782 = !DILocation(line: 380, column: 16, scope: !688)
!783 = distinct !{!783, !707, !784}
!784 = !DILocation(line: 381, column: 3, scope: !670)
!785 = !DILocation(line: 382, column: 12, scope: !670)
!786 = !DILocation(line: 383, column: 3, scope: !670)
!787 = !DILocation(line: 385, column: 1, scope: !670)
!788 = !DILocation(line: 386, column: 7, scope: !789)
!789 = distinct !DILexicalBlock(scope: !670, file: !103, line: 386, column: 7)
!790 = !DILocation(line: 386, column: 7, scope: !670)
!791 = !DILocation(line: 387, column: 5, scope: !789)
!792 = !DILocation(line: 389, column: 1, scope: !670)
!793 = distinct !DISubprogram(name: "stack_new", scope: !192, file: !192, line: 27, type: !794, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !191, retainedNodes: !803)
!794 = !DISubroutineType(types: !795)
!795 = !{!796, !7}
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "stack_t", file: !136, line: 31, baseType: !798)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !136, line: 27, size: 128, elements: !799)
!799 = !{!800, !801, !802}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !798, file: !136, line: 28, baseType: !7, size: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !798, file: !136, line: 29, baseType: !7, size: 32, offset: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !798, file: !136, line: 30, baseType: !145, size: 64, offset: 64)
!803 = !{!804, !805}
!804 = !DILocalVariable(name: "size", arg: 1, scope: !793, file: !192, line: 27, type: !7)
!805 = !DILocalVariable(name: "stack", scope: !793, file: !192, line: 29, type: !796)
!806 = !DILocation(line: 0, scope: !793)
!807 = !DILocation(line: 29, column: 20, scope: !793)
!808 = !DILocation(line: 30, column: 13, scope: !809)
!809 = distinct !DILexicalBlock(scope: !793, file: !192, line: 30, column: 7)
!810 = !DILocation(line: 30, column: 7, scope: !793)
!811 = !DILocation(line: 32, column: 10, scope: !793)
!812 = !DILocation(line: 32, column: 17, scope: !793)
!813 = !DILocation(line: 33, column: 10, scope: !793)
!814 = !DILocation(line: 33, column: 15, scope: !793)
!815 = !{!776, !777, i64 4}
!816 = !DILocation(line: 34, column: 35, scope: !793)
!817 = !DILocation(line: 34, column: 40, scope: !793)
!818 = !DILocation(line: 34, column: 28, scope: !793)
!819 = !DILocation(line: 34, column: 10, scope: !793)
!820 = !DILocation(line: 34, column: 16, scope: !793)
!821 = !{!776, !290, i64 8}
!822 = !DILocation(line: 35, column: 3, scope: !793)
!823 = !DILocation(line: 36, column: 1, scope: !793)
!824 = distinct !DISubprogram(name: "_stack_resize", scope: !192, file: !192, line: 38, type: !825, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !191, retainedNodes: !827)
!825 = !DISubroutineType(types: !826)
!826 = !{null, !796, !7}
!827 = !{!828, !829, !830}
!828 = !DILocalVariable(name: "stack", arg: 1, scope: !824, file: !192, line: 38, type: !796)
!829 = !DILocalVariable(name: "size", arg: 2, scope: !824, file: !192, line: 38, type: !7)
!830 = !DILocalVariable(name: "new", scope: !824, file: !192, line: 40, type: !48)
!831 = !DILocation(line: 0, scope: !824)
!832 = !DILocation(line: 40, column: 30, scope: !824)
!833 = !DILocation(line: 40, column: 37, scope: !824)
!834 = !DILocation(line: 40, column: 42, scope: !824)
!835 = !DILocation(line: 40, column: 15, scope: !824)
!836 = !DILocation(line: 41, column: 7, scope: !837)
!837 = distinct !DILexicalBlock(scope: !824, file: !192, line: 41, column: 7)
!838 = !DILocation(line: 41, column: 7, scope: !824)
!839 = !DILocation(line: 43, column: 18, scope: !840)
!840 = distinct !DILexicalBlock(scope: !837, file: !192, line: 42, column: 3)
!841 = !DILocation(line: 44, column: 12, scope: !840)
!842 = !DILocation(line: 44, column: 17, scope: !840)
!843 = !DILocation(line: 45, column: 3, scope: !840)
!844 = !DILocation(line: 46, column: 1, scope: !824)
!845 = distinct !DISubprogram(name: "stack_push", scope: !192, file: !192, line: 48, type: !846, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !191, retainedNodes: !848)
!846 = !DISubroutineType(types: !847)
!847 = !{null, !796, !48}
!848 = !{!849, !850}
!849 = !DILocalVariable(name: "stack", arg: 1, scope: !845, file: !192, line: 48, type: !796)
!850 = !DILocalVariable(name: "elem", arg: 2, scope: !845, file: !192, line: 48, type: !48)
!851 = !DILocation(line: 0, scope: !845)
!852 = !DILocation(line: 50, column: 14, scope: !853)
!853 = distinct !DILexicalBlock(scope: !845, file: !192, line: 50, column: 7)
!854 = !DILocation(line: 50, column: 31, scope: !853)
!855 = !DILocation(line: 50, column: 21, scope: !853)
!856 = !DILocation(line: 50, column: 7, scope: !845)
!857 = !DILocation(line: 51, column: 38, scope: !853)
!858 = !DILocation(line: 51, column: 5, scope: !853)
!859 = !DILocation(line: 52, column: 10, scope: !845)
!860 = !DILocation(line: 52, column: 23, scope: !845)
!861 = !DILocation(line: 52, column: 3, scope: !845)
!862 = !DILocation(line: 52, column: 31, scope: !845)
!863 = !DILocation(line: 53, column: 16, scope: !845)
!864 = !DILocation(line: 54, column: 1, scope: !845)
!865 = distinct !DISubprogram(name: "stack_pop", scope: !192, file: !192, line: 56, type: !866, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !191, retainedNodes: !868)
!866 = !DISubroutineType(types: !867)
!867 = !{!48, !796}
!868 = !{!869}
!869 = !DILocalVariable(name: "stack", arg: 1, scope: !865, file: !192, line: 56, type: !796)
!870 = !DILocation(line: 0, scope: !865)
!871 = !DILocation(line: 58, column: 14, scope: !872)
!872 = distinct !DILexicalBlock(scope: !865, file: !192, line: 58, column: 7)
!873 = !DILocation(line: 58, column: 21, scope: !872)
!874 = !DILocation(line: 58, column: 7, scope: !865)
!875 = !DILocation(line: 60, column: 33, scope: !876)
!876 = distinct !DILexicalBlock(scope: !877, file: !192, line: 60, column: 9)
!877 = distinct !DILexicalBlock(scope: !872, file: !192, line: 59, column: 3)
!878 = !DILocation(line: 60, column: 38, scope: !876)
!879 = !DILocation(line: 60, column: 23, scope: !876)
!880 = !DILocation(line: 60, column: 9, scope: !877)
!881 = !DILocation(line: 61, column: 7, scope: !876)
!882 = !DILocation(line: 62, column: 18, scope: !877)
!883 = !DILocation(line: 63, column: 19, scope: !877)
!884 = !DILocation(line: 63, column: 12, scope: !877)
!885 = !DILocation(line: 63, column: 5, scope: !877)
!886 = !DILocation(line: 66, column: 1, scope: !865)
!887 = distinct !DISubprogram(name: "stack_peek", scope: !192, file: !192, line: 68, type: !866, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !191, retainedNodes: !888)
!888 = !{!889}
!889 = !DILocalVariable(name: "stack", arg: 1, scope: !887, file: !192, line: 68, type: !796)
!890 = !DILocation(line: 0, scope: !887)
!891 = !DILocation(line: 70, column: 14, scope: !892)
!892 = distinct !DILexicalBlock(scope: !887, file: !192, line: 70, column: 7)
!893 = !DILocation(line: 70, column: 21, scope: !892)
!894 = !DILocation(line: 70, column: 7, scope: !887)
!895 = !DILocation(line: 71, column: 19, scope: !892)
!896 = !DILocation(line: 71, column: 39, scope: !892)
!897 = !DILocation(line: 71, column: 12, scope: !892)
!898 = !DILocation(line: 71, column: 5, scope: !892)
!899 = !DILocation(line: 73, column: 1, scope: !887)
!900 = distinct !DISubprogram(name: "stack_destroy", scope: !192, file: !192, line: 75, type: !901, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !191, retainedNodes: !903)
!901 = !DISubroutineType(types: !902)
!902 = !{null, !796}
!903 = !{!904}
!904 = !DILocalVariable(name: "stack", arg: 1, scope: !900, file: !192, line: 75, type: !796)
!905 = !DILocation(line: 0, scope: !900)
!906 = !DILocation(line: 77, column: 7, scope: !907)
!907 = distinct !DILexicalBlock(scope: !900, file: !192, line: 77, column: 7)
!908 = !DILocation(line: 77, column: 7, scope: !900)
!909 = !DILocation(line: 79, column: 16, scope: !910)
!910 = distinct !DILexicalBlock(scope: !911, file: !192, line: 79, column: 9)
!911 = distinct !DILexicalBlock(scope: !907, file: !192, line: 78, column: 3)
!912 = !DILocation(line: 79, column: 9, scope: !910)
!913 = !DILocation(line: 79, column: 9, scope: !911)
!914 = !DILocation(line: 80, column: 12, scope: !910)
!915 = !DILocation(line: 80, column: 7, scope: !910)
!916 = !DILocation(line: 84, column: 3, scope: !911)
!917 = !DILocation(line: 82, column: 17, scope: !911)
!918 = !DILocation(line: 85, column: 1, scope: !900)
!919 = distinct !DISubprogram(name: "dict_new", scope: !195, file: !195, line: 28, type: !920, scopeLine: 29, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !194, retainedNodes: !22)
!920 = !DISubroutineType(types: !921)
!921 = !{!922}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!923 = !DILocation(line: 30, column: 10, scope: !919)
!924 = !DILocation(line: 30, column: 3, scope: !919)
!925 = distinct !DISubprogram(name: "_hash", scope: !195, file: !195, line: 33, type: !926, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !194, retainedNodes: !928)
!926 = !DISubroutineType(types: !927)
!927 = !{!7, !19}
!928 = !{!929, !930}
!929 = !DILocalVariable(name: "str", arg: 1, scope: !925, file: !195, line: 33, type: !19)
!930 = !DILocalVariable(name: "ret", scope: !925, file: !195, line: 35, type: !7)
!931 = !DILocation(line: 0, scope: !925)
!932 = !DILocation(line: 36, column: 7, scope: !933)
!933 = distinct !DILexicalBlock(scope: !925, file: !195, line: 36, column: 7)
!934 = !DILocation(line: 36, column: 7, scope: !925)
!935 = !DILocation(line: 38, column: 12, scope: !936)
!936 = distinct !DILexicalBlock(scope: !933, file: !195, line: 37, column: 3)
!937 = !DILocation(line: 38, column: 5, scope: !936)
!938 = !DILocation(line: 39, column: 38, scope: !936)
!939 = !DILocation(line: 39, column: 51, scope: !936)
!940 = !DILocation(line: 39, column: 47, scope: !936)
!941 = !DILocation(line: 39, column: 45, scope: !936)
!942 = distinct !{!942, !937, !939}
!943 = !DILocation(line: 41, column: 14, scope: !925)
!944 = !DILocation(line: 41, column: 3, scope: !925)
!945 = distinct !DISubprogram(name: "dict_find", scope: !195, file: !195, line: 44, type: !946, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !194, retainedNodes: !948)
!946 = !DISubroutineType(types: !947)
!947 = !{!48, !922, !19}
!948 = !{!949, !950, !951}
!949 = !DILocalVariable(name: "dict", arg: 1, scope: !945, file: !195, line: 44, type: !922)
!950 = !DILocalVariable(name: "name", arg: 2, scope: !945, file: !195, line: 44, type: !19)
!951 = !DILocalVariable(name: "cur", scope: !945, file: !195, line: 46, type: !197)
!952 = !DILocation(line: 0, scope: !945)
!953 = !DILocation(line: 46, column: 22, scope: !945)
!954 = !DILocation(line: 46, column: 17, scope: !945)
!955 = !DILocation(line: 47, column: 3, scope: !945)
!956 = !DILocation(line: 49, column: 21, scope: !957)
!957 = distinct !DILexicalBlock(scope: !958, file: !195, line: 49, column: 9)
!958 = distinct !DILexicalBlock(scope: !945, file: !195, line: 48, column: 3)
!959 = !{!960, !290, i64 0}
!960 = !{!"dict", !290, i64 0, !290, i64 8, !290, i64 16}
!961 = !DILocation(line: 49, column: 9, scope: !957)
!962 = !DILocation(line: 49, column: 33, scope: !957)
!963 = !DILocation(line: 49, column: 9, scope: !958)
!964 = !DILocation(line: 50, column: 19, scope: !957)
!965 = !{!960, !290, i64 8}
!966 = !DILocation(line: 50, column: 7, scope: !957)
!967 = !DILocation(line: 51, column: 16, scope: !958)
!968 = distinct !{!968, !955, !969}
!969 = !DILocation(line: 52, column: 3, scope: !945)
!970 = !DILocation(line: 54, column: 1, scope: !945)
!971 = distinct !DISubprogram(name: "dict_insert", scope: !195, file: !195, line: 56, type: !972, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !194, retainedNodes: !974)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !922, !19, !48}
!974 = !{!975, !976, !977, !978, !979, !980}
!975 = !DILocalVariable(name: "dict", arg: 1, scope: !971, file: !195, line: 56, type: !922)
!976 = !DILocalVariable(name: "name", arg: 2, scope: !971, file: !195, line: 56, type: !19)
!977 = !DILocalVariable(name: "value", arg: 3, scope: !971, file: !195, line: 56, type: !48)
!978 = !DILocalVariable(name: "hash", scope: !971, file: !195, line: 58, type: !7)
!979 = !DILocalVariable(name: "cur", scope: !971, file: !195, line: 59, type: !197)
!980 = !DILabel(scope: !971, name: "error", file: !195, line: 75)
!981 = !DILocation(line: 0, scope: !971)
!982 = !DILocation(line: 59, column: 17, scope: !971)
!983 = !DILocation(line: 60, column: 11, scope: !984)
!984 = distinct !DILexicalBlock(scope: !971, file: !195, line: 60, column: 7)
!985 = !DILocation(line: 60, column: 7, scope: !971)
!986 = !DILocation(line: 62, column: 22, scope: !987)
!987 = distinct !DILexicalBlock(scope: !984, file: !195, line: 61, column: 3)
!988 = !DILocation(line: 63, column: 9, scope: !987)
!989 = !DILocation(line: 65, column: 17, scope: !987)
!990 = !DILocation(line: 65, column: 10, scope: !987)
!991 = !DILocation(line: 65, column: 15, scope: !987)
!992 = !DILocation(line: 66, column: 19, scope: !993)
!993 = distinct !DILexicalBlock(scope: !987, file: !195, line: 66, column: 9)
!994 = !DILocation(line: 66, column: 9, scope: !987)
!995 = !DILocation(line: 68, column: 10, scope: !987)
!996 = !DILocation(line: 68, column: 16, scope: !987)
!997 = !DILocation(line: 69, column: 12, scope: !987)
!998 = !DILocation(line: 70, column: 17, scope: !987)
!999 = !DILocation(line: 70, column: 10, scope: !987)
!1000 = !DILocation(line: 70, column: 15, scope: !987)
!1001 = !{!960, !290, i64 16}
!1002 = !DILocation(line: 71, column: 16, scope: !987)
!1003 = !DILocation(line: 72, column: 3, scope: !987)
!1004 = !DILocation(line: 75, column: 1, scope: !971)
!1005 = !DILocation(line: 80, column: 5, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !1007, file: !195, line: 77, column: 3)
!1007 = distinct !DILexicalBlock(scope: !971, file: !195, line: 76, column: 7)
!1008 = !DILocation(line: 81, column: 3, scope: !1006)
!1009 = !DILocation(line: 82, column: 1, scope: !971)
!1010 = distinct !DISubprogram(name: "dict_remove", scope: !195, file: !195, line: 84, type: !946, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !194, retainedNodes: !1011)
!1011 = !{!1012, !1013, !1014, !1015, !1016, !1017}
!1012 = !DILocalVariable(name: "dict", arg: 1, scope: !1010, file: !195, line: 84, type: !922)
!1013 = !DILocalVariable(name: "name", arg: 2, scope: !1010, file: !195, line: 84, type: !19)
!1014 = !DILocalVariable(name: "ret", scope: !1010, file: !195, line: 86, type: !48)
!1015 = !DILocalVariable(name: "hash", scope: !1010, file: !195, line: 87, type: !7)
!1016 = !DILocalVariable(name: "cur", scope: !1010, file: !195, line: 88, type: !197)
!1017 = !DILocalVariable(name: "prev", scope: !1010, file: !195, line: 88, type: !197)
!1018 = !DILocation(line: 0, scope: !1010)
!1019 = !DILocation(line: 87, column: 23, scope: !1010)
!1020 = !DILocation(line: 88, column: 17, scope: !1010)
!1021 = !DILocation(line: 89, column: 3, scope: !1010)
!1022 = !DILocation(line: 91, column: 21, scope: !1023)
!1023 = distinct !DILexicalBlock(scope: !1024, file: !195, line: 91, column: 9)
!1024 = distinct !DILexicalBlock(scope: !1010, file: !195, line: 90, column: 3)
!1025 = !DILocation(line: 91, column: 9, scope: !1023)
!1026 = !DILocation(line: 91, column: 33, scope: !1023)
!1027 = !DILocation(line: 91, column: 9, scope: !1024)
!1028 = distinct !{!1028, !1021, !1029}
!1029 = !DILocation(line: 104, column: 3, scope: !1010)
!1030 = !DILocation(line: 93, column: 16, scope: !1031)
!1031 = distinct !DILexicalBlock(scope: !1032, file: !195, line: 93, column: 11)
!1032 = distinct !DILexicalBlock(scope: !1023, file: !195, line: 92, column: 5)
!1033 = !DILocation(line: 0, scope: !1031)
!1034 = !DILocation(line: 93, column: 11, scope: !1032)
!1035 = !DILocation(line: 97, column: 18, scope: !1032)
!1036 = !DILocation(line: 98, column: 17, scope: !1032)
!1037 = !DILocation(line: 98, column: 7, scope: !1032)
!1038 = !DILocation(line: 99, column: 12, scope: !1032)
!1039 = !DILocation(line: 99, column: 7, scope: !1032)
!1040 = !DILocation(line: 100, column: 7, scope: !1032)
!1041 = !DILocation(line: 103, column: 16, scope: !1024)
!1042 = !DILocation(line: 105, column: 3, scope: !1010)
!1043 = distinct !DISubprogram(name: "read_until", scope: !208, file: !208, line: 25, type: !1044, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !207, retainedNodes: !1046)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!18, !18, !27, !81, !21}
!1046 = !{!1047, !1048, !1049, !1050, !1051, !1052, !1053}
!1047 = !DILocalVariable(name: "fd", arg: 1, scope: !1043, file: !208, line: 25, type: !18)
!1048 = !DILocalVariable(name: "buf", arg: 2, scope: !1043, file: !208, line: 25, type: !27)
!1049 = !DILocalVariable(name: "len", arg: 3, scope: !1043, file: !208, line: 25, type: !81)
!1050 = !DILocalVariable(name: "delim", arg: 4, scope: !1043, file: !208, line: 25, type: !21)
!1051 = !DILocalVariable(name: "i", scope: !1043, file: !208, line: 27, type: !81)
!1052 = !DILocalVariable(name: "c", scope: !1043, file: !208, line: 28, type: !27)
!1053 = !DILocalVariable(name: "rx", scope: !1054, file: !208, line: 31, type: !81)
!1054 = distinct !DILexicalBlock(scope: !1055, file: !208, line: 30, column: 3)
!1055 = distinct !DILexicalBlock(scope: !1056, file: !208, line: 29, column: 3)
!1056 = distinct !DILexicalBlock(scope: !1043, file: !208, line: 29, column: 3)
!1057 = !DILocation(line: 0, scope: !1043)
!1058 = !DILocation(line: 29, column: 17, scope: !1055)
!1059 = !DILocation(line: 29, column: 3, scope: !1056)
!1060 = !DILocation(line: 0, scope: !1054)
!1061 = !DILocation(line: 31, column: 5, scope: !1054)
!1062 = !DILocation(line: 32, column: 9, scope: !1063)
!1063 = distinct !DILexicalBlock(scope: !1054, file: !208, line: 32, column: 9)
!1064 = !DILocation(line: 32, column: 32, scope: !1063)
!1065 = !DILocation(line: 32, column: 40, scope: !1063)
!1066 = !DILocation(line: 32, column: 43, scope: !1063)
!1067 = !DILocation(line: 32, column: 37, scope: !1063)
!1068 = !DILocation(line: 34, column: 12, scope: !1069)
!1069 = distinct !DILexicalBlock(scope: !1054, file: !208, line: 34, column: 9)
!1070 = !DILocation(line: 34, column: 9, scope: !1069)
!1071 = !DILocation(line: 34, column: 16, scope: !1069)
!1072 = !DILocation(line: 0, scope: !1055)
!1073 = !DILocation(line: 36, column: 3, scope: !1055)
!1074 = !DILocation(line: 29, column: 24, scope: !1055)
!1075 = distinct !{!1075, !1059, !1076}
!1076 = !DILocation(line: 36, column: 3, scope: !1056)
!1077 = !DILocation(line: 28, column: 9, scope: !1043)
!1078 = !DILocation(line: 37, column: 6, scope: !1043)
!1079 = !DILocation(line: 37, column: 10, scope: !1043)
!1080 = !DILocation(line: 38, column: 12, scope: !1043)
!1081 = !DILocation(line: 38, column: 10, scope: !1043)
!1082 = !DILocation(line: 38, column: 3, scope: !1043)
!1083 = !DILocation(line: 39, column: 1, scope: !1043)
!1084 = distinct !DISubprogram(name: "read_n", scope: !208, file: !208, line: 41, type: !1085, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !207, retainedNodes: !1087)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!18, !18, !27, !81}
!1087 = !{!1088, !1089, !1090, !1091, !1092, !1093}
!1088 = !DILocalVariable(name: "fd", arg: 1, scope: !1084, file: !208, line: 41, type: !18)
!1089 = !DILocalVariable(name: "buf", arg: 2, scope: !1084, file: !208, line: 41, type: !27)
!1090 = !DILocalVariable(name: "len", arg: 3, scope: !1084, file: !208, line: 41, type: !81)
!1091 = !DILocalVariable(name: "i", scope: !1084, file: !208, line: 43, type: !81)
!1092 = !DILocalVariable(name: "c", scope: !1084, file: !208, line: 44, type: !27)
!1093 = !DILocalVariable(name: "rx", scope: !1094, file: !208, line: 47, type: !81)
!1094 = distinct !DILexicalBlock(scope: !1095, file: !208, line: 46, column: 3)
!1095 = distinct !DILexicalBlock(scope: !1096, file: !208, line: 45, column: 3)
!1096 = distinct !DILexicalBlock(scope: !1084, file: !208, line: 45, column: 3)
!1097 = !DILocation(line: 0, scope: !1084)
!1098 = !DILocation(line: 45, column: 17, scope: !1095)
!1099 = !DILocation(line: 45, column: 3, scope: !1096)
!1100 = !DILocation(line: 0, scope: !1094)
!1101 = !DILocation(line: 47, column: 5, scope: !1094)
!1102 = !DILocation(line: 48, column: 9, scope: !1103)
!1103 = distinct !DILexicalBlock(scope: !1094, file: !208, line: 48, column: 9)
!1104 = !DILocation(line: 48, column: 32, scope: !1103)
!1105 = !DILocation(line: 48, column: 40, scope: !1103)
!1106 = !DILocation(line: 48, column: 43, scope: !1103)
!1107 = !DILocation(line: 48, column: 37, scope: !1103)
!1108 = !DILocation(line: 51, column: 3, scope: !1095)
!1109 = !DILocation(line: 45, column: 24, scope: !1095)
!1110 = distinct !{!1110, !1099, !1111}
!1111 = !DILocation(line: 51, column: 3, scope: !1096)
!1112 = !DILocation(line: 44, column: 9, scope: !1084)
!1113 = !DILocation(line: 52, column: 12, scope: !1084)
!1114 = !DILocation(line: 52, column: 10, scope: !1084)
!1115 = !DILocation(line: 52, column: 3, scope: !1084)
!1116 = distinct !DISubprogram(name: "strtof", scope: !214, file: !214, line: 28, type: !1117, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !213, retainedNodes: !1120)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!41, !19, !1119}
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!1120 = !{!1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130}
!1121 = !DILocalVariable(name: "str", arg: 1, scope: !1116, file: !214, line: 28, type: !19)
!1122 = !DILocalVariable(name: "endptr", arg: 2, scope: !1116, file: !214, line: 28, type: !1119)
!1123 = !DILocalVariable(name: "orig", scope: !1116, file: !214, line: 30, type: !19)
!1124 = !DILocalVariable(name: "c", scope: !1116, file: !214, line: 31, type: !21)
!1125 = !DILocalVariable(name: "n", scope: !1116, file: !214, line: 32, type: !18)
!1126 = !DILocalVariable(name: "negative", scope: !1116, file: !214, line: 32, type: !18)
!1127 = !DILocalVariable(name: "dot", scope: !1116, file: !214, line: 32, type: !18)
!1128 = !DILocalVariable(name: "ret", scope: !1116, file: !214, line: 33, type: !216)
!1129 = !DILocalVariable(name: "floating", scope: !1116, file: !214, line: 33, type: !216)
!1130 = !DILocalVariable(name: "start", scope: !1116, file: !214, line: 45, type: !19)
!1131 = !DILocation(line: 0, scope: !1116)
!1132 = !DILocation(line: 35, column: 12, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1134, file: !214, line: 35, column: 5)
!1134 = distinct !DILexicalBlock(scope: !1116, file: !214, line: 35, column: 5)
!1135 = !DILocation(line: 35, column: 27, scope: !1133)
!1136 = !DILocation(line: 35, column: 30, scope: !1133)
!1137 = !DILocation(line: 35, column: 5, scope: !1134)
!1138 = !DILocation(line: 35, column: 47, scope: !1133)
!1139 = distinct !{!1139, !1137, !1140}
!1140 = !DILocation(line: 35, column: 53, scope: !1134)
!1141 = !DILocation(line: 37, column: 23, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !1116, file: !214, line: 37, column: 9)
!1143 = !DILocation(line: 39, column: 20, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1145, file: !214, line: 39, column: 13)
!1145 = distinct !DILexicalBlock(scope: !1142, file: !214, line: 38, column: 5)
!1146 = !DILocation(line: 41, column: 12, scope: !1145)
!1147 = !DILocation(line: 42, column: 5, scope: !1145)
!1148 = !DILocation(line: 47, column: 5, scope: !1116)
!1149 = !DILocation(line: 33, column: 12, scope: !1116)
!1150 = !DILocation(line: 33, column: 21, scope: !1116)
!1151 = !DILocation(line: 49, column: 13, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1116, file: !214, line: 48, column: 5)
!1153 = !DILocation(line: 50, column: 13, scope: !1154)
!1154 = distinct !DILexicalBlock(scope: !1152, file: !214, line: 50, column: 13)
!1155 = !DILocation(line: 50, column: 13, scope: !1152)
!1156 = !DILocation(line: 56, column: 27, scope: !1157)
!1157 = distinct !DILexicalBlock(scope: !1158, file: !214, line: 56, column: 18)
!1158 = distinct !DILexicalBlock(scope: !1154, file: !214, line: 52, column: 18)
!1159 = !DILocation(line: 58, column: 19, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1157, file: !214, line: 57, column: 9)
!1161 = !DILocation(line: 59, column: 17, scope: !1162)
!1162 = distinct !DILexicalBlock(scope: !1160, file: !214, line: 59, column: 17)
!1163 = !DILocation(line: 59, column: 17, scope: !1160)
!1164 = !DILocation(line: 61, column: 26, scope: !1165)
!1165 = distinct !DILexicalBlock(scope: !1162, file: !214, line: 60, column: 13)
!1166 = !DILocation(line: 62, column: 41, scope: !1165)
!1167 = !DILocation(line: 62, column: 39, scope: !1165)
!1168 = !DILocation(line: 62, column: 27, scope: !1165)
!1169 = !DILocation(line: 63, column: 13, scope: !1165)
!1170 = !DILocation(line: 65, column: 27, scope: !1162)
!1171 = !DILocation(line: 65, column: 36, scope: !1162)
!1172 = !DILocation(line: 65, column: 34, scope: !1162)
!1173 = !DILocation(line: 69, column: 12, scope: !1152)
!1174 = distinct !{!1174, !1148, !1175}
!1175 = !DILocation(line: 70, column: 5, scope: !1116)
!1176 = !DILocation(line: 72, column: 15, scope: !1177)
!1177 = distinct !DILexicalBlock(scope: !1116, file: !214, line: 72, column: 9)
!1178 = !DILocation(line: 72, column: 9, scope: !1116)
!1179 = !DILocation(line: 74, column: 13, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1177, file: !214, line: 73, column: 5)
!1181 = !DILocation(line: 75, column: 21, scope: !1182)
!1182 = distinct !DILexicalBlock(scope: !1180, file: !214, line: 74, column: 13)
!1183 = !DILocation(line: 75, column: 13, scope: !1182)
!1184 = !DILocation(line: 79, column: 9, scope: !1116)
!1185 = !DILocation(line: 80, column: 17, scope: !1186)
!1186 = distinct !DILexicalBlock(scope: !1116, file: !214, line: 79, column: 9)
!1187 = !DILocation(line: 80, column: 9, scope: !1186)
!1188 = !DILocation(line: 81, column: 44, scope: !1116)
!1189 = !DILocation(line: 81, column: 37, scope: !1116)
!1190 = !DILocation(line: 81, column: 12, scope: !1116)
!1191 = !DILocation(line: 81, column: 5, scope: !1116)
!1192 = !DILocation(line: 82, column: 1, scope: !1116)
!1193 = distinct !DISubprogram(name: "print_menu", scope: !3, file: !3, line: 39, type: !1194, scopeLine: 40, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !22)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{null}
!1196 = !DILocation(line: 41, column: 3, scope: !1193)
!1197 = !DILocation(line: 42, column: 3, scope: !1193)
!1198 = !DILocation(line: 43, column: 3, scope: !1193)
!1199 = !DILocation(line: 44, column: 3, scope: !1193)
!1200 = !DILocation(line: 45, column: 3, scope: !1193)
!1201 = !DILocation(line: 46, column: 3, scope: !1193)
!1202 = !DILocation(line: 47, column: 1, scope: !1193)
!1203 = distinct !DISubprogram(name: "define_vars", scope: !3, file: !3, line: 49, type: !1204, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1206)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{null, !85}
!1206 = !{!1207, !1208, !1209, !1213, !1214, !1218}
!1207 = !DILocalVariable(name: "vars", arg: 1, scope: !1203, file: !3, line: 49, type: !85)
!1208 = !DILocalVariable(name: "var_type", scope: !1203, file: !3, line: 51, type: !34)
!1209 = !DILocalVariable(name: "var_name", scope: !1203, file: !3, line: 52, type: !1210)
!1210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 32768, elements: !1211)
!1211 = !{!1212}
!1212 = !DISubrange(count: 4096, lowerBound: 0)
!1213 = !DILocalVariable(name: "var_value", scope: !1203, file: !3, line: 53, type: !1210)
!1214 = !DILocalVariable(name: "var", scope: !1215, file: !3, line: 85, type: !29)
!1215 = distinct !DILexicalBlock(scope: !1216, file: !3, line: 84, column: 5)
!1216 = distinct !DILexicalBlock(scope: !1217, file: !3, line: 83, column: 9)
!1217 = distinct !DILexicalBlock(scope: !1203, file: !3, line: 57, column: 3)
!1218 = !DILocalVariable(name: "var", scope: !1217, file: !3, line: 95, type: !29)
!1219 = !DILocation(line: 0, scope: !1203)
!1220 = !DILocation(line: 52, column: 3, scope: !1203)
!1221 = !DILocation(line: 52, column: 8, scope: !1203)
!1222 = !DILocation(line: 53, column: 3, scope: !1203)
!1223 = !DILocation(line: 53, column: 8, scope: !1203)
!1224 = !DILocation(line: 54, column: 3, scope: !1203)
!1225 = !DILocation(line: 55, column: 3, scope: !1203)
!1226 = !DILocation(line: 58, column: 5, scope: !1217)
!1227 = !DILocation(line: 59, column: 9, scope: !1228)
!1228 = distinct !DILexicalBlock(scope: !1217, file: !3, line: 59, column: 9)
!1229 = !DILocation(line: 59, column: 61, scope: !1228)
!1230 = !DILocation(line: 61, column: 9, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1217, file: !3, line: 61, column: 9)
!1232 = !DILocation(line: 61, column: 21, scope: !1231)
!1233 = !DILocation(line: 59, column: 9, scope: !1217)
!1234 = !DILocation(line: 64, column: 5, scope: !1217)
!1235 = !DILocation(line: 65, column: 5, scope: !1217)
!1236 = !DILocation(line: 66, column: 5, scope: !1217)
!1237 = !DILocation(line: 67, column: 5, scope: !1217)
!1238 = !DILocation(line: 68, column: 5, scope: !1217)
!1239 = !DILocation(line: 69, column: 5, scope: !1217)
!1240 = !DILocation(line: 70, column: 9, scope: !1241)
!1241 = distinct !DILexicalBlock(scope: !1217, file: !3, line: 70, column: 9)
!1242 = !DILocation(line: 70, column: 63, scope: !1241)
!1243 = !DILocation(line: 70, column: 9, scope: !1217)
!1244 = !DILocation(line: 72, column: 13, scope: !1217)
!1245 = !DILocation(line: 72, column: 5, scope: !1217)
!1246 = !DILocation(line: 80, column: 5, scope: !1217)
!1247 = !DILocation(line: 81, column: 9, scope: !1248)
!1248 = distinct !DILexicalBlock(scope: !1217, file: !3, line: 81, column: 9)
!1249 = !DILocation(line: 81, column: 63, scope: !1248)
!1250 = !DILocation(line: 81, column: 9, scope: !1217)
!1251 = !DILocation(line: 83, column: 9, scope: !1216)
!1252 = !DILocation(line: 83, column: 22, scope: !1216)
!1253 = !DILocation(line: 83, column: 9, scope: !1217)
!1254 = !DILocation(line: 85, column: 38, scope: !1215)
!1255 = !DILocation(line: 0, scope: !1215)
!1256 = !DILocation(line: 86, column: 11, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1215, file: !3, line: 86, column: 11)
!1258 = !DILocation(line: 86, column: 11, scope: !1215)
!1259 = !DILocation(line: 88, column: 18, scope: !1260)
!1260 = distinct !DILexicalBlock(scope: !1261, file: !3, line: 88, column: 13)
!1261 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 87, column: 7)
!1262 = !DILocation(line: 88, column: 23, scope: !1260)
!1263 = !DILocation(line: 88, column: 38, scope: !1260)
!1264 = !DILocation(line: 88, column: 46, scope: !1260)
!1265 = !DILocation(line: 88, column: 52, scope: !1260)
!1266 = !DILocation(line: 88, column: 41, scope: !1260)
!1267 = !DILocation(line: 88, column: 13, scope: !1261)
!1268 = !DILocation(line: 89, column: 11, scope: !1260)
!1269 = !DILocation(line: 90, column: 9, scope: !1261)
!1270 = !DILocation(line: 91, column: 7, scope: !1261)
!1271 = distinct !{!1271, !1272, !1273}
!1272 = !DILocation(line: 56, column: 3, scope: !1203)
!1273 = !DILocation(line: 116, column: 3, scope: !1203)
!1274 = !DILocation(line: 95, column: 36, scope: !1217)
!1275 = !DILocation(line: 0, scope: !1217)
!1276 = !DILocation(line: 96, column: 9, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1217, file: !3, line: 96, column: 9)
!1278 = !DILocation(line: 96, column: 9, scope: !1217)
!1279 = !DILocation(line: 98, column: 12, scope: !1280)
!1280 = distinct !DILexicalBlock(scope: !1277, file: !3, line: 97, column: 5)
!1281 = !DILocation(line: 98, column: 17, scope: !1280)
!1282 = !DILocation(line: 99, column: 7, scope: !1280)
!1283 = !DILocation(line: 102, column: 26, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !1280, file: !3, line: 100, column: 7)
!1285 = !DILocation(line: 102, column: 16, scope: !1284)
!1286 = !DILocation(line: 102, column: 22, scope: !1284)
!1287 = !DILocation(line: 102, column: 24, scope: !1284)
!1288 = !DILocation(line: 103, column: 11, scope: !1284)
!1289 = !DILocation(line: 105, column: 26, scope: !1284)
!1290 = !DILocation(line: 105, column: 16, scope: !1284)
!1291 = !DILocation(line: 105, column: 22, scope: !1284)
!1292 = !DILocation(line: 105, column: 24, scope: !1284)
!1293 = !DILocation(line: 106, column: 11, scope: !1284)
!1294 = !DILocation(line: 108, column: 26, scope: !1284)
!1295 = !DILocation(line: 108, column: 16, scope: !1284)
!1296 = !DILocation(line: 108, column: 22, scope: !1284)
!1297 = !DILocation(line: 108, column: 24, scope: !1284)
!1298 = !DILocation(line: 109, column: 11, scope: !1284)
!1299 = !DILocation(line: 111, column: 26, scope: !1284)
!1300 = !DILocation(line: 111, column: 16, scope: !1284)
!1301 = !DILocation(line: 111, column: 24, scope: !1284)
!1302 = !DILocation(line: 112, column: 11, scope: !1284)
!1303 = !DILocation(line: 114, column: 7, scope: !1280)
!1304 = !DILocation(line: 115, column: 5, scope: !1280)
!1305 = !DILocation(line: 117, column: 1, scope: !1203)
!1306 = distinct !DISubprogram(name: "view_vars", scope: !3, file: !3, line: 119, type: !1204, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1315, !1317}
!1308 = !DILocalVariable(name: "vars", arg: 1, scope: !1306, file: !3, line: 119, type: !85)
!1309 = !DILocalVariable(name: "i", scope: !1306, file: !3, line: 121, type: !18)
!1310 = !DILocalVariable(name: "num_vars", scope: !1306, file: !3, line: 121, type: !18)
!1311 = !DILocalVariable(name: "cur", scope: !1312, file: !3, line: 126, type: !86)
!1312 = distinct !DILexicalBlock(scope: !1313, file: !3, line: 125, column: 3)
!1313 = distinct !DILexicalBlock(scope: !1314, file: !3, line: 124, column: 3)
!1314 = distinct !DILexicalBlock(scope: !1306, file: !3, line: 124, column: 3)
!1315 = !DILocalVariable(name: "var", scope: !1316, file: !3, line: 129, type: !29)
!1316 = distinct !DILexicalBlock(scope: !1312, file: !3, line: 128, column: 5)
!1317 = !DILocalVariable(name: "var_s", scope: !1316, file: !3, line: 130, type: !27)
!1318 = !DILocation(line: 0, scope: !1306)
!1319 = !DILocation(line: 123, column: 3, scope: !1306)
!1320 = !DILocation(line: 124, column: 3, scope: !1314)
!1321 = !DILocation(line: 126, column: 19, scope: !1312)
!1322 = !DILocation(line: 0, scope: !1312)
!1323 = !DILocation(line: 127, column: 5, scope: !1312)
!1324 = !DILocation(line: 129, column: 43, scope: !1316)
!1325 = !DILocation(line: 0, scope: !1316)
!1326 = !DILocation(line: 130, column: 21, scope: !1316)
!1327 = !DILocation(line: 131, column: 11, scope: !1328)
!1328 = distinct !DILexicalBlock(scope: !1316, file: !3, line: 131, column: 11)
!1329 = !DILocation(line: 131, column: 11, scope: !1316)
!1330 = !DILocation(line: 133, column: 9, scope: !1331)
!1331 = distinct !DILexicalBlock(scope: !1328, file: !3, line: 132, column: 7)
!1332 = !DILocation(line: 134, column: 18, scope: !1333)
!1333 = distinct !DILexicalBlock(scope: !1331, file: !3, line: 134, column: 13)
!1334 = !DILocation(line: 134, column: 23, scope: !1333)
!1335 = !DILocation(line: 134, column: 13, scope: !1331)
!1336 = !DILocation(line: 135, column: 11, scope: !1333)
!1337 = !DILocation(line: 136, column: 17, scope: !1331)
!1338 = !DILocation(line: 137, column: 7, scope: !1331)
!1339 = !DILocation(line: 138, column: 18, scope: !1316)
!1340 = distinct !{!1340, !1323, !1341}
!1341 = !DILocation(line: 139, column: 5, scope: !1312)
!1342 = !DILocation(line: 124, column: 31, scope: !1313)
!1343 = !DILocation(line: 124, column: 17, scope: !1313)
!1344 = distinct !{!1344, !1320, !1345}
!1345 = !DILocation(line: 140, column: 3, scope: !1314)
!1346 = !DILocation(line: 141, column: 7, scope: !1347)
!1347 = distinct !DILexicalBlock(scope: !1306, file: !3, line: 141, column: 7)
!1348 = !DILocation(line: 141, column: 7, scope: !1306)
!1349 = !DILocation(line: 142, column: 5, scope: !1347)
!1350 = !DILocation(line: 144, column: 5, scope: !1347)
!1351 = !DILocation(line: 145, column: 1, scope: !1306)
!1352 = distinct !DISubprogram(name: "submit_text", scope: !3, file: !3, line: 147, type: !1353, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1355)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{null, !27, !81}
!1355 = !{!1356, !1357}
!1356 = !DILocalVariable(name: "inbuf", arg: 1, scope: !1352, file: !3, line: 147, type: !27)
!1357 = !DILocalVariable(name: "len", arg: 2, scope: !1352, file: !3, line: 147, type: !81)
!1358 = !DILocation(line: 0, scope: !1352)
!1359 = !DILocation(line: 149, column: 3, scope: !1352)
!1360 = !DILocation(line: 150, column: 3, scope: !1352)
!1361 = !DILocation(line: 151, column: 7, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1352, file: !3, line: 151, column: 7)
!1363 = !DILocation(line: 151, column: 43, scope: !1362)
!1364 = !DILocation(line: 151, column: 7, scope: !1352)
!1365 = !DILocation(line: 152, column: 5, scope: !1362)
!1366 = !DILocation(line: 153, column: 1, scope: !1352)
!1367 = distinct !DISubprogram(name: "render_text", scope: !3, file: !3, line: 155, type: !1368, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1370)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{null, !27, !85}
!1370 = !{!1371, !1372, !1373, !1374, !1375}
!1371 = !DILocalVariable(name: "input", arg: 1, scope: !1367, file: !3, line: 155, type: !27)
!1372 = !DILocalVariable(name: "vars", arg: 2, scope: !1367, file: !3, line: 155, type: !85)
!1373 = !DILocalVariable(name: "output", scope: !1367, file: !3, line: 157, type: !27)
!1374 = !DILocalVariable(name: "output_len", scope: !1367, file: !3, line: 158, type: !81)
!1375 = !DILocalVariable(name: "ctx", scope: !1367, file: !3, line: 159, type: !1376)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "sadface_ctx_t", file: !6, line: 57, baseType: !71)
!1378 = !DILocation(line: 0, scope: !1367)
!1379 = !DILocation(line: 158, column: 3, scope: !1367)
!1380 = !DILocation(line: 159, column: 3, scope: !1367)
!1381 = !DILocation(line: 159, column: 18, scope: !1367)
!1382 = !DILocation(line: 161, column: 7, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1367, file: !3, line: 161, column: 7)
!1384 = !DILocation(line: 161, column: 45, scope: !1383)
!1385 = !DILocation(line: 161, column: 7, scope: !1367)
!1386 = !DILocation(line: 163, column: 5, scope: !1387)
!1387 = distinct !DILexicalBlock(scope: !1383, file: !3, line: 162, column: 3)
!1388 = !DILocation(line: 164, column: 5, scope: !1387)
!1389 = !DILocation(line: 167, column: 14, scope: !1367)
!1390 = !DILocation(line: 168, column: 12, scope: !1367)
!1391 = !DILocation(line: 169, column: 14, scope: !1392)
!1392 = distinct !DILexicalBlock(scope: !1367, file: !3, line: 169, column: 7)
!1393 = !DILocation(line: 169, column: 22, scope: !1392)
!1394 = !DILocation(line: 169, column: 40, scope: !1392)
!1395 = !DILocation(line: 169, column: 25, scope: !1392)
!1396 = !DILocation(line: 169, column: 66, scope: !1392)
!1397 = !DILocation(line: 169, column: 7, scope: !1367)
!1398 = !DILocation(line: 170, column: 5, scope: !1392)
!1399 = !DILocation(line: 173, column: 5, scope: !1400)
!1400 = distinct !DILexicalBlock(scope: !1392, file: !3, line: 172, column: 3)
!1401 = !DILocation(line: 174, column: 5, scope: !1400)
!1402 = !DILocation(line: 175, column: 5, scope: !1400)
!1403 = !DILocation(line: 177, column: 1, scope: !1367)
!1404 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 179, type: !1405, scopeLine: 180, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1407)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{!18}
!1407 = !{!1408, !1409, !1410, !1411, !1412}
!1408 = !DILocalVariable(name: "input_len", scope: !1404, file: !3, line: 181, type: !81)
!1409 = !DILocalVariable(name: "buf", scope: !1404, file: !3, line: 182, type: !1210)
!1410 = !DILocalVariable(name: "input", scope: !1404, file: !3, line: 182, type: !1210)
!1411 = !DILocalVariable(name: "vars", scope: !1404, file: !3, line: 183, type: !85)
!1412 = !DILabel(scope: !1404, name: "fail", file: !3, line: 223)
!1413 = !DILocation(line: 182, column: 3, scope: !1404)
!1414 = !DILocation(line: 182, column: 8, scope: !1404)
!1415 = !DILocation(line: 182, column: 27, scope: !1404)
!1416 = !DILocation(line: 183, column: 19, scope: !1404)
!1417 = !DILocation(line: 0, scope: !1404)
!1418 = !DILocation(line: 186, column: 3, scope: !1404)
!1419 = !DILocation(line: 191, column: 5, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1404, file: !3, line: 189, column: 3)
!1421 = !DILocation(line: 192, column: 5, scope: !1420)
!1422 = !DILocation(line: 195, column: 8, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1420, file: !3, line: 195, column: 8)
!1424 = !DILocation(line: 195, column: 50, scope: !1423)
!1425 = !DILocation(line: 195, column: 8, scope: !1420)
!1426 = !DILocation(line: 197, column: 12, scope: !1420)
!1427 = !DILocation(line: 197, column: 4, scope: !1420)
!1428 = !DILocation(line: 200, column: 8, scope: !1429)
!1429 = distinct !DILexicalBlock(scope: !1420, file: !3, line: 198, column: 4)
!1430 = !DILocation(line: 201, column: 8, scope: !1429)
!1431 = !DILocation(line: 203, column: 8, scope: !1429)
!1432 = !DILocation(line: 204, column: 8, scope: !1429)
!1433 = !DILocation(line: 206, column: 8, scope: !1429)
!1434 = !DILocation(line: 207, column: 8, scope: !1429)
!1435 = !DILocation(line: 209, column: 8, scope: !1429)
!1436 = !DILocation(line: 210, column: 8, scope: !1429)
!1437 = !DILocation(line: 212, column: 8, scope: !1429)
!1438 = !DILocation(line: 213, column: 8, scope: !1429)
!1439 = !DILocation(line: 216, column: 8, scope: !1429)
!1440 = !DILocation(line: 217, column: 8, scope: !1429)
!1441 = !DILocation(line: 219, column: 4, scope: !1420)
!1442 = distinct !{!1442, !1443, !1444}
!1443 = !DILocation(line: 188, column: 3, scope: !1404)
!1444 = !DILocation(line: 220, column: 3, scope: !1404)
!1445 = !DILocation(line: 223, column: 1, scope: !1404)
!1446 = !DILocation(line: 225, column: 1, scope: !1404)
!1447 = !DILocation(line: 224, column: 3, scope: !1404)
!1448 = distinct !DISubprogram(name: "exit", scope: !15, file: !15, line: 24, type: !1449, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1451)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{null, !18}
!1451 = !{!1452}
!1452 = !DILocalVariable(name: "ret", arg: 1, scope: !1448, file: !15, line: 24, type: !18)
!1453 = !DILocation(line: 0, scope: !1448)
!1454 = !DILocation(line: 26, column: 5, scope: !1448)
